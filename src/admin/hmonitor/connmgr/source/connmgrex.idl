//***************************************************************************
//
//	CONNMGREX.IDL
//		Interface definition identical to WBEMCLI.IDL.
//		NOTE: this file was created to define wbem interfaces used in the 
//				connmgr interface methods.
//
//***************************************************************************

[uuid(7ec196fe-7005-11d1-ad90-00c04fd8fdff)]
library WbemClient_v1
{
    importlib("stdole32.tlb");

    interface IWbemClassObject;
    interface IWbemObjectAccess;
    interface IWbemQualifierSet;
    interface IWbemServices;
    interface IWbemLocator;
    interface IWbemObjectSink;
    interface IEnumWbemClassObject;
    interface IWbemCallResult;
    interface IWbemContext;
    interface IUnsecuredApartment;
        
    /////////////////////////////////////////////////////////////////
    //

    typedef [v1_enum] enum tag_WBEM_GENUS_TYPE
    {
        WBEM_GENUS_CLASS = 1,
        WBEM_GENUS_INSTANCE = 2
    } WBEM_GENUS_TYPE;

    typedef [v1_enum] enum tag_WBEM_CHANGE_FLAG_TYPE
    {
        WBEM_FLAG_CREATE_OR_UPDATE = 0,
        WBEM_FLAG_UPDATE_ONLY = 0x1,
        WBEM_FLAG_CREATE_ONLY = 0x2
    } WBEM_CHANGE_FLAG_TYPE;

    typedef [v1_enum] enum tag_WBEM_GENERIC_FLAG_TYPE
    {
        WBEM_FLAG_RETURN_IMMEDIATELY = 0x10,
        WBEM_FLAG_RETURN_WBEM_COMPLETE = 0,
        WBEM_FLAG_BIDIRECTIONAL = 0,
        WBEM_FLAG_FORWARD_ONLY = 0x20,
        WBEM_FLAG_NO_ERROR_OBJECT = 0x40,
        WBEM_FLAG_RETURN_ERROR_OBJECT = 0,
        WBEM_FLAG_SEND_STATUS = 0x80,
        WBEM_FLAG_DONT_SEND_STATUS = 0,
        WBEM_FLAG_ENSURE_LOCATABLE = 0x100,
        WBEM_FLAG_SEND_ONLY_SELECTED = 0,

        // backward-compatibility
        WBEM_RETURN_WHEN_COMPLETE = 0,
        WBEM_RETURN_IMMEDIATELY = 0x10,
    } WBEM_GENERIC_FLAG_TYPE;

    typedef enum tag_WBEM_STATUS_TYPE
    {
        WBEM_STATUS_COMPLETE = 0,
        WBEM_STATUS_REQUIREMENTS = 1,
        WBEM_STATUS_PROGRESS = 2,
    } WBEM_STATUS_TYPE;

    typedef [v1_enum] enum tag_WBEM_TIMEOUT_TYPE
    {
        WBEM_NO_WAIT = 0,
        WBEM_INFINITE = 0xFFFFFFFF,
    } WBEM_TIMEOUT_TYPE;
        
    typedef [v1_enum] enum tag_WBEM_CONDITION_FLAG_TYPE
    {
        WBEM_FLAG_ALWAYS = 0,
        WBEM_FLAG_ONLY_IF_TRUE = 0x1,
        WBEM_FLAG_ONLY_IF_FALSE = 0x2,
        WBEM_FLAG_ONLY_IF_IDENTICAL = 0x3,
        WBEM_MASK_PRIMARY_CONDITION = 0x3,

        WBEM_FLAG_KEYS_ONLY = 0x4,
        WBEM_FLAG_REFS_ONLY = 0x8,

        WBEM_FLAG_LOCAL_ONLY = 0x10,
        WBEM_FLAG_PROPAGATED_ONLY = 0x20,
        WBEM_FLAG_SYSTEM_ONLY = 0x30,
        WBEM_FLAG_NONSYSTEM_ONLY = 0x40,

        WBEM_MASK_CONDITION_ORIGIN = 0x70
    } WBEM_CONDITION_FLAG_TYPE;

    typedef [v1_enum] enum tag_WBEM_FLAVOR_TYPE
    {
        WBEM_FLAVOR_DONT_PROPAGATE = 0,
        WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE = 0x1,
        WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS = 0x2,
        WBEM_FLAVOR_MASK_PROPAGATION = 0x0F,
    
        WBEM_FLAVOR_OVERRIDABLE = 0,
        WBEM_FLAVOR_NOT_OVERRIDABLE = 0x10,
        WBEM_FLAVOR_MASK_PERMISSIONS = 0x10,
    
        WBEM_FLAVOR_ORIGIN_LOCAL = 0,
        WBEM_FLAVOR_ORIGIN_PROPAGATED = 0x20,
        WBEM_FLAVOR_ORIGIN_SYSTEM = 0x40,
        WBEM_FLAVOR_MASK_ORIGIN = 0x60
    } WBEM_FLAVOR_TYPE;

    typedef [v1_enum] enum tag_WBEM_QUERY_FLAG_TYPE
    {
        WBEM_FLAG_DEEP = 0,
        WBEM_FLAG_SHALLOW = 1,
        WBEM_FLAG_PROTOTYPE = 2
    } WBEM_QUERY_FLAG_TYPE;

    typedef [v1_enum] enum tag_WBEM_LIMITATION_FLAG_TYPE
    {
        WBEM_FLAG_EXCLUDE_OBJECT_QUALIFIERS = 0x10,
        WBEM_FLAG_EXCLUDE_PROPERTY_QUALIFIERS = 0x20
    } WBEM_LIMITATION_FLAG_TYPE;

    typedef [v1_enum] enum tag_WBEM_TEXT_FLAG_TYPE
    {
        WBEM_FLAG_NO_FLAVORS = 0x1
    } WBEM_TEXT_FLAG_TYPE;

    typedef [v1_enum] enum tag_WBEM_COMPARISON_FLAG
    {
        WBEM_COMPARISON_INCLUDE_ALL = 0,
        WBEM_FLAG_IGNORE_QUALIFIERS = 0x1,
        WBEM_FLAG_IGNORE_OBJECT_SOURCE = 0x2,
        WBEM_FLAG_IGNORE_DEFAULT_VALUES = 0x4,
        WBEM_FLAG_IGNORE_CLASS = 0x8,
        WBEM_FLAG_IGNORE_CASE = 0x10,
        WBEM_FLAG_IGNORE_FLAVOR = 0x20
    } WBEM_COMPARISON_FLAG;

    typedef [v1_enum] enum tag_WBEM_LOCKING
    {
        WBEM_FLAG_ALLOW_READ = 0x1,
    } WBEM_LOCKING_FLAG_TYPE;

    typedef [v1_enum] enum tag_CIMTYPE_ENUMERATION
    {
        CIM_ILLEGAL = 0xfff,
        CIM_EMPTY = 0,

        CIM_SINT8 = 16,
        CIM_UINT8 = 17,
        CIM_SINT16 = 2,
        CIM_UINT16 = 18,
        CIM_SINT32 = 3,
        CIM_UINT32 = 19,
        CIM_SINT64 = 20,
        CIM_UINT64 = 21,
        CIM_REAL32 = 4,
        CIM_REAL64 = 5,
        CIM_BOOLEAN = 11,
        CIM_STRING = 8,
        CIM_DATETIME = 101,
        CIM_REFERENCE = 102,
        CIM_CHAR16 = 103,
        CIM_OBJECT = 13,

        CIM_FLAG_ARRAY = 0x2000
    } CIMTYPE_ENUMERATION;

    typedef long CIMTYPE;

    /////////////////////////////////////////////////////////////////
    //

    typedef [v1_enum] enum tag_WBEMSTATUS
    {
        WBEM_NO_ERROR = 0,
        WBEM_S_NO_ERROR = 0,
        WBEM_S_SAME = 0,

        // Non-error status codes.
        // =======================

        WBEM_S_FALSE = 1,

        WBEM_S_ALREADY_EXISTS = 0x40001,
        WBEM_S_RESET_TO_DEFAULT,
        WBEM_S_DIFFERENT,
        WBEM_S_TIMEDOUT,
        WBEM_S_NO_MORE_DATA,
        WBEM_S_OPERATION_CANCELLED,
        WBEM_S_PENDING,
        WBEM_S_DUPLICATE_OBJECTS,

        // Errors.
        // =======

        WBEM_E_FAILED = 0x80041001,
        WBEM_E_NOT_FOUND,
        WBEM_E_ACCESS_DENIED,
        WBEM_E_PROVIDER_FAILURE,
        WBEM_E_TYPE_MISMATCH,
        WBEM_E_OUT_OF_MEMORY,
        WBEM_E_INVALID_CONTEXT,
        WBEM_E_INVALID_PARAMETER,
        WBEM_E_NOT_AVAILABLE,
        WBEM_E_CRITICAL_ERROR,
        WBEM_E_INVALID_STREAM,
        WBEM_E_NOT_SUPPORTED,
        WBEM_E_INVALID_SUPERCLASS,
        WBEM_E_INVALID_NAMESPACE,
        WBEM_E_INVALID_OBJECT,
        WBEM_E_INVALID_CLASS,
        WBEM_E_PROVIDER_NOT_FOUND,
        WBEM_E_INVALID_PROVIDER_REGISTRATION,
        WBEM_E_PROVIDER_LOAD_FAILURE,
        WBEM_E_INITIALIZATION_FAILURE,
        WBEM_E_TRANSPORT_FAILURE,
        WBEM_E_INVALID_OPERATION,
        WBEM_E_INVALID_QUERY,
        WBEM_E_INVALID_QUERY_TYPE,
        WBEM_E_ALREADY_EXISTS,
        WBEM_E_OVERRIDE_NOT_ALLOWED,
        WBEM_E_PROPAGATED_QUALIFIER,
        WBEM_E_PROPAGATED_PROPERTY,
        WBEM_E_UNEXPECTED,
        WBEM_E_ILLEGAL_OPERATION,
        WBEM_E_CANNOT_BE_KEY,
        WBEM_E_INCOMPLETE_CLASS,
        WBEM_E_INVALID_SYNTAX,
        WBEM_E_NONDECORATED_OBJECT,
        WBEM_E_READ_ONLY,
        WBEM_E_PROVIDER_NOT_CAPABLE,
        WBEM_E_CLASS_HAS_CHILDREN,
        WBEM_E_CLASS_HAS_INSTANCES,
        WBEM_E_QUERY_NOT_IMPLEMENTED,
        WBEM_E_ILLEGAL_NULL,
        WBEM_E_INVALID_QUALIFIER_TYPE,
        WBEM_E_INVALID_PROPERTY_TYPE,
        WBEM_E_VALUE_OUT_OF_RANGE,
        WBEM_E_CANNOT_BE_SINGLETON,
        WBEM_E_INVALID_CIM_TYPE,
        WBEM_E_INVALID_METHOD,
        WBEM_E_INVALID_METHOD_PARAMETERS,        
        WBEM_E_SYSTEM_PROPERTY,
        WBEM_E_INVALID_PROPERTY,
        WBEM_E_CALL_CANCELLED,
        WBEM_E_SHUTTING_DOWN,
        WBEM_E_PROPAGATED_METHOD,
        WBEM_E_UNSUPPORTED_PARAMETER,
        WBEM_E_MISSING_PARAMETER_ID,
        WBEM_E_INVALID_PARAMETER_ID,
        WBEM_E_NONCONSECUTIVE_PARAMETER_IDS,
        WBEM_E_PARAMETER_ID_ON_RETVAL,
        WBEM_E_INVALID_OBJECT_PATH,
        WBEM_E_OUT_OF_DISK_SPACE,

	    WBEMESS_E_REGISTRATION_TOO_BROAD = 0x80042001,
        WBEMESS_E_REGISTRATION_TOO_PRECISE
        
    }   WBEMSTATUS;

    [restricted, uuid(4590f811-1d3a-11d0-891f-00aa004b2e24)]
    coclass WbemLocator
    {
        interface IWbemLocator;
    };

    [restricted, uuid(674B6698-EE92-11d0-AD71-00C04FD8FDFF)]
    coclass WbemContext
    {
        interface IWbemContext;
    };

    [uuid(49bd2028-1523-11d1-ad79-00c04fd8fdff)]
    coclass UnsecuredApartment
    {
        interface IUnsecuredApartment;
    };
};

#define OPTIONAL in, unique

interface IWbemQualifierSet;

[local, restricted, object, uuid(dc12a681-737f-11cf-884d-00aa004b2e24)]

interface IWbemClassObject : IUnknown
{
    HRESULT GetQualifierSet(
        [out] IWbemQualifierSet** ppQualSet
        );

    HRESULT Get(
        [in] BSTR strName,
        [in] long lFlags, 
        [out, OPTIONAL] VARIANT* pVal,
        [out, OPTIONAL] CIMTYPE* pType,
        [out, OPTIONAL] long* plFlavor
        );

    HRESULT Put(
        [in] BSTR strName,
        [in] long lFlags,
        [in] VARIANT* pVal,
        [in] CIMTYPE Type
        );

    HRESULT Delete(
        [in] BSTR strName
        );

    HRESULT GetNames(
        [in] BSTR strQualifierName,
        [in] long lFlags,
        [in] VARIANT* pQualifierVal,
        [out] SAFEARRAY (BSTR)* pNames
        );

    HRESULT BeginEnumeration([in] long lEnumFlags);

    HRESULT Next(
        [in] long lFlags,
        [out, OPTIONAL] BSTR* pstrName,
        [out, OPTIONAL] VARIANT* pVal,
        [out, OPTIONAL] CIMTYPE* pType,
        [out, OPTIONAL] long* plFlavor
        );

    HRESULT EndEnumeration();

    HRESULT GetPropertyQualifierSet(
        [in] BSTR pstrProperty,
        [out] IWbemQualifierSet** ppQualSet
        );

    HRESULT Clone(
        [out] IWbemClassObject** ppCopy
        );

    HRESULT GetObjectText(
        [in]  long lFlags,
        [out] BSTR* pstrObjectText
        );

    HRESULT SpawnDerivedClass(
        [in] long lFlags,
        [out] IWbemClassObject** ppNewClass
        );

    HRESULT SpawnInstance(
        [in] long lFlags,
        [out] IWbemClassObject** ppNewInstance
        );

    HRESULT CompareTo(
        [in] long lFlags,
        [in] IWbemClassObject* pCompareTo
        );

    HRESULT GetPropertyOrigin(
        [in] BSTR strName,
        [out] BSTR* pstrClassName);

    HRESULT InheritsFrom(
        [in] BSTR strAncestor
        );

    // Method manipulation.
    // ====================
        
    HRESULT GetMethod(
        [in] BSTR strName,
        [in] long lFlags,
        [out] IWbemClassObject** ppInSignature,
        [out] IWbemClassObject** ppOutSignature
        );

    HRESULT PutMethod(
        [in] BSTR strName,
        [in] long lFlags,
        [in] IWbemClassObject* pInSignature,
        [in] IWbemClassObject* pOutSignature
        );

    HRESULT DeleteMethod(
        [in] BSTR strName
        );

    HRESULT BeginMethodEnumeration([in] long lEnumFlags);

    HRESULT NextMethod(
        [in] long lFlags,
        [out, OPTIONAL] BSTR* pstrName,
        [out, OPTIONAL] IWbemClassObject** ppInSignature,
        [out, OPTIONAL] IWbemClassObject** ppOutSignature
        );

    HRESULT EndMethodEnumeration();

    HRESULT GetMethodQualifierSet(
        [in] BSTR strMethod,
        [out] IWbemQualifierSet** ppQualSet
        );

    HRESULT GetMethodOrigin(
        [in] BSTR strMethodName,
        [out] BSTR* pstrClassName
        );
};

[object, restricted, local, uuid(dc12a680-737f-11cf-884d-00aa004b2e24)]

interface IWbemQualifierSet : IUnknown
{
    HRESULT Get(
        [in]  BSTR strName,
        [in]  long lFlags,
        [out, OPTIONAL] VARIANT* pVal,
        [out, OPTIONAL] long* plFlavor
        );

    HRESULT Put(
        [in] BSTR strName,
        [in] VARIANT* pVal,
        [in] long lFlavor
        );

    HRESULT Delete(
        [in] BSTR strName
        );

    HRESULT GetNames(
        [in] long lFlags,
        [out] SAFEARRAY (BSTR)* pNames
        );

    HRESULT BeginEnumeration([in] long lFlags);

    HRESULT Next(
        [in]  long lFlags,
        [out, OPTIONAL] BSTR* pstrName,
        [out, OPTIONAL] VARIANT* pVal,
        [out, OPTIONAL] long* plFlavor
        );

    HRESULT EndEnumeration();
};

interface IWbemServices;

[object, restricted, local, uuid(dc12a687-737f-11cf-884d-00aa004b2e24), 
    pointer_default(unique)]
interface IWbemLocator  : IUnknown
{
    HRESULT ConnectServer(
        [in]    BSTR strNetworkResource,               
        [in]    BSTR strUser,
        [in]    BSTR strPassword,
        [in]    BSTR strLocale,
        [in]    long lSecurityFlags,                 
        [in]    BSTR strAuthority,                  
        [in]    IWbemContext* pCtx,                 
        [out]   IWbemServices** ppNamespace
        );
};
    

/////////////////////////////////////////////////////////////////

[object, restricted, uuid(7c857801-7381-11cf-884d-00aa004b2e24)]

interface IWbemObjectSink : IUnknown
{
    HRESULT Indicate(
        [in] long lObjectCount,
        [in, size_is(lObjectCount)] 
            IWbemClassObject** apObjArray
        );
        
       
    HRESULT SetStatus(
        [in] long lFlags,
        [in] HRESULT hResult,
        [in] BSTR strParam,
        [in] IWbemClassObject* pObjParam
        );        

};

[object, restricted, uuid(027947e1-d731-11ce-a357-000000000001)]

interface IEnumWbemClassObject : IUnknown
{
    HRESULT Reset();

    HRESULT Next(
        [in]  long lTimeout,
        [in]  ULONG uCount,
        [out, size_is(uCount), length_is(*puReturned)] 
            IWbemClassObject** apObjects,
        [out] ULONG* puReturned
        );

    HRESULT NextAsync(
        [in]  ULONG uCount,
        [in]  IWbemObjectSink* pSink
        );

    HRESULT Clone(
        [out] IEnumWbemClassObject** ppEnum
        );

    HRESULT Skip(
        [in]  long lTimeout,
        [in] ULONG nCount
        );
};

/////////////////////////////////////////////////////////////////////////

[object, restricted, local, uuid(44aca674-e8fc-11d0-a07c-00c04fb68820)]

interface IWbemContext : IUnknown
{
    HRESULT Clone([out] IWbemContext** ppNewCopy);

    HRESULT GetNames(
        [in] long lFlags,
        [out] SAFEARRAY (BSTR)* pNames
        );        

    HRESULT BeginEnumeration([in] long lFlags);

    HRESULT Next(
        [in]  long lFlags,
        [out] BSTR* pstrName,
        [out] VARIANT* pValue
        );

    HRESULT EndEnumeration();


    HRESULT SetValue(
        [in] BSTR strName,
        [in] long lFlags,
        [in] VARIANT* pValue    
        );        

    HRESULT GetValue(
        [in] BSTR strName,
        [in] long lFlags,
        [out] VARIANT* pValue    
        );        

    HRESULT DeleteValue(
        [in] BSTR strName,
        [in] long lFlags
        );

    HRESULT DeleteAll();        
};


[object, restricted, uuid(44aca675-e8fc-11d0-a07c-00c04fb68820)]

interface IWbemCallResult : IUnknown
{
    HRESULT GetResultObject(
        [in]  long lTimeout,
        [out] IWbemClassObject** ppResultObject
        );

    HRESULT GetResultString(
        [in]  long lTimeout,
        [out] BSTR* pstrResultString 
        );

    HRESULT GetResultServices(
        [in]  long lTimeout,
        [out] IWbemServices** ppServices
        );

    HRESULT GetCallStatus(
        [in]  long lTimeout,
        [out] long* plStatus        
        );
        
};        


/////////////////////////////////////////////////////////////////////////

[object, restricted, uuid(9556dc99-828c-11cf-a37e-00aa003240c7), 
        pointer_default(unique)]

interface IWbemServices : IUnknown
{
    // Context.
    // ========
    HRESULT OpenNamespace(
        [in]  BSTR strNamespace,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,
        [out, OPTIONAL] IWbemServices** ppWorkingNamespace,
        [out, OPTIONAL] IWbemCallResult** ppResult
        );

    HRESULT CancelAsyncCall(
        [in] IWbemObjectSink* pSink
        );

    HRESULT QueryObjectSink(
        [in] long lFlags,
        [out] IWbemObjectSink** ppResponseHandler
        );

    // Classes and instances.
    // ======================

    HRESULT GetObject(
        [in]  BSTR strObjectPath,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,
        [out, OPTIONAL] IWbemClassObject** ppObject,
        [out, OPTIONAL] IWbemCallResult** ppCallResult
        );
        
    HRESULT GetObjectAsync(
        [in]  BSTR strObjectPath,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,        
        [in]  IWbemObjectSink* pResponseHandler
        );

    // Class manipulation.
    // ===================

    HRESULT PutClass(
        [in] IWbemClassObject* pObject,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out, OPTIONAL] IWbemCallResult** ppCallResult
        );

    HRESULT PutClassAsync(
        [in] IWbemClassObject* pObject,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    HRESULT DeleteClass(
        [in] BSTR strClass,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out, OPTIONAL] IWbemCallResult** ppCallResult
        );

    HRESULT DeleteClassAsync(
        [in] BSTR strClass,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    HRESULT CreateClassEnum(
        [in]  BSTR strSuperclass,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,        
        [out] IEnumWbemClassObject** ppEnum
        );

    HRESULT CreateClassEnumAsync(
        [in]  BSTR strSuperclass,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,        
        [in]  IWbemObjectSink* pResponseHandler
        );

    // Instances.
    // ==========

    HRESULT PutInstance(
        [in] IWbemClassObject* pInst,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out, OPTIONAL] IWbemCallResult** ppCallResult
        );

    HRESULT PutInstanceAsync(
        [in] IWbemClassObject* pInst,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    HRESULT DeleteInstance(
        [in] BSTR strObjectPath,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out, OPTIONAL] IWbemCallResult** ppCallResult        
        );

    HRESULT DeleteInstanceAsync(
        [in] BSTR strObjectPath,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    HRESULT CreateInstanceEnum(
        [in] BSTR strClass,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out] IEnumWbemClassObject** ppEnum
        );

    HRESULT CreateInstanceEnumAsync(
        [in] BSTR strClass,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    // Queries.
    // ========

    HRESULT ExecQuery(
        [in]  BSTR strQueryLanguage,
        [in]  BSTR strQuery,
        [in]  long lFlags,
        [in]  IWbemContext* pCtx,        
        [out] IEnumWbemClassObject** ppEnum
        );

    HRESULT ExecQueryAsync(
        [in] BSTR strQueryLanguage,
        [in] BSTR strQuery,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );


    HRESULT ExecNotificationQuery(
        [in] BSTR strQueryLanguage,
        [in] BSTR strQuery,
        [in] long lFlags,
        [in]  IWbemContext* pCtx,        
        [out] IEnumWbemClassObject** ppEnum
        );

    HRESULT ExecNotificationQueryAsync(
        [in] BSTR strQueryLanguage,
        [in] BSTR strQuery,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemObjectSink* pResponseHandler
        );

    // Methods
    // =======

    HRESULT ExecMethod(
        [in] BSTR strObjectPath,
        [in] BSTR strMethodName,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemClassObject* pInParams,
        [out, OPTIONAL] IWbemClassObject** ppOutParams,
        [out, OPTIONAL] IWbemCallResult** ppCallResult
        );

    HRESULT ExecMethodAsync(
        [in] BSTR strObjectPath,
        [in] BSTR strMethodName,
        [in] long lFlags,
        [in] IWbemContext* pCtx,        
        [in] IWbemClassObject* pInParams,
        [in] IWbemObjectSink* pResponseHandler     
        );
};

[local, restricted, object, uuid(49353c9a-516b-11d1-aea6-00c04fb68820)]
interface IWbemObjectAccess : IWbemClassObject
{
    HRESULT GetPropertyHandle(
        [in] BSTR strPropertyName,
        [out] CIMTYPE* pType,                 
        [out] long* plHandle
        );

    HRESULT WritePropertyValue(
        [in] long lHandle,
        [in] long lNumBytes,
        [in, size_is(lNumBytes)] byte* aData
        );

    HRESULT ReadPropertyValue(
        [in] long lHandle,
        [in] long lBufferSize,
        [out] long* plNumBytes,
        [out, size_is(lBufferSize), length_is(*plNumBytes)] byte* aData
        );

    HRESULT ReadDWORD(
        [in] long lHandle,
        [out] DWORD* pdw
        );

    HRESULT WriteDWORD(
        [in] long lHandle,
        [in] DWORD dw
        );

    HRESULT ReadQWORD(
        [in] long lHandle,
        [out] unsigned __int64* pqw
        );

    HRESULT WriteQWORD(
        [in] long lHandle,
        [in] unsigned __int64 pw
        );

    HRESULT GetPropertyInfoByHandle(
        [in] long lHandle,
        [out] BSTR* pstrName,
        [out] CIMTYPE* pType);

    HRESULT Lock(
        [in] long lFlags
        );

    HRESULT Unlock(
        [in] long lFlags
        );
};



[restricted, uuid(1cfaba8c-1523-11d1-ad79-00c04fd8fdff), object]
interface IUnsecuredApartment : IUnknown
{
    HRESULT CreateObjectStub(
        [in] IUnknown* pObject, 
        [out] IUnknown** ppStub);

};



