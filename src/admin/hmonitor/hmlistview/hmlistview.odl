// HMListView.odl : type library source for ActiveX Control project.

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (HMListView.tlb) that will become a resource in
// HMListView.ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid(5116A803-DAFC-11D2-BDA4-0000F87A3912), version(1.0),
  helpfile("HMListView.hlp"),
  helpstring("HMListView ActiveX Control module"),
  control ]
library HMLISTVIEWLib
{
	importlib(STDOLE_TLB);
	importlib(STDTYPE_TLB);

	//  Primary dispatch interface for CHMListViewCtrl

	[ uuid(5116A804-DAFC-11D2-BDA4-0000F87A3912),
	  helpstring("Dispatch interface for HMListView Control"), hidden ]
	dispinterface _DHMListView
	{
		properties:
			// NOTE - ClassWizard will maintain property information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_PROP(CHMListViewCtrl)
			[id(1)] BSTR Title;
			[id(2)] BSTR Description;
			//}}AFX_ODL_PROP

		methods:
			// NOTE - ClassWizard will maintain method information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_METHOD(CHMListViewCtrl)
			[id(3)] void SetProgressRange(long lLowerBound, long lUpperBound);
			[id(4)] long GetProgressPos();
			[id(5)] void SetProgressPos(long lPos);
			[id(6)] long InsertItem(long lMask, long lItem, BSTR lpszItem, long lState, long lStateMask, long lImage, long lParam);
			[id(7)] long InsertColumn(long lColumn, BSTR lpszColumnHeading, long lFormat, long lWidth, long lSubItem);
			[id(8)] long SetItem(long lItem, long lSubItem, long lMask, BSTR lpszItem, long lImage, long lState, long lStateMask, long lParam);
			[id(9)] long GetStringWidth(BSTR lpsz);
			[id(10)] long GetColumnWidth(long lCol);
			[id(11)] boolean SetColumnWidth(long lCol, long lcx);
			[id(12)] long FindItemByLParam(long lParam);
			[id(13)] long GetImageList(long lImageListType);
			[id(14)] boolean DeleteAllItems();
			[id(15)] boolean DeleteColumn(long lCol);
			[id(16)] long StepProgressBar();
			[id(17)] long SetProgressStep(long lStep);
			[id(18)] long SetImageList(long hImageList, long lImageListType);
			[id(19)] long GetNextItem(long lItem, long lFlags);
			[id(20)] long GetItem(long lItemIndex);
			[id(21)] boolean DeleteItem(long lIndex);
			[id(22)] long GetItemCount();
			[id(23)] boolean ModifyListStyle(long lRemove, long lAdd, long lFlags);
			[id(24)] long GetColumnCount();
			[id(25)] long GetColumnOrderIndex(long lColumn);
			[id(26)] long SetColumnOrderIndex(long lColumn, long lOrder);
			[id(27)] BSTR GetColumnOrder();
			[id(28)] void SetColumnOrder(BSTR lpszOrder);
			[id(29)] void SetColumnFilter(long lColumn, BSTR lpszFilter, long lFilterType);
			[id(30)] void GetColumnFilter(long lColumn, BSTR* lplpszFilter, long* lpFilterType);
			[id(31)] long GetSelectedCount();
			//}}AFX_ODL_METHOD

			[id(DISPID_ABOUTBOX)] void AboutBox();
	};

	//  Event dispatch interface for CHMListViewCtrl

	[ uuid(5116A805-DAFC-11D2-BDA4-0000F87A3912),
	  helpstring("Event interface for HMListView Control") ]
	dispinterface _DHMListViewEvents
	{
		properties:
			//  Event interface has no properties

		methods:
			// NOTE - ClassWizard will maintain event information here.
			//    Use extreme caution when editing this section.
			//{{AFX_ODL_EVENT(CHMListViewCtrl)
			[id(1)] void ListClick(long lParam);
			[id(2)] void ListDblClick(long lParam);
			[id(3)] void ListRClick(long lParam);
			[id(4)] void CompareItem(long lItem1, long lItem2, long lColumn, long* lpResult);
			[id(5)] void ListLabelEdit(BSTR lpszNewName, long lParam, long* plResult);
			[id(6)] void ListKeyDown(long lVKCode, long lFlags, long* plResult);
			[id(7)] void FilterChange(long lItem, BSTR pszFilter, long lFilterType, long* lpResult);
			//}}AFX_ODL_EVENT
	};

	//  Class information for CHMListViewCtrl

	[ uuid(5116A806-DAFC-11D2-BDA4-0000F87A3912), licensed,
	  helpstring("HMListView Control"), control ]
	coclass HMListView
	{
		[default] dispinterface _DHMListView;
		[default, source] dispinterface _DHMListViewEvents;
	};


	//{{AFX_APPEND_ODL}}
	//}}AFX_APPEND_ODL}}
};
