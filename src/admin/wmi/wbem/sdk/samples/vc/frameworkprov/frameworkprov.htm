<!- Copyright (c) 1999-2001 Microsoft Corporation, All Rights Reserved ->
<!doctype html public "-//W3C//DTD HTML 4.0 Draft//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./FrameworkProv_files/filelist.xml">
<title>WMI SDK Sample - FrameworkProv</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Michael Maston</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Michael Maston</o:LastAuthor>
  <o:Revision>24</o:Revision>
  <o:TotalTime>278</o:TotalTime>
  <o:Created>1999-01-25T19:10:00Z</o:Created>
  <o:LastSaved>2001-01-20T21:33:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>642</o:Words>
  <o:Characters>3660</o:Characters>
  <o:Company>Microsoft</o:Company>
  <o:Lines>30</o:Lines>
  <o:Paragraphs>7</o:Paragraphs>
  <o:CharactersWithSpaces>4494</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>103</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"MS Mincho";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:553679495 -2147483648 8 0 66047 0;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 0 0 0 415 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:426930674;
	mso-list-type:hybrid;
	mso-list-template-ids:1414049038 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l1
	{mso-list-id:837699372;
	mso-list-type:hybrid;
	mso-list-template-ids:1177857162 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l2
	{mso-list-id:994183607;
	mso-list-type:hybrid;
	mso-list-template-ids:-208100182 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l2:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Times New Roman";}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<meta name=MS-HAID content=VJsamples>
</head>

<body bgcolor=white lang=EN-US link=blue vlink=blue style='tab-interval:.5in'>

<div class=Section1>

<table border=0 cellpadding=0 width="100%" style='width:100.0%;mso-cellspacing:
 1.5pt;mso-padding-alt:0in 0in 0in 0in'>
 <tr>
  <td width=160 style='width:120.0pt;background:#330099;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span style='font-size:10.0pt;font-family:Verdana;
  color:white'>&nbsp;<nobr><b>Windows Management Instrumentation SDK Sample</b></span>
  <o:p></o:p></p>
  </td>
 </tr>
</table>

<p class=MsoPlainText><br>
<strong><span style='font-size:13.5pt;font-family:Verdana'>FrameworkProv</span></strong><br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]></p>

<p class=MsoPlainText><span style='font-family:Verdana'>The FrameworkProv
sample shows a simple instance provider built on the WMI Provider
Framework.<span style="mso-spacerun: yes">  </span>The sample code supports
enumeration, retrieval, put and delete, queries, and methods.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'>A MOF file is included
to register the class.<o:p></o:p></span></p>

<p class=MsoPlainText><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText style='mso-outline-level:1'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:Verdana'>Building the Provider DLL<o:p></o:p></span></p>

<p class=MsoPlainText><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText><span style='font-family:Verdana'>The DLL can be built
from the command line using NMAKE, or it can be built using Microsoft Visual
C++.<span style="mso-spacerun: yes">  </span><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'>From the command line
in the sample installation directory: <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;mso-outline-level:1'><b><span
style='font-family:Verdana'>NMAKE /f &quot;Makefile&quot;
CFG=&quot;FrameworkProv - Win32 Release&quot;<o:p></o:p></span></b></p>

<p class=MsoPlainText><span style='font-family:Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'>From Microsoft Visual
C++: <o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Verdana'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='font-family:Verdana'>Select File + Open Workspace<o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l1 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Verdana'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='font-family:Verdana'>Select the FrameworkProv.DSP file<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText style='tab-stops:list .5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText style='mso-outline-level:1;tab-stops:list .5in'><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Verdana'>Registering
the DLL and Class<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo4;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Verdana'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='font-family:Verdana'>The DLL must be registered with COM. From the command
line in the sample installation directory, type the following:<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:.5in;mso-outline-level:1;tab-stops:
list .5in'><b><span style='font-family:Verdana'>REGSVR32 FrameworkProv.dll<o:p></o:p></span></b></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo4;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Verdana'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
style='font-family:Verdana'>You must also compile the MOF in order to make the
WMI CIMOM aware of the class.<span style="mso-spacerun: yes">  </span>From the
command line in the sample installation directory, type the following:<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='text-indent:.5in;mso-outline-level:1;tab-stops:
list .5in'><b><span style='font-family:Verdana'>MOFCOMP FrameworkProv.MOF<o:p></o:p></span></b></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana'>At this point, you should be able to exercise the provider using WMI
tools such as WbemDump, CIM Studio or your own WMI application.<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='mso-outline-level:1;tab-stops:list .5in'><strong><span
style='font-family:Verdana;font-weight:normal'>General Notes<o:p></o:p></span></strong></p>

<p class=MsoNormal style='tab-stops:list .5in'><strong><span style='font-family:
Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'>Things
to remember when you're building your own WMI provider:<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>WMI interfaces are defined
in wbemcli.h and wbemprov.h found in the wmi\include directory.<span
style="mso-spacerun: yes">  </span>You may #include both these files by
including just wbemidl.h located in the same directory.<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>WMI interface CLSIDs are
defined in wbemuuid.lib. If you get unresolved externals in interfaces and
CLSIDs, this is what is missing. <o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>You'll need to link with
oleaut32.lib and ole32.lib to get the needed COM support.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>Always make sure you link
to msvcrt.dll (or msvcrtd.dll).<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho";mso-bidi-font-family:"Times New Roman"'>If you are building a debug
version of your provider, you must link to framedy<b>d</b>.lib.<span
style="mso-spacerun: yes">  </span>Retail builds must link to framedy<b>n</b>.lib.<o:p></o:p></span></p>

<p class=MsoPlainText style='tab-stops:list .5in'><span style='font-family:
Verdana;mso-fareast-font-family:"MS Mincho";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho"'>If you're using the makefiles, don't forget to set the Visual C++
environment variables. This is done by running VCVARS32.BAT.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.25in;text-indent:-.25in;mso-list:
l2 level1 lfo6;tab-stops:list .25in .5in'><![if !supportLists]><span
style='font-family:"Times New Roman";mso-fareast-font-family:"MS Mincho"'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho"'>The FrameworkProv sample PutInstance function has been written
such that no reindeer can be created using the default implementation.<span
style="mso-spacerun: yes">  </span>One can only change existing properties of
existing reindeer.<span style="mso-spacerun: yes">  </span>This limitation
exists only for this sample.<span style="mso-spacerun: yes">  </span>In
general, PutInstance can be written to add new instances and/or properties.<o:p></o:p></span></p>

<p class=MsoPlainText><span style='font-family:Verdana;mso-fareast-font-family:
"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='mso-outline-level:1'><strong><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Verdana;
font-weight:normal'>Exception Handling<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'>The framework uses exception handling to report and catch various types
of errors.<span style="mso-spacerun: yes">  </span>This means that provider
writers must be careful to clean up after themselves in case a throw occurs.<span
style="mso-spacerun: yes">  </span>For the sake of clarity, the FrameworkProv
sample doesnt implement exception handling.<span style="mso-spacerun: yes"> 
</span>However, one tip about how to deal with exceptions is worth
discussing.<span style="mso-spacerun: yes">  </span>Consider this piece of
code:</span></strong><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana;font-weight:normal'><o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>// Note that CreateNewInstance may throw, but will
never return NULL.<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>CInstance *pInstance = CreateNewInstance(pMethodContext);<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>pInstance-&gt;SetCHString(pName,
CHString(ohDeers[i].m_name));<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>if (SUCCEEDED(LoadPropertyValues(pInstance, i,
BIT_ALL_PROPERTIES)))<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>{<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>hRes =
pInstance-&gt;Commit();<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>}<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>pInstance-&gt;Release();</span></strong><strong><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Courier;
font-weight:normal'><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-size:
12.0pt;mso-bidi-font-size:10.0pt;font-family:Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'>If SetCHString, LoadPropertyValues, or Commit were to throw, the
instance returned by CreateNewInstance would not be released.<span
style="mso-spacerun: yes">  </span>This could be dealt with in a number of
ways.<span style="mso-spacerun: yes">  </span>Heres one:<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>// Note that CreateNewInstance may throw, but will
never return NULL.<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>CInstance *pInstance = CreateNewInstance(pMethodContext);<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>try<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>{<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">   
</span>pInstance-&gt;SetCHString(pName, CHString(ohDeers[i].m_name));<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>if
(SUCCEEDED(LoadPropertyValues(pInstance, i, BIT_ALL_PROPERTIES)))<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>{<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">        </span>hRes
= pInstance-&gt;Commit();<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>}<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>}<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>catch()<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>{<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">   
</span>pInstance-&gt;Release();<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>throw;<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>}<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><span style='font-family:Courier;
mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>pInstance-&gt;Release();<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'>Alternately, you could do this:<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='text-indent:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>// Declare this at the top of the program.<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>_COM_SMARTPTR_TYPEDEF(CInstance,
__uuidof(CInstance));<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>// Note that CreateNewInstance may throw, but will
never return NULL.<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>CinstancePtr pInstance(CreateNewInstance(pMethodContext),
false);<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>pInstance-&gt;SetCHString(pName,
CHString(ohDeers[i].m_name));<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>if (SUCCEEDED(LoadPropertyValues(pInstance, i,
BIT_ALL_PROPERTIES)))<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>{<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'><span style="mso-spacerun: yes">    </span>hRes =
pInstance-&gt;Commit();<o:p></o:p></span></strong></p>

<p class=MsoPlainText style='margin-left:.5in'><strong><span style='font-family:
Courier;font-weight:normal'>}<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:Verdana'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'>Note that the Release() is no longer necessary.<span
style="mso-spacerun: yes">  </span>When the pInstance smartptr destructs, it
will release the instance.<span style="mso-spacerun: yes">  </span>Now if
LoadPropertyValues were to throw, the instance would automatically be
released.<span style="mso-spacerun: yes">  </span>Read about the smartptr class
under com_ptr_t in MSDN.<o:p></o:p></span></strong></p>

<p class=MsoPlainText><strong><span style='font-family:Verdana;font-weight:
normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></strong></p>

<p class=MsoNormal style='tab-stops:list .5in'><span style='font-family:Arial'><a
href="http://www.microsoft.com/misc/CPYRIGHT.HTM"><span style='mso-field-code:
"HYPERLINK \0022http\:\/\/www\.microsoft\.com\/misc\/CPYRIGHT\.HTM\0022"'><b>©
1998-2001 Microsoft Corporation. All rights reserved.</b></span></a></span></p>

</div>

</body>

</html>
