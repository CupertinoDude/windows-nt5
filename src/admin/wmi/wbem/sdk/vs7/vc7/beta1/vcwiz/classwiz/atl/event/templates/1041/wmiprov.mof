[!if CLASS_SPECIFIED]
#pragma namespace ("\\\\.\\[!output ESCAPED_NAMESPACE]")
[!else]
#pragma namespace ("\\\\.\\root\\default")
[!endif]


instance of __Win32Provider as $[!output SHORT_NAME]
{
    Name    = "[!output SHORT_NAME]" ;	//Name は __Provider オブジェクトのキー プロパティです。
    									//vendor|provider|version は
    									//名前の競合を防ぐための形式ですです。
    
    
	ClsId   = "{[!output CLSID_REGISTRY_FORMAT]}" ;	 //プロバイダ GUID です。
    
	DefaultMachineName = NULL;		 //ローカル マシンには NULL です。
    
	ClientLoadableCLSID = NULL;		 //予約済みです。

    ImpersonationLevel = 0;			 //予約済みです。
	
	InitializationReentrancy = 0;	 //直列化についての情報を提供するフラグの設定です:
									 //0 = このプロバイダのすべての初期化は直列化する必要があります。
									 //1 = 同じ名前空間にあるこのプロバイダのすべての初期化は直列化する必要があります。
									 //2 = 初期化の直列化は必要ありません。

	InitializeAsAdminFirst = FALSE;	 //初期化がユーザーのために始まる前に、
									 //"Admin" として完全に初期化されることを要求します。
	
	PerLocaleInitialization = FALSE; //ユーザーが別のロケールを使って 1 回以上 
									 //同じ名前空間に接続する場合、
									 //プロバイダが各ローケルに対して初期化されるかどうかを示します。

	PerUserInitialization = FALSE;   //プロバイダを要求している実際の各 Windows NT/Windows 2000 NTLM ユーザーに対して、
									 //プロバイダが一度初期化されるかどうかを示します。
									 //FALSE にセットした場合、プロバイダはすべてのユーザーに対して一度初期化されます。
	
	Pure = TRUE;				     //純粋なプロバイダはアプリケーションと WMI からの要求をサービスするためにのみ存在します。
					                 //ほとんどのプロバイダは純粋なプロバイダです。
									 //純粋でないプロバイダは、要求のサービスを終了した後、
									 //クライアントの役割に移行します。


    UnloadTimeout = NULL;		     //現在は無視されます。
								     //ルートの名前空間で __CacheControl クラスを使うと、プロバイダのアンロードを制御できます。
                                     //プロバイダがアンロードされる前にどのぐらいの期間プロバイダをアイドルにできるかを指定する
								     //DMTF date/time 形式の文字列です。
								     

} ;    


[!if EXTRINSIC]
instance of __EventProviderRegistration
{
    provider = $[!output SHORT_NAME];
	[!if CLASS_SPECIFIED]
    EventQueryList = { "select * from [!output WMICLASSNAME]" };	//すべてのイベント通知
    																//[!output WMICLASSNAME] は供給されました。
    [!else]
    //TODO: 下に外部イベント クラスの名前を入力してください。
    //EventQueryList = { "select * from <MyExtrinsicEvent>" };
   //TODO: クラスに EventQueryList を定義したら下の行を削除してください。
   EventQueryList = {};

    [!endif]
};
[!endif]

[!if INTRINSIC]
instance of __EventProviderRegistration
{
    provider = $[!output SHORT_NAME];
	[!if CLASS_SPECIFIED]
	//TODO: このプロバイダから組み込みイベントのすべての種類を提供する予定がない場合は、下のクエリ一覧を修正してください。 
    EventQueryList = {  "select * from __InstanceCreationEvent where TargetInstance isa \"[!output WMICLASSNAME]\"",
    					"select * from __InstanceModificationEvent where TargetInstance isa \"[!output WMICLASSNAME]\"",
    					"select * from __InstanceDeletionEvent where TargetInstance isa \"[!output WMICLASSNAME]\"" 
    				};
    [!else]
    //TODO: このプロバイダから組み込みイベントのすべての種類を提供する予定がない場合は、下にクラス名を入力して下のクエリ一覧を修正してください。
    //EventQueryList = {"select * from __InstanceCreationEvent where TargetInstance isa \"<MyClass>\"",
    //				  	"select * from __InstanceModificationEvent where TargetInstance isa \"<MyClass>\"",
    //					"select * from __InstanceDeletionEvent where TargetInstance isa \"<MyClass>\"" 
    //		};
   //TODO: クラスに EventQueryList を定義したら下の行を削除してください。
   EventQueryList = {};

    [!endif]
 }; 

[!endif]




