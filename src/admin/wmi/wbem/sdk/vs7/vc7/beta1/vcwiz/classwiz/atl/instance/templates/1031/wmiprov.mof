[!if CLASS_SPECIFIED]
#pragma namespace ("\\\\.\\[!output ESCAPED_NAMESPACE]")
[!else]
#pragma namespace ("\\\\.\\root\\default")
[!endif]


instance of __Win32Provider as $[!output SHORT_NAME]
{
    Name    = "[!output SHORT_NAME]" ;	//Name ist die Schlüsseleigenschaft für __Provider-Objekte.
    									//Empfohlenes Format: Hersteller|Anbieter|Version
    									//Somit werden Namenskonflikte vermieden.
    
	ClsId   = "{[!output CLSID_REGISTRY_FORMAT]}" ;	 //Anbieter-GUID
    
	DefaultMachineName = NULL;		 //NULL für lokalen Computer
    
	ClientLoadableCLSID = NULL;		 //reserviert

    ImpersonationLevel = 0;			 //reserviert
	
	InitializationReentrancy = 0;	 //Flagsatz, der Serialisierungsinformationen enthält:
					//0 = Initialisierungen dieses Anbieters müssen seriell sein
					//1 = Initialisierungen dieses Anbieters im gleichem Namespace müssen seriell sein
					//2 = Keine Initialisierungsserialisierung erforderlich

	InitializeAsAdminFirst = FALSE;	 //Anforderdung muss vollständig für den Administrator initialisiert sein, 
					//bevor die Initialisierung für Benutzer ausgeführt wird.
	
	PerLocaleInitialization = FALSE; //Zeigt an, ob der Anbieter für jedes Gebietsschema initialisiert  
					//wurde, falls ein Benutzer die Verbindung mit demselben Namespace 
					//mehrmals herstellt aber verschiedene Gebietsschemen verwendet.

	PerUserInitialization = FALSE;   //Zeigt an, ob der Anbieter für jeden Windows NT-/Windows 2000-NTLM-Benutzer,
					//der Anforderungen an den Anbieter stellt, initialisiert wurde. 
					//Falls der Wert FALSE ist, wird der Anbieter einmal für jeden Benutzer initialisiert.
	
	Pure = TRUE;			//Ein wahrer Anbieter dient nur dazu, Dienstanforderungen von Anwendungen 
					//und WMI zu erfüllen. Die meisten Anbieter sind wahre Anbieter.
					//Die anderen Anbieter werden zu Clients, nachdem Sie die 
					//Dienstanforderungen erfüllt haben. 


    UnloadTimeout = NULL;		//Wird zurzeit ignoriert
					//Verwenden Sie die __CacheControl-Klasse im Stammnamespace, um das Entladen der Anbieter zu steuern.
                                     	//Eine Zeichenfolge im Datums-/Uhrzeitformat, die festlegt, wie lang ein
					//Anbieter im Leerlauf sein darf, bevor er entladen wird.
								     

} ;    

instance of __InstanceProviderRegistration
{
    Provider = $[!output SHORT_NAME];
    
    [!if SUPPORT_PUT]
    SupportsPut = "TRUE"; 
    [!else]
    SupportsPut = "FALSE"; 
    [!endif]     
    [!if SUPPORT_GET]
    SupportsGet = "TRUE"; 
    [!else]
    SupportsGet = "FALSE"; 
    [!endif]    
    [!if SUPPORT_DELETE]
    SupportsDelete = "TRUE"; 
    [!else]
    SupportsDelete = "FALSE"; 
    [!endif]    
    [!if SUPPORT_ENUMERATE]
    SupportsEnumeration = "TRUE"; 
    [!else]
    SupportsEnumeration = "FALSE"; 
    [!endif]    
};

[!if PROVIDE_METHODS]
instance of __MethodProviderRegistration
{
    Provider = $[!output SHORT_NAME];
};
[!endif]



