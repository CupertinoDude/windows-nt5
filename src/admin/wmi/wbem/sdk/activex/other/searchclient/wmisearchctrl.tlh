// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (f616ff50).
//
// WMISearchCtrl.tlh
//
// C++ source equivalent of Win32 type library ..\WMISearchCtrl\WMISearchCtrl.tlb
// compiler-generated file created 06/28/99 at 18:20:00 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace WMISEARCHCTRLLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("027947e1-d731-11ce-a357-000000000001"))
/* interface */ IEnumWbemClassObject;
struct __declspec(uuid("dc12a681-737f-11cf-884d-00aa004b2e24"))
/* interface */ IWbemClassObject;
struct __declspec(uuid("dc12a680-737f-11cf-884d-00aa004b2e24"))
/* interface */ IWbemQualifierSet;
struct __declspec(uuid("7c857801-7381-11cf-884d-00aa004b2e24"))
/* interface */ IWbemObjectSink;
struct __declspec(uuid("d1ad10d0-2030-11d3-95a7-00c04f4f5b7e"))
/* dual interface */ ISeeker;
struct __declspec(uuid("9556dc99-828c-11cf-a37e-00aa003240c7"))
/* interface */ IWbemServices;
struct __declspec(uuid("44aca674-e8fc-11d0-a07c-00c04fb68820"))
/* interface */ IWbemContext;
struct __declspec(uuid("44aca675-e8fc-11d0-a07c-00c04fb68820"))
/* interface */ IWbemCallResult;
struct __declspec(uuid("272a2c31-2031-11d3-95a7-00c04f4f5b7e"))
/* dispinterface */ _ISeekerEvents;
struct __declspec(uuid("0d43fb20-2032-11d3-95a7-00c04f4f5b7e"))
/* interface */ __CreateEnumWbemClassObject;
struct /* coclass */ Seeker;
struct /* coclass */ EnumWbemClassObject;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IEnumWbemClassObject, __uuidof(IEnumWbemClassObject));
_COM_SMARTPTR_TYPEDEF(IWbemClassObject, __uuidof(IWbemClassObject));
_COM_SMARTPTR_TYPEDEF(IWbemQualifierSet, __uuidof(IWbemQualifierSet));
_COM_SMARTPTR_TYPEDEF(IWbemObjectSink, __uuidof(IWbemObjectSink));
_COM_SMARTPTR_TYPEDEF(ISeeker, __uuidof(ISeeker));
_COM_SMARTPTR_TYPEDEF(IWbemServices, __uuidof(IWbemServices));
_COM_SMARTPTR_TYPEDEF(IWbemContext, __uuidof(IWbemContext));
_COM_SMARTPTR_TYPEDEF(IWbemCallResult, __uuidof(IWbemCallResult));
_COM_SMARTPTR_TYPEDEF(_ISeekerEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(__CreateEnumWbemClassObject, __uuidof(__CreateEnumWbemClassObject));

//
// Type library items
//

struct __declspec(uuid("027947e1-d731-11ce-a357-000000000001"))
IEnumWbemClassObject : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Reset ( );
    HRESULT Next (
        long lTimeout,
        unsigned long uCount,
        struct IWbemClassObject * * apObjects,
        unsigned long * puReturned );
    HRESULT NextAsync (
        unsigned long uCount,
        struct IWbemObjectSink * pSink );
    HRESULT Clone (
        struct IEnumWbemClassObject * * ppEnum );
    HRESULT Skip (
        long lTimeout,
        unsigned long nCount );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Reset ( ) = 0;
    virtual HRESULT __stdcall raw_Next (
        long lTimeout,
        unsigned long uCount,
        struct IWbemClassObject * * apObjects,
        unsigned long * puReturned ) = 0;
    virtual HRESULT __stdcall raw_NextAsync (
        unsigned long uCount,
        struct IWbemObjectSink * pSink ) = 0;
    virtual HRESULT __stdcall raw_Clone (
        struct IEnumWbemClassObject * * ppEnum ) = 0;
    virtual HRESULT __stdcall raw_Skip (
        long lTimeout,
        unsigned long nCount ) = 0;
};

struct __declspec(uuid("dc12a681-737f-11cf-884d-00aa004b2e24"))
IWbemClassObject : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GetQualifierSet (
        struct IWbemQualifierSet * * ppQualSet );
    HRESULT Get (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long * pType,
        long * plFlavor );
    HRESULT Put (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long Type );
    HRESULT Delete (
        LPWSTR wszName );
    HRESULT GetNames (
        LPWSTR wszQualifierName,
        long lFlags,
        VARIANT * pQualifierVal,
        SAFEARRAY * * pNames );
    HRESULT BeginEnumeration (
        long lEnumFlags );
    HRESULT Next (
        long lFlags,
        BSTR * strName,
        VARIANT * pVal,
        long * pType,
        long * plFlavor );
    HRESULT EndEnumeration ( );
    HRESULT GetPropertyQualifierSet (
        LPWSTR wszProperty,
        struct IWbemQualifierSet * * ppQualSet );
    HRESULT Clone (
        struct IWbemClassObject * * ppCopy );
    HRESULT GetObjectText (
        long lFlags,
        BSTR * pstrObjectText );
    HRESULT SpawnDerivedClass (
        long lFlags,
        struct IWbemClassObject * * ppNewClass );
    HRESULT SpawnInstance (
        long lFlags,
        struct IWbemClassObject * * ppNewInstance );
    HRESULT CompareTo (
        long lFlags,
        struct IWbemClassObject * pCompareTo );
    HRESULT GetPropertyOrigin (
        LPWSTR wszName,
        BSTR * pstrClassName );
    HRESULT InheritsFrom (
        LPWSTR strAncestor );
    HRESULT GetMethod (
        LPWSTR wszName,
        long lFlags,
        struct IWbemClassObject * * ppInSignature,
        struct IWbemClassObject * * ppOutSignature );
    HRESULT PutMethod (
        LPWSTR wszName,
        long lFlags,
        struct IWbemClassObject * pInSignature,
        struct IWbemClassObject * pOutSignature );
    HRESULT DeleteMethod (
        LPWSTR wszName );
    HRESULT BeginMethodEnumeration (
        long lEnumFlags );
    HRESULT NextMethod (
        long lFlags,
        BSTR * pstrName,
        struct IWbemClassObject * * ppInSignature,
        struct IWbemClassObject * * ppOutSignature );
    HRESULT EndMethodEnumeration ( );
    HRESULT GetMethodQualifierSet (
        LPWSTR wszMethod,
        struct IWbemQualifierSet * * ppQualSet );
    HRESULT GetMethodOrigin (
        LPWSTR wszMethodName,
        BSTR * pstrClassName );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetQualifierSet (
        struct IWbemQualifierSet * * ppQualSet ) = 0;
    virtual HRESULT __stdcall raw_Get (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long * pType,
        long * plFlavor ) = 0;
    virtual HRESULT __stdcall raw_Put (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long Type ) = 0;
    virtual HRESULT __stdcall raw_Delete (
        LPWSTR wszName ) = 0;
    virtual HRESULT __stdcall raw_GetNames (
        LPWSTR wszQualifierName,
        long lFlags,
        VARIANT * pQualifierVal,
        SAFEARRAY * * pNames ) = 0;
    virtual HRESULT __stdcall raw_BeginEnumeration (
        long lEnumFlags ) = 0;
    virtual HRESULT __stdcall raw_Next (
        long lFlags,
        BSTR * strName,
        VARIANT * pVal,
        long * pType,
        long * plFlavor ) = 0;
    virtual HRESULT __stdcall raw_EndEnumeration ( ) = 0;
    virtual HRESULT __stdcall raw_GetPropertyQualifierSet (
        LPWSTR wszProperty,
        struct IWbemQualifierSet * * ppQualSet ) = 0;
    virtual HRESULT __stdcall raw_Clone (
        struct IWbemClassObject * * ppCopy ) = 0;
    virtual HRESULT __stdcall raw_GetObjectText (
        long lFlags,
        BSTR * pstrObjectText ) = 0;
    virtual HRESULT __stdcall raw_SpawnDerivedClass (
        long lFlags,
        struct IWbemClassObject * * ppNewClass ) = 0;
    virtual HRESULT __stdcall raw_SpawnInstance (
        long lFlags,
        struct IWbemClassObject * * ppNewInstance ) = 0;
    virtual HRESULT __stdcall raw_CompareTo (
        long lFlags,
        struct IWbemClassObject * pCompareTo ) = 0;
    virtual HRESULT __stdcall raw_GetPropertyOrigin (
        LPWSTR wszName,
        BSTR * pstrClassName ) = 0;
    virtual HRESULT __stdcall raw_InheritsFrom (
        LPWSTR strAncestor ) = 0;
    virtual HRESULT __stdcall raw_GetMethod (
        LPWSTR wszName,
        long lFlags,
        struct IWbemClassObject * * ppInSignature,
        struct IWbemClassObject * * ppOutSignature ) = 0;
    virtual HRESULT __stdcall raw_PutMethod (
        LPWSTR wszName,
        long lFlags,
        struct IWbemClassObject * pInSignature,
        struct IWbemClassObject * pOutSignature ) = 0;
    virtual HRESULT __stdcall raw_DeleteMethod (
        LPWSTR wszName ) = 0;
    virtual HRESULT __stdcall raw_BeginMethodEnumeration (
        long lEnumFlags ) = 0;
    virtual HRESULT __stdcall raw_NextMethod (
        long lFlags,
        BSTR * pstrName,
        struct IWbemClassObject * * ppInSignature,
        struct IWbemClassObject * * ppOutSignature ) = 0;
    virtual HRESULT __stdcall raw_EndMethodEnumeration ( ) = 0;
    virtual HRESULT __stdcall raw_GetMethodQualifierSet (
        LPWSTR wszMethod,
        struct IWbemQualifierSet * * ppQualSet ) = 0;
    virtual HRESULT __stdcall raw_GetMethodOrigin (
        LPWSTR wszMethodName,
        BSTR * pstrClassName ) = 0;
};

struct __declspec(uuid("dc12a680-737f-11cf-884d-00aa004b2e24"))
IWbemQualifierSet : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Get (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long * plFlavor );
    HRESULT Put (
        LPWSTR wszName,
        VARIANT * pVal,
        long lFlavor );
    HRESULT Delete (
        LPWSTR wszName );
    HRESULT GetNames (
        long lFlags,
        SAFEARRAY * * pNames );
    HRESULT BeginEnumeration (
        long lFlags );
    HRESULT Next (
        long lFlags,
        BSTR * pstrName,
        VARIANT * pVal,
        long * plFlavor );
    HRESULT EndEnumeration ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Get (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pVal,
        long * plFlavor ) = 0;
    virtual HRESULT __stdcall raw_Put (
        LPWSTR wszName,
        VARIANT * pVal,
        long lFlavor ) = 0;
    virtual HRESULT __stdcall raw_Delete (
        LPWSTR wszName ) = 0;
    virtual HRESULT __stdcall raw_GetNames (
        long lFlags,
        SAFEARRAY * * pNames ) = 0;
    virtual HRESULT __stdcall raw_BeginEnumeration (
        long lFlags ) = 0;
    virtual HRESULT __stdcall raw_Next (
        long lFlags,
        BSTR * pstrName,
        VARIANT * pVal,
        long * plFlavor ) = 0;
    virtual HRESULT __stdcall raw_EndEnumeration ( ) = 0;
};

struct __declspec(uuid("7c857801-7381-11cf-884d-00aa004b2e24"))
IWbemObjectSink : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Indicate (
        long lObjectCount,
        struct IWbemClassObject * * apObjArray );
    HRESULT SetStatus (
        long lFlags,
        HRESULT hResult,
        _bstr_t strParam,
        struct IWbemClassObject * pObjParam );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Indicate (
        long lObjectCount,
        struct IWbemClassObject * * apObjArray ) = 0;
    virtual HRESULT __stdcall raw_SetStatus (
        long lFlags,
        HRESULT hResult,
        BSTR strParam,
        struct IWbemClassObject * pObjParam ) = 0;
};

struct __declspec(uuid("d1ad10d0-2030-11d3-95a7-00c04f4f5b7e"))
ISeeker : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Search (
        struct IWbemServices * pSvc,
        long lFlags,
        _bstr_t pattern,
        struct IEnumWbemClassObject * * pEnumResult );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Search (
        struct IWbemServices * pSvc,
        long lFlags,
        BSTR pattern,
        struct IEnumWbemClassObject * * pEnumResult ) = 0;
};

struct __declspec(uuid("9556dc99-828c-11cf-a37e-00aa003240c7"))
IWbemServices : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OpenNamespace (
        _bstr_t strNamespace,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemServices * * ppWorkingNamespace,
        struct IWbemCallResult * * ppResult );
    HRESULT CancelAsyncCall (
        struct IWbemObjectSink * pSink );
    HRESULT QueryObjectSink (
        long lFlags,
        struct IWbemObjectSink * * ppResponseHandler );
    HRESULT GetObject (
        _bstr_t strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * * ppObject,
        struct IWbemCallResult * * ppCallResult );
    HRESULT GetObjectAsync (
        _bstr_t strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT PutClass (
        struct IWbemClassObject * pObject,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult );
    HRESULT PutClassAsync (
        struct IWbemClassObject * pObject,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT DeleteClass (
        _bstr_t strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult );
    HRESULT DeleteClassAsync (
        _bstr_t strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT CreateClassEnum (
        _bstr_t strSuperclass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum );
    HRESULT CreateClassEnumAsync (
        _bstr_t strSuperclass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT PutInstance (
        struct IWbemClassObject * pInst,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult );
    HRESULT PutInstanceAsync (
        struct IWbemClassObject * pInst,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT DeleteInstance (
        _bstr_t strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult );
    HRESULT DeleteInstanceAsync (
        _bstr_t strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT CreateInstanceEnum (
        _bstr_t strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum );
    HRESULT CreateInstanceEnumAsync (
        _bstr_t strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT ExecQuery (
        _bstr_t strQueryLanguage,
        _bstr_t strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum );
    HRESULT ExecQueryAsync (
        _bstr_t strQueryLanguage,
        _bstr_t strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT ExecNotificationQuery (
        _bstr_t strQueryLanguage,
        _bstr_t strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum );
    HRESULT ExecNotificationQueryAsync (
        _bstr_t strQueryLanguage,
        _bstr_t strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler );
    HRESULT ExecMethod (
        _bstr_t strObjectPath,
        _bstr_t strMethodName,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * pInParams,
        struct IWbemClassObject * * ppOutParams,
        struct IWbemCallResult * * ppCallResult );
    HRESULT ExecMethodAsync (
        _bstr_t strObjectPath,
        _bstr_t strMethodName,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * pInParams,
        struct IWbemObjectSink * pResponseHandler );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_OpenNamespace (
        BSTR strNamespace,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemServices * * ppWorkingNamespace,
        struct IWbemCallResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_CancelAsyncCall (
        struct IWbemObjectSink * pSink ) = 0;
    virtual HRESULT __stdcall raw_QueryObjectSink (
        long lFlags,
        struct IWbemObjectSink * * ppResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_GetObject (
        BSTR strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * * ppObject,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_GetObjectAsync (
        BSTR strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_PutClass (
        struct IWbemClassObject * pObject,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_PutClassAsync (
        struct IWbemClassObject * pObject,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_DeleteClass (
        BSTR strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_DeleteClassAsync (
        BSTR strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_CreateClassEnum (
        BSTR strSuperclass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum ) = 0;
    virtual HRESULT __stdcall raw_CreateClassEnumAsync (
        BSTR strSuperclass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_PutInstance (
        struct IWbemClassObject * pInst,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_PutInstanceAsync (
        struct IWbemClassObject * pInst,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_DeleteInstance (
        BSTR strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_DeleteInstanceAsync (
        BSTR strObjectPath,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_CreateInstanceEnum (
        BSTR strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum ) = 0;
    virtual HRESULT __stdcall raw_CreateInstanceEnumAsync (
        BSTR strClass,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_ExecQuery (
        BSTR strQueryLanguage,
        BSTR strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum ) = 0;
    virtual HRESULT __stdcall raw_ExecQueryAsync (
        BSTR strQueryLanguage,
        BSTR strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_ExecNotificationQuery (
        BSTR strQueryLanguage,
        BSTR strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IEnumWbemClassObject * * ppEnum ) = 0;
    virtual HRESULT __stdcall raw_ExecNotificationQueryAsync (
        BSTR strQueryLanguage,
        BSTR strQuery,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemObjectSink * pResponseHandler ) = 0;
    virtual HRESULT __stdcall raw_ExecMethod (
        BSTR strObjectPath,
        BSTR strMethodName,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * pInParams,
        struct IWbemClassObject * * ppOutParams,
        struct IWbemCallResult * * ppCallResult ) = 0;
    virtual HRESULT __stdcall raw_ExecMethodAsync (
        BSTR strObjectPath,
        BSTR strMethodName,
        long lFlags,
        struct IWbemContext * pCtx,
        struct IWbemClassObject * pInParams,
        struct IWbemObjectSink * pResponseHandler ) = 0;
};

struct __declspec(uuid("44aca674-e8fc-11d0-a07c-00c04fb68820"))
IWbemContext : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Clone (
        struct IWbemContext * * ppNewCopy );
    HRESULT GetNames (
        long lFlags,
        SAFEARRAY * * pNames );
    HRESULT BeginEnumeration (
        long lFlags );
    HRESULT Next (
        long lFlags,
        BSTR * pstrName,
        VARIANT * pValue );
    HRESULT EndEnumeration ( );
    HRESULT SetValue (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pValue );
    HRESULT GetValue (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pValue );
    HRESULT DeleteValue (
        LPWSTR wszName,
        long lFlags );
    HRESULT DeleteAll ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Clone (
        struct IWbemContext * * ppNewCopy ) = 0;
    virtual HRESULT __stdcall raw_GetNames (
        long lFlags,
        SAFEARRAY * * pNames ) = 0;
    virtual HRESULT __stdcall raw_BeginEnumeration (
        long lFlags ) = 0;
    virtual HRESULT __stdcall raw_Next (
        long lFlags,
        BSTR * pstrName,
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall raw_EndEnumeration ( ) = 0;
    virtual HRESULT __stdcall raw_SetValue (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall raw_GetValue (
        LPWSTR wszName,
        long lFlags,
        VARIANT * pValue ) = 0;
    virtual HRESULT __stdcall raw_DeleteValue (
        LPWSTR wszName,
        long lFlags ) = 0;
    virtual HRESULT __stdcall raw_DeleteAll ( ) = 0;
};

struct __declspec(uuid("44aca675-e8fc-11d0-a07c-00c04fb68820"))
IWbemCallResult : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT GetResultObject (
        long lTimeout,
        struct IWbemClassObject * * ppResultObject );
    HRESULT GetResultString (
        long lTimeout,
        BSTR * pstrResultString );
    HRESULT GetResultServices (
        long lTimeout,
        struct IWbemServices * * ppServices );
    HRESULT GetCallStatus (
        long lTimeout,
        long * plStatus );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetResultObject (
        long lTimeout,
        struct IWbemClassObject * * ppResultObject ) = 0;
    virtual HRESULT __stdcall raw_GetResultString (
        long lTimeout,
        BSTR * pstrResultString ) = 0;
    virtual HRESULT __stdcall raw_GetResultServices (
        long lTimeout,
        struct IWbemServices * * ppServices ) = 0;
    virtual HRESULT __stdcall raw_GetCallStatus (
        long lTimeout,
        long * plStatus ) = 0;
};

struct __declspec(uuid("272a2c31-2031-11d3-95a7-00c04f4f5b7e"))
_ISeekerEvents : IDispatch
{};

struct __declspec(uuid("0d43fb20-2032-11d3-95a7-00c04f4f5b7e"))
__CreateEnumWbemClassObject : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Init ( );
    HRESULT GetCount (
        unsigned long * pCount );
    HRESULT AddItem (
        struct IWbemClassObject * pObj );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Init ( ) = 0;
    virtual HRESULT __stdcall raw_GetCount (
        unsigned long * pCount ) = 0;
    virtual HRESULT __stdcall raw_AddItem (
        struct IWbemClassObject * pObj ) = 0;
};

struct __declspec(uuid("272a2c30-2031-11d3-95a7-00c04f4f5b7e"))
Seeker;
    // [ default ] interface ISeeker
    // [ default, source ] dispinterface _ISeekerEvents

struct __declspec(uuid("49134de0-2032-11d3-95a7-00c04f4f5b7e"))
EnumWbemClassObject;
    // [ default ] interface IEnumWbemClassObject

//
// Wrapper method implementations
//

#include "WMISearchCtrl.tli"

} // namespace WMISEARCHCTRLLib

#pragma pack(pop)
