// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "precomp.h"
#include "nsentry1.h"

/////////////////////////////////////////////////////////////////////////////
// CNSEntry

IMPLEMENT_DYNCREATE(CNSEntry, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CNSEntry properties

CString CNSEntry::GetNameSpace()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CNSEntry::SetNameSpace(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

long CNSEntry::GetMaxDroppedWidth()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CNSEntry::SetMaxDroppedWidth(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

CString CNSEntry::GetFontName()
{
	CString result;
	GetProperty(0x3, VT_BSTR, (void*)&result);
	return result;
}

void CNSEntry::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x3, VT_BSTR, propVal);
}

long CNSEntry::GetFontWidth()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CNSEntry::SetFontWidth(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CNSEntry::GetFontHeight()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CNSEntry::SetFontHeight(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CNSEntry::GetComponentStructure()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CNSEntry::SetComponentStructure(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

OLE_COLOR CNSEntry::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CNSEntry::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

CString CNSEntry::Get_NameSpace()
{
	CString result;
	GetProperty(0x0, VT_BSTR, (void*)&result);
	return result;
}

void CNSEntry::Set_NameSpace(LPCTSTR propVal)
{
	SetProperty(0x0, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CNSEntry operations

VARIANT CNSEntry::PopUpBrowseDialog(LPCTSTR bstrNameSpace)
{
	VARIANT result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_VARIANT, (void*)&result, parms,
		bstrNameSpace);
	return result;
}

void CNSEntry::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
