// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "precomp.h"
#include "eventlist.h"

/////////////////////////////////////////////////////////////////////////////
// CEventList

IMPLEMENT_DYNCREATE(CEventList, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CEventList properties

long CEventList::GetMaxItems()
{
	long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CEventList::SetMaxItems(long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CEventList::GetItemCount()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CEventList::SetItemCount(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CEventList operations

void CEventList::DoDetails()
{
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CEventList::Clear(long item)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		item);
	return result;
}

long CEventList::AddWbemEvent(LPUNKNOWN logicalConsumer, LPUNKNOWN Event)
{
	long result;
	static BYTE parms[] =
		VTS_UNKNOWN VTS_UNKNOWN;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		logicalConsumer, Event);
	return result;
}

void CEventList::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
