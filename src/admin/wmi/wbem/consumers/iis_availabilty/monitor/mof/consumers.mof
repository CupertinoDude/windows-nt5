#pragma namespace ( "\\\\.\\root\\cimv2" ) 

/*
 *	Filters
 */

Instance of __EventFilter As $HttpFailure
{
	Name = "HttpError" ;
	QueryLanguage = "WQL" ;
	Query = "Select * from __InstanceModificationEvent "						\
			"Where "															\
			"TargetInstance isa 'MSFT_Protocol_Vs_Icmp_State' And "					\
			"PreviousInstance.WatchJoinedState != TargetInstance.WatchJoinedState And "	\
			"TargetInstance.WatchJoinedState = TRUE ";

} ;

Instance of __EventFilter As $HttpSuccess
{
	Name = "HttpSuccess" ;
	QueryLanguage = "WQL" ;
	Query = "Select * from __InstanceModificationEvent "						\
			"Where "															\
			"TargetInstance isa 'MSFT_Protocol_Vs_Icmp_State' And "					\
			"PreviousInstance.WatchJoinedState != TargetInstance.WatchJoinedState And "	\
			"TargetInstance.WatchJoinedState = FALSE ";

} ;

Instance of __EventFilter As $IcmpFailure
{
	Name = "IcmpError" ;
	QueryLanguage = "WQL" ;
	Query = "Select * from __InstanceModificationEvent "						\
			"Where "															\
			"TargetInstance isa 'MSFT_Protocol_Vs_Icmp_State' And "					\
			"PreviousInstance.IcmpJoinedState != TargetInstance.IcmpJoinedState And "	\
			"TargetInstance.IcmpJoinedState = TRUE ";

} ;

Instance of __EventFilter As $IcmpSuccess
{
	Name = "IcmpSuccess" ;
	QueryLanguage = "WQL" ;
	Query = "Select * from __InstanceModificationEvent "						\
			"Where "															\
			"TargetInstance isa 'MSFT_Protocol_Vs_Icmp_State' And "					\
			"PreviousInstance.IcmpJoinedState != TargetInstance.IcmpJoinedState And "	\
			"TargetInstance.IcmpJoinedState = FALSE ";

} ;

/*
 *	Animation
 */

Instance Of AnimateConsumer As $AnimateScript
{
	Name = "HttpError" ;
	AnimationScript = "wscript c:\\winnt\\system32\\wbem\\StopStartreboot.vbs W3SVC stevm_12_12070" ;
};

Instance Of AnimateConsumer As $AnimateScriptHttpSuccess
{
	Name = "HttpSuccess" ;
	AnimationScript = "wscript c:\\winnt\\system32\\wbem\\HttpSuccess.vbs" ;
};

Instance Of SMTPEventConsumer   As $HttpFailureMail
{
    Name = "Http Failure" ;
    Subject = "Http Failure contacting Stevm_12_12070" ;
    Message = "Works like a charm!! " ;
    ToLine = "1744091@skytel.com" ;
	SMTPServer = "smarthost" ;
};

Instance Of __FilterToConsumerBinding
{
    Consumer = $AnimateScript;
    Filter = $HttpFailure ;
    DeliverSynchronously=FALSE;
} ;

Instance Of __FilterToConsumerBinding
{
    Consumer = $AnimateScriptHttpSuccess ;
    Filter = $HttpSuccess ;
    DeliverSynchronously=FALSE;
} ;

/*
 * Mail
 */

Instance Of SMTPEventConsumer   As $HttpSuccessMail
{
    Name = "Http Success" ;
    Subject = "Http Successfully contacted Stevm_12_12070" ;
    Message = "Works like a charm!! " ;
    ToLine = "1744091@skytel.com" ;
	SMTPServer = "smarthost" ;
};

Instance Of SMTPEventConsumer As $IcmpMail
{
    Name = "Icmp Failure" ;
    Subject = "Icmp Failure contacting Stevm_12_12070" ;
    Message = "Works like a charm!! " ;
    ToLine = "1744091@skytel.com" ;
	SMTPServer = "smarthost" ;
};

Instance Of SMTPEventConsumer   As $IcmpSuccessMail
{
    Name = "Icmp Success" ;
    Subject = "Icmp Successfully contacted Stevm_12_12070" ;
    Message = "Works like a charm!! " ;
    ToLine = "1744091@skytel.com" ;
	SMTPServer = "smarthost" ;
};

Instance Of __FilterToConsumerBinding
{
    Consumer = $HttpFailureMail ;
    Filter = $HttpFailure ;
    DeliverSynchronously=FALSE;
} ;

Instance Of __FilterToConsumerBinding
{
    Consumer = $HttpSuccessMail ;
    Filter = $HttpSuccess ;
    DeliverSynchronously=FALSE;
} ;


Instance Of __FilterToConsumerBinding
{
    Consumer = $IcmpMail ;
    Filter = $IcmpFailure ;
    DeliverSynchronously=FALSE;
} ;

Instance Of __FilterToConsumerBinding
{
    Consumer = $IcmpSuccessMail ;
    Filter = $IcmpSuccess ;
    DeliverSynchronously=FALSE;
} ;

Class Protocol_Event : MSFT_UpdatingConsumerEventBase
{
	DateTime LoggingTime ;
	[Max_Length ( 17 )] String OrginatingServer ;
	[Max_Length ( 17 )] String FowardingServer ;

	[Max_Length ( 1024 )] String Message ;
} ;

class IcmpFailure_Event : Protocol_Event
{
} ;

class IcmpSuccess_Event : Protocol_Event
{
} ;

class HttpFailure_Event : Protocol_Event
{
} ;

class HttpSuccess_Event : Protocol_Event
{
} ;

/*
 *	Icmp Failure
 */

Instance Of MSFT_UpdatingConsumer As $EventStoreConsumer_IcmpFailure
{
	UpdateNamespace = "\\\\.\\Root\\Cimv2" ;

	Name = "Forwarding_IcmpFailure_Record" ;
	Scenario = "Example" ;
	Commands = {

		"INSERT INTO IcmpFailure_Event "
		"(LoggingTime,OrginatingServer,FowardingServer,Message) "
		"(__NOW,__Event.TargetInstance.__Server,__Event.TargetInstance.__Server,'Icmp failure contacting Stevm_12_12070')"

	} ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $EventStoreConsumer_IcmpFailure ;
        Filter = $IcmpFailure ;
        DeliverSynchronously=FALSE;
} ;

Instance Of MSFT_ForwardingConsumer as $IcmpFailure_ForwardingConsumer
{
	Name = "Forwarder_IcmpFailure_ForwardingConsumer" ;
	Targets = { "stevm_12_12074" };
	ForwardingQos = 2;
	Authenticate = FALSE;
};

Instance of __EventFilter As $IcmpFailure_ForwarderEventFilter
{
	Name = "Filter_Forwarder_IcmpFailure_ForwardingConsumer" ;
	Query = "Select * From IcmpFailure_Event" ;
	QueryLanguage = "WQL" ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $IcmpFailure_ForwardingConsumer ;
        Filter = $IcmpFailure_ForwarderEventFilter ;
        DeliverSynchronously=FALSE;
} ;

/*
 *	Icmp Success
 */

Instance Of MSFT_UpdatingConsumer As $EventStoreConsumer_IcmpSuccess
{
	UpdateNamespace = "\\\\.\\Root\\Cimv2" ;

	Name = "Forwarding_IcmpSuccess_Record" ;
	Scenario = "Example" ;
	Commands = {

		"INSERT INTO IcmpSuccess_Event "
		"(LoggingTime,OrginatingServer,FowardingServer,Message) "
		"(__NOW,__Event.TargetInstance.__Server,__Event.TargetInstance.__Server,'Icmp Successfully contacted Stevm_12_12070')"

	} ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $EventStoreConsumer_IcmpSuccess ;
        Filter = $IcmpSuccess ;
        DeliverSynchronously=FALSE;
} ;

Instance Of MSFT_ForwardingConsumer as $IcmpSuccess_ForwardingConsumer
{
	Name = "Forwarder_IcmpSuccess_ForwardingConsumer" ;
	Targets = { "stevm_12_12074" };
	ForwardingQos = 2;
	Authenticate = FALSE;
};

Instance of __EventFilter As $IcmpSuccess_ForwarderEventFilter
{
	Name = "Filter_Forwarder_IcmpSuccess_ForwardingConsumer" ;
	Query = "Select * From IcmpSuccess_Event" ;
	QueryLanguage = "WQL" ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $IcmpSuccess_ForwardingConsumer ;
        Filter = $IcmpSuccess_ForwarderEventFilter ;
        DeliverSynchronously=FALSE;
} ;

/*
 *	Http Failure
 */

Instance Of MSFT_UpdatingConsumer As $EventStoreConsumer_HttpFailure
{
	UpdateNamespace = "\\\\.\\Root\\Cimv2" ;

	Name = "Forwarding_HttpFailure_Record" ;
	Scenario = "Example" ;
	Commands = {

		"INSERT INTO HttpFailure_Event "
		"(LoggingTime,OrginatingServer,FowardingServer,Message) "
		"(__NOW,__Event.TargetInstance.__Server,__Event.TargetInstance.__Server,'Http failure contacting Stevm_12_12070')"

	} ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $EventStoreConsumer_HttpFailure ;
        Filter = $HttpFailure ;
        DeliverSynchronously=FALSE;
} ;

Instance Of MSFT_ForwardingConsumer as $HttpFailure_ForwardingConsumer
{
	Name = "Forwarder_HttpFailure_ForwardingConsumer" ;
	Targets = { "stevm_12_12074" };
	ForwardingQos = 2;
	Authenticate = FALSE;
};

Instance of __EventFilter As $HttpFailure_ForwarderEventFilter
{
	Name = "Filter_Forwarder_HttpFailure_ForwardingConsumer" ;
	Query = "Select * From HttpFailure_Event" ;
	QueryLanguage = "WQL" ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $HttpFailure_ForwardingConsumer ;
        Filter = $HttpFailure_ForwarderEventFilter ;
        DeliverSynchronously=FALSE;
} ;

/*
 *	Http Success
 */

Instance Of MSFT_UpdatingConsumer As $EventStoreConsumer_HttpSuccess
{
	UpdateNamespace = "\\\\.\\Root\\Cimv2" ;

	Name = "Forwarding_HttpSuccess_Record" ;
	Scenario = "Example" ;
	Commands = {

		"INSERT INTO HttpSuccess_Event "
		"(LoggingTime,OrginatingServer,FowardingServer,Message) "
		"(__NOW,__Event.TargetInstance.__Server,__Event.TargetInstance.__Server,'Http Successfully contacted Stevm_12_12070')"

	} ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $EventStoreConsumer_HttpSuccess ;
        Filter = $HttpSuccess ;
        DeliverSynchronously=FALSE;
} ;

Instance Of MSFT_ForwardingConsumer as $HttpSuccess_ForwardingConsumer
{
	Name = "Forwarder_HttpSuccess_ForwardingConsumer" ;
	Targets = { "stevm_12_12074" };
	ForwardingQos = 2;
	Authenticate = FALSE;
};

Instance of __EventFilter As $HttpSuccess_ForwarderEventFilter
{
	Name = "Filter_Forwarder_HttpSuccess_ForwardingConsumer" ;
	Query = "Select * From HttpSuccess_Event" ;
	QueryLanguage = "WQL" ;
} ;

Instance Of __FilterToConsumerBinding
{
        Consumer = $HttpSuccess_ForwardingConsumer ;
        Filter = $HttpSuccess_ForwarderEventFilter ;
        DeliverSynchronously=FALSE;
} ;
