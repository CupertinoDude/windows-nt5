        [Dynamic, provider("CIMWin32"),
		Description ("The Win32_USBController class manages the "
		"capabilities of a Universal Serial Bus (USB) controller."): ToSubClass, 
		Locale (0x409), UUID ("{98C7E2C7-D592-11d2-B355-00105A0A323A}") ] 
class Win32_USBController : CIM_USBController
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"uniquely identifying the USB controller from other "
		"devices on the system."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string DeviceID ;
};

		[Abstract, Locale (0x409), UUID ("{EDCE42F9-0991-11d3-910A-00105AA630BE}") ,
		Description (
		"Capabilities and management of an CIM_InfraredController.")
		]
class CIM_InfraredController : CIM_Controller
{
} ;

        [Description ("The Win32_InfraredDevice class represents the "
		"capabilities and management of an infrared device."): ToSubClass, 
        dynamic, provider("CIMWin32"),
		Locale (0x409), UUID ("{67F74295-BA42-11d2-85E5-0000F8102E5F}") ] 
class Win32_InfraredDevice : CIM_InfraredController
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"uniquely identifying the infrared device with other "
		"devices on the system."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string DeviceID ;

        [read : ToSubClass , 
		Description ("The Manufacturer property indicates the name of the "
		"manufacturer of the infrared device .\nExample: Acme"): ToSubClass,
		MappingStrings {"Win32Registry"}: ToSubClass ] 
    string Manufacturer ;
};




        [Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_SerialPort class represents a serial port "
		"on a Win32 system."): ToSubClass,
		Locale (0x409), UUID ("{8502C4BF-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_SerialPort:CIM_SerialController
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"uniquely identifying the serial port with other "
		"devices on the system."): ToSubClass,
		MappingStrings {"Win32Registry|Hardware\\DeviceMap\\SerialComm"}: ToSubClass]
    string DeviceID ;

        [read : ToSubClass,
		Description ("The Binary property indicates whether the serial port "
		"is configured for binary data transfer. Since the Win32 API does not "
		"support non-binary mode transfers, this property must be TRUE. "
		"Specifying FALSE will not work. Values: TRUE or FALSE. A value of "
		"TRUE indicates the serial port is configured for binary data "
		"transfer."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fBinary"}: ToSubClass] 
    boolean Binary ;

        [read : ToSubClass, units ("Bytes") : ToSubClass , 
 		Description ("The MaximumInputBufferSize property specifies the "
		"maximum size of the serial port driver's internal input buffer. A value of "
		"zero indicates that no maximum value is imposed by the serial "
		"provider."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwMaxRxQueue"}: ToSubClass ] 
    uint32 MaximumInputBufferSize ;

        [read : ToSubClass, units ("Bytes") : ToSubClass , 
		Description ("The MaximumOutputBufferSize property specifies the "
		"maximum size of the serial port driver's internal output buffer. "
		"A value of zero indicates that no maximum value is imposed by "
		"the serial provider."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwMaxTxQueue"}: ToSubClass ] 
    uint32 MaximumOutputBufferSize ;

        [read : ToSubClass, 
		Description ("The ProviderType property specifies the "
		"communications provider type."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvSubType"}: ToSubClass,
		Values {"FAX Device", "LAT Protocol", "Modem Device", 
		"Network Bridge", "Parallel Port", "RS232 Serial Port", 
		"RS422 Port", "RS423 Port", "RS449 Port", "Scanner Device", 
		"TCP/IP TelNet", "X.25", "Unspecified"}: ToSubClass] 
    string ProviderType ;

        [read : ToSubClass, 
		Description ("The SettableBaudRate property indicates whether the "
		"baud rate can be changed for this serial port.\nValues: TRUE or "
		"FALSE. A value of TRUE indicates the baud rate can be changed."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_BAUD"}: ToSubClass ] 
    boolean SettableBaudRate ;

        [read : ToSubClass, 
		Description ("The SettableDataBits property indicates whether data "
		"bits can be set for this serial port.\nValues: TRUE or FALSE. A value of  "
		"TRUE indicates the data bits can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_DATABITS"}: ToSubClass ] 
    boolean SettableDataBits ;

        [read : ToSubClass, 
		Description ("The SettableFlowControl property indicates whether "
		"flow control can be set for this serial port.\nValues: TRUE or "
		"FALSE. A value of TRUE indicates the flow control can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_HANDSHAKING"}: ToSubClass ] 
    boolean SettableFlowControl ;

        [read : ToSubClass, 
		Description ("The SettableParity property indicates whether parity "
		"can be set for this serial port.\nValues: TRUE or FALSE. A value of TRUE "
		"indicates the parity can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_PARITY"}: ToSubClass ] 
    boolean SettableParity ;

        [read : ToSubClass, 
		Description ("The SettableParityCheck property indicates whether "
		"parity checking can be set for this serial port (if parity checking "
		"is supported). \nValues: TRUE or FALSE. A value of TRUE indicates "
		"parity checking can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_PARITY_CHECK"}: ToSubClass ] 
    boolean SettableParityCheck ;

        [read : ToSubClass, 
		Description ("The SettableRLSD property indicates whether RLSD "
		"can be set for this serial port (if Received Line Signal Detect "
		"(RLSD) is supported). \nValues: TRUE or FALSE.  A value of TRUE "
		"indicates the RLSD can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_RLSD"}: ToSubClass ] 
    boolean SettableRLSD ;

        [read : ToSubClass,
		Description ("The SettableStopBits property indicates whether "
		"stop bits can be set for this serial port.\nValues: TRUE or "
		"FALSE. A value of TRUE indicates the stop bits can be set."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwSettableParams|SP_STOPBITS"}: ToSubClass ] 
    boolean SettableStopBits ;

        [read : ToSubClass, 
		Description ("The Supports16BitMode property indicates whether "
		"16-bit mode is supported on this serial port.\nValues: TRUE or "
		"FALSE. A value of TRUE indicates 16-bit mode is supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_16BITMODE"}: ToSubClass ] 
    boolean Supports16BitMode ;

        [read : ToSubClass, 
		Description ("The SupportsDTRDSR property indicates whether Data "
		"Terminal Ready (DTR) and Data Set Ready (DSR) signals are supported "
		"on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates "
		"DTR and DSR signals are supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_DTRDSR"}: ToSubClass ] 
    boolean SupportsDTRDSR ;

        [read : ToSubClass, 
		Description ("The SupportsElapsedTimeouts property indicates "
		"whether elapsed timeouts are supported on this serial port. "
		"Elapsed timeouts track the total amount of time between data "
		"transmissions.\nValues: TRUE or FALSE.  A value of TRUE indicates elapsed "
		"timeouts are supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_TOTALTIMEOUTS"}: ToSubClass ]
	boolean SupportsElapsedTimeouts ;

        [read : ToSubClass,
		Description ("The SupportsIntTimeouts property indicates "
		"whether interval time-outs are supported. An interval timeout "
		"is the amount of time allowed to elapse between the arrival of "
		"each piece of data.\nValues: TRUE or FALSE. A value of TRUE indicates interval "
		"timeouts are supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_INTTIMEOUTS"}: ToSubClass ] 
    boolean SupportsIntTimeouts ;

        [read : ToSubClass, 
		Description ("The SupportsParityCheck property indicates whether "
		"parity checking is supported on this serial port.\nValues: TRUE or "
		"FALSE. A value of TRUE indicates parity checking is supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_PARITY_CHECK"}: ToSubClass ] 
    boolean SupportsParityCheck ;

        [read : ToSubClass, 
		Description ("The SupportsRLSD property indicates whether Received "
		"Line Signal Detect (RLSD) is supported on this serial port."
		"\nValues: TRUE or FALSE. A value of TRUE indicates RLSD is supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_RLSD"}: ToSubClass ] 
    boolean SupportsRLSD ;
 
        [read : ToSubClass, 
		Description ("The SupportsRTSCTS property indicates whether Ready "
		"To Send (RTS) and Clear To Send (CTS) signals are supported on this "
		"serial port.\nValues: TRUE or FALSE. A value of TRUE indicates RTS "
		"and CTS signals are supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_RTSCTS"}: ToSubClass ] 
    boolean SupportsRTSCTS ;

        [read : ToSubClass, 
		Description ("The SupportsSpecialCharacters property "
		"indicates whether serial port control characters are "
		"supported. These characters signal events rather than data. "
		"These characters are not displayable and are set by the driver. "
		"They include EofChar, ErrorChar, BreakChar, EventChar, XonChar, and "
		"XoffChar.\nValues: TRUE or FALSE. A value of TRUE indicates special "
		"characters are supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_SPECIALCHARS"}: ToSubClass ] 
    boolean SupportsSpecialCharacters ;

        [read : ToSubClass,
		Description ("The SupportsXOnXOff property indicates whether "
		"XON/XOFF flow control is supported on this serial port.\nValues: "
		"TRUE or FALSE. A value of TRUE indicates XON/XOFF is supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_XONXOFF"}: ToSubClass ] 
    boolean SupportsXOnXOff ;

        [read : ToSubClass,
		Description ("The SupportsXOnXOffSet property indicates whether the "
		"communications provider supports configuration of the XON/XOFF flow "
		"control setting.\nValues: TRUE or FALSE. A value of TRUE indicates "
		" XON/XOFF flow control setting is supported."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|COMMPROP|"
		"dwProvCapabilities|PCF_SETXCHAR"}: ToSubClass ] 
    boolean SupportsXOnXOffSet ;

        [read : ToSubClass, 
		Description ("The OSAutoDiscovered property distinguishes the "
		"instances of this class that were automatically discovered by the "
		"operating system. If, for example, hardware was added through the "
		"Control Panel, the operating system finds instances of this class "
		"by querying hardware from the instances of this class. A value of "
		"TRUE indicates that the instance was automatically discovered."): ToSubClass,
		MappingStrings {"Win32Registry|HARDWARE\\DESCRIPTION\\SYSTEM\\"
		"MultifunctionAdapter"}: ToSubClass ]
    boolean OSAutoDiscovered ; 
};



		
        [Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_SCSIController class represents "
		"a SCSI controller on a Win32 system.\nExample: Adaptec "
		"AHA-2940UW."): ToSubClass,
		Locale (0x409), UUID ("{8502C4C1-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_SCSIController:CIM_SCSIController
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"uniquely identifying the SCSI controller with other "
		"devices on the system."): ToSubClass,
		MappingStrings {"Win32Registry|Hardware\\DeviceMap\\Scsi"}: ToSubClass] 
    string DeviceID ;

        [read : ToSubClass, 
		Description ("The Index property indicates the index number of the "
		"SCSI controller in the system registry.\nExample: 0."): ToSubClass,
		MappingStrings {"Win32Registry|Hardware\\DeviceMap\\Scsi|"
		"ScsiPort"}: ToSubClass ] 
    uint32 Index ;

        [read : ToSubClass, 
		Description ("The DriverName property indicates the driver file name "
		"of the SCSI controller.\nExample: Adaptec"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class|PortDriver"}: ToSubClass ] 
    string DriverName ;

        [DEPRECATED, read : ToSubClass,
		Description ("The DeviceMap property indicates the order in which "
		"devices are listed with this SCSI controller. \n"
		"The DeviceMap property has been deprecated.  There is no replacement"
		"value and this property is now considered obsolete."): ToSubClass,
		MappingStrings {"Win32Registry|Hardware\\DeviceMap\\Scsi|"
		"ScsiPort"}: ToSubClass] 
    string DeviceMap ;

        [read : ToSubClass, 
		Description ("The HardwareVersion property indicates the hardware "
		"version number of the SCSI controller.\nExample: 1.25"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Enum\\"
		"Root|HWRevision"}: ToSubClass ] 
    string HardwareVersion ;

        [read : ToSubClass, 
		Description ( "The Manufacturer property indicates the name of the "
		"SCSI controller manufacturer.\nExample: Adaptec"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Enum\\"
		"Root|Mfg"}: ToSubClass ] 
    string Manufacturer ;
};
		
        [Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_USBControllerDevice class represents an "
		"association between a Universal Serial Bus (USB) controller and the "
		"CIM_LogicalDevice connected to it."): ToSubClass,
		Locale (0x409), UUID ("{DE57D792-A032-11D2-90F0-0060081A46FD}")] 
class Win32_USBControllerDevice : CIM_ControlledBy
{
        [read:ToSubClass, key: ToSubClass, Override ("Dependent"): ToSubClass,
		Description ("The CIM_LogicalDevice dependent reference represents "
		"the CIM_LogicalDevice connected to the Universal Serial Bus (USB) controller."): ToSubClass,
		MappingStrings {"CIM|CIM_LogicalDevice"}: ToSubClass] 
    CIM_LogicalDevice REF Dependent;

        [read:ToSubClass, key: ToSubClass, Override ("Antecedent"): ToSubClass,
		Description ("The CIM_USBController antecedent reference represents "
		"the Universal Serial Bus (USB) controller associated with this device."): ToSubClass,
		MappingStrings {"CIM|CIM_USBController"}: ToSubClass] 
    CIM_USBController REF Antecedent;
};





        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_SCSIControllerDevice class represents an "
		"association between a Small Computer System Interface (SCSI) "
		"controller and the logical device (disk drive) connected to it. "
		"Instances for this class are only provided on  Microsoft "
		"Windows NT/Windows 2000 or later and Windows 95 or later."): ToSubClass,
		Locale (0x409), UUID ("{CC0F48D2-C847-11d2-911E-0060081A46FD}")] 
class Win32_SCSIControllerDevice : CIM_ControlledBy
{
		[Read: ToSubClass, Key: ToSubClass, Override ("Dependent"): ToSubClass,
		Description ("The CIM_LogicalDevice Dependent reference represents the "
		"logical device connected to the SCSI controller."): ToSubClass,
		MappingStrings {"CIM|CIM_LogicalDevice"}: ToSubClass] 
    CIM_LogicalDevice REF Dependent;

		[Read: ToSubClass, Key: ToSubClass, Override ("Antecedent"): ToSubClass,
		Description ("The Win32_SCSIController antecedent reference "
		"represents the SCSI controller associated with this device."): ToSubClass,
		MappingStrings {"CIM|Win32_SCSIController"}: ToSubClass] 
    Win32_SCSIController REF Antecedent;
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_ParallelPort class represents the properties "
		"of a parallel port on a Win32 computer system."): ToSubClass,
		Locale (0x409), UUID ("{8502C4C2-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_ParallelPort:CIM_ParallelController
{
		[Key: ToSubClass, Read: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string identifying "
		"the parallel port."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
	string DeviceID ;

		[read: ToSubClass, 
		Description ("The OSAutoDiscovered property indicates whether the "
		"parallel port was automatically detected by the operating "
		"system or by other means (such as being manually added "
		"through the Control Panel).\nValues: TRUE or FALSE. A value of "
		"TRUE indicates the parallel port was automatically discovered by "
		"the operating system."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ]
	boolean OSAutoDiscovered ; 
};




        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_SerialPortConfiguration class represents "
		"the default settings for data transmission on a Win32 serial port. "
		"this may include the default configuration for establishing a "
		"connection and error checking."): ToSubClass,
		Locale (0x409), UUID ("{8502C4EB-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_SerialPortConfiguration:CIM_Setting
{
        [read: ToSubClass,
		Description ("The AbortReadWriteOnError property indicates whether "
		"read and write operations are terminated if an error occurs."
		"\nValues: TRUE or FALSE. If TRUE, the driver terminates all read "
		"and write operations with an error status if an error occurs. The "
		"driver will not accept any further communications operations until "
		"the application acknowledges the error."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fAbortOnError"}: ToSubClass]
    boolean AbortReadWriteOnError ;

        [read: ToSubClass,
		Description ("The BaudRate property indicates the baud (bits per "
		"second) rate at which the communications device operates. "
        "\nExample: 9600"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"BaudRate"}: ToSubClass] 
    uint32 BaudRate ;
        
		[read: ToSubClass, 
		Description ("The BinaryModeEnabled property indicates whether "
		"binary-mode data transfers are enabled for the serial port. Win32 "
		"systems only allow binary transfers through serial ports, so this "
		"value will always be TRUE."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fBinary"}: ToSubClass] 
    boolean BinaryModeEnabled ;
        
		[read: ToSubClass,
		Description ("The BitsPerByte property indicates the number of bits "
		"transmitted and received for each byte of data for the Win32 serial port. "
		"The number may vary with control and error correction bits, such as "
		"parity bits.\nExample: 8"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"ByteSize"}: ToSubClass] 
    uint32 BitsPerByte ;
        
		[read: ToSubClass,
		Description ("The ContinueXMitOnXOff property specifies whether data "
		"transmissions continue when the receiving buffer is close to full and "
		"an XoffChar character has been sent to the transmitter.\nValues: "
		"TRUE or FALSE. If TRUE, transmission continues after the input "
		"buffer has come within XoffLim bytes of being full and the driver "
		"has transmitted the XoffChar character to stop receiving bytes. If "
		"FALSE, transmission does not continue until the input buffer is "
		"within XonLim bytes of being empty and the driver has transmitted "
		"the XonChar character to resume reception."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fTXContinueOnXoff"}: ToSubClass] 
    boolean ContinueXMitOnXOff ;
        
		[read: ToSubClass,
		Description ("The CTSOutflowControl property determines whether "
		"the Clear To Send (CTS) is checked before transmitting data. "
		"CTS signals that both devices on the serial connection are "
		"ready to transfer data. \nValues: TRUE or FALSE. If TRUE, data "
		"transmission is suspended until CTS signal is given."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fOutxCtsFlow"}: ToSubClass ] 
    boolean CTSOutflowControl ;
        
		[read: ToSubClass,
		Description ("The DiscardNULLBytes property determines whether "
		"to discard NULL bytes (characters) when they are received.\nValues: "
		"TRUE or FALSE. If TRUE, NULL bytes are discarded."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fNull"}: ToSubClass ] 
    boolean DiscardNULLBytes ;
        
		[read: ToSubClass,
		Description ("The DSROutflowControl property determines whether data "
		"outflow control is enabled when there is a Data Set Ready (DSR) "
		"condition. DSR signals that the connection has been "
		"established by the devices on the serial connection.\nValues: TRUE "
		"or FALSE. If TRUE, DSR data transmission is suspended until DSR "
		"signal is given."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fOutxDsrFlow"}: ToSubClass ] 
    boolean DSROutflowControl ;
        
		[read: ToSubClass,
		Description ("The DSRSensitivity property specifies whether the "
		"communications driver is sensitive to the state of the DSR signal. "
		"\nValues: TRUE or FALSE. If TRUE, the driver ignores any bytes "
		"received, unless the DSR modem input line is high."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fDsrSensitivity"}: ToSubClass] 
    boolean DSRSensitivity ;
        
		[read: ToSubClass,
		Description ("The DTRFlowControlType property specifies the use of "
		"the data-terminal-ready (DTR) flow control after a connection has "
		"been established. After a communication line has been established "
		"the DTR can be left in the following states: enabled, to show that the connection is still "
		"active; disabled, to ignore the DTR once received; or it can be used as a data "
		"flow control flag."): ToSubClass,
		Values {"Enable", "Disable", "Handshake"}: ToSubClass,
		ValueMap {"Enable", "Disable", "Handshake"}: ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fDtrControl"}: ToSubClass ] 
    string DTRFlowControlType ;

		[read: ToSubClass,
		Description ("The EOFCharacter property specifies the value of the "
		"character used to signal the end of data. .\nExample: ^Z"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"EofChar"}: ToSubClass ] 
    uint32 EOFCharacter ;

		[read: ToSubClass,
		Description ("The ErrorReplaceCharacter property specifies the value "
		"of the character used to replace bytes received with a parity error. "
		"\nExample: ^C"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"ErrorChar"}: ToSubClass ] 
    uint32 ErrorReplaceCharacter ;
        
		[read: ToSubClass,
		Description ("The ErrorReplacementEnabled specifies whether "
		"bytes received with parity errors are replaced with the "
		"ErrorReplaceCharacter value. Characters with parity errors "
		"are only replaced if this member is TRUE and the parity is "
		"enabled."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fErrorChar"}: ToSubClass ] 
    boolean ErrorReplacementEnabled ;
        
		[read: ToSubClass,
		Description ("The EventCharacter specifies the value of the "
		"control character that is used to signal an event, such as end of file."
		"\nExample: ^e"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"EvtChar"}: ToSubClass ] 
    uint32 EventCharacter ;
        
		[read: ToSubClass,
		Description ("The IsBusy property determines whether the serial port is "
		"busy.\nValues: TRUE or FALSE. If TRUE, the serial port is busy."): ToSubClass,
		MappingStrings {"Win32API|File Functions|CreateFile"}: ToSubClass ] 
    boolean IsBusy ;

		[read: ToSubClass, key: ToSubClass, MaxLen (256): ToSubClass,
		Description ("The Name property indicates the name of the Win32 "
		"serial port.\nExample: COM1"): ToSubClass,
		MappingStrings {"Win32Registry|Hardware\\DeviceMap\\"
		"SerialComm"}: ToSubClass] 
    string Name ;
        
		[read: ToSubClass,
		Description ("The Parity property specifies the method of parity "
		"checking to be used. Parity is used as an error checking technique "
		"where an extra parity bit is included with every unit of data. If "
		"even parity is used, the parity bit is used to make the total count "
		"of bits set an even number. The receiver can then verify the "
		"validity of the data by counting the bits that are set. "
		"Odd parity, sets the parity bit so that the count of bits "
		"set is an odd number. Mark parity always leaves the parity bit set "
		"to 1, while space parity always leaves the parity bit set to 0."
		"\nExample: Even"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"Parity"}: ToSubClass,
		Values {"None", "Odd", "Even", "Mark", "Space"}: ToSubClass,
		ValueMap {"None", "Odd", "Even", "Mark", "Space"}: ToSubClass] 
    string Parity ;
        
		[read: ToSubClass,
		Description ("The ParityCheckEnabled property determines whether "
		"parity checking is enabled.\nValues: TRUE or FALSE. If TRUE, "
		"parity checking is enabled."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fParity"}: ToSubClass ] 
    boolean ParityCheckEnabled ;
        
		[read: ToSubClass,
		Description ("The RTSFlowControlType property specifies the  "
		"request-to-send (RTS) flow control. RTS is used to signal that data "
		"is available for transmission. Uses of this member include:\n"
		"Disable - RTS is ignored after the first RTS signal is received.\n"
		"Enable - RTS is left on for the data transfer session.\n"
		"Handshake - RTS is turned off if the transmission buffer is more "
			"than three-quarters full, and RTS is turned on when the buffer is less than "
			"one-half full.\n"
		"Toggle - RTS is turned on if there is any data buffered for "
			"transmission.\n"): ToSubClass,
		Values {"Enable", "Disable", "Handshake","Toggle"}: ToSubClass,
		ValueMap {"Enable", "Disable", "Handshake","Toggle"}: ToSubClass]
   string RTSFlowControlType ;

		[read: ToSubClass,
		Description ("The StopBits specifies the number of stop bits to be "
		"used. StopBits separate each unit of data on an asynchronous serial "
		"connection. They are also sent continuously when no data is "
		"available for transmission.\nExample: 1"): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"StopBits"}: ToSubClass,
		Values {"1", "1.5", "2"}: ToSubClass,
		ValueMap {"1", "1.5", "2"}: ToSubClass]
    string StopBits ;
        
		[read: ToSubClass,
		Description ("The XOffCharacter property specifies the value "
		"of the XOFF character for both transmission and reception. "
		"XOFF is a software control to stop the transmission of data "
		"(whereas RTS and CTS are hardware controls). XON resumes the "
		"transmission."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"XoffChar"}: ToSubClass ] 
    uint32 XOffCharacter ;
        
		[read: ToSubClass,
		Description ("The XOffXMitThreshold property specifies the maximum "
		"number of bytes allowed in the input buffer before the XOFF "
		"character is sent."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"XoffLim"}: ToSubClass ] 
    uint32 XOffXMitThreshold ;
        
		[read: ToSubClass,
		Description ("The XOnCharacter property specifies the value of "
		"the XON character for both transmission and reception. XON is "
		"a software control to resume the transmission of data (whereas "
		"RTS and CTS are hardware controls). XOFF stops the "
		"transmission."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"XonChar"}: ToSubClass ] 
    uint32 XOnCharacter ;
        
		[read: ToSubClass,
		Description ("The XOnXMitThreshold property specifies the "
		"minimum number of bytes allowed in the input buffer before "
		"the XON character is sent. This member works in conjunction "
		"with XOffXMitThreshold to regulate the rate at which data "
		"is transferred."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"XonLim"}: ToSubClass] 
    uint32 XOnXMitThreshold ;
        
		[read: ToSubClass,
		Description ("The XOnXOffInFlowControl property specifies whether "
		"XON/XOFF flow control is used during reception.\nValues TRUE or "
		"FALSE. If TRUE the XOffCharacter is sent when the input buffer "
		"comes within XOffXMitThreshold bytes of being full, and the "
		"XOnCharacter is sent when the input buffer comes within "
		"XOnXMitThreshold bytes of being empty."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fInX"}: ToSubClass ] 
    uint32 XOnXOffInFlowControl ;
        
		[read: ToSubClass,
		Description ("The XOnXOffOutFlowControl specifies whether XON/XOFF "
		"flow control is used during transmission.\nValues TRUE or FALSE. If "
		"TRUE, transmission stops when the XOffCharacter is received and "
		"starts again when the XonCharacter is received."): ToSubClass,
		MappingStrings {"Win32API|Communication Structures|DCB|"
		"fOutX"}: ToSubClass ] 
    uint32 XOnXOffOutFlowControl ;
};


//RuleBased("Select * From "
//			"Win32_SerialPort As A "
//			"Join "
//			"Win32_SerialPortConfiguration As B "
//			"On A.DeviceId = B.Name")
 
        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_SerialPortSetting class represents "
		"an association between a serial port and its configuration "
		"settings."): ToSubClass,
		Locale (0x409), UUID ("{8502C4FE-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_SerialPortSetting:Win32_DeviceSettings
{
        [read: ToSubClass, Override ("Element"): ToSubClass ,
		Description ("The Element reference represents the "
		"Win32_SerialPort containing the properties of a serial "
		"port on the computer system."): ToSubClass,
		MappingStrings {"WMI|Win32_SerialPort"}: ToSubClass ] 
    Win32_SerialPort REF Element;

        [read: ToSubClass, Override ("Setting"): ToSubClass ,
		Description ("The Setting reference represents the "
        "Win32_SerialPortConfiguration containing a configuration "
		"setting for the serial port."): ToSubClass,
		MappingStrings {"WMI|Win32_SerialPortConfiguration"}: ToSubClass] 
    Win32_SerialPortConfiguration REF Setting;
};
     



        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_PortConnector class represents physical "
		"connection ports, such as DB-25 pin male, Centronics, and PS/2.") ,
		Locale (0x409), UUID ("{FAF76B92-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_PortConnector:CIM_PhysicalConnector
{
 		[read: ToSubClass, Key: ToSubClass, 
		MaxLen (256): ToSubClass, Override ("Tag"): ToSubClass,
		Description ("The Tag property contains a string that uniquely "
		"identifies a port connection on the computer system.\nExample: "
		"Port Connector 1"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass]
	string Tag;

        [read: ToSubClass, 
		Description ("The InternalReferenceDesignator property indicates "
		"the internal reference designator of the port. Internal "
		"reference designators are specific to the manufacturer and "
		"identify the circuit board location or use of the port."
		"\nExample: J101"): ToSubClass , 
		MappingStrings { "SMBIOS|Type 8|Internal Reference "
		"Designator"}: ToSubClass]
    string InternalReferenceDesignator;

        [read: ToSubClass, 
		Description ("The ExternalReferenceDesignator property indicates "
		"the external reference designator of the port. External reference "
		"designators are identifiers that determine the type and use "
		"of the port.\nExample: COM1"): ToSubClass,
		MappingStrings { "SMBIOS|Type 8|External Reference "
		"Designator" }: ToSubClass] 
    string ExternalReferenceDesignator;

		[read: ToSubClass, Override ("ConnectorType"): ToSubClass,
		Description ("The ConnectorType property indicates the physical "
		"attributes of the connector used by this port.\nExample: 2 25 "
		"(Male RS-232)"): ToSubClass,
	    Values {"Unknown", "Other", "Male", "Female", "Shielded", 
		"Unshielded", 
		"SCSI (A) High-Density (50 pins)",
		"SCSI (A) Low-Density (50 pins)",
	    "SCSI (P) High-Density (68 pins)", 
		"SCSI SCA-I (80 pins)",
	    "SCSI SCA-II (80 pins)",
		"SCSI Fibre Channel (DB-9, Copper)",
		"SCSI Fibre Channel (Fibre)",
		"SCSI Fibre Channel SCA-II (40 pins)",
		"SCSI Fibre Channel SCA-II (20 pins)",
		"SCSI Fibre Channel BNC",
		"ATA 3-1/2 Inch (40 pins)", "ATA 2-1/2 Inch (44 pins)",
		"ATA-2", "ATA-3", "ATA/66", "DB-9", "DB-15", "DB-25",
		"DB-36", "RS-232C", "RS-422", "RS-423", "RS-485", "RS-449",
		"V.35", "X.21", "IEEE-488", "AUI", "UTP Category 3",
		"UTP Category 4", "UTP Category 5", "BNC", "RJ11", "RJ45",
	    "Fiber MIC", "Apple AUI", "Apple GeoPort", "PCI", "ISA",
		"EISA", "VESA", "PCMCIA", "PCMCIA Type I",
		"PCMCIA Type II", "PCMCIA Type III", "ZV Port", "CardBus",
	    "USB", "IEEE 1394", "HIPPI", "HSSDC (6 pins)", "GBIC",
		"DIN", "Mini-DIN", "Micro-DIN", "PS/2", "Infrared",
		"HP-HIL", "Access.bus", "NuBus", "Centronics",
		"Mini-Centronics", "Mini-Centronics Type-14",
		"Mini-Centronics Type-20", "Mini-Centronics Type-26",
		"Bus Mouse", "ADB", "AGP", "VME Bus", "VME64", "Proprietary",
		"Proprietary Processor Card Slot", 
		"Proprietary Memory Card Slot",
		"Proprietary I/O Riser Slot",
		"PCI-66MHZ", "AGP2X", "AGP4X",
		"PC-98", "PC-98Hireso", "PC-H98", 
		"PC-98Note", "PC-98Full", "Mini-Jack",
		"On Board Floppy", 
		"9 Pin Dual Inline (pin 10 cut)",
		"25 Pin Dual Inline (pin 26 cut)",
		"50 Pin Dual Inline",
		"68 Pin  Dual Inline",
		"On Board Sound Input from CD-ROM"}: ToSubClass ,
        MappingStrings { "SMBIOS|Type 8|Internal/External Connector "
		"Type" }: ToSubClass] 
    uint16 ConnectorType[];

        [read: ToSubClass,
		Description ("The PortType property describes the function "
		"of the port.\nExample: USB"): ToSubClass, 
        Values {"None", 
		"Parallel Port XT/AT Compatible", "Parallel Port PS/2", 
		"Parallel Port ECP", "Parallel Port EPP", "Parallel Port ECP/EPP", 
		"Serial Port XT/AT Compatible", "Serial Port 16450 Compatible", 
        "Serial Port 16550 Compatible", "Serial Port 16550A Compatible", 
        "SCSI Port", "MIDI Port", "Joy Stick Port", "Keyboard Port", 
        "Mouse Port", "SSA SCSI", "USB", "FireWire (IEEE P1394)", 
        "PCMCIA Type II", "PCMCIA Type II", "PCMCIA Type III", "Cardbus", 
        "Access Bus Port", "SCSI II", "SCSI Wide", "PC-98", "PC-98-Hireso", 
        "PC-H98", "Video Port", "Audio Port", "Modem Port", "Network Port", 
        "8251 Compatible", "8251 FIFO Compatible"}: ToSubClass ,
        MappingStrings {"SMBIOS|Type 8|Port Type"}: ToSubClass] 
    uint16 PortType;
};


