


		[Dynamic, Provider ("CIMWin32"), 
		Description ("The Win32_DesktopMonitor class represents the type of "
		"monitor or display device attached to the computer system."): ToSubClass,
		Locale (0x409), UUID("{1008CCF0-7BFF-11D2-AAD2-006008C78BC7}")]
class Win32_DesktopMonitor:CIM_DesktopMonitor
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string that uniquely "
		"identifies a desktop monitor.\nExample: DesktopMonitor1"): ToSubClass,
		MappingStrings {"Win32API|Windows GDI|HMONITOR"}: ToSubClass] 
	string DeviceID ;

		[Read :ToSubClass, 
		Description ("The MonitorManufacturer property indicates the name of "
		"the monitor manufacturer. \nExample: NEC"): ToSubClass,
		MappingStrings {"Win32Registry"}: ToSubClass ] 
	string MonitorManufacturer ;

		[Read :ToSubClass, 
		Description ("The MonitorType property indicates the type of monitor. "
		"\nExample: NEC 5FGp"): ToSubClass, 
		MappingStrings {"Win32Registry"}: ToSubClass ] 
	string MonitorType ;

		[Read :ToSubClass, Units ("Pixels per Logical Inch"): ToSubClass,
		Description ("The PixelsPerXLogicalInch property indicates "
		"the resolution along the X axis (horizontal direction) "
		"of the monitor."): ToSubClass, 
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
	uint32 PixelsPerXLogicalInch ;

		[Read :ToSubClass, Units ("Pixels per Logical Inch"): ToSubClass,
		Description ("The PixelsPerYLogicalInch property indicates "
		"the resolution along the Y axis (vertical direction) of "
		"the monitor."): ToSubClass, 
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
	uint32 PixelsPerYLogicalInch ;
};

        [Dynamic, Provider ("CIMWin32"), 
		Description ("The Win32_PointingDevice class represents an input device used "
		"to point to and select  regions on the display of a Win32 computer system. Any device "
		"used to manipulate a pointer, or point to the display on a Win32 "
		"computer system is a member of this class."
		"\nExample: A mouse, touch pad, or stylus/tablet."): ToSubClass,
		Locale (0x409), UUID ("{8502C4B4-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_PointingDevice:CIM_PointingDevice
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"uniquely identifying the pointing device with other "
		"devices on the system."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string DeviceID ;

        [read : ToSubClass , 
		Description ("The HardwareType property indicates the type of "
		"hardware type used for the Win32 pointing device. "
		"\nExample: MICROSOFT PS2 MOUSE"): ToSubClass,
		MappingStrings {"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\"
		"ControlSet001\\Control\\Class|DriverDesc"}: ToSubClass] 
    string HardwareType ;
        
		[read : ToSubClass, 
		Description ("The InfFileName property indicates the name of the .inf "
		"file for the Win32 pointing device.\nExample: ab.inf"): ToSubClass,
		MappingStrings {"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\"
		"CurrentControlSet\\Control\\Class|InfPath"}: ToSubClass ] 
    string InfFileName ;
        
		[read : ToSubClass,
		Description ("The InfSection property indicates the section of the "
		".inf file that holds configuration information for the Win32 "
		"pointing device."): ToSubClass,
		MappingStrings {"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\"
		"CurrentControlSet\\Control\\Class|InfSection"}: ToSubClass ] 
    string InfSection ;
        
		[read : ToSubClass, Units ("Hertz"): ToSubClass,
		Description ("The SampleRate property indicates the rate at which the "
		"pointing device is polled for input information."): ToSubClass,
		MappingStrings {"Win32Registry|SampleRate"}: ToSubClass ] 
    uint32 SampleRate ;
        
		[read : ToSubClass, Units ("100 Nanoseconds"): ToSubClass,
		Description ("The Synch property specifies the length of time after "
		"which the next interrupt is assumed to indicate the start of a new "
		"device packet (partial packets are discarded). In the event that an "
		"interrupt is lost, this allows "
		"the pointing device driver to synchronize its internal"
		"representation of the packet state with the hardware state."): ToSubClass,
		MappingStrings {"Win32Registry|MouseSynchIn100ns"}: ToSubClass ] 
    uint32 Synch ;
        
		[read : ToSubClass, Units ("Mickeys"),
		Description ("The DoubleSpeedThreshold property contains one of two "
		"acceleration values. The sensitivity of the "
		"pointing device doubles (toggles from the first to the second value) "
		"when the pointing device moves a distance greater "
		"than this threshold value."): ToSubClass,
		MappingStrings {"Win32API|System Information Functions|"
		"SystemParametersInfo"}: ToSubClass ] 
    uint32 DoubleSpeedThreshold ;
        
		[read : ToSubClass, Units ("Mickeys"),
		Description ("The QuadSpeedThreshold property contains the one of two "
		"acceleration threshold values.  The system doubles the speed of the "
		"pointer movement when the pointer device moves a distance greater "
		"than this value.  Since this speed increase occurs after the "
		"DoubleSpeedThreshold has been met, pointer effectively moves at four "
		"times it original speed"): ToSubClass,
		MappingStrings {"Win32API|System Information Functions|"
		"SystemParametersInfo"}: ToSubClass ] 
    uint32 QuadSpeedThreshold ;

		[read : ToSubClass ,
		Description ("The DeviceInterface property indicates the type of "
		"interface used for the pointing device."): ToSubClass,
		MappingStrings {"SMBIOS|Type 21|Interface"} : ToSubClass,
		Values {"Other", "Unknown", "Serial", "PS/2", "Infrared", "HP-HIL",
		"Bus mouse", "ADB (Apple Desktop Bus)", "Bus mouse DB-9", 
		"Bus mouse micro-DIN", "USB" }: ToSubClass,
		ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", 
		"160", "161", "162"}: ToSubClass]
	uint16 DeviceInterface;

        [read : ToSubClass , 
		Description ("The Manufacturer property specifies the name of "
		"the processor's manufacturer.\nExample: GenuineSilicon"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string Manufacturer ;
};

        [Dynamic, Provider ("CIMWin32") , Description (
        "The Win32_Keyboard class represents a keyboard installed on a Win32 "
        "system.\nExample: A Microsoft Natural(R) keyboard"),
		Locale (0x409), UUID ("{8502C4B5-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_Keyboard:CIM_Keyboard
{
        [Override("DeviceId") ,Description (
        "DeviceID is an address or other identifying information to uniquely name "
        "the logical device.") , Key, Read ] 
    string DeviceID ;
};








        [Dynamic, Provider ("CIMWin32"), Description (
		"The Win32_VideoController class represents the capabilities and "
		"management capacity of the video controller on a Win32 computer system. "
		"\nExamples: Video adapter manufacturer, chipset version, display resolution, "
		"and number of colors."): ToSubClass,
		Locale (0x409), UUID("{1008CCF1-7BFF-11D2-AAD2-006008C78BC7}") ] 
class Win32_VideoController:CIM_PCVideoController
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a identifier (unique "
		"to the computer system) for this video controller."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string DeviceID ;

        [Read :ToSubClass, 
		Description ("The AdapterCompatibility properties contains "
		"the general chip set used for this controller in order to compare "
		"compatibilities with the system"): ToSubClass,
		MappingStrings {"Win32Registry"}: ToSubClass ] 
    string AdapterCompatibility ;

        [Read :ToSubClass, 
		Description ("The AdapterDACType property contains a string of the "
		"Digital-to-Analog converter (DAC) chip name or ID.\nCharacter Set: "
		"Alphanumeric"): ToSubClass,
		MappingStrings {"Win32Registry|HardwareInformation."
		"DACType"}: ToSubClass ] 
    string AdapterDACType ;

        [Read :ToSubClass, Units ("Bytes"): ToSubClass, 
		Description ("The AdapterRAM property indicates the memory size of "
		"the video adapter. \nExample: 64000"): ToSubClass,
		MappingStrings {"Win32Registry|HardwareInformation."
		"MemorySize"}: ToSubClass ] 
    uint32 AdapterRAM ;

        [Read: ToSubClass, Units ("Hertz"): ToSubClass,
		Override("CurrentRefreshRate"): ToSubClass, 
        Description("The CurrentRefreshRate property specifies the "
		"frequency at which the video controller refreshes the image "
		"for the monitor. A value of 0 indicates the default "
        "rate is being used, while 0xFFFFFFFF indicates the "
        "optimal rate is being used."): ToSubClass,
        MappingStrings {"Win32Registry|HardwareInformation."}: ToSubClass ]
    uint32 CurrentRefreshRate;

        [Read :ToSubClass, 
		Description ("The Monochrome property indicates whether gray scale "
        "or color is used to display images."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ]
    boolean Monochrome ; 
        
		[Read :ToSubClass,
		Description("The DitherType property indicates the dither type of the "
		"video controller.  The property can be one of the following predefined "
		"values, or a driver-defined value greater than or equal to 256: "
		"Value Meaning :-"
		"1	-	No dithering. "
		"2	-	Dithering with a coarse brush. " 
		"3	-	Dithering with a fine brush. "
		"4	-	Line art dithering; a special dithering "
		"		method that produces well defined borders "
		"		between black, white, and gray scalings. "
		"		It is not suitable for images that include "
		"		continuous graduations in intensity and "
		"		hue such as scanned photographs. "
		"5	-	Device does grayscaling. "	),
		MappingStrings {"Win32API|Device Context Functions|"
		"EnumDisplaySettings"}: ToSubClass,
		Values {"No dithering","Dithering with a coarse brush",
		"Dithering with a fine brush",	"Line art dithering",
		"Device does gray scaling"}: ToSubClass,
		ValueMap {"1","2","3","4","5"}: ToSubClass ]
    uint32 DitherType ;
        
		[Read :ToSubClass,
		Description ("The InfFilename property indicates the path to the "
		"video adapter's .INF file. \nExample: C:\\WINNT\\SYSTEM32\\DRIVERS"): ToSubClass,
		MappingStrings {"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\"
		"Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"}: ToSubClass ] 
    string InfFilename ;
        
		[Read :ToSubClass, 
		Description ("The InfSection property indicates the section of the "
		".INF file where the Win32 video information resides."): ToSubClass,
		MappingStrings {"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\"
		"Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"}: ToSubClass ] 
    string InfSection ;
        
		[Read :ToSubClass, 
		Description ("The InstalledDisplayDrivers property indicates the "
		"name of the installed display device driver."): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\"
		"Services\\Class\\"}: ToSubClass ] 
    string InstalledDisplayDrivers ;
        
		[Read :ToSubClass, 
		Description ("The DriverDate property indicates the last "
		"modification date and time of the currently-installed "
		"video driver."): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\"
		"Services\\Class\\"}: ToSubClass ] 
    datetime DriverDate ;
        
		[Read :ToSubClass, 
		Description ("The DriverVersion property indicates the version number "
		"of the video driver."): ToSubClass,
		MappingStrings {"Win32API|File Installation Library Functions|"
		"GetFileVersionInfo"}: ToSubClass ] 
    string DriverVersion ;
        
		[Read :ToSubClass,
		Description (
		"The ICMIntent ( Image Color Matching Intent ) property indicates the "
		"specific value of one of the three possible color matching methods, "
		"(or intents) that should be used by default. This property is primarily "
		"for non-ICM applications. ICM applications establish intents by "
		"using the ICM functions. This property can be one of the following "
		"predefined values, or a driver defined value greater than or equal "
		"to 256."
		"Value Meaning :-"
		"1	-	Color matching should optimize for color saturation. This value "
		"		is the most appropriate choice for business graphs when dithering "
		"		is not desired. "
		"2	-	Color matching should optimize for color contrast. This value "
		"		is the most appropriate choice for scanned or photographic images "
		"		when dithering is desired. "
		"3	-	Color matching should optimize to match the exact color requested. "
		"		This value is most appropriate for use with business logos or other "
		"		images when an exact color match is required. "),
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DevMode|dmICMIntent"}: ToSubClass,
		Values {"Saturation","Contrast", "Exact Color"}: ToSubClass,
		ValueMap {"1","2","3"}: ToSubClass ] 
    uint32 ICMIntent ;
        
		[Read :ToSubClass, 
		Description (		"The ICMMethod ( Image Color Matching Method ) property specifies how "
		"ICM is handled. For a non-ICM application, this property shows how"
		"ICM is enabled. For ICM applications, the system examines "
		"this member to determine how to handle ICM support. This property can "
		"be one of the following predefined values, or a driver-defined value "
		"greater than or equal to 256."
		"Value Meaning :-"
		"1	-	Specifies that ICM is disabled. "
		"2	-	Specifies that ICM is handled by Windows. "
		"3	-	Specifies that ICM is handled by the device driver. "
		"4	-	Specifies that ICM is handled by the destination device. "),
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DevMode|dmICMMethod"}: ToSubClass,
		Values {"Disabled", "Windows","Device Driver","Destination Device"}: ToSubClass,
		ValueMap {"1","2","3","4"}: ToSubClass] 
    uint32 ICMMethod ;
        
		[Read :ToSubClass, 
		Description ("The SpecificationVersion property indicates the version "
		"number of the initialization data specification (upon which the "
		"structure is based)."): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DevMode|dmSpecVersion"}: ToSubClass ] 
    uint32 SpecificationVersion ;
        
		[Read :ToSubClass, 
		Description (
        "The ColorTableEntries property indicates the size of the system's "
        "color table, if the device has a color depth of no more than "
		"8 bits per pixel, null otherwise. <P>Example: 256"),
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
    uint32 ColorTableEntries ;
        
		[Read :ToSubClass, 
		Description ("The DeviceSpecificPens property indicates the current "
		"number of device-specific pens.  0xffff means the device does not "
		"support pens. \nExample: 3"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
    uint32 DeviceSpecificPens ;
        
		[Read :ToSubClass, 
		Description (
        "The ReservedSystemPaletteEntries property indicates the current number "
        "of reserved entries in a system's color table. The operating system may "
        "reserve entries to support standard colors for task bars and other "
        "desktop display items. If the system is not using a palette, then "
		"ReservedSystemPaletteEntries is null.<P>Example: 24."),
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
    uint32 ReservedSystemPaletteEntries ;
        
		[Read :ToSubClass,
		Description (
        "The SystemPaletteEntries property indicates the current number of "
        "entries in a system's color table. If the system is not using a "
		"palette then SystemPaletteEntries is null.<P>Example: 256"),
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
    uint32 SystemPaletteEntries ;
        
		[Read :ToSubClass, 
		Description ("The VideoModeDescription property indicates "
		"the current resolution, color, and scan "
		"mode settings of the video controller. \nExample: 1024 x 768 x "
		"256 colors."): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|"
		"GetDeviceCaps"}: ToSubClass ] 
    string VideoModeDescription ;
};




        [Dynamic, Provider ("CIMWin32"), 
		Description ("The Win32_DriverVXD class represents a virtual "
		"device driver on a Win32 computer system. A virtual device is a program "
		"that manages a system resource (such as a hardware device or "
		"installed software) so that more than one application can use "
		"the resource at the same time. Windows uses virtual devices to "
		"allow multitasking for Windows-based applications. The virtual "
		"devices work in conjunction with Windows to process interrupts, "
		"and carry out I/O operations for a given application without "
		"disrupting the execution of other applications.\n"
		"Most virtual devices manage a hardware device and many also "
		"manage or replace corresponding software such as ROM BIOS routines. "
		"A virtual device can contain the device-specific code needed to "
		"carry out actions on the device or it can rely on the other "
		"software to carry out these operations. In all cases, the virtual "
		"device keeps track of the state of the device for each application "
		"and ensures that the device is in the correct state whenever an "
		"application continues execution.\n"
		"Some virtual devices manage only installed software, such as an "
		"MS-DOS device driver or a Terminate and Stay Resident (TSR) "
		"program. Such virtual devices often "
		"contain code that either emulates the software or ensures that "
		"the software uses data that applies only to the currently running "
		"application. Virtual devices are sometimes used to improve the "
		"performance of installed software; the Intel-compatible "
		"microprocessors can execute the 32-bit code of a virtual device "
		"more efficiently than the 16-bit code of an MS-DOS device driver "
		"or TSR."): ToSubClass,
		Locale (0x409), UUID ("{8502C4C8-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_DriverVXD:CIM_SoftwareElement
{
        [read : ToSubClass,
		Description ("The Control property indicates the offset address to the "
		"driver's control procedures. The virtual machine manager calls this "
		"procedure to send control messages to the virtual device system. The "
		"system control messages direct the virtual device to carry out "
		"actions. An example of an action is initializing itself; another is "
		"notifying the virtual device of changes to virtual machines (such "
		"as a virtual machine is being created)."): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Control "
		"Procedure"}: ToSubClass]
    string Control ;

        [read : ToSubClass, 
		Description ("The DeviceDescriptorBlock property indicates the offset "
		"address to the device descriptor block (DDB) structure. The DDB "
		"contains information that the operating system uses to execute the "
		"procedures of the driver, including its location in the interrupt list, and "
		"other data to run and communicate with this VXD."): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Descriptor "
		"Block"}: ToSubClass ] 
    string DeviceDescriptorBlock ;
        
		[read : ToSubClass,
	Description ("The PM_API indicates the offset address to the "
		"protected mode application programming interface for this VXD.  "
		"These functions can give applications direct access to the features "
		"of the VXD."): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Descriptor "
		"Block|PM_API"}: ToSubClass] 
    string PM_API ;
        
		[read : ToSubClass, 
		Description ("The ServiceTableSize property indicates the number of "
		"installed services and device driver services provided by the "
		"operating system.\nExample: 1024"): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Descriptor "
		"Block|ServiceTableSize"}: ToSubClass] 
    uint32 ServiceTableSize ;
        
		[read : ToSubClass, 
		Description ("The V86_API indicates the offset to the application "
		"programming interface for use under virtual 8086 mode. These "
		"functions can give applications direct access to the features of "
		"the VXD."): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Descriptor "
		"Block|V86_API"}: ToSubClass] 
    string V86_API ;
        
		[read : ToSubClass, Override ("Version"): ToSubClass,
		Description ("The Version property indicates the version of the VXD "
		"driver.\nExample: 3,51"): ToSubClass,
		MappingStrings {"Win32DDK|Virtual Devices|Device Descriptor "
		"Block|DDB_Dev_Major_Version,DDB_Dev_Minor_Version"}: ToSubClass] 
    string Version ;
};



     
        [DEPRECATED,  Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_DisplayConfiguration class represents "
		"configuration information for the display device on a Win32 "
		"system. This class is being deprecated in favor of the properties in "
		"Win32_VideoController, Win32_DesktopMonitor, and "
		"CIM_VideoControllerResolution"): ToSubClass,
		Locale (0x409), UUID ("{8502C4E4-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_DisplayConfiguration:CIM_Setting
{
        [DEPRECATED,  read: ToSubClass, 
		Description ("The BitsPerPel property indicates the number "
		"of bits used to represent the color in this configuration "
		"(the bits per pixel).\nExample: 8.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"BITSPIXEL"}: ToSubClass ] 
    uint32 BitsPerPel ;
        
		[DEPRECATED,  read: ToSubClass, key: ToSubClass, 
		MaxLen(260): ToSubClass,
		Description ("The DeviceName property indicates the name of the "
		"display device.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string DeviceName ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The DisplayFlags property indicates whether the "
		"display device is color (versus monochrome), and non-interlaced "
		"(versus interlaced). By masking its value with the DM_GRAYSCALE "
		"and DM_INTERLACED masks respectively, DisplayFlags "
		"indicates whether the display device is color (versus monochrome), "
		"and non-interlaced (versus interlaced). The DisplayFlags property "
		"contains two bits of information about the display.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmDisplayFlags "}: ToSubClass] 
    uint32 DisplayFlags ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Hertz"): ToSubClass,
		Description ("The DisplayFrequency property indicates the display's "
		"vertical refresh rate. The refresh rate for a monitor is the number of "
		"times the screen is redrawn per second (frequency).  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"VREFRESH"}: ToSubClass ] 
    uint32 DisplayFrequency ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The DitherType property indicates the dither type of "
		"the display. This property can assume predefined values of 1 to 5, or "
		"driver-defined values from 6 to 256. Line art dithering is a "
		"special dithering method that produces well-defined borders between "
		"black, white, and gray scalings. It is not suitable for images that "
		"include continuous graduations in intensity and hue (such as scanned "
		"photographs).  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmDitherType"}: ToSubClass,
		Values {"No Dithering", "Coarse Brush", "Fine Brush", "Line Art",
		"Greyscale"}: ToSubClass,
		ValueMap {"1", "2", "3", "4", "5"}: ToSubClass]
    uint32 DitherType ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The DriverVersion property indicates the release "
		"version of the display driver.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class|Ver"}: ToSubClass ] 
    string DriverVersion ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The ICMIntent (Image Color Matching Intent) property "
		"indicates the value of one of the three possible color "
		"matching methods (intents) that should be used by default. "
		"This property is used primarily for non-ICM applications. ICM "
		"applications establish intents by using the ICM functions. This "
		"property can assume predefined values of 1 to 3, or driver-defined "
		"values from 4 to 256.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmICMIntent"}: ToSubClass,
		Values {"Saturation", "Contrast", "Exact Color"}: ToSubClass,
		ValueMap {"1", "2", "3"}: ToSubClass] 
    uint32 ICMIntent ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The ICMMethod (Image Color Matching Method) property "
		"indicates how ICM is handled. For a non-ICM application, this "
		"property indicates if ICM is enabled or disabled. For ICM "
		"applications, the system examines this member to determine which "
		"part of the computer system handles ICM support.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmICMMethod "}: ToSubClass,
		Values {"Disabled", "Windows", "Device Driver", "Device"}: ToSubClass,
		ValueMap {"1", "2", "3", "4"}: ToSubClass] 
    uint32 ICMMethod ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Pixels"): ToSubClass,
		Description ("The LogPixels property contains the number of pixels "
		"per logical inch. This property is valid only with devices that work "
		"with pixels (this excludes devices such as printers).  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmLogPixels"}: ToSubClass] 
    uint32 LogPixels ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Pixels"): ToSubClass,
		Description ("The PelsHeight property indicates the height of the "
		"displayable surface.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmPelsHeight "}: ToSubClass] 
    uint32 PelsHeight ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Pixels"): ToSubClass,
		Description ("The PelsWidth property indicates the width of the "
		"displayable surface.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmPelsWidth "}: ToSubClass] 
    uint32 PelsWidth ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The SpecificationVersion property indicates the "
		"version number of the initialization data for the Win32 display "
		"device.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Printing and Print Spooler Structures|"
		"DEVMODE|dmSpecVersion"}: ToSubClass] 
    uint32 SpecificationVersion ;
};
     
        [DEPRECATED,  Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_DisplayControllerConfiguration class "
		"represents the video adapter configuration information of a "
		"Win32 system.  This class has been deprecated in favor of "
		"Win32_VideoController, Win32_DesktopMonitor, and "
		"CIM_VideoControllerResolution classes"): ToSubClass,
		Locale (0x409), UUID ("{8502C4E5-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_DisplayControllerConfiguration:CIM_Setting
{
        [DEPRECATED,  read: ToSubClass,
		Description ("The BitsPerPixel property indicates either the number "
		"of bits used to represent the color in this configuration, or "
		"the bits in each pixel.\nExample: 8  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"BITSPIXEL"}: ToSubClass ] 
    uint32 BitsPerPixel ;

        [DEPRECATED,  read: ToSubClass, 
		Description ("The ColorPlanes property indicates the current number of"
		"color planes used in the display configuration. A color plane is "
		"another way to represent pixel colors. Instead of assigning a single "
		"RGB value to each pixel, color planes separate the graphic into "
		"each of the primary color components (red, green, blue), and store them "
		"in their own planes. This allows for greater color depths on 8- "
		"and 16-bit video systems. Present graphics systems have the "
		"bitwidth large enough to store color depth information; meaning"
		"only one color plane is needed.\nExample: 1  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"PLANES"}: ToSubClass ] 
    uint32 ColorPlanes ;

        [DEPRECATED,  read: ToSubClass,
		Description ("The DeviceEntriesInAColorTable property indicates "
		"the number of color indexes in a color table of a display device. "
		"If the device has a color depth of no more than 8 bits per pixel. "
		"For devices with greater color depths, -1 is returned.\nExample: "
		"256  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMCOLORS"}: ToSubClass ] 
    uint32 DeviceEntriesInAColorTable ;

        [DEPRECATED,  read: ToSubClass,
		Description ("The DeviceSpecificPens property indicates the current "
		"number of device-specific pens. A value of 0xFFFFFFFF means the "
		"device does not support pens. Pens are logical properties that can "
		"be assigned by the display controller to display devices, and are "
		"used to draw lines, borders of polygons, and text."
		"\nExample: 3  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMPENS"}: ToSubClass ] 
    uint32 DeviceSpecificPens ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Pixels"): ToSubClass,
		Description ("The HorizontalResolution property indicates the "
		"current number of pixels in the horizontal direction (X axis) "
		"of the display.\nExample: 1024  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"HORZRES"}: ToSubClass ] 
    uint32 HorizontalResolution ;

        [DEPRECATED,  read: ToSubClass, key: ToSubClass, 
		Description ("The Name property contains the name of the adapter "
		"used in this configuration.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string Name ;

        [DEPRECATED,  read: ToSubClass, Units ("Hertz"): ToSubClass,
		Description ("The RefreshRate property indicates the refresh rate of "
		"the video adapter. A value of 0 or 1 indicates a default rate is "
		"being used. A value of -1 indicates that an optimal rate is being used."
		"\nExample: 72  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"HORZRESVREFRESH"}: ToSubClass ] 
    sint32 RefreshRate ;

        [DEPRECATED,  read: ToSubClass,
		Description ("The ReservedSystemPaletteEntries property indicates "
		"the current number of color index entries reserved for system use. "
		"This value is only valid for display settings that use an indexed "
		"palette. Indexed palettes are not used for color depths greater "
		"than 8 bits per pixel. If the color depth is more than 8 bits per "
		"pixel, this value is set to NULL.\nExample: 20  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMRESERVED"}: ToSubClass ] 
    uint32 ReservedSystemPaletteEntries ;

        [DEPRECATED,  read: ToSubClass,
		Description ("The SystemPaletteEntries property indicates "
		"the current number of color index entries reserved for system use. "
		"This value is only valid for display settings that use an indexed "
		"palette . Indexed palettes are not used for color depths greater "
		"than 8 bits per pixel. If the color depth is more than 8 bits per "
		"pixel, this value is set to NULL.\nExample: 20  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMRESERVED"}: ToSubClass ] 
    uint32 SystemPaletteEntries ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Pixels"): ToSubClass,
		Description ("The VerticalResolution property indicates the current "
		"number of pixels in the vertical direction (Y axis) of the display."
		"\nExample: 768  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"VERTRES"}: ToSubClass ] 
    uint32 VerticalResolution ;
  
		[DEPRECATED,  read: ToSubClass, 
		Description ("The VideoMode property contains a user readable "
		"description of the current screen resolution and color setting "
		"of the display.\nExample: 1024 X 768 with 256 colors.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string VideoMode ;
};






        [DEPRECATED, 
		Description ("The Win32_VideoConfiguration class is not active in "
		"releases after Windows 2000. It will not return any instances as "
		"there is no provider backing it.  \n"
		"The Win32_VideoConfiguration class represents a "
		"configuration of a video subsystem.  This class has been "
		"deprecated in favor of the properties contained in the "
		"Win32_VideoController, Win32_DesktopMonitor, and "
		"CIM_VideoControllerResolution classes"): ToSubClass,
		Locale (0x409), UUID ("{8502C4ED-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_VideoConfiguration:CIM_Setting
{
		[DEPRECATED,  read: ToSubClass, Units ("Bits Per Pixel"):ToSubClass,
		Description ("The ActualColorResolution property indicates the "
		"current color depth of the video display.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"COLORRES"}: ToSubClass] 
    uint32 ActualColorResolution ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The AdapterChipType property contains the name of "
		"the adapter chip.\nExample: s3  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class\\Info|ChipType"}: ToSubClass] 
    string AdapterChipType ;
        
		[DEPRECATED,  read: ToSubClass, key: ToSubClass, 
		MaxLen (256): ToSubClass,
		Description ("The AdapterCompatibility property specifies the "
		"name of the manufacturer of the adapter.  This name can be used to "
		"compare the compatibility of this device with the needs of the "
		"computer system.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string AdapterCompatibility ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The AdapterDACType property indicates the name of the "
		"digital-to-analog chip (DAC) used in the adapter.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class\\Info|DACType"}: ToSubClass ] 
    string AdapterDACType ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The AdapterDescription property contains a description "
		"or descriptive name of the video adapter.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string AdapterDescription ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Bytes"): ToSubClass,
		Description ("The AdapterRAM property indicates the memory size of "
		"the video adapter.\nExample: 16777216  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class\\Info|VideoMemory"}: ToSubClass ] 
    uint32 AdapterRAM ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The AdapterType property indicates the type of video adapter."
        "\nCharacter Set: Alphanumeric  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|HARDWARE\\Description\\System\\"
		"DisplayController\\0\\Identifier"}: ToSubClass] 
    string AdapterType ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The BitsPerPixel property indicates the actual number "
		"of bits per pixel representing the display.  This may be scaled to "
		"the current video setting (represented by the ActualColorResolution "
		"property) of the user.\nExample: 8  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"BITSPIXEL"}: ToSubClass ] 
    uint32 BitsPerPixel ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The ColorPlanes property indicates the current number "
		"of color planes used in the video display.  A color plane is "
		"another way to represent pixel colors; instead of assigning a single "
		"RGB value to each a pixel, color planes separate the graphic into "
		"each of the primary color components (red green blue), and store them "
		"in their own planes.  This allows for greater color depths on 8 "
		"and 16 bit video systems.   Present graphics systems have the "
		"bitwidth large enough to store color depth information, making only one color plane necessary."
		"\nExample: 1  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"PLANES"}: ToSubClass ] 
    uint32 ColorPlanes ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The ColorTableEntries property indicates "
		"the number of color indexes in a color table for a video display. "
		"This property is used if the device has a color depth of no more "
		"than 8 bits per pixel. For devices with greater color depths, "
		"-1 is returned.\nExample: 256  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMCOLORS"}: ToSubClass ] 
    uint32 ColorTableEntries ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The DeviceSpecificPens property indicates the current "
		"number of device-specific pens.  A value of 0xFFFFFFFF means the "
		"device does not support pens.  Pens are used to draw lines and the"
		"borders of polygonal objects.\nExample: 3  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"NUMPENS"}: ToSubClass ] 
    uint32 DeviceSpecificPens ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The DriverDate property indicates the date and time "
		"the current video driver was installed.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class\\AdapterDescription|DriverDate"}: ToSubClass ] 
    datetime DriverDate ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The HorizontalResolution property indicates the "
		"current number of pixels in the horizontal direction (X axis) "
		"of the display.\nExample: 1024  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"HORZRES"}: ToSubClass ] 
    uint32 HorizontalResolution ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The InfFilename property specifies the path to the "
		".inf file of the video driver.\nExample: C:\\WINNT\\SYSTEM32\\"
		"DRIVERS  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class|InfPath"}: ToSubClass] 
    string InfFilename ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The InfSection property indicates the section of the "
		".inf file where the Win32 video information resides.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services\\"
		"Class|InfSection"}: ToSubClass ] 
    string InfSection ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The InstalledDisplayDrivers property indicates the "
		"name of the installed video driver.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services"
		"\\Class\\Defaule|drv"}: ToSubClass ]  
    string InstalledDisplayDrivers ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The MonitorManufacturer property indicates the name "
		"of the manufacturer of the display device.\nExample: NEC  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string MonitorManufacturer ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The MonitorType property indicates the model name of "
		"the display device.\nExample: NEC 5FGp  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|HARDWARE\\Description\\System\\"
		"MonitorPeripheral\\0|Identifier"}: ToSubClass ] 
    string MonitorType ;
        
		[DEPRECATED,  read: ToSubClass, key: ToSubClass, 
		MaxLen (256): ToSubClass,
		Description ("The Name property contains an identifying name for "
		"the video configuration class.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string Name ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The PixelsPerXLogicalInch property indicates the "
		"number of pixels per logical inch along the X axis (horizontal "
		"direction) of the display.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"LOGPIXELSX"}: ToSubClass] 
    uint32 PixelsPerXLogicalInch ;
        
		[DEPRECATED,  read: ToSubClass,
		Description ("The PixelsPerYLogicalInch property indicates the "
		"number of pixels per logical inch along the Y axis (vertical "
		"direction) of the display.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"LOGPIXELSY"}: ToSubClass ] 
    uint32 PixelsPerYLogicalInch ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The RefreshRate property indicates the refresh rate of "
		"the video configuration.  A value of 0 or 1 indicates a default rate "
		"is being used.\nExample: 72  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"VREFRESH"}: ToSubClass ] 
    uint32 RefreshRate ;
       
		[DEPRECATED,  read: ToSubClass, 
		Description ("The ScanMode property determines whether the display "
		"device is interlaced.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32Registry|System\\CurrentControlSet\\Services|"
		"Device0|DefaultSettings.Interlaced"}: ToSubClass,
		Values {"Non Interlaced", "Interlaced"}: ToSubClass] 
    string ScanMode ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Millimeters"): ToSubClass,
		Description ("The ScreenHeight property specifies the height of the "
		"physical screen.  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"VERTSIZE"}: ToSubClass ] 
    uint32 ScreenHeight ;
        
		[DEPRECATED,  read: ToSubClass, Units ("Millimeters"): ToSubClass,
		Description ("The ScreenWidth property specifies the width of the "
		"physical screen.   \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"HORZSIZE"}: ToSubClass ] 
    uint32 ScreenWidth ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The SystemPaletteEntries property indicates "
		"the current number of color index entries reserved for system use. "
		"This value is only valid for display settings that use an indexed "
		"palette . Indexed palettes are not used for color depths greater "
		"than 8 bits per pixel. If the color depth is more than 8 bits per "
		"pixel, this value is set to NULL.\nExample: 20  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"SIZEPALETTE"}: ToSubClass ] 
    uint32 SystemPaletteEntries ;
        
		[DEPRECATED,  read: ToSubClass, 
		Description ("The VerticalResolution property indicates the "
		"current number of pixels in the vertical direction (Y axis) "
		"of the display.\nExample: 768  \n"
		"This property has been deprecated in favor of a corresponding "
		"property(s) contained in the Win32_VideoController, Win32_DesktopMonitor "
		"and//or CIM_VideoControllerResolution"): ToSubClass,
		MappingStrings {"Win32API|Device Context Functions|GetDeviceCaps|"
		"VERTRES"}: ToSubClass ] 
    uint32 VerticalResolution ;
};





		[Dynamic, Provider ("CIMWin32"), 
		Description ("The WIn32_VideoSettings class represents an association "
		"between a video controller and video settings that can be applied "
		"to it."): ToSubClass, 
		Locale (0x409), UUID ("{1008CCEE-7BFF-11D2-AAD2-006008C78BC7}") ] 
class Win32_VideoSettings : CIM_VideoSetting
{
		[Read: ToSubClass, Key: ToSubClass, Override ("Element"): ToSubClass, 
		Description ("The Element reference represents the "
		"Win32_VideoController containing the properties of the video "
		"controller that a video setting can be used on."): ToSubClass,
		MappingStrings {"WMI|Win32_VideoController"}: ToSubClass] 
	Win32_VideoController REF Element;

		[Read: ToSubClass, Key: ToSubClass, Override ("Setting"): ToSubClass, 
		Description ("The Setting reference represents a "
		"CIM_VideoControllerResolution containing settings that can be "
		"applied to the video controller."): ToSubClass,
		MappingStrings {"CIM|CIM_VideoControllerResolution"}: ToSubClass]
   CIM_VideoControllerResolution REF Setting;
};


        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_SoundDevice class represents the properties of "
		"a sound device on a Win32 computer system."): ToSubClass,
		Locale (0x409), UUID ("{8502C50C-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_SoundDevice:CIM_LogicalDevice
{
		[Read: ToSubClass, Override("DeviceId"),
		Key: ToSubClass, MaxLen (260): ToSubClass,
		Description ("The DeviceID property contains information "
		"that uniquely identifies the sound device."): ToSubClass,
		MappingStrings {"Win32Registry|SYSTEM\\CurrentControlSet\\control\\"
		"MediaResources\\wave|DeviceID"}: ToSubClass] 
    string DeviceID ;
        
		[read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The DMABufferSize property indicates the size of the "
		"Direct Memory Access buffer.\nExample: 4"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    uint16 DMABufferSize;
        
		[read: ToSubClass, 
		Description ("The Manufacturer property names the manufacturer "
		"of the sound device.\nExample: Creative Labs"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    string Manufacturer;
        
		[read: ToSubClass, 
		Description ("The MPU401Address property indicates the starting I/O "
		"address assigned to the MPU-401 port of the sound device."
		"\nExample: 300"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass ] 
    uint32 MPU401Address;
        
		[read: ToSubClass, 
		Description ("The ProductName property indicates the product "
		"name of the sound device.\nExample: Creative Labs SoundBlaster "
		"AWE64PNP"): ToSubClass,
		MappingStrings {"Win32API|Multimedia Structures|WAVEOUTCAPS|"
		"szPname"}: ToSubClass ] 
    string ProductName ;
};


