        [Description (
        "The Win32_PrivilegesStatus class reports information about privileges required "
        "to complete an operation.  It may be returned when an operation failed, "
        "or when a partially populated instance has been returned."): ToSubClass,
		Locale (0x409), UUID ("{BE46D060-7A7C-11d2-BC85-00104B2CF71C}") ] 
class Win32_PrivilegesStatus:__ExtendedStatus
{
		[read : ToSubClass,
		Description ("The PrivilegesNotHeld property indicates required access "
		"privileges missing in order to complete an operation.  The types of"
		"access privileges can be found under the Windows NT Privileges.  "
		"Example: SE_SHUTDOWN_NAME"): ToSubClass,
		MappingStrings {"Win32API|AccessControl|Windows NT Privileges"}: ToSubClass]
	string PrivilegesNotHeld[];

		[read : ToSubClass,
		Description ("The PrivilegesRequired property indicates all "
		"privileges required to perform an operation.  This includes values "
		"from the PrivilegesNotHeld property.\nExample: " 
		"SE_SHUTDOWN_NAME"): ToSubClass,
		MappingStrings {"Win32API|AccessControl|Windows NT Privileges"}: ToSubClass]
	string PrivilegesRequired[];
};




        [Abstract,
		Description ("The Win32_MethodParameter class is a base class for"
		"implementation of method parameters derived from this class."): ToSubClass,
		Locale (0x409), UUID ("{8502C4DA-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_MethodParameterClass
{
};
    



instance of __Win32Provider as $PINTERNAL
{
    Name = "WBEMCORE";
    ClsId = "{A83EF168-CA8D-11d2-B33D-00104BCC4B4A}";
    ImpersonationLevel = 1;
    PerUserInitialization = "FALSE";
    HostingModel = "WmiCore";
};
instance of __InstanceProviderRegistration
{
    Provider = $PINTERNAL;
    SupportsGet = "TRUE";
    SupportsPut = "TRUE";
    SupportsEnumeration = "TRUE";
};

	[Singleton, Dynamic, Provider ("WBEMCORE"),
	Description("The Win32_WMISetting class is a Singleton class that "
	"contains the operational parameters for the WMI service. "
	"Win32_WMISetting can only have one instance. This single instance "
	"always exists for each Win32 system, and cannot be deleted. "
	"Additional instances cannot be created."): ToSubClass,
	Locale (0x409), UUID("{A83EF166-CA8D-11d2-B33D-00104BCC4B4A}") ] 
class Win32_WMISetting:CIM_Setting
{
		[read: ToSubClass, 
		Description ("The InstallationDirectory property contains the "
		"directory path where the WMI software has been installed. "
		"The default location is: \\system32\\wbem."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM|"
		"Installation Directory"}: ToSubClass]
	string InstallationDirectory;
				
		[read: ToSubClass, 
		Description ("The BuildVersion property contains version "
		"information for the currently installed WMI service."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM|"
		"Build"}: ToSubClass]
	string BuildVersion;
				
		[read: ToSubClass, 
		Description ("The MofSelfInstallDirectory property contains the "
		"directory path for applications that install MOF files to the CIM "
		"repository. WMI automatically compiles any MOF files placed "
		"in this directory and, depending on its success, moves the MOF to a "
		"subdirectory labeled \"good\" or \"bad\". If the \"autorecover\" "
		"pragma is included, the fully qualified file name is added to the "
		"AutorecoverMofs list used when WMI is initializing or recovering the "
		"repository. The list determines the order in which MOFs are "
		"compiled."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM|"
		"MOF Self-Install Directory"}: ToSubClass]
	string MofSelfInstallDirectory;
		
		[read: ToSubClass, 
		Description("The AutoRecoverMofs property contains a list of "
		"fully qualified MOF file names used to initialize or recover "
		"the WMI repository. The list determines the order in which MOFs "
		"are compiled."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Autorecover MOFs"}: ToSubClass]
	string AutorecoverMofs[];
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The AutoStartWin9X property indicates the "
		"circumstances under which WMI will start on Win9X systems."): ToSubClass,
		Values{"Don't start", "Autostart", "Start on reboot"}: ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"AutostartWin9X"}: ToSubClass]
	uint32 AutoStartWin9X;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The EnableAnonWin9xConnections indicates whether "
		"remote access without security checking is permitted. This "
		"property only applies to Windows 95 and Windows 98 systems."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"EnableAnonConnections"}: ToSubClass]
	boolean EnableAnonWin9xConnections;
		
		[read: ToSubClass, write: ToSubClass, Units ("Bytes"): ToSubClass,
		Description("The MaxLogFileSize property indicates the maximum size "
		"of the log files produced by the WMI service."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Log File Max Size"}: ToSubClass]
	uint32 MaxLogFileSize;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The LoggingLevel property indicates whether "
		"event logging is enabled and the verbosity level of logging "
		"used."): ToSubClass,
		Values {"Off", "Error logging", "Verbose Error logging"}: ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Logging"}: ToSubClass]
	uint32 LoggingLevel;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The LoggingDirectory property specifies the "
		"directory path containing the location of the WMI system "
		"log files."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Logging Directory"}: ToSubClass]
	string LoggingDirectory;
		
		[read: ToSubClass, 
		Description("The DatabaseDirectory property specifies the directory "
		"path containing the WMI repository."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Repository Directory"}: ToSubClass]
	string DatabaseDirectory;
		
		[read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description("The DatabaseMaxSize property specifies the maximum size "
		"of the WMI repository."): ToSubClass, 
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Max DB Size"}: ToSubClass]
	uint32 DatabaseMaxSize;
		
		[read: ToSubClass, write: ToSubClass,  Units ("Minutes"): ToSubClass,
		Description("The BackupInterval property specifies the length of time "
		"that will elapse between backups of the WMI database."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Backup Interval Threshold"}: ToSubClass]
	uint32 BackupInterval;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The BackupLastTime property specifies the date and time "
		"the last backup was performed."): ToSubClass,
		MappingStrings {"Win32API|Time Functions|"
		"GetTimeZoneInformation"}: ToSubClass]
	datetime BackupLastTime;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The ASPScriptEnabled property indicates whether WMI "
		"scripting can be used on Active Server Pages (ASP). This property "
		"is valid on Windows NT 4.0 systems only. For Windows 2000 systems, "
		"WMI scripting is always allowed on ASP."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\scripting|"
		"Enable for ASP"}: ToSubClass]
	boolean ASPScriptEnabled;
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The ASPScriptDefaultNamespace property contains the namespace "
		"used by calls from the script API if none is specified by the "
		"caller."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\scripting|"
		"Default Namespace"}: ToSubClass]
	string ASPScriptDefaultNamespace = "\\\\root\\cimv2";
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The EnableEvents property indicates whether the WMI "
		"event subsystem should be enabled.\nValues: TRUE or FALSE, If TRUE,"
		"then the event subsystem is enabled."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"EnableEvents"}: ToSubClass]
	boolean EnableEvents;
		
		[read: ToSubClass, write: ToSubClass, 
		Units ("Objects per second"): ToSubClass,
		Description("The HighThresholdOnClientObjects property specifies the "
		"maximum rate provider created objects can be delivered "
		"to clients. To accommodate speed differentials between providers and clients, WMI holds objects in queues before delivering "
		"them to consumers."
		". WMI slows down the addition of "
		"new objects into the queue when the low threshold is reached. If "
		"this does not help, and high threshold (specified by this property) "
		"is reached, WMI will accept no more objects from providers and "
		"return WBEM_E_OUT_OF_MEMORY to the clients."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"High Threshold On Client Objects"}: ToSubClass]
	uint32 HighThresholdOnClientObjects; 
		
		[read: ToSubClass, write: ToSubClass, 
		Units ("Objects per second"): ToSubClass, 
		Description("The LowThresholdOnClientObjects property specifies "
		"the rate at which WMI will start to slow the creation of new objects "
		"created for clients. To accommodate speed differentials between providers and clients, WMI holds objects in queues before delivering "
		"them to consumers."
		". If the rate of requests for objects "
		"grows out of control, WMI gradually slows down the creation of new "
		"objects to match the client's rate of use. This slowdown starts "
		"when the rate at which objects are being created exceeds the value "
		"of this property. The slowdown continues until equilibrium "
		"is achieved, or the high threshold is reached."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Low Threshold On Client Objects"}: ToSubClass]
	uint32 LowThresholdOnClientObjects; 

		[read: ToSubClass, write: ToSubClass, Units("Milliseconds"): ToSubClass,
		Description("The MaxWaitOnClientObjects property specifies "
		"the amount of time a newly created object waits to be used by "
		"the client before it is discarded and an error value is "
		"returned."): ToSubClass, 
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Max Wait On Events"}: ToSubClass]
	uint32 MaxWaitOnClientObjects; 
		
		[read: ToSubClass, write: ToSubClass,
		Units ("Events per second"): ToSubClass,
		Description("The HighThresholdOnEvents property specifies the "
		"maximum rate at which events are to be delivered to clients. To accommodate speed differentials between providers and clients, WMI queues "
		"events before delivering them to consumers."
		". WMI slows down "
		"the addition of new events into the queue when the low threshold "
		"is reached. If this does not help, and high threshold (specified "
		"by this property) is reached, WMI will accept no more events "
		"from providers and return WBEM_E_OUT_OF_MEMORY to the "
		"clients."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"High Threshold On Events"}: ToSubClass]
	uint32 HighThresholdOnEvents; 
		
		[read: ToSubClass, write: ToSubClass, 
		Units ("Events per second"): ToSubClass,
		Description("The LowThresholdOnEvents property specifies "
		"the rate at which  WMI will start to slow the delivery of new events. "
		"to accommodate speed differentials between providers and clients, WMI queues events before delivering them to consumers."
		" If the queue grows out of control, WMI slows down "
		"the delivery of events gradually to get them in line "
		"with the client's rate . This slowdown starts when the rate at "
		"which events are generated exceeds the value of the this "
		"property. The slowdown continues until either the equilibrium is achieved, "
		"or the high threshold is reached."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Low Threshold On Events"}: ToSubClass]
	uint32 LowThresholdOnEvents; 
		
		[read: ToSubClass, write: ToSubClass, Units("Milliseconds"): ToSubClass,
		Description("The MaxWaitOnEvents property specifies the amount "
		"of time an event sent to a client is queued before being "
		"discarded."): ToSubClass, 
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"Max Wait On Events"}: ToSubClass]
	uint32 MaxWaitOnEvents; 
		
		[read: ToSubClass, write: ToSubClass, 
		Description("The EnableStartupHeapPreallocation property indicates "
		"whether WMI will start with a pre-allocated heap.\nValues: TRUE "
		"or FALSE. If TRUE, then a pre-allocated heap with the size of "
		"LastStartupHeapPreallocation is created when WMI is "
		"initialized."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"EnableStartupHeapPreallocation"}: ToSubClass]
	boolean EnableStartupHeapPreallocation;
		
		[read: ToSubClass, Units ("Bytes"): ToSubClass,
		Description("The LastStartupHeapPreallocation property "
		"specifies the size of the pre-allocated heap created by WMI "
		"during initialization."): ToSubClass,
		MappingStrings {"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|"
		"LastStartupHeapPreallocation"}: ToSubClass]
 	uint32 LastStartupHeapPreallocation;
};

		[Dynamic, Provider ("WBEMCORE") ,
		Description ("The Win32_WMIElementSetting class represents an "
		"association between a service running in the Win32 system, and "
		"the WMI settings it can use."): ToSubClass,
		Locale (0x409), UUID ("{A83EF167-CA8D-11d2-B33D-00104BCC4B4A}") ] 
class Win32_WMIElementSetting:CIM_ElementSetting
{
		[read: ToSubClass, key: ToSubClass, Override ("Element"): ToSubClass,
		Description ("The Element reference in the Win32_WMIElementSetting "
		"association, represents the Win32 service using or surfacing "
		"WMI properties."): ToSubClass,
		MappingStrings {"WMI|Win32_Service"}: ToSubClass] 
	Win32_Service REF Element;

		[read: ToSubClass, key: ToSubClass, Override ("Setting"): ToSubClass,
		Description ("The Setting reference in the Win32_WMIElementSetting "
		"association, represents the WMI settings available to the Win32 "
		"service."): ToSubClass,
		MappingStrings {"WMI|Win32_WMISetting"}: ToSubClass] 
	Win32_WMISetting REF Setting;
};



