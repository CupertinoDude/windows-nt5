
        [Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_Battery class represents a battery connected "
		"to the computer system. This class applies to both batteries in Laptop "
		"Systems and other internal/external batteries."): ToSubClass,
		Locale (0x409), UUID ("{8502C4B9-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_Battery:CIM_Battery
{

		[Read: ToSubClass , Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string identifying "
		"the battery.\nExample: Internal Battery"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
	string DeviceID ;

		[read: ToSubClass, DEPRECATED:ToSubClass, Units ("Minutes"): ToSubClass,
		Description ("The ExpectedBatteryLife property indicates the amount "
		"of time it takes to completely drain the battery after it has "
		"been fully charged. \n"
		"The ExpectedBatteryLife property has been deprecated.  There is no replacement"
		"value and this property is now considered obsolete."): ToSubClass,
		MappingStrings {"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\"
		"Services|BatteryLife"}: ToSubClass] 
    uint32 ExpectedBatteryLife ;

        [read: ToSubClass, DEPRECATED:ToSubClass,  Units ("Minutes"): ToSubClass,
		Description ("The BatteryRechargeTime property indicates the time "
		"required to fully charge the battery. \n"
		"The BatteryRechargeTime property has been deprecated.  There is no replacement"
		"value and this property is now considered obsolete."): ToSubClass, 
		MappingStrings{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\"
		"Services|RechargeRate"}: ToSubClass] 
    uint32 BatteryRechargeTime ;
};




        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_AssociatedBattery represents an "
		"association between a logical device and the battery it "
		"is using."): ToSubClass,
		Locale (0x409), UUID ("{8502C50B-5FBB-11D2-AAC1-006008C78BC7}")] 
class Win32_AssociatedBattery:CIM_AssociatedBattery
{
        [Key: ToSubClass, read: ToSubClass, Override ("Antecedent"): ToSubClass , 
		Description ("The Antecedent reference represents the properties of "
		"a battery used with the logical device."): ToSubClass,
		MappingStrings {"CIM|CIM_Battery"}: ToSubClass] 
    CIM_Battery REF Antecedent;

        [Key: ToSubClass, read: ToSubClass, Override ("Dependent"): ToSubClass , 
		Description ("The Dependent reference represents the properties of "
		"a logical device using the battery."): ToSubClass,
		MappingStrings {"CIM|CIM_LogicalDevice"}: ToSubClass] 
    CIM_LogicalDevice REF Dependent;
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_PortableBattery class contains the  "
		"the population of the DMTF|Portable Battery group, as defined "
		"in the DMTF Mobile Supplement to Standard Groups, v1.0 (section "
		"3.3.23 of the SMBIOS spec) and describes the attributes of the "
		"portable battery(s) for the system.  The class contains the "
		"static attributes for the group and describes a single battery "
		"pack’s attributes."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B9E-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_PortableBattery:CIM_Battery
{
		[Read: ToSubClass , Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string identifying "
		"the portable battery.\nExample: Portable Battery"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
	string DeviceID ;

		[read: ToSubClass, 
		Description ("The Location property indicates the physical location "
		"of the battery. This property is filled by the computer manufacturer."
		"\nExample: In the back, on the left-hand side"): ToSubClass, 
		MappingStrings {"SMBIOS|Type 22|Location"}: ToSubClass] 
	string Location;
		
		[read: ToSubClass, 
		Description ("The ManufactureDate property identifies the date when the "
		"battery was manufactured."): ToSubClass,
		MappingStrings {"SMBIOS|Type 22|Manufacture Date"}: ToSubClass] 
	string ManufactureDate;

		[read: ToSubClass, 
		Description ("The Manufacturer property indicates the manufacturer of the "
		"battery."): ToSubClass,
		MappingStrings {"SMBIOS|Type 22|Manufacturer"}: ToSubClass] 
	string Manufacturer;

		[read: ToSubClass, Units("Percent"): ToSubClass,
		Description ("The MaxBatteryError property indicates the difference "
		"between the highest estimated amount of energy left in the battery and "
		"the current amount reported by the battery."): ToSubClass,
		MappingStrings {"SMBIOS|Type 22|Maximum Error in Battery Data"}: ToSubClass]
	uint16 MaxBatteryError;

		[read: ToSubClass, 
		Description ("The CapacityMultiplier property contains the multiplication factor "
		"of the Design Capacity value to ensure that the milliwatt hour value "
		"does not overflow for Smart Battery Data Specification (SBDS) "
		"implementations."): ToSubClass ,
		MappingStrings {"SMBIOS|Type 22|Design Capacity Multiplier"}: ToSubClass] 
	uint16 CapacityMultiplier;
};



	[Description ("The Win32_PowerManagementEvent class represents power "
	"management events resulting from power state changes. These state "
	"changes are associated with either the Advanced Power Management(APM) "
	"or the Advanced Configuration and Power Interface(ACPI) system "
	"management protocols."): ToSubClass,
	Locale (0x409), UUID("{86460B6B-E709-11d2-B139-00105A1F77A1}") ] 
class Win32_PowerManagementEvent : __ExtrinsicEvent
{
		[read: ToSubClass,
		Description ("The EventType property indicates the type of change in "
		"the system power state."): ToSubClass,
		MappingStrings {"Win32API|Power Management Events"}: ToSubClass,
		Values {"Entering Suspend", "Resume from Suspend", 
		"Power Status Change", "OEM Event",	"Resume Automatic"}: ToSubClass,
		ValueMap {"4", "7", "10", "11", "18"}: ToSubClass] 
	uint16 EventType ;

		[read: ToSubClass,
		Description ("The OEMEventCode property indicates the system "
		"power state defined by the original equipment manufacturer "
		"(OEM) when the EventType property of this class is set to \"OEM "
		"Event\", otherwise, this property is set to NULL. OEM events are "
		"generated when an APM BIOS signals an APM OEM event. OEM event "
		"codes are in the range 0x0200h - 0x02FFh."): ToSubClass,
		MappingStrings {"Win32API|Power Management Events"}: ToSubClass] 
	uint16 OEMEventCode;
};

instance of __Win32Provider as $PowerEvent
{
	Name = "MS_Power_Management_Event_Provider";
	ClsId = "{3DD82D10-E6F1-11d2-B139-00105A1F77A1}";
	HostingModel = "LocalSystemHost";
};

instance of __EventProviderRegistration
{
	Provider = $PowerEvent;
	EventQueryList = {"select * from Win32_PowerManagementEvent"};
};



