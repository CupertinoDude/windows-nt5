

     
        [DEPRECATED, Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_LogicalMemoryConfiguration class represents "
		"the layout and availability of memory on a Win32 system.  This "
		"class is being deprecated in favor of the Win32_OperatingSystem "
		"class."): ToSubClass,
		Locale (0x409), UUID ("{8502C4E6-5FBB-11D2-AAC1-006008C78BC7}") ] 
class Win32_LogicalMemoryConfiguration:CIM_Setting
{
		[DEPRECATED, read: ToSubClass, key: ToSubClass,
		Description ("The Name property indicates that this "
		"class represents a logical memory configuration."
		"\nExample: LogicalMemoryConfiguration.  This property "
		"has been deprecated in favor of the inherited name "
		"property in CIM_OperatingSystem class."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
    string Name ;
        
		[DEPRECATED, read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The AvailableVirtualMemory property indicates the "
		"available (unreserved or uncommitted) amount of memory that a "
		"calling process can use. This property has been deprecated in "
		"favor of the FreeVirtualMemory property in CIM_OperatingSystem "
		"class."): ToSubClass,
		MappingStrings {"Win32API|Memory Management Structures|"
		"MEMORYSTATUSEX|ullAvailVirtual"}: ToSubClass ] 
    uint32 AvailableVirtualMemory ;
        
		[DEPRECATED, read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The TotalPageFileSpace property indicates the total "
		"amount of memory that can be stored in the paging file. "
		"This property has been deprecated in favor of the "
		"SizeStoredInPagingFiles property in CIM_OperatingSystem "
		"class."): ToSubClass,
		MappingStrings {"Win32API|Memory Management Structures|"
		"MEMORYSTATUSEX|ullTotalPageFile"}: ToSubClass ] 
    uint32 TotalPageFileSpace ;
        
		[DEPRECATED, read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The TotalPhysicalMemory property indicates the total "
		"amount of physical memory as available to the operating system. "
		"This property has been deprecated in "
		"favor of the TotalVisibleMemorySize property in CIM_OperatingSystem "
		"class."): ToSubClass,
		MappingStrings {"Win32API|Memory Management Structures|"
		"MEMORYSTATUSEX|ullTotalPhys"}: ToSubClass ] 
    uint32 TotalPhysicalMemory ;
        
		[DEPRECATED, read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The TotalVirtualMemory property indicates the total "
		"amount of memory available to a calling process. This property has "
		"been deprecated in favor of the TotalVirtualMemorySize property "
		"in CIM_OperatingSystem class."): ToSubClass,
		MappingStrings {"Win32API|Memory Management Structures|"
		"MEMORYSTATUSEX|ullTotalVirtual"}: ToSubClass ] 
    uint32 TotalVirtualMemory ;
};



        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_PhysicalMemory class represents a physical "
		"memory device located on a computer system as available to the "
		"operating system."): ToSubClass, 
		Locale (0x409), UUID ("{FAF76B93-798C-11D2-AAD1-006008C78BC7}") ]  
class Win32_PhysicalMemory:CIM_PhysicalMemory
{
        [Read: ToSubClass, Key: ToSubClass,
		MaxLen (256): ToSubClass, Override ("Tag"): ToSubClass,
		Description ("The Tag property contains a string that uniquely "
		"identifies the physical memory device represented by an instance "
		"of Win32_PhysicalMemory.\nExample: Physical Memory 1"): ToSubClass, 
		MappingStrings {"WMI"}: ToSubClass ]
    string Tag;

		[read: ToSubClass, 
		Description ("The DeviceLocator property indicates the label "
		"of the socket or circuit board that holds this memory."
		"\nExample: SIMM 3"): ToSubClass, 
		MappingStrings {"SMBIOS|Type 17|Device Locator"}: ToSubClass] 
    string DeviceLocator;

        [read: ToSubClass,
		Description ("The TypeDetail property indicates the type of physical "
		"memory represented by Win32_PhysicalMemory."): ToSubClass , 
		MappingStrings {"SMBIOS|Type 17|Type Detail"}: ToSubClass,
		BitValues {"Reserved", "Other", "Unknown", "Fast-paged", "Static column", 
        "Pseudo-static", "RAMBUS", "Synchronous", "CMOS", "EDO", 
        "Window DRAM", "Cache DRAM", "Non-volatile"}: ToSubClass] 
    uint16 TypeDetail;

		[read: ToSubClass,
		Description ("The InterleaveDataDepth property indicates the maximum "
		"number of consecutive rows of data that are accessed in a single "
		"interleaved transfer from the memory device. If the value is "
		"0, then the memory is not interleaved."): ToSubClass , 
		MappingStrings {"SMBIOS|Type 20|Interleaved Data Depth"}: ToSubClass]
    uint16 InterleaveDataDepth;
};




		[Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_CacheMemory class represents cache memory "
		"(internal and external) on a computer system."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B97-798C-11D2-AAD1-006008C78BC7}")] 
class Win32_CacheMemory:CIM_CacheMemory
{
		[Read: ToSubClass, Key: ToSubClass,
		Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string that "
		"uniquely identifies the cache represented by an instance of "
		"Win32_CacheMemory.\nExample: Cache Memory 1"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass]
	string DeviceID ;

		[read: ToSubClass, 
		Description ("The Location property indicates the physical "
		"location of the cache memory."): ToSubClass,
		Values {"Internal", "External", "Reserved", "Unknown"}: ToSubClass ,
		MappingStrings {"SMBIOS|Type 7|Location"}: ToSubClass] 
	uint16 Location;

		[read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The MaxCacheSize property indicates the maximum "
		"cache size installable to this particular cache memory."): ToSubClass , 
		MappingStrings {"SMBIOS|Type 7|Maximum Cache Size"}: ToSubClass]
	uint32 MaxCacheSize;

		[read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The InstalledSize property indicates the current "
		"size of the installed cache memory."): ToSubClass, 
		MappingStrings {"SMBIOS|Type 7|Installed Size"}: ToSubClass] 
	uint32 InstalledSize;

		[read: ToSubClass,
		Description ("The SupportedSRAM property indicates the supported "
		"types of Static Random Access Memory (SRAM) that can be used for "
		"the cache memory."): ToSubClass , 
		Values {"Other", "Unknown", "Non-Burst", "Burst", "Pipeline Burst", 
		"Synchronous", "Asynchronous"}: ToSubClass, 
		MappingStrings {"SMBIOS|Type 7|Supported SRAM Type"}: ToSubClass] 
	uint16 SupportedSRAM[];

		[read: ToSubClass, 
		Description ("The CurrentSRAM property indicates the "
		"types of Static Random Access Memory (SRAM) that being used for "
		"the cache memory."): ToSubClass , 
		Values {"Other", "Unknown", "Non-Burst", "Burst", "Pipeline Burst", 
		"Synchronous", "Asynchronous"}: ToSubClass, 
		MappingStrings {"SMBIOS|Type 7|Current SRAM Type"}: ToSubClass] 
	uint16 CurrentSRAM[];

		[read: ToSubClass, 
		Description ("The ErrorCorrectType property indicates the error "
		"correction method used by the cache memory."): ToSubClass , 
		Values {"Reserved", "Other", "Unknown", "None", "Parity", 
		"Single-bit ECC", "Multi-bit ECC"}: ToSubClass, 
		MappingStrings {"SMBIOS|Type 7|Error Correction Type"}: ToSubClass] 
	uint16 ErrorCorrectType;

        [read: ToSubClass, Units ("NanoSeconds"): ToSubClass,
        Description ("The CacheSpeed property specifies the speed of "
		"the cache in nanoseconds."): ToSubClass,
        MappingStrings {"SMBIOS|Type 7|Cache Speed"}: ToSubClass]
    uint32 CacheSpeed;
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_PhysicalMemoryArray class represents "
		"details about the computer system's physical memory. This "
		"includes the number of memory devices,  memory capacity "
		"available, and memory type (for example, system "
		"memory or video memory)."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B99-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_PhysicalMemoryArray:CIM_PhysicalPackage
{
		[read: ToSubClass, Key: ToSubClass,
		MaxLen (256): ToSubClass , Override ("Tag"): ToSubClass,
		Description ("The Tag property contains a string that uniquely "
		"identifies the physical memory array"
		".\nExample: Physical Memory Array 1"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass]
	string Tag;

		[read: ToSubClass,
		Description ("The Location property indicates the physical "
		"location of the memory array."): ToSubClass, 
		MappingStrings {"SMBIOS|Type 16|Location"}: ToSubClass,
		Values {"Reserved", "Other", "Unknown", "System board or motherboard",
		"ISA add-on card", "EISA add-on card", "PCI add-on card", 
		"MCA add-on card", "PCMCIA add-on card", "Proprietary add-on card", 
		"NuBus", "PC-98/C20 add-on card", "PC-98/C24 add-on card", 
		"PC-98/E add-on card", "PC-98/Local bus add-on card"}: ToSubClass] 
	uint16 Location;

		[read: ToSubClass,
		Description ("The Use property indicates how the memory is "
		"used in the computer system."): ToSubClass,
		MappingStrings {"SMBIOS|Type 16|Use"}: ToSubClass, 
		Values {"Reserved", "Other", "Unknown", "System memory",
		"Video memory", "Flash memory", "Non-volatile RAM", 
		"Cache memory"}: ToSubClass] 
	uint16 Use;
		
		[read: ToSubClass,
		Description ("The MemoryErrorCorrection property indicates the "
		"type of error correction used by the memory array."): ToSubClass , 
		MappingStrings {"SMBIOS|Type 16|Memory Error Correction"}: ToSubClass,
		Values {"Reserved", "Other", "Unknown", "None", "Parity", 
		"Single-bit ECC", "Multi-bit ECC", "CRC"}: ToSubClass] 
	uint16 MemoryErrorCorrection;
		
		[read: ToSubClass, Units ("Kilobytes"): ToSubClass,
		Description ("The MaxCapacity property indicates the maximum "
		"memory size (in bytes) installable for this particular memory "
		"array. If the size is unknown, the property is given a value "
		"of 0."): ToSubClass,
		MappingStrings {"SMBIOS|Type 16|Maximum Capacity"}: ToSubClass] 
	uint32 MaxCapacity;
		
		[read: ToSubClass, 
		Description ("The MemoryDevices property indicates the "
		"number of physical slots or sockets available in this "
		"memory array."): ToSubClass,
		MappingStrings {"SMBIOS|Type 16|"
		"Number of Memory Devices"}: ToSubClass] 
	uint16 MemoryDevices;
};

	[Abstract,
	Description ("The Win32_SMBIOSMemory class represents the properties "
	"of a computer system's memory as seen through the System "
	"Management BIOS (SMBIOS) interface. The SMBIOS interface does not "
	"distinguish between non-volatile, volatile, and flash memories. "
	"As such, the CIM_Memory class is the parent class of all types "
	"of memory."): ToSubClass,
	Locale (0x409), UUID ("{FECB095B-F0FA-11d2-8617-0000F8102E5F}") ] 
class Win32_SMBIOSMemory : CIM_StorageExtent
{
		[read: ToSubClass, Override ("ErrorMethodology"): ToSubClass,
		Description ("The ErrorMethodology property specifies the "
		"types of error checking used by the memory hardware."): ToSubClass,
		MappingStrings {"SMBIOS|Type 16|Physical Memory Array|"
		"Memory Error Correction"}: ToSubClass,
		Values {"Other", "Unknown", "None", "Parity", "Single-bit ECC",
		"Multi-bit ECC", "CRC"}: ToSubClass,
		ValueMap {"Other", "Unknown", "None", "Parity", "Single-bit ECC",
		"Multi-bit ECC", "CRC"}: ToSubClass]
	string ErrorMethodology;

		[read: ToSubClass, 
		Description ("The StartingAddress property specifies the beginning "
		"address referenced by an application or the operating system. "
		"This memory address is mapped by a memory controller for this "
		"memory object."): ToSubClass,
		MappingStrings {"SMBIOS|Type 19|Memory Device Mapped Addresses|"
		"Starting Address"}: ToSubClass]
	uint64 StartingAddress;
		
		[read: ToSubClass,
		Description ("The EndingAddress property specifies the "
		"ending address referenced by an application or operating "
		"system. This memory address is mapped by a memory controller "
		"for this memory object."): ToSubClass,
		MappingStrings {"SMBIOS|Type 19|Memory Device Mapped Addresses|"
		"Ending Address"}: ToSubClass]
	uint64 EndingAddress;
		
		[read: ToSubClass, 
		ModelCorrespondence {"CIM_Memory.OtherErrorDescription"}: ToSubClass,
		Description ("The ErrorInfo property contains an integer "
		"enumeration describing the type of error that occurred most "
		"recently.  The values, 12-14 are not used with this property. "
		"These values indicate whether an error is correctable but this "
		"information is found in the CorrectableError property."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Type"}: ToSubClass ,
		Values {"Other", "Unknown", "OK", "Bad Read", "Parity Error",
	   "Single-Bit Error", "Double-Bit Error", "Multi-Bit Error",
	   "Nibble Error", "Checksum Error", "CRC Error", 
	   "Corrected single-bit error", "Corrected error", 
	   "Uncorrectable error"}: ToSubClass,
   		ValueMap {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
	   "11", "12", "13", "14"}: ToSubClass]
	uint16 ErrorInfo;

		[read: ToSubClass,
		ModelCorrespondence {"CIM_Memory.ErrorInfo"}: ToSubClass,
		Description ("The OtherErrorDescription property provides more "
		"information when the ErrorInfo property is set to 1."): ToSubClass,
		MappingStrings {"SMBIOS"}: ToSubClass]
	string OtherErrorDescription;
		
		[read: ToSubClass,
		Description ("CorrectableError property indicates whether the "
		"most recent error was correctable. This property is not used "
		"if ErrorInfo is set to 3.\nValues: TRUE or FALSE.  If TRUE, "
		"the error is correctable."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Type"}: ToSubClass]
	boolean CorrectableError;
		
		[read: ToSubClass,
		Description ("The ErrorTime property contains the time that "
		"the last memory error occurred. This property is "
		"valid only when ErrorInfo is not set to 3."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass]
	datetime ErrorTime;
		
		[read: ToSubClass,
		Description ("The ErrorAccess property indicates the memory "
		"access operation that caused the last error. This property is "
		"valid only when ErrorInfo is not set to 3."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Operation"}: ToSubClass,
		Values {"Other", "Unknown", "Read", "Write", 
		"Partial Write"}: ToSubClass,
		ValueMap {"1", "2", "3", "4", "5"}: ToSubClass]
	uint16 ErrorAccess;
		
		[read: ToSubClass, Units("Bits"): ToSubClass,
		Description ("The ErrorTransferSize property specifies the "
		"size of the data (containing the last error) being transferred."
		" This property is set to 0 if there is no error."): ToSubClass,
		MappingStrings {"SMBIOS"}: ToSubClass]
	uint32 ErrorTransferSize;
				
		[read: ToSubClass, ArrayType ("Indexed"): ToSubClass, 
		Description ("The ErrorData property contains data captured from "
		"the last memory access with an error. The data occupies the first "
		"n octets of the array necessary to hold the number of bits "
		"specified by the ErrorTransferSize property. If ErrorTransferSize "
		"is 0, then this property is not used."): ToSubClass,
		MappingStrings {"SMBIOS"}: ToSubClass]
	uint8 ErrorData[64];
		
		[read: ToSubClass, 
		Description ("The ErrorDataOrder property indicates the ordering "
		"for data stored in the ErrorData property. This property is used "
		"only when ErrorTransferSize is 0."): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass,
		Values {"Unknown", "Least Significant Byte First",
		"Most Significant Byte First"}: ToSubClass]
	uint16 ErrorDataOrder;
		
		[read: ToSubClass,
		Description ("The ErrorAddress property specifies the address of "
		"the last memory error. This property is used only when ErrorInfo "
		"is not set to 3."): ToSubClass,     
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Address"}: ToSubClass]
	uint64 ErrorAddress;

		[read: ToSubClass,
		Description ("The SystemLevelAddress property indicates whether "
		"the address information in the ErrorAddress property is a "
		"system-level address (TRUE) or a physical address (FALSE). This "
		"property is used only when ErrorInfo is not set to 3."
		"\nValues: TRUE or FALSE. If TRUE, ErrorAddress contains a "
		"system-level address."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Address"}: ToSubClass]
	boolean SystemLevelAddress;
		
		[read: ToSubClass, Units ("Bytes"): ToSubClass,
		Description ("The ErrorResolution property specifies the amount of "
		"data actually determined to cause the error. This property is "
		"unused when the ErrorInfo property is set to 3."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Error Resolution"}: ToSubClass]
	uint64 ErrorResolution;
		
		[read: ToSubClass,
		Description ("The AdditionalErrorData property contains "
		"additional error information. An example is ECC Syndrome, "
		"or the return of the check bits if a CRC-based ErrorMethodology "
		"is used. In the latter case, if a single bit error is recognized "
		"and the CRC algorithm is known, it is possible to determine the "
		"exact bit that failed. This type of data (ECC Syndrome, Check "
		"Bit, Parity Bit data, or other vendor-supplied information) is "
		"included in this field. This property is used only when the "
		"ErrorInfo property is not equal to 3."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|32-bit Memory Error Information|"
		"Vendor Syndrome"}: ToSubClass]
	uint8 AdditionalErrorData[64];
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_MemoryArray class represents the properties "
		"of the computer system memory array and mapped addresses."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B9A-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_MemoryArray:Win32_SMBIOSMemory
{
		[Read: ToSubClass, Key: ToSubClass, 
		Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a "
		"string that uniquely identifies the memory array."
		"\nExample: Memory Array 1"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
	string DeviceID ;

		[read: ToSubClass, 
		Description ("The ErrorGranularity identifies the level where "
		"the error can be resolved.\nExample: Device level."): ToSubClass, 
		MappingStrings {"SMBIOS|Type 18|Error Granularity"}: ToSubClass,
		ValueMap{"Other", "Unknown", "Device level", 
		"Memory partition level"}: ToSubClass,
		Values {"1", "2", "3", "4"}: ToSubClass] 
	uint16 ErrorGranularity;
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_MemoryDevice class represents "
		"the properties of a computer system's memory device along with it's associated "
		"mapped addresses."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B9B-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_MemoryDevice:Win32_SMBIOSMemory
{
		[Read: ToSubClass, Key: ToSubClass, Override("DeviceId"): ToSubClass,
		Description ("The DeviceID property contains a string "
		"that uniquely identifies the memory device."
		"\nExample: Memory Device 1"): ToSubClass,
		MappingStrings {"WMI"}: ToSubClass] 
	string DeviceID ;

		[read: ToSubClass,
		Description ("The ErrorGranularity property identifies the level "
		"where the error can be resolved.\nExample: Device level."): ToSubClass,
		MappingStrings {"SMBIOS|Type 18|Error Granularity"}: ToSubClass,
		ValueMap{"1", "2", "3", "4"}: ToSubClass,
		Values{"Other", "Unknown", "Device level", 
		"Memory partition level"}: ToSubClass] 
	uint16 ErrorGranularity;
};

        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_MemoryDeviceLocation class represents "
		"an association between a memory device and the physical memory "
		"on which it exists."): ToSubClass,
		Locale (0x409), UUID ("{FAF76B9C-798C-11D2-AAD1-006008C78BC7}") ] 
class Win32_MemoryDeviceLocation : CIM_Realizes
{
	    [read: ToSubClass, key: ToSubClass,
		Override ("Antecedent"): ToSubClass, Max (1): ToSubClass, 
		Description ("The Antecedent reference represents the physical "
		"memory containing the memory device."): ToSubClass,
		MappingStrings {"WMI|Win32_PhysicalMemory"}: ToSubClass]
   Win32_PhysicalMemory REF Antecedent;

		[read: ToSubClass, key: ToSubClass, Override("Dependent"): ToSubClass,
		Description ("The Dependent reference represents the memory "
		"device existing in the physical memory."): ToSubClass,
		MappingStrings {"WMI|Win32_MemoryDevice"}: ToSubClass]
   Win32_MemoryDevice REF Dependent;
};

		[Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_MemoryArrayLocation class represents an "
		"association between a logical memory array and the physical "
		"memory array upon which it exists."): ToSubClass,
		Locale (0x409), UUID ("{B24EF561-BBBE-11d2-ABFB-00805F538618}") ]
class Win32_MemoryArrayLocation:CIM_Realizes
{
		[read: ToSubClass, key: ToSubClass, Override ("Antecedent"): ToSubClass,
		Description ("The Antecedent reference represents the physical "
		"memory array that implements the logical memory array."): ToSubClass,
		MappingStrings {"WMI|Win32_PhysicalMemoryArray"}: ToSubClass]
	Win32_PhysicalMemoryArray REF Antecedent;

		[read: ToSubClass, key: ToSubClass, Override ("Dependent"): ToSubClass,
		Description ("The Dependent reference indicates the logical "
		"memory array implemented by the physical memory array."): ToSubClass,
		MappingStrings {"WMI|Win32_MemoryArray"}: ToSubClass]
	Win32_MemoryArray REF Dependent;
};

        [Dynamic, Provider ("CIMWin32"),
		Description ("The Win32_PhysicalMemoryLocation class represents an "
		"association between an array of physical memory and its physical "
		"memory."): ToSubClass,
		Locale (0x409), UUID("{B24EF562-BBBE-11d2-ABFB-00805F538618}") ]
class Win32_PhysicalMemoryLocation : CIM_PackagedComponent
{
		[read: ToSubClass, Key: ToSubClass,
		Override ("GroupComponent"): ToSubClass,
		Description ("The GroupComponent reference represents the physical "
		"memory array that contains the physical memory."): ToSubClass,
		MappingStrings {"WMI|Win32_PhysicalMemoryArray"}: ToSubClass]
   Win32_PhysicalMemoryArray REF GroupComponent;

		[read: ToSubClass, Key: ToSubClass,
		Override ("PartComponent"): ToSubClass,
		Description ("The PartComponent reference represents the physical "
		"memory contained in the physical memory array."): ToSubClass,
		MappingStrings {"WMI|Win32_PhysicalMemory"}: ToSubClass]
   Win32_PhysicalMemory REF PartComponent;
};

        [Dynamic, Provider ("CIMWin32") , 
		Description ("The Win32_MemoryDeviceArray class represents an "
		"association between a memory device and the memory array in which it "
		"resides."): ToSubClass,
		Locale (0x409), UUID("{B24EF563-BBBE-11d2-ABFB-00805F538618}") ]
class Win32_MemoryDeviceArray : CIM_Component
{
		[Read: ToSubClass, Key: ToSubClass,
		Override ("PartComponent"): ToSubClass,
		Description ("The PartComponent reference represents a memory device "
		"part of the Win32_MemoryDeviceArray association."): ToSubClass,
		MappingStrings {"WMI|Win32_MemoryDevice"}: ToSubClass] 
    Win32_MemoryDevice REF PartComponent;

        [Read: ToSubClass, Key: ToSubClass,
		Override ("GroupComponent"): ToSubClass,
		Description ("The GroupComponent reference represents the memory "
		"array part of the Win32_MemoryDeviceArray association."): ToSubClass,
		MappingStrings {"WMI|Win32_MemoryArray"}: ToSubClass] 
    Win32_MemoryArray REF GroupComponent;
};
