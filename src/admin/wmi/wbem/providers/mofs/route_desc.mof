

// (c) 1998-1999 Microsoft Corporation.  All rights reserved.

#pragma autorecover
#pragma classflags("forceupdate")

Qualifier Description : ToSubClass Amended;
Qualifier Values : ToSubClass Amended;
Qualifier DisplayName : Amended;
Qualifier BitValues:ToSubClass Amended ;

Qualifier Aggregate : ToSubClass ;
Qualifier ValueMap : ToSubClass ;
Qualifier Aggregation : ToSubClass ; 
Qualifier ArrayType : ToSubClass ;
Qualifier Association : ToInstance ToSubClass DisableOverride ; 
Qualifier BitMap : ToSubClass ;
Qualifier CIM_Key : ToSubClass ;
Qualifier CIMTYPE : ToSubClass ;
Qualifier Deprecated : ToSubClass ;
Qualifier Enumeration : ToSubClass ;
Qualifier EnumPrivileges : ToSubClass ;
Qualifier ImplementationSource : ToSubClass ;
Qualifier Key : ToInstance ToSubClass DisableOverride ;
Qualifier Locale : ToInstance ;
Qualifier MappingStrings : ToSubClass ;
Qualifier Max : ToSubClass ;
Qualifier MaxLen : ToSubClass ;
Qualifier Min : ToSubClass ;
Qualifier ModelCorrespondence : ToSubClass ;
Qualifier Not_Null : ToSubClass ;
Qualifier Override : Restricted ;
Qualifier Privileges : ToSubClass ; 
Qualifier Propagated : ToSubClass ;
Qualifier provider : ToInstance ;
Qualifier Range : ToSubClass ;
Qualifier Read : ToSubClass ;
Qualifier Schema : ToInstance ;
Qualifier Singleton : ToSubClass ToInstance ;
Qualifier SUBTYPE : ToSubClass ;
Qualifier Units : ToSubClass ;
Qualifier UUID : ToInstance ;
Qualifier Volatile : ToSubClass ; 
Qualifier Weak : ToSubClass ;
Qualifier Write : ToSubClass ;
Qualifier WritePrivileges : ToSubClass ;


#pragma namespace ("\\\\.\\Root\\CIMV2")



instance of __Win32Provider as $PRoute
{
    Name = "RouteProvider";
    ClsId = "{23b77e99-5c2d-482d-a795-62ca3ae5b673}";
	HostingModel = "NetworkServiceHost";
};

instance of __InstanceProviderRegistration
{
    Provider = $PRoute;
    SupportsGet = TRUE;
    SupportsPut = TRUE;
    SupportsDelete = TRUE;
    SupportsEnumeration = TRUE;
    QuerySupportLevels = {"WQL:UnarySelect"};
};

instance of __Win32Provider as $PRouteEvent
{
    Name = "RouteEventProvider";
    ClsId = "{6D7A4B0E-66D5-4ac3-A7ED-0189E8CF5E77}";
	HostingModel = "LocalSystemHost";
};



	[dynamic, provider("RouteProvider"), Description ("The IP4RouteTable class "
	"information governs where network data packets are routed to (e.g. usually "
	"internet packets are sent to a gateway, and local packets may be routed "
	"directly by the client's machine).  Administrators can use this "
	"information to trace problems associated with misrouted packets, and also "
	"direct a computer to a new gateway as necessary. This class deals specifically "
	"with IP4 and does not address IPX or IP6. It is only intended to model the "
	"information revealed when typing the 'Route Print' command from the command "
	"prompt. \n"
	"Please Note: though updating instances of this class is supported, supplying "
	"property values which are invalid or unrecognized by the network protocol stack will "
	"not update successfully and the original values will persist.  An error is "
	"not guaranteed to be generated when this happens, but if one does, nothing is updated."), 
	SupportsCreate, CreateBy("PutInstance"),SupportsDelete, DeleteBy("DeleteInstance"),
	SupportsUpdate,	Locale (0x409), UUID ("{ABEE8C61-A43F-4088-0081-9D00B3FF6545}")]
class Win32_IP4RouteTable : CIM_LogicalElement
{
		[read,write,key, Description ("The Destination property contains the "
		"destination IP address for this route.")
		] 
	string Destination;

		[read,write, Description ("The Mask property contains the mask used "
		"in this entry. Masks should be logical-ANDed with the destination "
		"address before being compared to the value in the ipRouteDest field.")
		]
	string Mask;

		[read, write, Description ("The InterfaceIndex property contains the "
		"index value that uniquely identifies the local interface through which "
		"the next hop of this route should be reached.")
		]
	sint32 InterfaceIndex ;

		[Key, read, write, Description ("The NextHop property contains the IP address "
		"of the next hop of this route. (In the case of a route bound to an "
		"interface that is realized via a broadcast media, the value of this "
		"field is the agent's IP address on that interface.).")
		]
	string NextHop ;

		[read,write, Description ("The Type property reveals the type of route. "
		"The values direct(3) and indirect(4) refer to the notion of direct and "
		"indirect routing in the IP architecture. Setting this object to the "
		"value invalid(2) has the effect of invalidating the corresponding entry "
		"in the RouteTable object. That is, it effectively disassociates the "
		"destination identified with said entry from the route identified with "
		"said entry. It is an implementation-specific matter as to whether the "
		"agent removes an invalidated entry from the table. Accordingly, "
		"management stations must be prepared to receive tabular information "
		"from agents that corresponds to entries not currently in use. Proper "
		"interpretation of such entries requires examination of the relevant "
		"ipRouteType object."),
		ValueMap{"1","2","3","4"},
		Values{"other" , "invalid","direct","indirect"}
		]
	uint32 Type;

		[read, Description ("The Protocol property reveals the routing mechanism "
		"via which this route was learned. Inclusion of values for gateway routing "
		"protocols is not intended to imply that hosts must support those "
		"protocols."),
		ValueMap{"1","2","3","4","5","6","7","8","9","10","11","12","13","14"},
		Values{"other","local","netmgmt","icmp","egp","ggp","hello","rip",
		"is-is","es-is","ciscoIgrp","bbnSpfIgp","ospf","bgp"}
		]
	uint32 Protocol;

		[read, Description ("The Age property contains the number of seconds "
		"since this route was last updated or otherwise determined to be correct. "
		"No semantics of 'too old' can be implied except through knowledge of the "
		"routing protocol by which the route was learned.")
		] 
	uint32 Age;

		[read, write, Description ("The Metric1 property contains the primary "
		"routing metric for this route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's ipRouteProto "
		"value. If this metric is not used, its value should be set to -1.")
		]
	sint32 Metric1 ;

		[read, write, Description ("The Metric2 property contains an alternate "
		"routing metric for this route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's "
		"ipRouteProto value. If this metric is not used, its value should be "
		"set to -1.")
		]
	sint32 Metric2 ;

		[read, write, Description ("The Metric3 property contains an alternate "
		"routing metric for this route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's "
		"ipRouteProto value. If this metric is not used, its value should be "
		"set to -1.")
		] 
	sint32 Metric3 ;

		[read, write, Description ("The Metric4 property contains an alternate "
		"routing metric for this route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's "
		"ipRouteProto value. If this metric is not used, its value should be "
		"set to -1.")
		]
	sint32 Metric4 ;

		[read, write, Description ("The Metric5 property contains an alternate "
		"routing metric for this route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's "
		"ipRouteProto value. If this metric is not used, its value should be "
		"set to -1.")
		]
	sint32 Metric5 ;

		[read, Description ("The Information property contains a reference to "
		"MIB definitions specific to the particular routing protocol that is "
		"responsible for this route, as determined by the value specified in "
		"the route's ipRouteProto value. If this information is not present, "
		"its value should be set to the OBJECT IDENTIFIER {0 0}, which is a "
		"syntactically valid object identifier, and any conformant "
		"implementation of ASN.1 and BER must be able to generate and recognize "
		"this value.")
		] 
	string Information;
};


	[dynamic, provider("RouteProvider"), Description ("The IP4PersistedRouteTable "
	"class contains IP routes that are persisted.  By default, the routes you add "
	"to the routing table aren't permanent. You lose these routes when you reboot "
	"your computer. However, if you use the command route -p add, Windows NT makes "
	"the permanent--so you won't lose the route when you reboot your computer. "
	"Persistent entries are automatically reinserted in your route table each "
	"time your computer's route table is rebuilt. Windows NT stores persistent "
	"routes in the Registry. This class deals specifically with IP4 and does not "
	"address IPX or IP6."), 
	Locale (0x409), UUID ("{2CAF4666-AC9B-45AB-00A6-AF8C537794C2}"),
	SupportsCreate, CreateBy("PutInstance"), SupportsDelete, DeleteBy("DeleteInstance")]
class Win32_IP4PersistedRouteTable : CIM_LogicalElement
{
		[read,write,key, Description ("The Destination property contains the "
		"destination IP address for this persisted route.")
		] 
	string Destination;

		[read,write, key, Description ("The Mask property contains the mask used "
		"in this persisted entry. Masks should be logical-ANDed with the destination "
		"address before being compared to the value in the ipRouteDest field.")
		]
	string Mask;

		[read, write, key, Description ("The NextHop property contains the IP address "
		"of the next hop of this persisted route. (In the case of a route bound to an "
		"interface that is realized via a broadcast media, the value of this "
		"field is the agent's IP address on that interface.).")
		]
	string NextHop ;

		[read, write, key, Description ("The Metric1 property contains the primary "
		"routing metric for this persisted route. The semantics of this metric are "
		"determined by the routing protocol specified in the route's ipRouteProto "
		"value. If this metric is not used, its value should be set to -1.")
		]
	sint32 Metric1 ;
};


	[Dynamic, provider("RouteProvider"), Description ("The ActiveRoute class "
	"assoctiates the current IP4 Route being used with the persisted IP route "
	"table."),
	Locale (0x409), UUID ("{7BA1437A-C51C-421B-A359-2906AF2BDD9F}")]
class Win32_ActiveRoute : CIM_LogicalIdentity
{
		[Read: ToSubClass, Override ("SystemElement"): ToSubClass,
		Description ("The SystemElement represents the active IP route being"
	   "used."): ToSubClass,
		MappingStrings {""}: ToSubClass] 
   Win32_IP4RouteTable REF SystemElement;

        [Read: ToSubClass, Override ("SameElement"): ToSubClass,
        Description ("The SameElement represents persistent IP route in this"
        "relationship."): ToSubClass,
		MappingStrings {""}: ToSubClass] 
   Win32_IP4PersistedRouteTable REF SameElement;
};


	[Description ("The Win32_IP4RouteTableEvent class represents IP route change "
	"events resulting from the addition, removal or modification of IP routes "
	"on the computer system."),
	Locale (0x409), UUID ("{1C385E29-A5B4-40F0-96CF-929FC00958B}")] 
class Win32_IP4RouteTableEvent : __ExtrinsicEvent
{
};

instance of __EventProviderRegistration
{
	Provider = $PRouteEvent;
	EventQueryList = {"select * from Win32_IP4RouteTableEvent"};
};

