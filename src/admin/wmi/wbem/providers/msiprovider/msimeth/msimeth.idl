// methods.idl : IDL source for methods.dll

//

// Copyright (c) 1999-2001 Microsoft Corporation, All Rights Reserved
//

// This file will be processed by the MIDL tool to
// produce the type library (methods.tlb) and marshalling code.

import "objidl.idl";
import "oleidl.idl";
import "oaidl.idl";

	[
		object,
		restricted,
		uuid(768ECA52-017E-11d3-A97D-00A0C9954921)
	]
	interface IMsiMethodStatusSink : IUnknown
	{
		HRESULT Indicate([in] int *iContext,
			             [in] UINT iMessageType,
			             [in] LPCWSTR szMessage
			             );
       
		HRESULT SetStatus([in] long lFlags);
	};

	[
		object,
		uuid(3E6A93E0-FDAD-11D2-A97B-00A0C9954921),
		pointer_default(unique)
	]
	interface IMsiProductMethods : IUnknown
	{
		[helpstring("method Admin")]
		HRESULT Admin([in, string] LPCWSTR wszPackageLocation,
		              [in, string] LPCWSTR wszOptions,
					  [out] UINT* puiResult,
					  [in] int iThreadID
					  );

		[helpstring("method Advertise")]
		HRESULT Advertise([in, string] LPCWSTR wszPackageLocation,
		                  [in, string] LPCWSTR wszOptions,
						  [out] UINT* puiResult,
						  [in] int iThreadID
						  );

		[helpstring("method Configure")]
		HRESULT Configure([in, string] LPCWSTR wszProductCode,
		                  [in] int iInstallLevel,
						  [in] /*INSTALLSTATE*/int isInstallState,
						  [out] UINT* puiResult,
						  [in] int iThreadID
						  );

		[helpstring("method Install")] 
		HRESULT Install([in, string] LPCWSTR wszPackageLocation,
		                [in, string] LPCWSTR wszOptions, 
						[out] UINT* puiResult,
						[in] int iThreadID
						);

		[helpstring("method Reinstall")]
		HRESULT Reinstall([in, string] LPCWSTR wszProductCode,
		                  [in] DWORD dwReinstallMode,
						  [out] UINT* puiResult,
						  [in] int iThreadID
						  );

		[helpstring("method Uninstall")]
		HRESULT Uninstall([in, string] LPCWSTR wszProductCode,
		                  [out] UINT* puiResult,
		                  [in] int iThreadID
						  );

		[helpstring("method Upgrade")]
		HRESULT Upgrade([in, string] LPCWSTR wszPackageLocation,
		                [in, string] LPCWSTR wszOptions,
						[out] UINT* puiResult,
						[in] int iThreadID
						);
	};
	[
		object,
		uuid(E293BA80-FDAD-11D2-A97B-00A0C9954921),
		helpstring("IMsiSoftwareFeatureMethods Interface"),
		pointer_default(unique)
	]
	interface IMsiSoftwareFeatureMethods : IUnknown
	{
		[helpstring("method ConfigureSF")]
		HRESULT ConfigureSF([in, string] LPCWSTR wszProductCode,
		                  [in, string] LPCWSTR wszFeature,
                          [in] /*INSTALLSTATE*/int isInstallState,
                          [out] UINT *puiResult,
                          [in] int iThreadID
                          );

		[helpstring("method ReinstallSF")]
		HRESULT ReinstallSF([in, string] LPCWSTR wszProductCode,
		                  [in, string] LPCWSTR wszFeature,
                          [in] DWORD dwReinstallMode,
		                  [out] UINT *puiResult,
                          [in] int iThreadID
                          );
	};

[uuid(9B8BCB02-01A9-11d3-A97D-00A0C9954921)]
library MsiMeth_v1
{
    importlib("stdole32.tlb");
	[
		uuid(FDD70FF2-0195-11d3-A97D-00A0C9954921),
		helpstring("MsiMethodStatusSink Class")
	]
	coclass MsiMethodStatusSink
	{
		[default] interface IMsiMethodStatusSink;
	};

	[
		uuid(AB4184C0-FDAD-11D2-A97B-00A0C9954921),
		helpstring("MsiProductMethods Class")
	]
	coclass MsiProductMethods
	{
		[default] interface IMsiProductMethods;
	};

	[
		uuid(E9B5C790-FDAD-11D2-A97B-00A0C9954921),
		helpstring("MsiSoftwareFeatureMethods Class")
	]
	coclass MsiSoftwareFeatureMethods
	{
		[default] interface IMsiSoftwareFeatureMethods;
	};
};
