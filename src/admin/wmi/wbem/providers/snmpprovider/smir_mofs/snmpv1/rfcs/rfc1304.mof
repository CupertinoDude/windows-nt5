// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1304-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\snmp")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[Association]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[Association]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
instance of SNMP_MODULE
{
Name="RFC1304_MIB";
Module_Oid="1.3.6.1.2.1.10.31";
Module_Identity="rfc1304mibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="RFC1304-MIB";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC1213-MIB,RFC-1212";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB")
instance of SNMP_GROUP
{
Name="sipV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.31";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains SIP L3 parameters and\n                           state variables, one entry per SIP port.\nThis list contains SIP L3 parameters and\n                          state variables."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_sipL3Table : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.4"), read, description("The number of SIP Level 3 PDUs received from the\n                      remote system with invalid or unknown individual\n                      destination addresses (Destination Address\n                      Screening violations are not included).  See SMDS\n                      Subscription MIB module."), status("mandatory")] uint32 sipL3UnrecognizedIndividualDAs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.8"), read, description("The total number of SIP Level 3 PDUs received\n                      from the remote system that were discovered to\n                      have errors (including protocol processing and bit\n                      errors but excluding addressing-related errors)\n                      and were discarded.  Includes both group addressed\n                      L3PDUs and L3PDUs containing an individual\n                      destination address."), status("mandatory")] uint32 sipL3Errors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.7"), read, description("The number of group addressed SIP L3PDUs that\n                      have been sent by this system across the SNI."), status("mandatory")] uint32 sipL3SentGAs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.6"), read, description("The number of individually addressed SIP Level 3\n                      PDUs that have been sent by this system across the\n                      SNI."), status("mandatory")] uint32 sipL3SentIndividualDAs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.3"), read, description("The total number of group addressed SIP Level 3\n                       PDUs received from the remote system across the\n                       SNI.  The total includes only unerrored L3PDUs."), status("mandatory")] uint32 sipL3ReceivedGAs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.2"), read, description("The total number of individually addressed SIP\n                        Level 3 PDUs received from the remote system\n                        across the SNI.  The total includes only\n                        unerrored L3PDUs."), status("mandatory")] uint32 sipL3ReceivedIndividualDAs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.9"), read, description("The number of SIP Level 3 PDUs received from the\n                      remote system that had the Source or Destination\n                      Address_Type subfields, (the four most significant\n                      bits of the 64 bit address field), not equal to\n                      the value 1100 or 1110.  Also, an error is\n                      considered to have occurred if the Address_Type\n                      field for a Source Address, the four most\n                      significant bits of the 64 bits, is equal to 1110\n                      (a group address)."), status("mandatory")] uint32 sipL3InvalidSMDSAddressTypes;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.1.1.1"), read, description("The value of this object identifies the SIP\n                         port interface for which this entry contains\n                         management information.  The value of this\n                         object for a particular interface has the same\n                         value as the ifIndex object, defined in RFC\n                         1156 and RFC 1213, for the same interface."), status("mandatory"), key, key_order(1)] sint32 sipL3Index;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.1.1.10"), read, description("A value which indicates the version(s) of SIP\n                      that this interface supports.  The value is a sum.\n                      This sum initially takes the value zero.  For each\n                      version, V, that this interface supports, 2 raised\n                      to (V - 1) is added to the sum. For example, a\n                      port supporting versions 1 and 2 would have a\n                      value of (2^(1-1)+2^(2-1))=3.  The\n                      sipL3VersionSupport is effectively a bit mask with\n                      Version 1 equal to the least significant bit\n                      (LSB)."), status("mandatory")] sint32 sipL3VersionSupport;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.1.1.5"), read, description("The number of SIP Level 3 PDUs received from the\n                      remote system with invalid or unknown group\n                      addresses.  (Destination Address Screening\n                      violations are not included).  See SMDS\n                      Subscription MIB module."), status("mandatory")] uint32 sipL3UnrecognizedGAs;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL3TableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL3Table";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL3TableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"sipV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL3Table";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains SIP L2PDU parameters and\n                      state variables, one entry per SIP port.\nThis list contains SIP L2 parameters and state\n                      variables."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_sipL2Table : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.8"), read, description("The number of received SIP Level 2 PDUs that are\n                      SSMs with a MID not equal to zero or are BOMs with\n                      MIDs equal to zero."), status("mandatory")] uint32 sipL2BomOrSSMsMIDErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.5"), read, description("The number of received SIP Level 2 PDUs that had\n                      Payload Length errors that fall in the following\n                      specifications:\n                      - SSM L2_PDU payload length field value less\n                      - than 28 octets or greater than 44 octets,\n\n                      - BOM or COM L2_PDU payload length field not\n                      - equal to 44 octets,\n\n                      - EOM L2_PDU payload length field value less\n                      - than 4 octets or greater than 44 octets."), status("mandatory")] uint32 sipL2PayloadLengthErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.3"), read, description("The number of SIP Level 2 PDUs that have been\n                      sent by this system across the SNI."), status("mandatory")] uint32 sipL2SentCounts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.6"), read, description("The number of received SIP Level 2 PDUs that had\n                      a sequence number within the L2PDU not equal to\n                      the expected sequence number of the SMDS SS\n                      receive process."), status("mandatory")] uint32 sipL2SequenceNumberErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.9"), read, description("The number of received SIP Level 2 PDUs that are\n                      EOMs for which there is no active receive process\n                      for the MID (i.e., the receipt of an EOM which\n                      does not correspond to a BOM) OR the EOM has a MID\n                      equal to zero."), status("mandatory")] uint32 sipL2EomsMIDErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.4"), read, description("The number of received SIP Level 2 PDUs that were\n                      discovered to have either a Header Check Sequence\n                      error or a Payload CRC violation."), status("mandatory")] uint32 sipL2HcsOrCRCErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.2"), read, description("The number of SIP Level 2 PDUs received from the\n                      remote system across the SNI. The total includes\n                      only unerrored L2PDUs."), status("mandatory")] uint32 sipL2ReceivedCounts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.2.1.7"), read, description("The number of received SIP Level 2 PDUs that are\n                      BOMs for which an active receive process is\n                      already started."), status("mandatory")] uint32 sipL2MidCurrentlyActiveErrors;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.2.1.1"), read, description("The value of this object identifies the SIP port\n                      interface for which this entry contains management\n                      information.  The value of this object for a\n                      particular interface has the same value as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n                      for the same interface."), status("mandatory"), key, key_order(1)] sint32 sipL2Index;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL2TableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL2Table";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL2TableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"sipV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL2Table";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB")
instance of SNMP_GROUP
{
Name="ipOverSMDSV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.31.4.1";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("The table of addressing information relevant to\n                      this entity's IP addresses.\nThe addressing information for one of this\n                      entity's IP addresses."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31.4.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_ipOverSMDSTable : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("SMDSAddress"), fixed_length(8), object_identifier("1.3.6.1.2.1.10.31.4.1.1.1.3"), read, description("The SMDS Individual address of the IP station."), status("mandatory")] string ipOverSMDSHA;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("SMDSAddress"), fixed_length(8), object_identifier("1.3.6.1.2.1.10.31.4.1.1.1.4"), read, description("The SMDS Group Address that has been configured\n                      to identify the SMDS Subscriber-Network Interfaces\n                      (SNIs) of all members of the Logical IP Subnetwork\n                      (LIS) connected to the network supporting SMDS."), status("mandatory")] string ipOverSMDSLISGA;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.4.1.1.1.1"), read, description("The value of this object identifies the SIP port\n                      interface for which this entry contains management\n                      information.  The value of this object for a\n                      particular interface has the same value as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n                      for the same interface."), status("mandatory"), key, key_order(1)] sint32 ipOverSMDSIndex;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("SMDSAddress"), fixed_length(8), object_identifier("1.3.6.1.2.1.10.31.4.1.1.1.5"), read, description("The SMDS address (individual or group) to which\n                      ARP Requests are to be sent."), status("mandatory")] string ipOverSMDSARPReq;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.10.31.4.1.1.1.2"), read, description("The IP address to which this entry's addressing\n                      information pertains."), status("mandatory"), key, key_order(2)] string ipOverSMDSAddress;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_ipOverSMDSTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_ipOverSMDSTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_ipOverSMDSTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"ipOverSMDSV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_ipOverSMDSTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB")
instance of SNMP_GROUP
{
Name="sipErrorLogV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.31.6";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("A table that contains the latest occurrence of\n                      the following syntactical SIP L3PDU errors:\n\n                      - Destination Address Field Format Error,\n\n                      The following pertains to the 60 least significant\n                      bits of the 64 bit address field.  The 60 bits\n                      contained in the address subfield can be used to\n                      represent addresses up to 15 decimal digits.  Each\n                      decimal digit shall be encoded into four bits\n                      using Binary Coded Decimal (BCD), with the most\n                      significant digit occurring left-most.  If not all\n                      15 digits are required, then the remainder of this\n                      field shall be padded on the right with bits set\n                      to one.  An error is considered to have occurred:\n                      a).  if the first four bits of the address\n                      subfield are not BCD, OR b).  if the first four\n                      bits of the address subfield are populated with\n                      the country code value 0001, AND the 40 bits which\n                      follow are not Binary Coded Decimal (BCD) encoded\n                      values of the 10 digit addresses, OR the remaining\n                      16 least significant bits are not populated with\n                      1's, OR c).  if the address subfield is not\n                      correct according to another numbering plan which\n                      is dependent upon the carrier assigning the\n                      numbers and offering SMDS.\n\n                      - Source Address Field Format Error,\n\n                      The description of this parameter is the same as\n                      the description of the Destination Address Field\n                      Format Error.\n\n                      - Invalid BAsize Field Value,\n\n                      An error is considered to have occurred when the\n                      BAsize field of an SIP L3PDU contains a value less\n                      that 32, greater than 9220 octets without the\n                      CRC32 field present, greater than 9224 octets with\n                      the CRC32 field present, or not equal to a\n                      multiple of 4 octets,\n\n                      - Invalid Header Extension Length Field Value,\n\n                      An error is considered to have occurred when the\n                      Header Extension Length field value is not equal\n                      3.\n\n                      - Invalid Header Extension - Element Length,\n\n                      An error is considered to have occurred when the\n                      Header Extension - Element Length is greater than\n                      12.\n\n                      - Invalid Header Extension - Version Element\n                      Position, Length, or Value,\n\n                      An error is considered to have occurred when a\n                      Version element with Length=3, Type=0, and Value=1\n                      does not appear first within the Header Extension,\n                      or an element Type=0 appears somewhere other than\n                      within the first three octets in the Header\n                      Extension.\n\n                      - Invalid Header Extension - Carrier Selection\n                      Element Position, Length, Value or Format,\n\n                      An error is considered to have occurred when a\n                      Carrier Selection element does not appear second\n                      within the Header Extension, if the Element Type\n                      does not equal 1, the Element Length does not\n                      equal 4, 6, or 8, the Element Value field is not\n                      four BCD encoded decimal digits used in specifying\n                      the Carrier Identification Code (CIC), or the\n                      identified CIC code is invalid.\n\n                      - Header Extension PAD Error\n\n                      An error is considered to have occurred when the\n                      Header Extension PAD is 9 octets in length, or if\n                      the Header Extension PAD is greater than zero\n                      octets in length and the Header Extension PAD does\n                      not follow all Header Extension elements or does\n                      not begin with at least one octet of all zeros.\n\n                      - BEtag Mismatch Error,\n\n                      An error is considered to have occurred when the\n                      Beginning-End Tags in the SIP L3PDU header and\n                      trailer are not equal.\n\n                      - BAsize Field not equal to Length Field Error,\n\n                      An error is considered to have occurred when the\n                      value of the BAsize Field does not equal the value\n                      of the Length Field.\n\n                      - Incorrect Length Error, and\n\n                      An error is considered to have occurred when the\n                      the Length field value is not equal to the portion\n                      of the SIP L3PDU which extends from the\n                      Destination Address field up to and including the\n                      CRC32 field (if present) or up to and including\n                      the PAD field (if the CRC32 field is not present).\n                      As an optional check, an error is considered to\n                      have occurred when the length of a partially\n                      received SIP L3PDU exceeds the BAsize value.\n\n                      - MRI Timeout Error.\n\n                      An error is considered to have occurred when the\n                      elapsed time between receipt of BOM and\n                      corresponding EOM exceeds the value of the MRI\n                      (Message Receive Interval) for a particular\n                      transport signal format.\n\n                      An entry is indexed by interface number and error\n                      type, and contains Source Address, Destination\n                      Address and a timestamp. All these errors are\n                      counted in the sipL3Errors counter.  When\n                      sipL3PDUErrorTimeStamp is equal to zero, the\n                      SipL3PDUErrorEntry does not contain any valid\n                      information.\nAn entry in the service disagreement table."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_sipL3PDUErrorTable : SnmpObjectType
{
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.2.1.10.31.6.1.1.5"), read, description("The timestamp for the service disagreement.  The\n                      timestamp contains the value of sysUpTime at the\n                      latest occurrence of this type of service\n                      disagreement.  See textual description under\n                      sipL3PDUErrorTable for boundary conditions."), status("mandatory")] uint32 sipL3PDUErrorTimeStamp;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("SMDSAddress"), fixed_length(8), object_identifier("1.3.6.1.2.1.10.31.6.1.1.4"), read, description("A rejected SMDS destination address."), status("mandatory")] string sipL3PDUErrorDA;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("SMDSAddress"), fixed_length(8), object_identifier("1.3.6.1.2.1.10.31.6.1.1.3"), read, description("A rejected SMDS source address."), status("mandatory")] string sipL3PDUErrorSA;
	[textual_convention("EnumeratedINTEGER"), enumeration("erroredDAFieldFormat(1),erroredSAFieldFormat(2),invalidBAsizeFieldValue(3),invalidHdrExtLength(4),invalidHdrExtElementLength(5),invalidHdrExtVersionElementPositionLenthOrValue(6),invalidHdrExtCarSelectElementPositionLenghtValueOrFormat(7),hePADError(8),beTagMismatch(9),baSizeFieldNotEqualToLengthField(10),incorrectLength(11),mriTimeout(12)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.31.6.1.1.2"), read, description("The type of error."), status("mandatory"), key, key_order(2)] string sipL3PDUErrorType;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.6.1.1.1"), read, description("The value of this object identifies the SIP port\n                      interface for which this entry contains management\n                      information.   The value of this object for a\n                      particular interface has the same value as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n                      for the same interface."), status("mandatory"), key, key_order(1)] sint32 sipL3PDUErrorIndex;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL3PDUErrorTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL3PDUErrorTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipL3PDUErrorTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"sipErrorLogV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipL3PDUErrorTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB")
instance of SNMP_GROUP
{
Name="sipPLCPV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.31.3";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains SIP DS1 PLCP parameters and\n                      state variables, one entry per SIP port.\nThis list contains SIP DS1 PLCP parameters and\n                      state variables."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_sipDS1PLCPTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.3.1.1.4"), read, description("The counter associated with the number of\n                      Unavailable Seconds, as defined by TR-TSV-000773,\n                      encountered by the PLCP."), status("mandatory")] uint32 sipDS1PLCPUASs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.3.1.1.2"), read, description("A DS1 Severely Errored Framing Second (SEFS) is a\n                      count of one-second intervals containing one or\n                      more SEF events.  A Severely Errored Framing (SEF)\n                      event is declared when an error in the A1 octet\n                      and an error in the A2 octet of a framing octet\n                      pair (i.e., errors in both framing octets), or two\n                      consecutive invalid and/or nonsequential Path\n                      Overhead Identifier octets are detected."), status("mandatory")] uint32 sipDS1PLCPSEFSs;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.3.1.1.1"), read, description("The value of this object identifies the SIP port\n                      interface for which this entry contains management\n                      information.  The value of this object for a\n                      particular interface has the same value as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n                      for the same interface."), status("mandatory"), key, key_order(1)] sint32 sipDS1PLCPIndex;
	[textual_convention("EnumeratedINTEGER"), enumeration("noAlarm(1),receivedFarEndAlarm(2),incomingLOF(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.31.3.1.1.3"), read, description("This variable indicates if there is an alarm\n                      present for the DS1 PLCP.  The value\n                      receivedFarEndAlarm means that the DS1 PLCP has\n                      received an incoming Yellow Signal, the value\n                      incomingLOF means that the DS1 PLCP has declared a\n                      loss of frame (LOF) failure condition, and the\n                      value noAlarm means that there are no alarms\n                      present.  See TR-TSV-000773 for a description of\n                      alarm states."), status("mandatory")] string sipDS1PLCPAlarmState;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipDS1PLCPTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipDS1PLCPTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipDS1PLCPTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"sipPLCPV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipDS1PLCPTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains SIP DS3 PLCP parameters and\n                      state variables, one entry per SIP port.\nThis list contains SIP DS3 PLCP parameters and\n                      state variables."), module_name("RFC1304-MIB"), group_objectid("1.3.6.1.2.1.10.31.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1304_MIB_sipDS3PLCPTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.3.2.1.4"), read, description("The counter associated with the number of\n                      Unavailable Seconds, as defined by TR-TSV-000773,\n                      encountered by the PLCP."), status("mandatory")] uint32 sipDS3PLCPUASs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.31.3.2.1.2"), read, description("A DS3 Severely Errored Framing Second (SEFS) is a\n                      count of one-second intervals containing one or\n                      more SEF events.  A Severely Errored Framing (SEF)\n                      event is declared when an error in the A1 octet\n                      and an error in the A2 octet of a framing octet\n                      pair (i.e., errors in both framing octets), or two\n                      consecutive invalid and/or nonsequential Path\n                      Overhead Identifier octets are detected."), status("mandatory")] uint32 sipDS3PLCPSEFSs;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.10.31.3.2.1.1"), read, description("The value of this object identifies the SIP port\n                      interface for which this entry contains management\n                      information.  The value of this object for a\n                      particular interface has the same value as the\n                      ifIndex object, defined in RFC 1156 and RFC 1213,\n                      for the same interface."), status("mandatory"), key, key_order(1)] sint32 sipDS3PLCPIndex;
	[textual_convention("EnumeratedINTEGER"), enumeration("noAlarm(1),receivedFarEndAlarm(2),incomingLOF(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.31.3.2.1.3"), read, description("This variable indicates if there is an alarm\n                      present for the DS3 PLCP.  The value\n                      receivedFarEndAlarm means that the DS3 PLCP has\n                      received an incoming Yellow Signal, the value\n                      incomingLOF means that the DS3 PLCP has declared a\n                      loss of frame (LOF) failure condition, and the\n                      value noAlarm means that there are no alarms\n                      present.  See TR-TSV-000773 for a description of\n                      alarm states."), status("mandatory")] string sipDS3PLCPAlarmState;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipDS3PLCPTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1304_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipDS3PLCPTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1304_MIB_sipDS3PLCPTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1304_MIB:SNMP_GROUP.Name=\"sipPLCPV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1304_MIB_sipDS3PLCPTable";
};


