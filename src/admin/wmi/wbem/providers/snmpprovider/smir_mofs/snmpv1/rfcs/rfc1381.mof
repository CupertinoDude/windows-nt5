// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1381-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\snmp")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[Association]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[Association]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
instance of SNMP_MODULE
{
Name="RFC1381_MIB";
Module_Oid="1.3.6.1.2.1.10.16";
Module_Identity="rfc1381mibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="RFC1381-MIB";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC1213-MIB,RFC-1212";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB")
instance of SNMP_GROUP
{
Name="lapbV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.16";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains configuration\n                          information about interface parameters\n                          currently set in the interface.  Many of\n                          these objects have corresponding objects in\n                  the lapbAdmnTable.\nCurrently set parameter values for a\n                          specific LAPB."), module_name("RFC1381-MIB"), group_objectid("1.3.6.1.2.1.10.16"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1381_MIB_lapbOperTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.10.16.2.1.8"), read, description("The current N2 retry counter used for this\n                          interface.  This specifies the number of\n                          times a PDU will be resent after the T1\n                          timer expires without an acknowledgement for\n                          the PDU."), reference("ISO 7776 section 5.7.2"), status("mandatory")] sint32 lapbOperN2RxmitCount;
	[textual_convention("EnumeratedINTEGER"), enumeration("modulo8(1),modulo128(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.2.1.3"), read, description("The current operating size of the sequence\n                          numbers used to number frames."), reference("ISO 7776 section 3.3"), status("mandatory")] string lapbOperControlField;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.10"), read, description("The current T2 timer for this interface.\n                          This specifies the maximum time in\n                          Milliseconds to wait before sending an\n                          acknowledgment for a sequenced PDU.  A value\n                          of zero means there will be no delay in\n                          acknowledgement generation."), reference("ISO 7776 section 5.7.1.2"), status("mandatory")] sint32 lapbOperT2AckDelayTimer;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("IfIndexType"), variable_value("1..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.1"), read, description("The ifIndex value for the LAPB interface."), status("mandatory"), key, key_order(1)] sint32 lapbOperIndex;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.2.1.10.16.2.1.13"), read, description("This object identifies an instance of the\n                          index object in the first group of objects\n                          in the MIB specific to the physical device\n                          or interface used to send and receive\n\n\n\n\n\n                          frames.  If an agent does not support any\n                          such objects, it should return nullSpec\n                          OBJECT IDENTIFIER {0 0}."), status("mandatory")] string lapbOperPortId;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.11"), read, description("The current T3 timer for this interface.\n                          This specifies the time in Milliseconds to\n                          wait before considering the link\n                          disconnected.  A value of zero indicates the\n                          link will be considered disconnected upon\n                          completion of the frame exchange to\n                          disconnect the link."), reference("ISO 7776 section 5.7.1.3"), status("mandatory")] sint32 lapbOperT3DisconnectTimer;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.5"), read, description("The current operating N1 frame size used\n                          for the maximum number of bits in a frame\n                          the DCE/remote DTE can transmit.  This\n                          excludes flags and 0 bits inserted for\n                          transparency."), status("mandatory")] sint32 lapbOperReceiveN1FrameSize;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.2.1.10.16.2.1.14"), read, description("This object identifies the version of the\n                          lapb protocol implemented by this\n                          interface."), status("mandatory")] string lapbOperProtocolVersionId;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..127"), object_identifier("1.3.6.1.2.1.10.16.2.1.7"), read, description("The current receive PDU window size for\n                          this Interface.  This is the maximum number\n                          of unacknowledged sequenced PDUs that may be\n                          outstanding from the DCE/remote DTE at any\n                          one time."), reference("ISO 7776 section 5.7.4"), status("mandatory")] sint32 lapbOperReceiveKWindowSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.4"), read, description("The current operating N1 frame size used\n                          for the maximum number of bits in a frame\n                          this DTE can transmit.  This excludes flags\n                          and 0 bits inserted for transparency."), reference("ISO 7776 section 5.7.3"), status("mandatory")] sint32 lapbOperTransmitN1FrameSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.9"), read, description("The current T1 timer for this interface.\n                          This specifies the maximum time in\n                          Milliseconds to wait for acknowledgment of a\n                          PDU."), reference("ISO 7776 section 5.7.1.1"), status("mandatory")] sint32 lapbOperT1AckTimer;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..127"), object_identifier("1.3.6.1.2.1.10.16.2.1.6"), read, description("The current PDU window size this Interface\n                          uses to transmit.  This is the maximum\n\n\n\n\n\n                          number of unacknowledged sequenced PDUs that\n                          may be outstanding from this DTE at any one\n                          time."), reference("ISO 7776 section 5.7.4"), status("mandatory")] sint32 lapbOperTransmitKWindowSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.2.1.12"), read, write, description("The current T4 timer for this interface.\n                          This specifies the maximum time in\n                          Milliseconds to allow without frames being\n                          exchanged on the data link.  A value of\n                          2147483647 indicates no idle timer is being\n                          kept."), reference("ISO 7776 section 5.7.1.4"), status("mandatory")] sint32 lapbOperT4IdleTimer;
	[textual_convention("EnumeratedINTEGER"), enumeration("dte(1),dce(2),dxe(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.2.1.2"), read, description("Identifies the current operating station\n                          type of this interface.  A value of dxe (3)\n                          indicates XID negotiation has not yet taken\n                          place."), reference("ISO 7776 section 3.1"), status("mandatory")] string lapbOperStationType;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbOperTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1381_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbOperTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbOperTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB:SNMP_GROUP.Name=\"lapbV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbOperTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table contains objects that can be\n                          changed to manage a LAPB interface.\n                          Changing one of these parameters may take\n                          effect in the operating LAPB immediately or\n                          may wait until the interface is restarted\n                          depending on the details of the\n                          implementation.\n\n                          Most of the objects in this read-write table\n                          have corresponding read-only objects in the\n                          lapbOperTable that return the current\n                          operating value.\n\n                          The operating values may be different from\n                          these configured values if changed by XID\n                          negotiation or if a configured parameter was\n                          changed after the interface was started.\nConfigured parameter values for a specific\n                          LAPB."), module_name("RFC1381-MIB"), group_objectid("1.3.6.1.2.1.10.16"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1381_MIB_lapbAdmnTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("modulo8(1),modulo128(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.1.1.3"), read, write, description("The desired size of the sequence numbers\n                          used to number frames."), reference("ISO 8885 Table 3, Name: HDLC Option - 10"), status("mandatory"), defval("1")] string lapbAdmnControlField;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.10"), read, write, description("The default T2 timer for this interface.\n                          This specifies the maximum time in\n                          Milliseconds to wait before sending an\n                          acknowledgment for a sequenced PDU.  A value\n                          of zero means there will be no delay in\n                          acknowledgement generation."), reference("ISO 8885 Table 3,\n\n\n\n\n\n                          Name: Reply delay timer"), status("mandatory"), defval("0")] sint32 lapbAdmnT2AckDelayTimer;
	[textual_convention("EnumeratedINTEGER"), enumeration("sendSABM(1),sendDISC(2),sendDM(3),none(4),other(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.1.1.13"), read, write, description("This identifies the action LAPB will take\n                          to initiate link set-up."), status("mandatory"), defval("1")] string lapbAdmnActionInitiate;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("IfIndexType"), variable_value("1..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.1"), read, description("The ifIndex value for the LAPB interface."), status("mandatory"), key, key_order(1)] sint32 lapbAdmnIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.11"), read, write, description("The T3 timer for this interface.  This\n                          specifies the time in Milliseconds to wait\n                          before considering the link disconnected.  A\n                          value of zero indicates the link will be\n                          considered disconnected upon completion of\n                          the frame exchange to disconnect the link."), reference("ISO 7776 section 5.7.1.3"), status("mandatory"), defval("60000")] sint32 lapbAdmnT3DisconnectTimer;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.5"), read, write, description("The default maximum N1 frame size desired\n                          in number of bits for a frame the DCE/remote\n                          DTE transmits to this DTE.  This excludes\n                          flags and 0 bits inserted for transparency."), status("mandatory"), defval("36000")] sint32 lapbAdmnReceiveN1FrameSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..127"), object_identifier("1.3.6.1.2.1.10.16.1.1.7"), read, write, description("The default receive window size for this\n                          Interface.  This is the maximum number of\n\n\n\n\n\n                          unacknowledged sequenced PDUs that may be\n                          outstanding from the DCE/remote DTE at any\n                          one time."), reference("ISO 8885 Table 3, Name: Window size"), status("mandatory"), defval("7")] sint32 lapbAdmnReceiveKWindowSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.4"), read, write, description("The default maximum N1 frame size desired\n                          in number of bits for a frame transmitted by\n                          this DTE.  This excludes flags and 0 bits\n                          inserted for transparency."), reference("ISO 8885 Table 3,\n                          Name: Information Field length"), status("mandatory"), defval("36000")] sint32 lapbAdmnTransmitN1FrameSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.9"), read, write, description("The default T1 timer for this interface.\n                          This specifies the maximum time in\n                          Milliseconds to wait for acknowledgment of a\n                          PDU."), reference("ISO 8885 Table 3, Name:\n                          Acknowledgement timer"), status("mandatory"), defval("3000")] sint32 lapbAdmnT1AckTimer;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..127"), object_identifier("1.3.6.1.2.1.10.16.1.1.6"), read, write, description("The default transmit window size for this\n                          Interface.  This is the maximum number of\n                          unacknowledged sequenced PDUs that may be\n                          outstanding from this DTE at any one time."), reference("ISO 8885 Table 3, Name: Window size"), status("mandatory"), defval("7")] sint32 lapbAdmnTransmitKWindowSize;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.16.1.1.12"), read, write, description("The T4 timer for this interface.  This\n                          specifies the maximum time in Milliseconds\n                          to allow without frames being exchanged on\n                          the data link.  A value of 2147483647\n                          indicates no idle timer is being kept."), reference("ISO 7776 section 5.7.1.4"), status("mandatory"), defval("2147483647")] sint32 lapbAdmnT4IdleTimer;
	[textual_convention("EnumeratedINTEGER"), enumeration("sendSABM(1),sendDISC(2),other(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.1.1.14"), read, write, description("This identifies the action LAPB will take\n                          when it receives a DM response."), status("mandatory"), defval("1")] string lapbAdmnActionRecvDM;
	[textual_convention("EnumeratedINTEGER"), enumeration("dte(1),dce(2),dxe(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.1.1.2"), read, write, description("Identifies the desired station type of this\n                          interface."), reference("ISO 7776 section 3.1"), status("mandatory"), defval("1")] string lapbAdmnStationType;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.10.16.1.1.8"), read, write, description("The default N2 retry counter for this\n                          interface.  This specifies the number of\n                          times a PDU will be resent after the T1\n                          timer expires without an acknowledgement for\n                          the PDU."), reference("ISO 8885 Table 3,\n                          Name: Retransmission Attempts"), status("mandatory"), defval("20")] sint32 lapbAdmnN2RxmitCount;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbAdmnTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1381_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbAdmnTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbAdmnTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB:SNMP_GROUP.Name=\"lapbV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbAdmnTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table defines the objects recorded by\n                          LAPB to provide information about the\n                          traffic flow through the interface.\nThe information regarding the effects of\n                          flow controls in LAPB."), module_name("RFC1381-MIB"), group_objectid("1.3.6.1.2.1.10.16"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1381_MIB_lapbFlowTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("notStarted(1),abmEntered(2),abmeEntered(3),abmReset(4),abmeReset(5),dmReceived(6),dmSent(7),discReceived(8),discSent(9),frmrReceived(10),frmrSent(11),n2Timeout(12),other(13)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.3.1.3"), read, description("The reason for the most recent incrementing\n                          of lapbFlowStateChanges.  A DM or DISC frame\n                          generated to initiate link set-up does not\n                          alter this object.  When the MIB-II object\n                          ifOperStatus does not have a value of\n                          testing, there exists a correlation between\n                          this object and ifOperStatus.  IfOperStatus\n                          will have a value of up when this object\n                          contains:  abmEntered, abmeEntered,\n                          abmReset, or abmeReset.  IfOperStatus will\n                          have a value of down when this object has a\n                          value of notStarted, or dmReceived through\n                          n2Timeout.  There is no correlation when\n                          this object has the value other."), status("mandatory")] string lapbFlowChangeReason;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.16.3.1.2"), read, description("The number of LAPB State Changes, including\n                          resets."), status("mandatory")] uint32 lapbFlowStateChanges;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..7"), object_identifier("1.3.6.1.2.1.10.16.3.1.10"), read, description("The Information Field of the FRMR most\n                          recently received.  If no FRMR has been\n                          received (the normal case) or the\n                          information isn't available, this will be an\n                          OCTET STRING of zero length."), reference("ISO 7776 Section 4.3.9, tables 7 and 8"), status("mandatory")] string lapbFlowFrmrReceived;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("IfIndexType"), variable_value("1..2147483647"), object_identifier("1.3.6.1.2.1.10.16.3.1.1"), read, description("The ifIndex value for the LAPB Interface."), status("mandatory"), key, key_order(1)] sint32 lapbFlowIfIndex;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..7"), object_identifier("1.3.6.1.2.1.10.16.3.1.9"), read, description("The Information Field of the FRMR most\n                          recently sent.  If no FRMR has been sent\n                          (the normal case) or the information isn't\n                          available, this will be an OCTET STRING of\n                          zero length."), reference("ISO 7776 Section 4.3.9, tables 7 and 8"), status("mandatory")] string lapbFlowFrmrSent;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.16.3.1.7"), read, description("The number of REJ or SREJ frames received\n                          by this station."), status("mandatory")] uint32 lapbFlowRejInPkts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.16.3.1.8"), read, description("The number of times a re-transmission was\n                          effected by the T1 Timer expiring."), status("mandatory")] uint32 lapbFlowT1Timeouts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.16.3.1.6"), read, description("The number of REJ or SREJ frames sent by\n                          this station."), status("mandatory")] uint32 lapbFlowRejOutPkts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.16.3.1.5"), read, description("The number of times this device was unable\n                          to transmit a frame due to a perceived\n                          remote busy condition.  Busy conditions can\n\n\n\n\n\n                          result from the receipt of an RNR from the\n                          remote device, the lack of valid sequence\n                          number space (window saturation), or other\n                          conditions."), status("mandatory")] uint32 lapbFlowBusyDefers;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..8206"), object_identifier("1.3.6.1.2.1.10.16.3.1.11"), read, description("The Information Field of the XID frame most\n                          recently received.  If no XID frame has been\n                          received, this will be an OCTET STRING of\n                          zero length."), reference("ISO 8885"), status("mandatory")] string lapbFlowXidReceived;
	[textual_convention("EnumeratedINTEGER"), enumeration("disconnected(1),linkSetup(2),frameReject(3),disconnectRequest(4),informationTransfer(5),rejFrameSent(6),waitingAcknowledgement(7),stationBusy(8),remoteStationBusy(9),bothStationsBusy(10),waitingAckStationBusy(11),waitingAckRemoteBusy(12),waitingAckBothBusy(13),rejFrameSentRemoteBusy(14),xidFrameSent(15),error(16),other(17)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.16.3.1.4"), read, description("The current condition of the conversation."), status("mandatory")] string lapbFlowCurrentMode;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbFlowTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1381_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbFlowTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbFlowTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB:SNMP_GROUP.Name=\"lapbV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbFlowTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("This table defines values to use for XID\n                          negotiation that are not found in the\n                          lapbAdmnTable.  This table is optional for\n                          implementations that don't support XID and\n                          mandatory for implementations that do\n                          initiate XID negotiation.\nXId negotiation parameter values for a\n                          specific LAPB."), module_name("RFC1381-MIB"), group_objectid("1.3.6.1.2.1.10.16"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1381_MIB_lapbXidTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("IfIndexType"), variable_value("1..2147483647"), object_identifier("1.3.6.1.2.1.10.16.4.1.1"), read, description("The ifIndex value for the LAPB interface."), status("mandatory"), key, key_order(1)] sint32 lapbXidIndex;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.16.4.1.4"), read, write, description("The value of the parameter unique\n                          Identifier.  A zero length string indicates\n                          no Unique identifier value has been\n                          assigned."), reference("ISO 8885 Table 3, Name: Identifier"), status("mandatory"), defval("")] string lapbXidParameterUniqueIdentifier;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..8206"), object_identifier("1.3.6.1.2.1.10.16.4.1.7"), read, write, description("A user data subfield, if any, to be\n                          transmitted in an XID frame.  A zero length\n                          frame indicates no user data subfield has\n                          been assigned.  The octet string should\n                          include both the User data identifier and\n                          User data field as shown in Figures 1 and\n                          4."), reference("ISO 8885 section 4.3"), status("mandatory"), defval("")] string lapbXidUserDataSubfield;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.16.4.1.3"), read, write, description("The value of the Address Resolution\n                          Address.  A zero length string indicates no\n                          Address value has been assigned."), reference("ISO 8885 Table 2, Name: Address"), status("mandatory"), defval("")] string lapbXidAdRAddress;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.16.4.1.6"), read, write, description("The port number assigned for this link.  A\n                          zero length string indicates no local port\n                          number identifier has been assigned."), reference("ISO 8885 Table 3, Name: Port number"), status("mandatory"), defval("")] string lapbXidPortNumber;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.16.4.1.5"), read, write, description("The value of the parameter Group address.\n                          A zero length string indicates no Group\n                          address value has been assigned."), reference("ISO 8885 Table 3, Name: Group address"), status("mandatory"), defval("")] string lapbXidGroupAddress;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.16.4.1.2"), read, write, description("The value of the Address Resolution\n                          Identifier.  A zero length string indicates\n                          no Identifier value has been assigned."), reference("ISO 8885 Table 2, Name: Identifier"), status("mandatory"), defval("")] string lapbXidAdRIdentifier;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbXidTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1381_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbXidTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1381_MIB_lapbXidTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1381_MIB:SNMP_GROUP.Name=\"lapbV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1381_MIB_lapbXidTable";
};


