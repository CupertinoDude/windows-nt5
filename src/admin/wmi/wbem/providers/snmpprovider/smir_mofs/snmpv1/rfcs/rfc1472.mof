// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "PPP-SEC-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\snmp")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[Association]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[Association]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
instance of SNMP_MODULE
{
Name="PPP_SEC_MIB";
Module_Oid="1.3.6.1.2.1.10.23.2";
Module_Identity="pppsecmibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="PPP-SEC-MIB";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC-1212,PPP-LCP-MIB";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\PPP_SEC_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\PPP_SEC_MIB")
instance of SNMP_GROUP
{
Name="pppSecurityV1ObjectGroup";
Group_Id="1.3.6.1.2.1.10.23.2";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("Table containing the configuration and\n                         preference parameters for PPP Security.\nSecurity configuration information for a\n                         particular PPP link."), module_name("PPP-SEC-MIB"), group_objectid("1.3.6.1.2.1.10.23.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_PPP_SEC_MIB_pppSecurityConfigTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.23.2.2.1.1"), read, write, description("The value of ifIndex that identifies the entry\n                         in the interface table that is associated with\n                         the local PPP entity's link for which this\n                         particular security algorithm shall be\n                         attempted. A value of 0 indicates the default\n                         algorithm - i.e., this entry applies to all\n                         links for which explicit entries in the table\n                         do not exist."), status("mandatory"), key, key_order(1)] sint32 pppSecurityConfigLink;
	[textual_convention("EnumeratedINTEGER"), enumeration("invalid(1),valid(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.23.2.2.1.4"), read, write, description("Setting this object to the value invalid(1)\n                         has the effect of invalidating the\n                         corresponding entry in the\n                         pppSecurityConfigTable. It is an\n                         implementation-specific matter as to whether\n                         the agent removes an invalidated entry from the\n                         table.  Accordingly, management stations must\n                         be prepared to receive tabular information from\n                         agents that corresponds to entries not\n                         currently in use.  Proper interpretation of\n                         such entries requires examination of the\n                         relevant pppSecurityConfigStatus object."), status("mandatory"), defval("2")] string pppSecurityConfigStatus;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.2.1.10.23.2.2.1.3"), read, write, description("Identifies the security protocol to be\n                         attempted on the link identified by\n                         pppSecurityConfigLink at the preference level\n                         identified by pppSecurityConfigPreference. "), status("mandatory")] string pppSecurityConfigProtocol;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.23.2.2.1.2"), read, write, description("The relative preference of the security\n                         protocol identified by\n                         pppSecurityConfigProtocol. Security protocols\n                         with lower values of\n                         pppSecurityConfigPreference are tried before\n                         protocols with higher values of\n                         pppSecurityConfigPreference."), status("mandatory"), key, key_order(2)] sint32 pppSecurityConfigPreference;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_PPP_SEC_MIB_pppSecurityConfigTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"PPP_SEC_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_PPP_SEC_MIB_pppSecurityConfigTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_PPP_SEC_MIB_pppSecurityConfigTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\PPP_SEC_MIB:SNMP_GROUP.Name=\"pppSecurityV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_PPP_SEC_MIB_pppSecurityConfigTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("Table containing the identities and secrets\n                         used by the PPP authentication protocols.  As\n                         this table contains secret information, it is\n                         expected that access to this table be limited\n                         to those SNMP Party-Pairs for which a privacy\n                         protocol is in use for all SNMP messages that\n                         the parties exchange.  This table contains both\n                         the ID and secret pair(s) that the local PPP\n                         entity will advertise to the remote entity and\n                         the pair(s) that the local entity will expect\n                         from the remote entity.  This table allows for\n                         multiple id/secret password pairs to be\n                         specified for a particular link by using the\n                         pppSecuritySecretsIdIndex object.\nSecret information."), module_name("PPP-SEC-MIB"), group_objectid("1.3.6.1.2.1.10.23.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_PPP_SEC_MIB_pppSecuritySecretsTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.1"), read, description("The link to which this ID/Secret pair applies.\n                         By convention, if the value of this object is 0\n                         then the ID/Secret pair applies to all links."), status("mandatory"), key, key_order(1)] sint32 pppSecuritySecretsLink;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.6"), read, write, description("The secret of the ID/Secret pair.  The actual\n                         format, semantics, and use of\n                         pppSecuritySecretsSecret depends on the actual\n                         security protocol used.  For example, if\n                         pppSecuritySecretsProtocol is\n                         pppSecurityPapProtocol then this object will\n                         contain a PAP Password. If\n                         pppSecuritySecretsProtocol is\n                         pppSecurityChapMD5Protocol then this object\n                         would contain the CHAP MD5 Secret."), status("mandatory")] string pppSecuritySecretsSecret;
	[textual_convention("EnumeratedINTEGER"), enumeration("invalid(1),valid(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.7"), read, write, description("Setting this object to the value invalid(1)\n                         has the effect of invalidating the\n                         corresponding entry in the\n                         pppSecuritySecretsTable. It is an\n                         implementation-specific matter as to whether\n                         the agent removes an invalidated entry from the\n                         table.  Accordingly, management stations must\n                         be prepared to receive tabular information from\n                         agents that corresponds to entries not\n                         currently in use.  Proper interpretation of\n                         such entries requires examination of the\n                         relevant pppSecuritySecretsStatus object."), status("mandatory"), defval("2")] string pppSecuritySecretsStatus;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..2147483647"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.2"), read, description("A unique value for each ID/Secret pair that\n                         has been defined for use on this link.  This\n                         allows multiple ID/Secret pairs to be defined\n                         for each link.  How the local entity selects\n                         which pair to use is a local implementation\n                         decision."), status("mandatory"), key, key_order(2)] sint32 pppSecuritySecretsIdIndex;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..255"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.5"), read, write, description("The Identity of the ID/Secret pair.  The\n                         actual format, semantics, and use of\n                         pppSecuritySecretsIdentity depends on the\n                         actual security protocol used.  For example, if\n                         pppSecuritySecretsProtocol is\n                         pppSecurityPapProtocol then this object will\n                         contain a PAP Peer-ID. If\n                         pppSecuritySecretsProtocol is\n                         pppSecurityChapMD5Protocol then this object\n                         would contain the CHAP NAME parameter."), status("mandatory")] string pppSecuritySecretsIdentity;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.4"), read, write, description("The security protocol (e.g. CHAP or PAP) to\n                         which this ID/Secret pair applies."), status("mandatory")] string pppSecuritySecretsProtocol;
	[textual_convention("EnumeratedINTEGER"), enumeration("local-to-remote(1),remote-to-local(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.23.2.3.1.3"), read, write, description("This object defines the direction in which a\n                         particular ID/Secret pair is valid.  If this\n                         object is local-to-remote then the local PPP\n                         entity will use the ID/Secret pair when\n                         attempting to authenticate the local PPP entity\n                         to the remote PPP entity.  If this object is\n                         remote-to-local then the local PPP entity will\n                         expect the ID/Secret pair to be used by the\n                         remote PPP entity when the remote PPP entity\n                         attempts to authenticate itself to the local\n                         PPP entity."), status("mandatory")] string pppSecuritySecretsDirection;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_PPP_SEC_MIB_pppSecuritySecretsTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"PPP_SEC_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_PPP_SEC_MIB_pppSecuritySecretsTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_PPP_SEC_MIB_pppSecuritySecretsTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\PPP_SEC_MIB:SNMP_GROUP.Name=\"pppSecurityV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_PPP_SEC_MIB_pppSecuritySecretsTable";
};


