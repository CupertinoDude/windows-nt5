// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1389-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\snmp")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[Association]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[Association]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
instance of SNMP_MODULE
{
Name="RFC1389_MIB";
Module_Oid="1.3.6.1.2.1.23";
Module_Identity="rfc1389mibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="RFC1389-MIB";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC1213-MIB,RFC-1212";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB")
instance of SNMP_GROUP
{
Name="rip2V1ObjectGroup";
Group_Id="1.3.6.1.2.1.23";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("A list of RIP Peers.\nInformation regarding a single routing peer."), module_name("RFC1389-MIB"), group_objectid("1.3.6.1.2.1.23"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1389_MIB_rip2PeerTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.4.1.5"), read, description("The number of RIP response packets  from  this\n              peer discarded as invalid."), status("mandatory")] uint32 rip2PeerRcvBadPackets;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("RouteTag"), fixed_length(2), object_identifier("1.3.6.1.2.1.23.4.1.2"), read, description("The value in the Routing Domain field  in  RIP\n              packets received from the peer."), status("mandatory"), key, key_order(2)] string rip2PeerDomain;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.23.4.1.1"), read, description("The IP Address of the Peer System."), status("mandatory"), key, key_order(1)] string rip2PeerAddress;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.2.1.23.4.1.4"), read, description("The RIP version number in the  header  of  the\n              last RIP packet received."), status("mandatory")] sint32 rip2PeerVersion;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.2.1.23.4.1.3"), read, description("The value of sysUpTime when  the  most  recent\n              RIP update was received from this system."), status("mandatory")] uint32 rip2PeerLastUpdate;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.4.1.6"), read, description("The number of routes from this peer that  were\n              ignored because the entry format was invalid."), status("mandatory")] uint32 rip2PeerRcvBadRoutes;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2PeerTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1389_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2PeerTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2PeerTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB:SNMP_GROUP.Name=\"rip2V1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2PeerTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("A  list  of  subnets  which  require  separate\n              status monitoring in RIP.\nA Single Routing Domain in a single Subnet."), module_name("RFC1389-MIB"), group_objectid("1.3.6.1.2.1.23"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1389_MIB_rip2IfStatTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.2.1.4"), read, description("The number of triggered RIP  updates  actually\n              sent  on  this interface.  This explicitly does\n              NOT include full updates  sent  containing  new\n              information."), status("mandatory")] uint32 rip2IfStatSentUpdates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.2.1.3"), read, description("The number of routes, in  valid  RIP  packets,\n              which were ignored for any reason (e.g. unknown\n              address family, or invalid metric)."), status("mandatory")] uint32 rip2IfStatRcvBadRoutes;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.2.1.2"), read, description("The number of RIP response packets received by\n              the  RIP  process  which were subsequently dis-\n              carded for any reason (e.g. a version 0 packet,\n              or an unknown command type)."), status("mandatory")] uint32 rip2IfStatRcvBadPackets;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.23.2.1.5"), read, write, description("Writing invalid has  the  effect  of  deleting\n              this interface."), status("mandatory"), defval("1")] string rip2IfStatStatus;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.23.2.1.1"), read, description("The IP Address of this system on the indicated\n              subnet."), status("mandatory"), key, key_order(1)] string rip2IfStatAddress;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2IfStatTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1389_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2IfStatTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2IfStatTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB:SNMP_GROUP.Name=\"rip2V1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2IfStatTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("A list of subnets which require separate  con-\n              figuration in RIP.\nA Single Routing Domain in a single Subnet."), module_name("RFC1389-MIB"), group_objectid("1.3.6.1.2.1.23"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1389_MIB_rip2IfConfTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..15"), object_identifier("1.3.6.1.2.1.23.3.1.7"), read, write, description("This variable indicates what metric is  to  be\n              used  as  a  default  route in RIP updates ori-\n              ginated on this interface.  A value of zero in-\n              dicates  that  no  default route should be ori-\n              ginated; in this  case,  a  default  route  via\n              another router may be propagated."), status("mandatory")] sint32 rip2IfConfDefaultMetric;
	[textual_convention("EnumeratedINTEGER"), enumeration("doNotSend(1),ripVersion1(2),rip1Compatible(3),ripVersion2(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.23.3.1.5"), read, write, description("What  the  router  sends  on  this  interface.\n              ripVersion1 implies sending RIP updates compli-\n              ant  with  RFC  1058.   rip1Compatible  implies\n              broadcasting RIP-2 updates using RFC 1058 route\n              subsumption rules.  ripVersion2 implies  multi-\n              casting RIP-2 updates."), status("mandatory"), defval("3")] string rip2IfConfSend;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("RouteTag"), fixed_length(2), object_identifier("1.3.6.1.2.1.23.3.1.2"), read, write, description("Value inserted into the Routing  Domain  field\n              of all RIP packets sent on this interface."), status("mandatory"), defval("0000")] string rip2IfConfDomain;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.23.3.1.8"), read, write, description("Writing invalid has  the  effect  of  deleting\n              this interface."), status("mandatory"), defval("1")] string rip2IfConfStatus;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..16"), object_identifier("1.3.6.1.2.1.23.3.1.4"), read, write, description("The value to be used as the Authentication Key\n              whenever    the   corresponding   instance   of\n              rip2IfConfAuthType has  the  value  simplePass-\n              word.   A modification of the corresponding in-\n              stance of rip2IfConfAuthType  does  not  modify\n              the rip2IfConfAuthKey value.\n\n              If a string shorter than 16 octets is supplied,\n              it  will be left-justified and padded to 16 oc-\n              tets, on the right, with nulls (0x00).\n\n              Reading this object always results in an  OCTET\n              STRING  of  length zero; authentication may not\n              be bypassed by reading the MIB object."), status("mandatory"), defval("")] string rip2IfConfAuthKey;
	[textual_convention("EnumeratedINTEGER"), enumeration("rip1(1),rip2(2),rip1OrRip2(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.23.3.1.6"), read, write, description("This indicates which version  of  RIP  updates\n              are   to  be  accepted.   Note  that  rip2  and\n              rip1OrRip2 implies reception of multicast pack-\n              ets."), status("mandatory"), defval("3")] string rip2IfConfReceive;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.23.3.1.1"), read, description("The IP Address of this system on the indicated\n              subnet."), status("mandatory"), key, key_order(1)] string rip2IfConfAddress;
	[textual_convention("EnumeratedINTEGER"), enumeration("noAuthentication(1),simplePassword(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.23.3.1.3"), read, write, description("The type of Authentication used on this inter-\n              face."), status("mandatory"), defval("1")] string rip2IfConfAuthType;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2IfConfTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1389_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2IfConfTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2IfConfTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB:SNMP_GROUP.Name=\"rip2V1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2IfConfTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB")
instance of SNMP_GROUP
{
Name="rip2GlobalGroupV1ObjectGroup";
Group_Id="1.3.6.1.2.1.23.1";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description(""), module_name("RFC1389-MIB"), singleton, group_objectid("1.3.6.1.2.1.23.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1389_MIB_rip2GlobalGroup : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.1.1"), read, description("The number of changes made to the IP Route Da-\n              tabase by RIP."), status("mandatory")] uint32 rip2GlobalRouteChanges;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.23.1.2"), read, description("The number of responses sent  to  RIP  queries\n              from other systems."), status("mandatory")] uint32 rip2GlobalQueries;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2GlobalGroupSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1389_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2GlobalGroup";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1389_MIB_rip2GlobalGroupSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1389_MIB:SNMP_GROUP.Name=\"rip2GlobalGroupV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1389_MIB_rip2GlobalGroup";
};


