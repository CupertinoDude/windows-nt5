// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1269-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\snmp")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[Association]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[Association]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[Association]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
instance of SNMP_MODULE
{
Name="RFC1269_MIB";
Module_Oid="1.3.6.1.2.1.15";
Module_Identity="rfc1269mibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="RFC1269-MIB";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC1213-MIB,RFC-1212,RFC-1215";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1269_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR\\RFC1269_MIB")
instance of SNMP_GROUP
{
Name="bgpV1ObjectGroup";
Group_Id="1.3.6.1.2.1.15";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description(""), module_name("RFC1269-MIB"), singleton, group_objectid("1.3.6.1.2.1.15"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1269_MIB_bgp : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.2.1.15.1"), read, description("Vector of supported BGP protocol version\n                         numbers. Each peer negotiates the version from\n                         this vector.  Versions are identified via the\n                         string of bits contained within this object.\n                         The first octet contains bits 0 to 7, the\n                         second octet contains bits 8 to 15, and so on,\n\n\n\n\n\n                         with the most significant bit referring to the\n                         lowest bit number in the octet (e.g., the MSB\n                         of the first octet refers to bit 0).  If a bit,\n                         i, is present and set, then the version (i+1)\n                         of the BGP is supported."), status("mandatory")] string bgpVersion;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.4"), read, description("The BGP Identifier of local system."), status("mandatory")] string bgpIdentifier;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.15.2"), read, description("The local autonomous system number."), status("mandatory")] sint32 bgpLocalAs;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1269_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgp";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1269_MIB:SNMP_GROUP.Name=\"bgpV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgp";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("The BGP Received Path Attribute Table contains\n                         information about paths to destination networks\n                         received by all peers.\nInformation about a path to a network."), module_name("RFC1269-MIB"), group_objectid("1.3.6.1.2.1.15"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1269_MIB_bgpRcvdPathAttrTable : SnmpObjectType
{
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.5.1.2"), read, description("The address of the destination network."), status("mandatory"), key, key_order(1)] string bgpPathAttrDestNetwork;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.15.5.1.6"), read, description("The optional inter-AS metric. If this\n                         attribute has not been provided for this route,\n                         the value for this object is 0."), status("mandatory")] sint32 bgpPathAttrInterASMetric;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.5.1.1"), read, description("The IP address of the peer where the path\n                         information\n                          was learned."), status("mandatory"), key, key_order(2)] string bgpPathAttrPeer;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.2.1.15.5.1.4"), read, description("The set of ASs that must be traversed to reach\n                         the network. ( This object is probably best\n                         represented as SEQUENCE OF INTEGER. For SMI\n                         compatibility, though, it is represented as\n                         OCTET STRING. Each AS is represented as a pair\n                         of octets according to the following algorithm:\n\n                              first-byte-of-pair = ASNumber / 256;\n                              second-byte-of-pair = ASNumber & 255;"), status("mandatory")] string bgpPathAttrASPath;
	[textual_convention("EnumeratedINTEGER"), enumeration("igp(1),egp(2),incomplete(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.15.5.1.3"), read, description("The ultimate origin of the path information."), status("mandatory")] string bgpPathAttrOrigin;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.5.1.5"), read, description("The address of the border router that should\n                         be used for the destination network."), status("mandatory")] string bgpPathAttrNextHop;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpRcvdPathAttrTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1269_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgpRcvdPathAttrTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpRcvdPathAttrTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1269_MIB:SNMP_GROUP.Name=\"bgpV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgpRcvdPathAttrTable";
};

#pragma namespace("\\\\.\\root\\snmp\\SMIR")
[description("The bgp peer table.\nInformation about a BGP peer connection."), module_name("RFC1269-MIB"), group_objectid("1.3.6.1.2.1.15"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1269_MIB_bgpPeerTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("idle(1),connect(2),active(3),opensent(4),openconfirm(5),established(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.15.3.1.2"), read, description("The bgp peer connection state. "), status("mandatory")] string bgpPeerState;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.15.3.1.12"), read, description("The total number of messages received from the\n                         remote peer on this connection. This object\n                         should be initialized to zero when the\n                         connection is established."), status("mandatory")] uint32 bgpPeerInTotalMessages;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.15.3.1.13"), read, description("The total number of messages transmitted to\n                         the remote peer on this connection. This object\n                         should be initialized to zero when the\n                         connection is established."), status("mandatory")] uint32 bgpPeerOutTotalMessages;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.15.3.1.4"), read, description("The negotiated version of BGP running between\n                         the two peers. "), status("mandatory")] sint32 bgpPeerNegotiatedVersion;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.15.3.1.9"), read, description("The remote autonomous system number."), status("mandatory")] sint32 bgpPeerRemoteAs;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.3.1.5"), read, description("The local IP address of this entry's BGP\n                         connection."), status("mandatory")] string bgpPeerLocalAddr;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.15.3.1.10"), read, description("The number of BGP UPDATE messages received on\n                         this connection. This object should be\n                         initialized to zero when the connection is\n                         established."), status("mandatory")] uint32 bgpPeerInUpdates;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.15.3.1.6"), read, description("The local port for the TCP connection between\n                         the BGP peers."), status("mandatory")] sint32 bgpPeerLocalPort;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(2), object_identifier("1.3.6.1.2.1.15.3.1.14"), read, description("The last error code and subcode seen by this\n                         peer on this connection. If no error has\n                         occurred, this field is zero. Otherwise, the\n                         first byte of this two byte OCTET STRING\n                         contains the error code; the second contains\n                         the subcode."), status("mandatory")] string bgpPeerLastError;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.3.1.7"), read, description("The remote IP address of this entry's BGP\n                         peer."), status("mandatory"), key, key_order(1)] string bgpPeerRemoteAddr;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.15.3.1.1"), read, description("The BGP Identifier of this entry's BGP peer."), status("mandatory")] string bgpPeerIdentifier;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.15.3.1.11"), read, description("The number of BGP UPDATE messages received on\n                         this connection. This object should be\n                         initialized to zero when the connection is\n                         established."), status("mandatory")] uint32 bgpPeerOutUpdates;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.2.1.15.3.1.8"), read, description("The remote port for the TCP connection between\n                         the BGP peers.  Note that the objects\n                         bgpLocalAddr, bgpLocalPort, bgpRemoteAddr and\n                         bgpRemotePort provide the appropriate reference\n                         to the standard MIB TCP connection table."), status("mandatory")] sint32 bgpPeerRemotePort;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.15.3.1.3"), read, write, description("The desired state of the BGP connection. A\n                         transition from 'stop' to 'start' will cause\n                         the BGP Start Event to be generated. A\n                         transition from 'start' to 'stop' will cause\n                         the BGP Stop Event to be generated. This\n                         parameter can be used to restart BGP peer\n                         connections.  Care should be used in providing\n                         write access to this object without adequate\n                         authentication."), status("mandatory")] sint32 bgpPeerAdminStatus;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpPeerTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\snmp\\SMIR:SNMP_MODULE.Name=\"RFC1269_MIB\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgpPeerTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_RFC1269_MIB_bgpPeerTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\snmp\\SMIR\\RFC1269_MIB:SNMP_GROUP.Name=\"bgpV1ObjectGroup\"";
SmirClass="\\\\.\\root\\snmp\\SMIR:SNMP_RFC1269_MIB_bgpPeerTable";
};


