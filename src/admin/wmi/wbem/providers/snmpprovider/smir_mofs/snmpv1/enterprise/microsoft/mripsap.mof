// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "MSRIPSAP-MIB" by smi2smir version 1.00.456.0000
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

#pragma namespace("\\\\.\\root\\default")
class SMIR:__namespace
{
[read] string Name="SMIR";
};

instance of SMIR
{
};

#pragma namespace("\\\\.\\root\\default\\SMIR")
[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

class SnmpNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class SnmpExtendedNotification:__ExtrinsicEvent
{
[textual_convention("TimeTicks"):ToInstance ToSubClass DisableOverride,encoding("TimeTicks"):ToInstance ToSubClass DisableOverride,object_syntax("TimeTicks"):ToInstance ToSubClass DisableOverride,read,object_identifier("1.3.6.1.2.1.1.3"):ToInstance ToSubClass DisableOverride,description("The time (in hundredths of a second) since the network management portion of the agent was last re-initialized."):ToInstance ToSubClass DisableOverride] uint32 TimeStamp;
[textual_convention("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, encoding("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, object_syntax("OBJECTIDENTIFIER"):ToInstance ToSubClass DisableOverride, read, object_identifier("1.3.6.1.6.3.1.1.4.1"):ToInstance ToSubClass DisableOverride,description("The authoratative identification of this notification."):ToInstance ToSubClass DisableOverride] string Identification;
[read, description("The network address of the entity that created this notification."):ToInstance ToSubClass DisableOverride] string AgentAddress;
[read, description("The network address of the entity that sent this notification. This may be a proxy for the original entity."):ToInstance ToSubClass DisableOverride] string AgentTransportAddress;
[read, description("The transport protocol used by the sending entity."):ToInstance ToSubClass DisableOverride] string AgentTransportProtocol;
[read, description("The security context used to send this notification."):ToInstance ToSubClass DisableOverride] string Community;
};

class NotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class ExtendedNotificationMapper
{
[read, key] string SnmpTrapOID;
[read] string EventClassName;
};

class SNMP_MODULE:__namespace
{
[read] string Name;
[read] string Module_Oid;
[read] string Module_Identity;
[read] string Organization;
[read] string Contact_Inf;
[read] string Description;
[read] string Object_Identity;
[read] string Revision;
[read] string Last_Updated;
[read] sint32 Snmp_Version;
[read] string Module_Imports;
};

[assoc]
class ModuleToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[assoc]
class GroupToClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirGroup;
};

[assoc]
class ModToNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

[assoc]
class ModToExtNotificationClassAssociator
{
[read, key] string AssocName;
[read] object ref SmirClass;
[read] object ref SmirModule;
};

#pragma namespace("\\\\.\\root\\default\\SMIR")
instance of SNMP_MODULE
{
Name="MSRIPSAP_MIB";
Module_Oid="1.3.6.1.4.1.311.1.9.2";
Module_Identity="msripsapmibV1ModuleIdentity";
Organization="";
Contact_Inf="";
Description="MSRIPSAP-MIB";
Object_Identity="";
Revision="";
Last_Updated="0000000000Z";
Snmp_Version=1;
Module_Imports="RFC1155-SMI,RFC-1212,RFC-1215,MSFT-MIB";
};

#pragma namespace("\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB")
class SNMP_GROUP:__namespace
{
[read] string Name;
[read] string Group_Id;
[read] string Status;
[read] string Description;
[read] string Reference;
};

#pragma namespace("\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB")
instance of SNMP_GROUP
{
Name="ripsapInterfaceV1ObjectGroup";
Group_Id="1.3.6.1.4.1.311.1.9.2";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\default\\SMIR")
[description("The SAP interface table.\nEach entry corresponds to one interface known to the\n\t\t\t\tsystem."), module_name("MSRIPSAP-MIB"), group_objectid("1.3.6.1.4.1.311.1.9.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSRIPSAP_MIB_sapIfTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.1"), read, description("The identifier of this interface, unique within the\n\t\t\t\tinstance of SAP.  This value corresponds to the interface\n\t\t\t\tidentifier found in ipxIfIndex."), status("mandatory"), key, key_order(1)] sint32 sapIfIndex = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.8"), read, write, description("Enable listening to SAP updates on this interface."), status("mandatory")] string sapIfListen = "disabled";
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.7"), read, write, description("Enable sending of SAP updates (change and periodic) on\n\t\t\t\tthis interface."), status("mandatory")] string sapIfSupply = "disabled";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.11"), read, description("The number of SAP packets received on this interface."), status("mandatory")] uint32 sapIfInPackets = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),up(2),sleeping(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.3"), read, description("The current operational state of the interface.\n\t\t\t\tIf sapIfAdminState is disabled(1) then\n\t\t\t\tripIfOperState should be down(1). If sapIfAdminState is\n\t\t\t\tchanged to enabled(2) then sapIfOperState should change to\n\t\t\t\tup(2) if the interface is ready to transmit and\n\t\t\t\treceive network traffic; it should change to\n\t\t\t\tsleeping(3) if the interface is waiting for external\n\t\t\t\tactions (such as a serial line waiting for an\n\t\t\t\tincomming connection); it should remain in the down(1)\n\t\t\t\tstate if and only if there is a fault that prevents it\n\t\t\t\tfrom going to the up(2) state."), status("mandatory")] string sapIfOperState = "down";
	[textual_convention("EnumeratedINTEGER"), enumeration("standard(1),none(2),autostatic(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.4"), read, write, description("The SAP update mechanism used on this interface.\n\t\t\t\tNone(2) is used for static routes configurations.\n\t\t\t\tAutoStatic(3) means that the local router can issue\n\t\t\t\tan update request to the remote router and the response will be\n\t\t\t\tkept statically in the routing database as auto static services.\n\t\t\t\tStandard(1) is the periodic broadcast SAP mechanism."), status("mandatory")] string sapIfUpdateMode = "standard";
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.2"), read, write, description("The desired state of the interface."), status("mandatory")] string sapIfAdminState = "disabled";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.10"), read, description("The number of SAP packets sent on this interface."), status("mandatory")] uint32 sapIfOutPackets = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.9"), read, write, description("Indicates whether to respond to SAP get nearest server\n\t\t\t\trequests received on this interface."), status("mandatory")] string sapIfGetNearestServerReply = "disabled";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.6"), read, write, description("The holding multiplier for services received in SAP periodic\n\t\t\t\tupdates (applies only if sapIfUpdateMode is Standard(1))."), status("mandatory")] sint32 sapIfAgeMultiplier = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.2.1.5"), read, write, description("The SAP update interval, in sec.\n\t\t\t\tFor Standard(1) ripIfUpdateMode, this is the interval with\n\t\t\t\twhich periodic update broadcasts are sent, for AutoStatic(3)\n\t\t\t\tsapIfUpdateMode, this is the maximum interval for which\n\t\t\t\trouter will listen for rip announcements. Not used for\n\t\t\t\tNone (2) sapIfUpdateMode"), status("mandatory")] sint32 sapIfUpdateInterval = 0;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_sapIfTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\default\\SMIR:SNMP_MODULE.Name=\"MSRIPSAP_MIB\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_sapIfTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_sapIfTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB:SNMP_GROUP.Name=\"ripsapInterfaceV1ObjectGroup\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_sapIfTable";
};

#pragma namespace("\\\\.\\root\\default\\SMIR")
[description("The RIP interface table.\nEach entry corresponds to one interface known to the\n\t\t\t\tsystem."), module_name("MSRIPSAP-MIB"), group_objectid("1.3.6.1.4.1.311.1.9.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSRIPSAP_MIB_ripIfTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.1"), read, description("The identifier of this interface, unique within the\n\t\t\t\tinstance of RIP.  This value corresponds to the interface\n\t\t\t\tidentifier found in ipxIfIndex."), status("mandatory"), key, key_order(1)] sint32 ripIfIndex = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.8"), read, write, description("Enable listening to RIP updates on this interface."), status("mandatory")] string ripIfListen = "disabled";
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.7"), read, write, description("Enable sending of RIP updates (change and periodic) on\n\t\t\t\tthis interface."), status("mandatory")] string ripIfSupply = "disabled";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.10"), read, description("The number of RIP packets received on this interface."), status("mandatory")] uint32 ripIfInPackets = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),up(2),sleeping(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.3"), read, description("The current operational state of the interface.\n\t\t\t\tIf ripIfAdminState is disabled(1) then\n\t\t\t\tripIfOperState should be down(1). If ripIfAdminState is\n\t\t\t\tchanged to enabled(2) then ripIfOperState should change to\n\t\t\t\tup(2) if the interface is ready to transmit and\n\t\t\t\treceive network traffic; it should change to\n\t\t\t\tsleeping(3) if the interface is waiting for external\n\t\t\t\tactions (such as a serial line waiting for an\n\t\t\t\tincomming connection); it should remain in the down(1)\n\t\t\t\tstate if and only if there is a fault that prevents it\n\t\t\t\tfrom going to the up(2) state."), status("mandatory")] string ripIfOperState = "down";
	[textual_convention("EnumeratedINTEGER"), enumeration("standard(1),none(2),autostatic(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.4"), read, write, description("The RIP update mechanism used on this interface.\n\t\t\t\tNone(2) is used for static routes configurations.\n\t\t\t\tAutoStatic(3) means that the local router can issue\n\t\t\t\tan update request to the remote router and the response will be\n\t\t\t\tkept statically in the routing database as auto static routes.\n\t\t\t\tStandard(1) is the periodic broadcast RIP mechanism."), status("mandatory")] string ripIfUpdateMode = "standard";
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.2"), read, write, description("The desired state of the interface."), status("mandatory")] string ripIfAdminState = "disabled";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.9"), read, description("The number of RIP packets sent on this interface."), status("mandatory")] uint32 ripIfOutPackets = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.6"), read, write, description("The holding multiplier for routes received in RIP periodic\n\t\t\t\tupdates (applies only if ripIfUpdateMode is Standard(1))."), status("mandatory")] sint32 ripIfAgeMultiplier = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.2.1.1.5"), read, write, description("The RIP update interval, in sec.\n\t\t\t\tFor Standard(1) ripIfUpdateMode, this is the interval with\n\t\t\t\twhich periodic update broadcasts are sent, for AutoStatic(3)\n\t\t\t\tripIfUpdateMode, this is the maximum interval for which\n\t\t\t\trouter will listen for rip announcements, not used for\n\t\t\t\tNone(2) ripIfUpdateMode"), status("mandatory")] sint32 ripIfUpdateInterval = 0;
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_ripIfTableSMIRModuleAssociation";
SmirModule="\\\\.\\root\\default\\SMIR:SNMP_MODULE.Name=\"MSRIPSAP_MIB\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_ripIfTable";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_ripIfTableSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB:SNMP_GROUP.Name=\"ripsapInterfaceV1ObjectGroup\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_ripIfTable";
};

#pragma namespace("\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB")
instance of SNMP_GROUP
{
Name="ripsapBaseV1ObjectGroup";
Group_Id="1.3.6.1.4.1.311.1.9.1";
Status="current";
Description="";
Reference="";
};

#pragma namespace("\\\\.\\root\\default\\SMIR")
[description(""), module_name("MSRIPSAP-MIB"), singleton, group_objectid("1.3.6.1.4.1.311.1.9.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSRIPSAP_MIB_ripsapBase : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),up(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.1.2"), read, description("Indicates the operational state of SAP."), status("mandatory")] string ripsapBaseSapOperState = "down";
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),up(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.9.1.1"), read, description("Indicates the operational state of RIP."), status("mandatory")] string ripsapBaseRipOperState = "down";
};
instance of ModuleToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_ripsapBaseSMIRModuleAssociation";
SmirModule="\\\\.\\root\\default\\SMIR:SNMP_MODULE.Name=\"MSRIPSAP_MIB\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_ripsapBase";
};

instance of GroupToClassAssociator
{
AssocName="SNMP_MSRIPSAP_MIB_ripsapBaseSMIRGroupAssociation";
SmirGroup="\\\\.\\root\\default\\SMIR\\MSRIPSAP_MIB:SNMP_GROUP.Name=\"ripsapBaseV1ObjectGroup\"";
SmirClass="\\\\.\\root\\default\\SMIR:SNMP_MSRIPSAP_MIB_ripsapBase";
};


