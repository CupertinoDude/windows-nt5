// Copyright (c) 1999-2001 Microsoft Corporation, All Rights Reserved
#pragma namespace ("\\\\.\\root\\network\\hpvectra_1")
 
instance of __Win32Provider
{
    MethodSet = 65553 ;
    Provider = "MS_PROXY_PROVIDER" ;
    ProviderClsId = "{CEAE974C-D862-11d0-82D3-00A0C9038B34}" ;
} ;

        [NavigatorAppearance (1)] 
class ManagedSystemElement
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Description ;
        [read, volatile] 
    bool Installed ;
        [read, volatile] 
    string Caption ;
} ;
     
class Setting
{
} ;

class PhysicalElement:ManagedSystemElement
{
        [read, volatile] 
    string Tag ;
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Model ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string PowerState ;
        [read, volatile] 
    string SKU ;
        [read, volatile] 
    string SerialNumber ;
} ;
     
class LogicalElement:ManagedSystemElement
{
        [read, volatile] 
    bool InUse ;
} ;
     
class DiskPartitionConfiguration:Setting
{
} ;
     
class System:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string PrimaryOwner ;
} ;
     
class Protocol:LogicalElement
{
} ;
     
class Process:LogicalElement
{
        [read, volatile] 
    uint32 BasePriority ;
        [read, volatile] 
    uint32 ProcessID ;
} ;
     
        [OpalInventory] 
class SoftwareComponent:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string BuildNumber ;
        [read, volatile] 
    string BuildType ;
        [read, volatile] 
    string CodeSet ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    bool Installable ;
        [read, volatile] 
    string SerialNumber ;
        [read, volatile] 
    uint32 InUseCount ;
} ;
     
class FileSystem:LogicalElement
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    bool CasePreserved ;
        [read, volatile] 
    bool CaseSensitive ;
        [read, volatile] 
    bool Unicode ;
} ;
     
class LogicalFile:LogicalElement
{
        [read, volatile] 
    string Path ;
        [read, volatile] 
    string Extension ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string FileType ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime LastModified ;
        [read, volatile] 
    datetime LastAccessed ;
        [read, volatile] 
    bool Readable ;
        [read, volatile] 
    bool Writeable ;
        [read, volatile] 
    bool Archived ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Open ;
} ;
     
class Database:LogicalElement
{
    string Version ;
} ;
     
class SystemService:LogicalElement
{
        [read, volatile] 
    string State ;
        [read, volatile] 
    string ServiceType ;
} ;
     
class Thread:LogicalElement
{
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 ThreadID ;
} ;
     
class Job:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    datetime ElapsedTime ;
        [read, volatile] 
    string Notify ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime TimeSubmitted ;
        [read, volatile] 
    datetime UntilTime ;
        [read, volatile] 
    string Owner ;
        [read, volatile] 
    string JobDestination ;
} ;
     
class JobDestination:LogicalElement
{
        [read, volatile] 
    uint32 JobCount ;
} ;
     
class DiskPartition:LogicalElement
{
} ;
     
        [OpalInventory] 
class Device:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class PowerSupply:Device
{
        [read, volatile] 
    string BatteryChargeStatus ;
        [read, volatile] 
    bool BatteryInstalled ;
        [read, volatile] 
    datetime BatteryLifetime ;
        [read, volatile] 
    bool CanTurnOffRemotely ;
        [read, volatile] 
    string CommandFile ;
        [read, volatile] 
    uint32 FirstMessageDelay ;
        [read, volatile] 
    bool LowBatterySignal ;
        [read, volatile] 
    uint32 MessageInterval ;
        [read, volatile, Units ("Percent")] 
    uint32 BatteryLifeLeft ;
        [read, volatile] 
    bool PowerFailSignal ;
        [read, volatile] 
    uint32 RechargeRate ;
        [read, volatile] 
    uint32 UPSPort ;
        [read, volatile] 
    string VoltageCapability ;
        [read, volatile] 
    string Type ;
} ;
     
class LogicalStorage:Device
{
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class Modem:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string HardwareID ;
        [read, volatile] 
    uint32 MaxTransmissionSpeed ;
        [read, volatile, Units ("Baud (bits per second)")] 
    uint32 TransmissionSpeed ;
        [read, volatile] 
    string Mode ;
        [read, volatile] 
    string ConnectionMode ;
} ;
     
class SystemCache:Device
{
        [read, volatile] 
    string ErrorCorrection ;
        [read, volatile] 
    string Level ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile, Units ("Nano Seconds")] 
    uint32 Speed ;
        [read, volatile] 
    string WritePolicy ;
} ;
     
class Processor:Device
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string UpgradeMethod ;
        [read, volatile] 
    string Role ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Family ;
        [read, volatile, Units ("Mega Hertz(MHZ)")] 
    uint32 ClockSpeed ;
} ;
     
class Keyboard:Device
{
        [read, volatile] 
    uint32 NumberOfFunctionKeys ;
        [read, volatile] 
    string Layout ;
} ;
     
class Connector:Device
{
} ;
     
class InterfaceDevice:Device
{
        [read, volatile] 
    bool DeviceIsBusy ;
} ;
     
        [OpalInventory] 
class Display:Device
{
        [read, volatile, Units ("Pixel")] 
    uint32 Height ;
        [read, volatile, Units ("Pixel")] 
    uint32 Width ;
        [read, volatile] 
    string MonitorDisplayType ;
} ;
     
        [OpalInventory] 
class MemoryModule:Device
{
        [read, volatile, Units ("Nano Seconds")] 
    uint32 AccessSpeed ;
        [read, volatile] 
    uint64 EndingAddress ;
        [read, volatile] 
    bool ErrorCorrection ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaximumCapacity ;
        [read, volatile] 
    uint64 MaxCapacityLessFractionalPart ;
        [read, volatile] 
    uint32 NumberOfPins ;
        [read, volatile] 
    uint64 StartingAddress ;
        [read, volatile] 
    string Usage ;
        [read, volatile] 
    string ModuleType ;
} ;
     
class PointingDevice:Device
{
        [read, volatile] 
    uint32 NumberOfButtons ;
        [read, volatile] 
    bool ButtonsSwapped ;
        [read, volatile] 
    uint32 XThreshold ;
        [read, volatile] 
    uint32 YThreshold ;
        [read, volatile] 
    uint32 ZThreshold ;
        [read, volatile] 
    uint32 Speed ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string HardwareType ;
        [read, volatile] 
    uint32 DataQueueSize ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile, Units ("100ns")] 
    uint32 Synch ;
        [read, volatile] 
    bool ConnectMultiplePorts ;
        [read, volatile] 
    uint32 MaximumPortsServiced ;
        [read, volatile] 
    string HorizontalMickeys ;
        [read, volatile] 
    string VerticalMickeys ;
        [read, volatile] 
    string DeviceInterface ;
        [read, volatile] 
    string PointerType ;
        [read, volatile]
    string InfFileName ;
        [read, volatile]
    string InfSection ;
} ;
     
class Printer:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    uint32 AveragePagesPerMinute ;
        [read, volatile] 
    string PrintProcessorParameters ;
        [read, volatile] 
    string Processor ;
} ;
     
class MassStorage:Device
{
        [read, volatile] 
    bool MediaLoaded ;
        [read, volatile] 
    string MediaType ;
        [read, volatile] 
    bool MediaRemovable ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class ProgrammableInterruptController:Device
{
} ;
     
class SystemROM:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    string ROMType ;
} ;
     
class DMA:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 AddressSize ;
        [read, volatile] 
    bool AddressTranslation ;
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    uint32 ChannelNumber ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    uint32 TransferSize ;
        [read, volatile] 
    string DMAType ;
} ;
     
        [OpalInventory] 
class CoolingDevice:Device
{
        [read, volatile] 
    uint32 Accuracy ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeed ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdWarning ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdWarning ;
        [read, volatile] 
    uint32 Reading ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile] 
    uint32 Tolerance ;
} ;
     
class Bus:Device
{
} ;
     
class Motherboard:Device
{
} ;
     
class ComputerSystem:System
{
        [read, volatile] 
    datetime LastBootupTime ;
        [read, volatile] 
    string SupportContact ;
        [read, volatile] 
    datetime SystemTime ;
} ;
     
class NetworkProtocol:Protocol
{
        [read, volatile] 
    bool ConnectionlessService ;
        [read, volatile] 
    bool GuaranteesDelivery ;
        [read, volatile] 
    bool GuaranteesSequencing ;
        [read, volatile] 
    uint32 MaximumAddressSize ;
        [read, volatile] 
    uint32 MaximumMessageSize ;
        [read, volatile] 
    bool MessageOriented ;
        [read, volatile] 
    uint32 MinimumAddressSize ;
        [read, volatile] 
    bool PseudoStreamOriented ;
        [read, volatile] 
    bool SupportsBroadcasting ;
        [read, volatile] 
    bool SupportsConnectData ;
        [read, volatile] 
    bool SupportsDisconnectData ;
        [read, volatile] 
    bool SupportsEncryption ;
        [read, volatile] 
    bool SupportsExpeditedData ;
        [read, volatile] 
    bool SupportsFragmentation ;
        [read, volatile] 
    bool SupportsGracefulClosing ;
        [read, volatile] 
    bool SupportsGuaranteedBandwidth ;
        [read, volatile] 
    bool SupportsMulticasting ;
} ;
     
class OperatingSystem:SoftwareComponent
{
        [read, volatile] 
    datetime LastBootUpTime ;
} ;
     
class DataFile:LogicalFile
{
} ;
     
class ExecutableFile:DataFile
{
        [read, volatile] 
    string ExecutableType ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Package:SoftwareComponent
{
} ;
     
class Directory:LogicalFile
{
} ;
     
class NetworkDrive:LogicalStorage
{
} ;
     
class SCSIInterface:InterfaceDevice
{
} ;
     
class ParallelPort:InterfaceDevice
{
} ;
     
class SerialPort:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 Baud ;
        [read, volatile] 
    bool ParityEnabled ;
        [read, volatile] 
    bool OutTxCTSFlow ;
        [read, volatile] 
    bool OutTxDSRFlow ;
        [read, volatile] 
    bool DTRControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile, Units ("Bits")] 
    sint16 ByteSize ;
        [read, volatile] 
    sint16 Parity ;
        [read, volatile] 
    sint16 StopBits ;
} ;
     
class SerialInterface:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    string Processor ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string SepFile ;
} ;
     
class Port:InterfaceDevice
{
} ;
     
class NetworkAdapter:InterfaceDevice
{
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    uint32 IOPortAddress ;
} ;
     
class DisketteController:InterfaceDevice
{
} ;
     
class KeyboardController:InterfaceDevice
{
} ;
     
class DiskController:InterfaceDevice
{
} ;
     
class DisplayController:InterfaceDevice
{
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 MaximumNumberOfRows ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MaximumRefreshRate ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MinimumRefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile, Units ("Bytes")] 
    uint32 VideoMemorySize ;
} ;
     
class MicroChannelBus:Bus
{
} ;
     
class VLBus:Bus
{
} ;
     
class SCSIBus:Bus
{
} ;
     
class PCMCIABus:Bus
{
} ;
     
class ISABus:Bus
{
} ;
     
class EISABus:Bus
{
        [read, volatile] 
    uint32 NumberOfFunctions ;
} ;
     
class AccessBus:Bus
{
} ;
     
class PCIBus:Bus
{
} ;
     
        [OpalInventory] 
class RamDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint64 MemorySize ;
} ;
     
class DiskDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
        [read, volatile] 
    uint32 Partitions ;
        [read, volatile] 
    uint32 TracksPerCylinder ;
        [read, volatile] 
    uint32 SectorsPerTrack ;
        [read, volatile] 
    uint64 TotalCylinders ;
        [read, volatile] 
    uint64 TotalTracks ;
        [read, volatile] 
    uint64 TotalSectors ;
        [read, volatile] 
    string InterfaceType ;
} ;
     
class CDROMDrive:MassStorage
{
} ;
     
class TapeDrive:MassStorage
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 ECC ;
        [read, volatile] 
    uint32 Compression ;
        [read, volatile] 
    uint32 Padding ;
        [read, volatile] 
    uint32 ReportSetMarks ;
        [read, volatile, Units ("Bytes")] 
    uint32 DefaultBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaxBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinBlockSize ;
        [read, volatile] 
    uint32 MaxPartitionCount ;
        [read, volatile] 
    uint32 FeaturesLow ;
        [read, volatile] 
    uint32 FeaturesHigh ;
        [read, volatile] 
    uint32 EOTWarningZoneSize ;
} ;
     
        [OpalInventory] 
class DisketteDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
} ;
     
class PhysicalComponent:PhysicalElement
{
} ;
     
class PhysicalPackage:PhysicalElement
{
} ;
     
class Card:PhysicalPackage
{
} ;
     
class Cabinet:PhysicalPackage
{
        [read, volatile] 
    bool LockPresent ;
} ;
     
class PhysicalLink:PhysicalElement
{
} ;
     
class WiredConnection:PhysicalLink
{
} ;
     
class WirelessConnection:PhysicalLink
{
} ;
     
class PhysicalConnector:PhysicalElement
{
        [read, volatile] 
    string ConnectorPinout ;
} ;
     
class Slot:PhysicalConnector
{
        [read, volatile] 
    string SlotNumber ;
        [read, volatile] 
    string SlotType ;
        [read, volatile] 
    sint16 SlotWidth ;
} ;
     
class NetworkPort:PhysicalConnector
{
} ;
     
class Media:PhysicalComponent
{
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string Format ;
} ;
     
class Chip:PhysicalComponent
{
} ;
     
class VolumeSet:DiskPartitionConfiguration
{
} ;
     
class StripeSet:DiskPartitionConfiguration
{
} ;
     
class MirrorSet:DiskPartitionConfiguration
{
} ;

        [OpalInventory] 
class Configuration
{
} ;
     
        [Schema ("Common")] 
class Profile:Configuration
{
} ;
     
        [OpalInventory] 
class Location
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Position ;
} ;
     
//================================================================================
// ASSOCIATIONS
//================================================================================

        [Association:(ToInstance)] 
class Dependency
{
        [read, volatile] 
    ManagedSystemElement REF Dependent ;
        [read, volatile] 
    ManagedSystemElement REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ElementSetting
{
        [read, volatile] 
    ManagedSystemElement REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class SystemComponent:Component
{
        [read, volatile] 
    System REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class ProcessThreads:Dependency
{
        [read, volatile, key] 
    Thread REF Dependent ;
        [read, volatile, key] 
    Process REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class JobDestinationJobs:Dependency
{
        [read, volatile] 
    Job REF Dependent ;
        [read, volatile] 
    JobDestination REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ServiceDevice:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    SystemService REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class DeviceDriver:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ProcessExecutable:Dependency
{
        [read, volatile] 
    Process REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class Connection:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    Device REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalComponents:Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    PhysicalElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalElementLocation
{
        [read, volatile] 
    PhysicalElement REF Element ;
        [read, volatile] 
    Location REF Location ;
} ;
     
        [Association:(ToInstance)] 
class SettingContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class DependencyContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Dependency REF Dependency ;
} ;
     
        [Association:(ToInstance)] 
class Container
{
        [read, volatile] 
    PhysicalElement REF ContainedElement ;
        [read, volatile] 
    PhysicalPackage REF ContainingElement ;
} ;
     
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
//
//       Win32 classes/associations
//
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BootConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string ConfigurationPath ;
        [read, volatile] 
    string LastDrive ;
        [read, volatile] 
    string ScratchDirectory ;
        [read, volatile] 
    string TempDirectory ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ProgramGroup:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string GroupName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalMemoryConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 AvailableVirtualMemory ;
        [read, volatile] 
    uint32 TotalPageFileSpace ;
        [read, volatile] 
    uint32 TotalPhysicalMemory ;
        [read, volatile] 
    uint32 TotalVirtualMemory ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkLoginProfile:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string FullName ;
        [read, volatile] 
    string Password ;
        [read, volatile] 
    string HomeDirectory ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string ScriptPath ;
        [read, volatile] 
    string UserComment ;
        [read, volatile] 
    string Parms ;
        [read, volatile] 
    string Workstations ;
        [read, volatile] 
    string LogonServer ;
        [read, volatile] 
    string Profile ;
        [read, volatile] 
    string HomeDirectoryDrive ;
        [read, volatile] 
    datetime PasswordAge ;
        [read, volatile] 
    uint32 Priv ;
        [read, volatile] 
    uint32 Flags ;
        [read, volatile] 
    uint32 AuthFlags ;
        [read, volatile] 
    datetime LastLogon ;
        [read, volatile] 
    datetime LastLogoff ;
        [read, volatile] 
    datetime AccountExpires ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaxStorage ;
        [read, volatile] 
    uint32 UnitsPerWeek ;
        [read, volatile] 
    datetime LogonHours ;
        [read, volatile] 
    uint32 BadPasswordCount ;
        [read, volatile] 
    uint32 NumberOfLogons ;
        [read, volatile] 
    uint32 CountryCode ;
        [read, volatile] 
    uint32 CodePage ;
        [read, volatile] 
    uint32 UserId ;
        [read, volatile] 
    uint32 PrimaryGroupId ;
        [read, volatile] 
    datetime PasswordExpired ;
        [read, volatile] 
    string UserType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Desktop:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BorderWidth ;
        [read, volatile] 
    bool CoolSwitch ;
        [read, volatile] 
    uint32 CursorBlinkRate ;
        [read, volatile] 
    bool DragFullWindows ;
        [read, volatile] 
    uint32 GridGranularity ;
        [read, volatile] 
    uint32 IconSpacing ;
        [read, volatile] 
    uint32 IconTitleSize ;
        [read, volatile] 
    string Pattern ;
        [read, volatile] 
    bool ScreenSaverActive ;
        [read, volatile] 
    string ScreenSaverExecutable ;
        [read, volatile] 
    bool ScreenSaverSecure ;
        [read, volatile, Units ("Minutes")] 
    uint32 ScreenSaverTimeout ;
        [read, volatile] 
    string IconTitleFaceName ;
        [read, volatile] 
    bool IconTitleWrap ;
        [read, volatile] 
    string Wallpaper ;
        [read, volatile] 
    bool WallpaperTiled ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapterConfiguration:Setting
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DHCPEnabled ;
        [read, volatile] 
    datetime DHCPLeaseExpires ;
        [read, volatile] 
    datetime DHCPLeaseObtained ;
        [read, volatile] 
    string DHCPServer ;
        [read, volatile] 
    string DefaultIPGateway ;
        [read, volatile] 
    uint32 IOAddress ;
        [read, volatile] 
    string IPAddress ;
        [read, volatile] 
    string IPSubnet ;
        [read, volatile] 
    string IPXAddress ;
        [read, volatile] 
    uint32 IRQ ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string BusType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPortConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool IsBusy ;
        [read, volatile] 
    uint32 BaudRate ;
        [read, volatile] 
    uint32 XOnXMitThreshold ;
        [read, volatile] 
    uint32 XOffXMitThreshold ;
        [read, volatile] 
    uint32 BitsPerByte ;
        [read, volatile] 
    uint32 XOnCharacter ;
        [read, volatile] 
    uint32 XOffCharacter ;
        [read, volatile] 
    uint32 ErrorReplaceCharacter ;
        [read, volatile] 
    uint32 EOFCharacter ;
        [read, volatile] 
    uint32 EventCharacter ;
        [read, volatile] 
    bool BinaryModeEnabled ;
        [read, volatile] 
    bool ParityCheckEnabled ;
        [read, volatile] 
    bool CTSOutflowControl ;
        [read, volatile] 
    bool DSROutflowControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile] 
    bool ContinueXMitOnXOff ;
        [read, volatile] 
    bool XOnXOffOutFlowControl ;
        [read, volatile] 
    bool XOnXOffInFlowControl ;
        [read, volatile] 
    bool ErrorReplacementEnabled ;
        [read, volatile] 
    bool DiscardNULLBytes ;
        [read, volatile] 
    bool AbortReadWriteOnError ;
        [read, volatile] 
    string DTRFlowControlType ;
        [read, volatile] 
    string RTSFlowControlType ;
        [read, volatile] 
    string Parity ;
        [read, volatile] 
    string StopBits ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TimeZone:Setting
{
        [read, volatile, key] 
    string StandardName ;
        [read, volatile] 
    uint32 Bias ;
        [read, volatile] 
    uint32 StandardYear ;
        [read, volatile] 
    uint32 StandardMonth ;
        [read, volatile] 
    string StandardDayOfWeek ;
        [read, volatile] 
    uint32 StandardDay ;
        [read, volatile] 
    uint32 StandardHour ;
        [read, volatile] 
    uint32 StandardMinute ;
        [read, volatile] 
    uint32 StandardSecond ;
        [read, volatile] 
    uint32 StandardMillisecond ;
        [read, volatile] 
    uint32 StandardBias ;
        [read, volatile] 
    string DaylightName ;
        [read, volatile] 
    uint32 DaylightYear ;
        [read, volatile] 
    uint32 DaylightMonth ;
        [read, volatile] 
    string DaylightDayOfWeek ;
        [read, volatile] 
    uint32 DaylightDay ;
        [read, volatile] 
    uint32 DaylightHour ;
        [read, volatile] 
    uint32 DaylightMinute ;
        [read, volatile] 
    uint32 DaylightSecond ;
        [read, volatile] 
    uint32 DaylightMillisecond ;
        [read, volatile] 
    uint32 DaylightBias ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LoadOrderGroup:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 GroupOrder ;
} ;
     
class Win32NetworkConnection:LogicalElement
{
        [read, volatile] 
    string ConnectionType ;
        [read, volatile] 
    string RemotePath ;
        [read, volatile] 
    string LocalName ;
        [read, volatile] 
    string RemoteName ;
        [read, volatile] 
    string ProviderName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string DisplayType ;
        [read, volatile] 
    string ResourceType ;
        [read, volatile] 
    string UserName ;
} ;
     
class Win32SystemResource:LogicalElement
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkClient:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Win32Account:LogicalElement
{
} ;
     
class Win32Driver:ExecutableFile
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Service:SystemService
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string StartType ;
        [read, volatile] 
    string ErrorControl ;
        [read, volatile] 
    string PathName ;
        [read, volatile] 
    uint32 TagId ;
        [read, volatile] 
    string StartName ;
        [read, volatile] 
    string CommandLine ;
        [read, volatile] 
    string DisplayName ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ComputerSystem:ComputerSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool AutomaticResetBootOption ;
        [read, volatile] 
    bool AutomaticResetCapability ;
        [read, volatile] 
    bool AutomaticResetStatus ;
        [read, volatile] 
    uint32 AutomaticResetTimerInterval ;
        [read, volatile] 
    bool AutomaticResetTimerReset ;
        [read, volatile] 
    bool BootROMSupported ;
        [read, volatile] 
    string BootupState ;
        [read, volatile] 
    bool ConditionalReboot ;
        [read, volatile] 
    bool InfraredSupported ;
        [read, volatile] 
    bool LockKeyboardAndMouse ;
        [read, volatile] 
    bool LockPCPowerOnAndResetButtons ;
        [read, volatile] 
    bool LockSystem ;
        [read, volatile] 
    bool NetworkServerModeEnabled ;
        [read, volatile] 
    bool PowerManagementSupported ;
        [read, volatile] 
    string ResetBootOption ;
        [read, volatile] 
    bool ResetTimeout ;
        [read, volatile] 
    bool SystemFilesNotModified ;
        [read, volatile] 
    bool UnconditionalReboot ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string SystemType ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string SystemRole ;
        [read, volatile] 
    string Location ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkProtocol:NetworkProtocol
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Process:Process
{
        [read, volatile, key] 
    string Name ;
        [read, volatile, key] 
    uint32 ProcessId ;
        [read, volatile] 
    string WindowsVersion ;
        [read, volatile] 
    uint32 ThreadCount ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinimumWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumWorkingSetSize ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime Exited ;
        [read, volatile] 
    datetime TimeInKernel ;
        [read, volatile] 
    datetime TimeInUserMode ;
        [read, volatile] 
    uint32 PageFaults ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 WorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakPageFileUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PageFileUsage ;
        [read, volatile] 
    string ExecutablePath ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BIOS:SoftwareComponent
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Verify ;
        [read, volatile] 
    uint32 StartingAddress ;
        [read, volatile] 
    uint32 EndingAddress ;
        [read, volatile] 
    datetime ReleaseDate ;
        [read, volatile] 
    bool PrimaryBIOS ;
        [read, volatile] 
    string Characteristics[] ;
        [read, volatile]
    string SerialNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32OperatingSystem:OperatingSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string WindowsDirectory ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string CSDVersion ;
        [read, volatile] 
    string SystemDirectory ;
        [read, volatile] 
    string BootDevice ;
        [read, volatile] 
    string SystemStartOptions ;
        [read, volatile] 
    bool Primary ;
        [read, volatile] 
    string CountryCode ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PowerSupply:PowerSupply
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Port:Port
{
        [read, volatile] 
    string Start ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CurrentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PersistentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32RecentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DriverVXD:ExecutableFile
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string IdentiferNumber ;
        [read, volatile] 
    string DeviceDescriptorBlock ;
        [read, volatile] 
    string V86_API ;
        [read, volatile] 
    string PM_API ;
        [read, volatile] 
    uint32 ServiceTableSize ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32UserAccount:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
class Win32SystemMemoryResource:Win32SystemResource
{
        [read, volatile] 
    uint32 AddressRange ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile] 
    string MemoryType ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string StartingAddress ;
        [read, volatile]
    string Owner ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DeviceMemoryAddress:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DMAChannel:Win32SystemMemoryResource
{
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile, key] 
    uint32 Channel ;
        [read, volatile] 
    uint32 Port ;
        [read, volatile]
    uint32 ChannelWidth ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32IRQResource:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 IRQNumber ;
        [read, volatile] 
    uint32 Vector ;
        [read, volatile] 
    uint32 Level ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    string AffinityMask ;
        [read, volatile] 
    string InterruptType ;
        [read, volatile] 
    uint32 TriggerType ;
        [read, volatile] 
    uint32 Shareable ;
        [read, volatile] 
    uint32 Availability ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDriver:Win32Driver
{
        [read, volatile, key] 
    string Name ;
        [key] 
    uint32 Address ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapter:NetworkAdapter
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string ProductName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPort:SerialPort
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 MaximumOutputBufferSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumInputBufferSize ;
        [read, volatile, Units ("Bits per second")] 
    uint32 MaximumBaudRate ;
        [read, volatile] 
    string ProviderType ;
        [read, volatile] 
    bool Supports16BitMode ;
        [read, volatile] 
    bool SupportsDTRDSR ;
        [read, volatile] 
    bool SupportsIntTimeouts ;
        [read, volatile] 
    bool SupportsParityCheck ;
        [read, volatile] 
    bool SupportsRLSD ;
        [read, volatile] 
    bool SupportsRTSCTS ;
        [read, volatile] 
    bool SupportsXOnXOffSet ;
        [read, volatile] 
    bool SupportsSpecialCharacters ;
        [read, volatile] 
    bool SupportsElapsedTimeouts ;
        [read, volatile] 
    bool SupportsXOnXOff ;
        [read, volatile] 
    bool SettableBaudRate ;
        [read, volatile] 
    bool SettableDataBits ;
        [read, volatile] 
    bool SettableFlowControl ;
        [read, volatile] 
    bool SettableParity ;
        [read, volatile] 
    bool SettableParityCheck ;
        [read, volatile] 
    bool SettableRLSD ;
        [read, volatile] 
    bool SettableStopBits ;
        [read, volatile] 
    bool Binary ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ParallelPort:ParallelPort
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DMASupport ;
        [read, volatile] 
    string Capabilities ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SCSIInterface:SCSIInterface
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 InterruptNumber ;
        [read, volatile] 
    uint32 IOAddress ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Processor:Processor
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32KeyboardDevice:Keyboard
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ModemDevice:Modem
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile]
    string AttachedTo ;
        [read, volatile]
    string BlindOff ;
        [read, volatile]
    string BlindOn ;
        [read, volatile]
    string CallSetupFailTimer ;
        [read, volatile]
    string CompatibilityFlags ;
        [read, volatile]
    string CompressionOff ;
        [read, volatile]
    string CompressionOn ;
        [read, volatile]
    string ConfigDialog ;
        [read, volatile]
    string DCB ;
        [read, volatile]
    string Default ;
        [read, volatile]
    string DeviceType ;
        [read, volatile]
    string DevLoader ;
        [read, volatile]
    string DialPrefix ;
        [read, volatile]
    string DialSuffix ;
        [read, volatile]
    string DriverDate ;
        [read, volatile]
    string ErrorControlForced ;
        [read, volatile]
    string ErrorControlOff ;
        [read, volatile]
    string ErrorControlOn ;
        [read, volatile]
    string FlowControlHard ;
        [read, volatile]
    string FlowControlSoft ;
        [read, volatile]
    string FlowControlOff ;
        [read, volatile]
    string InactivityScale ;
        [read, volatile]
    string InactivityTimeout ;
        [read, volatile]
    string Model ;
        [read, volatile]
    string ModemInfPath ;
        [read, volatile]
    string ModemInfSection ;
        [read, volatile]
    string ModulationBell ;
        [read, volatile]
    string ModulationCCITT ;
        [read, volatile]
    string PortSubClass ;
        [read, volatile]
    string Prefix ;
        [read, volatile]
    string Properties ;
        [read, volatile]
    string ProviderName ;
        [read, volatile]
    string Pulse ;
        [read, volatile]
    string Reset ;
        [read, volatile]
    string ResponsesKeyName ;
        [read, volatile]
    string SpeakerModeDial ;
        [read, volatile]
    string SpeakerModeOff ;
        [read, volatile]
    string SpeakerModeOn ;
        [read, volatile]
    string SpeakerModeSetup ;
        [read, volatile]
    string SpeakerVolumeHigh ;
        [read, volatile]
    string SpeakerVolumeLow ;
        [read, volatile]
    string SpeakerVolumeMed ;
        [read, volatile]
    string StringFormat ;
        [read, volatile]
    string Terminator ;
        [read, volatile]
    string Tone ;
        [read, volatile]
    string VoiceSwitchFeature ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32MotherboardDevice:Motherboard
{
        [read, volatile, key] 
    string PrimaryBusType ;
        [read, volatile] 
    string SecondaryBusType ;
        [read, volatile] 
    string RevisionNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PointingDevice:PointingDevice
{
        [read, volatile, key] 
    string HardwareType ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
        [read, volatile]
    uint32 SampleRate ;
        [read, volatile]
    uint32 EnableWheelDetection ;
        [read, volatile]
    string DevLoader ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Printer:Printer
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint32 Attributes ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    uint32 JobCount ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string PortName ;
        [read, volatile] 
    string PrintJobDataType ;
        [read, volatile] 
    string SepFile ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 DefaultPriority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime UntilTime ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrintJob:Job
{
        [read, volatile, key] 
    uint32 JobId ;
        [read, volatile] 
    uint32 TotalPages ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    uint32 PagesPrinted ;
        [read, volatile] 
    string HostPrintQueue ;
        [read, volatile] 
	string DataType ;
        [read, volatile] 
	string Document ;
        [read, volatile] 
	string DriverName ;
        [read, volatile] 
	string Parameters ;
        [read, volatile] 
	string PrintProcessor ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TapeDrive:TapeDrive
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CDRomDrive:CDROMDrive
{
        [read, volatile, key] 
    string Drive ;
        [read, volatile] 
    string Id ;
        [read, volatile] 
    string RevisionLevel ;
        [read, volatile] 
    uint16 SCSILun ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    uint16 FileSystemFlags ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskDrive:DiskDrive
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint16 SCSIPort ;
        [read, volatile] 
    uint32 SCSIBus ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    uint16 SCSILogicalUnit ;
        [read, volatile] 
    string Model ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalDisk:LogicalStorage
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string FileSystem ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    string Provider ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskPartition:DiskPartition
{
        [read, volatile, key] 
    uint32 DiskIndex ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Type ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint32 StartingOffset ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    uint32 HiddenSectors ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    bool BootPartition ;
        [read, volatile] 
    bool RewritePartition ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Encrypted ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayConfiguration:Setting
{
        [read, volatile, key] 
    string DeviceName ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    bool TTOption ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 DitherType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayControllerConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 HorizontalResolution ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    uint32 VerticalResolution ;
        [read, volatile] 
    string VideoMode ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceEntriesInAColorTable ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 ReservedSystemPaletteEntries ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32VideoConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenWidth ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenHeight ;
        [read, volatile, Units ("Not specified")] 
    uint32 HorizontalResolution ;
        [read, volatile, Units ("Not specified")] 
    uint32 VerticalResolution ;
        [read, volatile] 
    uint32 PixelsPerXLogicalInch ;
        [read, volatile] 
    uint32 PixelsPerYLogicalInch ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 ColorTableEntries ;
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 SystemPaletteReservedEntries ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string MonitorType ;
        [read, volatile] 
    string MonitorManufacturer ;
        [read, volatile] 
    string AdapterLocation ;
        [read, volatile] 
    string AdapterDescription ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string InstalledDisplayDrivers ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    datetime DriverDate ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrinterConfiguration:Setting
{
        [read, volatile, key]
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    uint32 DitherType ;
        [read, volatile] 
    uint32 MediaType ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    string FormName ;
        [read, volatile] 
    bool Collate ;
        [read, volatile] 
    uint32 TTOption ;
        [read, volatile] 
    uint32 YResolution ;
        [read, volatile] 
    bool Duplex ;
        [read, volatile] 
    uint32 Color ;
        [read, volatile] 
    uint32 PrintQuality ;
        [read, volatile] 
    uint32 Copies ;
        [read, volatile] 
    uint32 Scale ;
        [read, volatile] 
    uint32 PaperWidth ;
        [read, volatile] 
    uint32 PaperLength ;
        [read, volatile] 
    uint32 PaperSize ;
        [read, volatile] 
    uint32 Orientation ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    string DeviceName ;
        [read, volatile] 
    uint32 XResolution ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Environment:Win32SystemResource
{
        [read, volatile, key]
    string Name ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string VariableName ;
        [read, volatile] 
    string VariableValue ;
} ;     

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PageFile:DataFile
{
        [read, volatile, key]
    string Name ;
        [read, volatile, Units ("Megabytes")] 
    uint32 MaximumSize ;
        [read, volatile, Units ("Megabytes")] 
    uint32 FreeSpace ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Group:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Share:LogicalElement
{
        [read, volatile, key]
    string Name ;
        [read, volatile]
    bool AllowMaximum ;
        [read, volatile]
    uint32 MaximumAllowed ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance), NavigatorAppearance (2)] 
class Win32ProtocolBinding
{
        [read, volatile, key] 
    Win32NetworkProtocol REF Protocol ;
        [read, volatile, key] 
    Win32NetworkAdapter REF Adapter ;
        [read, volatile] 
    Win32Service REF Service ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32DiskDriveToDiskPartition:Dependency
{
        [read, volatile, key] 
    Win32DiskDrive REF Antecedent ;
        [read, volatile, key] 
    Win32DiskPartition REF Dependent ;
} ;
     
        [Association:(ToInstance)] 
class Win32DeviceSettings:ElementSetting
{
        [read, volatile] 
    Device REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SerialPortSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32SerialPort REF Element ;
        [read, volatile, key] 
    Win32SerialPortConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemBIOS:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32BIOS REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemOperatingSystem:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32OperatingSystem REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class Win32SystemSetting:ElementSetting
{
        [read, volatile] 
    Win32ComputerSystem REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLogicalMemoryConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LogicalMemoryConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemSystemDriver:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemDriver REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLoadOrderGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LoadOrderGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemTimeZone:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32TimeZone REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemUsers:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32UserAccount REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProcesses:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Process REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemPartitions:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32DiskPartition REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemServices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Service REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProgramGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32ProgramGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemDesktop:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDevices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Device REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemNetworkConnections:SystemComponent 
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32NetworkConnection REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32UserDesktop:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32UserAccount REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32NetworkAdapterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32NetworkAdapter REF Element ;
        [read, volatile, key] 
    Win32NetworkAdapterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32PrinterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Printer REF Element ;
        [read, volatile, key] 
    Win32PrinterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemBootConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32BootConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemResources:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemResource REF ComponentPart ;
} ;
     



#pragma namespace ("\\\\.\\root\\network\\ibm350_1")
 
instance of __Win32Provider
{
    MethodSet = 65553 ;
    Provider = "MS_PROXY_PROVIDER" ;
    ProviderClsId = "{CEAE974C-D862-11d0-82D3-00A0C9038B34}" ;
} ;

        [NavigatorAppearance (1)] 
class ManagedSystemElement
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Description ;
        [read, volatile] 
    bool Installed ;
        [read, volatile] 
    string Caption ;
} ;
     
class Setting
{
} ;

class PhysicalElement:ManagedSystemElement
{
        [read, volatile] 
    string Tag ;
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Model ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string PowerState ;
        [read, volatile] 
    string SKU ;
        [read, volatile] 
    string SerialNumber ;
} ;
     
class LogicalElement:ManagedSystemElement
{
        [read, volatile] 
    bool InUse ;
} ;
     
class DiskPartitionConfiguration:Setting
{
} ;
     
class System:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string PrimaryOwner ;
} ;
     
class Protocol:LogicalElement
{
} ;
     
class Process:LogicalElement
{
        [read, volatile] 
    uint32 BasePriority ;
        [read, volatile] 
    uint32 ProcessID ;
} ;
     
        [OpalInventory] 
class SoftwareComponent:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string BuildNumber ;
        [read, volatile] 
    string BuildType ;
        [read, volatile] 
    string CodeSet ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    bool Installable ;
        [read, volatile] 
    string SerialNumber ;
        [read, volatile] 
    uint32 InUseCount ;
} ;
     
class FileSystem:LogicalElement
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    bool CasePreserved ;
        [read, volatile] 
    bool CaseSensitive ;
        [read, volatile] 
    bool Unicode ;
} ;
     
class LogicalFile:LogicalElement
{
        [read, volatile] 
    string Path ;
        [read, volatile] 
    string Extension ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string FileType ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime LastModified ;
        [read, volatile] 
    datetime LastAccessed ;
        [read, volatile] 
    bool Readable ;
        [read, volatile] 
    bool Writeable ;
        [read, volatile] 
    bool Archived ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Open ;
} ;
     
class Database:LogicalElement
{
    string Version ;
} ;
     
class SystemService:LogicalElement
{
        [read, volatile] 
    string State ;
        [read, volatile] 
    string ServiceType ;
} ;
     
class Thread:LogicalElement
{
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 ThreadID ;
} ;
     
class Job:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    datetime ElapsedTime ;
        [read, volatile] 
    string Notify ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime TimeSubmitted ;
        [read, volatile] 
    datetime UntilTime ;
        [read, volatile] 
    string Owner ;
        [read, volatile] 
    string JobDestination ;
} ;
     
class JobDestination:LogicalElement
{
        [read, volatile] 
    uint32 JobCount ;
} ;
     
class DiskPartition:LogicalElement
{
} ;
     
        [OpalInventory] 
class Device:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class PowerSupply:Device
{
        [read, volatile] 
    string BatteryChargeStatus ;
        [read, volatile] 
    bool BatteryInstalled ;
        [read, volatile] 
    datetime BatteryLifetime ;
        [read, volatile] 
    bool CanTurnOffRemotely ;
        [read, volatile] 
    string CommandFile ;
        [read, volatile] 
    uint32 FirstMessageDelay ;
        [read, volatile] 
    bool LowBatterySignal ;
        [read, volatile] 
    uint32 MessageInterval ;
        [read, volatile, Units ("Percent")] 
    uint32 BatteryLifeLeft ;
        [read, volatile] 
    bool PowerFailSignal ;
        [read, volatile] 
    uint32 RechargeRate ;
        [read, volatile] 
    uint32 UPSPort ;
        [read, volatile] 
    string VoltageCapability ;
        [read, volatile] 
    string Type ;
} ;
     
class LogicalStorage:Device
{
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class Modem:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string HardwareID ;
        [read, volatile] 
    uint32 MaxTransmissionSpeed ;
        [read, volatile, Units ("Baud (bits per second)")] 
    uint32 TransmissionSpeed ;
        [read, volatile] 
    string Mode ;
        [read, volatile] 
    string ConnectionMode ;
} ;
     
class SystemCache:Device
{
        [read, volatile] 
    string ErrorCorrection ;
        [read, volatile] 
    string Level ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile, Units ("Nano Seconds")] 
    uint32 Speed ;
        [read, volatile] 
    string WritePolicy ;
} ;
     
class Processor:Device
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string UpgradeMethod ;
        [read, volatile] 
    string Role ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Family ;
        [read, volatile, Units ("Mega Hertz(MHZ)")] 
    uint32 ClockSpeed ;
} ;
     
class Keyboard:Device
{
        [read, volatile] 
    uint32 NumberOfFunctionKeys ;
        [read, volatile] 
    string Layout ;
} ;
     
class Connector:Device
{
} ;
     
class InterfaceDevice:Device
{
        [read, volatile] 
    bool DeviceIsBusy ;
} ;
     
        [OpalInventory] 
class Display:Device
{
        [read, volatile, Units ("Pixel")] 
    uint32 Height ;
        [read, volatile, Units ("Pixel")] 
    uint32 Width ;
        [read, volatile] 
    string MonitorDisplayType ;
} ;
     
        [OpalInventory] 
class MemoryModule:Device
{
        [read, volatile, Units ("Nano Seconds")] 
    uint32 AccessSpeed ;
        [read, volatile] 
    uint64 EndingAddress ;
        [read, volatile] 
    bool ErrorCorrection ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaximumCapacity ;
        [read, volatile] 
    uint64 MaxCapacityLessFractionalPart ;
        [read, volatile] 
    uint32 NumberOfPins ;
        [read, volatile] 
    uint64 StartingAddress ;
        [read, volatile] 
    string Usage ;
        [read, volatile] 
    string ModuleType ;
} ;
     
class PointingDevice:Device
{
        [read, volatile] 
    uint32 NumberOfButtons ;
        [read, volatile] 
    bool ButtonsSwapped ;
        [read, volatile] 
    uint32 XThreshold ;
        [read, volatile] 
    uint32 YThreshold ;
        [read, volatile] 
    uint32 ZThreshold ;
        [read, volatile] 
    uint32 Speed ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string HardwareType ;
        [read, volatile] 
    uint32 DataQueueSize ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile, Units ("100ns")] 
    uint32 Synch ;
        [read, volatile] 
    bool ConnectMultiplePorts ;
        [read, volatile] 
    uint32 MaximumPortsServiced ;
        [read, volatile] 
    string HorizontalMickeys ;
        [read, volatile] 
    string VerticalMickeys ;
        [read, volatile] 
    string DeviceInterface ;
        [read, volatile] 
    string PointerType ;
        [read, volatile]
    string InfFileName ;
        [read, volatile]
    string InfSection ;
} ;
     
class Printer:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    uint32 AveragePagesPerMinute ;
        [read, volatile] 
    string PrintProcessorParameters ;
        [read, volatile] 
    string Processor ;
} ;
     
class MassStorage:Device
{
        [read, volatile] 
    bool MediaLoaded ;
        [read, volatile] 
    string MediaType ;
        [read, volatile] 
    bool MediaRemovable ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class ProgrammableInterruptController:Device
{
} ;
     
class SystemROM:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    string ROMType ;
} ;
     
class DMA:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 AddressSize ;
        [read, volatile] 
    bool AddressTranslation ;
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    uint32 ChannelNumber ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    uint32 TransferSize ;
        [read, volatile] 
    string DMAType ;
} ;
     
        [OpalInventory] 
class CoolingDevice:Device
{
        [read, volatile] 
    uint32 Accuracy ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeed ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdWarning ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdWarning ;
        [read, volatile] 
    uint32 Reading ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile] 
    uint32 Tolerance ;
} ;
     
class Bus:Device
{
} ;
     
class Motherboard:Device
{
} ;
     
class ComputerSystem:System
{
        [read, volatile] 
    datetime LastBootupTime ;
        [read, volatile] 
    string SupportContact ;
        [read, volatile] 
    datetime SystemTime ;
} ;
     
class NetworkProtocol:Protocol
{
        [read, volatile] 
    bool ConnectionlessService ;
        [read, volatile] 
    bool GuaranteesDelivery ;
        [read, volatile] 
    bool GuaranteesSequencing ;
        [read, volatile] 
    uint32 MaximumAddressSize ;
        [read, volatile] 
    uint32 MaximumMessageSize ;
        [read, volatile] 
    bool MessageOriented ;
        [read, volatile] 
    uint32 MinimumAddressSize ;
        [read, volatile] 
    bool PseudoStreamOriented ;
        [read, volatile] 
    bool SupportsBroadcasting ;
        [read, volatile] 
    bool SupportsConnectData ;
        [read, volatile] 
    bool SupportsDisconnectData ;
        [read, volatile] 
    bool SupportsEncryption ;
        [read, volatile] 
    bool SupportsExpeditedData ;
        [read, volatile] 
    bool SupportsFragmentation ;
        [read, volatile] 
    bool SupportsGracefulClosing ;
        [read, volatile] 
    bool SupportsGuaranteedBandwidth ;
        [read, volatile] 
    bool SupportsMulticasting ;
} ;
     
class OperatingSystem:SoftwareComponent
{
        [read, volatile] 
    datetime LastBootUpTime ;
} ;
     
class DataFile:LogicalFile
{
} ;
     
class ExecutableFile:DataFile
{
        [read, volatile] 
    string ExecutableType ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Package:SoftwareComponent
{
} ;
     
class Directory:LogicalFile
{
} ;
     
class NetworkDrive:LogicalStorage
{
} ;
     
class SCSIInterface:InterfaceDevice
{
} ;
     
class ParallelPort:InterfaceDevice
{
} ;
     
class SerialPort:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 Baud ;
        [read, volatile] 
    bool ParityEnabled ;
        [read, volatile] 
    bool OutTxCTSFlow ;
        [read, volatile] 
    bool OutTxDSRFlow ;
        [read, volatile] 
    bool DTRControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile, Units ("Bits")] 
    sint16 ByteSize ;
        [read, volatile] 
    sint16 Parity ;
        [read, volatile] 
    sint16 StopBits ;
} ;
     
class SerialInterface:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    string Processor ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string SepFile ;
} ;
     
class Port:InterfaceDevice
{
} ;
     
class NetworkAdapter:InterfaceDevice
{
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    uint32 IOPortAddress ;
} ;
     
class DisketteController:InterfaceDevice
{
} ;
     
class KeyboardController:InterfaceDevice
{
} ;
     
class DiskController:InterfaceDevice
{
} ;
     
class DisplayController:InterfaceDevice
{
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 MaximumNumberOfRows ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MaximumRefreshRate ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MinimumRefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile, Units ("Bytes")] 
    uint32 VideoMemorySize ;
} ;
     
class MicroChannelBus:Bus
{
} ;
     
class VLBus:Bus
{
} ;
     
class SCSIBus:Bus
{
} ;
     
class PCMCIABus:Bus
{
} ;
     
class ISABus:Bus
{
} ;
     
class EISABus:Bus
{
        [read, volatile] 
    uint32 NumberOfFunctions ;
} ;
     
class AccessBus:Bus
{
} ;
     
class PCIBus:Bus
{
} ;
     
        [OpalInventory] 
class RamDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint64 MemorySize ;
} ;
     
class DiskDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
        [read, volatile] 
    uint32 Partitions ;
        [read, volatile] 
    uint32 TracksPerCylinder ;
        [read, volatile] 
    uint32 SectorsPerTrack ;
        [read, volatile] 
    uint64 TotalCylinders ;
        [read, volatile] 
    uint64 TotalTracks ;
        [read, volatile] 
    uint64 TotalSectors ;
        [read, volatile] 
    string InterfaceType ;
} ;
     
class CDROMDrive:MassStorage
{
} ;
     
class TapeDrive:MassStorage
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 ECC ;
        [read, volatile] 
    uint32 Compression ;
        [read, volatile] 
    uint32 Padding ;
        [read, volatile] 
    uint32 ReportSetMarks ;
        [read, volatile, Units ("Bytes")] 
    uint32 DefaultBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaxBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinBlockSize ;
        [read, volatile] 
    uint32 MaxPartitionCount ;
        [read, volatile] 
    uint32 FeaturesLow ;
        [read, volatile] 
    uint32 FeaturesHigh ;
        [read, volatile] 
    uint32 EOTWarningZoneSize ;
} ;
     
        [OpalInventory] 
class DisketteDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
} ;
     
class PhysicalComponent:PhysicalElement
{
} ;
     
class PhysicalPackage:PhysicalElement
{
} ;
     
class Card:PhysicalPackage
{
} ;
     
class Cabinet:PhysicalPackage
{
        [read, volatile] 
    bool LockPresent ;
} ;
     
class PhysicalLink:PhysicalElement
{
} ;
     
class WiredConnection:PhysicalLink
{
} ;
     
class WirelessConnection:PhysicalLink
{
} ;
     
class PhysicalConnector:PhysicalElement
{
        [read, volatile] 
    string ConnectorPinout ;
} ;
     
class Slot:PhysicalConnector
{
        [read, volatile] 
    string SlotNumber ;
        [read, volatile] 
    string SlotType ;
        [read, volatile] 
    sint16 SlotWidth ;
} ;
     
class NetworkPort:PhysicalConnector
{
} ;
     
class Media:PhysicalComponent
{
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string Format ;
} ;
     
class Chip:PhysicalComponent
{
} ;
     
class VolumeSet:DiskPartitionConfiguration
{
} ;
     
class StripeSet:DiskPartitionConfiguration
{
} ;
     
class MirrorSet:DiskPartitionConfiguration
{
} ;

        [OpalInventory] 
class Configuration
{
} ;
     
        [Schema ("Common")] 
class Profile:Configuration
{
} ;
     
        [OpalInventory] 
class Location
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Position ;
} ;
     
//================================================================================
// ASSOCIATIONS
//================================================================================

        [Association:(ToInstance)] 
class Dependency
{
        [read, volatile] 
    ManagedSystemElement REF Dependent ;
        [read, volatile] 
    ManagedSystemElement REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ElementSetting
{
        [read, volatile] 
    ManagedSystemElement REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class SystemComponent:Component
{
        [read, volatile] 
    System REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class ProcessThreads:Dependency
{
        [read, volatile, key] 
    Thread REF Dependent ;
        [read, volatile, key] 
    Process REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class JobDestinationJobs:Dependency
{
        [read, volatile] 
    Job REF Dependent ;
        [read, volatile] 
    JobDestination REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ServiceDevice:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    SystemService REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class DeviceDriver:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ProcessExecutable:Dependency
{
        [read, volatile] 
    Process REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class Connection:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    Device REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalComponents:Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    PhysicalElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalElementLocation
{
        [read, volatile] 
    PhysicalElement REF Element ;
        [read, volatile] 
    Location REF Location ;
} ;
     
        [Association:(ToInstance)] 
class SettingContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class DependencyContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Dependency REF Dependency ;
} ;
     
        [Association:(ToInstance)] 
class Container
{
        [read, volatile] 
    PhysicalElement REF ContainedElement ;
        [read, volatile] 
    PhysicalPackage REF ContainingElement ;
} ;
     
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
//
//       Win32 classes/associations
//
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BootConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string ConfigurationPath ;
        [read, volatile] 
    string LastDrive ;
        [read, volatile] 
    string ScratchDirectory ;
        [read, volatile] 
    string TempDirectory ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ProgramGroup:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string GroupName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalMemoryConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 AvailableVirtualMemory ;
        [read, volatile] 
    uint32 TotalPageFileSpace ;
        [read, volatile] 
    uint32 TotalPhysicalMemory ;
        [read, volatile] 
    uint32 TotalVirtualMemory ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkLoginProfile:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string FullName ;
        [read, volatile] 
    string Password ;
        [read, volatile] 
    string HomeDirectory ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string ScriptPath ;
        [read, volatile] 
    string UserComment ;
        [read, volatile] 
    string Parms ;
        [read, volatile] 
    string Workstations ;
        [read, volatile] 
    string LogonServer ;
        [read, volatile] 
    string Profile ;
        [read, volatile] 
    string HomeDirectoryDrive ;
        [read, volatile] 
    datetime PasswordAge ;
        [read, volatile] 
    uint32 Priv ;
        [read, volatile] 
    uint32 Flags ;
        [read, volatile] 
    uint32 AuthFlags ;
        [read, volatile] 
    datetime LastLogon ;
        [read, volatile] 
    datetime LastLogoff ;
        [read, volatile] 
    datetime AccountExpires ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaxStorage ;
        [read, volatile] 
    uint32 UnitsPerWeek ;
        [read, volatile] 
    datetime LogonHours ;
        [read, volatile] 
    uint32 BadPasswordCount ;
        [read, volatile] 
    uint32 NumberOfLogons ;
        [read, volatile] 
    uint32 CountryCode ;
        [read, volatile] 
    uint32 CodePage ;
        [read, volatile] 
    uint32 UserId ;
        [read, volatile] 
    uint32 PrimaryGroupId ;
        [read, volatile] 
    datetime PasswordExpired ;
        [read, volatile] 
    string UserType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Desktop:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BorderWidth ;
        [read, volatile] 
    bool CoolSwitch ;
        [read, volatile] 
    uint32 CursorBlinkRate ;
        [read, volatile] 
    bool DragFullWindows ;
        [read, volatile] 
    uint32 GridGranularity ;
        [read, volatile] 
    uint32 IconSpacing ;
        [read, volatile] 
    uint32 IconTitleSize ;
        [read, volatile] 
    string Pattern ;
        [read, volatile] 
    bool ScreenSaverActive ;
        [read, volatile] 
    string ScreenSaverExecutable ;
        [read, volatile] 
    bool ScreenSaverSecure ;
        [read, volatile, Units ("Minutes")] 
    uint32 ScreenSaverTimeout ;
        [read, volatile] 
    string IconTitleFaceName ;
        [read, volatile] 
    bool IconTitleWrap ;
        [read, volatile] 
    string Wallpaper ;
        [read, volatile] 
    bool WallpaperTiled ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapterConfiguration:Setting
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DHCPEnabled ;
        [read, volatile] 
    datetime DHCPLeaseExpires ;
        [read, volatile] 
    datetime DHCPLeaseObtained ;
        [read, volatile] 
    string DHCPServer ;
        [read, volatile] 
    string DefaultIPGateway ;
        [read, volatile] 
    uint32 IOAddress ;
        [read, volatile] 
    string IPAddress ;
        [read, volatile] 
    string IPSubnet ;
        [read, volatile] 
    string IPXAddress ;
        [read, volatile] 
    uint32 IRQ ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string BusType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPortConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool IsBusy ;
        [read, volatile] 
    uint32 BaudRate ;
        [read, volatile] 
    uint32 XOnXMitThreshold ;
        [read, volatile] 
    uint32 XOffXMitThreshold ;
        [read, volatile] 
    uint32 BitsPerByte ;
        [read, volatile] 
    uint32 XOnCharacter ;
        [read, volatile] 
    uint32 XOffCharacter ;
        [read, volatile] 
    uint32 ErrorReplaceCharacter ;
        [read, volatile] 
    uint32 EOFCharacter ;
        [read, volatile] 
    uint32 EventCharacter ;
        [read, volatile] 
    bool BinaryModeEnabled ;
        [read, volatile] 
    bool ParityCheckEnabled ;
        [read, volatile] 
    bool CTSOutflowControl ;
        [read, volatile] 
    bool DSROutflowControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile] 
    bool ContinueXMitOnXOff ;
        [read, volatile] 
    bool XOnXOffOutFlowControl ;
        [read, volatile] 
    bool XOnXOffInFlowControl ;
        [read, volatile] 
    bool ErrorReplacementEnabled ;
        [read, volatile] 
    bool DiscardNULLBytes ;
        [read, volatile] 
    bool AbortReadWriteOnError ;
        [read, volatile] 
    string DTRFlowControlType ;
        [read, volatile] 
    string RTSFlowControlType ;
        [read, volatile] 
    string Parity ;
        [read, volatile] 
    string StopBits ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TimeZone:Setting
{
        [read, volatile, key] 
    string StandardName ;
        [read, volatile] 
    uint32 Bias ;
        [read, volatile] 
    uint32 StandardYear ;
        [read, volatile] 
    uint32 StandardMonth ;
        [read, volatile] 
    string StandardDayOfWeek ;
        [read, volatile] 
    uint32 StandardDay ;
        [read, volatile] 
    uint32 StandardHour ;
        [read, volatile] 
    uint32 StandardMinute ;
        [read, volatile] 
    uint32 StandardSecond ;
        [read, volatile] 
    uint32 StandardMillisecond ;
        [read, volatile] 
    uint32 StandardBias ;
        [read, volatile] 
    string DaylightName ;
        [read, volatile] 
    uint32 DaylightYear ;
        [read, volatile] 
    uint32 DaylightMonth ;
        [read, volatile] 
    string DaylightDayOfWeek ;
        [read, volatile] 
    uint32 DaylightDay ;
        [read, volatile] 
    uint32 DaylightHour ;
        [read, volatile] 
    uint32 DaylightMinute ;
        [read, volatile] 
    uint32 DaylightSecond ;
        [read, volatile] 
    uint32 DaylightMillisecond ;
        [read, volatile] 
    uint32 DaylightBias ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LoadOrderGroup:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 GroupOrder ;
} ;
     
class Win32NetworkConnection:LogicalElement
{
        [read, volatile] 
    string ConnectionType ;
        [read, volatile] 
    string RemotePath ;
        [read, volatile] 
    string LocalName ;
        [read, volatile] 
    string RemoteName ;
        [read, volatile] 
    string ProviderName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string DisplayType ;
        [read, volatile] 
    string ResourceType ;
        [read, volatile] 
    string UserName ;
} ;
     
class Win32SystemResource:LogicalElement
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkClient:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Win32Account:LogicalElement
{
} ;
     
class Win32Driver:ExecutableFile
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Service:SystemService
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string StartType ;
        [read, volatile] 
    string ErrorControl ;
        [read, volatile] 
    string PathName ;
        [read, volatile] 
    uint32 TagId ;
        [read, volatile] 
    string StartName ;
        [read, volatile] 
    string CommandLine ;
        [read, volatile] 
    string DisplayName ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ComputerSystem:ComputerSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool AutomaticResetBootOption ;
        [read, volatile] 
    bool AutomaticResetCapability ;
        [read, volatile] 
    bool AutomaticResetStatus ;
        [read, volatile] 
    uint32 AutomaticResetTimerInterval ;
        [read, volatile] 
    bool AutomaticResetTimerReset ;
        [read, volatile] 
    bool BootROMSupported ;
        [read, volatile] 
    string BootupState ;
        [read, volatile] 
    bool ConditionalReboot ;
        [read, volatile] 
    bool InfraredSupported ;
        [read, volatile] 
    bool LockKeyboardAndMouse ;
        [read, volatile] 
    bool LockPCPowerOnAndResetButtons ;
        [read, volatile] 
    bool LockSystem ;
        [read, volatile] 
    bool NetworkServerModeEnabled ;
        [read, volatile] 
    bool PowerManagementSupported ;
        [read, volatile] 
    string ResetBootOption ;
        [read, volatile] 
    bool ResetTimeout ;
        [read, volatile] 
    bool SystemFilesNotModified ;
        [read, volatile] 
    bool UnconditionalReboot ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string SystemType ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string SystemRole ;
        [read, volatile] 
    string Location ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkProtocol:NetworkProtocol
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Process:Process
{
        [read, volatile, key] 
    string Name ;
        [read, volatile, key] 
    uint32 ProcessId ;
        [read, volatile] 
    string WindowsVersion ;
        [read, volatile] 
    uint32 ThreadCount ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinimumWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumWorkingSetSize ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime Exited ;
        [read, volatile] 
    datetime TimeInKernel ;
        [read, volatile] 
    datetime TimeInUserMode ;
        [read, volatile] 
    uint32 PageFaults ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 WorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakPageFileUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PageFileUsage ;
        [read, volatile] 
    string ExecutablePath ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BIOS:SoftwareComponent
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Verify ;
        [read, volatile] 
    uint32 StartingAddress ;
        [read, volatile] 
    uint32 EndingAddress ;
        [read, volatile] 
    datetime ReleaseDate ;
        [read, volatile] 
    bool PrimaryBIOS ;
        [read, volatile] 
    string Characteristics[] ;
        [read, volatile]
    string SerialNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32OperatingSystem:OperatingSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string WindowsDirectory ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string CSDVersion ;
        [read, volatile] 
    string SystemDirectory ;
        [read, volatile] 
    string BootDevice ;
        [read, volatile] 
    string SystemStartOptions ;
        [read, volatile] 
    bool Primary ;
        [read, volatile] 
    string CountryCode ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PowerSupply:PowerSupply
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Port:Port
{
        [read, volatile] 
    string Start ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CurrentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PersistentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32RecentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DriverVXD:ExecutableFile
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string IdentiferNumber ;
        [read, volatile] 
    string DeviceDescriptorBlock ;
        [read, volatile] 
    string V86_API ;
        [read, volatile] 
    string PM_API ;
        [read, volatile] 
    uint32 ServiceTableSize ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32UserAccount:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
class Win32SystemMemoryResource:Win32SystemResource
{
        [read, volatile] 
    uint32 AddressRange ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile] 
    string MemoryType ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string StartingAddress ;
        [read, volatile]
    string Owner ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DeviceMemoryAddress:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DMAChannel:Win32SystemMemoryResource
{
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile, key] 
    uint32 Channel ;
        [read, volatile] 
    uint32 Port ;
        [read, volatile]
    uint32 ChannelWidth ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32IRQResource:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 IRQNumber ;
        [read, volatile] 
    uint32 Vector ;
        [read, volatile] 
    uint32 Level ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    string AffinityMask ;
        [read, volatile] 
    string InterruptType ;
        [read, volatile] 
    uint32 TriggerType ;
        [read, volatile] 
    uint32 Shareable ;
        [read, volatile] 
    uint32 Availability ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDriver:Win32Driver
{
        [read, volatile, key] 
    string Name ;
        [key] 
    uint32 Address ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapter:NetworkAdapter
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string ProductName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPort:SerialPort
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 MaximumOutputBufferSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumInputBufferSize ;
        [read, volatile, Units ("Bits per second")] 
    uint32 MaximumBaudRate ;
        [read, volatile] 
    string ProviderType ;
        [read, volatile] 
    bool Supports16BitMode ;
        [read, volatile] 
    bool SupportsDTRDSR ;
        [read, volatile] 
    bool SupportsIntTimeouts ;
        [read, volatile] 
    bool SupportsParityCheck ;
        [read, volatile] 
    bool SupportsRLSD ;
        [read, volatile] 
    bool SupportsRTSCTS ;
        [read, volatile] 
    bool SupportsXOnXOffSet ;
        [read, volatile] 
    bool SupportsSpecialCharacters ;
        [read, volatile] 
    bool SupportsElapsedTimeouts ;
        [read, volatile] 
    bool SupportsXOnXOff ;
        [read, volatile] 
    bool SettableBaudRate ;
        [read, volatile] 
    bool SettableDataBits ;
        [read, volatile] 
    bool SettableFlowControl ;
        [read, volatile] 
    bool SettableParity ;
        [read, volatile] 
    bool SettableParityCheck ;
        [read, volatile] 
    bool SettableRLSD ;
        [read, volatile] 
    bool SettableStopBits ;
        [read, volatile] 
    bool Binary ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ParallelPort:ParallelPort
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DMASupport ;
        [read, volatile] 
    string Capabilities ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SCSIInterface:SCSIInterface
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 InterruptNumber ;
        [read, volatile] 
    uint32 IOAddress ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Processor:Processor
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32KeyboardDevice:Keyboard
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ModemDevice:Modem
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile]
    string AttachedTo ;
        [read, volatile]
    string BlindOff ;
        [read, volatile]
    string BlindOn ;
        [read, volatile]
    string CallSetupFailTimer ;
        [read, volatile]
    string CompatibilityFlags ;
        [read, volatile]
    string CompressionOff ;
        [read, volatile]
    string CompressionOn ;
        [read, volatile]
    string ConfigDialog ;
        [read, volatile]
    string DCB ;
        [read, volatile]
    string Default ;
        [read, volatile]
    string DeviceType ;
        [read, volatile]
    string DevLoader ;
        [read, volatile]
    string DialPrefix ;
        [read, volatile]
    string DialSuffix ;
        [read, volatile]
    string DriverDate ;
        [read, volatile]
    string ErrorControlForced ;
        [read, volatile]
    string ErrorControlOff ;
        [read, volatile]
    string ErrorControlOn ;
        [read, volatile]
    string FlowControlHard ;
        [read, volatile]
    string FlowControlSoft ;
        [read, volatile]
    string FlowControlOff ;
        [read, volatile]
    string InactivityScale ;
        [read, volatile]
    string InactivityTimeout ;
        [read, volatile]
    string Model ;
        [read, volatile]
    string ModemInfPath ;
        [read, volatile]
    string ModemInfSection ;
        [read, volatile]
    string ModulationBell ;
        [read, volatile]
    string ModulationCCITT ;
        [read, volatile]
    string PortSubClass ;
        [read, volatile]
    string Prefix ;
        [read, volatile]
    string Properties ;
        [read, volatile]
    string ProviderName ;
        [read, volatile]
    string Pulse ;
        [read, volatile]
    string Reset ;
        [read, volatile]
    string ResponsesKeyName ;
        [read, volatile]
    string SpeakerModeDial ;
        [read, volatile]
    string SpeakerModeOff ;
        [read, volatile]
    string SpeakerModeOn ;
        [read, volatile]
    string SpeakerModeSetup ;
        [read, volatile]
    string SpeakerVolumeHigh ;
        [read, volatile]
    string SpeakerVolumeLow ;
        [read, volatile]
    string SpeakerVolumeMed ;
        [read, volatile]
    string StringFormat ;
        [read, volatile]
    string Terminator ;
        [read, volatile]
    string Tone ;
        [read, volatile]
    string VoiceSwitchFeature ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32MotherboardDevice:Motherboard
{
        [read, volatile, key] 
    string PrimaryBusType ;
        [read, volatile] 
    string SecondaryBusType ;
        [read, volatile] 
    string RevisionNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PointingDevice:PointingDevice
{
        [read, volatile, key] 
    string HardwareType ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
        [read, volatile]
    uint32 SampleRate ;
        [read, volatile]
    uint32 EnableWheelDetection ;
        [read, volatile]
    string DevLoader ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Printer:Printer
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint32 Attributes ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    uint32 JobCount ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string PortName ;
        [read, volatile] 
    string PrintJobDataType ;
        [read, volatile] 
    string SepFile ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 DefaultPriority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime UntilTime ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrintJob:Job
{
        [read, volatile, key] 
    uint32 JobId ;
        [read, volatile] 
    uint32 TotalPages ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    uint32 PagesPrinted ;
        [read, volatile] 
    string HostPrintQueue ;
        [read, volatile] 
	string DataType ;
        [read, volatile] 
	string Document ;
        [read, volatile] 
	string DriverName ;
        [read, volatile] 
	string Parameters ;
        [read, volatile] 
	string PrintProcessor ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TapeDrive:TapeDrive
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CDRomDrive:CDROMDrive
{
        [read, volatile, key] 
    string Drive ;
        [read, volatile] 
    string Id ;
        [read, volatile] 
    string RevisionLevel ;
        [read, volatile] 
    uint16 SCSILun ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    uint16 FileSystemFlags ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskDrive:DiskDrive
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint16 SCSIPort ;
        [read, volatile] 
    uint32 SCSIBus ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    uint16 SCSILogicalUnit ;
        [read, volatile] 
    string Model ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalDisk:LogicalStorage
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string FileSystem ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    string Provider ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskPartition:DiskPartition
{
        [read, volatile, key] 
    uint32 DiskIndex ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Type ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint32 StartingOffset ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    uint32 HiddenSectors ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    bool BootPartition ;
        [read, volatile] 
    bool RewritePartition ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Encrypted ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayConfiguration:Setting
{
        [read, volatile, key] 
    string DeviceName ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    bool TTOption ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 DitherType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayControllerConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 HorizontalResolution ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    uint32 VerticalResolution ;
        [read, volatile] 
    string VideoMode ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceEntriesInAColorTable ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 ReservedSystemPaletteEntries ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32VideoConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenWidth ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenHeight ;
        [read, volatile, Units ("Not specified")] 
    uint32 HorizontalResolution ;
        [read, volatile, Units ("Not specified")] 
    uint32 VerticalResolution ;
        [read, volatile] 
    uint32 PixelsPerXLogicalInch ;
        [read, volatile] 
    uint32 PixelsPerYLogicalInch ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 ColorTableEntries ;
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 SystemPaletteReservedEntries ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string MonitorType ;
        [read, volatile] 
    string MonitorManufacturer ;
        [read, volatile] 
    string AdapterLocation ;
        [read, volatile] 
    string AdapterDescription ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string InstalledDisplayDrivers ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    datetime DriverDate ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrinterConfiguration:Setting
{
        [read, volatile, key]
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    uint32 DitherType ;
        [read, volatile] 
    uint32 MediaType ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    string FormName ;
        [read, volatile] 
    bool Collate ;
        [read, volatile] 
    uint32 TTOption ;
        [read, volatile] 
    uint32 YResolution ;
        [read, volatile] 
    bool Duplex ;
        [read, volatile] 
    uint32 Color ;
        [read, volatile] 
    uint32 PrintQuality ;
        [read, volatile] 
    uint32 Copies ;
        [read, volatile] 
    uint32 Scale ;
        [read, volatile] 
    uint32 PaperWidth ;
        [read, volatile] 
    uint32 PaperLength ;
        [read, volatile] 
    uint32 PaperSize ;
        [read, volatile] 
    uint32 Orientation ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    string DeviceName ;
        [read, volatile] 
    uint32 XResolution ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Environment:Win32SystemResource
{
        [read, volatile, key]
    string Name ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string VariableName ;
        [read, volatile] 
    string VariableValue ;
} ;     

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PageFile:DataFile
{
        [read, volatile, key]
    string Name ;
        [read, volatile, Units ("Megabytes")] 
    uint32 MaximumSize ;
        [read, volatile, Units ("Megabytes")] 
    uint32 FreeSpace ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Group:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Share:LogicalElement
{
        [read, volatile, key]
    string Name ;
        [read, volatile]
    bool AllowMaximum ;
        [read, volatile]
    uint32 MaximumAllowed ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance), NavigatorAppearance (2)] 
class Win32ProtocolBinding
{
        [read, volatile, key] 
    Win32NetworkProtocol REF Protocol ;
        [read, volatile, key] 
    Win32NetworkAdapter REF Adapter ;
        [read, volatile] 
    Win32Service REF Service ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32DiskDriveToDiskPartition:Dependency
{
        [read, volatile, key] 
    Win32DiskDrive REF Antecedent ;
        [read, volatile, key] 
    Win32DiskPartition REF Dependent ;
} ;
     
        [Association:(ToInstance)] 
class Win32DeviceSettings:ElementSetting
{
        [read, volatile] 
    Device REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SerialPortSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32SerialPort REF Element ;
        [read, volatile, key] 
    Win32SerialPortConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemBIOS:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32BIOS REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemOperatingSystem:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32OperatingSystem REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class Win32SystemSetting:ElementSetting
{
        [read, volatile] 
    Win32ComputerSystem REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLogicalMemoryConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LogicalMemoryConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemSystemDriver:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemDriver REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLoadOrderGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LoadOrderGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemTimeZone:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32TimeZone REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemUsers:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32UserAccount REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProcesses:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Process REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemPartitions:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32DiskPartition REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemServices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Service REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProgramGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32ProgramGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemDesktop:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDevices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Device REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemNetworkConnections:SystemComponent 
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32NetworkConnection REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32UserDesktop:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32UserAccount REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32NetworkAdapterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32NetworkAdapter REF Element ;
        [read, volatile, key] 
    Win32NetworkAdapterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32PrinterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Printer REF Element ;
        [read, volatile, key] 
    Win32PrinterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemBootConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32BootConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemResources:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemResource REF ComponentPart ;
} ;
     



#pragma namespace ("\\\\.\\root\\network\\rogue")
 
instance of __Win32Provider
{
    MethodSet = 65553 ;
    Provider = "MS_PROXY_PROVIDER" ;
    ProviderClsId = "{CEAE974C-D862-11d0-82D3-00A0C9038B34}" ;
} ;

        [NavigatorAppearance (1)] 
class ManagedSystemElement
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Description ;
        [read, volatile] 
    bool Installed ;
        [read, volatile] 
    string Caption ;
} ;
     
class Setting
{
} ;

class PhysicalElement:ManagedSystemElement
{
        [read, volatile] 
    string Tag ;
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Model ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string PowerState ;
        [read, volatile] 
    string SKU ;
        [read, volatile] 
    string SerialNumber ;
} ;
     
class LogicalElement:ManagedSystemElement
{
        [read, volatile] 
    bool InUse ;
} ;
     
class DiskPartitionConfiguration:Setting
{
} ;
     
class System:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string PrimaryOwner ;
} ;
     
class Protocol:LogicalElement
{
} ;
     
class Process:LogicalElement
{
        [read, volatile] 
    uint32 BasePriority ;
        [read, volatile] 
    uint32 ProcessID ;
} ;
     
        [OpalInventory] 
class SoftwareComponent:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string BuildNumber ;
        [read, volatile] 
    string BuildType ;
        [read, volatile] 
    string CodeSet ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    bool Installable ;
        [read, volatile] 
    string SerialNumber ;
        [read, volatile] 
    uint32 InUseCount ;
} ;
     
class FileSystem:LogicalElement
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    bool CasePreserved ;
        [read, volatile] 
    bool CaseSensitive ;
        [read, volatile] 
    bool Unicode ;
} ;
     
class LogicalFile:LogicalElement
{
        [read, volatile] 
    string Path ;
        [read, volatile] 
    string Extension ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string FileType ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime LastModified ;
        [read, volatile] 
    datetime LastAccessed ;
        [read, volatile] 
    bool Readable ;
        [read, volatile] 
    bool Writeable ;
        [read, volatile] 
    bool Archived ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Open ;
} ;
     
class Database:LogicalElement
{
    string Version ;
} ;
     
class SystemService:LogicalElement
{
        [read, volatile] 
    string State ;
        [read, volatile] 
    string ServiceType ;
} ;
     
class Thread:LogicalElement
{
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 ThreadID ;
} ;
     
class Job:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    datetime ElapsedTime ;
        [read, volatile] 
    string Notify ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime TimeSubmitted ;
        [read, volatile] 
    datetime UntilTime ;
        [read, volatile] 
    string Owner ;
        [read, volatile] 
    string JobDestination ;
} ;
     
class JobDestination:LogicalElement
{
        [read, volatile] 
    uint32 JobCount ;
} ;
     
class DiskPartition:LogicalElement
{
} ;
     
        [OpalInventory] 
class Device:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class PowerSupply:Device
{
        [read, volatile] 
    string BatteryChargeStatus ;
        [read, volatile] 
    bool BatteryInstalled ;
        [read, volatile] 
    datetime BatteryLifetime ;
        [read, volatile] 
    bool CanTurnOffRemotely ;
        [read, volatile] 
    string CommandFile ;
        [read, volatile] 
    uint32 FirstMessageDelay ;
        [read, volatile] 
    bool LowBatterySignal ;
        [read, volatile] 
    uint32 MessageInterval ;
        [read, volatile, Units ("Percent")] 
    uint32 BatteryLifeLeft ;
        [read, volatile] 
    bool PowerFailSignal ;
        [read, volatile] 
    uint32 RechargeRate ;
        [read, volatile] 
    uint32 UPSPort ;
        [read, volatile] 
    string VoltageCapability ;
        [read, volatile] 
    string Type ;
} ;
     
class LogicalStorage:Device
{
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class Modem:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string HardwareID ;
        [read, volatile] 
    uint32 MaxTransmissionSpeed ;
        [read, volatile, Units ("Baud (bits per second)")] 
    uint32 TransmissionSpeed ;
        [read, volatile] 
    string Mode ;
        [read, volatile] 
    string ConnectionMode ;
} ;
     
class SystemCache:Device
{
        [read, volatile] 
    string ErrorCorrection ;
        [read, volatile] 
    string Level ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile, Units ("Nano Seconds")] 
    uint32 Speed ;
        [read, volatile] 
    string WritePolicy ;
} ;
     
class Processor:Device
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string UpgradeMethod ;
        [read, volatile] 
    string Role ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Family ;
        [read, volatile, Units ("Mega Hertz(MHZ)")] 
    uint32 ClockSpeed ;
} ;
     
class Keyboard:Device
{
        [read, volatile] 
    uint32 NumberOfFunctionKeys ;
        [read, volatile] 
    string Layout ;
} ;
     
class Connector:Device
{
} ;
     
class InterfaceDevice:Device
{
        [read, volatile] 
    bool DeviceIsBusy ;
} ;
     
        [OpalInventory] 
class Display:Device
{
        [read, volatile, Units ("Pixel")] 
    uint32 Height ;
        [read, volatile, Units ("Pixel")] 
    uint32 Width ;
        [read, volatile] 
    string MonitorDisplayType ;
} ;
     
        [OpalInventory] 
class MemoryModule:Device
{
        [read, volatile, Units ("Nano Seconds")] 
    uint32 AccessSpeed ;
        [read, volatile] 
    uint64 EndingAddress ;
        [read, volatile] 
    bool ErrorCorrection ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaximumCapacity ;
        [read, volatile] 
    uint64 MaxCapacityLessFractionalPart ;
        [read, volatile] 
    uint32 NumberOfPins ;
        [read, volatile] 
    uint64 StartingAddress ;
        [read, volatile] 
    string Usage ;
        [read, volatile] 
    string ModuleType ;
} ;
     
class PointingDevice:Device
{
        [read, volatile] 
    uint32 NumberOfButtons ;
        [read, volatile] 
    bool ButtonsSwapped ;
        [read, volatile] 
    uint32 XThreshold ;
        [read, volatile] 
    uint32 YThreshold ;
        [read, volatile] 
    uint32 ZThreshold ;
        [read, volatile] 
    uint32 Speed ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string HardwareType ;
        [read, volatile] 
    uint32 DataQueueSize ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile, Units ("100ns")] 
    uint32 Synch ;
        [read, volatile] 
    bool ConnectMultiplePorts ;
        [read, volatile] 
    uint32 MaximumPortsServiced ;
        [read, volatile] 
    string HorizontalMickeys ;
        [read, volatile] 
    string VerticalMickeys ;
        [read, volatile] 
    string DeviceInterface ;
        [read, volatile] 
    string PointerType ;
        [read, volatile]
    string InfFileName ;
        [read, volatile]
    string InfSection ;
} ;
     
class Printer:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    uint32 AveragePagesPerMinute ;
        [read, volatile] 
    string PrintProcessorParameters ;
        [read, volatile] 
    string Processor ;
} ;
     
class MassStorage:Device
{
        [read, volatile] 
    bool MediaLoaded ;
        [read, volatile] 
    string MediaType ;
        [read, volatile] 
    bool MediaRemovable ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class ProgrammableInterruptController:Device
{
} ;
     
class SystemROM:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    string ROMType ;
} ;
     
class DMA:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 AddressSize ;
        [read, volatile] 
    bool AddressTranslation ;
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    uint32 ChannelNumber ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    uint32 TransferSize ;
        [read, volatile] 
    string DMAType ;
} ;
     
        [OpalInventory] 
class CoolingDevice:Device
{
        [read, volatile] 
    uint32 Accuracy ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeed ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdWarning ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdWarning ;
        [read, volatile] 
    uint32 Reading ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile] 
    uint32 Tolerance ;
} ;
     
class Bus:Device
{
} ;
     
class Motherboard:Device
{
} ;
     
class ComputerSystem:System
{
        [read, volatile] 
    datetime LastBootupTime ;
        [read, volatile] 
    string SupportContact ;
        [read, volatile] 
    datetime SystemTime ;
} ;
     
class NetworkProtocol:Protocol
{
        [read, volatile] 
    bool ConnectionlessService ;
        [read, volatile] 
    bool GuaranteesDelivery ;
        [read, volatile] 
    bool GuaranteesSequencing ;
        [read, volatile] 
    uint32 MaximumAddressSize ;
        [read, volatile] 
    uint32 MaximumMessageSize ;
        [read, volatile] 
    bool MessageOriented ;
        [read, volatile] 
    uint32 MinimumAddressSize ;
        [read, volatile] 
    bool PseudoStreamOriented ;
        [read, volatile] 
    bool SupportsBroadcasting ;
        [read, volatile] 
    bool SupportsConnectData ;
        [read, volatile] 
    bool SupportsDisconnectData ;
        [read, volatile] 
    bool SupportsEncryption ;
        [read, volatile] 
    bool SupportsExpeditedData ;
        [read, volatile] 
    bool SupportsFragmentation ;
        [read, volatile] 
    bool SupportsGracefulClosing ;
        [read, volatile] 
    bool SupportsGuaranteedBandwidth ;
        [read, volatile] 
    bool SupportsMulticasting ;
} ;
     
class OperatingSystem:SoftwareComponent
{
        [read, volatile] 
    datetime LastBootUpTime ;
} ;
     
class DataFile:LogicalFile
{
} ;
     
class ExecutableFile:DataFile
{
        [read, volatile] 
    string ExecutableType ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Package:SoftwareComponent
{
} ;
     
class Directory:LogicalFile
{
} ;
     
class NetworkDrive:LogicalStorage
{
} ;
     
class SCSIInterface:InterfaceDevice
{
} ;
     
class ParallelPort:InterfaceDevice
{
} ;
     
class SerialPort:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 Baud ;
        [read, volatile] 
    bool ParityEnabled ;
        [read, volatile] 
    bool OutTxCTSFlow ;
        [read, volatile] 
    bool OutTxDSRFlow ;
        [read, volatile] 
    bool DTRControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile, Units ("Bits")] 
    sint16 ByteSize ;
        [read, volatile] 
    sint16 Parity ;
        [read, volatile] 
    sint16 StopBits ;
} ;
     
class SerialInterface:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    string Processor ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string SepFile ;
} ;
     
class Port:InterfaceDevice
{
} ;
     
class NetworkAdapter:InterfaceDevice
{
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    uint32 IOPortAddress ;
} ;
     
class DisketteController:InterfaceDevice
{
} ;
     
class KeyboardController:InterfaceDevice
{
} ;
     
class DiskController:InterfaceDevice
{
} ;
     
class DisplayController:InterfaceDevice
{
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 MaximumNumberOfRows ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MaximumRefreshRate ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MinimumRefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile, Units ("Bytes")] 
    uint32 VideoMemorySize ;
} ;
     
class MicroChannelBus:Bus
{
} ;
     
class VLBus:Bus
{
} ;
     
class SCSIBus:Bus
{
} ;
     
class PCMCIABus:Bus
{
} ;
     
class ISABus:Bus
{
} ;
     
class EISABus:Bus
{
        [read, volatile] 
    uint32 NumberOfFunctions ;
} ;
     
class AccessBus:Bus
{
} ;
     
class PCIBus:Bus
{
} ;
     
        [OpalInventory] 
class RamDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint64 MemorySize ;
} ;
     
class DiskDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
        [read, volatile] 
    uint32 Partitions ;
        [read, volatile] 
    uint32 TracksPerCylinder ;
        [read, volatile] 
    uint32 SectorsPerTrack ;
        [read, volatile] 
    uint64 TotalCylinders ;
        [read, volatile] 
    uint64 TotalTracks ;
        [read, volatile] 
    uint64 TotalSectors ;
        [read, volatile] 
    string InterfaceType ;
} ;
     
class CDROMDrive:MassStorage
{
} ;
     
class TapeDrive:MassStorage
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 ECC ;
        [read, volatile] 
    uint32 Compression ;
        [read, volatile] 
    uint32 Padding ;
        [read, volatile] 
    uint32 ReportSetMarks ;
        [read, volatile, Units ("Bytes")] 
    uint32 DefaultBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaxBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinBlockSize ;
        [read, volatile] 
    uint32 MaxPartitionCount ;
        [read, volatile] 
    uint32 FeaturesLow ;
        [read, volatile] 
    uint32 FeaturesHigh ;
        [read, volatile] 
    uint32 EOTWarningZoneSize ;
} ;
     
        [OpalInventory] 
class DisketteDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
} ;
     
class PhysicalComponent:PhysicalElement
{
} ;
     
class PhysicalPackage:PhysicalElement
{
} ;
     
class Card:PhysicalPackage
{
} ;
     
class Cabinet:PhysicalPackage
{
        [read, volatile] 
    bool LockPresent ;
} ;
     
class PhysicalLink:PhysicalElement
{
} ;
     
class WiredConnection:PhysicalLink
{
} ;
     
class WirelessConnection:PhysicalLink
{
} ;
     
class PhysicalConnector:PhysicalElement
{
        [read, volatile] 
    string ConnectorPinout ;
} ;
     
class Slot:PhysicalConnector
{
        [read, volatile] 
    string SlotNumber ;
        [read, volatile] 
    string SlotType ;
        [read, volatile] 
    sint16 SlotWidth ;
} ;
     
class NetworkPort:PhysicalConnector
{
} ;
     
class Media:PhysicalComponent
{
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string Format ;
} ;
     
class Chip:PhysicalComponent
{
} ;
     
class VolumeSet:DiskPartitionConfiguration
{
} ;
     
class StripeSet:DiskPartitionConfiguration
{
} ;
     
class MirrorSet:DiskPartitionConfiguration
{
} ;

        [OpalInventory] 
class Configuration
{
} ;
     
        [Schema ("Common")] 
class Profile:Configuration
{
} ;
     
        [OpalInventory] 
class Location
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Position ;
} ;
     
//================================================================================
// ASSOCIATIONS
//================================================================================

        [Association:(ToInstance)] 
class Dependency
{
        [read, volatile] 
    ManagedSystemElement REF Dependent ;
        [read, volatile] 
    ManagedSystemElement REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ElementSetting
{
        [read, volatile] 
    ManagedSystemElement REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class SystemComponent:Component
{
        [read, volatile] 
    System REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class ProcessThreads:Dependency
{
        [read, volatile, key] 
    Thread REF Dependent ;
        [read, volatile, key] 
    Process REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class JobDestinationJobs:Dependency
{
        [read, volatile] 
    Job REF Dependent ;
        [read, volatile] 
    JobDestination REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ServiceDevice:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    SystemService REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class DeviceDriver:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ProcessExecutable:Dependency
{
        [read, volatile] 
    Process REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class Connection:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    Device REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalComponents:Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    PhysicalElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalElementLocation
{
        [read, volatile] 
    PhysicalElement REF Element ;
        [read, volatile] 
    Location REF Location ;
} ;
     
        [Association:(ToInstance)] 
class SettingContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class DependencyContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Dependency REF Dependency ;
} ;
     
        [Association:(ToInstance)] 
class Container
{
        [read, volatile] 
    PhysicalElement REF ContainedElement ;
        [read, volatile] 
    PhysicalPackage REF ContainingElement ;
} ;
     
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
//
//       Win32 classes/associations
//
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BootConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string ConfigurationPath ;
        [read, volatile] 
    string LastDrive ;
        [read, volatile] 
    string ScratchDirectory ;
        [read, volatile] 
    string TempDirectory ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ProgramGroup:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string GroupName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalMemoryConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 AvailableVirtualMemory ;
        [read, volatile] 
    uint32 TotalPageFileSpace ;
        [read, volatile] 
    uint32 TotalPhysicalMemory ;
        [read, volatile] 
    uint32 TotalVirtualMemory ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkLoginProfile:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string FullName ;
        [read, volatile] 
    string Password ;
        [read, volatile] 
    string HomeDirectory ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string ScriptPath ;
        [read, volatile] 
    string UserComment ;
        [read, volatile] 
    string Parms ;
        [read, volatile] 
    string Workstations ;
        [read, volatile] 
    string LogonServer ;
        [read, volatile] 
    string Profile ;
        [read, volatile] 
    string HomeDirectoryDrive ;
        [read, volatile] 
    datetime PasswordAge ;
        [read, volatile] 
    uint32 Priv ;
        [read, volatile] 
    uint32 Flags ;
        [read, volatile] 
    uint32 AuthFlags ;
        [read, volatile] 
    datetime LastLogon ;
        [read, volatile] 
    datetime LastLogoff ;
        [read, volatile] 
    datetime AccountExpires ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaxStorage ;
        [read, volatile] 
    uint32 UnitsPerWeek ;
        [read, volatile] 
    datetime LogonHours ;
        [read, volatile] 
    uint32 BadPasswordCount ;
        [read, volatile] 
    uint32 NumberOfLogons ;
        [read, volatile] 
    uint32 CountryCode ;
        [read, volatile] 
    uint32 CodePage ;
        [read, volatile] 
    uint32 UserId ;
        [read, volatile] 
    uint32 PrimaryGroupId ;
        [read, volatile] 
    datetime PasswordExpired ;
        [read, volatile] 
    string UserType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Desktop:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BorderWidth ;
        [read, volatile] 
    bool CoolSwitch ;
        [read, volatile] 
    uint32 CursorBlinkRate ;
        [read, volatile] 
    bool DragFullWindows ;
        [read, volatile] 
    uint32 GridGranularity ;
        [read, volatile] 
    uint32 IconSpacing ;
        [read, volatile] 
    uint32 IconTitleSize ;
        [read, volatile] 
    string Pattern ;
        [read, volatile] 
    bool ScreenSaverActive ;
        [read, volatile] 
    string ScreenSaverExecutable ;
        [read, volatile] 
    bool ScreenSaverSecure ;
        [read, volatile, Units ("Minutes")] 
    uint32 ScreenSaverTimeout ;
        [read, volatile] 
    string IconTitleFaceName ;
        [read, volatile] 
    bool IconTitleWrap ;
        [read, volatile] 
    string Wallpaper ;
        [read, volatile] 
    bool WallpaperTiled ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapterConfiguration:Setting
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DHCPEnabled ;
        [read, volatile] 
    datetime DHCPLeaseExpires ;
        [read, volatile] 
    datetime DHCPLeaseObtained ;
        [read, volatile] 
    string DHCPServer ;
        [read, volatile] 
    string DefaultIPGateway ;
        [read, volatile] 
    uint32 IOAddress ;
        [read, volatile] 
    string IPAddress ;
        [read, volatile] 
    string IPSubnet ;
        [read, volatile] 
    string IPXAddress ;
        [read, volatile] 
    uint32 IRQ ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string BusType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPortConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool IsBusy ;
        [read, volatile] 
    uint32 BaudRate ;
        [read, volatile] 
    uint32 XOnXMitThreshold ;
        [read, volatile] 
    uint32 XOffXMitThreshold ;
        [read, volatile] 
    uint32 BitsPerByte ;
        [read, volatile] 
    uint32 XOnCharacter ;
        [read, volatile] 
    uint32 XOffCharacter ;
        [read, volatile] 
    uint32 ErrorReplaceCharacter ;
        [read, volatile] 
    uint32 EOFCharacter ;
        [read, volatile] 
    uint32 EventCharacter ;
        [read, volatile] 
    bool BinaryModeEnabled ;
        [read, volatile] 
    bool ParityCheckEnabled ;
        [read, volatile] 
    bool CTSOutflowControl ;
        [read, volatile] 
    bool DSROutflowControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile] 
    bool ContinueXMitOnXOff ;
        [read, volatile] 
    bool XOnXOffOutFlowControl ;
        [read, volatile] 
    bool XOnXOffInFlowControl ;
        [read, volatile] 
    bool ErrorReplacementEnabled ;
        [read, volatile] 
    bool DiscardNULLBytes ;
        [read, volatile] 
    bool AbortReadWriteOnError ;
        [read, volatile] 
    string DTRFlowControlType ;
        [read, volatile] 
    string RTSFlowControlType ;
        [read, volatile] 
    string Parity ;
        [read, volatile] 
    string StopBits ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TimeZone:Setting
{
        [read, volatile, key] 
    string StandardName ;
        [read, volatile] 
    uint32 Bias ;
        [read, volatile] 
    uint32 StandardYear ;
        [read, volatile] 
    uint32 StandardMonth ;
        [read, volatile] 
    string StandardDayOfWeek ;
        [read, volatile] 
    uint32 StandardDay ;
        [read, volatile] 
    uint32 StandardHour ;
        [read, volatile] 
    uint32 StandardMinute ;
        [read, volatile] 
    uint32 StandardSecond ;
        [read, volatile] 
    uint32 StandardMillisecond ;
        [read, volatile] 
    uint32 StandardBias ;
        [read, volatile] 
    string DaylightName ;
        [read, volatile] 
    uint32 DaylightYear ;
        [read, volatile] 
    uint32 DaylightMonth ;
        [read, volatile] 
    string DaylightDayOfWeek ;
        [read, volatile] 
    uint32 DaylightDay ;
        [read, volatile] 
    uint32 DaylightHour ;
        [read, volatile] 
    uint32 DaylightMinute ;
        [read, volatile] 
    uint32 DaylightSecond ;
        [read, volatile] 
    uint32 DaylightMillisecond ;
        [read, volatile] 
    uint32 DaylightBias ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LoadOrderGroup:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 GroupOrder ;
} ;
     
class Win32NetworkConnection:LogicalElement
{
        [read, volatile] 
    string ConnectionType ;
        [read, volatile] 
    string RemotePath ;
        [read, volatile] 
    string LocalName ;
        [read, volatile] 
    string RemoteName ;
        [read, volatile] 
    string ProviderName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string DisplayType ;
        [read, volatile] 
    string ResourceType ;
        [read, volatile] 
    string UserName ;
} ;
     
class Win32SystemResource:LogicalElement
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkClient:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Win32Account:LogicalElement
{
} ;
     
class Win32Driver:ExecutableFile
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Service:SystemService
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string StartType ;
        [read, volatile] 
    string ErrorControl ;
        [read, volatile] 
    string PathName ;
        [read, volatile] 
    uint32 TagId ;
        [read, volatile] 
    string StartName ;
        [read, volatile] 
    string CommandLine ;
        [read, volatile] 
    string DisplayName ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ComputerSystem:ComputerSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool AutomaticResetBootOption ;
        [read, volatile] 
    bool AutomaticResetCapability ;
        [read, volatile] 
    bool AutomaticResetStatus ;
        [read, volatile] 
    uint32 AutomaticResetTimerInterval ;
        [read, volatile] 
    bool AutomaticResetTimerReset ;
        [read, volatile] 
    bool BootROMSupported ;
        [read, volatile] 
    string BootupState ;
        [read, volatile] 
    bool ConditionalReboot ;
        [read, volatile] 
    bool InfraredSupported ;
        [read, volatile] 
    bool LockKeyboardAndMouse ;
        [read, volatile] 
    bool LockPCPowerOnAndResetButtons ;
        [read, volatile] 
    bool LockSystem ;
        [read, volatile] 
    bool NetworkServerModeEnabled ;
        [read, volatile] 
    bool PowerManagementSupported ;
        [read, volatile] 
    string ResetBootOption ;
        [read, volatile] 
    bool ResetTimeout ;
        [read, volatile] 
    bool SystemFilesNotModified ;
        [read, volatile] 
    bool UnconditionalReboot ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string SystemType ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string SystemRole ;
        [read, volatile] 
    string Location ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkProtocol:NetworkProtocol
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Process:Process
{
        [read, volatile, key] 
    string Name ;
        [read, volatile, key] 
    uint32 ProcessId ;
        [read, volatile] 
    string WindowsVersion ;
        [read, volatile] 
    uint32 ThreadCount ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinimumWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumWorkingSetSize ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime Exited ;
        [read, volatile] 
    datetime TimeInKernel ;
        [read, volatile] 
    datetime TimeInUserMode ;
        [read, volatile] 
    uint32 PageFaults ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 WorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakPageFileUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PageFileUsage ;
        [read, volatile] 
    string ExecutablePath ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BIOS:SoftwareComponent
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Verify ;
        [read, volatile] 
    uint32 StartingAddress ;
        [read, volatile] 
    uint32 EndingAddress ;
        [read, volatile] 
    datetime ReleaseDate ;
        [read, volatile] 
    bool PrimaryBIOS ;
        [read, volatile] 
    string Characteristics[] ;
        [read, volatile]
    string SerialNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32OperatingSystem:OperatingSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string WindowsDirectory ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string CSDVersion ;
        [read, volatile] 
    string SystemDirectory ;
        [read, volatile] 
    string BootDevice ;
        [read, volatile] 
    string SystemStartOptions ;
        [read, volatile] 
    bool Primary ;
        [read, volatile] 
    string CountryCode ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PowerSupply:PowerSupply
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Port:Port
{
        [read, volatile] 
    string Start ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CurrentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PersistentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32RecentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DriverVXD:ExecutableFile
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string IdentiferNumber ;
        [read, volatile] 
    string DeviceDescriptorBlock ;
        [read, volatile] 
    string V86_API ;
        [read, volatile] 
    string PM_API ;
        [read, volatile] 
    uint32 ServiceTableSize ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32UserAccount:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
class Win32SystemMemoryResource:Win32SystemResource
{
        [read, volatile] 
    uint32 AddressRange ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile] 
    string MemoryType ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string StartingAddress ;
        [read, volatile]
    string Owner ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DeviceMemoryAddress:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DMAChannel:Win32SystemMemoryResource
{
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile, key] 
    uint32 Channel ;
        [read, volatile] 
    uint32 Port ;
        [read, volatile]
    uint32 ChannelWidth ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32IRQResource:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 IRQNumber ;
        [read, volatile] 
    uint32 Vector ;
        [read, volatile] 
    uint32 Level ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    string AffinityMask ;
        [read, volatile] 
    string InterruptType ;
        [read, volatile] 
    uint32 TriggerType ;
        [read, volatile] 
    uint32 Shareable ;
        [read, volatile] 
    uint32 Availability ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDriver:Win32Driver
{
        [read, volatile, key] 
    string Name ;
        [key] 
    uint32 Address ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapter:NetworkAdapter
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string ProductName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPort:SerialPort
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 MaximumOutputBufferSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumInputBufferSize ;
        [read, volatile, Units ("Bits per second")] 
    uint32 MaximumBaudRate ;
        [read, volatile] 
    string ProviderType ;
        [read, volatile] 
    bool Supports16BitMode ;
        [read, volatile] 
    bool SupportsDTRDSR ;
        [read, volatile] 
    bool SupportsIntTimeouts ;
        [read, volatile] 
    bool SupportsParityCheck ;
        [read, volatile] 
    bool SupportsRLSD ;
        [read, volatile] 
    bool SupportsRTSCTS ;
        [read, volatile] 
    bool SupportsXOnXOffSet ;
        [read, volatile] 
    bool SupportsSpecialCharacters ;
        [read, volatile] 
    bool SupportsElapsedTimeouts ;
        [read, volatile] 
    bool SupportsXOnXOff ;
        [read, volatile] 
    bool SettableBaudRate ;
        [read, volatile] 
    bool SettableDataBits ;
        [read, volatile] 
    bool SettableFlowControl ;
        [read, volatile] 
    bool SettableParity ;
        [read, volatile] 
    bool SettableParityCheck ;
        [read, volatile] 
    bool SettableRLSD ;
        [read, volatile] 
    bool SettableStopBits ;
        [read, volatile] 
    bool Binary ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ParallelPort:ParallelPort
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DMASupport ;
        [read, volatile] 
    string Capabilities ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SCSIInterface:SCSIInterface
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 InterruptNumber ;
        [read, volatile] 
    uint32 IOAddress ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Processor:Processor
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32KeyboardDevice:Keyboard
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ModemDevice:Modem
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile]
    string AttachedTo ;
        [read, volatile]
    string BlindOff ;
        [read, volatile]
    string BlindOn ;
        [read, volatile]
    string CallSetupFailTimer ;
        [read, volatile]
    string CompatibilityFlags ;
        [read, volatile]
    string CompressionOff ;
        [read, volatile]
    string CompressionOn ;
        [read, volatile]
    string ConfigDialog ;
        [read, volatile]
    string DCB ;
        [read, volatile]
    string Default ;
        [read, volatile]
    string DeviceType ;
        [read, volatile]
    string DevLoader ;
        [read, volatile]
    string DialPrefix ;
        [read, volatile]
    string DialSuffix ;
        [read, volatile]
    string DriverDate ;
        [read, volatile]
    string ErrorControlForced ;
        [read, volatile]
    string ErrorControlOff ;
        [read, volatile]
    string ErrorControlOn ;
        [read, volatile]
    string FlowControlHard ;
        [read, volatile]
    string FlowControlSoft ;
        [read, volatile]
    string FlowControlOff ;
        [read, volatile]
    string InactivityScale ;
        [read, volatile]
    string InactivityTimeout ;
        [read, volatile]
    string Model ;
        [read, volatile]
    string ModemInfPath ;
        [read, volatile]
    string ModemInfSection ;
        [read, volatile]
    string ModulationBell ;
        [read, volatile]
    string ModulationCCITT ;
        [read, volatile]
    string PortSubClass ;
        [read, volatile]
    string Prefix ;
        [read, volatile]
    string Properties ;
        [read, volatile]
    string ProviderName ;
        [read, volatile]
    string Pulse ;
        [read, volatile]
    string Reset ;
        [read, volatile]
    string ResponsesKeyName ;
        [read, volatile]
    string SpeakerModeDial ;
        [read, volatile]
    string SpeakerModeOff ;
        [read, volatile]
    string SpeakerModeOn ;
        [read, volatile]
    string SpeakerModeSetup ;
        [read, volatile]
    string SpeakerVolumeHigh ;
        [read, volatile]
    string SpeakerVolumeLow ;
        [read, volatile]
    string SpeakerVolumeMed ;
        [read, volatile]
    string StringFormat ;
        [read, volatile]
    string Terminator ;
        [read, volatile]
    string Tone ;
        [read, volatile]
    string VoiceSwitchFeature ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32MotherboardDevice:Motherboard
{
        [read, volatile, key] 
    string PrimaryBusType ;
        [read, volatile] 
    string SecondaryBusType ;
        [read, volatile] 
    string RevisionNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PointingDevice:PointingDevice
{
        [read, volatile, key] 
    string HardwareType ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
        [read, volatile]
    uint32 SampleRate ;
        [read, volatile]
    uint32 EnableWheelDetection ;
        [read, volatile]
    string DevLoader ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Printer:Printer
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint32 Attributes ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    uint32 JobCount ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string PortName ;
        [read, volatile] 
    string PrintJobDataType ;
        [read, volatile] 
    string SepFile ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 DefaultPriority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime UntilTime ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrintJob:Job
{
        [read, volatile, key] 
    uint32 JobId ;
        [read, volatile] 
    uint32 TotalPages ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    uint32 PagesPrinted ;
        [read, volatile] 
    string HostPrintQueue ;
        [read, volatile] 
	string DataType ;
        [read, volatile] 
	string Document ;
        [read, volatile] 
	string DriverName ;
        [read, volatile] 
	string Parameters ;
        [read, volatile] 
	string PrintProcessor ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TapeDrive:TapeDrive
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CDRomDrive:CDROMDrive
{
        [read, volatile, key] 
    string Drive ;
        [read, volatile] 
    string Id ;
        [read, volatile] 
    string RevisionLevel ;
        [read, volatile] 
    uint16 SCSILun ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    uint16 FileSystemFlags ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskDrive:DiskDrive
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint16 SCSIPort ;
        [read, volatile] 
    uint32 SCSIBus ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    uint16 SCSILogicalUnit ;
        [read, volatile] 
    string Model ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalDisk:LogicalStorage
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string FileSystem ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    string Provider ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskPartition:DiskPartition
{
        [read, volatile, key] 
    uint32 DiskIndex ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Type ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint32 StartingOffset ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    uint32 HiddenSectors ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    bool BootPartition ;
        [read, volatile] 
    bool RewritePartition ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Encrypted ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayConfiguration:Setting
{
        [read, volatile, key] 
    string DeviceName ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    bool TTOption ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 DitherType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayControllerConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 HorizontalResolution ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    uint32 VerticalResolution ;
        [read, volatile] 
    string VideoMode ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceEntriesInAColorTable ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 ReservedSystemPaletteEntries ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32VideoConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenWidth ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenHeight ;
        [read, volatile, Units ("Not specified")] 
    uint32 HorizontalResolution ;
        [read, volatile, Units ("Not specified")] 
    uint32 VerticalResolution ;
        [read, volatile] 
    uint32 PixelsPerXLogicalInch ;
        [read, volatile] 
    uint32 PixelsPerYLogicalInch ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 ColorTableEntries ;
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 SystemPaletteReservedEntries ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string MonitorType ;
        [read, volatile] 
    string MonitorManufacturer ;
        [read, volatile] 
    string AdapterLocation ;
        [read, volatile] 
    string AdapterDescription ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string InstalledDisplayDrivers ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    datetime DriverDate ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrinterConfiguration:Setting
{
        [read, volatile, key]
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    uint32 DitherType ;
        [read, volatile] 
    uint32 MediaType ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    string FormName ;
        [read, volatile] 
    bool Collate ;
        [read, volatile] 
    uint32 TTOption ;
        [read, volatile] 
    uint32 YResolution ;
        [read, volatile] 
    bool Duplex ;
        [read, volatile] 
    uint32 Color ;
        [read, volatile] 
    uint32 PrintQuality ;
        [read, volatile] 
    uint32 Copies ;
        [read, volatile] 
    uint32 Scale ;
        [read, volatile] 
    uint32 PaperWidth ;
        [read, volatile] 
    uint32 PaperLength ;
        [read, volatile] 
    uint32 PaperSize ;
        [read, volatile] 
    uint32 Orientation ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    string DeviceName ;
        [read, volatile] 
    uint32 XResolution ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Environment:Win32SystemResource
{
        [read, volatile, key]
    string Name ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string VariableName ;
        [read, volatile] 
    string VariableValue ;
} ;     

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PageFile:DataFile
{
        [read, volatile, key]
    string Name ;
        [read, volatile, Units ("Megabytes")] 
    uint32 MaximumSize ;
        [read, volatile, Units ("Megabytes")] 
    uint32 FreeSpace ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Group:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Share:LogicalElement
{
        [read, volatile, key]
    string Name ;
        [read, volatile]
    bool AllowMaximum ;
        [read, volatile]
    uint32 MaximumAllowed ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance), NavigatorAppearance (2)] 
class Win32ProtocolBinding
{
        [read, volatile, key] 
    Win32NetworkProtocol REF Protocol ;
        [read, volatile, key] 
    Win32NetworkAdapter REF Adapter ;
        [read, volatile] 
    Win32Service REF Service ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32DiskDriveToDiskPartition:Dependency
{
        [read, volatile, key] 
    Win32DiskDrive REF Antecedent ;
        [read, volatile, key] 
    Win32DiskPartition REF Dependent ;
} ;
     
        [Association:(ToInstance)] 
class Win32DeviceSettings:ElementSetting
{
        [read, volatile] 
    Device REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SerialPortSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32SerialPort REF Element ;
        [read, volatile, key] 
    Win32SerialPortConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemBIOS:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32BIOS REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemOperatingSystem:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32OperatingSystem REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class Win32SystemSetting:ElementSetting
{
        [read, volatile] 
    Win32ComputerSystem REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLogicalMemoryConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LogicalMemoryConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemSystemDriver:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemDriver REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLoadOrderGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LoadOrderGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemTimeZone:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32TimeZone REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemUsers:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32UserAccount REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProcesses:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Process REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemPartitions:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32DiskPartition REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemServices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Service REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProgramGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32ProgramGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemDesktop:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDevices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Device REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemNetworkConnections:SystemComponent 
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32NetworkConnection REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32UserDesktop:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32UserAccount REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32NetworkAdapterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32NetworkAdapter REF Element ;
        [read, volatile, key] 
    Win32NetworkAdapterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32PrinterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Printer REF Element ;
        [read, volatile, key] 
    Win32PrinterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemBootConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32BootConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemResources:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemResource REF ComponentPart ;
} ;
     



#pragma namespace ("\\\\.\\root\\network\\gatewayp6_1")
 
instance of __Win32Provider
{
    MethodSet = 65553 ;
    Provider = "MS_PROXY_PROVIDER" ;
    ProviderClsId = "{CEAE974C-D862-11d0-82D3-00A0C9038B34}" ;
} ;

        [NavigatorAppearance (1)] 
class ManagedSystemElement
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Description ;
        [read, volatile] 
    bool Installed ;
        [read, volatile] 
    string Caption ;
} ;
     
class Setting
{
} ;

class PhysicalElement:ManagedSystemElement
{
        [read, volatile] 
    string Tag ;
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Model ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string PowerState ;
        [read, volatile] 
    string SKU ;
        [read, volatile] 
    string SerialNumber ;
} ;
     
class LogicalElement:ManagedSystemElement
{
        [read, volatile] 
    bool InUse ;
} ;
     
class DiskPartitionConfiguration:Setting
{
} ;
     
class System:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string PrimaryOwner ;
} ;
     
class Protocol:LogicalElement
{
} ;
     
class Process:LogicalElement
{
        [read, volatile] 
    uint32 BasePriority ;
        [read, volatile] 
    uint32 ProcessID ;
} ;
     
        [OpalInventory] 
class SoftwareComponent:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string BuildNumber ;
        [read, volatile] 
    string BuildType ;
        [read, volatile] 
    string CodeSet ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    bool Installable ;
        [read, volatile] 
    string SerialNumber ;
        [read, volatile] 
    uint32 InUseCount ;
} ;
     
class FileSystem:LogicalElement
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    bool CasePreserved ;
        [read, volatile] 
    bool CaseSensitive ;
        [read, volatile] 
    bool Unicode ;
} ;
     
class LogicalFile:LogicalElement
{
        [read, volatile] 
    string Path ;
        [read, volatile] 
    string Extension ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string FileType ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime LastModified ;
        [read, volatile] 
    datetime LastAccessed ;
        [read, volatile] 
    bool Readable ;
        [read, volatile] 
    bool Writeable ;
        [read, volatile] 
    bool Archived ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Open ;
} ;
     
class Database:LogicalElement
{
    string Version ;
} ;
     
class SystemService:LogicalElement
{
        [read, volatile] 
    string State ;
        [read, volatile] 
    string ServiceType ;
} ;
     
class Thread:LogicalElement
{
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 ThreadID ;
} ;
     
class Job:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    datetime ElapsedTime ;
        [read, volatile] 
    string Notify ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime TimeSubmitted ;
        [read, volatile] 
    datetime UntilTime ;
        [read, volatile] 
    string Owner ;
        [read, volatile] 
    string JobDestination ;
} ;
     
class JobDestination:LogicalElement
{
        [read, volatile] 
    uint32 JobCount ;
} ;
     
class DiskPartition:LogicalElement
{
} ;
     
        [OpalInventory] 
class Device:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class PowerSupply:Device
{
        [read, volatile] 
    string BatteryChargeStatus ;
        [read, volatile] 
    bool BatteryInstalled ;
        [read, volatile] 
    datetime BatteryLifetime ;
        [read, volatile] 
    bool CanTurnOffRemotely ;
        [read, volatile] 
    string CommandFile ;
        [read, volatile] 
    uint32 FirstMessageDelay ;
        [read, volatile] 
    bool LowBatterySignal ;
        [read, volatile] 
    uint32 MessageInterval ;
        [read, volatile, Units ("Percent")] 
    uint32 BatteryLifeLeft ;
        [read, volatile] 
    bool PowerFailSignal ;
        [read, volatile] 
    uint32 RechargeRate ;
        [read, volatile] 
    uint32 UPSPort ;
        [read, volatile] 
    string VoltageCapability ;
        [read, volatile] 
    string Type ;
} ;
     
class LogicalStorage:Device
{
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class Modem:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string HardwareID ;
        [read, volatile] 
    uint32 MaxTransmissionSpeed ;
        [read, volatile, Units ("Baud (bits per second)")] 
    uint32 TransmissionSpeed ;
        [read, volatile] 
    string Mode ;
        [read, volatile] 
    string ConnectionMode ;
} ;
     
class SystemCache:Device
{
        [read, volatile] 
    string ErrorCorrection ;
        [read, volatile] 
    string Level ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile, Units ("Nano Seconds")] 
    uint32 Speed ;
        [read, volatile] 
    string WritePolicy ;
} ;
     
class Processor:Device
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string UpgradeMethod ;
        [read, volatile] 
    string Role ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Family ;
        [read, volatile, Units ("Mega Hertz(MHZ)")] 
    uint32 ClockSpeed ;
} ;
     
class Keyboard:Device
{
        [read, volatile] 
    uint32 NumberOfFunctionKeys ;
        [read, volatile] 
    string Layout ;
} ;
     
class Connector:Device
{
} ;
     
class InterfaceDevice:Device
{
        [read, volatile] 
    bool DeviceIsBusy ;
} ;
     
        [OpalInventory] 
class Display:Device
{
        [read, volatile, Units ("Pixel")] 
    uint32 Height ;
        [read, volatile, Units ("Pixel")] 
    uint32 Width ;
        [read, volatile] 
    string MonitorDisplayType ;
} ;
     
        [OpalInventory] 
class MemoryModule:Device
{
        [read, volatile, Units ("Nano Seconds")] 
    uint32 AccessSpeed ;
        [read, volatile] 
    uint64 EndingAddress ;
        [read, volatile] 
    bool ErrorCorrection ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaximumCapacity ;
        [read, volatile] 
    uint64 MaxCapacityLessFractionalPart ;
        [read, volatile] 
    uint32 NumberOfPins ;
        [read, volatile] 
    uint64 StartingAddress ;
        [read, volatile] 
    string Usage ;
        [read, volatile] 
    string ModuleType ;
} ;
     
class PointingDevice:Device
{
        [read, volatile] 
    uint32 NumberOfButtons ;
        [read, volatile] 
    bool ButtonsSwapped ;
        [read, volatile] 
    uint32 XThreshold ;
        [read, volatile] 
    uint32 YThreshold ;
        [read, volatile] 
    uint32 ZThreshold ;
        [read, volatile] 
    uint32 Speed ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string HardwareType ;
        [read, volatile] 
    uint32 DataQueueSize ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile, Units ("100ns")] 
    uint32 Synch ;
        [read, volatile] 
    bool ConnectMultiplePorts ;
        [read, volatile] 
    uint32 MaximumPortsServiced ;
        [read, volatile] 
    string HorizontalMickeys ;
        [read, volatile] 
    string VerticalMickeys ;
        [read, volatile] 
    string DeviceInterface ;
        [read, volatile] 
    string PointerType ;
        [read, volatile]
    string InfFileName ;
        [read, volatile]
    string InfSection ;
} ;
     
class Printer:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    uint32 AveragePagesPerMinute ;
        [read, volatile] 
    string PrintProcessorParameters ;
        [read, volatile] 
    string Processor ;
} ;
     
class MassStorage:Device
{
        [read, volatile] 
    bool MediaLoaded ;
        [read, volatile] 
    string MediaType ;
        [read, volatile] 
    bool MediaRemovable ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class ProgrammableInterruptController:Device
{
} ;
     
class SystemROM:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    string ROMType ;
} ;
     
class DMA:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 AddressSize ;
        [read, volatile] 
    bool AddressTranslation ;
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    uint32 ChannelNumber ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    uint32 TransferSize ;
        [read, volatile] 
    string DMAType ;
} ;
     
        [OpalInventory] 
class CoolingDevice:Device
{
        [read, volatile] 
    uint32 Accuracy ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeed ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdWarning ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdWarning ;
        [read, volatile] 
    uint32 Reading ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile] 
    uint32 Tolerance ;
} ;
     
class Bus:Device
{
} ;
     
class Motherboard:Device
{
} ;
     
class ComputerSystem:System
{
        [read, volatile] 
    datetime LastBootupTime ;
        [read, volatile] 
    string SupportContact ;
        [read, volatile] 
    datetime SystemTime ;
} ;
     
class NetworkProtocol:Protocol
{
        [read, volatile] 
    bool ConnectionlessService ;
        [read, volatile] 
    bool GuaranteesDelivery ;
        [read, volatile] 
    bool GuaranteesSequencing ;
        [read, volatile] 
    uint32 MaximumAddressSize ;
        [read, volatile] 
    uint32 MaximumMessageSize ;
        [read, volatile] 
    bool MessageOriented ;
        [read, volatile] 
    uint32 MinimumAddressSize ;
        [read, volatile] 
    bool PseudoStreamOriented ;
        [read, volatile] 
    bool SupportsBroadcasting ;
        [read, volatile] 
    bool SupportsConnectData ;
        [read, volatile] 
    bool SupportsDisconnectData ;
        [read, volatile] 
    bool SupportsEncryption ;
        [read, volatile] 
    bool SupportsExpeditedData ;
        [read, volatile] 
    bool SupportsFragmentation ;
        [read, volatile] 
    bool SupportsGracefulClosing ;
        [read, volatile] 
    bool SupportsGuaranteedBandwidth ;
        [read, volatile] 
    bool SupportsMulticasting ;
} ;
     
class OperatingSystem:SoftwareComponent
{
        [read, volatile] 
    datetime LastBootUpTime ;
} ;
     
class DataFile:LogicalFile
{
} ;
     
class ExecutableFile:DataFile
{
        [read, volatile] 
    string ExecutableType ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Package:SoftwareComponent
{
} ;
     
class Directory:LogicalFile
{
} ;
     
class NetworkDrive:LogicalStorage
{
} ;
     
class SCSIInterface:InterfaceDevice
{
} ;
     
class ParallelPort:InterfaceDevice
{
} ;
     
class SerialPort:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 Baud ;
        [read, volatile] 
    bool ParityEnabled ;
        [read, volatile] 
    bool OutTxCTSFlow ;
        [read, volatile] 
    bool OutTxDSRFlow ;
        [read, volatile] 
    bool DTRControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile, Units ("Bits")] 
    sint16 ByteSize ;
        [read, volatile] 
    sint16 Parity ;
        [read, volatile] 
    sint16 StopBits ;
} ;
     
class SerialInterface:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    string Processor ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string SepFile ;
} ;
     
class Port:InterfaceDevice
{
} ;
     
class NetworkAdapter:InterfaceDevice
{
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    uint32 IOPortAddress ;
} ;
     
class DisketteController:InterfaceDevice
{
} ;
     
class KeyboardController:InterfaceDevice
{
} ;
     
class DiskController:InterfaceDevice
{
} ;
     
class DisplayController:InterfaceDevice
{
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 MaximumNumberOfRows ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MaximumRefreshRate ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MinimumRefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile, Units ("Bytes")] 
    uint32 VideoMemorySize ;
} ;
     
class MicroChannelBus:Bus
{
} ;
     
class VLBus:Bus
{
} ;
     
class SCSIBus:Bus
{
} ;
     
class PCMCIABus:Bus
{
} ;
     
class ISABus:Bus
{
} ;
     
class EISABus:Bus
{
        [read, volatile] 
    uint32 NumberOfFunctions ;
} ;
     
class AccessBus:Bus
{
} ;
     
class PCIBus:Bus
{
} ;
     
        [OpalInventory] 
class RamDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint64 MemorySize ;
} ;
     
class DiskDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
        [read, volatile] 
    uint32 Partitions ;
        [read, volatile] 
    uint32 TracksPerCylinder ;
        [read, volatile] 
    uint32 SectorsPerTrack ;
        [read, volatile] 
    uint64 TotalCylinders ;
        [read, volatile] 
    uint64 TotalTracks ;
        [read, volatile] 
    uint64 TotalSectors ;
        [read, volatile] 
    string InterfaceType ;
} ;
     
class CDROMDrive:MassStorage
{
} ;
     
class TapeDrive:MassStorage
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 ECC ;
        [read, volatile] 
    uint32 Compression ;
        [read, volatile] 
    uint32 Padding ;
        [read, volatile] 
    uint32 ReportSetMarks ;
        [read, volatile, Units ("Bytes")] 
    uint32 DefaultBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaxBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinBlockSize ;
        [read, volatile] 
    uint32 MaxPartitionCount ;
        [read, volatile] 
    uint32 FeaturesLow ;
        [read, volatile] 
    uint32 FeaturesHigh ;
        [read, volatile] 
    uint32 EOTWarningZoneSize ;
} ;
     
        [OpalInventory] 
class DisketteDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
} ;
     
class PhysicalComponent:PhysicalElement
{
} ;
     
class PhysicalPackage:PhysicalElement
{
} ;
     
class Card:PhysicalPackage
{
} ;
     
class Cabinet:PhysicalPackage
{
        [read, volatile] 
    bool LockPresent ;
} ;
     
class PhysicalLink:PhysicalElement
{
} ;
     
class WiredConnection:PhysicalLink
{
} ;
     
class WirelessConnection:PhysicalLink
{
} ;
     
class PhysicalConnector:PhysicalElement
{
        [read, volatile] 
    string ConnectorPinout ;
} ;
     
class Slot:PhysicalConnector
{
        [read, volatile] 
    string SlotNumber ;
        [read, volatile] 
    string SlotType ;
        [read, volatile] 
    sint16 SlotWidth ;
} ;
     
class NetworkPort:PhysicalConnector
{
} ;
     
class Media:PhysicalComponent
{
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string Format ;
} ;
     
class Chip:PhysicalComponent
{
} ;
     
class VolumeSet:DiskPartitionConfiguration
{
} ;
     
class StripeSet:DiskPartitionConfiguration
{
} ;
     
class MirrorSet:DiskPartitionConfiguration
{
} ;

        [OpalInventory] 
class Configuration
{
} ;
     
        [Schema ("Common")] 
class Profile:Configuration
{
} ;
     
        [OpalInventory] 
class Location
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Position ;
} ;
     
//================================================================================
// ASSOCIATIONS
//================================================================================

        [Association:(ToInstance)] 
class Dependency
{
        [read, volatile] 
    ManagedSystemElement REF Dependent ;
        [read, volatile] 
    ManagedSystemElement REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ElementSetting
{
        [read, volatile] 
    ManagedSystemElement REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class SystemComponent:Component
{
        [read, volatile] 
    System REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class ProcessThreads:Dependency
{
        [read, volatile, key] 
    Thread REF Dependent ;
        [read, volatile, key] 
    Process REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class JobDestinationJobs:Dependency
{
        [read, volatile] 
    Job REF Dependent ;
        [read, volatile] 
    JobDestination REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ServiceDevice:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    SystemService REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class DeviceDriver:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ProcessExecutable:Dependency
{
        [read, volatile] 
    Process REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class Connection:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    Device REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalComponents:Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    PhysicalElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalElementLocation
{
        [read, volatile] 
    PhysicalElement REF Element ;
        [read, volatile] 
    Location REF Location ;
} ;
     
        [Association:(ToInstance)] 
class SettingContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class DependencyContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Dependency REF Dependency ;
} ;
     
        [Association:(ToInstance)] 
class Container
{
        [read, volatile] 
    PhysicalElement REF ContainedElement ;
        [read, volatile] 
    PhysicalPackage REF ContainingElement ;
} ;
     
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
//
//       Win32 classes/associations
//
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BootConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string ConfigurationPath ;
        [read, volatile] 
    string LastDrive ;
        [read, volatile] 
    string ScratchDirectory ;
        [read, volatile] 
    string TempDirectory ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ProgramGroup:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string GroupName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalMemoryConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 AvailableVirtualMemory ;
        [read, volatile] 
    uint32 TotalPageFileSpace ;
        [read, volatile] 
    uint32 TotalPhysicalMemory ;
        [read, volatile] 
    uint32 TotalVirtualMemory ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkLoginProfile:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string FullName ;
        [read, volatile] 
    string Password ;
        [read, volatile] 
    string HomeDirectory ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string ScriptPath ;
        [read, volatile] 
    string UserComment ;
        [read, volatile] 
    string Parms ;
        [read, volatile] 
    string Workstations ;
        [read, volatile] 
    string LogonServer ;
        [read, volatile] 
    string Profile ;
        [read, volatile] 
    string HomeDirectoryDrive ;
        [read, volatile] 
    datetime PasswordAge ;
        [read, volatile] 
    uint32 Priv ;
        [read, volatile] 
    uint32 Flags ;
        [read, volatile] 
    uint32 AuthFlags ;
        [read, volatile] 
    datetime LastLogon ;
        [read, volatile] 
    datetime LastLogoff ;
        [read, volatile] 
    datetime AccountExpires ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaxStorage ;
        [read, volatile] 
    uint32 UnitsPerWeek ;
        [read, volatile] 
    datetime LogonHours ;
        [read, volatile] 
    uint32 BadPasswordCount ;
        [read, volatile] 
    uint32 NumberOfLogons ;
        [read, volatile] 
    uint32 CountryCode ;
        [read, volatile] 
    uint32 CodePage ;
        [read, volatile] 
    uint32 UserId ;
        [read, volatile] 
    uint32 PrimaryGroupId ;
        [read, volatile] 
    datetime PasswordExpired ;
        [read, volatile] 
    string UserType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Desktop:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BorderWidth ;
        [read, volatile] 
    bool CoolSwitch ;
        [read, volatile] 
    uint32 CursorBlinkRate ;
        [read, volatile] 
    bool DragFullWindows ;
        [read, volatile] 
    uint32 GridGranularity ;
        [read, volatile] 
    uint32 IconSpacing ;
        [read, volatile] 
    uint32 IconTitleSize ;
        [read, volatile] 
    string Pattern ;
        [read, volatile] 
    bool ScreenSaverActive ;
        [read, volatile] 
    string ScreenSaverExecutable ;
        [read, volatile] 
    bool ScreenSaverSecure ;
        [read, volatile, Units ("Minutes")] 
    uint32 ScreenSaverTimeout ;
        [read, volatile] 
    string IconTitleFaceName ;
        [read, volatile] 
    bool IconTitleWrap ;
        [read, volatile] 
    string Wallpaper ;
        [read, volatile] 
    bool WallpaperTiled ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapterConfiguration:Setting
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DHCPEnabled ;
        [read, volatile] 
    datetime DHCPLeaseExpires ;
        [read, volatile] 
    datetime DHCPLeaseObtained ;
        [read, volatile] 
    string DHCPServer ;
        [read, volatile] 
    string DefaultIPGateway ;
        [read, volatile] 
    uint32 IOAddress ;
        [read, volatile] 
    string IPAddress ;
        [read, volatile] 
    string IPSubnet ;
        [read, volatile] 
    string IPXAddress ;
        [read, volatile] 
    uint32 IRQ ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string BusType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPortConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool IsBusy ;
        [read, volatile] 
    uint32 BaudRate ;
        [read, volatile] 
    uint32 XOnXMitThreshold ;
        [read, volatile] 
    uint32 XOffXMitThreshold ;
        [read, volatile] 
    uint32 BitsPerByte ;
        [read, volatile] 
    uint32 XOnCharacter ;
        [read, volatile] 
    uint32 XOffCharacter ;
        [read, volatile] 
    uint32 ErrorReplaceCharacter ;
        [read, volatile] 
    uint32 EOFCharacter ;
        [read, volatile] 
    uint32 EventCharacter ;
        [read, volatile] 
    bool BinaryModeEnabled ;
        [read, volatile] 
    bool ParityCheckEnabled ;
        [read, volatile] 
    bool CTSOutflowControl ;
        [read, volatile] 
    bool DSROutflowControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile] 
    bool ContinueXMitOnXOff ;
        [read, volatile] 
    bool XOnXOffOutFlowControl ;
        [read, volatile] 
    bool XOnXOffInFlowControl ;
        [read, volatile] 
    bool ErrorReplacementEnabled ;
        [read, volatile] 
    bool DiscardNULLBytes ;
        [read, volatile] 
    bool AbortReadWriteOnError ;
        [read, volatile] 
    string DTRFlowControlType ;
        [read, volatile] 
    string RTSFlowControlType ;
        [read, volatile] 
    string Parity ;
        [read, volatile] 
    string StopBits ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TimeZone:Setting
{
        [read, volatile, key] 
    string StandardName ;
        [read, volatile] 
    uint32 Bias ;
        [read, volatile] 
    uint32 StandardYear ;
        [read, volatile] 
    uint32 StandardMonth ;
        [read, volatile] 
    string StandardDayOfWeek ;
        [read, volatile] 
    uint32 StandardDay ;
        [read, volatile] 
    uint32 StandardHour ;
        [read, volatile] 
    uint32 StandardMinute ;
        [read, volatile] 
    uint32 StandardSecond ;
        [read, volatile] 
    uint32 StandardMillisecond ;
        [read, volatile] 
    uint32 StandardBias ;
        [read, volatile] 
    string DaylightName ;
        [read, volatile] 
    uint32 DaylightYear ;
        [read, volatile] 
    uint32 DaylightMonth ;
        [read, volatile] 
    string DaylightDayOfWeek ;
        [read, volatile] 
    uint32 DaylightDay ;
        [read, volatile] 
    uint32 DaylightHour ;
        [read, volatile] 
    uint32 DaylightMinute ;
        [read, volatile] 
    uint32 DaylightSecond ;
        [read, volatile] 
    uint32 DaylightMillisecond ;
        [read, volatile] 
    uint32 DaylightBias ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LoadOrderGroup:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 GroupOrder ;
} ;
     
class Win32NetworkConnection:LogicalElement
{
        [read, volatile] 
    string ConnectionType ;
        [read, volatile] 
    string RemotePath ;
        [read, volatile] 
    string LocalName ;
        [read, volatile] 
    string RemoteName ;
        [read, volatile] 
    string ProviderName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string DisplayType ;
        [read, volatile] 
    string ResourceType ;
        [read, volatile] 
    string UserName ;
} ;
     
class Win32SystemResource:LogicalElement
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkClient:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Win32Account:LogicalElement
{
} ;
     
class Win32Driver:ExecutableFile
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Service:SystemService
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string StartType ;
        [read, volatile] 
    string ErrorControl ;
        [read, volatile] 
    string PathName ;
        [read, volatile] 
    uint32 TagId ;
        [read, volatile] 
    string StartName ;
        [read, volatile] 
    string CommandLine ;
        [read, volatile] 
    string DisplayName ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ComputerSystem:ComputerSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool AutomaticResetBootOption ;
        [read, volatile] 
    bool AutomaticResetCapability ;
        [read, volatile] 
    bool AutomaticResetStatus ;
        [read, volatile] 
    uint32 AutomaticResetTimerInterval ;
        [read, volatile] 
    bool AutomaticResetTimerReset ;
        [read, volatile] 
    bool BootROMSupported ;
        [read, volatile] 
    string BootupState ;
        [read, volatile] 
    bool ConditionalReboot ;
        [read, volatile] 
    bool InfraredSupported ;
        [read, volatile] 
    bool LockKeyboardAndMouse ;
        [read, volatile] 
    bool LockPCPowerOnAndResetButtons ;
        [read, volatile] 
    bool LockSystem ;
        [read, volatile] 
    bool NetworkServerModeEnabled ;
        [read, volatile] 
    bool PowerManagementSupported ;
        [read, volatile] 
    string ResetBootOption ;
        [read, volatile] 
    bool ResetTimeout ;
        [read, volatile] 
    bool SystemFilesNotModified ;
        [read, volatile] 
    bool UnconditionalReboot ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string SystemType ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string SystemRole ;
        [read, volatile] 
    string Location ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkProtocol:NetworkProtocol
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Process:Process
{
        [read, volatile, key] 
    string Name ;
        [read, volatile, key] 
    uint32 ProcessId ;
        [read, volatile] 
    string WindowsVersion ;
        [read, volatile] 
    uint32 ThreadCount ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinimumWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumWorkingSetSize ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime Exited ;
        [read, volatile] 
    datetime TimeInKernel ;
        [read, volatile] 
    datetime TimeInUserMode ;
        [read, volatile] 
    uint32 PageFaults ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 WorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakPageFileUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PageFileUsage ;
        [read, volatile] 
    string ExecutablePath ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BIOS:SoftwareComponent
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Verify ;
        [read, volatile] 
    uint32 StartingAddress ;
        [read, volatile] 
    uint32 EndingAddress ;
        [read, volatile] 
    datetime ReleaseDate ;
        [read, volatile] 
    bool PrimaryBIOS ;
        [read, volatile] 
    string Characteristics[] ;
        [read, volatile]
    string SerialNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32OperatingSystem:OperatingSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string WindowsDirectory ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string CSDVersion ;
        [read, volatile] 
    string SystemDirectory ;
        [read, volatile] 
    string BootDevice ;
        [read, volatile] 
    string SystemStartOptions ;
        [read, volatile] 
    bool Primary ;
        [read, volatile] 
    string CountryCode ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PowerSupply:PowerSupply
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Port:Port
{
        [read, volatile] 
    string Start ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CurrentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PersistentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32RecentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DriverVXD:ExecutableFile
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string IdentiferNumber ;
        [read, volatile] 
    string DeviceDescriptorBlock ;
        [read, volatile] 
    string V86_API ;
        [read, volatile] 
    string PM_API ;
        [read, volatile] 
    uint32 ServiceTableSize ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32UserAccount:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
class Win32SystemMemoryResource:Win32SystemResource
{
        [read, volatile] 
    uint32 AddressRange ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile] 
    string MemoryType ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string StartingAddress ;
        [read, volatile]
    string Owner ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DeviceMemoryAddress:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DMAChannel:Win32SystemMemoryResource
{
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile, key] 
    uint32 Channel ;
        [read, volatile] 
    uint32 Port ;
        [read, volatile]
    uint32 ChannelWidth ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32IRQResource:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 IRQNumber ;
        [read, volatile] 
    uint32 Vector ;
        [read, volatile] 
    uint32 Level ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    string AffinityMask ;
        [read, volatile] 
    string InterruptType ;
        [read, volatile] 
    uint32 TriggerType ;
        [read, volatile] 
    uint32 Shareable ;
        [read, volatile] 
    uint32 Availability ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDriver:Win32Driver
{
        [read, volatile, key] 
    string Name ;
        [key] 
    uint32 Address ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapter:NetworkAdapter
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string ProductName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPort:SerialPort
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 MaximumOutputBufferSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumInputBufferSize ;
        [read, volatile, Units ("Bits per second")] 
    uint32 MaximumBaudRate ;
        [read, volatile] 
    string ProviderType ;
        [read, volatile] 
    bool Supports16BitMode ;
        [read, volatile] 
    bool SupportsDTRDSR ;
        [read, volatile] 
    bool SupportsIntTimeouts ;
        [read, volatile] 
    bool SupportsParityCheck ;
        [read, volatile] 
    bool SupportsRLSD ;
        [read, volatile] 
    bool SupportsRTSCTS ;
        [read, volatile] 
    bool SupportsXOnXOffSet ;
        [read, volatile] 
    bool SupportsSpecialCharacters ;
        [read, volatile] 
    bool SupportsElapsedTimeouts ;
        [read, volatile] 
    bool SupportsXOnXOff ;
        [read, volatile] 
    bool SettableBaudRate ;
        [read, volatile] 
    bool SettableDataBits ;
        [read, volatile] 
    bool SettableFlowControl ;
        [read, volatile] 
    bool SettableParity ;
        [read, volatile] 
    bool SettableParityCheck ;
        [read, volatile] 
    bool SettableRLSD ;
        [read, volatile] 
    bool SettableStopBits ;
        [read, volatile] 
    bool Binary ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ParallelPort:ParallelPort
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DMASupport ;
        [read, volatile] 
    string Capabilities ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SCSIInterface:SCSIInterface
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 InterruptNumber ;
        [read, volatile] 
    uint32 IOAddress ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Processor:Processor
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32KeyboardDevice:Keyboard
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ModemDevice:Modem
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile]
    string AttachedTo ;
        [read, volatile]
    string BlindOff ;
        [read, volatile]
    string BlindOn ;
        [read, volatile]
    string CallSetupFailTimer ;
        [read, volatile]
    string CompatibilityFlags ;
        [read, volatile]
    string CompressionOff ;
        [read, volatile]
    string CompressionOn ;
        [read, volatile]
    string ConfigDialog ;
        [read, volatile]
    string DCB ;
        [read, volatile]
    string Default ;
        [read, volatile]
    string DeviceType ;
        [read, volatile]
    string DevLoader ;
        [read, volatile]
    string DialPrefix ;
        [read, volatile]
    string DialSuffix ;
        [read, volatile]
    string DriverDate ;
        [read, volatile]
    string ErrorControlForced ;
        [read, volatile]
    string ErrorControlOff ;
        [read, volatile]
    string ErrorControlOn ;
        [read, volatile]
    string FlowControlHard ;
        [read, volatile]
    string FlowControlSoft ;
        [read, volatile]
    string FlowControlOff ;
        [read, volatile]
    string InactivityScale ;
        [read, volatile]
    string InactivityTimeout ;
        [read, volatile]
    string Model ;
        [read, volatile]
    string ModemInfPath ;
        [read, volatile]
    string ModemInfSection ;
        [read, volatile]
    string ModulationBell ;
        [read, volatile]
    string ModulationCCITT ;
        [read, volatile]
    string PortSubClass ;
        [read, volatile]
    string Prefix ;
        [read, volatile]
    string Properties ;
        [read, volatile]
    string ProviderName ;
        [read, volatile]
    string Pulse ;
        [read, volatile]
    string Reset ;
        [read, volatile]
    string ResponsesKeyName ;
        [read, volatile]
    string SpeakerModeDial ;
        [read, volatile]
    string SpeakerModeOff ;
        [read, volatile]
    string SpeakerModeOn ;
        [read, volatile]
    string SpeakerModeSetup ;
        [read, volatile]
    string SpeakerVolumeHigh ;
        [read, volatile]
    string SpeakerVolumeLow ;
        [read, volatile]
    string SpeakerVolumeMed ;
        [read, volatile]
    string StringFormat ;
        [read, volatile]
    string Terminator ;
        [read, volatile]
    string Tone ;
        [read, volatile]
    string VoiceSwitchFeature ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32MotherboardDevice:Motherboard
{
        [read, volatile, key] 
    string PrimaryBusType ;
        [read, volatile] 
    string SecondaryBusType ;
        [read, volatile] 
    string RevisionNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PointingDevice:PointingDevice
{
        [read, volatile, key] 
    string HardwareType ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
        [read, volatile]
    uint32 SampleRate ;
        [read, volatile]
    uint32 EnableWheelDetection ;
        [read, volatile]
    string DevLoader ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Printer:Printer
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint32 Attributes ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    uint32 JobCount ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string PortName ;
        [read, volatile] 
    string PrintJobDataType ;
        [read, volatile] 
    string SepFile ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 DefaultPriority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime UntilTime ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrintJob:Job
{
        [read, volatile, key] 
    uint32 JobId ;
        [read, volatile] 
    uint32 TotalPages ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    uint32 PagesPrinted ;
        [read, volatile] 
    string HostPrintQueue ;
        [read, volatile] 
	string DataType ;
        [read, volatile] 
	string Document ;
        [read, volatile] 
	string DriverName ;
        [read, volatile] 
	string Parameters ;
        [read, volatile] 
	string PrintProcessor ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TapeDrive:TapeDrive
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CDRomDrive:CDROMDrive
{
        [read, volatile, key] 
    string Drive ;
        [read, volatile] 
    string Id ;
        [read, volatile] 
    string RevisionLevel ;
        [read, volatile] 
    uint16 SCSILun ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    uint16 FileSystemFlags ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskDrive:DiskDrive
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint16 SCSIPort ;
        [read, volatile] 
    uint32 SCSIBus ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    uint16 SCSILogicalUnit ;
        [read, volatile] 
    string Model ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalDisk:LogicalStorage
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string FileSystem ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    string Provider ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskPartition:DiskPartition
{
        [read, volatile, key] 
    uint32 DiskIndex ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Type ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint32 StartingOffset ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    uint32 HiddenSectors ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    bool BootPartition ;
        [read, volatile] 
    bool RewritePartition ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Encrypted ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayConfiguration:Setting
{
        [read, volatile, key] 
    string DeviceName ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    bool TTOption ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 DitherType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayControllerConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 HorizontalResolution ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    uint32 VerticalResolution ;
        [read, volatile] 
    string VideoMode ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceEntriesInAColorTable ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 ReservedSystemPaletteEntries ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32VideoConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenWidth ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenHeight ;
        [read, volatile, Units ("Not specified")] 
    uint32 HorizontalResolution ;
        [read, volatile, Units ("Not specified")] 
    uint32 VerticalResolution ;
        [read, volatile] 
    uint32 PixelsPerXLogicalInch ;
        [read, volatile] 
    uint32 PixelsPerYLogicalInch ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 ColorTableEntries ;
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 SystemPaletteReservedEntries ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string MonitorType ;
        [read, volatile] 
    string MonitorManufacturer ;
        [read, volatile] 
    string AdapterLocation ;
        [read, volatile] 
    string AdapterDescription ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string InstalledDisplayDrivers ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    datetime DriverDate ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrinterConfiguration:Setting
{
        [read, volatile, key]
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    uint32 DitherType ;
        [read, volatile] 
    uint32 MediaType ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    string FormName ;
        [read, volatile] 
    bool Collate ;
        [read, volatile] 
    uint32 TTOption ;
        [read, volatile] 
    uint32 YResolution ;
        [read, volatile] 
    bool Duplex ;
        [read, volatile] 
    uint32 Color ;
        [read, volatile] 
    uint32 PrintQuality ;
        [read, volatile] 
    uint32 Copies ;
        [read, volatile] 
    uint32 Scale ;
        [read, volatile] 
    uint32 PaperWidth ;
        [read, volatile] 
    uint32 PaperLength ;
        [read, volatile] 
    uint32 PaperSize ;
        [read, volatile] 
    uint32 Orientation ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    string DeviceName ;
        [read, volatile] 
    uint32 XResolution ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Environment:Win32SystemResource
{
        [read, volatile, key]
    string Name ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string VariableName ;
        [read, volatile] 
    string VariableValue ;
} ;     

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PageFile:DataFile
{
        [read, volatile, key]
    string Name ;
        [read, volatile, Units ("Megabytes")] 
    uint32 MaximumSize ;
        [read, volatile, Units ("Megabytes")] 
    uint32 FreeSpace ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Group:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Share:LogicalElement
{
        [read, volatile, key]
    string Name ;
        [read, volatile]
    bool AllowMaximum ;
        [read, volatile]
    uint32 MaximumAllowed ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance), NavigatorAppearance (2)] 
class Win32ProtocolBinding
{
        [read, volatile, key] 
    Win32NetworkProtocol REF Protocol ;
        [read, volatile, key] 
    Win32NetworkAdapter REF Adapter ;
        [read, volatile] 
    Win32Service REF Service ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32DiskDriveToDiskPartition:Dependency
{
        [read, volatile, key] 
    Win32DiskDrive REF Antecedent ;
        [read, volatile, key] 
    Win32DiskPartition REF Dependent ;
} ;
     
        [Association:(ToInstance)] 
class Win32DeviceSettings:ElementSetting
{
        [read, volatile] 
    Device REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SerialPortSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32SerialPort REF Element ;
        [read, volatile, key] 
    Win32SerialPortConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemBIOS:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32BIOS REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemOperatingSystem:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32OperatingSystem REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class Win32SystemSetting:ElementSetting
{
        [read, volatile] 
    Win32ComputerSystem REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLogicalMemoryConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LogicalMemoryConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemSystemDriver:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemDriver REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLoadOrderGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LoadOrderGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemTimeZone:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32TimeZone REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemUsers:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32UserAccount REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProcesses:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Process REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemPartitions:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32DiskPartition REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemServices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Service REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProgramGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32ProgramGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemDesktop:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDevices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Device REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemNetworkConnections:SystemComponent 
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32NetworkConnection REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32UserDesktop:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32UserAccount REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32NetworkAdapterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32NetworkAdapter REF Element ;
        [read, volatile, key] 
    Win32NetworkAdapterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32PrinterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Printer REF Element ;
        [read, volatile, key] 
    Win32PrinterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemBootConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32BootConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemResources:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemResource REF ComponentPart ;
} ;
     



#pragma namespace ("\\\\.\\root\\network\\gatewayp6_2")
 
instance of __Win32Provider
{
    MethodSet = 65553 ;
    Provider = "MS_PROXY_PROVIDER" ;
    ProviderClsId = "{CEAE974C-D862-11d0-82D3-00A0C9038B34}" ;
} ;

        [NavigatorAppearance (1)] 
class ManagedSystemElement
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Description ;
        [read, volatile] 
    bool Installed ;
        [read, volatile] 
    string Caption ;
} ;
     
class Setting
{
} ;

class PhysicalElement:ManagedSystemElement
{
        [read, volatile] 
    string Tag ;
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Model ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string PowerState ;
        [read, volatile] 
    string SKU ;
        [read, volatile] 
    string SerialNumber ;
} ;
     
class LogicalElement:ManagedSystemElement
{
        [read, volatile] 
    bool InUse ;
} ;
     
class DiskPartitionConfiguration:Setting
{
} ;
     
class System:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string PrimaryOwner ;
} ;
     
class Protocol:LogicalElement
{
} ;
     
class Process:LogicalElement
{
        [read, volatile] 
    uint32 BasePriority ;
        [read, volatile] 
    uint32 ProcessID ;
} ;
     
        [OpalInventory] 
class SoftwareComponent:LogicalElement
{
        [read, volatile] 
    string Manufacturer ;
        [read, volatile] 
    string Version ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string BuildNumber ;
        [read, volatile] 
    string BuildType ;
        [read, volatile] 
    string CodeSet ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    bool Installable ;
        [read, volatile] 
    string SerialNumber ;
        [read, volatile] 
    uint32 InUseCount ;
} ;
     
class FileSystem:LogicalElement
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    bool CasePreserved ;
        [read, volatile] 
    bool CaseSensitive ;
        [read, volatile] 
    bool Unicode ;
} ;
     
class LogicalFile:LogicalElement
{
        [read, volatile] 
    string Path ;
        [read, volatile] 
    string Extension ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string FileType ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime LastModified ;
        [read, volatile] 
    datetime LastAccessed ;
        [read, volatile] 
    bool Readable ;
        [read, volatile] 
    bool Writeable ;
        [read, volatile] 
    bool Archived ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Open ;
} ;
     
class Database:LogicalElement
{
    string Version ;
} ;
     
class SystemService:LogicalElement
{
        [read, volatile] 
    string State ;
        [read, volatile] 
    string ServiceType ;
} ;
     
class Thread:LogicalElement
{
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 ThreadID ;
} ;
     
class Job:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    datetime ElapsedTime ;
        [read, volatile] 
    string Notify ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime TimeSubmitted ;
        [read, volatile] 
    datetime UntilTime ;
        [read, volatile] 
    string Owner ;
        [read, volatile] 
    string JobDestination ;
} ;
     
class JobDestination:LogicalElement
{
        [read, volatile] 
    uint32 JobCount ;
} ;
     
class DiskPartition:LogicalElement
{
} ;
     
        [OpalInventory] 
class Device:LogicalElement
{
        [read, volatile] 
    string Status ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class PowerSupply:Device
{
        [read, volatile] 
    string BatteryChargeStatus ;
        [read, volatile] 
    bool BatteryInstalled ;
        [read, volatile] 
    datetime BatteryLifetime ;
        [read, volatile] 
    bool CanTurnOffRemotely ;
        [read, volatile] 
    string CommandFile ;
        [read, volatile] 
    uint32 FirstMessageDelay ;
        [read, volatile] 
    bool LowBatterySignal ;
        [read, volatile] 
    uint32 MessageInterval ;
        [read, volatile, Units ("Percent")] 
    uint32 BatteryLifeLeft ;
        [read, volatile] 
    bool PowerFailSignal ;
        [read, volatile] 
    uint32 RechargeRate ;
        [read, volatile] 
    uint32 UPSPort ;
        [read, volatile] 
    string VoltageCapability ;
        [read, volatile] 
    string Type ;
} ;
     
class LogicalStorage:Device
{
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class Modem:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string HardwareID ;
        [read, volatile] 
    uint32 MaxTransmissionSpeed ;
        [read, volatile, Units ("Baud (bits per second)")] 
    uint32 TransmissionSpeed ;
        [read, volatile] 
    string Mode ;
        [read, volatile] 
    string ConnectionMode ;
} ;
     
class SystemCache:Device
{
        [read, volatile] 
    string ErrorCorrection ;
        [read, volatile] 
    string Level ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile, Units ("Nano Seconds")] 
    uint32 Speed ;
        [read, volatile] 
    string WritePolicy ;
} ;
     
class Processor:Device
{
        [read, volatile] 
    string Version ;
        [read, volatile] 
    string UpgradeMethod ;
        [read, volatile] 
    string Role ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Family ;
        [read, volatile, Units ("Mega Hertz(MHZ)")] 
    uint32 ClockSpeed ;
} ;
     
class Keyboard:Device
{
        [read, volatile] 
    uint32 NumberOfFunctionKeys ;
        [read, volatile] 
    string Layout ;
} ;
     
class Connector:Device
{
} ;
     
class InterfaceDevice:Device
{
        [read, volatile] 
    bool DeviceIsBusy ;
} ;
     
        [OpalInventory] 
class Display:Device
{
        [read, volatile, Units ("Pixel")] 
    uint32 Height ;
        [read, volatile, Units ("Pixel")] 
    uint32 Width ;
        [read, volatile] 
    string MonitorDisplayType ;
} ;
     
        [OpalInventory] 
class MemoryModule:Device
{
        [read, volatile, Units ("Nano Seconds")] 
    uint32 AccessSpeed ;
        [read, volatile] 
    uint64 EndingAddress ;
        [read, volatile] 
    bool ErrorCorrection ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaximumCapacity ;
        [read, volatile] 
    uint64 MaxCapacityLessFractionalPart ;
        [read, volatile] 
    uint32 NumberOfPins ;
        [read, volatile] 
    uint64 StartingAddress ;
        [read, volatile] 
    string Usage ;
        [read, volatile] 
    string ModuleType ;
} ;
     
class PointingDevice:Device
{
        [read, volatile] 
    uint32 NumberOfButtons ;
        [read, volatile] 
    bool ButtonsSwapped ;
        [read, volatile] 
    uint32 XThreshold ;
        [read, volatile] 
    uint32 YThreshold ;
        [read, volatile] 
    uint32 ZThreshold ;
        [read, volatile] 
    uint32 Speed ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string HardwareType ;
        [read, volatile] 
    uint32 DataQueueSize ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile, Units ("100ns")] 
    uint32 Synch ;
        [read, volatile] 
    bool ConnectMultiplePorts ;
        [read, volatile] 
    uint32 MaximumPortsServiced ;
        [read, volatile] 
    string HorizontalMickeys ;
        [read, volatile] 
    string VerticalMickeys ;
        [read, volatile] 
    string DeviceInterface ;
        [read, volatile] 
    string PointerType ;
        [read, volatile]
    string InfFileName ;
        [read, volatile]
    string InfSection ;
} ;
     
class Printer:Device
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    uint32 AveragePagesPerMinute ;
        [read, volatile] 
    string PrintProcessorParameters ;
        [read, volatile] 
    string Processor ;
} ;
     
class MassStorage:Device
{
        [read, volatile] 
    bool MediaLoaded ;
        [read, volatile] 
    string MediaType ;
        [read, volatile] 
    bool MediaRemovable ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
} ;
     
class ProgrammableInterruptController:Device
{
} ;
     
class SystemROM:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    string ROMType ;
} ;
     
class DMA:Device
{
        [read, volatile, Units ("Bytes")] 
    uint32 AddressSize ;
        [read, volatile] 
    bool AddressTranslation ;
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    uint32 ChannelNumber ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    uint32 TransferSize ;
        [read, volatile] 
    string DMAType ;
} ;
     
        [OpalInventory] 
class CoolingDevice:Device
{
        [read, volatile] 
    uint32 Accuracy ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeed ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedLowerThresholdWarning ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdCritical ;
        [read, volatile, Units ("Revolutions Per Minute")] 
    uint32 FanSpeedUpperThresholdWarning ;
        [read, volatile] 
    uint32 Reading ;
        [read, volatile] 
    uint32 Resolution ;
        [read, volatile] 
    uint32 Tolerance ;
} ;
     
class Bus:Device
{
} ;
     
class Motherboard:Device
{
} ;
     
class ComputerSystem:System
{
        [read, volatile] 
    datetime LastBootupTime ;
        [read, volatile] 
    string SupportContact ;
        [read, volatile] 
    datetime SystemTime ;
} ;
     
class NetworkProtocol:Protocol
{
        [read, volatile] 
    bool ConnectionlessService ;
        [read, volatile] 
    bool GuaranteesDelivery ;
        [read, volatile] 
    bool GuaranteesSequencing ;
        [read, volatile] 
    uint32 MaximumAddressSize ;
        [read, volatile] 
    uint32 MaximumMessageSize ;
        [read, volatile] 
    bool MessageOriented ;
        [read, volatile] 
    uint32 MinimumAddressSize ;
        [read, volatile] 
    bool PseudoStreamOriented ;
        [read, volatile] 
    bool SupportsBroadcasting ;
        [read, volatile] 
    bool SupportsConnectData ;
        [read, volatile] 
    bool SupportsDisconnectData ;
        [read, volatile] 
    bool SupportsEncryption ;
        [read, volatile] 
    bool SupportsExpeditedData ;
        [read, volatile] 
    bool SupportsFragmentation ;
        [read, volatile] 
    bool SupportsGracefulClosing ;
        [read, volatile] 
    bool SupportsGuaranteedBandwidth ;
        [read, volatile] 
    bool SupportsMulticasting ;
} ;
     
class OperatingSystem:SoftwareComponent
{
        [read, volatile] 
    datetime LastBootUpTime ;
} ;
     
class DataFile:LogicalFile
{
} ;
     
class ExecutableFile:DataFile
{
        [read, volatile] 
    string ExecutableType ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Package:SoftwareComponent
{
} ;
     
class Directory:LogicalFile
{
} ;
     
class NetworkDrive:LogicalStorage
{
} ;
     
class SCSIInterface:InterfaceDevice
{
} ;
     
class ParallelPort:InterfaceDevice
{
} ;
     
class SerialPort:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 Baud ;
        [read, volatile] 
    bool ParityEnabled ;
        [read, volatile] 
    bool OutTxCTSFlow ;
        [read, volatile] 
    bool OutTxDSRFlow ;
        [read, volatile] 
    bool DTRControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile, Units ("Bits")] 
    sint16 ByteSize ;
        [read, volatile] 
    sint16 Parity ;
        [read, volatile] 
    sint16 StopBits ;
} ;
     
class SerialInterface:InterfaceDevice
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    string Processor ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string SepFile ;
} ;
     
class Port:InterfaceDevice
{
} ;
     
class NetworkAdapter:InterfaceDevice
{
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    uint32 IOPortAddress ;
} ;
     
class DisketteController:InterfaceDevice
{
} ;
     
class KeyboardController:InterfaceDevice
{
} ;
     
class DiskController:InterfaceDevice
{
} ;
     
class DisplayController:InterfaceDevice
{
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 MaximumNumberOfRows ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MaximumRefreshRate ;
        [read, volatile, Units ("Hertz(Hz)")] 
    uint32 MinimumRefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile, Units ("Bytes")] 
    uint32 VideoMemorySize ;
} ;
     
class MicroChannelBus:Bus
{
} ;
     
class VLBus:Bus
{
} ;
     
class SCSIBus:Bus
{
} ;
     
class PCMCIABus:Bus
{
} ;
     
class ISABus:Bus
{
} ;
     
class EISABus:Bus
{
        [read, volatile] 
    uint32 NumberOfFunctions ;
} ;
     
class AccessBus:Bus
{
} ;
     
class PCIBus:Bus
{
} ;
     
        [OpalInventory] 
class RamDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint64 MemorySize ;
} ;
     
class DiskDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
        [read, volatile] 
    uint32 Partitions ;
        [read, volatile] 
    uint32 TracksPerCylinder ;
        [read, volatile] 
    uint32 SectorsPerTrack ;
        [read, volatile] 
    uint64 TotalCylinders ;
        [read, volatile] 
    uint64 TotalTracks ;
        [read, volatile] 
    uint64 TotalSectors ;
        [read, volatile] 
    string InterfaceType ;
} ;
     
class CDROMDrive:MassStorage
{
} ;
     
class TapeDrive:MassStorage
{
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 ECC ;
        [read, volatile] 
    uint32 Compression ;
        [read, volatile] 
    uint32 Padding ;
        [read, volatile] 
    uint32 ReportSetMarks ;
        [read, volatile, Units ("Bytes")] 
    uint32 DefaultBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaxBlockSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinBlockSize ;
        [read, volatile] 
    uint32 MaxPartitionCount ;
        [read, volatile] 
    uint32 FeaturesLow ;
        [read, volatile] 
    uint32 FeaturesHigh ;
        [read, volatile] 
    uint32 EOTWarningZoneSize ;
} ;
     
        [OpalInventory] 
class DisketteDrive:MassStorage
{
        [read, volatile, Units ("Bytes")] 
    uint32 BytesPerSector ;
} ;
     
class PhysicalComponent:PhysicalElement
{
} ;
     
class PhysicalPackage:PhysicalElement
{
} ;
     
class Card:PhysicalPackage
{
} ;
     
class Cabinet:PhysicalPackage
{
        [read, volatile] 
    bool LockPresent ;
} ;
     
class PhysicalLink:PhysicalElement
{
} ;
     
class WiredConnection:PhysicalLink
{
} ;
     
class WirelessConnection:PhysicalLink
{
} ;
     
class PhysicalConnector:PhysicalElement
{
        [read, volatile] 
    string ConnectorPinout ;
} ;
     
class Slot:PhysicalConnector
{
        [read, volatile] 
    string SlotNumber ;
        [read, volatile] 
    string SlotType ;
        [read, volatile] 
    sint16 SlotWidth ;
} ;
     
class NetworkPort:PhysicalConnector
{
} ;
     
class Media:PhysicalComponent
{
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    string Format ;
} ;
     
class Chip:PhysicalComponent
{
} ;
     
class VolumeSet:DiskPartitionConfiguration
{
} ;
     
class StripeSet:DiskPartitionConfiguration
{
} ;
     
class MirrorSet:DiskPartitionConfiguration
{
} ;

        [OpalInventory] 
class Configuration
{
} ;
     
        [Schema ("Common")] 
class Profile:Configuration
{
} ;
     
        [OpalInventory] 
class Location
{
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Position ;
} ;
     
//================================================================================
// ASSOCIATIONS
//================================================================================

        [Association:(ToInstance)] 
class Dependency
{
        [read, volatile] 
    ManagedSystemElement REF Dependent ;
        [read, volatile] 
    ManagedSystemElement REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ElementSetting
{
        [read, volatile] 
    ManagedSystemElement REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class SystemComponent:Component
{
        [read, volatile] 
    System REF ComponentGroup ;
        [read, volatile] 
    ManagedSystemElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class ProcessThreads:Dependency
{
        [read, volatile, key] 
    Thread REF Dependent ;
        [read, volatile, key] 
    Process REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class JobDestinationJobs:Dependency
{
        [read, volatile] 
    Job REF Dependent ;
        [read, volatile] 
    JobDestination REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ServiceDevice:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    SystemService REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class DeviceDriver:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class ProcessExecutable:Dependency
{
        [read, volatile] 
    Process REF Dependent ;
        [read, volatile] 
    ExecutableFile REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class Connection:Dependency
{
        [read, volatile] 
    Device REF Dependent ;
        [read, volatile] 
    Device REF Antecedent ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalComponents:Component
{
        [read, volatile] 
    ManagedSystemElement REF ComponentGroup ;
        [read, volatile] 
    PhysicalElement REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class PhysicalElementLocation
{
        [read, volatile] 
    PhysicalElement REF Element ;
        [read, volatile] 
    Location REF Location ;
} ;
     
        [Association:(ToInstance)] 
class SettingContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Association:(ToInstance)] 
class DependencyContext
{
        [read, volatile] 
    Configuration REF Context ;
        [read, volatile] 
    Dependency REF Dependency ;
} ;
     
        [Association:(ToInstance)] 
class Container
{
        [read, volatile] 
    PhysicalElement REF ContainedElement ;
        [read, volatile] 
    PhysicalPackage REF ContainingElement ;
} ;
     
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
//
//       Win32 classes/associations
//
//$#&*(&$*(#@&*(#@)$&*()#@&$*()&#$*()#&@$*(#@&$#@^$&#@(^&%$#*(@&$#@*^&$%*#@^&*$#@
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BootConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string ConfigurationPath ;
        [read, volatile] 
    string LastDrive ;
        [read, volatile] 
    string ScratchDirectory ;
        [read, volatile] 
    string TempDirectory ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ProgramGroup:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string GroupName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalMemoryConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 AvailableVirtualMemory ;
        [read, volatile] 
    uint32 TotalPageFileSpace ;
        [read, volatile] 
    uint32 TotalPhysicalMemory ;
        [read, volatile] 
    uint32 TotalVirtualMemory ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkLoginProfile:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string FullName ;
        [read, volatile] 
    string Password ;
        [read, volatile] 
    string HomeDirectory ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string ScriptPath ;
        [read, volatile] 
    string UserComment ;
        [read, volatile] 
    string Parms ;
        [read, volatile] 
    string Workstations ;
        [read, volatile] 
    string LogonServer ;
        [read, volatile] 
    string Profile ;
        [read, volatile] 
    string HomeDirectoryDrive ;
        [read, volatile] 
    datetime PasswordAge ;
        [read, volatile] 
    uint32 Priv ;
        [read, volatile] 
    uint32 Flags ;
        [read, volatile] 
    uint32 AuthFlags ;
        [read, volatile] 
    datetime LastLogon ;
        [read, volatile] 
    datetime LastLogoff ;
        [read, volatile] 
    datetime AccountExpires ;
        [read, volatile, Units ("Bytes")] 
    uint64 MaxStorage ;
        [read, volatile] 
    uint32 UnitsPerWeek ;
        [read, volatile] 
    datetime LogonHours ;
        [read, volatile] 
    uint32 BadPasswordCount ;
        [read, volatile] 
    uint32 NumberOfLogons ;
        [read, volatile] 
    uint32 CountryCode ;
        [read, volatile] 
    uint32 CodePage ;
        [read, volatile] 
    uint32 UserId ;
        [read, volatile] 
    uint32 PrimaryGroupId ;
        [read, volatile] 
    datetime PasswordExpired ;
        [read, volatile] 
    string UserType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Desktop:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BorderWidth ;
        [read, volatile] 
    bool CoolSwitch ;
        [read, volatile] 
    uint32 CursorBlinkRate ;
        [read, volatile] 
    bool DragFullWindows ;
        [read, volatile] 
    uint32 GridGranularity ;
        [read, volatile] 
    uint32 IconSpacing ;
        [read, volatile] 
    uint32 IconTitleSize ;
        [read, volatile] 
    string Pattern ;
        [read, volatile] 
    bool ScreenSaverActive ;
        [read, volatile] 
    string ScreenSaverExecutable ;
        [read, volatile] 
    bool ScreenSaverSecure ;
        [read, volatile, Units ("Minutes")] 
    uint32 ScreenSaverTimeout ;
        [read, volatile] 
    string IconTitleFaceName ;
        [read, volatile] 
    bool IconTitleWrap ;
        [read, volatile] 
    string Wallpaper ;
        [read, volatile] 
    bool WallpaperTiled ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapterConfiguration:Setting
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DHCPEnabled ;
        [read, volatile] 
    datetime DHCPLeaseExpires ;
        [read, volatile] 
    datetime DHCPLeaseObtained ;
        [read, volatile] 
    string DHCPServer ;
        [read, volatile] 
    string DefaultIPGateway ;
        [read, volatile] 
    uint32 IOAddress ;
        [read, volatile] 
    string IPAddress ;
        [read, volatile] 
    string IPSubnet ;
        [read, volatile] 
    string IPXAddress ;
        [read, volatile] 
    uint32 IRQ ;
        [read, volatile] 
    string MACAddress ;
        [read, volatile] 
    string ServiceName ;
        [read, volatile] 
    string BusType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPortConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool IsBusy ;
        [read, volatile] 
    uint32 BaudRate ;
        [read, volatile] 
    uint32 XOnXMitThreshold ;
        [read, volatile] 
    uint32 XOffXMitThreshold ;
        [read, volatile] 
    uint32 BitsPerByte ;
        [read, volatile] 
    uint32 XOnCharacter ;
        [read, volatile] 
    uint32 XOffCharacter ;
        [read, volatile] 
    uint32 ErrorReplaceCharacter ;
        [read, volatile] 
    uint32 EOFCharacter ;
        [read, volatile] 
    uint32 EventCharacter ;
        [read, volatile] 
    bool BinaryModeEnabled ;
        [read, volatile] 
    bool ParityCheckEnabled ;
        [read, volatile] 
    bool CTSOutflowControl ;
        [read, volatile] 
    bool DSROutflowControl ;
        [read, volatile] 
    bool DSRSensitivity ;
        [read, volatile] 
    bool ContinueXMitOnXOff ;
        [read, volatile] 
    bool XOnXOffOutFlowControl ;
        [read, volatile] 
    bool XOnXOffInFlowControl ;
        [read, volatile] 
    bool ErrorReplacementEnabled ;
        [read, volatile] 
    bool DiscardNULLBytes ;
        [read, volatile] 
    bool AbortReadWriteOnError ;
        [read, volatile] 
    string DTRFlowControlType ;
        [read, volatile] 
    string RTSFlowControlType ;
        [read, volatile] 
    string Parity ;
        [read, volatile] 
    string StopBits ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TimeZone:Setting
{
        [read, volatile, key] 
    string StandardName ;
        [read, volatile] 
    uint32 Bias ;
        [read, volatile] 
    uint32 StandardYear ;
        [read, volatile] 
    uint32 StandardMonth ;
        [read, volatile] 
    string StandardDayOfWeek ;
        [read, volatile] 
    uint32 StandardDay ;
        [read, volatile] 
    uint32 StandardHour ;
        [read, volatile] 
    uint32 StandardMinute ;
        [read, volatile] 
    uint32 StandardSecond ;
        [read, volatile] 
    uint32 StandardMillisecond ;
        [read, volatile] 
    uint32 StandardBias ;
        [read, volatile] 
    string DaylightName ;
        [read, volatile] 
    uint32 DaylightYear ;
        [read, volatile] 
    uint32 DaylightMonth ;
        [read, volatile] 
    string DaylightDayOfWeek ;
        [read, volatile] 
    uint32 DaylightDay ;
        [read, volatile] 
    uint32 DaylightHour ;
        [read, volatile] 
    uint32 DaylightMinute ;
        [read, volatile] 
    uint32 DaylightSecond ;
        [read, volatile] 
    uint32 DaylightMillisecond ;
        [read, volatile] 
    uint32 DaylightBias ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LoadOrderGroup:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 GroupOrder ;
} ;
     
class Win32NetworkConnection:LogicalElement
{
        [read, volatile] 
    string ConnectionType ;
        [read, volatile] 
    string RemotePath ;
        [read, volatile] 
    string LocalName ;
        [read, volatile] 
    string RemoteName ;
        [read, volatile] 
    string ProviderName ;
        [read, volatile] 
    string Comment ;
        [read, volatile] 
    string DisplayType ;
        [read, volatile] 
    string ResourceType ;
        [read, volatile] 
    string UserName ;
} ;
     
class Win32SystemResource:LogicalElement
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkClient:LogicalElement
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Manufacturer ;
} ;
     
class Win32Account:LogicalElement
{
} ;
     
class Win32Driver:ExecutableFile
{
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Service:SystemService
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string StartType ;
        [read, volatile] 
    string ErrorControl ;
        [read, volatile] 
    string PathName ;
        [read, volatile] 
    uint32 TagId ;
        [read, volatile] 
    string StartName ;
        [read, volatile] 
    string CommandLine ;
        [read, volatile] 
    string DisplayName ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ComputerSystem:ComputerSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    bool AutomaticResetBootOption ;
        [read, volatile] 
    bool AutomaticResetCapability ;
        [read, volatile] 
    bool AutomaticResetStatus ;
        [read, volatile] 
    uint32 AutomaticResetTimerInterval ;
        [read, volatile] 
    bool AutomaticResetTimerReset ;
        [read, volatile] 
    bool BootROMSupported ;
        [read, volatile] 
    string BootupState ;
        [read, volatile] 
    bool ConditionalReboot ;
        [read, volatile] 
    bool InfraredSupported ;
        [read, volatile] 
    bool LockKeyboardAndMouse ;
        [read, volatile] 
    bool LockPCPowerOnAndResetButtons ;
        [read, volatile] 
    bool LockSystem ;
        [read, volatile] 
    bool NetworkServerModeEnabled ;
        [read, volatile] 
    bool PowerManagementSupported ;
        [read, volatile] 
    string ResetBootOption ;
        [read, volatile] 
    bool ResetTimeout ;
        [read, volatile] 
    bool SystemFilesNotModified ;
        [read, volatile] 
    bool UnconditionalReboot ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string SystemType ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string SystemRole ;
        [read, volatile] 
    string Location ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkProtocol:NetworkProtocol
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Process:Process
{
        [read, volatile, key] 
    string Name ;
        [read, volatile, key] 
    uint32 ProcessId ;
        [read, volatile] 
    string WindowsVersion ;
        [read, volatile] 
    uint32 ThreadCount ;
        [read, volatile, Units ("Bytes")] 
    uint32 MinimumWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumWorkingSetSize ;
        [read, volatile] 
    datetime CreationDate ;
        [read, volatile] 
    datetime Exited ;
        [read, volatile] 
    datetime TimeInKernel ;
        [read, volatile] 
    datetime TimeInUserMode ;
        [read, volatile] 
    uint32 PageFaults ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakWorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 WorkingSetSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaPeakNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 QuotaNonPagedPoolUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PeakPageFileUsage ;
        [read, volatile, Units ("Bytes")] 
    uint32 PageFileUsage ;
        [read, volatile] 
    string ExecutablePath ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32BIOS:SoftwareComponent
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string Verify ;
        [read, volatile] 
    uint32 StartingAddress ;
        [read, volatile] 
    uint32 EndingAddress ;
        [read, volatile] 
    datetime ReleaseDate ;
        [read, volatile] 
    bool PrimaryBIOS ;
        [read, volatile] 
    string Characteristics[] ;
        [read, volatile]
    string SerialNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32OperatingSystem:OperatingSystem
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string WindowsDirectory ;
        [read, volatile] 
    string BootDirectory ;
        [read, volatile] 
    string CSDVersion ;
        [read, volatile] 
    string SystemDirectory ;
        [read, volatile] 
    string BootDevice ;
        [read, volatile] 
    string SystemStartOptions ;
        [read, volatile] 
    bool Primary ;
        [read, volatile] 
    string CountryCode ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PowerSupply:PowerSupply
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Port:Port
{
        [read, volatile] 
    string Start ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CurrentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PersistentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32RecentNetworkConnection:Win32NetworkConnection
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DriverVXD:ExecutableFile
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string IdentiferNumber ;
        [read, volatile] 
    string DeviceDescriptorBlock ;
        [read, volatile] 
    string V86_API ;
        [read, volatile] 
    string PM_API ;
        [read, volatile] 
    uint32 ServiceTableSize ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32UserAccount:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
class Win32SystemMemoryResource:Win32SystemResource
{
        [read, volatile] 
    uint32 AddressRange ;
        [read, volatile, Units ("Bytes")] 
    string Length ;
        [read, volatile] 
    string MemoryType ;
        [read, volatile] 
    string ShareDisposition ;
        [read, volatile, Units ("Bytes")] 
    string StartingAddress ;
        [read, volatile]
    string Owner ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DeviceMemoryAddress:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string DeviceType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DMAChannel:Win32SystemMemoryResource
{
        [read, volatile] 
    bool BurstMode ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile, key] 
    uint32 Channel ;
        [read, volatile] 
    uint32 Port ;
        [read, volatile]
    uint32 ChannelWidth ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32IRQResource:Win32SystemMemoryResource
{
        [read, volatile, key] 
    uint32 IRQNumber ;
        [read, volatile] 
    uint32 Vector ;
        [read, volatile] 
    uint32 Level ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    string AffinityMask ;
        [read, volatile] 
    string InterruptType ;
        [read, volatile] 
    uint32 TriggerType ;
        [read, volatile] 
    uint32 Shareable ;
        [read, volatile] 
    uint32 Availability ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDriver:Win32Driver
{
        [read, volatile, key] 
    string Name ;
        [key] 
    uint32 Address ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32NetworkAdapter:NetworkAdapter
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    datetime InstallationDate ;
        [read, volatile] 
    string ProductName ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SerialPort:SerialPort
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 MaximumOutputBufferSize ;
        [read, volatile, Units ("Bytes")] 
    uint32 MaximumInputBufferSize ;
        [read, volatile, Units ("Bits per second")] 
    uint32 MaximumBaudRate ;
        [read, volatile] 
    string ProviderType ;
        [read, volatile] 
    bool Supports16BitMode ;
        [read, volatile] 
    bool SupportsDTRDSR ;
        [read, volatile] 
    bool SupportsIntTimeouts ;
        [read, volatile] 
    bool SupportsParityCheck ;
        [read, volatile] 
    bool SupportsRLSD ;
        [read, volatile] 
    bool SupportsRTSCTS ;
        [read, volatile] 
    bool SupportsXOnXOffSet ;
        [read, volatile] 
    bool SupportsSpecialCharacters ;
        [read, volatile] 
    bool SupportsElapsedTimeouts ;
        [read, volatile] 
    bool SupportsXOnXOff ;
        [read, volatile] 
    bool SettableBaudRate ;
        [read, volatile] 
    bool SettableDataBits ;
        [read, volatile] 
    bool SettableFlowControl ;
        [read, volatile] 
    bool SettableParity ;
        [read, volatile] 
    bool SettableParityCheck ;
        [read, volatile] 
    bool SettableRLSD ;
        [read, volatile] 
    bool SettableStopBits ;
        [read, volatile] 
    bool Binary ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ParallelPort:ParallelPort
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    bool DMASupport ;
        [read, volatile] 
    string Capabilities ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SCSIInterface:SCSIInterface
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    string DeviceType ;
        [read, volatile] 
    uint32 Index ;
        [read, volatile] 
    uint32 InterruptNumber ;
        [read, volatile] 
    uint32 IOAddress ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Processor:Processor
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32KeyboardDevice:Keyboard
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32ModemDevice:Modem
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile]
    string AttachedTo ;
        [read, volatile]
    string BlindOff ;
        [read, volatile]
    string BlindOn ;
        [read, volatile]
    string CallSetupFailTimer ;
        [read, volatile]
    string CompatibilityFlags ;
        [read, volatile]
    string CompressionOff ;
        [read, volatile]
    string CompressionOn ;
        [read, volatile]
    string ConfigDialog ;
        [read, volatile]
    string DCB ;
        [read, volatile]
    string Default ;
        [read, volatile]
    string DeviceType ;
        [read, volatile]
    string DevLoader ;
        [read, volatile]
    string DialPrefix ;
        [read, volatile]
    string DialSuffix ;
        [read, volatile]
    string DriverDate ;
        [read, volatile]
    string ErrorControlForced ;
        [read, volatile]
    string ErrorControlOff ;
        [read, volatile]
    string ErrorControlOn ;
        [read, volatile]
    string FlowControlHard ;
        [read, volatile]
    string FlowControlSoft ;
        [read, volatile]
    string FlowControlOff ;
        [read, volatile]
    string InactivityScale ;
        [read, volatile]
    string InactivityTimeout ;
        [read, volatile]
    string Model ;
        [read, volatile]
    string ModemInfPath ;
        [read, volatile]
    string ModemInfSection ;
        [read, volatile]
    string ModulationBell ;
        [read, volatile]
    string ModulationCCITT ;
        [read, volatile]
    string PortSubClass ;
        [read, volatile]
    string Prefix ;
        [read, volatile]
    string Properties ;
        [read, volatile]
    string ProviderName ;
        [read, volatile]
    string Pulse ;
        [read, volatile]
    string Reset ;
        [read, volatile]
    string ResponsesKeyName ;
        [read, volatile]
    string SpeakerModeDial ;
        [read, volatile]
    string SpeakerModeOff ;
        [read, volatile]
    string SpeakerModeOn ;
        [read, volatile]
    string SpeakerModeSetup ;
        [read, volatile]
    string SpeakerVolumeHigh ;
        [read, volatile]
    string SpeakerVolumeLow ;
        [read, volatile]
    string SpeakerVolumeMed ;
        [read, volatile]
    string StringFormat ;
        [read, volatile]
    string Terminator ;
        [read, volatile]
    string Tone ;
        [read, volatile]
    string VoiceSwitchFeature ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32MotherboardDevice:Motherboard
{
        [read, volatile, key] 
    string PrimaryBusType ;
        [read, volatile] 
    string SecondaryBusType ;
        [read, volatile] 
    string RevisionNumber ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PointingDevice:PointingDevice
{
        [read, volatile, key] 
    string HardwareType ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
        [read, volatile]
    uint32 SampleRate ;
        [read, volatile]
    uint32 EnableWheelDetection ;
        [read, volatile]
    string DevLoader ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Printer:Printer
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint32 Attributes ;
        [read, volatile] 
    string DriverName ;
        [read, volatile] 
    uint32 JobCount ;
        [read, volatile] 
    string Location ;
        [read, volatile] 
    string PortName ;
        [read, volatile] 
    string PrintJobDataType ;
        [read, volatile] 
    string SepFile ;
        [read, volatile] 
    string ServerName ;
        [read, volatile] 
    string ShareName ;
        [read, volatile] 
    uint32 Priority ;
        [read, volatile] 
    uint32 DefaultPriority ;
        [read, volatile] 
    datetime StartTime ;
        [read, volatile] 
    datetime UntilTime ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrintJob:Job
{
        [read, volatile, key] 
    uint32 JobId ;
        [read, volatile] 
    uint32 TotalPages ;
        [read, volatile, Units ("Bytes")] 
    uint32 Size ;
        [read, volatile] 
    uint32 PagesPrinted ;
        [read, volatile] 
    string HostPrintQueue ;
        [read, volatile] 
	string DataType ;
        [read, volatile] 
	string Document ;
        [read, volatile] 
	string DriverName ;
        [read, volatile] 
	string Parameters ;
        [read, volatile] 
	string PrintProcessor ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32TapeDrive:TapeDrive
{
        [read, volatile, key] 
    uint32 Index ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32CDRomDrive:CDROMDrive
{
        [read, volatile, key] 
    string Drive ;
        [read, volatile] 
    string Id ;
        [read, volatile] 
    string RevisionLevel ;
        [read, volatile] 
    uint16 SCSILun ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    uint16 FileSystemFlags ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskDrive:DiskDrive
{
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    uint16 SCSIPort ;
        [read, volatile] 
    uint32 SCSIBus ;
        [read, volatile] 
    uint16 SCSITargetId ;
        [read, volatile] 
    uint16 SCSILogicalUnit ;
        [read, volatile] 
    string Model ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32LogicalDisk:LogicalStorage
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile] 
    string FileSystem ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    uint32 MaximumComponentLength ;
        [read, volatile] 
    string Provider ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DiskPartition:DiskPartition
{
        [read, volatile, key] 
    uint32 DiskIndex ;
        [read, volatile, key] 
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    string Type ;
        [read, volatile] 
    string VolumeName ;
        [read, volatile, Units ("Bytes")] 
    uint64 FreeSpace ;
        [read, volatile, Units ("Bytes")] 
    uint32 StartingOffset ;
        [read, volatile, Units ("Bytes")] 
    uint64 Size ;
        [read, volatile] 
    uint32 HiddenSectors ;
        [read, volatile] 
    string VolumeSerialNumber ;
        [read, volatile] 
    bool BootPartition ;
        [read, volatile] 
    bool RewritePartition ;
        [read, volatile] 
    bool Compressed ;
        [read, volatile] 
    bool Encrypted ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayConfiguration:Setting
{
        [read, volatile, key] 
    string DeviceName ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    bool TTOption ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 DitherType ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32DisplayControllerConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 HorizontalResolution ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    uint32 VerticalResolution ;
        [read, volatile] 
    string VideoMode ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceEntriesInAColorTable ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 ReservedSystemPaletteEntries ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32VideoConfiguration:Setting
{
        [read, volatile, key] 
    string Name ;
        [read, volatile] 
    string AdapterCompatibility ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenWidth ;
        [read, volatile, Units ("Not specified")] 
    uint32 ScreenHeight ;
        [read, volatile, Units ("Not specified")] 
    uint32 HorizontalResolution ;
        [read, volatile, Units ("Not specified")] 
    uint32 VerticalResolution ;
        [read, volatile] 
    uint32 PixelsPerXLogicalInch ;
        [read, volatile] 
    uint32 PixelsPerYLogicalInch ;
        [read, volatile] 
    uint32 BitsPerPixel ;
        [read, volatile] 
    uint32 ColorPlanes ;
        [read, volatile] 
    uint32 DeviceSpecificPens ;
        [read, volatile] 
    uint32 ColorTableEntries ;
        [read, volatile] 
    uint32 ActualColorResolution ;
        [read, volatile] 
    uint32 SystemPaletteEntries ;
        [read, volatile] 
    uint32 SystemPaletteReservedEntries ;
        [read, volatile] 
    uint32 RefreshRate ;
        [read, volatile] 
    string ScanMode ;
        [read, volatile] 
    string AdapterType ;
        [read, volatile] 
    uint32 AdapterRAM ;
        [read, volatile] 
    string MonitorType ;
        [read, volatile] 
    string MonitorManufacturer ;
        [read, volatile] 
    string AdapterLocation ;
        [read, volatile] 
    string AdapterDescription ;
        [read, volatile] 
    string AdapterChipType ;
        [read, volatile] 
    string InstalledDisplayDrivers ;
        [read, volatile] 
    string AdapterDACType ;
        [read, volatile] 
    datetime DriverDate ;
        [read, volatile] 
    string InfFileName ;
        [read, volatile] 
    string InfSection ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PrinterConfiguration:Setting
{
        [read, volatile, key]
    uint32 Index ;
        [read, volatile] 
    string Name ;
        [read, volatile] 
    uint32 DitherType ;
        [read, volatile] 
    uint32 MediaType ;
        [read, volatile] 
    uint32 ICMIntent ;
        [read, volatile] 
    uint32 ICMMethod ;
        [read, volatile] 
    uint32 DisplayFrequency ;
        [read, volatile] 
    uint32 DisplayFlags ;
        [read, volatile] 
    uint32 PelsHeight ;
        [read, volatile] 
    uint32 PelsWidth ;
        [read, volatile] 
    uint32 BitsPerPel ;
        [read, volatile] 
    uint32 LogPixels ;
        [read, volatile] 
    string FormName ;
        [read, volatile] 
    bool Collate ;
        [read, volatile] 
    uint32 TTOption ;
        [read, volatile] 
    uint32 YResolution ;
        [read, volatile] 
    bool Duplex ;
        [read, volatile] 
    uint32 Color ;
        [read, volatile] 
    uint32 PrintQuality ;
        [read, volatile] 
    uint32 Copies ;
        [read, volatile] 
    uint32 Scale ;
        [read, volatile] 
    uint32 PaperWidth ;
        [read, volatile] 
    uint32 PaperLength ;
        [read, volatile] 
    uint32 PaperSize ;
        [read, volatile] 
    uint32 Orientation ;
        [read, volatile] 
    uint32 DriverVersion ;
        [read, volatile] 
    uint32 SpecVersion ;
        [read, volatile] 
    string DeviceName ;
        [read, volatile] 
    uint32 XResolution ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Environment:Win32SystemResource
{
        [read, volatile, key]
    string Name ;
        [read, volatile] 
    string UserName ;
        [read, volatile] 
    string VariableName ;
        [read, volatile] 
    string VariableValue ;
} ;     

        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32PageFile:DataFile
{
        [read, volatile, key]
    string Name ;
        [read, volatile, Units ("Megabytes")] 
    uint32 MaximumSize ;
        [read, volatile, Units ("Megabytes")] 
    uint32 FreeSpace ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Group:Win32Account
{
        [read, volatile, key] 
    string Name ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32Share:LogicalElement
{
        [read, volatile, key]
    string Name ;
        [read, volatile]
    bool AllowMaximum ;
        [read, volatile]
    uint32 MaximumAllowed ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance), NavigatorAppearance (2)] 
class Win32ProtocolBinding
{
        [read, volatile, key] 
    Win32NetworkProtocol REF Protocol ;
        [read, volatile, key] 
    Win32NetworkAdapter REF Adapter ;
        [read, volatile] 
    Win32Service REF Service ;
} ;

        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32DiskDriveToDiskPartition:Dependency
{
        [read, volatile, key] 
    Win32DiskDrive REF Antecedent ;
        [read, volatile, key] 
    Win32DiskPartition REF Dependent ;
} ;
     
        [Association:(ToInstance)] 
class Win32DeviceSettings:ElementSetting
{
        [read, volatile] 
    Device REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SerialPortSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32SerialPort REF Element ;
        [read, volatile, key] 
    Win32SerialPortConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemBIOS:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32BIOS REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemOperatingSystem:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32OperatingSystem REF ComponentPart ;
} ;
     
        [Association:(ToInstance)] 
class Win32SystemSetting:ElementSetting
{
        [read, volatile] 
    Win32ComputerSystem REF Element ;
        [read, volatile] 
    Setting REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLogicalMemoryConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LogicalMemoryConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemSystemDriver:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemDriver REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemLoadOrderGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32LoadOrderGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemTimeZone:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32TimeZone REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemUsers:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32UserAccount REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProcesses:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Process REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemPartitions:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32DiskPartition REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemServices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32Service REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemProgramGroups:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32ProgramGroup REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemDesktop:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemDevices:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Device REF ComponentPart ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemNetworkConnections:SystemComponent 
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32NetworkConnection REF ComponentPart ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32UserDesktop:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32UserAccount REF Element ;
        [read, volatile, key] 
    Win32Desktop REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32NetworkAdapterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Win32NetworkAdapter REF Element ;
        [read, volatile, key] 
    Win32NetworkAdapterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32PrinterSetting:Win32DeviceSettings
{
        [read, volatile, key] 
    Printer REF Element ;
        [read, volatile, key] 
    Win32PrinterConfiguration REF Setting ;
} ;
     
        [Dynamic, Provider ("MS_PROXY_PROVIDER"), Association:(ToInstance)] 
class Win32SystemBootConfiguration:Win32SystemSetting
{
        [read, volatile, key] 
    Win32ComputerSystem REF Element ;
        [read, volatile, key] 
    Win32BootConfiguration REF Setting ;
} ;
     
        [Association:(ToInstance), Dynamic, Provider ("MS_PROXY_PROVIDER")] 
class Win32SystemResources:SystemComponent
{
        [read, volatile, key] 
    Win32ComputerSystem REF ComponentGroup ;
        [read, volatile, key] 
    Win32SystemResource REF ComponentPart ;
} ;
     


