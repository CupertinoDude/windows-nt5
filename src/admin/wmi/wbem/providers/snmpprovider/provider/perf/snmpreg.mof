// Copyright (c) 1999-2001 Microsoft Corporation, All Rights Reserved
#pragma autorecover

#pragma namespace("\\\\.\\root")

instance of __Namespace
{
	Name = "snmp" ;
} ;

#pragma namespace("\\\\.\\root\\snmp")

instance of __Namespace
{
	Name = "localhost" ;
} ;

#pragma namespace("\\\\.\\root\\snmp\\localhost")

[singleton]
class SnmpTransportObject
{
	[read,write] string AgentSNMPVersion = "1" ;
	[read,write] string AgentTransport = "IP" ;
	[read,write] string AgentAddress = "localhost" ;
	[read,write] string AgentReadCommunityName = "public" ;
	[read,write] string AgentWriteCommunityName = "private" ;
	[read,write] uint32 AgentRetryCount = 1 ;
	[read,write] uint32 AgentRetryTimeout = 500 ;
	[read,write] uint32 AgentVarBindsPerPdu = 10 ;
	[read,write] uint32 AgentFlowControlWindowSize = 4 ;
} ;

instance of SnmpTransportObject 
{
} ;

instance of __Win32Provider as $PClass
{
	Name = "MS_SNMP_CLASS_PROVIDER";
	Clsid = "{70426720-F78F-11cf-9151-00AA00A4086C}";
};    

instance of __ClassProviderRegistration
{
    Provider = $PClass;
    SupportsGet = TRUE;
    SupportsPut = FALSE;
    SupportsDelete = FALSE;
    SupportsEnumeration = TRUE;

    QuerySupportLevels = NULL ;

	ResultSetQueries = { "Select * From meta_class Where __this isa SnmpMacro" } ;
} ;

instance of __Win32Provider as $EventProv
{
	Name = "MS_SNMP_REFERENT_EVENT_PROVIDER";
	ClsId = "{9D5BED16-0765-11d1-AB2C-00C04FD9159E}";
};

instance of __EventProviderRegistration
{
	Provider = $EventProv;
	EventQueryList = {"select * from SnmpExtendedNotification"} ;
};

instance of __Win32Provider as $EncapEventProv
{
	Name = "MS_SNMP_ENCAPSULATED_EVENT_PROVIDER";
	ClsId = "{19C813AC-FEE7-11D0-AB22-00C04FD9159E}";
};

instance of __EventProviderRegistration
{
	Provider = $EncapEventProv;
	EventQueryList = {"select * from SnmpNotification"};
};


instance of __Win32Provider as $PInst
{
	Name = "MS_SNMP_INSTANCE_PROVIDER";
	ClientLoadableClsid = "{1F517A23-B29C-11cf-8C8D-00AA00A4086C}";
	Clsid = "{1F517A23-B29C-11cf-8C8D-00AA00A4086C}";
};    

instance of __InstanceProviderRegistration
{
    Provider = $PInst;
    SupportsGet = TRUE;
    SupportsPut = TRUE;
    SupportsDelete = TRUE;
    SupportsEnumeration = TRUE;

    QuerySupportLevels = { "WQL:UnarySelect" } ;
};
