// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "DHCP-MIB" by smi2smir version 1.00.456.0000
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("A list of subnets maintained by the server\nThis is the row corresponding to a subnet"), module_name("DHCP-MIB"), group_objectid("1.3.6.1.4.1.311.1.3.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_DHCP_MIB_scopeTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.2.1.1.4"), read, description("This is the no. of addresses that are currently in the offer\n\t\t   state"), status("mandatory")] uint32 noPendingOffers = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.2.1.1.3"), read, description("This is the no. of addresses that are free "), status("mandatory")] uint32 noAddFree = 0;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.311.1.3.2.1.1.1"), read, description("This is the subnet address "), status("mandatory"), key, key_order(1)] string subnetAdd = "0.0.0.0";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.2.1.1.2"), read, description("This is the no. of addresses in use"), status("mandatory")] uint32 noAddInUse = 0;
};
[description(""), module_name("DHCP-MIB"), singleton, group_objectid("1.3.6.1.4.1.311.1.3.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_DHCP_MIB_dhcpPar : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.7"), read, description("This variable indicates the number of\n\t\t\t nacks received"), status("mandatory")] uint32 parDhcpTotalNoOfNacks = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.5"), read, description("This variable indicates the number of\n\t\t\t offers sent"), status("mandatory")] uint32 parDhcpTotalNoOfOffers = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.8"), read, description("This variable indicates the number of\n\t\t\t declines"), status("mandatory")] uint32 parDhcpTotalNoOfDeclines = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.4"), read, description("This variable indicates the number of\n\t\t\t releases received"), status("mandatory")] uint32 parDhcpTotalNoOfReleases = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.3"), read, description("This variable indicates the number of\n\t\t\t requests received"), status("mandatory")] uint32 parDhcpTotalNoOfRequests = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.2"), read, description("This variable indicates the number of\n\t\t\t discovery messages received"), status("mandatory")] uint32 parDhcpTotalNoOfDiscovers = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..30"), object_identifier("1.3.6.1.4.1.311.1.3.1.1"), read, description("Dhcp Server start time"), status("mandatory")] string parDhcpStartTime = "";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.3.1.6"), read, description("This variable indicates the number of\n\t\t\t acks received"), status("mandatory")] uint32 parDhcpTotalNoOfAcks = 0;
};

