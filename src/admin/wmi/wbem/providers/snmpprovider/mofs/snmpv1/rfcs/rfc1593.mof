// Copyright (c) 1999-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "IBM-6611-APPN-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("Table describing all of the TGs owned by the\n              end nodes known to this node.\n              The TG destination can be a virtual\n              node, network node, or end node.\nThis table requires multiple indexes to uniquely\n              identify each TG. They are originating CPname,\n              destination CPname, and the TG number."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.3.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnLocalEnTgTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.2"), read, description("Administratively-assigned name for the\n             destination node for this TG.\n             This is the fully-qualified network name."), status("mandatory"), key, key_order(2)] string ibmappnLocalEnTgDest;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.13"), read, description("Relative amount of time that it takes for a signal to\n              travel the length of the logical link.  This time is\n              represented in micro seconds, with some of the more\n              common values enumerated."), status("mandatory")] string ibmappnLocalEnTgDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.9"), read, description("The effective capacity is an integer value that indicates\n             the actual kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776."), status("mandatory")] sint32 ibmappnLocalEnTgEffCap;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.1"), read, description("Administratively-assigned name for the\n             origination node for this TG.\n             This is the fully-qualified network name."), status("mandatory"), key, key_order(1)] string ibmappnLocalEnTgOrigin;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.6"), read, description("DLC specific data related to the link connection\n             network.\n             Token-Ring    - MAC/SAP\n\n\n\n\n\n             X.25 Switched - dial digits\n             X.21 Switched - dial digits\n             Circuit Swtch - dial digits"), status("mandatory")] string ibmappnLocalEnTgDlcData;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.10"), read, description("Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255."), status("mandatory")] sint32 ibmappnLocalEnTgConnCost;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.11"), read, description("Relative cost of transmitting a byte over this link.\n            Range is from 0, which means no cost, to 255."), status("mandatory")] sint32 ibmappnLocalEnTgByteCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.12"), read, description("Security level for this TG."), status("mandatory")] string ibmappnLocalEnTgSecurity;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.14"), read, description("This is used to have multiple images for a\n              connection network.  For a connection network\n              it is the same as in the TG vector and for\n               a non connection network it is zero."), status("mandatory")] sint32 ibmappnLocalEnTgModemClass;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.8"), read, description("Indicates whether CP-CP sessions are supported on this TG."), status("mandatory")] string ibmappnLocalEnTgCpCpSession;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.5"), read, description("Indicates whether the destination node is\n             a virtual node."), status("mandatory")] string ibmappnLocalEnTgDestVirtual;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.7"), read, description("Indicates whether the Transmission Group is operational."), status("mandatory")] string ibmappnLocalEnTgOperational;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.3"), read, description("Number associated with this transmission group."), status("mandatory"), key, key_order(3)] sint32 ibmappnLocalEnTgNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.4"), read, description("Number of days before deletion of this\n             end node TG entry. Range is 0-31."), status("mandatory")] sint32 ibmappnLocalEnTgEntryTimeLeft;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.15"), read, description("First user-defined TG characteristic\n            for this TG. Range of values is 0-255."), status("mandatory")] sint32 ibmappnLocalEnTgUsr1;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.16"), read, description("Second user-defined TG characteristic\n             for this TG. Range of values is 0-255."), status("mandatory")] sint32 ibmappnLocalEnTgUsr2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.2.1.17"), read, description("Third user-defined TG characteristic\n             for this TG. Range of values is 0-255."), status("mandatory")] sint32 ibmappnLocalEnTgUsr3;
};
[description("Portion of the APPN topology\n              database that describes the end\n              nodes known to this node.\nThis table is indexed by the end node CPname."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.3.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnLocalEnTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.1.1.2"), read, description("Number of days before deletion of this\n             end node entry. Range is 0-31."), status("mandatory")] sint32 ibmappnLocalEnEntryTimeLeft;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.1.1.1"), read, description("Administratively-assigned fully-qualified\n            name of end node in the format NETID.CPNAME."), status("mandatory"), key, key_order(1)] string ibmappnLocalEnName;
	[textual_convention("EnumeratedINTEGER"), enumeration("endnode(2),len(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.2.1.1.3"), read, description("Type of APPN node (must always be a len or end node)."), status("mandatory")] string ibmappnLocalEnType;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.3.1.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnLocalGeneral : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.1.1"), read, description("Administratively-assigned fully-qualified name\n            for this node. Format is NETID.CPNAME."), status("mandatory")] string ibmappnLocalNodeName;
	[textual_convention("EnumeratedINTEGER"), enumeration("networknode(1),endnode(2),len(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.1.2"), read, description("Type of APPN node."), status("mandatory")] string ibmappnLocalNodeType;
};
[description("TG Table describes all of the TGs owned by this\n              node.  The TG destination can be a virtual\n              node, network node, len, or end node.\nThis table is indexed by the destination CPname\n              and the TG number."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.3.1.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnLocalTgTable : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..9"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.4"), read, description("DLC specific data related to the link connection\n             network.\n             Token-Ring    - MAC/SAP\n             X.25 Switched - dial digits\n             X.21 Switched - dial digits\n             Circuit Swtch - dial digits"), status("mandatory")] string ibmappnLocalTgDlcData;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.10"), read, description("Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255."), status("mandatory")] sint32 ibmappnLocalTgConnCost;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.11"), read, description("Relative cost of transmitting a byte over this link.\n            Range is from 0 (lowest cost) to 255."), status("mandatory")] sint32 ibmappnLocalTgByteCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.12"), read, description("Security level for this TG."), status("mandatory")] string ibmappnLocalTgSecurity;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.6"), read, description("Indicates whether the Transmission Group\n             is quiescing."), status("mandatory")] string ibmappnLocalTgQuiescing;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.14"), read, description("This is used to have multiple images for a\n              connection network.  For a connection network\n              it is the same as in the TG vector and for\n              a non-connection network it is zero."), status("mandatory")] sint32 ibmappnLocalTgModemClass;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.8"), read, description("Indicates whether the CP-CP Sessions are\n             supported on this TG."), status("mandatory")] string ibmappnLocalTgCpCpSession;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.3"), read, description("Indicates whether the destination node is\n             a Virtual node."), status("mandatory")] string ibmappnLocalTgDestVirtual;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.7"), read, description("Indicates whether the Transmission Group\n             is operational."), status("mandatory")] string ibmappnLocalTgOperational;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.2"), read, description("Number associated with this transmission group."), status("mandatory"), key, key_order(2)] sint32 ibmappnLocalTgNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.5"), read, description("The resource sequence number is assigned and\n              controlled by the network node that owns this\n\n\n\n\n\n              resource.  This is always an even unsigned\n              number unless an error has occurred."), status("mandatory")] sint32 ibmappnLocalTgRsn;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.15"), read, description("Value of the first user-defined TG\n            characteristic for this TG.\n            Range is 0-255."), status("mandatory")] sint32 ibmappnLocalTgUsr1;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.16"), read, description("Value of the second user-defined TG\n            characteristic for this TG.\n            Range is 0-255."), status("mandatory")] sint32 ibmappnLocalTgUsr2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.17"), read, description("Value of the third user-defined TG\n            characteristic for this TG.\n            Range is 0-255."), status("mandatory")] sint32 ibmappnLocalTgUsr3;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.1"), read, description("Administratively-assigned name for the\n             destination node for this TG.\n             This is the fully-qualified network node\n             name."), status("mandatory"), key, key_order(1)] string ibmappnLocalTgDest;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.13"), read, description("Relative amount of time that it takes for a signal to\n              travel the length of the logical link.  This time is\n              represented in micro seconds, with some of the more\n              common values enumerated."), status("mandatory")] string ibmappnLocalTgDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.3.1.1.9"), read, description("The effective capacity is an integer value that indicates\n             the actual kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776."), status("mandatory")] sint32 ibmappnLocalTgEffCap;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.3.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnLocalNnSpecific : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.8"), read, description("Indicates whether the node is a central directory."), status("mandatory")] string ibmappnLocalNnCentralDirectory;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.7"), read, description("Indicates whether the node is a gateway."), status("mandatory")] string ibmappnLocalNnGateway;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.3"), read, description("Indicates whether this node is congested.\n\n\n\n\n\n              Other network nodes stop routing traffic to\n              this node while this flag is on."), status("mandatory")] string ibmappnLocalNnCongested;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.6"), read, description("Indicates whether the node is quiescing."), status("mandatory")] string ibmappnLocalNnQuiescing;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.4"), read, description("Indicate whether intermediated session\n              routing resources are depleted.\n              Other network nodes stop routing traffic through\n              this node while this flag is on."), status("mandatory")] string ibmappnLocalNnIsrDepleted;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.10"), read, description("Indicates whether the node supports chaining."), status("mandatory")] string ibmappnLocalNnChainSupport;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.9"), read, description("Indicates whether the node supports intermediate\n              session routing."), status("mandatory")] string ibmappnLocalNnIsr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.1"), read, description("Resource sequence number is assigned and\n              controlled by the network node that owns this\n              resource.  This is always an even unsigned\n              number unless an error has occurred."), status("mandatory")] sint32 ibmappnLocalNnRsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.5"), read, description("Indicates whether session endpoint resources\n              are depleted."), status("mandatory")] string ibmappnLocalNnEndptDepleted;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.11"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This object\n             is the last FRSN sent in a topology update to\n             adjacent network nodes."), status("mandatory")] sint32 ibmappnLocalNnFrsn;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.3.1.2.2"), read, description("Route addition resistance\n            indicates the relative desirability\n            of using this node for intermediate session traffic.\n            The value, which can be any integer 0-255,\n            is used in route computation.  The lower the value,\n            the more desirable the node is for intermediate routing."), status("mandatory")] sint32 ibmappnLocalNnRouteAddResist;
};
[description("Ls Table (DLS specific).\nThe DLS Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodeLsDlsTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.1"), read, description("Administratively-assigned name for this link station.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodeLsDlsName;
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),pendactive(2),active(3),pendinact(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.2"), read, description("State of this link station."), status("mandatory")] string ibmappnNodeLsDlsState;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.3"), read, description("Local MAC address."), status("mandatory")] string ibmappnNodeLsLocalDlsMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.4"), read, description("Local SAP address."), status("mandatory")] string ibmappnNodeLsLocalDlsSap;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.5"), read, description("Remote MAC address."), status("mandatory")] string ibmappnNodeLsRemoteDlsMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.3.1.6"), read, description("Remote SAP address."), status("mandatory")] string ibmappnNodeLsRemoteDlsSap;
};
[description("Ls Table (Token Ring specific).\nThe TR Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodeLsTrTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),pendactive(2),active(3),pendinact(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.2"), read, description("State of this link station."), status("mandatory")] string ibmappnNodeLsTrState;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.3"), read, description("Local MAC address."), status("mandatory")] string ibmappnNodeLsLocalTrMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.4"), read, description("Local SAP address."), status("mandatory")] string ibmappnNodeLsLocalTrSap;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.5"), read, description("Remote MAC address."), status("mandatory")] string ibmappnNodeLsRemoteTrMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.6"), read, description("Remote SAP address."), status("mandatory")] string ibmappnNodeLsRemoteTrSap;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.4.1.1"), read, description("Administratively-assigned name for this link station.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodeLsTrName;
};
[description("This table contains detail information about the\n              link station configuration and current status.\nThis table is indexed by the link station name."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodeLsTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),sdlc(2),dls(3),socket(4),ethernet(5),tokenRing(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.3"), read, description("The type of DLC interface, distinguished according\n                    to the protocol immediately 'below' this layer."), status("mandatory")] string ibmappnNodeLsDlcType;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.4"), read, description("Identifies whether this resource is a dynamic link station.\n            Dynamic link stations are created when adjacent nodes\n            that have not been locally defined establish a connection\n            with this node."), status("mandatory")] string ibmappnNodeLsDynamic;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.13"), read, description("Numeric value between 0 and 32767 inclusive indicating\n              the desired pacing window size for BINDs on this TG.\n              The number is significant only when fixed bind pacing\n              is being performed."), status("mandatory")] sint32 ibmappnNodeLsTargetPacingCount;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.34"), read, description("The shortest time it took for a test signal\n              to be sent and returned from this link station to the\n              adjacent links station.\n              This time is represented in milliseconds."), status("mandatory")] sint32 ibmappnNodeLsMinDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.33"), read, description("The longest time it took for a test signal\n              to be sent and returned from this link station to the\n              adjacent links station.\n              This time is represented in milliseconds ."), status("mandatory")] sint32 ibmappnNodeLsMaxDelay;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), fixed_length(3), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.10"), read, description("The block number is the first three digits of the node_id.\n            These 3 hexideimal digits identify the product and are not\n            configurable."), status("mandatory")] string ibmappnNodeLsBlockNum;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.36"), read, description("The total number of successful XIDs that have occurred\n               on this link station since the time it was started."), status("mandatory")] uint32 ibmappnNodeLsGoodXids;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.38"), read, description("Identifies the DLC specific OBJECT IDENTIFIER\n              that can provide additional information."), status("mandatory")] string ibmappnNodeLsSpecific;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.2"), read, description("Administratively-assigned name for the port.\n             The name can be from one to eight characters."), status("mandatory")] string ibmappnNodeLsPortName;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.31"), read, description("Number of responses returned from adjacent link station.\n              A response should be returned for each test frame sent by\n              this node.\n              Test frames are sent to adjacent nodes periodically to\n              verify connectivity and to measure that actual round trip\n              time, that is the time the test frame is sent until the\n              response is received."), status("mandatory")] uint32 ibmappnNodeLsEchoRsps;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.16"), read, description("Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255, which indicates maximum cost.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsConnCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),sentReqOpnstn(2),pendXidExch(3),sentActAs(4),sentSetMode(5),active(6),sentDeactAsOrd(7),sentDiscOrd(8),sentDestroyTg(9),sentCreateTg(10),sentConnReq(11),pendRcvConnInd(12),pendSendConnRsp(13),sentConnRsp(14),pendDeact(15)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.39"), read, description("State of this link station."), status("mandatory")] string ibmappnNodeLsSubState;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.17"), read, description("Relative cost of transmitting a byte over this link.\n             Range is from 0 (lowest cost) to 255.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsByteCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.18"), read, description("The security is represented as an integer with a range of\n             1 thru 255 with the most common values enumerated as\n             defined above.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] string ibmappnNodeLsSecurity;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.40"), read, description("The time (in hundredth of seconds) this link station\n              has been active the last time since the time APPN was\n              initialized."), status("mandatory")] uint32 ibmappnNodeLsStartTime;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.9"), read, description("Indicates whether this link station will be used\n              for connections to down-level or migration partners."), status("mandatory")] string ibmappnNodeLsMigration;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.23"), read, description("Number of XID bytes received."), status("mandatory")] uint32 ibmappnNodeLsInXidBytes;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.24"), read, description("Number of message (I-frame) bytes received."), status("mandatory")] uint32 ibmappnNodeLsInMsgBytes;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.41"), read, description("The time (in hundredth of seconds) this link station\n              has been in the active state.\n              A zero value indicates the link station has never been\n              active."), status("mandatory")] uint32 ibmappnNodeLsActiveTime;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.25"), read, description("Number of XID frames received."), status("mandatory")] uint32 ibmappnNodeLsInXidFrames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.26"), read, description("Number of message (I-frame) frames received."), status("mandatory")] uint32 ibmappnNodeLsInMsgFrames;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.12"), read, description("Indicates whether CP-CP sessions are\n            supported by this link station."), status("mandatory")] string ibmappnNodeLsCpCpSession;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.27"), read, description("Number of XID bytes sent."), status("mandatory")] uint32 ibmappnNodeLsOutXidBytes;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.28"), read, description("Number of message (I-frame) bytes sent."), status("mandatory")] uint32 ibmappnNodeLsOutMsgBytes;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.8"), read, description("Indicates whether the link station is\n             a limited resource.  If it is, the TG\n             is deactivated when there are no sessions."), status("mandatory")] string ibmappnNodeLsLimResource;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.35"), read, description("The time (since system up in hundredth of seconds)\n              when the longest delay occurred.\n              This time can be used to identify when this high\n              water mark occurred in relation to the last initialization\n              of the APPN node."), status("mandatory")] uint32 ibmappnNodeLsMaxDelayTime;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.29"), read, description("Number of XID frames sent."), status("mandatory")] uint32 ibmappnNodeLsOutXidFrames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.30"), read, description("Number of message (I-frame) frames sent."), status("mandatory")] uint32 ibmappnNodeLsOutMsgFrames;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.32"), read, description("The time that it took for the last test signal to be\n              sent and returned from this link station to the\n              adjacent links station.\n              This time is represented in milliseconds."), status("mandatory")] sint32 ibmappnNodeLsCurrentDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.20"), read, description("First user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsUsr1;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.21"), read, description("Second user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsUsr2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.22"), read, description("Third user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsUsr3;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.1"), read, description("Administratively-assigned name for the link station.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodeLsName;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.14"), read, description("Numeric value between 0 and 32767 inclusive indicating\n              the desired number of bytes in a Basic Transmission Unit\n              (BTU) that can be sent on this TG.\n              This is an administratively assigned value."), status("mandatory")] sint32 ibmappnNodeLsMaxSendBtuSize;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), fixed_length(5), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.11"), read, description("The ID number is the last 5 digits of the node_id.\n            These 5 hexadecimal digits are administratively defined and\n            combined with the 3 digit block number form the node_id.\n            This node_id is used to identify the local node and is\n            include in APPN alerts as well as being included in XIDs.\n            A unique value is required for connections to SNA\n            sub-area."), status("mandatory")] string ibmappnNodeLsIdNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.7"), read, description("Number associated with the TG to this link station."), status("mandatory")] sint32 ibmappnNodeLsTgNum;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.19"), read, description("Relative amount of time that it takes for a signal to\n\n\n\n\n\n              travel the length of the logical link.  This time is\n              represented in micro seconds, with some of the more\n              common values enumerated.\n              This is an administratively assigned value associated\n              with the TG using this link station."), status("mandatory")] string ibmappnNodeLsDelay;
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),pendactive(2),active(3),pendinact(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.5"), read, write, description("State of this link station."), status("mandatory")] string ibmappnNodeLsState;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.15"), read, description("The effective capacity is an integer value that indicates\n             the kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776.\n             This is an administratively assigned value associated\n             with the TG using this link station."), status("mandatory")] sint32 ibmappnNodeLsEffCap;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.6"), read, description("Fully-qualified name of the adjacent node for this link\n             station.  The name can be from three to seventeen\n             characters.  Format is netid.cpname."), status("mandatory")] string ibmappnNodeLsCpName;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.42"), read, description("The time (in hundredth of seconds) the link station is\n              in the current state."), status("mandatory")] uint32 ibmappnNodeLsCurrentStateTime;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.1.1.37"), read, description("The total number of unsuccessful XIDs that have occurred\n               on this link station since the time it was started."), status("mandatory")] uint32 ibmappnNodeLsBadXids;
};
[description("Link station table (TCP/IP specific).\nThe IP Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodeLsIpTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),pendactive(2),active(3),pendinact(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.2"), read, description("State of this link station."), status("mandatory")] string ibmappnNodeLsIpState;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.3"), read, description("Local IP address."), status("mandatory")] string ibmappnNodeLsLocalIpAddr;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.5"), read, description("Remote IP address."), status("mandatory")] string ibmappnNodeLsRemoteIpAddr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.4"), read, description("Local TCP/IP port number.\n              The default listening port will be administratively\n              assigned and will dynamically change if this node\n              initiates a session with adjacent node."), status("mandatory")] sint32 ibmappnNodeLsLocalIpPortNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.6"), read, description("Remote TCP/IP port number."), status("mandatory")] sint32 ibmappnNodeLsRemoteIpPortNum;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.2.1.1"), read, description("Administratively-assigned name for this link station. The\n             name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodeLsIpName;
};
[description("This table contains information related to exceptional\n              and potential exceptional conditions that occur during\n              the activation, XID exchange, and termination of the\n              connection.\nThis table is indexed by the LsStatusIndex, which is an\n              integer that is continuously updated until it eventually\n              wraps.  This provides the management station the ability\n              to retrieve only the updates to the table by using the\n              standard GET NEXT."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodeLsStatusTable : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.7"), read, description("The error sense code associated with the start sequence of\n             activation of a link up to the beginning of the XID\n             sequence."), status("mandatory")] string ibmappnNodeLsStatusGeneralSense;
	[textual_convention("EnumeratedINTEGER"), enumeration("na(8)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.13"), read, description("This identifies the actual bit within the error byte of the\n             XID.  This only has meaning when the byte in error is\n             greater than zero."), status("mandatory")] string ibmappnNodeLsStatusXidBitInError;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.10"), read, description("The error sense code associated with the rejection of the\n\n\n\n\n\n             XID."), status("mandatory")] string ibmappnNodeLsStatusXidLocalSense;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.2"), read, description("Time (in hundreds of a second) since this node was last\n             initialized."), status("mandatory")] uint32 ibmappnNodeLsStatusTime;
	[textual_convention("EnumeratedINTEGER"), enumeration("na(1000)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.12"), read, description("This identifies the actual byte in the XID that caused the\n             error.  The value of zero (0) indicates that the variable\n             has no meaning."), status("mandatory")] string ibmappnNodeLsStatusXidByteInError;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.11"), read, description("The error sense code adjacent node returned to this node\n             indicating the reason the XID was rejected."), status("mandatory")] string ibmappnNodeLsStatusXidRemoteSense;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..256"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.6"), read, description("Number associated with the TG to this link station\n             with a range from 0 to 256.  A value of 256 indicates\n\n\n\n\n\n             the tg number has not been negotiated and is unknown at\n             this time."), status("mandatory")] sint32 ibmappnNodeLsStatusTgNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.1"), read, description("This index is continuous index this table."), status("mandatory"), key, key_order(1)] sint32 ibmappnNodeLsStatusIndex;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.5"), read, description("Adjacent Node id"), status("mandatory")] string ibmappnNodeLsStatusNodeId;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.4"), read, description("Administratively-assigned fully-qualified name of the\n             adjacent node partner.  This will be provided when the\n             adjacent node has been defined at this node or when the\n             XID sequence has proceeded far enough to to identify the\n             adjacent node.  A blank CP name will indicate the name is\n             unknown."), status("mandatory")] string ibmappnNodeLsStatusCpName;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.3"), read, description("Administratively-assigned name for this link station."), status("mandatory")] string ibmappnNodeLsStatusLsName;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),sdlc(2),dls(3),socket(4),ethernet(5),tr(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.14"), read, description("This identifies DLC type that was being used when error\n             occurred.  This also is used to the format of the\n             local and remote address provided.\n\n             other    = free form DisplayString\n\n             ip       = ld. ld. ld. ld / 2d\n\n             tr       = lx: lx: lx: lx: lx: lx . lx\n\n             dlsw     = lx: lx: lx: lx: lx: lx . lx\n\n             ethernet = lx: lx: lx: lx: lx: lx . lx\n\n             "), status("mandatory")] string ibmappnNodeLsStatusDlcType;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.9"), read, description("The sense code associated with the termination of the link\n             connection to adjacent node.  This includes all sense\n             information included in the disconnect recieved from the\n             lower layer DLCs and also sense information indicating the\n             link termination originated by upper layer APPN components."), status("mandatory")] string ibmappnNodeLsStatusEndSense;
	[textual_convention("EnumeratedINTEGER"), enumeration("retry(1),noretry(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.8"), read, description("Indicates whether Node Operator Facility will retry the\n            start request to activate the link."), status("mandatory")] string ibmappnNodeLsStatusNofRetry;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.15"), read, description("This contains a displayable string that identifies the\n             DLC type and appropriate address.  See DlcType above for\n             details of the format."), status("mandatory")] string ibmappnNodeLsStatusLocalAddr;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.5.5.1.16"), read, description("This contains a displayable string that identifies the\n             DLC type and appropriate address.  See DlcType above for\n             details of the format."), status("mandatory")] string ibmappnNodeLsStatusRemoteAddr;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnGeneralInfoAndCaps : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.9"), read, description("Indicates whether this node supports Bind segment\n              reassembly.  This will only be supported when Bind\n              segment generation is also supported."), status("mandatory")] string ibmappnNodeBindReasm;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.10"), read, description("Indicates whether this node supports parallel TGs."), status("mandatory")] string ibmappnNodeParallelTg;
	[textual_convention("EnumeratedINTEGER"), enumeration("networkNode(1),endNode(2),len(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.5"), read, description("Type of APPN node, either network, len, or end node."), status("mandatory")] string ibmappnNodeType;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), fixed_length(5), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.4"), read, description("The ID number is the last 5 digits of the node_id.\n            These 5 hexadecimal digits are administratively defined and\n            combined with the 3 digit block number form the node_id.\n            This node_id is used to identify the local node and is\n            include in APPN alerts as well as being included in XIDs.\n            A unique value is required for connections to SNA\n\n\n\n\n\n            sub-area."), status("mandatory")] string ibmappnNodeIdNum;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.2"), read, description("Administratively-assigned APPN network identification,\n             which can be from one to eight characters.\n             This ID is used with the control point name\n             to create a fully-qualified control point name."), status("mandatory")] string ibmappnNodeNetid;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.1"), read, description("Administratively-assigned network name\n            for this node in the format NETID.CPNAME."), status("mandatory")] string ibmappnNodeCpName;
	[textual_convention("TimeTicks"), encoding("TimeTicks"), object_syntax("TimeTicks"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.6"), read, description("Time (in hundredths of a second) since this APPN node\n             was initialized."), status("mandatory")] uint32 ibmappnNodeUpTime;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.7"), read, description("Indicates whether this node supports negotiable\n              link stations."), status("mandatory")] string ibmappnNodeNegotLs;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.11"), read, description("Indicates whether this node allows call-in from nodes not\n              defined locally."), status("mandatory")] string ibmappnNodeService;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.12"), read, description("Indicates whether this node supports adaptive bind pacing."), status("mandatory")] string ibmappnNodeAdaptiveBindPacing;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.8"), read, description("Indicates whether this node supports segment\n              reassembly.  This is only supported when\n              segment generation is also supported."), status("mandatory")] string ibmappnNodeSegReasm;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), fixed_length(3), object_identifier("1.3.6.1.4.1.2.6.2.13.1.1.3"), read, description("The block number is the first three digits of the node_id.\n            These 3 hexadecimal digits identify the product and are not\n            configurable."), status("mandatory")] string ibmappnNodeBlockNum;
};
[description("The Port table describes the configuration and current\n              status of the ports used by APPN.  The type of DLC is\n              included in this table as a pointer to the DLC port\n              specific tables.\nThe Port Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodePortTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.5"), read, description("Indicates whether Set Initialization Mode (SIM) and\n              Receive Initialization Mode (RIM) are supported."), status("mandatory")] string ibmappnNodePortSIMRIM;
	[textual_convention("EnumeratedINTEGER"), enumeration("inactive(1),pendactive(2),active(3),pendinact(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.2"), read, write, description("Indicates the current state of this port."), status("mandatory")] string ibmappnNodePortState;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.8"), read, description("Maximum number of I-frames that can be received\n             by the XID sender before an acknowledgement is received."), status("mandatory")] sint32 ibmappnNodePortMaxIframeWindow;
	[textual_convention("EnumeratedINTEGER"), enumeration("primary(1),secondary(2),negotiable(3),abm(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.6"), read, description("Initial role for LSs activated through this port,\n             where 'abm' indicates asynchronous balance mode."), status("mandatory")] string ibmappnNodePortLsRole;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),sdlc(2),dls(3),socket(4),ethernet(5),tokenRing(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.3"), read, description("The type of DLC interface, distinguished according\n                    to the protocol immediately 'below' this layer."), status("mandatory")] string ibmappnNodePortDlcType;
	[textual_convention("OBJECTIDENTIFIER"), encoding("OBJECTIDENTIFIER"), object_syntax("OBJECTIDENTIFIER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.13"), read, description("Identifies the port specific OBJECT IDENTIFIER\n              that can provide additional information."), status("mandatory")] string ibmappnNodePortSpecific;
	[textual_convention("EnumeratedINTEGER"), enumeration("leased(1),switched(2),sharedAccessFacilities(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.4"), read, description("Identifies the type of line used by this port."), status("mandatory")] string ibmappnNodePortPortType;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.10"), read, description("The total number of unsuccessfull XIDs that have occurred\n               on all defined link stations on this port since the last\n               time this port was started."), status("mandatory")] uint32 ibmappnNodePortDefLsBadXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.12"), read, description("The total number of unsuccessfull XIDs that have occurred\n               on all dynamic link stations on this port since the last\n               time this port was started."), status("mandatory")] uint32 ibmappnNodePortDynLsBadXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.9"), read, description("The total number of successfull XIDs that have occurred\n               on all defined link stations on this port since the last\n               time this port was started."), status("mandatory")] uint32 ibmappnNodePortDefLsGoodXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.11"), read, description("The total number of successfull XIDs that have occurred\n               on all dynamic link stations on this port since the last\n               time this port was started."), status("mandatory")] uint32 ibmappnNodePortDynLsGoodXids;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.7"), read, description("Maximum Basic Transmission Size (BTU) that a\n             link station on this port can receive."), status("mandatory")] sint32 ibmappnNodePortMaxRcvBtuSize;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.1.1.1"), read, description("Administratively-assigned name for this APPN port.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodePortName;
};
[description("Port table (Token Ring specific).\nThe TR Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodePortTrTable : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.4.1.2"), read, description("Local Token Ring MAC address."), status("mandatory")] string ibmappnNodePortTrMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.4.1.3"), read, description("Local Token Ring Sap address."), status("mandatory")] string ibmappnNodePortTrSap;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.4.1.1"), read, description("Administratively-assigned name for this APPN port.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodePortTrName;
};
[description("Port table generic DLC trace table.\nThe Port name and a dynamic integer are the index to\n             this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodePortDlcTraceTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.1"), read, description("The Port name associated with this this trace table entry."), status("mandatory"), key, key_order(1)] string ibmappnNodePortDlcTracPortName;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.4"), read, description("Local address in format described below:\n\n             other    = free form DisplayString\n             ip       = ld. ld. ld. ld / 2d\n             tr       = lx: lx: lx: lx: lx: lx . lx\n             dlsw     = lx: lx: lx: lx: lx: lx . lx\n             ethernet = lx: lx: lx: lx: lx: lx . lx\n             "), status("mandatory")] string ibmappnNodePortDlcTracLocalAddr;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.5"), read, description("Remote Address in the format described below:\n             other    = free form DisplayString\n             ip       = ld. ld. ld. ld / 2d\n             tr       = lx: lx: lx: lx: lx: lx . lx\n             dlsw     = lx: lx: lx: lx: lx: lx . lx\n\n\n\n\n\n             ethernet = lx: lx: lx: lx: lx: lx . lx\n             "), status("mandatory")] string ibmappnNodePortDlcTracRemoteAddr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.2"), read, description("This index value is updated every time a new trace entry\n               is created which provides a means to retrieve only the\n               updated entries and also provides a simple method of\n               correlating the entries.  The table will wrap when the\n               table is full, which will result in previous entries\n               being written over.  The mangement station can over\n               come this by retrieving the table using this index to\n\n\n\n\n\n               retrieve only the new table entries."), status("mandatory"), key, key_order(2)] sint32 ibmappnNodePortDlcTracIndex;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),notApplicable(2),useUnknown(3),useWan(4),useLan(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.8"), read, description("Indicates the type of connection of the trace entry.\n              For example, token ring and ethernet ports will have\n              useLan as connection.  For the dls port, it could be\n              either useWan if connection is across Wan via dls\n              sessions, or useLan if connection is to a local attached\n              LAN."), status("mandatory")] string ibmappnNodePortDlcTracUseWan;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),sdlc(2),dls(3),socket(4),ethernet(5),tokenRing(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.3"), read, description("The type of DLC interface, distinguished according\n                    to the protocol immediately 'below' this layer."), status("mandatory")] string ibmappnNodePortDlcTracDlcType;
	[textual_convention("EnumeratedINTEGER"), enumeration("testFrame(1),respFrame(2),curFrame(3),icrFrame(4),respAck(5),dgrmFrame(6),xidFrame(7),contFrame(8),contedFrame(9),iFrame(10),enterBusy(12),exitBusy(13),haltFrame(14),lsHalted(15),restartLs(16),lsRestarted(17),netBioSnq(18),netBioSnr(19),gnetFrame(20),netdFrame(21),oobFrame(22),alterSap(23),testRsp(24),haltLsNow(25),testReq(26),ipTestFrame(2001),ipRespFrame(2002),ipCurFrame(2003),ipIcrFrame(2004),ipRespAck(2005),ipDgrmFrame(2006),ipXidFrame(2007),ipContFrame(2008),ipContedFrame(2009),ipIFrame(2010),ipEnterBusy(2012),ipExitBusy(2013),ipHaltFrame(2014),ipLsHalted(2015),ipRestartLs(2016),ipLsRestarted(2017),ipNetBioSnq(2018),ipNetBioSnr(2019),ipGnetFrame(2020),ipNetdFrame(2021),ipOobFrame(2022),ipAlterSap(2023),ipTestRsp(2024),ipHaltLsNow(2025),ipTestReq(2026),dlsIpm(4124),trTestFrame(6001),trRespFrame(6002),trCurFrame(6003),trIcrFrame(6004),trRespAck(6005),trDgrmFrame(6006),trXidFrame(6007),trContFrame(6008),trContedFrame(6009),trIFrame(6010),trEnterBusy(6012),trExitBusy(6013),trHaltFrame(6014),trLsHalted(6015),trRestartLs(6016),trLsRestarted(6017),trNetBioSnq(6018),trNetBioSnr(6019),trGnetFrame(6020),trNetdFrame(6021),trOobFrame(6022),trAlterSap(6023),trTestRsp(6024),trHaltLsNow(6025),trTestReq(6026)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.7"), read, description("Indicates the command type of the trace entry."), status("mandatory")] string ibmappnNodePortDlcTracCmdType;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),unknown(2),request(3),confirm(4),indication(5),response(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.5.1.6"), read, description("Indicates the type of trace record entry"), status("mandatory")] string ibmappnNodePortDlcTracMsgType;
};
[description("Port table (DLS specific).\nThe DLS Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodePortDlsTable : SnmpObjectType
{
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(6), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.3.1.2"), read, description("Local DLS MAC address."), status("mandatory")] string ibmappnNodePortDlsMac;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), fixed_length(1), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.3.1.3"), read, description("Local DLS Sap address."), status("mandatory")] string ibmappnNodePortDlsSap;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.3.1.1"), read, description("Administratively-assigned name for this APPN DLS port.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodePortDlsName;
};
[description("Port table (TCP/IP specific).\nThe IP Name is used as the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNodePortIpTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.2.1.1"), read, description("Administratively-assigned name for this APPN port.\n             The name can be from one to eight characters."), status("mandatory"), key, key_order(1)] string ibmappnNodePortIpName;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.4.2.1.2"), read, description("Local TCP/IP port number."), status("mandatory")] sint32 ibmappnNodePortIpPortNum;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnSnmpInformation : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.6"), read, description("Total number of VARIBLES included in all\n             GET requests to the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpInGetVars;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.8"), read, description("Total number of VARIBLES included in all\n              SET requests to the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpInSetVars;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.3"), read, description("Total number of GETNEXT requests delivered to the APPN SNMP\n             sub-agent."), status("mandatory")] uint32 ibmappnSnmpInGetNexts;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.10"), read, description("Total number of undefined errors that\n\n\n\n\n\n              occurred processing SNMP request to the\n              APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpOutGenErrs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.5"), read, description("Total number of VARIABLES included in both\n             GET and GETNEXT requests to the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpInTotalVars;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.7"), read, description("Total number of VARIABLES included in all\n             GETNEXT requests to the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpInGetNextVars;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.2"), read, description("Total number of GET requests delivered to the APPN SNMP\n             sub-agent."), status("mandatory")] uint32 ibmappnSnmpInGetRequests;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.4"), read, description("Total number of SET requests delivered to the APPN SNMP\n             sub-agent."), status("mandatory")] uint32 ibmappnSnmpInSetRequests;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.9"), read, description("Total number of VARIABLES that could not\n              be found by the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpOutNoSuchNames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.6.1"), read, description("Total number of messages delivered to the APPN SNMP sub-agent."), status("mandatory")] uint32 ibmappnSnmpInPkts;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnUniqueInfoAndCaps : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.2"), read, description("Indicates whether this is a gateway node."), status("mandatory")] string ibmappnNodeNnGateway;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.4"), read, description("Indicates whether this node supports route tree cache."), status("mandatory")] string ibmappnNodeNnTreeCache;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.1"), read, description("Indicates whether this node supports receiving registered\n              characteristics."), status("mandatory")] string ibmappnNodeNnRcvRegChar;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.5"), read, description("Indicates whether this node supports\n              incremental_tree_update, which is only\n              supported when tree caching is supported."), status("mandatory")] string ibmappnNodeNnTreeUpdate;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.7"), read, description("Indicates whether the node supports intermediate\n              session routing."), status("mandatory")] string ibmappnNodeNnIsr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.8"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This object\n             is the last FRSN sent in a topology update to\n             adjacent network nodes."), status("mandatory")] sint32 ibmappnNodeNnFrsn;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.6"), read, description("Route addition resistance is a value that\n            indicates the relative desirability\n            of using this node for intermediate session traffic.\n            The value, which can be any integer 0-255,\n            is used in route computation.  The lower the value,\n            the more desirable the node is for intermediate routing."), status("mandatory")] sint32 ibmappnNodeNnRouteAddResist;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.2.3"), read, description("Indicates whether this node supports central directory\n              cache."), status("mandatory")] string ibmappnNodeNnCentralDirectory;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.8"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnXidInformation : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.8.2"), read, description("The current number of unsuccessfull XIDs that have\n               occurred on all defined link stations since the last\n               time this node was initialized."), status("mandatory")] uint32 ibmappnNodeDefLsBadXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.8.4"), read, description("The current number of unsuccessfull XIDs that have\n               occurred on all dynamic link stations since the last\n               time this node was initialized."), status("mandatory")] uint32 ibmappnNodeDynLsBadXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.8.1"), read, description("The current number of successfull XIDs that have occurred\n               on all defined link stations since the last time this\n               node was initialized."), status("mandatory")] uint32 ibmappnNodeDefLsGoodXids;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.8.3"), read, description("The current number of successfull XIDs that have\n               occurred on all dynamic link stations since the last\n               time this node was initialized."), status("mandatory")] uint32 ibmappnNodeDynLsGoodXids;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnEnUniqueCaps : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.3.2"), read, description("Indicates whether this end node supports\n              mode name to COS name mapping."), status("mandatory")] string ibmappnNodeEnModeCosMap;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.3.5"), read, description("Indicates whether this node supports\n              send register characteristics, which is only\n              supported when send registered names is also\n              supported."), status("mandatory")] string ibmappnNodeEnSendRegChar;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.3.4"), read, description("Indicates whether the node will register its LUs with the\n              adjacent serving network node:\n\n                NO  - do not register names\n                YES - register names"), status("mandatory")] string ibmappnNodeEnSendRegNames;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.3.3"), read, description("Indicates whether this end node supports Locate Cdinit."), status("mandatory")] string ibmappnNodeEnLocateCdinit;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.3.1"), read, description("Indicates whether this end node supports segment generation."), status("mandatory")] string ibmappnNodeEnSegGen;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.1.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnMemoryUse : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.7.4"), read, description("Allocation threshold beyond which storage\n              management considers the storage resources\n              to be critically constrained."), status("mandatory")] sint32 ibmappnMemoryCritThresh;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.7.3"), read, description("Allocation threshold beyond which storage\n              management considers the storage resources\n              to be constrained."), status("mandatory")] sint32 ibmappnMemoryWarnThresh;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.7.2"), read, description("Number of bytes in the segment that are currently\n              allocated to process."), status("mandatory")] sint32 ibmappnMemoryUsed;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.1.7.1"), read, description("Size of the shared storage segment, as obtained\n              by storage management from the underlying operating\n              system."), status("mandatory")] sint32 ibmappnMemorySize;
};
[description("Table containing an entry for every node.  The information\n              kept in this table is the last FRSN sent and received,\n              the status of the CP-CP sessions, and a gauge that\n              indicates the number of outstanding TDUs.\nThe adjacent node name is the index for this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnAdjNodeTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("active(1),conLoserActive(2),conWinnerActive(3),inactive(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.2.1.2"), read, description("Indicates the state of CP-CP sessions between this node\n             and adjacent network and end nodes.  Incative indicates no\n             CP-CP sessions exists between this node and the adjacent\n             node.  Active indicates CP-CP sessons are active using both\n             the ConWinner and ConLoser sessions. The session initiated\n             by this node is refered to as the ConWinner session and is\n             used by this node to send to the adjacent node.  The\n             ConLoserr session is initiated by the adjacent node and\n             is used by this node to receive from the adjacent node."), status("mandatory")] string ibmappnNnAdjNodeCpCpSessStatus;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.2.1.1"), read, description("An administratively-assigned fully-qualified\n              name of this node's adjacent network node."), status("mandatory"), key, key_order(1)] string ibmappnNnAdjNodeAdjName;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.2.1.3"), read, description("Number of out of sequence Topology Database\n             Updates (TDUs).  In a quiesced state, this value is\n             zero.  In normal operation, the value varies\n             depending on the network environment."), status("mandatory")] uint32 ibmappnNnAdjNodeOutOfSeqTdus;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.2.1.5"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This FRSN\n             indicates the last TDU received from this adjacent node."), status("mandatory")] sint32 ibmappnNnAdjNodeLastFrsnRcvd;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.2.1.4"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This FRSN\n             indicates the last TDU sent to this adjacent node."), status("mandatory")] sint32 ibmappnNnAdjNodeLastFrsnSent;
};
[description("Portion of the APPN routing table\n              that describes all of the APPN network nodes\n              and virtual nodes known to this node.\nThe fully-qualified node name is used to\n              index this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTopologyTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.11"), read, description("Indicates whether the node provide gateway functions."), status("mandatory")] string ibmappnNnNodeGateway;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.7"), read, description("Indicates whether this node is congested.\n             This node is not be included in route selection\n             by other nodes when this congestion exists."), status("mandatory")] string ibmappnNnNodeCongested;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.10"), read, description("Indicates whether the node is quiescing.\n             This node is not included in route selection\n             by other nodes when the node is quiescing."), status("mandatory")] string ibmappnNnNodeQuiescing;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.8"), read, description("Indicates whether intermediate session\n             routing resources are depleted.  This node is\n             not included in intermediate route selection\n             by other nodes when resources are depleted."), status("mandatory")] string ibmappnNnNodeIsrDepleted;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.14"), read, description("Indicates whether the node supports chaining."), status("mandatory")] string ibmappnNnNodeChainSupport;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.13"), read, description("Indicates whether the node supports intermediate session\n              routing (ISR)."), status("mandatory")] string ibmappnNnNodeIsr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.5"), read, description("Resource sequence number that is assigned and\n              controlled by the network node that owns this\n              resource. This is always an even 32-bit number\n              unless an error has occurred."), status("mandatory")] sint32 ibmappnNnNodeRsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.9"), read, description("Indicates whether session endpoint resources are depleted."), status("mandatory")] string ibmappnNnNodeEndptDepleted;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.3"), read, description("Number of days before deletion of this\n              network node entry. Range is 0-31."), status("mandatory")] sint32 ibmappnNnNodeEntryTimeLeft;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.1"), read, description("Administratively-assigned network name that is locally\n            defined at each network node in the format NETID.CPNAME."), status("mandatory"), key, key_order(1)] string ibmappnNnNodeName;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.2"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This FRSN\n             indicates the last time this resource was updated at\n\n\n\n\n\n             this node."), status("mandatory")] sint32 ibmappnNnNodeFrsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("networknode(1),virtualnode(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.4"), read, description("Type of APPN node."), status("mandatory")] string ibmappnNnNodeType;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.6"), read, description("Route addition resistance\n            indicates the relative desirability\n            of using this node for intermediate session traffic.\n            The value, which can be any integer 0-255,\n            is used in route computation.  The lower the value,\n\n\n\n\n\n            the more desirable the node is for intermediate routing."), status("mandatory")] sint32 ibmappnNnNodeRouteAddResist;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.1.1.12"), read, description("Indicates whether the node is central directory."), status("mandatory")] string ibmappnNnNodeCentralDirectory;
};
[description("Portion of the APPN topology database\n             that describes all of the APPN transmissions groups\n             used by the APPN network nodes.\nThis table requires three indexes to provide a\n              unique index.  The indexes are the owning or originating\n              CPname, the destination CPname, and the TG number."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTgTopologyTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.10"), read, description("Indicates whether the transmission group\n             is quiescing."), status("mandatory")] string ibmappnNnTgQuiescing;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.17"), read, description("This is used to have multiple images for a\n              connection network.  For a connection network\n             it is the same as in the TG vector; for\n             a non-connection network it is X'00'."), status("mandatory")] sint32 ibmappnNnTgModemClass;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.11"), read, description("Indicates whether CP-CP sessions are supported on this TG."), status("mandatory")] string ibmappnNnTgCpCpSession;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.6"), read, description("Indicates whether the destination node is\n             a virtual node."), status("mandatory")] string ibmappnNnTgDestVirtual;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.9"), read, description("Indicates whether the transmission group\n\n\n\n\n\n             is operational."), status("mandatory")] string ibmappnNnTgOperational;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.3"), read, description("Number associated with this\n            transmission group. Range is 0-255."), status("mandatory"), key, key_order(3)] sint32 ibmappnNnTgNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.8"), read, description("Current owning node's resource sequence number\n              for this resource."), status("mandatory")] sint32 ibmappnNnTgRsn;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.5"), read, description("Number of days before deletion of this\n              network node TG entry. Range is 0-31."), status("mandatory")] sint32 ibmappnNnTgEntryTimeLeft;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.18"), read, description("First user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgUsr1;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.19"), read, description("Second user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgUsr2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.20"), read, description("Third user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgUsr3;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.2"), read, description("Administratively-assigned fully-qualified\n            network name for the destination node for this TG."), status("mandatory"), key, key_order(2)] string ibmappnNnTgDest;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.4"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n              with Topology Database Updates (TDUs) and are unique\n              only within each APPN network node.  A TDU can be\n              associated with multiple APPN resources.  This FRSN\n              indicates the last time this resource was updated at\n              this node."), status("mandatory")] sint32 ibmappnNnTgFrsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.16"), read, description("Relative amount of time that it takes for a signal to\n              travel the length of the logical link.  This time is\n              represented in micro seconds, with some of the more\n              common values enumerated.\n              This is an administratively assigned value associated\n              with this TG."), status("mandatory")] string ibmappnNnTgDelay;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.1"), read, description("Administratively-assigned name for the\n            originating node for this TG. The format\n            is NETID.CPNAME and is the same name\n            specified in the node table."), status("mandatory"), key, key_order(1)] string ibmappnNnTgOwner;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.12"), read, description("The effective capacity is an integer value that indicates\n             the kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgEffCap;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..9"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.7"), read, description("DLC specific data related to the link connection\n             network.\n             Token-Ring    - MAC/SAP\n             X.25 Switched - dial digits\n             X.21 Switched - dial digits\n             Circuit Swtch - dial digits"), status("mandatory")] string ibmappnNnTgDlcData;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.13"), read, description("Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255, which indicates maximum cost.\n             This is an administratively assigned value associated\n\n\n\n\n\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgConnCost;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.14"), read, description("Relative cost of transmitting a byte over this link.\n             Range is from 0 (lowest cost) to 255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgByteCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.2.1.15"), read, description("The security is represented as an integer with a range of\n             1 thru 255 with the most common values enumerated as\n             defined above.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] string ibmappnNnTgSecurity;
};
[description("Portion of the APPN topology database\n             that describes all of the APPN transmissions groups\n             used by the APPN network nodes.\nThis table is indexed by four columns:\n              FRSN, TG owner fully-qualified node name,\n              TG destination fully-qualified node name, and TG number."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTgTopologyFRTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.13"), read, description("Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255, which indicates maximum cost.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFRConnCost;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.14"), read, description("Relative cost of transmitting a byte over this link.\n             Range is from 0 (lowest cost) to 255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFRByteCost;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.15"), read, description("The security is represented as an integer with a range of\n             1 thru 255 with the most common values enumerated as\n             defined above.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] string ibmappnNnTgFRSecurity;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.10"), read, description("Indicates whether the transmission group\n             is quiescing."), status("mandatory")] string ibmappnNnTgFRQuiescing;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.17"), read, description("This is used to have multiple images for a\n\n\n\n\n\n              connection network.  For a connection network\n             it is the same as in the TG vector; for\n             a non-connection network it is X'00'."), status("mandatory")] sint32 ibmappnNnTgFRModemClass;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.11"), read, description("Indicates whether CP-CP sessions are supported on this TG."), status("mandatory")] string ibmappnNnTgFRCpCpSession;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.6"), read, description("Indicates whether the destination node is\n             a virtual node."), status("mandatory")] string ibmappnNnTgFRDestVirtual;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.9"), read, description("Indicates whether the transmission group\n             is operational."), status("mandatory")] string ibmappnNnTgFROperational;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.3"), read, description("Number associated with this\n            transmission group. Range is 0-255."), status("mandatory"), key, key_order(4)] sint32 ibmappnNnTgFRNum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.8"), read, description("Current owning node's resource sequence number\n              for this resource."), status("mandatory")] sint32 ibmappnNnTgFRRsn;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.5"), read, description("Number of days before deletion of this\n              network node TG entry. Range is 0-31."), status("mandatory")] sint32 ibmappnNnTgFREntryTimeLeft;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.18"), read, description("First user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFRUsr1;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.19"), read, description("Second user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFRUsr2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.20"), read, description("Third user-defined TG characteristic for this TG with\n             a range of 0-255.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFRUsr3;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.2"), read, description("Administratively-assigned fully-qualified\n            network name for the destination node for this TG."), status("mandatory"), key, key_order(3)] string ibmappnNnTgFRDest;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.4"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n              with Topology Database Updates (TDUs) and are unique\n              only within each APPN network node.  A TDU can be\n              associated with multiple APPN resources.  This FRSN\n              indicates the last time this resource was updated at\n              this node."), status("mandatory"), key, key_order(1)] sint32 ibmappnNnTgFRFrsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.16"), read, description("Relative amount of time that it takes for a signal to\n              travel the length of the logical link.  This time is\n              represented in micro seconds, with some of the more\n              common values enumerated.\n              This is an administratively assigned value associated\n              with this TG."), status("mandatory")] string ibmappnNnTgFRDelay;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.1"), read, description("Administratively-assigned name for the\n            originating node for this TG. The format\n            is NETID.CPNAME and is the same name\n            specified in the node table."), status("mandatory"), key, key_order(2)] string ibmappnNnTgFROwner;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.12"), read, description("The effective capacity is an integer value that indicates\n             the kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776.\n             This is an administratively assigned value associated\n             with this TG."), status("mandatory")] sint32 ibmappnNnTgFREffCap;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), variable_length("0..9"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.4.1.7"), read, description("DLC specific data related to the link connection\n             network.\n             Token-Ring    - MAC/SAP\n             X.25 Switched - dial digits\n             X.21 Switched - dial digits\n             Circuit Swtch - dial digits"), status("mandatory")] string ibmappnNnTgFRDlcData;
};
[description("Portion of the APPN routing table\n              that describes all of the APPN network nodes\n              and virtual nodes known to this node.\nThis table is indexed by two columns:\n              FRSN, followed by fully-qualified node name."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTopologyFRTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.12"), read, description("Indicates whether the node is central directory."), status("mandatory")] string ibmappnNnNodeFRCentralDirectory;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.11"), read, description("Indicates whether the node provide gateway functions."), status("mandatory")] string ibmappnNnNodeFRGateway;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.7"), read, description("Indicates whether this node is congested.\n             This node is not be included in route selection\n             by other nodes when this congestion exists."), status("mandatory")] string ibmappnNnNodeFRCongested;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.10"), read, description("Indicates whether the node is quiescing.\n             This node is not included in route selection\n             by other nodes when the node is quiescing."), status("mandatory")] string ibmappnNnNodeFRQuiescing;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.8"), read, description("Indicates whether intermediate session\n             routing resources are depleted.  This node is\n             not included in intermediate route selection\n             by other nodes when resources are depleted."), status("mandatory")] string ibmappnNnNodeFRIsrDepleted;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.14"), read, description("Indicates whether the node supports chaining."), status("mandatory")] string ibmappnNnNodeFRChainSupport;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.13"), read, description("Indicates whether the node supports intermediate session\n              routing (ISR)."), status("mandatory")] string ibmappnNnNodeFRIsr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.5"), read, description("Resource sequence number that is assigned and\n              controlled by the network node that owns this\n              resource. This is always an even 32-bit number\n              unless an error has occurred."), status("mandatory")] sint32 ibmappnNnNodeFRRsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.9"), read, description("Indicates whether session endpoint resources are depleted."), status("mandatory")] string ibmappnNnNodeFREndptDepleted;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..31"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.3"), read, description("Number of days before deletion of this\n              network node entry. Range is 0-31."), status("mandatory")] sint32 ibmappnNnNodeFREntryTimeLeft;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.1"), read, description("Administratively-assigned network name that is locally\n            defined at each network node in the format NETID.CPNAME."), status("mandatory"), key, key_order(2)] string ibmappnNnNodeFRName;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..65535"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.2"), read, description("Flow reduction sequence numbers (FRSNs) are associated\n             with Topology Database Updates (TDUs) and are unique\n             only within each APPN network node.  A TDU can be\n             associated with multiple APPN resources. This FRSN\n             indicates the last time this resource was updated at\n             this node."), status("mandatory"), key, key_order(1)] sint32 ibmappnNnNodeFRFrsn;
	[textual_convention("EnumeratedINTEGER"), enumeration("networknode(1),virtualnode(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.4"), read, description("Type of APPN node."), status("mandatory")] string ibmappnNnNodeFRType;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.3.3.1.6"), read, description("Route addition resistance\n            indicates the relative desirability\n            of using this node for intermediate session traffic.\n            The value, which can be any integer 0-255,\n            is used in route computation.  The lower the value,\n            the more desirable the node is for intermediate routing."), status("mandatory")] sint32 ibmappnNnNodeFRRouteAddResist;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.2.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTopo : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.4"), read, description("Total number of TDUs built by this node to be sent to\n             all adjacent NN since last initialization."), status("mandatory")] uint32 ibmappnNnTopoOutTdus;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.1"), read, description("Maximum number of nodes allowed in the APPN topology\n            database.  This administratively assigned value must be\n            equal to or greater than the maximum total number of end\n            nodes and network nodes.\n            If the number of nodes exceeds this value, APPN will issue\n            an Alert and the node can no longer participate as a network\n            node."), status("mandatory")] sint32 ibmappnNnTopoMaxNodes;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.20"), read, description("Total number of topology TG records purged from this\n              node's topology database.  This occurs when a TG has not\n              been updated in a specified amount of time.  The owning\n              node is responsible for broadcasting updates for its\n              resource that it wants to keep in the network topology."), status("mandatory")] uint32 ibmappnNnTopoTgPurges;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.18"), read, description("Total number of topology TG records inconsistencies\n              detected by this node.  This occurs when this node\n              attempts to update its topology database and detects a\n              data inconsistency.  This node will create a TDU with\n              the current RSN incremented to the next odd number and\n              broadcast it to all adjacent NNs."), status("mandatory")] uint32 ibmappnNnTopoTgErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.13"), read, description("Total number of topology TG updates received by this\n             node with a RSN less than the current RSN.  Both even and\n             odd RSN are included in this count.\n             These TDUs are not errors, but result when TDUs are\n             broadcast to all adjacent network nodes.  No update to\n             this node's topology database occurs, but this node will\n             send a TDU with it's higher RSN to the sender of the low\n             RSN."), status("mandatory")] uint32 ibmappnNnTopoTgLowRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.12"), read, description("Total number of topology node records purged from this\n              node's topology database.  This occurs when a node has not\n              been updated in a specified amount of time.  The owning\n              node is responsible for broadcasting updates for its\n              resource that it wants kept in the network topology."), status("mandatory")] uint32 ibmappnNnTopoNodePurges;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.10"), read, description("Total number of topology node records inconsistencies\n              detected by this node.  This occurs when this node attempts\n              to update its topology database and detects a data\n              inconsistency.  This node will create a TDU with the\n              current RSN incremented to the next odd number and\n              broadcast it to all adjacent NNs."), status("mandatory")] uint32 ibmappnNnTopoNodeErrors;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.2"), read, description("Current number of nodes in this node's topology database.\n             If this value exceeds the maximum number of nodes allowed\n             (NnTopoMaxNodes), APPN alert CPDB002 is\n             issued."), status("mandatory")] uint32 ibmappnNnTopoCurNumNodes;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.14"), read, description("Total number of topology TG updates received by this\n             node with a RSN equal to the current RSN.  Both even and\n             odd RSN are included in this count.\n             These TDUs are not errors, but result when TDUs are\n             broadcast to all adjacent network nodes.  No update to\n             this node's topology database occurs."), status("mandatory")] uint32 ibmappnNnTopoTgEqualRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.5"), read, description("Total number of topology node updates received by this\n             node with a RSN less than the current RSN.  Both even and\n             odd RSN are included in this count.\n             These TDUs are not errors, but result when TDUs are\n             broadcast to all adjacent network nodes.  No update to\n             this node's topology database occurs, but this node will\n             send a TDU with it's higher RSN to the adjacent node that\n             sent this low RSN."), status("mandatory")] uint32 ibmappnNnTopoNodeLowRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.16"), read, description("Total number of topology TG updates received by this\n\n\n\n\n\n             node with an odd RSN greater than the current RSN.\n             These updates represent a topology inconsistency detected\n             by one of the APPN network nodes.\n             This results in updating this nodes topology and\n             broadcasting a TDU to all adjacent network nodes."), status("mandatory")] uint32 ibmappnNnTopoTgBadHighRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.6"), read, description("Total number of topology node updates received by this\n             node with a RSN equal to the current RSN.  Both even and\n             odd RSN are included in this count.\n             These TDUs are not errors, but result when TDUs are\n             broadcast to all adjacent network nodes.  No update to\n             this node's topology database occurs."), status("mandatory")] uint32 ibmappnNnTopoNodeEqualRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.15"), read, description("Total number of topology TG updates received by this\n             node with a RSN greater than the current RSN.\n             This results in updating this nodes topology and\n             broadcasting the update to all adjacent network nodes."), status("mandatory")] uint32 ibmappnNnTopoTgGoodHighRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.19"), read, description("Total number of topology TG records built for this\n              node's resource due to timer updates. Updates are sent via\n              TDUs to all adjacent network nodes. These updates insure\n              other network nodes do not delete this node's resources\n              from their topology database."), status("mandatory")] uint32 ibmappnNnTopoTgTimerUpdates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.17"), read, description("Total number of topology TG records built as a result\n              of internally detected node state changes that affect APPN\n              topology and routing.  Updates are sent via TDUs to all\n              adjacent network nodes."), status("mandatory")] uint32 ibmappnNnTopoTgStateUpdates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.22"), read, description("Number of route requests for all class of services that\n              could not be calculated since last initialization."), status("mandatory")] uint32 ibmappnNnTopoTotalRouteRejs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.8"), read, description("Total number of topology node updates received by this\n             node with an odd RSN greater than the current RSN.\n             These updates represent a topology inconsistency detected\n             by one of the APPN network nodes.\n             This results in updating this nodes topology and broadcasting\n             a TDU to all adjacent network nodes."), status("mandatory")] uint32 ibmappnNnTopoNodeBadHighRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.21"), read, description("Number of routes calculated  for all class of services\n              since the last initialization."), status("mandatory")] uint32 ibmappnNnTopoTotalRouteCalcs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.7"), read, description("Total number of topology node updates received by this\n             node with a RSN greater than the current RSN.\n             This results in updating this nodes topology and\n             broadcasting a TDU to all adjacent network nodes.  It is\n             not required to send a TDU to the sender of this update\n             because that node already has the update."), status("mandatory")] uint32 ibmappnNnTopoNodeGoodHighRsns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.3"), read, description("Total number of TDUs received from\n             all adjacent NN since last initialization."), status("mandatory")] uint32 ibmappnNnTopoInTdus;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.11"), read, description("Total number of topology node records built for this\n              node's resource due to timer updates. Updates are sent via\n              TDUs to all adjacent network nodes. These updates insure\n              other network nodes do not delete this node's resources\n              from their topology database."), status("mandatory")] uint32 ibmappnNnTopoNodeTimerUpdates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.9"), read, description("Total number of topology Node records built as a result\n\n\n\n\n\n              of internally detected node state changes that affect APPN\n              topology and routing.  Updates are sent via TDUs to all\n              adjacent network nodes."), status("mandatory")] uint32 ibmappnNnTopoNodeStateUpdates;
};
[description("Table containing an entry for every Class of Service\n              that it has calculated a route for.\nThe Class of Service name is the index for this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.2.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnNnTopoRouteTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.23.1.1"), read, description("The Class of Service for the route."), status("mandatory"), key, key_order(1)] string ibmappnNnTopoRouteCos;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.23.1.4"), read, description("Number of route requests that could not\n             be calculated since last initialization."), status("mandatory")] uint32 ibmappnNnTopoRouteRejs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.23.1.3"), read, description("Number of routes calculated since last initialization."), status("mandatory")] uint32 ibmappnNnTopoRouteCalcs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.2.1.23.1.2"), read, description("Number of routes tree caches built for this Class of\n              Service since the last initialization."), status("mandatory")] uint32 ibmappnNnTopoRouteTrees;
};
[description("Table containing all the Tg-row information for all\n              class of service defined in this node.\nThe TgRowName and the TgRowIndex are the index\n             for this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnCosTgRowTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.2"), read, description("Index of COS name.  This same value is used\n              to access the node and TG COS tables."), status("mandatory"), key, key_order(2)] sint32 ibmappnCosTgRowIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.14"), read, description("Minimum acceptable value for this\n              user defined characteristic.\n              Range of values is 0-255."), status("mandatory")] sint32 ibmappnCosTgRowUsr1Min;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.16"), read, description("Minimum acceptable value for this\n              user defined characteristic.\n              Range of values is 0-255."), status("mandatory")] sint32 ibmappnCosTgRowUsr2Min;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.18"), read, description("Minimum acceptable value for this\n              user defined characteristic.\n              Range of values is 0-255."), status("mandatory")] sint32 ibmappnCosTgRowUsr3Min;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.15"), read, description("Maximum acceptable value for this\n              user defined characteristic.\n              Range of values is 0-255."), status("mandatory")] sint32 ibmappnCosTgRowUsr1Max;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.17"), read, description("A Maximum acceptable value for this\n              user defined characteristic."), status("mandatory")] sint32 ibmappnCosTgRowUsr2Max;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.19"), read, description("Maximum acceptable value for this\n              user defined characteristic.\n              Range of values is 0-255."), status("mandatory")] sint32 ibmappnCosTgRowUsr3Max;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.12"), read, description("Minimum acceptable propagation delay for this class of service.\n           Relative amount of time that it takes for a signal to travel\n           the length of the logical link.  This time is represented in\n           micro seconds, with the more values enumerated."), status("mandatory")] string ibmappnCosTgRowDelayMin;
	[textual_convention("EnumeratedINTEGER"), enumeration("minimum(0),negligible(384),terrestrial(9216),packet(147456),long(294912),maximum(2013265920)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.13"), read, description("Maximum acceptable propagation delay for this class of service.\n           Relative amount of time that it takes for a signal to travel\n           the length of the logical link.  This time is represented in\n           micro seconds, with the more values enumerated."), status("mandatory")] string ibmappnCosTgRowDelayMax;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.4"), read, description("Minimum acceptable speed for this Class of Service.\n             The effective capacity is an integer value that indicates\n             the actual kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776."), status("mandatory")] sint32 ibmappnCosTgRowEffCapMin;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.5"), read, description("Maximum acceptable speed for this Class of Service.\n             The effective capacity is an integer value that indicates\n             the actual kilo bits per second.\n             It is derived from the link bandwidth and maximum load\n             factor with the range of 0 thru 603,979,776."), status("mandatory")] sint32 ibmappnCosTgRowEffCapMax;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.6"), read, description("Minimum acceptable cost per connect time\n             for this Class of Service.\n             Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255."), status("mandatory")] sint32 ibmappnCosTgRowConnCostMin;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.7"), read, description("Maximum acceptable cost per connect time\n             for this Class of Service.\n             Cost per connect time: a value representing\n             the relative cost per unit of time to use\n             the TG. Range is from 0, which means no cost,\n             to 255."), status("mandatory")] sint32 ibmappnCosTgRowConnCostMax;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.8"), read, description("Minimum acceptable cost per byte\n              for this Class of Service."), status("mandatory")] sint32 ibmappnCosTgRowByteCostMin;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.9"), read, description("Maximum acceptable cost per byte\n              for this Class of Service."), status("mandatory")] sint32 ibmappnCosTgRowByteCostMax;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.10"), read, description("Minimum acceptable security\n\n\n\n\n\n              for this Class of Service."), status("mandatory")] string ibmappnCosTgRowSecurityMin;
	[textual_convention("EnumeratedINTEGER"), enumeration("nonsecure(1),publicSwitchedNetwork(32),undergroundCable(64),secureConduit(96),guardedConduit(128),encrypted(160),guardedRadiation(192)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.11"), read, description("Maximum acceptable security\n              for this Class of Service."), status("mandatory")] string ibmappnCosTgRowSecurityMax;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.3"), read, description("Weight to be associated with the nodes\n              that fit the criteria specified by this tg-row."), status("mandatory")] string ibmappnCosTgRowWgt;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.4.1.1"), read, description("Administratively-assigned name for this\n             class of service."), status("mandatory"), key, key_order(1)] string ibmappnCosTgRowName;
};
[description("This table contains all node-row information for all\n              class of service in this node.\nThe COS name is the first index and a integer\n              is the second index to insure a unique index."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnCosNodeRowTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), display_hint("255a"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.3"), read, description("Weight to be associated with the nodes\n              that fit the criteria specified by this node row."), status("mandatory")] string ibmappnCosNodeRowWgt;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.1"), read, description("Administratively-assigned name for this\n             class of service."), status("mandatory"), key, key_order(1)] string ibmappnCosNodeRowName;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.2"), read, description("Index of COS name.  This same value is used\n              to access the node and TG COS tables.\n              Range of values is 0-255."), status("mandatory"), key, key_order(2)] sint32 ibmappnCosNodeRowIndex;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.6"), read, description("Indicates whether low congestion will be\n              tolerated.  The minimum and maximum parameters\n              will allow specifying either low-congested,\n              high-congested, or either to be used."), status("mandatory")] string ibmappnCosNodeRowMinCongestAllow;
	[textual_convention("EnumeratedINTEGER"), enumeration("yes(1),no(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.7"), read, description("Indicates whether high congestion will be\n              tolerated.  The minimum and maximum parameters\n\n\n\n\n\n              will allow specifying either low-congested,\n              high-congested, or either to be used."), status("mandatory")] string ibmappnCosNodeRowMaxCongestAllow;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.4"), read, description("Minimum route addition resistance value\n             for this node. Range of values is 0-255.\n             The lower the value, the more desirable\n             the node is for intermediate routing."), status("mandatory")] sint32 ibmappnCosNodeRowResistMin;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..255"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.3.1.5"), read, description("Maximum route addition resistance value\n             for this node. Range of values is 0-255.\n             The lower the value, the more desirable\n             the node is for intermediate routing."), status("mandatory")] sint32 ibmappnCosNodeRowResistMax;
};
[description("Table representing all of the defined\n            mode names for this node.  The table\n            contains the matching COS name.\nThis table is indexed by the Mode Name."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnCosModeTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.1.1.2"), read, description("An administratively assigned name for this\n             Class of Service."), status("mandatory")] string ibmappnCosModeCosName;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.1.1.1"), read, description("Administratively-assigned name for this\n              mode entry."), status("mandatory"), key, key_order(1)] string ibmappnCosModeName;
};
[description("Table representing all of the defined class-of-service\n             names for this node.  The COS node and TG tables are\n             accessed using the same index, which is the COS name.\nThe COS name is the index to this table."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.6"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnCosNameTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..8"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.2.1.1"), read, description("Administratively-assigned name for this\n             class of service."), status("mandatory"), key, key_order(1)] string ibmappnCosName;
	[textual_convention("EnumeratedINTEGER"), enumeration("low(1),medium(2),high(3),network(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.6.2.1.2"), read, description("Transmission priority for this\n              class of service.  Values are:\n                Low\n                Medium\n                High\n                Network                                      "), status("mandatory")] string ibmappnCosTransPriority;
};
[description("Table containing information about\n             all known LUs and TPs.\nThis table is indexed by the LU name."), module_name("IBM-6611-APPN-MIB"), group_objectid("1.3.6.1.4.1.2.6.2.13.5"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnDirTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.2"), read, description("Fully-qualified control point (CP) name of the\n              network node server.  For unassociated end node\n              entries, the end node fully-qualified name\n              is returned."), status("mandatory")] string ibmappnDirServerName;
	[textual_convention("EnumeratedINTEGER"), enumeration("local(1),domain(2),xdomain(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.4"), read, description("Specifies the location of the LU."), status("mandatory")] string ibmappnDirLuLocation;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.3"), read, description("Fully-qualified CP name of the node at which\n             the LU is located.  This name is the same as the\n             serving NN name when the LU is located at a\n             network node or an unassociated end node.  It is\n             also the same as the fully-qualified LU name\n             when this is the control point LU for this node."), status("mandatory")] string ibmappnDirLuOwnerName;
	[textual_convention("EnumeratedINTEGER"), enumeration("home(1),cache(2),registered(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.5"), read, description("Directory types are:\n              1 - Home\n                    The LU is in the domain of the local network node\n                    and the LU information has been configured at the\n                    local node.\n\n              2 - Cache\n                    The LU has previously been located by a broadcast\n                    search and the location information has been saved.\n\n              3 - Register\n\n\n\n\n\n                    The LU is at an end node that is in the domain\n                    of the local network node.  Registered entries\n                    are registered by the served end node."), status("mandatory")] string ibmappnDirType;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("3..17"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.1"), read, description("Fully-qualified network LU name in the\n             domain of the serving network node."), status("mandatory"), key, key_order(1)] string ibmappnDirLuName;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),explicit-entry(2),partial-wildcard(3),full-wildcard(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.2.1.6"), read, description("1 - Other means unknown type of LU entry.\n             2 - Expliced-entry means the full LUNAME will be used\n                 for locating this LU.\n             3 - Partial-wildcard means only the non-blank portions\n                 of the LUNAME will be used for locating this LU.\n             4 - Full-wildcard means all LUNAMES will be directed\n                 to this LU."), status("mandatory")] string ibmappnDirWildCard;
};
[description(""), module_name("IBM-6611-APPN-MIB"), singleton, group_objectid("1.3.6.1.4.1.2.6.2.13.5.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_IBM_6611_APPN_MIB_ibmappnDirPerf : SnmpObjectType
{
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.4"), read, description("Current number of registered entries."), status("mandatory")] uint32 ibmappnDirRegEntries;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.10"), read, description("Number of broadcast locates returned with\n             a not found."), status("mandatory")] uint32 ibmappnDirNotFoundBcastLocates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.7"), read, description("Number of directed locates sent."), status("mandatory")] uint32 ibmappnDirOutLocates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.6"), read, description("Number of broadcast locates received."), status("mandatory")] uint32 ibmappnDirInBcastLocates;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.3"), read, description("Current number of home entries."), status("mandatory")] uint32 ibmappnDirCurHomeEntries;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.8"), read, description("Number of broadcast locates sent."), status("mandatory")] uint32 ibmappnDirOutBcastLocates;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.9"), read, description("Number of directed locates returned with a 'not found'."), status("mandatory")] uint32 ibmappnDirNotFoundLocates;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.11"), read, description("Current number of outstanding locates,\n            both directed and broadcast.  This value\n            varies. A value of zero indicates\n            that no locates are unanswered."), status("mandatory")] uint32 ibmappnDirLocateOutstands;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.1"), read, description("Maximum number of cache entries allowed. This\n             is an administratively assigned value."), status("mandatory")] sint32 ibmappnDirMaxCaches;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.2"), read, description("Current number of cache entries."), status("mandatory")] uint32 ibmappnDirCurCaches;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.2.6.2.13.5.1.5"), read, description("Number of directed locates received."), status("mandatory")] uint32 ibmappnDirInLocates;
};

