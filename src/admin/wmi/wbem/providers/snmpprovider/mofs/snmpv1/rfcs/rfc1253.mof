// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1253-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("The OSPF Interface Table describes the interfaces from\n            the viewpoint of OSPF.\nThe OSPF Interface Entry describes one interface from\n            the viewpoint of OSPF."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfIfTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("broadcast(1),nbma(2),pointToPoint(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.7.1.4"), read, write, description("The OSPF interface type.\n\n            By way of a default, this field may be intuited from\n            the corresponding value of ifType.  Broadcast LANs,\n            such as Ethernet and IEEE 802.5, take the value\n            'broadcast', X.25, Frame Relay, and similar\n            technologies take the value 'nbma', and links that are\n            definitively point to point take the value\n            'pointToPoint'."), status("mandatory")] string ospfIfType;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),loopback(2),waiting(3),pointToPoint(4),designatedRouter(5),backupDesignatedRouter(6),otherDesignatedRouter(7)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.7.1.12"), read, description("The OSPF Interface State."), status("mandatory"), defval("1")] string ospfIfState;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("1..4294967295"), object_identifier("1.3.6.1.2.1.14.7.1.10"), read, write, description("The number of seconds that a router's Hello packets\n            have not been seen before it's neighbors declare the\n            router down.  This should be some multiple of the Hello\n            interval.  This value must be the same for all routers\n            attached to a common network."), status("mandatory"), defval("40")] sint32 ospfIfRtrDeadInterval;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.7.1.3"), read, write, description("A 32-bit integer uniquely identifying the area to\n            which the interface connects.  Area ID 0.0.0.0 is used\n            for the OSPF backbone."), status("mandatory"), defval("00000000")] string ospfIfAreaId;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("UpToMaxAge"), variable_value("1..3600"), object_identifier("1.3.6.1.2.1.14.7.1.8"), read, write, description("The number of seconds between link-state advertisement\n            retransmissions, for adjacencies belonging to this\n            interface.  This value is also used when retransmitting\n            database description and link-state request packets."), status("mandatory"), defval("5")] sint32 ospfIfRetransInterval;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.7.1.15"), read, description("The number of times this OSPF interface has changed\n            its state, or an error has occurred."), status("mandatory"), defval("0")] uint32 ospfIfEvents;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.7.1.13"), read, description("The IP Address of the Designated Router."), status("mandatory"), defval("00000000")] string ospfIfDesignatedRouter;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.2.1.14.7.1.16"), read, write, description("The Authentication Key.  If the Area's Authorization\n            Type is simplePassword, and the key length is shorter\n            than 8 octets, the agent will left adjust and zero fill\n            to 8 octets.\n\n            When read, ospfIfAuthKey always returns an Octet String\n            of length zero."), reference("OSPF Version 2, Section 9 The Interface Data\n            Structure"), status("mandatory"), defval("0000000000000000")] string ospfIfAuthKey;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.7.1.1"), read, write, description("The IP address of this OSPF interface."), status("mandatory"), key, key_order(1)] string ospfIfIpAddress;
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),disabled(2)"), encoding("INTEGER"), object_syntax("Status"), object_identifier("1.3.6.1.2.1.14.7.1.5"), read, write, description("The OSPF interface's administrative status.  The value\n            'enabled' denotes that neighbor relationships may be\n            formed on the interface, and the interface will be\n            advertised as an internal route to some area.  The\n            value 'disabled' denotes that the interface is external\n            to OSPF."), status("mandatory"), defval("1")] string ospfIfAdminStat;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.7.1.2"), read, write, description("For the purpose of easing the instancing of addressed\n            and addressless interfaces; This variable takes the\n            value 0 on interfaces with IP Addresses, and the\n            corresponding value of ifIndex for interfaces having no\n            IP Address."), status("mandatory"), key, key_order(2)] sint32 ospfAddressLessIf;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("DesignatedRouterPriority"), variable_value("0..255"), object_identifier("1.3.6.1.2.1.14.7.1.6"), read, write, description("The priority of this interface.  Used in multi-access\n            networks, this field is used in the designated router\n            election algorithm.  The value 0 signifies that the\n            router is not eligible to become the designated router\n            on this particular network.  In the event of a tie in\n            this value, routers will use their router id as a tie\n            breaker."), status("mandatory"), defval("1")] sint32 ospfIfRtrPriority;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("UpToMaxAge"), variable_value("1..3600"), object_identifier("1.3.6.1.2.1.14.7.1.7"), read, write, description("The estimated number of seconds it takes to transmit a\n            link- state update packet over this interface."), status("mandatory"), defval("1")] sint32 ospfIfTransitDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("1..4294967295"), object_identifier("1.3.6.1.2.1.14.7.1.11"), read, write, description("The larger time interval, in seconds, between the\n            Hello packets sent to an inactive non-broadcast multi-\n            access neighbor."), status("mandatory"), defval("120")] sint32 ospfIfPollInterval;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.7.1.14"), read, description("The IP Address of the Backup Designated Router."), status("mandatory"), defval("00000000")] string ospfIfBackupDesignatedRouter;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("HelloRange"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.14.7.1.9"), read, write, description("The length of time, in seconds, between the Hello\n            packets that the router sends on the interface.  This\n            value must be the same for all routers attached to a\n            common network."), status("mandatory"), defval("10")] sint32 ospfIfHelloInterval;
};
[description("The OSPF Process's Links State Database.\nA single Link State Advertisement."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfLsdbTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.4.1.6"), read, description("This field is the age of the link state advertisement\n            in seconds."), reference("OSPF Version 2, Section 12.1.1 LS age"), status("mandatory")] sint32 ospfLsdbAge;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.4.1.3"), read, description("The Link State ID is an LS Type Specific field\n            containing either a Router ID or an IP Address; it\n            identifies the piece of the routing domain that is\n            being described by the advertisement."), reference("OSPF Version 2, Section 12.1.4 Link State ID"), status("mandatory"), key, key_order(3)] string ospfLsdbLSID;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.2.1.14.4.1.8"), read, description("The entire Link State Advertisement, including its\n            header."), reference("OSPF Version 2, Section 12 Link State Advertisements"), status("mandatory")] string ospfLsdbAdvertisement;
	[textual_convention("EnumeratedINTEGER"), enumeration("routerLink(1),networkLink(2),summaryLink(3),asSummaryLink(4),asExternalLink(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.4.1.2"), read, description("The type of the link state advertisement.  Each link\n            state type has a separate advertisement format."), reference("OSPF Version 2, Appendix A.4.1 The Link State\n            Advertisement header"), status("mandatory"), key, key_order(2)] string ospfLsdbType;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.4.1.1"), read, description("The 32 bit identifier of the Area from which the LSA\n            was received."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory"), key, key_order(1)] string ospfLsdbAreaId;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("RouterID"), object_identifier("1.3.6.1.2.1.14.4.1.4"), read, description("The 32 bit number that uniquely identifies the\n            originating router in the Autonomous System."), reference("OSPF Version 2, Appendix C.1 Global parameters"), status("mandatory"), key, key_order(4)] string ospfLsdbRouterId;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.4.1.7"), read, description("This field is the checksum of the complete contents of\n            the advertisement, excepting the age field.  The age\n\n\n\n\n\n            field is excepted so that an advertisement's age can be\n            incremented without updating the checksum.  The\n            checksum used is the same that is used for ISO\n            connectionless datagrams; it is commonly referred to as\n            the Fletcher checksum."), reference("OSPF Version 2, Section 12.1.7 LS checksum"), status("mandatory")] sint32 ospfLsdbChecksum;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.4.1.5"), read, description("The sequence number field is a signed 32-bit integer.\n            It is used to detect old and duplicate link state\n            advertisements.  The space of sequence numbers is\n            linearly ordered.  The larger the sequence number the\n            more recent the advertisement."), reference("OSPF Version 2, Section 12.1.6 LS sequence number"), status("mandatory")] sint32 ospfLsdbSequence;
};
[description("The list of Hosts, and their metrics, that the router\n            will advertise as host routes.\nA metric to be advertised, for a given type of service,\n            when a given host is reachable."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfHostTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("TOSType"), variable_value("0..31"), object_identifier("1.3.6.1.2.1.14.6.1.2"), read, write, description("The Type of Service of the route being configured."), reference("OSPF Version 2, Appendix C.6 Host route parameters"), status("mandatory"), key, key_order(2)] sint32 ospfHostTOS;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("Metric"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.14.6.1.3"), read, write, description("The Metric to be advertised."), reference("OSPF Version 2, Appendix C.6 Host route parameters"), status("mandatory")] sint32 ospfHostMetric;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.6.1.4"), read, write, description("This variable displays the validity or invalidity of\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfHostStatus;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.6.1.1"), read, write, description("The IP Address of the Host."), reference("OSPF Version 2, Appendix C.6 Host route parameters"), status("mandatory"), key, key_order(1)] string ospfHostIpAddress;
};
[description("The set of metrics that will be advertised by a\n            default Area Border Router into a stub area.\nThe metric for a given Type of Service that will be\n            advertised by a default Area Border Router into a stub\n            area."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfStubAreaTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("TOSType"), variable_value("0..31"), object_identifier("1.3.6.1.2.1.14.3.1.2"), read, write, description("The Type of Service associated with the metric.  On\n            creation, this can be derived from the instance."), status("mandatory"), key, key_order(2)] sint32 ospfStubTOS;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.3.1.1"), read, write, description("The 32 bit identifier for the Stub Area.  On creation,\n            this can be derived from the instance."), status("mandatory"), key, key_order(1)] string ospfStubAreaID;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("BigMetric"), variable_value("1..16777215"), object_identifier("1.3.6.1.2.1.14.3.1.3"), read, write, description("The metric value applied at the indicated type of\n            service.  By default, this equals the least metric at\n            the type of service among the interfaces to other\n            areas."), status("mandatory")] sint32 ospfStubMetric;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.3.1.4"), read, write, description("This variable displays the validity or invalidity of\n\n\n\n\n\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfStubStatus;
};
[description("The TOS metrics for a non-virtual interface identified\n            by the interface index.\nA particular TOS metric for a non-virtual interface\n            identified by the interface index."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfIfMetricTable : SnmpObjectType
{
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.8.1.1"), read, write, description("The IP address of this OSPF interface.  On row\n            creation, this can be derived from the instance."), status("mandatory"), key, key_order(1)] string ospfIfMetricIpAddress;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("TOSType"), variable_value("0..31"), object_identifier("1.3.6.1.2.1.14.8.1.3"), read, write, description("The type of service metric being referenced.  On row\n            creation, this can be derived from the instance."), status("mandatory"), key, key_order(3)] sint32 ospfIfMetricTOS;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.8.1.2"), read, write, description("For the purpose of easing the instancing of addressed\n            and addressless interfaces; This variable takes the\n            value 0 on interfaces with IP Addresses, and the value\n            of ifIndex for interfaces having no IP Address.  On row\n            creation, this can be derived from the instance."), status("mandatory"), key, key_order(2)] sint32 ospfIfMetricAddressLessIf;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("Metric"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.14.8.1.4"), read, write, description("The metric of using this type of service on this\n            interface.  The default value of the TOS 0 Metric is\n            10^8 / ifSpeed.\n\n            The value FFFF is distinguished to mean 'no route via\n            this TOS'."), status("mandatory")] sint32 ospfIfMetricMetric;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.8.1.5"), read, write, description("This variable displays the validity or invalidity of\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfIfMetricStatus;
};
[description("Information describing the configured parameters and\n            cumulative statistics of the router's attached areas.\nInformation describing the configured parameters and\n            cumulative statistics of one of the router's attached\n            areas."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfAreaTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.2.1.4"), read, description("The number of times that the intra-area route table\n            has been calculated using this area's link-state\n            database.  This is typically done using Dijkstra's\n            algorithm."), status("mandatory"), defval("0")] uint32 ospfSpfRuns;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.2.1.2"), read, write, description("The authentication type specified for an area.\n            Additional authentication types may be assigned locally\n            on a per Area basis."), reference("OSPF Version 2, Appendix E Authentication"), status("mandatory"), defval("0")] sint32 ospfAuthType;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.2.1.7"), read, description("The total number of link-state advertisements in this\n            area's link-state database, excluding AS External\n            LSA's."), status("mandatory"), defval("0")] uint32 ospfAreaLSACount;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.2.1.6"), read, description("The total number of Autonomous System border routers\n            reachable within this area.  This is initially zero,\n            and is calculated in each SPF Pass."), status("mandatory"), defval("0")] uint32 ospfASBdrRtrCount;
	[textual_convention("EnumeratedINTEGER"), enumeration("true(1),false(2)"), encoding("INTEGER"), object_syntax("TruthValue"), object_identifier("1.3.6.1.2.1.14.2.1.3"), read, write, description("The area's support for importing AS external link-\n            state advertisements."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory"), defval("1")] string ospfImportASExtern;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.2.1.8"), read, description("The 32-bit unsigned sum of the link-state\n            advertisements' LS checksums contained in this area's\n            link-state database.  This sum excludes external (LS\n            type 5) link-state advertisements.  The sum can be used\n            to determine if there has been a change in a router's\n            link state database, and to compare the link-state\n            database of two routers."), status("mandatory"), defval("0")] sint32 ospfAreaLSACksumSum;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.2.1.5"), read, description("The total number of area border routers reachable\n            within this area.  This is initially zero, and is\n            calculated in each SPF Pass."), status("mandatory"), defval("0")] uint32 ospfAreaBdrRtrCount;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.2.1.1"), read, write, description("A 32-bit integer uniquely identifying an area.  Area\n            ID 0.0.0.0 is used for the OSPF backbone."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory"), key, key_order(1)] string ospfAreaId;
};
[description("A table of non-virtual neighbor information.\nThe information regarding a single neighbor."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfNbrTable : SnmpObjectType
{
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("RouterID"), object_identifier("1.3.6.1.2.1.14.10.1.3"), read, description("A 32-bit integer (represented as a type IpAddress)\n            uniquely identifying the neighboring router in the\n            Autonomous System."), status("mandatory"), defval("00000000")] string ospfNbrRtrId;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),attempt(2),init(3),twoWay(4),exchangeStart(5),exchange(6),loading(7),full(8)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.10.1.6"), read, description("The State of the relationship with this Neighbor."), reference("OSPF Version 2, Section 10.1 Neighbor States"), status("mandatory"), defval("1")] string ospfNbrState;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.10.1.1"), read, write, description("The IP address of this neighbor."), status("mandatory"), key, key_order(1)] string ospfNbrIpAddr;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("InterfaceIndex"), object_identifier("1.3.6.1.2.1.14.10.1.2"), read, write, description(" On an interface having an IP Address, zero.  On\n            addressless interfaces, the corresponding value of\n            ifIndex in the Internet Standard MIB.  On row creation,\n            this can be derived from the instance."), status("mandatory"), key, key_order(2)] sint32 ospfNbrAddressLessIndex;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.10.1.7"), read, description("The number of times this neighbor relationship has\n            changed state, or an error has occurred."), status("mandatory"), defval("0")] uint32 ospfNbrEvents;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.10.1.4"), read, description("A Bit Mask corresponding to the neighbor's options\n            field.\n\n            Bit 0, if set, indicates that the area accepts and\n            operates on external information; if zero, it is a stub\n            area.\n\n            Bit 1, if set, indicates that the system will operate\n            on Type of Service metrics other than TOS 0.  If zero,\n            the neighbor will ignore all metrics except the TOS 0\n            metric."), reference("OSPF Version 2, Section 12.1.2 Options"), status("mandatory"), defval("0")] sint32 ospfNbrOptions;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("DesignatedRouterPriority"), variable_value("0..255"), object_identifier("1.3.6.1.2.1.14.10.1.5"), read, write, description("The priority of this neighbor in the designated router\n            election algorithm.  The value 0 signifies that the\n            neighbor is not eligible to become the designated\n            router on this particular network."), status("mandatory"), defval("1")] sint32 ospfNbrPriority;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.10.1.9"), read, write, description("This variable displays the validity or invalidity of\n\n\n\n\n\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfNBMANbrStatus;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.10.1.8"), read, description("The current length of the retransmission queue."), status("mandatory"), defval("0")] uint32 ospfNbrLSRetransQLen;
};
[description("Information about this router's virtual interfaces.\nInformation about a single Virtual Interface."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfVirtIfTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("UpToMaxAge"), variable_value("1..3600"), object_identifier("1.3.6.1.2.1.14.9.1.3"), read, write, description("The estimated number of seconds it takes to transmit a\n            link- state update packet over this interface."), status("mandatory"), defval("1")] sint32 ospfVirtIfTransitDelay;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("HelloRange"), variable_value("1..65535"), object_identifier("1.3.6.1.2.1.14.9.1.5"), read, write, description("The length of time, in seconds, between the Hello\n            packets that the router sends on the interface.  This\n            value must be the same for the virtual neighbor."), status("mandatory"), defval("10")] sint32 ospfVirtIfHelloInterval;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),pointToPoint(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.9.1.7"), read, description("OSPF virtual interface states."), status("mandatory"), defval("1")] string ospfVirtIfState;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("PositiveInteger"), variable_value("1..4294967295"), object_identifier("1.3.6.1.2.1.14.9.1.6"), read, write, description("The number of seconds that a router's Hello packets\n            have not been seen before it's neighbors declare the\n            router down.  This should be some multiple of the Hello\n            interval.  This value must be the same for the virtual\n            neighbor."), status("mandatory"), defval("60")] sint32 ospfVirtIfRtrDeadInterval;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.9.1.1"), read, write, description("The Transit Area that the Virtual Link traverses.  By\n            definition, this is not 0.0.0.0"), status("mandatory"), key, key_order(1)] string ospfVirtIfAreaID;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("UpToMaxAge"), variable_value("1..3600"), object_identifier("1.3.6.1.2.1.14.9.1.4"), read, write, description("The number of seconds between link-state advertisement\n            retransmissions, for adjacencies belonging to this\n\n\n\n\n\n            interface.  This value is also used when retransmitting\n            database description and link-state request packets.\n            This value should be well over the expected round-trip\n            time."), status("mandatory"), defval("5")] sint32 ospfVirtIfRetransInterval;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.9.1.8"), read, description("The number of state changes or error events on this\n            Virtual Link"), status("mandatory"), defval("0")] uint32 ospfVirtIfEvents;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.9.1.10"), read, write, description("This variable displays the validity or invalidity of\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfVirtIfStatus;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.2.1.14.9.1.9"), read, write, description("If Authentication Type is simplePassword, the device\n            will left adjust and zero fill to 8 octets.\n\n            When read, ospfVifAuthKey always returns a string of\n            length zero."), reference("OSPF Version 2, Section 9 The Interface Data\n            Structure"), status("mandatory"), defval("0000000000000000")] string ospfVirtIfAuthKey;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("RouterID"), object_identifier("1.3.6.1.2.1.14.9.1.2"), read, write, description("The Router ID of the Virtual Neighbor."), status("mandatory"), key, key_order(2)] string ospfVirtIfNeighbor;
};
[description("A table of virtual neighbor information.\nVirtual neighbor information."), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfVirtNbrTable : SnmpObjectType
{
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.11.1.7"), read, description("The current length of the retransmission queue."), status("mandatory")] uint32 ospfVirtNbrLSRetransQLen;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.11.1.1"), read, description("The Transit Area Identifier."), status("mandatory"), key, key_order(1)] string ospfVirtNbrArea;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("RouterID"), object_identifier("1.3.6.1.2.1.14.11.1.2"), read, description("A 32-bit integer uniquely identifying the neighboring\n            router in the Autonomous System."), status("mandatory"), key, key_order(2)] string ospfVirtNbrRtrId;
	[textual_convention("EnumeratedINTEGER"), enumeration("down(1),attempt(2),init(3),twoWay(4),exchangeStart(5),exchange(6),loading(7),full(8)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.11.1.5"), read, description("The state of the Virtual Neighbor Relationship."), status("mandatory")] string ospfVirtNbrState;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.11.1.3"), read, description("The IP address this Virtual Neighbor is using."), status("mandatory")] string ospfVirtNbrIpAddr;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.11.1.6"), read, description("The number of times this virtual link has changed its\n            state, or an error has occurred."), status("mandatory")] uint32 ospfVirtNbrEvents;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.11.1.4"), read, description("A bit map corresponding to the neighbor's options\n            field.  Thus, Bit 1, if set, indicates that the\n            neighbor supports Type of Service Routing; if zero, no\n            metrics other than TOS 0 are in use by the neighbor."), status("mandatory")] sint32 ospfVirtNbrOptions;
};
[description("A range if IP addresses specified by an IP address/IP\n            network mask pair.  For example, class B address range\n            of X.X.X.X with a network mask of 255.255.0.0 includes\n            all IP addresses from X.X.0.0 to X.X.255.255\nA range if IP addresses specified by an IP address/IP\n\n\n\n\n\n            network mask pair.  For example, class B address range\n            of X.X.X.X with a network mask of 255.255.0.0 includes\n            all IP addresses from X.X.0.0 to X.X.255.255"), module_name("RFC1253-MIB"), group_objectid("1.3.6.1.2.1.14"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfAreaRangeTable : SnmpObjectType
{
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.5.1.2"), read, write, description("The IP Address of the Net or Subnet indicated by the\n            range."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory"), key, key_order(2)] string ospfAreaRangeNet;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.2.1.14.5.1.3"), read, write, description("The Subnet Mask that pertains to the Net or Subnet."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory")] string ospfAreaRangeMask;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("AreaID"), object_identifier("1.3.6.1.2.1.14.5.1.1"), read, write, description("The Area the Address Range is to be found within."), reference("OSPF Version 2, Appendix C.2 Area parameters"), status("mandatory"), key, key_order(1)] string ospfAreaRangeAreaID;
	[textual_convention("EnumeratedINTEGER"), enumeration("valid(1),invalid(2)"), encoding("INTEGER"), object_syntax("Validation"), object_identifier("1.3.6.1.2.1.14.5.1.4"), read, write, description("This variable displays the validity or invalidity of\n            the entry.  Setting it to 'invalid' has the effect of\n            rendering it inoperative.  The internal effect (row\n            removal) is implementation dependent."), status("mandatory"), defval("1")] string ospfAreaRangeStatus;
};
[description(""), module_name("RFC1253-MIB"), singleton, group_objectid("1.3.6.1.2.1.14.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1253_MIB_ospfGeneralGroup : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.1.9"), read, description("The number of new link-state advertisements that have\n            been originated.  This number is incremented each time\n            the router originates a new LSA."), status("mandatory")] uint32 ospfOriginateNewLSAs;
	[textual_convention("EnumeratedINTEGER"), enumeration("true(1),false(2)"), encoding("INTEGER"), object_syntax("TruthValue"), object_identifier("1.3.6.1.2.1.14.1.4"), read, description("A flag to note whether this router is an area border\n            router."), reference("OSPF Version 2, Section 3 Splitting the AS into Areas"), status("mandatory")] string ospfAreaBdrRtrStatus;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.14.1.7"), read, description("The 32-bit unsigned sum of the LS checksums of the\n            external link-state advertisements contained in the\n            link-state database.  This sum can be used to determine\n            if there has been a change in a router's link state\n            database, and to compare the link-state database of two\n            routers."), status("mandatory")] sint32 ospfExternLSACksumSum;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("RouterID"), object_identifier("1.3.6.1.2.1.14.1.1"), read, write, description("A 32-bit integer uniquely identifying the router in\n\n\n\n\n\n            the Autonomous System.\n\n            By convention, to ensure uniqueness, this should\n            default to the value of one of the router's IP\n            interface addresses."), reference("OSPF Version 2, C.1 Global parameters"), status("mandatory")] string ospfRouterId;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.14.1.10"), read, description("The number of link-state advertisements received\n            determined to be new instantiations.  This number does\n            not include newer instantiations of self-originated\n            link-state advertisements."), status("mandatory")] uint32 ospfRxNewLSAs;
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),disabled(2)"), encoding("INTEGER"), object_syntax("Status"), object_identifier("1.3.6.1.2.1.14.1.2"), read, write, description("The administrative status of OSPF in the router.  The\n            value 'enabled' denotes that the OSPF Process is active\n            on at least one interface; 'disabled' disables it on\n            all interfaces."), status("mandatory")] string ospfAdminStat;
	[textual_convention("EnumeratedINTEGER"), enumeration("true(1),false(2)"), encoding("INTEGER"), object_syntax("TruthValue"), object_identifier("1.3.6.1.2.1.14.1.8"), read, write, description("The router's support for type-of-service routing."), reference("OSPF Version 2, Appendix F.1.2 Optional TOS support"), status("mandatory")] string ospfTOSSupport;
	[textual_convention("EnumeratedINTEGER"), enumeration("version2(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.14.1.3"), read, description("The current version number of the OSPF protocol is 2."), reference("OSPF Version 2, Title"), status("mandatory")] string ospfVersionNumber;
	[textual_convention("Gauge"), encoding("Gauge"), object_syntax("Gauge"), object_identifier("1.3.6.1.2.1.14.1.6"), read, description("The number of external (LS type 5) link-state\n            advertisements in the link-state database."), reference("OSPF Version 2, Appendix A.4.5 AS external link\n            advertisements"), status("mandatory")] uint32 ospfExternLSACount;
	[textual_convention("EnumeratedINTEGER"), enumeration("true(1),false(2)"), encoding("INTEGER"), object_syntax("TruthValue"), object_identifier("1.3.6.1.2.1.14.1.5"), read, write, description("A flag to note whether this router is an Autonomous\n            System border router."), reference("OSPF Version 2, Section 3.3 Classification of routers"), status("mandatory")] string ospfASBdrRtrStatus;
};

