// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "MSIPBOOTP-MIB" by smi2smir version 1.00.456.0000
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("Table of IP addresses bound to interfaces\nEntry for an IP address for an interface"), module_name("MSIPBOOTP-MIB"), group_objectid("1.3.6.1.4.1.311.1.12.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_ifAddressTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.4.1.1"), read, description("Index corresponding to the Interface with which this entry \n\t\t is associated."), status("mandatory"), key, key_order(1)] sint32 ifAEIfIndex = 0;
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.311.1.12.2.4.1.2"), read, description("Ip address bound to the associated interface."), status("mandatory"), key, key_order(2)] string ifAEAddress = "0.0.0.0";
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.311.1.12.2.4.1.3"), read, description("Address Mask associated with the IP address contained in the \n         corresponding ifAEAddress field."), status("mandatory"), key, key_order(3)] string ifAEMask = "0.0.0.0";
};
[description("Table of BOOTP statistics for interfaces\nBOOTP interface statistics entry. \n         Each entry contains counts of send/receive failures, requests/relies\n         received/discarded, and ARP Update failures"), module_name("MSIPBOOTP-MIB"), group_objectid("1.3.6.1.4.1.311.1.12.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_ifStatsTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.6"), read, description("Number of BOOTP REQUEST packets received on this interface."), status("mandatory")] uint32 ifSERequestReceiveds = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.5"), read, description("Number of times a failure occurred while attempting to \n         update the ARP cache on this interface."), status("mandatory")] uint32 ifSEArpUpdateFailures = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.3"), read, description("Number of times a failure occurred while attempting to send a \n         packet on this interface."), status("mandatory")] uint32 ifSESendFailures = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.9"), read, description("Number of BOOTP REPLY packets discarded due to errors in the header."), status("mandatory")] uint32 ifSEReplyDiscards = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.8"), read, description("Number of BOOTP REPLY packets received on this interface."), status("mandatory")] uint32 ifSEReplyReceiveds = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.1"), read, description("Index for the BOOTP interface Statistics table"), status("mandatory"), key, key_order(1)] sint32 ifSEIndex = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),bound(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.2"), read, description("Current state of BOOTP on this interface."), status("mandatory")] string ifSEState = "enabled";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.4"), read, description("Number of times a failure occurred while attempting to receive\n         a packet on this interface."), status("mandatory")] uint32 ifSEReceiveFailures = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.311.1.12.2.1.1.7"), read, description("Number of BOOTP REQUEST packets discarded on this interface."), status("mandatory")] uint32 ifSERequestDiscards = 0;
};
[description("BOOTP Interface configuration table.  List of subnets that require\n         separate configuration in BOOTP.\nBOOTP configuration entry for an interface. A single routing domain in a\n         single subnet."), module_name("MSIPBOOTP-MIB"), group_objectid("1.3.6.1.4.1.311.1.12.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_ifConfigTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("disabled(1),enabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.2.1.3"), read, write, description("Relay Mode for BOOTP request/reply packets "), status("mandatory"), defval("2")] string ifCERelayMode = "disabled";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.2.1.5"), read, write, description("Each BOOTP request sent by a client contains the time since the client \n\t\t has booted.  If the time since boot for the client exceeds the \n\t\t configured value of ifCEMinSecondsSinceBoot on a relay agent,  \n\t\t the relay agent will forward the request.  Otherwise it will discard \n\t\t the request."), status("mandatory"), defval("4")] sint32 ifCEMinSecondsSinceBoot = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..16"), object_identifier("1.3.6.1.4.1.311.1.12.2.2.1.4"), read, write, description("Each time a BOOTP request is forwarded by the BOOTP relay agent \n\t\t the request packet's hop count is incremented.  If the number of \n\t\t hops traversed by the packet exceeds the max hop count configured\n\t\t on a relay agent the request packet is discarded by that relay agent."), status("mandatory"), defval("4")] sint32 ifCEMaxHopCount = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.2.1.1"), read, description("Index for BOOTP interface config. table."), status("mandatory"), key, key_order(1)] sint32 ifCEIndex = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),bound(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.2.1.2"), read, description("Current state of BOOTP on this interface."), status("mandatory")] string ifCEState = "enabled";
};
[description("Table containing binding information for each interface.\nBinding information entry for an interface"), module_name("MSIPBOOTP-MIB"), group_objectid("1.3.6.1.4.1.311.1.12.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_ifBindingTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.3.1.1"), read, description("Index for an interface entry in the binding table"), status("mandatory"), key, key_order(1)] sint32 ifBindingIndex = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),bound(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.3.1.2"), read, description("State of the interface binding"), status("mandatory")] string ifBindingState = "enabled";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.2.3.1.3"), read, description("Number of IP address bound to this interface.  This is also the \n         number of entries in the Interface Address Table corresponding\n         to this interface."), status("mandatory")] sint32 ifBindingAddrCount = 0;
};
[description(""), module_name("MSIPBOOTP-MIB"), singleton, group_objectid("1.3.6.1.4.1.311.1.12.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_global : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.1.2"), read, write, description("Maximum size to use for queueing incoming packets."), status("mandatory")] sint32 globalMaxRecQueueSize = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.1.3"), read, description("Number of entries BOOTP server table"), status("mandatory")] sint32 globalServerCount = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("none(1),error(2),warning(3),information(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.1.1"), read, write, description("Information logged can be None, Error only, Error + Warning, \n         Error + Warn + Logging.  This variable controls the amount\n         of information logged"), status("mandatory")] string globalLoggingLevel = "none";
};
[description("Table of BOOTP servers to which packets are sent by this router\nBOOTP server entry. Contains the IP address of a BOOTP server"), module_name("MSIPBOOTP-MIB"), group_objectid("1.3.6.1.4.1.311.1.12.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_MSIPBOOTP_MIB_globalBOOTPServerTable : SnmpObjectType
{
	[textual_convention("IpAddress"), encoding("IpAddress"), object_syntax("IpAddress"), object_identifier("1.3.6.1.4.1.311.1.12.1.4.1.1"), read, write, description("IP Address of DHCP/BOOTP router"), status("mandatory"), key, key_order(1)] string globalBOOTPServerAddr = "0.0.0.0";
	[textual_convention("EnumeratedINTEGER"), enumeration("create(1),delete(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.311.1.12.1.4.1.2"), read, write, description("create : Creates an entry in the BOOTP Server table\n\t\t delete\t: Deletes an entry in the BOOTP Server table\n\t\t"), status("mandatory")] string globalBOOTPServerTag = "create";
};

