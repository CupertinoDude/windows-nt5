// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1230-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("This table contains Token Bus interface\n                             parameters and state variables, one entry\n                             per 802.5 interface.\nA list of Token Bus status and operational\n                             parameter values for an 802.4 interface."), module_name("RFC1230-MIB"), group_objectid("1.3.6.1.3.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1230_MIB_dot4Table : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.9"), read, description("The observed token rotation time for the\n                             last token rotation, timed from token\n                             arrival to token arrival.  A value of\n                             zero indicates that the token is not\n                             rotating."), status("mandatory")] sint32 dot4LastTokenRotTime;
	[textual_convention("EnumeratedINTEGER"), enumeration("rev2(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.3.7.1.1.19"), read, description("The Revision number of the 802.4 standard\n                             implemented by this station."), status("mandatory")] string dot4StandardRevision;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.1.1.1"), read, description("The value of this object identifies the\n\n\n\n\n\n                             802.4 interface for which this entry\n                             contains management information.  The\n                             value of this object for a particular\n                             interface has the same value as the\n                             ifIndex object, defined in [4,6], for the\n                             same interface."), status("mandatory"), key, key_order(1)] sint32 dot4IfIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.1.1.2"), read, description("The optional parts of the 802.4\n                             specification which are in use by this\n                             station.  The options of the 802.4\n                             specification are represented by the\n                             following values:\n                                   1 - Priority\n                                   2 - Request-With-Response\n                             The value of this object is given by the\n                             sum of the above representations for\n                             those options in use on this interface.\n                             The value zero indicates that no options\n                             are in use."), status("mandatory")] sint32 dot4Options;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.10"), read, description("The maximum duration for which a station\n                             can hold the token to transmit frames of\n                             access class 6 (if the priority option is\n                             implemented), or of any access class (if\n                             the priority option is not implemented)."), status("mandatory")] sint32 dot4HiPriTokenHoldTime;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.8"), read, description("The maximum time any station need wait\n                             for an immediate MAC-level response from\n                             another station.\n                             This value must the same in all stations on\n                             the 802.4 network."), status("mandatory")] sint32 dot4SlotTime;
	[textual_convention("EnumeratedINTEGER"), enumeration("no-op(1),enterRing(2),exitRing(3),reset(4),initialize(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.3.7.1.1.4"), read, write, description("Setting this object causes the station\n                             to change the state of the interface as\n                             indicated by the specified value.  An\n                             initialize(5) command causes the\n                             interfaceto load its operational\n                             parameters from its initialization\n                             parameters; the value of\n                             dot4InitInRingDesired determines\n                             whether the station tries to enter the\n                             logical ring immediately.\n                                 Note that the 802.4 specification\n                             suggests a station remain Offline after a\n                             'remote Network Management' reset(4),\n                             until a 'local Network Management'\n                             initialize(5) is performed.\n                                 Setting this object to a value of\n                             no-op(1) has no effect.  When read,\n                             this object always has the value no-op(1)."), status("mandatory")] string dot4Commands;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.13"), read, description("If the priority scheme is being used,\n                             this value specifies a limit on how long\n                             a station can transmit frames at access\n                             class 0.  The limit is measured from the\n                             time the station is able to start\n                             transmitting frames at this access\n                             class on one rotation, to the time it\n                             must stop transmitting frames at this\n                             access class on the next rotation.  If\n                             the priority scheme is not being used,\n\n\n\n\n\n                             this object has the value 0."), status("mandatory")] sint32 dot4TargetRotTimeClass0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.12"), read, description("If the priority scheme is being used,\n                             this value specifies a limit on how long\n                             a station can transmit frames at access\n                             class 2.  The limit is measured from the\n                             time the station is able to start\n                             transmitting frames at this access\n                             class on one rotation, to the time it\n                             must stop transmitting frames at this\n                             access class on the next rotation.  If\n                             the priority scheme is not being used,\n                             this object has the value 0."), status("mandatory")] sint32 dot4TargetRotTimeClass2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.11"), read, description("If the priority scheme is being used,\n                             this value specifies a limit on how long\n                             a station can transmit frames at access\n                             class 4.  The limit is measured from the\n                             time the station is able to start\n                             transmitting frames at this access class\n                             on one rotation, to the time it must stop\n                             transmitting frames at this access class\n                             on the next rotation.  If the priority\n                             scheme is not being used, this object has\n                             the value 0."), status("mandatory")] sint32 dot4TargetRotTimeClass4;
	[textual_convention("EnumeratedINTEGER"), enumeration("sixteenBit(1),forty-eightBit(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.3.7.1.1.5"), read, description("This object indicates the size of MAC\n                             addresses interpreted by this station."), status("mandatory")] string dot4MacAddrLen;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..7"), object_identifier("1.3.6.1.3.7.1.1.17"), read, description("The maximum number of retries of a\n                             Request-with-Response (RWR) frame.  If\n                             the RWR option is not in use, this object\n                             has the value 0."), status("mandatory")] sint32 dot4MaxRetries;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("16..255"), object_identifier("1.3.6.1.3.7.1.1.16"), read, description("The maximum number of consecutive token\n                             rotations without soliciting for a\n                             successor.  If this count expires, the\n                             station opens the response window to\n                             solicit for a successor (providing the\n                             duration of the current token rotation\n                             has not exceeded\n                             dot4TargetRotTimeRingMaint).  The least\n                             significant two bits of the count are\n                             determined randomly by the station on a\n                             per-use basis."), status("mandatory")] sint32 dot4MaxInterSolicitCount;
	[textual_convention("MacAddress"), encoding("OCTETSTRING"), object_syntax("MacAddress"), display_hint("1x:"), object_identifier("1.3.6.1.3.7.1.1.6"), read, description("The MAC address of this station's\n                             successor in the logical ring."), status("mandatory")] string dot4NextStation;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.14"), read, description("A value used to limit the duration of a\n                             token rotation.  If the duration of a\n                             token rotation exceeds this value, the\n                             station will not open the response window\n                             to solicit for a new successor."), status("mandatory")] sint32 dot4TargetRotTimeRingMaint;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.1.1.18"), read, description("The minimum number of octets of preamble\n                             on the first frame transmitted by this\n                             station after a period of 'transmitted'\n                             silence."), status("mandatory")] sint32 dot4MinPostSilencePreambLen;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.1.1.15"), read, description("The value to which the\n                             dot4TargetRotTimeRingMaint is set, each\n                             time the station enters the ring.\n                             A large value will cause the station to\n                             solicit successors immediately upon entry\n                             to the ring; a value of zero will cause\n                             the station to defer this solicitation\n                             for at least one token rotation."), status("mandatory")] sint32 dot4RingMaintTimerInitValue;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),offline(2),outOfRing(3),enteringRing(4),inRing(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.3.7.1.1.3"), read, description("The current state of the 802.4\n                             interface.  The value of other(1) is\n                             used if the state is unknown\n                             (e.g., due to an error condition)."), status("mandatory")] string dot4State;
	[textual_convention("MacAddress"), encoding("OCTETSTRING"), object_syntax("MacAddress"), display_hint("1x:"), object_identifier("1.3.6.1.3.7.1.1.7"), read, description("The source MAC address of the last token\n                             addressed to this station."), status("mandatory")] string dot4PreviousStation;
};
[description("This table contains Token Bus\n\n\n\n\n\n                             initialization parameters, one entry per\n                             802.4 interface.\nA list of Token Bus initialization\n                             parameters for an 802.4 interface."), module_name("RFC1230-MIB"), group_objectid("1.3.6.1.3.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1230_MIB_dot4InitTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.9"), read, write, description("The value assigned to the object\n                             dot4TargetRotTimeRingMaint when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitTargetRotTimeRingMaint;
	[textual_convention("EnumeratedINTEGER"), enumeration("inRing(1),outOfRing(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.3.7.2.1.12"), read, write, description("This object determines whether the\n                             station will attempt to enter the logical\n                             ring immediately after initialization."), status("mandatory")] string dot4InitInRingDesired;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.2.1.11"), read, write, description("The value assigned to the object\n                             dot4MinPostSilencePreambLen when the\n                             station is initialized."), status("mandatory")] sint32 dot4InitMinPostSilencePreambLen;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.10"), read, write, description("The value assigned to the object\n                             dot4RingMaintTimerInitValue when the\n                             station is initialized."), status("mandatory")] sint32 dot4InitRingMaintTimerInitValue;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.2.1.1"), read, description("The value of this object identifies the\n                             802.4 interface for which this entry\n\n\n\n\n\n                             contains management information.  The\n                             value of this object for a particular\n                             interface has the same value as the\n                             ifIndex object, defined in [4,6], for\n                             the same interface."), status("mandatory"), key, key_order(1)] sint32 dot4InitIfIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.5"), read, write, description("The value assigned to the object\n                             dot4HiPriTokenHoldTime when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitHiPriTokenHoldTime;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.2"), read, write, description("The value assigned to the object\n                             dot4SlotTime when the station is\n                             initialized."), status("mandatory")] sint32 dot4InitSlotTime;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.8"), read, write, description("The value assigned to the object\n                             dot4TargetRotTimeClass0 when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitTargetRotTimeClass0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.7"), read, write, description("The value assigned to the object\n                             dot4TargetRotTimeClass2 when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitTargetRotTimeClass2;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("OctetTime"), object_identifier("1.3.6.1.3.7.2.1.6"), read, write, description("The value assigned to the object\n                             dot4TargetRotTimeClass4 when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitTargetRotTimeClass4;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("0..7"), object_identifier("1.3.6.1.3.7.2.1.4"), read, write, description("The value assigned to the object\n                             dot4MaxRetries when the station is\n                             initialized."), status("mandatory")] sint32 dot4InitMaxRetries;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("16..255"), object_identifier("1.3.6.1.3.7.2.1.3"), read, write, description("The value assigned to the object\n                             dot4MaxInterSolicitCount when the station\n                             is initialized."), status("mandatory")] sint32 dot4InitMaxInterSolicitCount;
};
[description("A table containing Token Bus statistics.\n                             All the statistics are defined using the\n                             syntax Counter as 32 bit wrap around\n                             counters.  Thus, if an interface's\n                             hardware chip set maintains these\n                             statistics in 16-bit counters, then the\n                             agent must read the hardware's counters\n                             frequently enough to prevent loss of\n                             significance, in order to maintain\n                             a 32-bit counter in software.\nAn entry containing the 802.4 statistics\n                             for a particular interface."), module_name("RFC1230-MIB"), group_objectid("1.3.6.1.3.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1230_MIB_dot4StatsTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.3"), read, description("The number of tokens heard by this\n                             station."), status("optional")] uint32 dot4StatsTokenHeards;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.7"), read, description("The number of occurrences of non-silence\n                             followed by silence in which a start\n                             delimiter was not detected."), status("mandatory")] uint32 dot4StatsNonSilences;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.2"), read, description("The number of times this station has\n                             passed the token."), status("optional")] uint32 dot4StatsTokenPasses;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.13"), read, description("The number of times this station\n                             detected another station using the same\n                             MAC address."), status("mandatory")] uint32 dot4StatsDupAddresses;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.4"), read, description("The number of times the station could\n                             not find a successor while believing\n                             itself not the only station in the ring.\n                             This can signify a faulty transmitter\n                             condition in this station."), status("mandatory")] uint32 dot4StatsNoSuccessors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.11"), read, description("The number of frames that were received\n                             that were larger than the media's MTU."), status("mandatory")] uint32 dot4StatsFrameTooLongs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.6"), read, description("The number of times the station failed in\n                             passing the token to the next station."), status("mandatory")] uint32 dot4StatsTokenPassFails;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.3.7.3.1.1"), read, description("The value of this object identifies the\n                             802.4 interface for which this entry\n                             contains management information.  The\n                             value of this object for a particular\n\n\n\n\n\n                             interface has the same value as the\n                             ifIndex object, defined in [4,6], for the\n                             same interface."), status("mandatory"), key, key_order(1)] sint32 dot4StatsIfIndex;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.12"), read, description("The number of times a FIFO overrun was\n                             detected in the station."), status("mandatory")] uint32 dot4StatsOverRuns;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.8"), read, description("The number of frames received with an\n                             incorrect FCS and the E-bit reset."), status("mandatory")] uint32 dot4StatsFcsErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.10"), read, description("The number of occurrences of receiving a\n                             start delimiter followed by another start\n                             delimiter, an invalid symbol sequence or\n                             silence, without an intervening end\n                             delimiter."), status("mandatory")] uint32 dot4StatsFrameFrags;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.9"), read, description("The number of frames the station\n                             received with the E-bit set in the\n                             end delimiter."), status("mandatory")] uint32 dot4StatsEbitErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.3.7.3.1.5"), read, description("The number of times the station has had\n                             to look for a new next station."), status("mandatory")] uint32 dot4StatsWhoFollows;
};

