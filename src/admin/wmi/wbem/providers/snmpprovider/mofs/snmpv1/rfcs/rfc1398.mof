// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1398-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description("Statistics for a collection of ethernet-like\n                         interfaces attached to a particular system.\nStatistics for a particular interface to an\n                         ethernet-like medium."), module_name("RFC1398-MIB"), group_objectid("1.3.6.1.2.1.10.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1398_MIB_dot3StatsTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.4"), read, description("A count of successfully transmitted frames on\n                         a particular interface for which transmission\n                         is inhibited by exactly one collision.\n\n                         A frame that is counted by an instance of this\n\n\n\n\n\n                         object is also counted by the corresponding\n                         instance of either the ifOutUcastPkts or\n                         ifOutNUcastPkts object and is not counted by\n                         the corresponding instance of the\n                         dot3StatsMultipleCollisionFrames object."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsSingleCollisionFrames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.7"), read, description("A count of frames for which the first\n                         transmission attempt on a particular interface\n                         is delayed because the medium is busy.\n\n                         The count represented by an instance of this\n                         object does not include frames involved in\n                         collisions."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsDeferredTransmissions;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.6"), read, description("A count of times that the SQE TEST ERROR\n                         message is generated by the PLS sublayer for a\n                         particular interface. The SQE TEST ERROR\n                         message is defined in section 7.2.2.2.4 of\n                         ANSI/IEEE 802.3-1985 and its generation is\n                         described in section 7.2.4.6 of the same\n                         document."), reference("ANSI/IEEE Std 802.3-1985 Carrier Sense\n                         Multiple Access with Collision Detection Access\n                         Method and Physical Layer Specifications"), status("mandatory")] uint32 dot3StatsSQETestErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.13"), read, description("A count of frames received on a particular\n                         interface that exceed the maximum permitted\n                         frame size.\n\n                         The count represented by an instance of this\n                         object is incremented when the frameTooLong\n                         status is returned by the MAC service to the\n                         LLC (or other MAC user). Received frames for\n                         which multiple error conditions obtain are,\n                         according to the conventions of IEEE 802.3\n                         Layer Management, counted exclusively according\n                         to the error status presented to the LLC."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsFrameTooLongs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.5"), read, description("A count of successfully transmitted frames on\n                         a particular interface for which transmission\n                         is inhibited by more than one collision.\n\n                         A frame that is counted by an instance of this\n                         object is also counted by the corresponding\n                         instance of either the ifOutUcastPkts or\n                         ifOutNUcastPkts object and is not counted by\n                         the corresponding instance of the\n                         dot3StatsSingleCollisionFrames object."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsMultipleCollisionFrames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.8"), read, description("The number of times that a collision is\n                         detected on a particular interface later than\n                         512 bit-times into the transmission of a\n                         packet.\n\n                         Five hundred and twelve bit-times corresponds\n                         to 51.2 microseconds on a 10 Mbit/s system. A\n                         (late) collision included in a count\n                         represented by an instance of this object is\n                         also considered as a (generic) collision for\n                         purposes of other collision-related\n                         statistics."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsLateCollisions;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.16"), read, description("A count of frames for which reception on a\n                         particular interface fails due to an internal\n                         MAC sublayer receive error. A frame is only\n                         counted by an instance of this object if it is\n                         not counted by the corresponding instance of\n                         either the dot3StatsFrameTooLongs object, the\n                         dot3StatsAlignmentErrors object, or the\n                         dot3StatsFCSErrors object.\n\n                         The precise meaning of the count represented by\n                         an instance of this object is implementation-\n                         specific.  In particular, an instance of this\n                         object may represent a count of receive errors\n\n\n\n\n\n                         on a particular interface that are not\n                         otherwise counted."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsInternalMacReceiveErrors;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.7.2.1.1"), read, description("An index value that uniquely identifies an\n                         interface to an ethernet-like medium.  The\n                         interface identified by a particular value of\n                         this index is the same interface as identified\n                         by the same value of ifIndex."), status("mandatory"), key, key_order(1)] sint32 dot3StatsIndex;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.2"), read, description("A count of frames received on a particular\n\n\n\n\n\n                         interface that are not an integral number of\n                         octets in length and do not pass the FCS check.\n\n                         The count represented by an instance of this\n                         object is incremented when the alignmentError\n                         status is returned by the MAC service to the\n                         LLC (or other MAC user). Received frames for\n                         which multiple error conditions obtain are,\n                         according to the conventions of IEEE 802.3\n                         Layer Management, counted exclusively according\n                         to the error status presented to the LLC."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsAlignmentErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.10"), read, description("A count of frames for which transmission on a\n                         particular interface fails due to an internal\n                         MAC sublayer transmit error. A frame is only\n                         counted by an instance of this object if it is\n                         not counted by the corresponding instance of\n                         either the dot3StatsLateCollisions object, the\n                         dot3StatsExcessiveCollisions object, or the\n                         dot3StatsCarrierSenseErrors object.\n\n                         The precise meaning of the count represented by\n                         an instance of this object is implementation-\n                         specific.  In particular, an instance of this\n                         object may represent a count of transmission\n                         errors on a particular interface that are not\n                         otherwise counted."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsInternalMacTransmitErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.3"), read, description("A count of frames received on a particular\n                         interface that are an integral number of octets\n                         in length but do not pass the FCS check.\n\n                         The count represented by an instance of this\n                         object is incremented when the frameCheckError\n                         status is returned by the MAC service to the\n                         LLC (or other MAC user). Received frames for\n                         which multiple error conditions obtain are,\n                         according to the conventions of IEEE 802.3\n                         Layer Management, counted exclusively according\n                         to the error status presented to the LLC."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsFCSErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.11"), read, description("The number of times that the carrier sense\n                         condition was lost or never asserted when\n                         attempting to transmit a frame on a particular\n                         interface.\n\n                         The count represented by an instance of this\n                         object is incremented at most once per\n                         transmission attempt, even if the carrier sense\n                         condition fluctuates during a transmission\n                         attempt."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsCarrierSenseErrors;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.2.1.9"), read, description("A count of frames for which transmission on a\n                         particular interface fails due to excessive\n                         collisions."), reference("IEEE 802.3 Layer Management"), status("mandatory")] uint32 dot3StatsExcessiveCollisions;
};
[description("A collection of collision histograms for a\n                         particular set of interfaces.\nA cell in the histogram of per-frame\n                         collisions for a particular interface.  An\n                         instance of this object represents the\n                         frequency of individual MAC frames for which\n                         the transmission (successful or otherwise) on a\n                         particular interface is accompanied by a\n                         particular number of media collisions."), module_name("RFC1398-MIB"), group_objectid("1.3.6.1.2.1.10.7"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1398_MIB_dot3CollTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.7.5.1.1"), read, description("The index value that uniquely identifies the\n                         interface to which a particular collision\n                         histogram cell pertains.  The interface\n                         identified by a particular value of this index\n                         is the same interface as identified by the same\n                         value of ifIndex."), status("mandatory"), key, key_order(1)] sint32 dot3CollIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("1..16"), object_identifier("1.3.6.1.2.1.10.7.5.1.2"), read, description("The number of per-frame media collisions for\n                         which a particular collision histogram cell\n                         represents the frequency on a particular\n                         interface."), status("mandatory"), key, key_order(2)] sint32 dot3CollCount;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.7.5.1.3"), read, description("A count of individual MAC frames for which the\n                         transmission (successful or otherwise) on a\n                         particular interface is accompanied by a\n                         particular number of media collisions."), status("mandatory")] uint32 dot3CollFrequencies;
};

