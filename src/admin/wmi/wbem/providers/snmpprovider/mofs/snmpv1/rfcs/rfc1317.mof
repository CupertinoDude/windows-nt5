// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "RFC1317-MIB" by smi2smir version 1.10.635.0000
qualifier write:ToInstance ToSubClass;
qualifier read:ToInstance ToSubClass;
qualifier provider:ToInstance ToSubClass;
qualifier singleton:ToInstance ToSubClass;
qualifier dynamic:ToInstance ToSubClass;
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier key_order:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description(""), module_name("RFC1317-MIB"), singleton, group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232 : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.1"), read, description("The number of ports (regardless of their current\n               state) in the RS-232-like general port table."), status("mandatory")] sint32 rs232Number;
};
[description("A list of port entries.  The number of entries is\n               given by the value of rs232Number.\nStatus and parameter values for a port."), module_name("RFC1317-MIB"), group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232PortTable : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.4"), read, description("The number of output signals for the port in the\n               output signal table (rs232PortOutSigTable).  The\n               table contains entries only for those signals the\n               software can assert."), status("mandatory")] sint32 rs232PortOutSigNumber;
	[textual_convention("EnumeratedINTEGER"), enumeration("other(1),rs232(2),rs422(3),rs423(4),v35(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.2"), read, description("The port's hardware type."), status("mandatory")] string rs232PortType;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.1"), read, description("A unique value for each port.  Its value ranges\n               between 1 and the value of rs232Number.  By\n               convention and if possible, hardware port numbers\n               map directly to external connectors.  The value for\n               each port must remain constant at least from one\n               re-initialization of the network management agent to\n               the next."), status("mandatory"), key, key_order(1)] sint32 rs232PortIndex;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.5"), read, write, description("The port's input speed in bits per second."), status("mandatory")] sint32 rs232PortInSpeed;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.6"), read, write, description("The port's output speed in bits per second."), status("mandatory")] sint32 rs232PortOutSpeed;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.2.1.3"), read, description("The number of input signals for the port in the\n               input signal table (rs232PortInSigTable).  The table\n               contains entries only for those signals the software\n               can detect."), status("mandatory")] sint32 rs232PortInSigNumber;
};
[description("A list of synchronous port entries.  The maximum\n               entry number is given by the value of rs232Number.\n               Entries need not exist for asynchronous ports.\nStatus and parameter values for a synchronous\n               port."), module_name("RFC1317-MIB"), group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232SyncPortTable : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.4.1.5"), read, description("Total number of frames that failed to be received\n               on the port since system re-initialization and while\n               the port state was 'up' or 'test' because the\n               receiver did not accept the data in time."), status("mandatory")] uint32 rs232SyncPortReceiveOverrunErrs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.4.1.4"), read, description("Total number of frames that failed to be\n               transmitted on the port since system\n               re-initialization and while the port state was 'up'\n               or 'test' because data was not available to the\n               transmitter in time."), status("mandatory")] uint32 rs232SyncPortTransmitUnderrunErrs;
	[textual_convention("EnumeratedINTEGER"), enumeration("internal(1),external(2),split(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.4.1.2"), read, write, description("Source of the port's bit rate clock. 'split' means\n               the tranmit clock is internal and the receive clock\n               is external."), status("mandatory")] string rs232SyncPortClockSource;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.4.1.7"), read, description("Number of frames aborted on the port due to\n               receiving an abort sequence since system\n               re-initialization and while the port state was 'up'\n               or 'test'."), status("mandatory")] uint32 rs232SyncPortAbortedFrames;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.4.1.3"), read, description("Total number of frames with an invalid frame check\n               sequence, input from the port since system\n               re-initialization and while the port state was 'up'\n               or 'test'."), status("mandatory")] uint32 rs232SyncPortFrameCheckErrs;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.4.1.1"), read, description("A unique value for each port.  Its value is the\n               same as rs232PortIndex for the port."), status("mandatory"), key, key_order(1)] sint32 rs232SyncPortIndex;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.4.1.6"), read, description("Total number of frames that failed to be received\n               or transmitted on the port due to loss of modem\n               signals since system re-initialization and while the\n               port state was 'up' or 'test'."), status("mandatory")] uint32 rs232SyncPortInterruptedFrames;
};
[description("A list of asynchronous port entries.  The maximum\n               entry number is given by the value of rs232Number.\n\n\n\n\n\n               Entries need not exist for synchronous ports.\nStatus and parameter values for an asynchronous\n               port."), module_name("RFC1317-MIB"), group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232AsyncPortTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("enabled(1),disabled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.3.1.5"), read, write, description("A control for the port's ability to automatically\n               sense input speed.\n\n               When rs232PortAutoBaud is 'enabled', a port may\n               autobaud to values different from the set values for\n               speed, parity, and character size.  As a result a\n               network management system may temporarily observe\n               values different from what was previously set."), status("mandatory")] string rs232AsyncPortAutobaud;
	[textual_convention("EnumeratedINTEGER"), enumeration("one(1),two(2),one-and-half(3),dynamic(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.3.1.3"), read, write, description("The port's number of stop bits."), status("mandatory")] string rs232AsyncPortStopBits;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.3.1.6"), read, description("Total number of characters with a parity error,\n               input from the port since system re-initialization\n               and while the port state was 'up' or 'test'."), status("mandatory")] uint32 rs232AsyncPortParityErrs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.3.1.7"), read, description("Total number of characters with a framing error,\n               input from the port since system re-initialization\n               and while the port state was 'up' or 'test'."), status("mandatory")] uint32 rs232AsyncPortFramingErrs;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.3.1.8"), read, description("Total number of characters with an overrun error,\n               input from the port since system re-initialization\n               and while the port state was 'up' or 'test'."), status("mandatory")] uint32 rs232AsyncPortOverrunErrs;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), variable_value("5..8"), object_identifier("1.3.6.1.2.1.10.33.3.1.2"), read, write, description("The port's number of bits in a character."), status("mandatory")] sint32 rs232AsyncPortBits;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.3.1.1"), read, description("A unique value for each port.  Its value is the\n               same as rs232PortIndex for the port."), status("mandatory"), key, key_order(1)] sint32 rs232AsyncPortIndex;
	[textual_convention("EnumeratedINTEGER"), enumeration("none(1),odd(2),even(3),mark(4),space(5)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.3.1.4"), read, write, description("The port's sense of a character parity bit."), status("mandatory")] string rs232AsyncPortParity;
};
[description("A list of port input control signal entries.\nInput control signal status for a hardware port."), module_name("RFC1317-MIB"), group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232InSigTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("rts(1),cts(2),dsr(3),dtr(4),ri(5),dcd(6),sq(7),srs(8),srts(9),scts(10),sdcd(11)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.5.1.2"), read, description("Identification of a hardware signal, as follows:\n\n                   rts    Request to Send\n                   cts    Clear to Send\n                   dsr    Data Set Ready\n                   dtr    Data Terminal Ready\n\n\n\n\n\n                   ri     Ring Indicator\n                   dcd    Received Line Signal Detector\n                   sq     Signal Quality Detector\n                   srs    Data Signaling Rate Selector\n                   srts   Secondary Request to Send\n                   scts   Secondary Clear to Send\n                   sdcd   Secondary Received Line Signal Detector\n               "), reference("EIA Standard RS-232-C, August 1969."), status("mandatory"), key, key_order(2)] string rs232InSigName;
	[textual_convention("EnumeratedINTEGER"), enumeration("none(1),on(2),off(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.5.1.3"), read, description("The current signal state."), status("mandatory")] string rs232InSigState;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.5.1.4"), read, description("The number of times the signal has changed from\n               'on' to 'off' or from 'off' to 'on'."), status("mandatory")] uint32 rs232InSigChanges;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.5.1.1"), read, description("The value of rs232PortIndex for the port to which\n               this entry belongs."), status("mandatory"), key, key_order(1)] sint32 rs232InSigPortIndex;
};
[description("A list of port output control signal entries.\nOutput control signal status for a hardware port."), module_name("RFC1317-MIB"), group_objectid("1.3.6.1.2.1.10.33"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_RFC1317_MIB_rs232OutSigTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("rts(1),cts(2),dsr(3),dtr(4),ri(5),dcd(6),sq(7),srs(8),srts(9),scts(10),sdcd(11)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.6.1.2"), read, description("Identification of a hardware signal, as follows:\n\n                   rts    Request to Send\n                   cts    Clear to Send\n                   dsr    Data Set Ready\n                   dtr    Data Terminal Ready\n                   ri     Ring Indicator\n                   dcd    Received Line Signal Detector\n                   sq     Signal Quality Detector\n                   srs    Data Signaling Rate Selector\n                   srts   Secondary Request to Send\n                   scts   Secondary Clear to Send\n                   sdcd   Secondary Received Line Signal Detector\n               "), reference("EIA Standard RS-232-C, August 1969."), status("mandatory"), key, key_order(2)] string rs232OutSigName;
	[textual_convention("EnumeratedINTEGER"), enumeration("none(1),on(2),off(3)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.2.1.10.33.6.1.3"), read, description("The current signal state."), status("mandatory")] string rs232OutSigState;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.2.1.10.33.6.1.4"), read, description("The number of times the signal has changed from\n               'on' to 'off' or from 'off' to 'on'."), status("mandatory")] uint32 rs232OutSigChanges;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.2.1.10.33.6.1.1"), read, description("The value of rs232PortIndex for the port to which\n               this entry belongs."), status("mandatory"), key, key_order(1)] sint32 rs232OutSigPortIndex;
};

