// Copyright (c) 1997-2001 Microsoft Corporation, All Rights Reserved
//	MOF Generated for module "LANMGR-MIB-II-MIB" by smi2smir version 1.00.456.0000
qualifier textual_convention:ToInstance ToSubClass;
qualifier object_identifier:ToInstance ToSubClass;
qualifier encoding:ToInstance ToSubClass;
qualifier object_syntax:ToInstance ToSubClass;
qualifier status:ToInstance ToSubClass;
qualifier fixed_length:ToInstance ToSubClass;
qualifier variable_length:ToInstance ToSubClass;
qualifier variable_value:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier enumeration:ToInstance ToSubClass;
qualifier bits:ToInstance ToSubClass;
qualifier description:ToInstance ToSubClass;
qualifier display_hint:ToInstance ToSubClass;
qualifier defval:ToInstance ToSubClass;
qualifier units:ToInstance ToSubClass;
qualifier reference:ToInstance ToSubClass;
qualifier virtual_key:ToInstance ToSubClass;
qualifier rowstatus:ToInstance ToSubClass;
qualifier module_name:ToInstance ToSubClass;
qualifier module_imports:ToInstance ToSubClass;
qualifier group_objectid:ToInstance ToSubClass;

[abstract]
class SnmpMacro
{
};

[abstract]
class SnmpObjectType:SnmpMacro
{
};

class SnmpNotifyStatus:__ExtendedStatus
{
[write] sint32 SnmpStatusCode;
[write] string Description;
};

[description(""), module_name("LANMGR-MIB-II-MIB"), singleton, group_objectid("1.3.6.1.4.1.77.1.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_workstation : SnmpObjectType
{
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.3.1"), read, description("The number of sessions that this workstation has initiated."), status("mandatory")] uint32 wkstaStatSessStarts = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.3.3"), read, description("The number of connections this workstation has initiated."), status("mandatory")] uint32 wkstaStatUses = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.3.7"), read, description("The number of active uses the workstation is currently \n            maintaining."), status("mandatory")] sint32 wkstaUseNumber = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.3.4"), read, description("The number of failed connections this workstation has \n            experienced."), status("mandatory")] uint32 wkstaStatUseFails = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.3.5"), read, description("The number of sessions broken and then automatically \n            reestablished."), status("mandatory")] uint32 wkstaStatAutoRecs = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.3.6"), read, write, description("The size in kilobytes to which the workstation error log \n            can grow."), status("mandatory")] sint32 wkstaErrorLogSize = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.3.2"), read, description("The number of failed sessions that this workstation has \n            experienced."), status("mandatory")] uint32 wkstaStatSessFails = 0;
};
[description("The table of active uses made by this workstation.\nA use of a remote network resource."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.3"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_wkstaUseTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("0..8"), object_identifier("1.3.6.1.4.1.77.1.3.8.1.1"), read, description("The name of the local devicename (e.g. e: or lpt1:) that \n            is redirected."), status("mandatory"), key, key_order(1)] string useLocalName = "";
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..255"), object_identifier("1.3.6.1.4.1.77.1.3.8.1.2"), read, description("The name of the remote shared resource to which the redirection \n            has been made. (eg. \\\\server\\share)."), status("mandatory"), key, key_order(2)] string useRemote = "";
	[textual_convention("EnumeratedINTEGER"), enumeration("use-ok(1),use-paused(2),use-session-lost(3),use-network-error(4),use-connecting(5),use-reconnecting(6)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.3.8.1.3"), read, description("The status of this connection."), status("mandatory")] string useStatus = "use-ok";
};
[description(""), module_name("LANMGR-MIB-II-MIB"), singleton, group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_server : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.2"), read, description("The number of network services installed on this server."), status("mandatory")] sint32 svSvcNumber = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.4"), read, description("The total number of files that have been opened on the server."), status("mandatory")] uint32 svStatOpens = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.22"), read, write, description("The number of seconds the server waits before \n            disconnecting an idle session.  A value of 0xffff \n            indicates that idle sessions will never be disconnected."), status("mandatory")] sint32 svDisConTime = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.7"), read, description("The number of sessions that have been started on the server."), status("mandatory")] uint32 svStatSOpens = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.24"), read, description("The number of users that have accounts on this server."), status("mandatory")] sint32 svUserNumber = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.26"), read, description("The number of shared resources on this server."), status("mandatory")] sint32 svShareNumber = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("0..255"), object_identifier("1.3.6.1.4.1.77.1.2.1"), read, write, description("A comment describing this server."), status("mandatory")] string svDescription = "";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.23"), read, write, description("The maximum size in kilobytes that the server's audit \n            log can attain."), status("mandatory")] sint32 svAuditLogSize = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.5"), read, description("The total number of communication devices opened on the server."), status("mandatory")] uint32 svStatDevOpens = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.28"), read, description("The number of print queues on this server."), status("mandatory")] sint32 svPrintQNumber = 0;
	[textual_convention("EnumeratedINTEGER"), enumeration("share-level(1),user-level(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.15"), read, description("The type of security being run at this server."), status("mandatory")] string svSecurityMode = "share-level";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.9"), read, description("The number of password violations encountered on the server."), status("mandatory")] uint32 svStatPwErrors = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.13"), read, description("The number of bytes received by this server."), status("mandatory")] uint32 svStatRcvdBytes = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.12"), read, description("The number of bytes sent by the server."), status("mandatory")] uint32 svStatSentBytes = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.19"), read, description("The number of sessions have established to this server."), status("mandatory")] sint32 svSessionNumber = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.8"), read, description("The number of sessions disconnected due to an error on the \n            server."), status("mandatory")] uint32 svStatErrorOuts = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.11"), read, description("The number of system errors encountered on the server."), status("mandatory")] uint32 svStatSysErrors = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.6"), read, description("The total number of print jobs that have been spooled on the \n            server."), status("mandatory")] uint32 svStatQueuedJobs = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.14"), read, description("The mean number of milliseconds it has taken this server \n            to process a workstation I/O request."), status("mandatory")] sint32 svStatAvResponse = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.10"), read, description("The number of access permission violations encountered on this \n            server."), status("mandatory")] uint32 svStatPermErrors = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.16"), read, description("The number of concurrent users this server is able to support."), status("mandatory")] sint32 svUsers = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.21"), read, description("The number of sessions that the server has \n            auto-disconnected due to timeout."), status("mandatory")] sint32 svAutoDisconnects = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.18"), read, description("The number of times the server has needed a big buffer in the \n            process of handling a client request and could not allocate one."), status("mandatory")] uint32 svStatBigBufsNeeded = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.17"), read, description("The number of times the server has needed a request buffer in \n            the process of handling a client request and could not allocate \n            one."), status("mandatory")] uint32 svStatReqBufsNeeded = 0;
};
[description("A list of service entries describing network services installed \n            on this server.\nThe names of the network services installed on this server."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_svSvcTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("cannot-be-uninstalled(1),can-be-uninstalled(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.3.1.4"), read, description("Whether or not the network service specified by this entry \n            can be uninstalled."), status("mandatory")] string svSvcCanBeUninstalled = "cannot-be-uninstalled";
	[textual_convention("EnumeratedINTEGER"), enumeration("cannot-be-paused(1),can-be-paused(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.3.1.5"), read, description("Whether or not the network service specified by this entry \n            can be paused."), status("mandatory")] string svSvcCanBePaused = "cannot-be-paused";
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.2.3.1.1"), read, description("The name of the network service described by this entry."), status("mandatory"), key, key_order(1)] string svSvcName = "";
	[textual_convention("EnumeratedINTEGER"), enumeration("uninstalled(1),install-pending(2),uninstall-pending(3),installed(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.3.1.2"), read, description("The installation status of the network service specified by \n            this entry."), status("mandatory")] string svSvcInstalledState = "uninstalled";
	[textual_convention("EnumeratedINTEGER"), enumeration("active(1),continue-pending(2),pause-pending(3),paused(4)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.3.1.3"), read, description("The operating status of the network service specified by \n            this entry."), status("mandatory")] string svSvcOperatingState = "active";
};
[description("The table of active user accounts on this server.\nOne of the user accounts on this server."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_svUserTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..20"), object_identifier("1.3.6.1.4.1.77.1.2.25.1.1"), read, description("The name of the user account."), status("mandatory"), key, key_order(1)] string svUserName = "";
};
[description("A list of session entries corressponding to the current sessions \n            clients have with this server.\nA session that is currently established to this server."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_svSessionTable : SnmpObjectType
{
	[textual_convention("EnumeratedINTEGER"), enumeration("active(1),deleted(2)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.8"), read, write, description("Used to indicate the state of this session. \n            The deleted state will never be returned on a \n            session but can be used in set requests to delete \n            a session."), status("mandatory")] string svSesState = "active";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.6"), read, description("The length of time in seconds this session has been idle."), status("mandatory")] uint32 svSesIdleTime = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..20"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.2"), read, description("The name of the user at the remote machine that established the \n            session."), status("mandatory"), key, key_order(2)] string svSesUserName = "";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.4"), read, description("The number of open files, devices and pipes are open on this \n            session."), status("mandatory")] sint32 svSesNumOpens = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.1"), read, description("The name of the remote machine that has established the session."), status("mandatory"), key, key_order(1)] string svSesClientName = "";
	[textual_convention("EnumeratedINTEGER"), enumeration("down-level(1),dos-lm(2),dos-lm-2(3),os2-lm-1(4),os2-lm-2(5),dos-lm-2-1(6),os2-lm-2-1(7),afp-1-1(8),afp-2-0(9),nt-3-1(10)"), encoding("INTEGER"), object_syntax("EnumeratedINTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.7"), read, description("The type of client that established the session."), status("mandatory")] string svSesClientType = "down-level";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.2.20.1.5"), read, description("The length of time in seconds this session has been established."), status("mandatory")] uint32 svSesTime = 0;
};
[description("The table of shares on this server.\nA table entry corresponding to a single share on this server."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_svShareTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..12"), object_identifier("1.3.6.1.4.1.77.1.2.27.1.1"), read, description("The name of the share."), status("mandatory"), key, key_order(1)] string svShareName = "";
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..255"), object_identifier("1.3.6.1.4.1.77.1.2.27.1.2"), read, description("The local name of this shared resource."), status("mandatory")] string svSharePath = "";
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("0..255"), object_identifier("1.3.6.1.4.1.77.1.2.27.1.3"), read, description("A comment associated with this share."), status("mandatory")] string svShareComment = "";
};
[description("The table of print queues on this server.\nA table entry corresponding to a single print queue on this \n            server."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.2"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_svPrintQTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..12"), object_identifier("1.3.6.1.4.1.77.1.2.29.1.1"), read, description("The name of the print queue."), status("mandatory"), key, key_order(1)] string svPrintQName = "";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.2.29.1.2"), read, description("The number of jobs currently in this print queue."), status("mandatory")] sint32 svPrintQNumJobs = 0;
};
[description(""), module_name("LANMGR-MIB-II-MIB"), singleton, group_objectid("1.3.6.1.4.1.77.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_domain : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.4.3"), read, description("The number of entries in domOtherDamainTable."), status("mandatory")] sint32 domOtherDomainNumber = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.4.2"), read, description("The name of the domain to which this machine is logged on."), status("mandatory")] string domLogonDomain = "";
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.4.7"), read, description("The number of entries in domLogonTable."), status("mandatory")] sint32 domLogonNumber = 0;
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.4.5"), read, description("The number of entries in domServerTable."), status("mandatory")] sint32 domServerNumber = 0;
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.4.1"), read, description("The name of the primary domain to which this machine belongs."), status("mandatory")] string domPrimaryDomain = "";
};
[description("The list of other domains which this machine is monitoring.\nAn entry in the table of other domains."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_domOtherDomainTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.4.4.1.1"), read, write, description("The name of an additional domain which this machine is \n            monitoring."), status("mandatory"), key, key_order(1)] string domOtherName = "";
};
[description("The list of domain logons which this machine has processed.\n            Available only on servers acting as primary or backup domain \n            controllers.  To compile the complete table of all logons on \n            a given domain it is necessary to query all primary and backup \n            domain controllers on the domain.\nAn entry in the logon table."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_domLogonTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..20"), object_identifier("1.3.6.1.4.1.77.1.4.8.1.1"), read, description("The name of the user who is logged on to this domain."), status("mandatory"), key, key_order(1)] string domLogonUser = "";
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.4.8.1.2"), read, description("The name of the machine from which the user logged on."), status("mandatory"), key, key_order(2)] string domLogonMachine = "";
};
[description("The list of non-hidden servers that are on all of the \n            domains this machine is monitoring.\nAn entry in the domain server table."), module_name("LANMGR-MIB-II-MIB"), group_objectid("1.3.6.1.4.1.77.1.4"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_domServerTable : SnmpObjectType
{
	[textual_convention("DisplayString"), encoding("OCTETSTRING"), object_syntax("DisplayString"), variable_length("1..15"), object_identifier("1.3.6.1.4.1.77.1.4.6.1.1"), read, description("The name of a server on one of the domains which this \n            machine is monitoring."), status("mandatory"), key, key_order(1)] string domServerName = "";
};
[description(""), module_name("LANMGR-MIB-II-MIB"), singleton, group_objectid("1.3.6.1.4.1.77.1.1"), dynamic, provider("MS_SNMP_INSTANCE_PROVIDER")]
class SNMP_LANMGR_MIB_II_MIB_common : SnmpObjectType
{
	[textual_convention("INTEGER"), encoding("INTEGER"), object_syntax("INTEGER"), object_identifier("1.3.6.1.4.1.77.1.1.4"), read, description("The time, represented as seconds since January 1, 1970, at \n            which the statistics on this node were last cleared."), status("mandatory")] sint32 comStatStart = 0;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.77.1.1.1"), read, description("The major release version number of the software."), status("mandatory")] string comVersionMaj = "";
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.77.1.1.2"), read, description("The minor release version number of the software."), status("mandatory")] string comVersionMin = "";
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.1.7"), read, description("The number of network I/O operations on this node that failed \n            completion."), status("mandatory")] uint32 comStatFcNetIOs = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.1.6"), read, description("The number of network I/O operations on this node that failed \n            issue."), status("mandatory")] uint32 comStatFiNetIOs = 0;
	[textual_convention("Counter"), encoding("Counter"), object_syntax("Counter"), object_identifier("1.3.6.1.4.1.77.1.1.5"), read, description("The number of network I/O operations submitted on this node."), status("mandatory")] uint32 comStatNumNetIOs = 0;
	[textual_convention("OCTETSTRING"), encoding("OCTETSTRING"), object_syntax("OCTETSTRING"), object_identifier("1.3.6.1.4.1.77.1.1.3"), read, description("The type of LAN Manager software this system is running.  \n            If no server is running the node is a workstation.  This \n            object type is an octet string of length 4 treated as a bit \n            map (with the least significant bit being bit 0):\n\n            OCTET 1 --  Software Type  Bit\n                        -------------  ---\n                        workstation     0\n                        server          1\n                        sqlserver       2\n                        Primary DC      3\n                        Backup DC       4\n                        Time Source     5\n                        AFP Server      6\n                        Netware Server  7\n\n            OCTET 2 --  undefined\n\n            OCTET 3 --  undefined\n\n            OCTET 4 --  undefined"), status("mandatory")] string comType = "";
};

