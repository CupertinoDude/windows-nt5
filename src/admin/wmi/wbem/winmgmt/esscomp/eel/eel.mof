
#pragma namespace("\\\\.\\ROOT")

instance of __namespace
{
    Name = "EMM";
};

#pragma namespace("\\\\.\\ROOT\\EMM")

//**************************************************************************
//* Class: Microsoft_ManagedElement
//*
//**************************************************************************

[
 DisplayName("Microsoft Managed Element"),
 Description("The base class for all managed elements in the emm namespace."),
 Locale( 0x409 ),
 UUID("FD0E3221-C7BF-49F1-BAC1-A310C650037D")
]
class Microsoft_ManagedElement
{

};

//**************************************************************************
//* Class: Microsoft_EELEntry
//* 
//**************************************************************************
[ 
 DisplayName("Enterprise Envent Log Entry"),
 Description("The EELEntry class represents entries in the "
             "Enterprise Event Log."), 
 Locale (0x409), 
 UUID ("ED0E3220-C7BF-49F1-BAC1-A310C650037D") 
] 
class Microsoft_EELEntry : Microsoft_ManagedElement
{
    [
     DisplayName("Event ID"),
     Description("The EventID property is the GUID. It identifies "
                 "the event. This is specific to the source that generated "
                 "the event log entry, and is used, together with "
                 "SourceSubsystemName to uniquely identify an event type.")
    ]
    string EventID;

    [
     DisplayName("Source Subsystem Type"),
     Description("The SourceSubsystemType property reveals the source within "
                 "the node - Ntevent log, SMS log, etc..")
    ]
    string SourceSubsystemType;

    [
     DisplayName("Source Subsystem Name"),
     Description ("The SourceSubsystemName specifies the name of the "
                  "source (application, service, driver, subsystem) "
                  "that generated the entry.")
    ]
    string SourceSubsystemName;

    [
     DisplayName("System About"),
     Description("The SystemAbout property specifies the name of the "
                 "system that generated this event.")
    ]
    string SystemAbout;

    [
     DisplayName("System From"),
     Description("The SystemFrom property is the original machine that "
                 "reported the event.  This may be the same as the "
                 "SystemAbout property, but often will be different.")
    ]
    string SystemFrom;

    [
     DisplayName("Delivered By"),
     Description("The DeliveredBy property specifies the name of the "
                 "computer that deliverd this event. This may be the same "
                 "as the SystemAbout property, but often will be different.")
    ]
    string DeliveredBy;

    [
     DisplayName("Category"),
     Description("The Category property represent the 'standard' category "
                 "of the event as determined by system management guidelines.")
    ]
    string Category;

    [
     DisplayName("Sub-Category"),
     Description("The Subcategory property represents additional "
                 "categorization of the event with the Category.")
    ]
    string Subcategory;

    [
     DisplayName("Severity"),
     Description("The Severity property shows the severity level "
                 "assigned to the event by the logging facility.") 
    ]
    uint16 Severity;

    [
     DisplayName("Priority"),
     Description("The Priority property contains the priority level "
                 "assigned to the event by the logging facility.")
    ]
    uint16 Priority;

    [
     DisplayName("Time Generated"),
     Description("The TimeGenerated property specifies the time at which "
                 "the source generated the event.  This is the actual "
                 "event time on the local machine.")
    ]
    datetime TimeGenerated;

    [
     DisplayName("Logging Time"),
     Description("The LoggingTime property holds the time when the "
                 "event was recorded on the system. As events are rolledup "
                 "to higher tiers, this time will change and be overwritten. "
                 "It will always hold the time which coresponds to the "
                 "current tier it was logged on.")
    ]
    datetime LoggingTime;

    [
     DisplayName("Rollup Time"),
     Description("The RollupTime property holds the time when the event "
                 "was rolled up, or last forwarded from one level to the "
                 "next.  This time will change as event are forwarded, but "
                 "it will always hold the time the event was last sent.")
    ]
    datetime RollupTime;

    [
     DisplayName("Message"),
     Description("The Message property has additional text attached to "
                 "the log entry (optional). Provides additional details of "
                 "the event occurrence.")
    ]
    string Message;

    [
     DisplayName("Original Event"),
     Description("The OriginalEvent property is an embedded copy of the "
                 "event instance received by the local logging consumer.")
    ]
    __Event OriginalEvent;

    [ 
     Key,
     KeyHole, 
     DisplayName("RecordNumber"),
     Description("The RecordNumber identifies the event within the "
                 "Eventlog logfile. This is specific to the logfile and is "
                 "used together with the logfile name to uniquely identify "
                 "an instance of this class.")
    ]
    string RecordNumber;

    [
     DisplayName("User"),
     Description("The User property indentifies the name of the logged on "
                 "user when the event ocurred. If the user name cannot be "
                 "determined this will be NULL.")
    ]
    string User;
    
    [
     DisplayName("Type Event"),
     Description ("The Type property specifies the type of event."),
     ValueMap {"0","1", "2", "3","4","5", "6"}, 
 	 Values {"Alert", "Error", "Warning", "Information", 
		"Successful security audit","Failed security audit", "Extraneous"}
    ]
    uint8 Type;

    [
     DisplayName("Classification"),
     Description("The classification property specifies the usage of the "
                 "type of event."), 
     ValueMap {"1", "2", "3","4","5","6","7","8"} , 
	 Values {"Discovery", "Inventory", "Configuration", 
		"Operation/Availability", "Problem management", 
		"Threshold crossings", "Performance and Capacity", "Billing"} 
		]
    uint32 Classification;

    [
     DisplayName("Log Type"), 
     Description("The LogType property indicates which type of log file "
                 "this EELEntry belongs to.  For example, 'System'."), 
     ValueMap {"1", "2", "3"}, 
     Values {"System", "Application", "Security"}
    ]
    uint32 LogType;
};

//**************************************************************************
//* Class: Microsoft_EELTOC
//**************************************************************************
[
 Description("The EELTOC class represents the Enterprise Event Log Table "
             "of Contents of log entries."), 
 DisplayName("Enterprise Event Log Table Of Contents"),
 Locale(0x409), 
 UUID("B8F65E43-04B6-41B0-BBE7-2700AC714400") 
] 
class Microsoft_EELTOC : Microsoft_ManagedElement
{
    [ 
     Key, 
     DisplayName("Category"),
     Description("The Category propterty identifies the type of event "
                 "contained in the OriginalEvent embedded object property.")
    ]
    string Category;

    [
     DisplayName("Description"),
     Description("The Description property describes the EELTOC entry.")
    ]
    string Description;
};

//**************************************************************************
//* Class: Microsoft_EELTOCEntryInFile
//* Derived from: 
//**************************************************************************
[
 Association, 
 Description("The EELTOCEntryInFile class associates the "
             "Table of Contents entry (TOC) with the Enterprise Event Log (EEL) entry."), 
 DisplayName("Entry in EEL Table Of Contents"),
 Locale (0x409), UUID ("E931FF96-5E93-4E9A-B610-21386F845D4E") ] 
 class Microsoft_EELTOCEntryInFile
{
    [
     Key, 
     DisplayName("Table Of Contents"),
     Description("The TOC property references the EELTOC class "
                 "pertaining to the specific event entry.")
    ]
    Microsoft_EELTOC REF TOC;

    [
     Key, 
     DisplayName("EEL Entry"),
     Description("The Entry property refernces the EELEntry that is "
                 "called out by the TOC.")
    ]
    Microsoft_EELEntry REF Entry;
};
