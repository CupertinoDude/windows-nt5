#pragma namespace ("\\\\.\\root")

instance of __Namespace
{
    Name = "test";
};

#pragma namespace ("\\\\.\\root\\test")

class TestClass
{
    [key] string Name;
    string Description;
    sint32 IntProp;
    TestClass ref RefProp;
    string StringProp1;
    string StringProp2; 
};

#pragma namespace ("\\\\.\\root\\default")
                        
[dynamic, provider("Microsoft WMI Template Provider")] 
class TestTemplate : MSFT_TemplateBase
{
    [key] string Name;
    sint32 IntProp;
    string StringProp1;
    string StringProp2;
    string Namespace;
    boolean Test1;
    boolean Test2;
    boolean Test3;
    boolean Test4;
    boolean Test5;
};
  
class TestClass
{
    [key] string Name;
    string Description;
    sint32 IntProp;
    TestClass ref RefProp;
    string StringProp1;
    string StringProp2; 
};

instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder1";
    Template = "TestTemplate";
    Target = instance of TestClass 
    { 
       Description="Checks tmpl_subst_str and tmpl_prop_val qualifiers. "
                   "Look to make sure that StringProp1 is the same as "
                   "StringProp1(on the template classe) and that IntProp "
                   "the same as IntProp (on the template class). "
                   "Also make sure that StringProp2 is "
                   "InsertionStr=<__Relpath>,InsertionInt=\"<IntProp>\"";
       
       [tmpl_subst_str("%Name%.TestBuilder1")] Name;
       [tmpl_prop_val("IntProp")] IntProp;
       [tmpl_prop_val("StringProp1")] StringProp1;
       [tmpl_subst_str( "InsertionStr=%__Relpath%,"
                        "InsertionInt=\"%IntProp%\"")] StringProp2;
    };
    Order = 1;
    ControllingProperty = "Test1";
};


instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder2";
    Template = "TestTemplate";
    Target = instance of TestClass 
    { 
        Description="Test referencing the key props of a target object that "
                    "has previously been instantiated. ";
        
        [tmpl_subst_str("%Name%.TestBuilder2")] Name;
        [tmpl_prop_val("__BUILDER.TestBuilder1.__RELPATH")] RefProp;
        [tmpl_subst_str("%__BUILDER.TestBuilder1.Name%")] StringProp1;
    };
    Order = 2;
    ControllingProperty = "Test2";
};

instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder3";
    Template = "TestTemplate";
    Target = instance of TestClass 
    {
        [tmpl_prop_val("Name")] Name; 
        Description="Test key hole support. Look to make sure there is "
                    "a guid generated for the Name property." ;
    };
    ControllingProperty = "Test3";
};

instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder4";
    Template = "TestTemplate";
    Target = 
    instance of TestClass
    {
        Description = "Test out ConditionSubstitution and PrefixedWhereClause."
                      "StringProp1 should contain a valid query. Also tests "
                      "Out double percent syntax on the string substitution. "
                      "StringProp2 should contain a %NOINSERT% substring ";

        [tmpl_subst_str("%Name%.TestBuilder4")] Name;
        [tmpl_subst_str("a non-insertion string %%NOINSERT%%")] StringProp2;
        [tmpl_subst_str("SELECT * FROM FOO "
            "%!ConditionalSubstitution(\"WHERE \",StringProp1)% "
            "%!PrefixedWhereClause(TargetInstance,StringProp1)%")] StringProp1;
    };
    ControllingProperty = "Test4";
};

instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder5";
    Template = "TestTemplate";
    Target = instance of TestClass 
    {
        [tmpl_prop_val("Name")] Name; 
        Description="Test instantiation in another support. "
                    "Look to make sure there is an object in this namespace."
                    "that has the same name as the template." ;
    };
    ControllingProperty = "Test5";
    NamespaceProperty = "Namespace";
};

instance of MSFT_TemplateBuilder
{
    Name = "TestBuilder6";
    Template = "TestTemplate";
    Target = instance of TestClass 
    {
        [tmpl_prop_val("Name")] Name; 
        Description="Test instantiation in another support. "
                    "Look to make sure there is an object in this namespace."
                    "that has the same name as the template." ;
    };
    ControllingProperty = "Test5";
    NamespaceProperty = "Namespace";
};

instance of TestTemplate
{
    Name = "Test1";
    IntProp = 99;
    StringProp1 = "InsertionString";
    StringProp2 = "\"InsertionStringWithQuotes\"";
    Test1 = TRUE;
    Test2 = TRUE;
};

instance of TestTemplate
{
    Test3 = TRUE;
};

instance of TestTemplate
{
    Name = "Test2";

    Test1 = FALSE;
    Test2 = FALSE;
    Test4 = TRUE;
    
    StringProp1 = "A < 30 and ( B > 20 and X.Y = \"Foobar\") ";
    StringProp2 = "There should be no insertion here %%NOINSERT%%";
};

instance of TestTemplate
{
    Name = "NamespaceTest1";
    Test5 = TRUE;
    Namespace = "\\\\.\\root\\test";
};

instance of TestTemplate
{
    Name = "NamespaceTest2";
    Test5 = TRUE;
};





