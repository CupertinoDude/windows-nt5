/************************************************************************

THIS IS THE MASTER MOF.  ALL CHANGES MUST OCCUR TO THIS MOF

To make a change:

1. edit this MOF
2. Generate new updprov.mof & updprov.mfl:  mofcomp -amendment:ms_409 -MOF:updprov.mof -MFL:updprov.mfl updprov_Master.mof
3. edit updprov.mfl to keep it namespace agnostic. 

*************************************************************************/


Qualifier Description : Amended;

/**************************************************************************
    Core Schema
***************************************************************************/
[Locale(0x409)]
class MSFT_UpdatingConsumer : __EventConsumer
{
    [
        Key,
        Description( "String uniquely identifying this consumer.")
    ] 
    string Id;

    [
        Description( "The user-readable name for this consumer." )
    ] 
    string Name;
    
    [
        Description( "The name of the scenario that this consumer is "
                     "associated with." )
    ] 
    string Scenario;
    
    [        
        Description( "Optional string specifying the namespace where the "
                     "data query is to be performed." )
    ] 
    string DataNamespace;
    
    [
        Description( "Optional string specifying the namespace where the "
                     "update is to be performed." )
    ] 
    string UpdateNamespace;

    [
        Description( "Optional string array containing the data queries to "
                     "execute to obtain input for the associated update " 
                     "commands.  A data query and an update command are "
                     "associated when they have the same index in their "
                     "respective arrays." )
    ] 
    string DataQueries[];
    
    [ 
        Values{ "CreateOrUpdate", "UpdateOnly", "CreateOnly" }, 
        ValueMap{ "0", "1", "2" },
        Description( "Optional array of flags permitting the user to specify "
                     "additional semantics for associated INSERT commands. "
                     "Flags are ignored for DELETE and UPDATE commands. "
                     "A flag and an update command are associated when they "
                     "have the same index in their respective arrays." ) 
    ] 
    uint32 Flags[];
   
    [
        Description( "An array of UQL statements to be executed when the"
                     "consumer is executed.  This property can be NULL "
                     "specifying this Updating Consumer is a NoOp." )
    ]
    string Commands[];
};

[
    Locale(0x409),
    Description( "An instance of this class represents a logical grouping "
                 "of updating consumers and instances of correlation state." ) 
]
class MSFT_UCScenario
{
    [
        Key,
        Description( "String uniquely identifying the scenario." )
    ] 
    string Id; 

    [
        Key,
        Description( "The user-readable name for this scenario." )
    ]
    string Name;
};

[
    Locale(0x409),
    Description( "Base class for all event classes where instances will be "
                 "signaled by the Updating Consumer Provider." )
]
class MSFT_UCEventBase : __ExtrinsicEvent
{
};

/**************************************************************************
    Tracing Event Classes
***************************************************************************/

[
    Locale(0x409),
    Description( "Base class for all UC tracing event classes." )
]
class MSFT_UCTraceEventBase : __ExtrinsicEvent
{
    [
        Description( "Instance of the updating consumer that is being "
                     "executed." )
    ]
    MSFT_UpdatingConsumer Consumer;

    [
        Description( "A unique id representing the execution of an updating " 
                     "consumer.  This id permits correlation of all the trace "
                     "events associated with an execution of the consumer." )
    ]
    string ExecutionId;
    
    [
        Description( "String giving any extra information about the error." )
    ]
    string ErrorStr;
    
    [
        Description( "The index of the command the trace event is associated "
                     "with.  The value of this property can be NULL if the "
                     "there is no associated command." )
    ]
    uint32 CommandIndex;
    
    [
        Description( "The status code representing the outcome of the action "
                     "the trace event is associated with." )
    ]
    uint32 StatusCode;

    [
        Description( "The event that triggered this updating consumer to be "
                     "executed." )
    ]
    __Event Event;
};

[
    Locale(0x409),
    Description( "Represents an execution of the updating consumer. There is "
                 "exactly one of these events signaled each time an event "
                 "triggers an updating consumer to be executed." )
]
class MSFT_UCExecutedTraceEvent : MSFT_UCTraceEventBase
{
};

[
    Locale(0x409),
    Description( "Represents the execution of a command of the updating "
                 "consumer." )
]
class MSFT_UCCommandTraceEvent : MSFT_UCTraceEventBase
{
    [
        Description( "The data object used as input to the command.  This "
                     "object belongs to the result set obtained from the "
                     "execution of the data query associated with the "
                     "command." )
    ]
    object Data;
};

[
    Locale(0x409),
    Description( "Represents the execution of an INSERT command of the "
                 "updating consumer." )
]
class MSFT_UCInsertCommandTraceEvent : MSFT_UCCommandTraceEvent
{
};

[
    Locale(0x409),
    Description( "Represents the execution of an UPDATE command of the "
                 "updating consumer." )
]
class MSFT_UCUpdateCommandTraceEvent : MSFT_UCCommandTraceEvent
{
};

[
    Locale(0x409),
    Description( "Represents the execution of an DELETE command of the "
                 "updating consumer." )
]
class MSFT_UCDeleteCommandTraceEvent : MSFT_UCCommandTraceEvent
{
};

[
    Locale(0x409),
    Description( "Represents the altering of an instance by the updating "
                 "consumer when executing a command." )
]
class MSFT_UCInstanceTraceEvent : MSFT_UCTraceEventBase
{
    [
        Description( "The data object used as input to the command.  This "
                     "object belongs to the result set obtained from the "
                     "execution of the data query associated with the "
                     "command." )
    ]
    object Data;

    [
        Description( "The instance that the altering operation is applied to.")
    ]
    object Inst;
};

[
    Locale(0x409),
    Description( "Represents the insertion of an instance by the updating "
                 "consumer when executing a command." )
]
class MSFT_UCInsertInstanceTraceEvent : MSFT_UCInstanceTraceEvent
{
};

[
    Locale(0x409),
    Description( "Represents the deletion of an instance by the updating "
                 "consumer when executing a command." )
]
class MSFT_UCDeleteInstanceTraceEvent : MSFT_UCInstanceTraceEvent
{
};

[
    Locale(0x409),
    Description( "Represents the modification of an instance by the updating "
                 "consumer when executing a command." )
]
class MSFT_UCUpdateInstanceTraceEvent : MSFT_UCInstanceTraceEvent
{
    [
        Description( "The instance before the modification is made." )
    ]
    object OriginalInst;
};

/**************************************************************************
    Association classes
***************************************************************************/

[
    Locale(0x409),
    Description( "An instance of this class defines the association between "
                 "a set of instances modified by updating consumers and the "
                 "scenario the consumers belong to." )
]
class MSFT_UCScenarioAssociationInfo
{
    [
        Key,
        Description( "A string uniquely identifying this object." )
    ]
    string Id;

    [
        Description( "The user-readable name for this object." )
    ] 
    string Name;
    
    [
        Description( "The name of the scenario to associate the set of "
                     "instances to." )
    ] 
    string Scenario;

    [
        Description( "The query selecting the set of instances to associate "
                     "to the scenario." )
    ]
    string Query;
};


[
    Locale(0x409), 
    Dynamic,    
    Association,
    Provider("Microsoft WMI Updating Consumer Assoc Provider"),
    Description( "Associates a scenario object to an object modified by "
                 "updating consumers belonging to the scenario." )
]
class MSFT_UCScenarioAssociation
{
    [ 
        Key,
        Description( "The reference to the scenario object." )
    ] 
    MSFT_UCScenario ref Scenario;
    
    [
        Key,
        Description( "The reference to the instance object." ) 
    ]
    object ref Object;
};


/***************************************************************************
    Internal Classes and Registrations 
****************************************************************************/

instance of __Win32Provider as $UPDPROV_P
{
    Name = "Microsoft WMI Updating Consumer Provider";
    Clsid = "{A3A16907-227B-11d3-865D-00C04F63049B}";
    HostingModel = "WmiCore";
};

instance of __Win32Provider as $UPDPROV_PA
{
    Name = "Microsoft WMI Updating Consumer Assoc Provider";
    Clsid = "{74E3B84C-C7BE-4e0a-9BD2-853CA72CD435}";
    HostingModel = "WmiCore";
};

instance of __Win32Provider as $UPDPROV_PE
{
    Name = "Microsoft WMI Updating Consumer Event Provider";
    Clsid = "{74E3B84C-C7BE-4e0a-9BD2-853CA72CD435}";
    HostingModel = "Decoupled:Com";    
};

instance of __InstanceProviderRegistration
{
    Provider = $UPDPROV_PA;
    SupportsPut = TRUE;
    SupportsGet = TRUE;
    SupportsDelete = TRUE;
    SupportsEnumeration = TRUE;
    QuerySupportLevels = NULL;
};

instance of __EventProviderRegistration
{  
    Provider = $UPDPROV_PE;       
    EventQueryList = { "SELECT * FROM MSFT_UCTraceEventBase",
                       "SELECT * FROM MSFT_UCEventBase" };
};

class MSFT_UCScenarioControl : __EventConsumer
{
    [key] string Name;
};

instance of MSFT_UCScenarioControl as $UPDPROV_CSC
{   
    Name = "Microsoft WMI Updating Consumer Scenario Control";
};

instance of __EventFilter as $UPDPROV_FSC
{
    Name = "Microsoft WMI Updating Consumer Scenario Control";
    Query = "SELECT * FROM __InstanceOperationEvent "
            "WHERE TargetInstance ISA 'MSFT_UCScenario'";
    QueryLanguage = "WQL";
};

instance of __FilterToConsumerBinding
{
    Consumer = $UPDPROV_CSC;
    Filter = $UPDPROV_FSC;
    DeliverSynchronously = TRUE;
};

instance of __EventConsumerProviderRegistration
{
    Provider = $UPDPROV_P;
    ConsumerClassNames = { "MSFT_UpdatingConsumer", "MSFT_UCScenarioControl" };
};




