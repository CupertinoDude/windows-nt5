

#pragma namespace ("\\\\.\\root\\cimv2")

Qualifier Description : Amended;





[
    Locale(0x409),
    Description( "Event representing the arrival of a forwarded message. "
                 "A forwarded message contains information originating from "
                 "a Forwarding Consumer." )
]
class MSFT_ForwardedMessageEvent : __ExtrinsicEvent 
{
    [
        Description( "The time that the message was sent by the Forwarding "
                     "Consumer." )
    ]
    datetime Time;                          

    [
        Description( "The name of the machine the message was sent from by "
                     "the Forwarding Consumer." )
    ]
    string Machine;

    [
        Description( "The name of the Forwarding Consumer that sent the "
                     "message." )
    ]
    string Consumer;

    [
        Description( "The namespace of the Forwarding Consumer that sent "
                     "the message." )
    ]
    string Namespace;

    [
        Description( "The sid of the account that the Forwarding Consumer, "
                     "that sent the message, was executing as. " )
    ]
    uint8 Account[];    

    [
        Description( "Indicates whether the message is authenticated or not." )
    ]
    boolean Authenticated;
};

[
    Locale(0x409),
    Description( "Represents the arrival of a forwarded event.  A forwarded "
                 "event is an event that has been signaled one machine and "
                 "then forwarded to another by a Forwarding Consumer." )
]
class MSFT_ForwardedEvent : MSFT_ForwardedMessageEvent
{
    [
        Description( "The event that was received by the Forwarding Consumer.")
    ]
    __Event Event;
};

/* Removed From Whistler 
[
    Locale(0x409),
    Description( "Represents the arrival of a forwarded event "
                 "acknowledgement." )
]
class MSFT_ForwardedAckEvent : MSFT_ForwardedMessageEvent
{
    [
        Description( "The event that triggered the Forwarding Consumer to "
                     "send the message being acknowledged." )
    ]
    __Event Event;

    [
        Description( "The status code of the acknowledgement." )
    ] 
    uint32 Status;

    [
        Description( "The target machine the acknowledgement was sent from." )
    ]
    string Target;

    [
        Description( "The QoS that the forwarding consumer used when "
                     "forwarding the message being acknowledged.")
    ]
    uint32 Qos;

    [
        Description( "The authentication value the forwarding consumer used "
                     "when forwarding the message being acknowledged." )
    ]
    boolean Authentication;

    [
        Description( "The encryption value the forwarding consumer used "
                     "when forwarding the message being acknowledged." )
    ]
    boolean Encryption;

    [
        Description( "The execution id assigned to the forwarding consumer "
                     "when forwarding the message being acknowledged." )
    ]
    string ExecutionId;
};

*/

instance of __Win32Provider as $P
{
    Name = "Microsoft WMI Forwarding Event Provider";
    Clsid = "{7879E40D-9FB5-450a-8A6D-00C89F349FCE}";
    HostingModel = "WmiCore";
};

instance of __EventProviderRegistration
{
    Provider = $P;
    EventQueryList = { "select * from MSFT_ForwardedEvent" };
};

/* Removed From Whistler
instance of __Win32Provider as $PACK
{
    Name = "Microsoft WMI Forwarding Ack Event Provider";
    Clsid = "{D6C74FF3-3DCD-4c23-9F58-DD86F371EC73}";
    HostingModel = "WmiCore";
};

instance of __EventProviderRegistration
{
    Provider = $PACK;
    EventQueryList = { "select * from MSFT_ForwardedAckEvent" };
};
*/