qualifier vendor:ToInstance;
qualifier guid:ToInstance;
qualifier locale:ToInstance;
qualifier displayname:ToInstance;
qualifier perfindex:ToInstance;
qualifier helpindex:ToInstance;
qualifier perfdetail:ToInstance;
qualifier countertype:ToInstance;
qualifier perfdefault:ToInstance;
qualifier defaultscale:ToInstance;

// Registration of the providers.



// HiPerfProvider:

instance of __Win32Provider as $P
{
    Name="SimpleHiPerf_v1";
    CLSID="{72371C12-8F7E-11d2-B34B-00105A1F8177}";
    ClientLoadableCLSID="{72371C12-8F7E-11d2-B34B-00105A1F8177}";
    HostingModel="NetworkServiceHost";
};

instance of __InstanceProviderRegistration
{
    Provider = $P;
    SupportsGet = TRUE;
    SupportsEnumeration = TRUE;
};

[abstract]
class Win32_Perf
{
};

[abstract]
class Win32_PerfRawData : Win32_Perf
{
};

[
  dynamic,
  provider("SimpleHiPerf_v1"),
  displayname("Simple WBEM Perf Counter")
]

class Win32_SimpleHiPerf : Win32_PerfRawData
{
    [key, label] string Name = null;


// Unsigned Counters
// =================

    [
     displayname("Counter1"),
     countertype(0x10000),
     defaultscale(0),
     perfdetail(100)
    ]
    uint32 Counter1 = 0;

    [
     displayname("Counter2"),
     countertype(0x10000),
     defaultscale(0),
     perfdetail(100)
    ]
    uint32 Counter2 = 0;

    [
     displayname("Counter3"),
     countertype(0x10000),
     defaultscale(0),
     perfdetail(100)
    ]
    uint32 Counter3 = 0;

    [
     displayname("Counter4"),
     countertype(0x10000),
     defaultscale(0),
     perfdetail(100)
    ]
    uint32 Counter4 = 0;

    [
     displayname("Counter5"),
     countertype(0x10000),
     defaultscale(0),
     perfdetail(100)
    ]
    uint32 Counter5 = 0;

};


