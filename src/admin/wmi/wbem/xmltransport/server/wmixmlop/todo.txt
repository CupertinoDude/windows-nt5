1. ReadClient call to get large data in request

2. HTTP Header Processing

3. CIM Header Processing

4. Chunked Encoding

5. Keeping TCP connections open

6. Memory leaks - Check whether streams need to be close()ed. See if they are released

7. Clean up the Set* functions in wmi2xml.cpp and header

8. Encode appropriate error objects

9. What to do if the call to load() fails in cim2xml.cpp

10. Stylesheets for everything except Raw XML fails when you do a 
References of {Win32_Processor.DeviceID="CPU0"}

11. Need to bulletproof Parse() functions when some of the element have null string values. For example,
If GetProperty operation is invoked on a class rather than an instance, there's a crash in IIS.
On a similar line, the every fuction in the wmixmlt.cpp returns with WBEM_E_INVALID_PARAMETER if one of the 
parameters is NULL. Before returning we should ensure that the contents of the headers stream are written to 
the socket.

12. Implement Logging for easy debugging

13. In wmixmlt.cpp function SavePrefixAndBodyToIISSocket(), see if the 2 SaveToStream() calls can be coalesced
into one.

14. Get rid of precomp.h and directly include the headers

15. In the function CXmlToWmi::MapContextObject(), we currently map only PROPERTY and PROPERTY.ARRAY elements.
We also need to map PROPERTY.OBJECT and PROPERTY.OBJECTARRAY elements since these can be properties in 
an IWbemContext object.