//***************************************************************************
//
// Copyright (c) 1997-1999 Microsoft Corporation
//
//  WMIXMLT.IDL
//
//  Interfaces for the WMI XML Translator
//
//***************************************************************************


[
	uuid(dba159c1-a4dc-11d1-8ae9-00600806a9b6),
	lcid(0x00),
	version(1.0),
	helpstring("Microsoft WMI XML V1.0")
]
library WmiXML
{
    importlib("stdole32.tlb");

    interface IWmiXMLTranslator;

	typedef 
	[
		v1_enum, 
		uuid(AB9FEE54-F41C-11d2-B35C-00105A1F473A),
		helpstring("Specifies level of Qualifier filtering")
	] 
	enum WmiXMLFilterEnum
    {
        wmiXMLFilterNone = 0x0,
		wmiXMLFilterLocal = 0x1,
        wmiXMLFilterPropagated = 0x2,
		wmiXMLFilterAll = 0x3
    } WmiXMLFilterEnum;

	typedef 
	[
		v1_enum, 
		uuid(F0F3D37C-FC2C-11d2-B362-00105A1F473A),
		helpstring("Specifies version of DTD to use")
	] 
	enum WmiXMLDTDVersionEnum
    {
        wmiXMLDTDVersion_2_0 = 0x0
    } WmiXMLDTDVersionEnum;

    typedef 
	[
		v1_enum, 
		uuid(E0E6CF04-11FB-11d3-B366-00105A1F473A),
		helpstring("Specifies level of Class Origin filtering")
	] 
	enum WmiXMLClassOriginFilterEnum
    {
        wmiXMLClassOriginFilterNone = 0x0,
		wmiXMLClassOriginFilterClass = 0x1,
		wmiXMLClassOriginFilterInstance = 0x2,
		wmiXMLClassOriginFilterAll = 0x3
    } WmiXMLClassOriginFilterEnum;

    typedef 
	[
		v1_enum, 
		uuid(F410B41E-B56C-46a8-8C89-DD70EDE39C9F),
		helpstring("Specifies the type of DECLGROUP element to generate in a DECLARATION element")
	] 
	enum WmiXMLDeclGroupTypeEnum
    {
        wmiXMLDeclGroup = 0x0,
		wmiXMLDeclGroupWithName = 0x1,
		wmiXMLDeclGroupWithPath = 0x2
    } WmiXMLDeclGroupTypeEnum;

    [
		uuid(3b418f72-a4d7-11d1-8ae9-00600806d9b6),
		helpstring("WMI XML Translator Control")
	]
    coclass WmiXMLTranslator
    {
        [default] interface IWmiXMLTranslator;
    };
};

[
	object, 
	local, 
	uuid(5d7b2A7c-a4e0-11d1-8ae9-00600806d9b6), 
	dual,
	hidden,
	nonextensible,
	oleautomation,
	helpstring("WMI XML Translator Dual Interface")
]
interface IWmiXMLTranslator  : IDispatch
{
	[
		propget, 
		id(1),
		helpstring("Specifies the location of the validating DTD")
	] 
	HRESULT SchemaURL([retval, out] BSTR * strURL);
	[
		propput, 
		id(1)
	] 
	HRESULT SchemaURL([in] BSTR strURL);

	[
		propget, 
		id(2),
		helpstring("Specifies whether WMI-specific extensions may be generated")
	] 
	HRESULT AllowWMIExtensions([retval, out] VARIANT_BOOL *bWMIExtensions);
	[
		propput, 
		id(2)
	] 
	HRESULT AllowWMIExtensions([in] VARIANT_BOOL bWMIExtensions);

	[
		propget, 
		id(3),
		helpstring("Specifies the level of Qualifier information in the output XML")
	] 
	HRESULT QualifierFilter([retval, out] WmiXMLFilterEnum *iQualifierFilter);
	[
		propput, 
		id(3)
	] 
	HRESULT QualifierFilter([in] WmiXMLFilterEnum iQualifierFilter);

    [
		propget, 
		id(4),
		helpstring("Specifies whether to include an explicit value for the HOST element; FALSE indicates to use '.' instead.")
	] 
	HRESULT HostFilter([retval, out] VARIANT_BOOL *bHostFilter);
	[
		propput, 
		id(4)
	] 
	HRESULT HostFilter([in] VARIANT_BOOL bHostFilter);

	[
		propget, 
		id(5),
		helpstring("Specifies the version of the CIM DTD to use")
	] 
	HRESULT DTDVersion([retval, out] WmiXMLDTDVersionEnum *iDTDVersion);
	[
		propput, 
		id(5)
	] 
	HRESULT DTDVersion([in] WmiXMLDTDVersionEnum iDTDVersion);

	[
		helpstring("Maps a single class or instance to XML"),
		id(6)
	]
	HRESULT GetObject(
	// Identifies the CIM namespace
		[in]	BSTR	strNamespacePath,
	// CIM object path (relative to the above) 
		[in]	BSTR	strObjectPath,
	// On successful return contains XML document stream
        [out,retval]   BSTR* strXML
    );

	[
		helpstring("Maps a query result set to XML"),
		id(7)
	]
	HRESULT ExecQuery(
	// Identifies the CIM namespace
		[in]	BSTR	strNamespacePath,
	// CIM query to be evaluated
		[in]	BSTR	strQuery,
	// On successful return contains XML document stream
        [out,retval]   BSTR* strXML
    );

	[
		propget, 
		id(9),
		helpstring("Specifies whether to decorate elements with Class origin information")
	] 
	HRESULT ClassOriginFilter([retval, out] WmiXMLClassOriginFilterEnum *iClassOriginFilter);
	[
		propput, 
		id(9)
	] 
	HRESULT ClassOriginFilter([in] WmiXMLClassOriginFilterEnum iClassOriginFilter);

    [
		propget, 
		id(10),
		helpstring("Specifies whether to include Namespace in declarations")
	] 
	HRESULT IncludeNamespace([retval, out] VARIANT_BOOL *bIncludeNamespace);
	[
		propput, 
		id(10)
	] 
	HRESULT IncludeNamespace([in] VARIANT_BOOL bIncludeNamespace);
	[
		propget, 
		id(11),
		helpstring("Specifies the type of DECLGROUP element to generate in a DECLARATION element")
	] 
	HRESULT DeclGroupType([retval, out] WmiXMLDeclGroupTypeEnum *iDeclGroupType);
	[
		propput, 
		id(11)
	] 
	HRESULT DeclGroupType([in] WmiXMLDeclGroupTypeEnum iDeclGroupType);

};
   




