// TrustMgr.idl : IDL source for TrustMgr.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (TrustMgr.tlb) and marshalling code.

//import "..\..\Common\IDL\McsPI.idl";
import "McsPI.idl";

import "oaidl.idl";
import "ocidl.idl";
	
	[
		object,
		uuid(F88BBE74-7BF0-4F8B-B3B4-78BDC9E7E771),
		helpstring("ITrust Interface"),
		pointer_default(unique)
	]
	interface ITrust : IUnknown
	{
		[helpstring("method QueryTrust")] HRESULT QueryTrust(BSTR domainSource, BSTR domainTrust, [out]IUnknown ** pVarSet);
		[helpstring("method CreateTrust")] HRESULT CreateTrust(BSTR domTrusting, BSTR domTrusted, BOOL bBidirectional);
		[helpstring("method QueryTrusts")] HRESULT QueryTrusts(BSTR domainSource,BSTR domainTarget,[in]BSTR sLogFile,[out]IUnknown **pVarSet);
		[helpstring("method CreateTrustWithCreds")] HRESULT CreateTrustWithCreds(BSTR domTrusting, BSTR domTrusted,BSTR credTrustingDomain, BSTR credTrustingAccount, BSTR credTrustingPassword,BSTR credTrustedDomain, BSTR credTrustedAccount, BSTR credTrustedPassword, BOOL bBidirectional);
	};

[
	uuid(E899F47D-AD4C-4056-8CFB-E7B5DFB7D977),
	version(1.0),
	helpstring("TrustMgr 1.0 Type Library")
]
library TRUSTMGRLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	
	[
		uuid(508A9D69-1515-4D83-842F-32123B345C28),
		helpstring("Trust Class")
	]
	coclass Trust
	{
		[default] interface ITrust;
		interface IMcsDomPlugIn;
	};
};
