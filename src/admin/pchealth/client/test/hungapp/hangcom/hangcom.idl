// hangcom.idl : IDL source for hangcom.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (hangcom.tlb) and marshalling code.

cpp_quote("DEFINE_GUID(LIBID_HANGCOMLib,0xC66C7052,0x8AED,0x4316,0xBA,0x3E,0xDF,0xA5,0x5D,0x3A,0xE9,0xED);")
cpp_quote("DEFINE_GUID(IID_IHang,       0xD35B7AE9,0xBE5D,0x4733,0xA5,0x91,0x75,0x21,0xB7,0x37,0xE5,0xD3);")
cpp_quote("DEFINE_GUID(CLSID_Hang,      0x158D0D62,0xFC13,0x4D7A,0xB7,0x24,0xA4,0x49,0xD3,0x63,0xDC,0x74);")

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(D35B7AE9-BE5D-4733-A591-7521B737E5D3),
		dual,
		helpstring("IHang Interface"),
		pointer_default(unique)
	]
	interface IHang : IDispatch
	{
		[id(1)] HRESULT DoHang(UINT64 hev, DWORD dwpid);
	};

[
	uuid(C66C7052-8AED-4316-BA3E-DFA55D3AE9ED),
	version(1.0),
	helpstring("hangcom 1.0 Type Library")
]
library HANGCOMLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(158D0D62-FC13-4D7A-B724-A449D363DC74),
		helpstring("Hang Class")
	]
	coclass Hang
	{
		[default] interface IHang;
	};
};
