<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>System Restore Core Component Description</TITLE>
<style type="text/css">@import url(td.css);</style></HEAD>
<BODY TOPMARGIN="0">
<H1><A NAME="_system_restore_core_component_description"></A>System Restore Core Component Description</H1>

<P>This component monitors system changes and is used to restore the system to a previous state in time. The system state is saved as a restore point, which is either created automatically by the System Restore component, a client application, or manually by the user.</P>

<P>When the system or an application is no longer performing as expected, you can use System Restore to return the system or application to a state where it was working correctly. System Restore is typically useful in scenarios where users install applications that modify core or redistributed system files, which cause other applications or system features to fail. </P>

<P>A restore point saves system databases such as the registry, Component Object Model (COM+) database, Windows Management Instrumentation (WMI) repository, Internet Information Services (IIS) and meta database. A file system filter driver monitors system file changes and makes backups. When the system is restored, all monitored file changes are undone, from the current point until the selected restore point, and the saved databases are replaced.</P>

<P>The list of monitored files and directories is specified either by extension or name in %windir%\system32\restore\filelist.xml. Microsoft maintains this list.</P>

<P>System Restore does not restore user data or documents, therefore it should not be used so that users will not lose their files, e-mail, browsing history, and Favorites folder. </P>

<P>System Restore automatically creates restore points every 24 hours while the system is idle. Additionally, users can create restore points using the System Restore Wizard if the System Restore User Interface (UI) component is available. Also, installers such as Windows Installer and InstallShield create restore points before installing and uninstalling applications. Other client applications can call the System Restore application programming interface (API) to create restore points. This API is available in the platform software development kit (SDK).</P>

<P>Restore point snapshots and file backup data are stored in the System Restore datastore on each system partition. System Restore automatically purges old restore points based on the size of its datastores and free disk space.</P>

<H1>Component Configuration</H1>

<P>You can choose to completely enable or disable System Restore. You can also enable or disable it independently on non-system partitions or drives. You can configure these options through the <B>System Properties</B> application in the <B>Control Panel</B> on the <B>System Restore</B> tab.</P>

<P>You can also configure how much disk space System Restore can use when storing backup data. By default, System Restore will utilize 12 percent or 400 megabytes (MB) of disk space, whichever is larger.</P>

<P>If the WMI component is available on the system, the following WMI providers can be used to configure System Restore:</P>

<P>Namespace: root\default Class: SystemRestore </P>

<P>Methods: Enable, Disable, Restore, CreateRestorePoint</P>

<P>Namespace: root\default Class: SystemRestoreConfig  </P>

<P>Properties: RPSessionInterval, RPGlobalInterval, RPLifeInterval, DiskPercent</P>

<H1>For More Information</H1>

<P>For more information and samples, please see the platform SDK.</P>

<P>For more information on the System Restore component see this <A HREF="http://msdn.microsoft.com/library/techart/systemrestore.htm">Microsoft Web site</A>.</P>

</BODY>
</HTML>
