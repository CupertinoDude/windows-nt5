<HTML XMLNS:helpcenter>
<!--
Copyright (c) 2000 Microsoft Corporation
-->
<HEAD>
<helpcenter:context id=idCtx />
<meta http-equiv="MSThemeCompatible" content="Yes">
<TITLE>Remote Assistance</TITLE>

<LINK id="UI_StyleSheet" REL="stylesheet" TYPE="text/css" HREF="../../Css/rc.css">
<script LANGUAGE="Javascript" SRC="../../Common/Constants.js"> </script>
<script LANGUAGE="Javascript" SRC="../../Common/common.js"> </script>
<script LANGUAGE="Javascript" SRC="../Common/RAControl.js"> </script>
<script LANGUAGE="Javascript" SRC="RAServer.js"> </script>

<!--	The SAF class factory object -->
<OBJECT classid=CLSID:FC7D9E02-3F9E-11d3-93C0-00C04F72DAF7 height=0 id=oSAFClassFactory 
width=0></OBJECT>

</HEAD>

<frameset framespacing=0 id="idFrameSet0" rows="*,110px" frameborder=0> 
	<frameset id="idFrameSet1" cols="*,110px" frameborder=0>
		<frame id="idFrameChatTop" name="idFrameChatTop" noresize src="RAChatServerTop.htm">
		<frame id="idFrameTools" name="idFrameTools" noresize src="RAServerToolBar.htm">
	</frameset>
	<frame id="idFrameChatBottom" name="idFrameChatBottom" noresize src="RAChatServerBottom.htm">
</frameset>

<SCRIPT Language="JScript">
	
//
// Globals
//
var vArgs					= null;
var g_numTries				= 0;
var g_bChatBoxHidden		= false;
var g_bNewBinaries			= false;
var g_bUserDisconnect		= false;
var g_bChatMode				= true;
var g_bConnected			= false;
var g_bRC					= false;
var	g_bNewLine				= false;

var g_bVoipConnected		= false;
var g_bVoipOn				= false;
var g_bStartEnabled			= true;

var g_stateVoipMe			= 0;	// server
var g_stateVoipYou			= 0;	// client

var g_VoipBandwidth		= 0;		// Start at Low (0 = Low, 1 = High)

// States
//---------------
// 0 = unknown
// 1 = good
// 2 = bad

	
g_bDebug					= false;	// Enable Tracing

function document.onkeydown()
{
	if (window.event.keyCode==8)
	{
		window.event.returnValue=false;
	}
}
function PostInit()
{
	try
	{
		//
		// GetLocalUser
		//
		GetLocalUser();

		//
		// Transmit screen resolution to Expert, so that
		// he has the right screen size to see in the RC Tool
		//
		//DebugTrace("Transmitting screen info");
		Helpee_TransmitScreenInfo();

		//
		// Initialize VoIP
		//
		InitVoIP();
	}
	catch(error)
	{
		FatalError( error.description );
	}
}

//
// InitiateRCSession: Initiates the RC Session
//
function InitiateRCSession() 
{	
	try
	{
		g_bConnected = true;

		//
		// Initialization
		//
		InitTrace();
		TraceFunctEnter("InitiateRCSession");

		//
		// Move the chat window to the lower right corner of the screen, so that the helper is
		// not confused seeing the chat window on his screen.
		//
		//idCtx.setWindowDimensions( (window.screen.availWidth - c_RCChatWidth), (window.screen.availHeight - c_RCChatHeight), c_RCChatWidth, c_RCChatHeight);
		idCtx.setWindowDimensions( 100, 100, c_RCChatWidth, c_RCChatHeight);
				
		//DebugTrace( "Obtaining g_Helpee_oSAFRemoteDesktopSession"); 
		g_Helpee_oSAFRemoteDesktopSession		= parent.oRCSession;

	}
	catch(error)
	{
		//
		// Fatal Error: Unable to initialize
		//
		FatalError( error.description );
	}


	//
	// Initialize the Helpee End SALEM Objects
	//
	Init_Helpee_SALEM();
		
	try
	{
		if(true == parent.gIsIM)
		{	
			//alert("parent.gIsIM: " + parent.gIsIM );		
			frames.idFrameTools.Helpee_HideChat();
		}

		setTimeout('PostInit()', 1000);
	}
	catch(error)
	{
		FatalError( L_ERRFATAL_MSG, error );
	}
				    
	TraceFunctLeave();		
	return;
}	

//
// Security Check
//
function DoLoad()
{
	var L_ERRACCESSDENIED_MSG	= "Directly launching this page is not allowed. ";

	if( null == parent.TraceFunctEnter )
	{
		idBody.style.visibility = "hidden";
		alert( L_ERRACCESSDENIED_MSG );
		return;
	}
}
</SCRIPT>

<BODY id="idBody" onload='DoLoad();InitiateRCSession()' bgcolor="LightGrey"  scroll=no tabindex=-1>

</BODY>
</HTML>