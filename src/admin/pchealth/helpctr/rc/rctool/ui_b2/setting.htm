<HTML>
<HEAD>
<!--
Copyright (c) 2000 Microsoft Corporation
-->
<TITLE>Remote Assistance</TITLE>
<meta http-equiv="MSThemeCompatible" content="Yes">
<LINK id="UI_StyleSheet" REL="stylesheet" TYPE="text/css" HREF="../../Css/rc.css">
<Script Language="javascript">
var vArgs=window.dialogArguments;

/*
Function : OnApply()
Description : Gets called when the Apply button is pressed.
			  This apply the settings based upon the options selected
*/
function OnApply()
{
	vArgs[0].TraceFunctEnter("OnApply");
	
	try
	{
		if (optSS.checked)
		{
			vArgs[0].frames.idFrameScreen.g_oSAFRemoteAssistanceHelper.m_oSAFRemoteDesktopClient.EnableSmartSizing=true;
			vArgs[0].frames.idFrameStatus.idStatus.innerHTML="&nbsp;&nbsp;<strong>Status: </strong>" + vArgs[0].frames.idFrameStatus.g_szStatusMsg + " [Scaled view]" ;			
			vArgs[1].SetProfileString("Scaling", 1);
		}	
		else if(optAS.checked)
		{
			vArgs[0].frames.idFrameScreen.g_oSAFRemoteAssistanceHelper.m_oSAFRemoteDesktopClient.EnableSmartSizing=false;
			vArgs[0].frames.idFrameStatus.idStatus.innerHTML = "&nbsp;&nbsp;<strong>Status: </strong>" + vArgs[0].frames.idFrameStatus.g_szStatusMsg + " [Full view]" ;
			vArgs[1].SetProfileString("Scaling", 0);
		}	

		// We need to change the Voice Compression if a radio button setting has been modified
		if ((optStd.checked == true) && (vArgs[0].g_VoipBandwidth == 1))
		{
			// Caught a change from high to low, send a message to the server (helpee)
			vArgs[0].Helper_SendControlCommand(vArgs[0].c_szVoipBandwidthToLow)

			// Change state variable from 1 to 0
			vArgs[0].g_VoipBandwidth = 0;

		} else if ((optHigh.checked == true) && (vArgs[0].g_VoipBandwidth == 0))
		{
			// Caught a change from low to high, send a message to the server (helpee)
			vArgs[0].Helper_SendControlCommand(vArgs[0].c_szVoipBandwidthToHigh)

			// Change state variable from 0 to 1
			vArgs[0].g_VoipBandwidth = 1;
		}
	}
	catch(error)
	{		
		vArgs[0].FatalError(error.description,error);
	}
	
	vArgs[0].TraceFunctLeave();	
}

/*
Function : Tuning()
Description : Gets called when the Audio Tuning Wizard button is pressed.
			
*/
function Tuning()
{
	vArgs[0].TraceFunctEnter("Tuning");
	
	var lRet = 0;

	try
	{
		vArgs[0].g_oSAFRemoteAssistanceHelper.m_oSAFIntercomClient.RunSetupWizard();

		// Send a message to the server that the SetupWizard succeeded
		vArgs[0].Helper_SendControlCommand(vArgs[0].c_szVoipWizardGood);

		// set me to good
		vArgs[0].g_stateVoipMe = 1;

		// Now we make the check to see if we can enable voice.
		// If me and you are good < 2 then enable
		if ( (vArgs[0].g_stateVoipMe < 2) && (vArgs[0].g_stateVoipYou < 2) )
		{

			// Ungray voice button
			vArgs[0].frames.idFrameTools.btnVoice.disabled = false;

			vArgs[0].g_bStartEnabled = true;

		}

	}	
	catch(error)
	{
		alert("Voice has been disabled for this Remote Assistance session.");

		// set me to bad
		vArgs[0].g_stateVoipMe = 2;

		// gray voice button
		vArgs[0].frames.idFrameTools.btnVoice.disabled = true;

		vArgs[0].g_bStartEnabled = false;

		// Send a message to the server that the SetupWizard failed
		vArgs[0].Helper_SendControlCommand(vArgs[0].c_szVoipWizardBad);
	}	
	
	vArgs[0].TraceFunctLeave();	
}

/*
Function : OnLoad()
Description : Gets called on the load of the page.
			  Options are initialised based upon the settings recorded.
*/
function OnLoad()
{
	vArgs[0].TraceFunctEnter("OnLoad");
	
	try
	{
		if (vArgs[1].GetProfileString("Scaling")==1)
		{
		  	optSS.checked=true;
		}
		else
		{
			optAS.checked=true;	
		}		

		// Show current compression setting through the 'rdAS' radio button
		if (vArgs[0].g_VoipBandwidth == 0)
		{
			optStd.checked = true;
		} 
		else
		{
			optHigh.checked = true;
		}
	}	
	catch(error)
	{
		vArgs[0].FatalError("",error);
	}	
	
	vArgs[0].TraceFunctLeave();		
}

</Script>
</HEAD>
<BODY onLoad="OnLoad();" id="idBody">
<TABLE border=0 cellspacing=8>
<TR>
	<TD>
<Table border=0 class="MaxWidth">
<TR>
	<TD>
		<Span class="styText">Remote Assistance Settings</Span>
	</TD>
</TR>
<TR>
	<TD>		
		<Fieldset style="padding:10">
			<Legend class="styText">
				Audio
			</Legend>
			<Input type="radio" name="rdAS" id="optStd" checked><Label For="optStd" class="styText">Standard Quality</Label>
			<BR>
			<Input type="radio" name="rdAS" id="optHigh"><Label For="optHigh" class="styText">High Quality (requires a high speed internet connection)</Label>
			<P>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button name="btnATW" id="btnATW" onClick="Tuning();" class="stybutton" style="width:180px">   Audio Tuning Wizard ....    </Button>
		</Fieldset>
	</TD>
</TR>
<TR>
	<TD>
		<Fieldset style="padding:10">
			<Legend class="styText">
				Screen View
			</Legend>
			<Span class="styText">Select the view shown when Remote Assistance starts.</Span>
			<BR>
			<Input type="radio" name="rdSS" id="optSS" checked><Label For="optSS" class="styText">Scaled</Label>
			<BR>			
			<Input type="radio" name="rdSS" id="optAS"><Label For="optAS" class="styText">Actual Size
		</Fieldset>
	</TD>
</TR>
<TR>
	<TD align="right">
	<BR>
		<Button id="btnOK" name="btnOK" Onclick="OnApply();window.close();" class="stybutton" accesskey="O"><U>O</U>K</Button>&nbsp;
		<Button id="btnCancel" name="btnCancel" OnClick="window.close();" class="stybutton" accesskey="C"><U>C</U>ancel</Button>&nbsp;
		<Button id="btnApply" name="btnApply" Onclick="OnApply();" class="stybutton" accesskey="A"><U>A</U>pply</Button>&nbsp;
	</TD>
</TR>
</Table>
</TD>
</TR>
</Table>
</BODY>
</HTML>
