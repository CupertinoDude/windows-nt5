<HTML XMLNS:helpcenter>
<HEAD>

<!--
Copyright (c) 2000 Microsoft Corporation
-->

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=windows-1252">
<META HTTP-EQUIV=PICS-Label CONTENT='(PICS-1.1 "http://www.rsac.org/ratingsv01.html" l comment "RSACi North America Server" by "inet@microsoft.com" r (n 0 s 0 v 0 l 0))'>
<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">

<OBJECT ID=pchealth classid=CLSID:FC7D9E02-3F9E-11d3-93C0-00C04F72DAF7></OBJECT>

<LINK ID=Stylesheet_Ref0 href="hcp://system/css/shared.css"    rel=STYLESHEET type=text/css>
<LINK ID=Stylesheet_Ref1 href="hcp://system/css/Behaviors.css" rel=STYLESHEET type=text/css>

</HEAD>

<BODY SCROLL=NO oncontextmenu="return false;" class="sys-rhp-bgcolor sys-font-body">

<OBJECT tabIndex=-1 ID=idTB CLASSID="CLSID:FC7D9E08-3F9E-11d3-93C0-00C04F72DAF7" WIDTH=100%>
    <PARAM id=NoLoc1 name="Definition" value="MiniNavBar.xml">
</OBJECT>

</BODY>

<SCRIPT>

var L_NotFoundInContext_Message = 'This topic is available only from Search or the Index.\nTo quickly locate this topic in the future, add it to your Help and Support Favorites list.';

var g_options = pchealth.UserSettings.Options;

////////////////////

function LocateContext( url, subsite )
{
    var coll = pchealth.Database.LocateContext( url, subsite );
	var node = null;

	if(coll.Count > 0)
	{
		node = coll.Item(1);
	}
	else if(subsite)
	{
		subsite = null;

		coll = pchealth.Database.LocateContext( url );
		if(coll.Count > 0)
		{
			node = coll.Item(1);
		}
	}
	
	return node;
}	   

function ExecLocate()
{
	var url;
	var node = null;

	try
	{
		var ctx     = pchealth.HelpSession.CurrentContext;
		var subsite = null;
		var coll;

		url = ctx.URL;

		if(ctx.ContextName == "SUBSITE")
		{
			var arr = ctx.ContextInfo.split( " " );

			subsite = arr[0];
		}

		node = LocateContext( url, subsite );
		if(!node)
		{
			url = url.replace( /^its:/i          , "ms-its:" );
			url = url.replace( /^mk:@MSITStore:/i, "ms-its:" );

			node = LocateContext( url, subsite );
		}

		if(node && !subsite)
		{
			//
			// Locate the subsite.
			//
			var category = node.Category;
			while(category)
			{
				var subnode = pchealth.Database.LookupNode( category ).Item(1);
				
				if(subnode.Subsite || subnode.Category == "")
				{
					subsite = subnode.FullPath;
					break;
				}

				category = subnode.Category;
			}
		}
	}
	catch(e)
	{
	}

	if(node && subsite)
	{
        pchealth.UI_NavBar.content.parentWindow.onClick_ChangeView( "normal" ); 

        pchealth.HelpSession.ChangeContext( "subsite", subsite + " " + node.FullPath + " " + url, "<none>" );
	}
	else
	{
		pchealth.MessageBox( L_NotFoundInContext_Message, "OK" );	   
	}
}

////////////////////

function mininavbar_onTransition()
{
    SetButtonVisibility();
}

function mininavbar_onTravelDone()
{
    var url           = pchealth.HelpSession.CurrentContext.URL;
    var fEnabledPrint = false;
    var fEnabledFav   = false;

    if(url && pchealth.UI_NavBar.content.parentWindow.fnPrint_IsValid( url ))
    {
        fEnabledPrint = true;
    }

    if(url && pchealth.UI_NavBar.content.parentWindow.fnFavorites_IsValid( url ))
    {
        fEnabledFav = true;
    }

	idTB.SetState( "BACK"   	, pchealth.HelpSession.IsValid( -1 ) );
	idTB.SetState( "FORWARD"	, pchealth.HelpSession.IsValid(  1 ) );
    idTB.SetState( "PRINT"      , fEnabledPrint                      );
    idTB.SetState( "ADDFAVORITE", fEnabledFav                        );
}

function mininavbar_OptionsChanged()
{
	if(idTB.Mode != g_options.TextLabels)
	{
		idTB.Mode = g_options.TextLabels;
	}
}

////////////////////

function SetButtonVisibility()
{
    var ext = pchealth.UI_NavBar.content.parentWindow.external;

	var fVisible = (ext.places.currentPlace.name == "ContentOnly");

	idTB.SetVisibility( "BACK"   	  , fVisible          );
	idTB.SetVisibility( "FORWARD"	  , fVisible          );
	idTB.SetVisibility( "SEP1"	 	  , fVisible          );
												  
	idTB.SetVisibility( "LAYOUT_LARGE", fVisible          );
	idTB.SetVisibility( "LAYOUT_SMALL", fVisible == false );
}

setTimeout( "SetButtonVisibility()", 10 );

</SCRIPT>

<SCRIPT LANGUAGE="JScript" EVENT="onCommand( tb, id )" FOR="idTB">
    if(id == "LOCATE")
	{
	    ExecLocate();
	}
	else
	{
	    pchealth.UI_NavBar.content.parentWindow.ProcessToolbarCommands( tb, id );
	}
</SCRIPT>

<helpcenter:events id=idEvents onTransition="mininavbar_onTransition();" onTravelDone="mininavbar_onTravelDone();" onOptionsChanged="mininavbar_OptionsChanged()" />

<helpcenter:state id=idState identity="MiniNavBar" />

</HTML>
