<HTML XMLNS:helpcenter>
<HEAD>

<!--
Copyright (c) 2000 Microsoft Corporation
-->

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=windows-1252">
<META HTTP-EQUIV=PICS-Label CONTENT='(PICS-1.1 "http://www.rsac.org/ratingsv01.html" l comment "RSACi North America Server" by "inet@microsoft.com" r (n 0 s 0 v 0 l 0))'>
<META HTTP-EQUIV="MSThemeCompatible" CONTENT="Yes">

<OBJECT ID=pchealth classid=CLSID:FC7D9E02-3F9E-11d3-93C0-00C04F72DAF7></OBJECT>

<LINK ID=Stylesheet_Ref0 href="hcp://system/css/shared.css"    rel=STYLESHEET type=text/css>
<LINK ID=Stylesheet_Ref1 href="hcp://system/css/Behaviors.css" rel=STYLESHEET type=text/css>

<SCRIPT ID=Script1_noloc SRC="hcp://system/scripts/Common.js"></SCRIPT>

<STYLE>

.sys-font-body-gray
{
    color : graytext;
}

.layout-checkbox
{
    padding-left : 7px;
}

.layout-index1
{
    padding-left  : 11px;
    padding-right : 5px;
}

.layout-index2
{
    padding-right : 11px;
}

</STYLE>

</HEAD>

<BODY SCROLL=NO>

<IFRAME NAME='HelpCtrContents' style='position:absolute; display:none'></IFRAME>

<TABLE border=0 cellpadding=0 cellspacing=0 WIDTH=100% HEIGHT=100% style="table-layout: fixed">
<TR class="sys-font-body" style="height: 3em;padding-top:11px;" id=idContextAreaOuter>
  <TD class="sys-lhp-bgcolor-scope">
    <DIV id=idContextAreaOuter2 NOWRAP style='width: 100%; text-overflow: ellipsis; overflow: hidden;'>
      <DIV id=idSubsite class='sys-font-body sys-color-body layout-checkbox' style='display: none'>
        <INPUT id=idSubsite_State TYPE=checkbox onclick='context_subsite_onclick()'>
        <LABEL id=idSubsite_State_l FOR="idSubsite" class="sys-font-body">Search only <SPAN id=idSubsite_Title></SPAN></LABEL>
      </DIV>
      <DIV id=idIndex class='sys-font-body sys-color-body' style='display: none'>
        <TABLE border=0 cellpadding=0 cellspacing=0 WIDTH=100% HEIGHT=100%>
        <TR>
          <TD id=noloc1 class='layout-index1'><DIV NOWRAP class="sys-font-body" id=locIndex>Current index&nbsp</DIV></TD>
          <TD id=noloc2 class='layout-index2' WIDTH=100%>
            <SELECT id=idIndex_State NAME="INDEX" TITLE="Select one index" SIZE="1" onchange='context_index_onchange()' style="width: 100%"></SELECT>
          </TD>
        </TR>
        </TABLE>
      </DIV>
    </DIV>
  </TD>
  <TD class="sys-lhp-bgcolor-scope" WIDTH=3px>
  </TD>
</TR>

<TR>
  <TD>
    <IFRAME id=idSubpanels NAME='SubPanels' WIDTH=100% HEIGHT=100%></IFRAME>
  </TD>
  <TD WIDTH=3px HEIGHT=100% style='cursor: col-resize' class="sys-header-gradient-V" id=noloc3>
      <SPAN style='width: 3px; height: 100%; behavior : url(#default#pch_handle)'>&nbsp;</SPAN>
  </TD>
</TR>
</TABLE>


</BODY>

<SCRIPT>

//
// localizable variables/filenames
//
var L_SystemIndex_Text      = "Main Index";
var L_SubsiteEnabled_Text   = "Specifies whether to search only the topics that reside in this category. This option only limits the search results displayed under 'Suggested Topics'.";
var L_SubsiteDisabled_Text  = "Specifies whether to search only the topics that reside in this category. To use this option, click 'Set search options', and then select 'Suggested Topics'.";
var L_SubsiteSearch_Text	= "Search only ";

////////////////////////////////////////////////////////////////////////////////

var g_SUBSITE_node    = "";
var g_SUBSITE_visible = false;
var g_SUBSITE_checked = (pchealth.UserSettings.IsDesktopVersion);

var g_INDEX_visible   = false;
var g_INDEX_selection = [];
var g_INDEX_current   = -1;
var g_INDEX_system    = "<SYSTEM>";

var g_NAVBAR = pchealth.UI_NavBar.content.parentWindow;


idSubsite_State.status = g_SUBSITE_checked;

function SubsiteStatus()
{
    // Check if semgr has been initialized
    if(g_NAVBAR.GetWrapperVar( "SEMgrInit" ) == "true")
    {
        // If already initialized, get the search engine manager and extract keyword engine to see if it is enabled
        var oWrapper = g_NAVBAR.FindWrapper( g_NAVBAR.ID_KEYWORD );
        if(oWrapper)
        {
            EnableSubsite( oWrapper.Enabled );
        }
    }
    else
    {
        // If not initialized, read the value from the registry
        var fEnabled;

        try { fEnabled = pchealth.RegRead( GetSearchEngineConfig() + g_NAVBAR.ID_KEYWORD + "\\" + "Enabled" ) != "false"; } catch(e) { fEnabled = true; }

        EnableSubsite( fEnabled );
    }
}

function EnableSubsite(bEnable)
{
    if (bEnable)
    {
        idSubsite.title             = L_SubsiteEnabled_Text;
        idSubsite_State.disabled    = false;
        idSubsite_State_l.className = "sys-font-body";
    }
    else
    {
        idSubsite.title             = L_SubsiteDisabled_Text;
        idSubsite_State.disabled    = true;
        idSubsite_State_l.className = "sys-font-body sys-font-body-gray";
    }
}

////////////////////////////////////////

function context_UpdateBanner()
{
    var ctx = pchealth.HelpSession.CurrentContext;

    if(ctx.ContextName == "SUBSITE")
    {
        if(ctx.ContextInfo)
        {
            var arr = ctx.ContextInfo.split( " " );

            if(arr[0] != "")
            {
                try
                {
                    var node = pchealth.Database.LookupNode( arr[0] );

					idSubsite_State.title = L_SubsiteSearch_Text + node(1).Title;
                    idSubsite_Title.innerText = node(1).Title;
                    g_SUBSITE_node    = arr[0];
                    g_SUBSITE_visible = true;
                    g_INDEX_visible   = false;
                    SubsiteStatus();
                }
                catch(e)
                {
                }
            }
        }
    }
    else if(ctx.ContextName == "SEARCH")
    {
        ; // Maintain state.
    }
    else
    {
        g_SUBSITE_node    = null;
        g_SUBSITE_visible = false;
    }

    if(ctx.ContextName == "INDEX")
    {
        g_SUBSITE_visible = false;

        if(ctx.ContextInfo)
        {
            g_INDEX_selection = ctx.ContextInfo.split( " " );
        }
        else if(pchealth.UserSettings.Scope)
        {
            g_INDEX_selection = [ pchealth.UserSettings.Scope, g_INDEX_system ];
        }
        else
        {
            g_INDEX_selection = [];
        }

        if(g_INDEX_selection.length > 0)
        {
            g_INDEX_visible = true;
        }
        else
        {
            g_INDEX_visible = false;
        }
    }
    else
    {
        g_INDEX_visible   = false;
        g_INDEX_selection = null;
        g_INDEX_current   = -1;
    }

    context_update();
}

function context_subsite_onclick()
{
    g_SUBSITE_checked = idSubsite_State.status;
    idSubsite.title   = g_SUBSITE_checked ? L_SubsiteEnabled_Text : L_SubsiteDisabled_Text;

    context_update();
}

function context_index_onchange()
{
    g_INDEX_current = idIndex_State.options[idIndex_State.selectedIndex].value;

    context_update();
}

function context_update()
{
    var ctx = pchealth.HelpSession.CurrentContext;
    var i;

    pchealth.UI_NavBar.content.parentWindow.SetWrapperVar( "SUBSITE", g_SUBSITE_checked ? g_SUBSITE_node : "" );

    {
        var options = idIndex_State.options;

        while(options.length) options.remove( 0 );

        for(i in g_INDEX_selection)
        {
            var text;

            try
            {
			    var id   = g_INDEX_selection[i];
				var fSys = (id == g_INDEX_system);

                text = pchealth.UserSettings.IndexDisplayName( fSys ? null : id );
                if(text == "")
                {
                    text = fSys ? L_SystemIndex_Text : null;
                }
            }
            catch(e)
            {
                text = null;
            }

            if(text)
            {
                var oOption = document.createElement("OPTION");

                options.add( oOption );

                oOption.innerText = text;
                oOption.value     = i;

                if(g_INDEX_current == -1) g_INDEX_current = i;

                if(i == g_INDEX_current)
                {
                    oOption.selected = true;
                }
            }
        }
        if(options.length < 2) g_INDEX_visible = false;
    }

    if(ctx.ContextName == "INDEX")
    {
        try
        {
            idSubpanels.index_Show( g_INDEX_current != -1 ? g_INDEX_selection[g_INDEX_current] : null );
        }
        catch(e)
        {
        }
    }

    idContextAreaOuter.style.display = (g_SUBSITE_visible | g_INDEX_visible) ? "" : "none";
    idSubsite         .style.display =  g_SUBSITE_visible                    ? "" : "none";
    idIndex           .style.display =                      g_INDEX_visible  ? "" : "none";
}

</SCRIPT>

<helpcenter:events id=idEvents onContextSwitch="context_UpdateBanner();" onPersistLoad="context_UpdateBanner();" onTravelDone="context_UpdateBanner();" />

<helpcenter:state id=idState identity="Context" />

</HTML>
