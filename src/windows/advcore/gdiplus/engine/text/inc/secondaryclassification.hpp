#ifndef _SECONDARYCLASSIFICATION_HPP
#define _SECONDARYCLASSIFICATION_HPP

///// SecondaryClassification
//
//    Provides classification for digit substitution, symmetric glyph
//    mirroring and auto vertical glyph rotoation.
//
//    DO NOT EDIT
//
//    Generated by engine/text/unilib/tools/upright.pl

enum SecondaryClassificationBase {
    ScCSAN,
    ScCSNN,
    ScENAN,
    ScENNN,
    ScETAN,
    ScETNN,
    ScNNAN,
    ScNNAS,
    ScNNFN,
    ScNNNN,
    ScNNNS,
};


/// Secondary classification flags
//
//  Bits 0-1: Numeric class,  0/EN/CS/ET
//  Bits 2-3: Mirror class,   0/MS/MX
//  Bits 4-5: Sideways class, 0/SA/SF
//
// The secondary classificationFlags exist because they an be masked for
// secondary itemization functionality.

enum SecondaryClassificationFlags {
    SecClassEN = 0x01,   // Digit U+0030-U+0039
    SecClassCS = 0x02,   // Common separator
    SecClassET = 0x03,   // European terminator
    SecClassMS = 0x04,   // Mirror subst
    SecClassMX = 0x08,   // Mirror Xform
    SecClassSA = 0x10,   // Sideways Always
    SecClassSF = 0x20,   // Sideways only in FE string
};

extern const unsigned char ScBaseToScFlags[];

enum SecondaryClassification {
    ScOther,
    ScSide,
    ScMirSub,
    ScMirXfm,
    ScEN,
    ScCS,
    ScET
};

extern const SecondaryClassification ScFlagsToScFE[];
extern const SecondaryClassification ScFlagsToScEng[];
extern const unsigned char *SecondaryClassificationLookup[];
#endif // _SECONDARYCLASSIFICATION_HPP
