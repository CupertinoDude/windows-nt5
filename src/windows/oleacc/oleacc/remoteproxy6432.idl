// Copyright (c) 1996-2000 Microsoft Corporation

// RemoteProxy6432.idl
//

// This file will be processed by the MIDL tool to
// produce the type library (RemoteProxy6432.tlb) and marshalling code.

cpp_quote("// Copyright (c) 1996-2000 Microsoft Corporation")
cpp_quote("HRESULT GetRemoteProxyFactory(IRemoteProxyFactory **pRPF);")
cpp_quote("// if this W2K and not ALPHA enable 64b/32b interoperability")
cpp_quote("#if defined(UNICODE) && !defined(_M_AXP64)")
cpp_quote("#define ENABLE6432_INTEROP")
cpp_quote("#endif")

import "oaidl.idl";
import "ocidl.idl";


[
	uuid(8628F27C-64A2-4ed6-906B-E6155314C16A),
	version(1.0),
	helpstring("RemoteProxy6432 1.0 Type Library")
]
library REMOTEPROXY6432Lib
{

	importlib("stdole2.tlb");
	[
		object,
		uuid(8628F27D-64A2-4ed6-906B-E6155314C16A),
		dual,
		helpstring("IRemoteProxyFactory Interface"),
		pointer_default(unique)
	]
	interface IRemoteProxyFactory : IDispatch
	{

		[id(1), helpstring("method AccessibleProxyFromWindow")] 
		HRESULT AccessibleProxyFromWindow(
			[in]		DWORD			dwhwnd,
			[in]		long			lObjectId,
			[out]		IUnknown **		ppUnk
		);


		[id(2), helpstring("method GetStateImageMapEnt")]
		HRESULT GetStateImageMapEnt(
			[in]		DWORD			dwhwnd,
			[in]		long			iImage,
			[out]		DWORD *			pdwState,
			[out]		DWORD *			pdwRole
		);

	};


	[
		uuid(53362C64-A296-4F2D-A2F8-FD984D08340B)
	]
	coclass RemoteProxyFactory64
	{
		[default] interface IRemoteProxyFactory;
	};


	[
		uuid(53362C32-A296-4F2D-A2F8-FD984D08340B)
	]
	coclass RemoteProxyFactory32
	{
		[default] interface IRemoteProxyFactory;
	};
};
