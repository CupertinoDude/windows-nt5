//*****************************************************************************
//
// File:                crbehavior.idl
// Author:              jeff ort
// Date Created:        Sept 26, 1998
// Abstract:            This idl file is included in either the crbvr.idl or
//                      lmrt idl file.  This allows the project to be built
//                      either as part of lmrt.dll or as a seperate dll.
//
//
// Modification List:
// Date		Author		Change
// 09/26/98	jeffort		Created this file
// 11/03/98 ColinMc     Added actor support
// 11/17/98 Kurtj       Added buildBehaviorFragments to number
// 11/17/98 markhal     Added e_Image
// 11/20/98 markhal     Added buildBehaviorFragments calls
//
//*****************************************************************************

#include "crbvrdispid.h"

//import "danim.idl";

//*****************************************************************************
//
// ICrBehaviorFactory
//
//*****************************************************************************

[
    object,
    uuid(754FF232-5D4E-11d2-875B-00A0C93C09B3),
    dual,
	helpstring("ICrBehaviorFactory Interface"),
	pointer_default(unique)
]
interface ICrBehaviorFactory : IDispatch
{
}; // ICrBehaviorFactory

//*****************************************************************************
//
// ICrColorBvr
//
//*****************************************************************************

[
	object,
	uuid(3845A173-EB30-11D1-9A23-00A0C879FE5F),
	dual,
	helpstring("ICrColorBvr Interface"),
	pointer_default(unique)
]
interface ICrColorBvr : IDispatch
{
	[propput, id(DISPID_ICRCOLORBVR_FROM)]
	HRESULT from([in] VARIANT varFrom);
	[propget, id(DISPID_ICRCOLORBVR_FROM)] 
	HRESULT from([retval, out] VARIANT *pRetFrom);
	[propput, id(DISPID_ICRCOLORBVR_TO)]
	HRESULT to([in] VARIANT varTo);
	[propget, id(DISPID_ICRCOLORBVR_TO)]
	HRESULT to([retval, out] VARIANT *pRetTo);
	[propput, id(DISPID_ICRCOLORBVR_PROPERTY)]
	HRESULT property([in] VARIANT varProperty);
	[propget, id(DISPID_ICRCOLORBVR_PROPERTY)]
	HRESULT property([retval, out] VARIANT *pRetProperty);
	[propput, id(DISPID_ICRCOLORBVR_DIRECTION)]
	HRESULT direction([in] VARIANT varDirection);
	[propget, id(DISPID_ICRCOLORBVR_DIRECTION)]
	HRESULT direction([retval, out] VARIANT *pRetDirection);
	[propput, id(DISPID_ICRCOLORBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRCOLORBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	[id(DISPID_ICRCOLORBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);

}; // ICrColorBvr

//*****************************************************************************
//
// ICrRotateBvr
//
//*****************************************************************************

[
	object,
	uuid(027713F1-5FA8-11d2-875B-00A0C93C09B3),
	dual,
	helpstring("ICrRotateBvr Interface"),
	pointer_default(unique)
]
interface ICrRotateBvr : IDispatch
{
	[propput, id(DISPID_ICRROTATEBVR_FROM)]
	HRESULT from([in] VARIANT varFrom);
	[propget, id(DISPID_ICRROTATEBVR_FROM)] 
	HRESULT from([retval, out] VARIANT *pRetFrom);
	[propput, id(DISPID_ICRROTATEBVR_TO)]
	HRESULT to([in] VARIANT varTo);
	[propget, id(DISPID_ICRROTATEBVR_TO)]
	HRESULT to([retval, out] VARIANT *pRetTo);
	[propput, id(DISPID_ICRROTATEBVR_BY)]
	HRESULT by([in] VARIANT varBy);
	[propget, id(DISPID_ICRROTATEBVR_BY)]
	HRESULT by([retval, out] VARIANT *pRetBy);
	[propput, id(DISPID_ICRROTATEBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICRROTATEBVR_TYPE)] 
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICRROTATEBVR_MODE)]
	HRESULT mode([in] VARIANT varMode);
	[propget, id(DISPID_ICRROTATEBVR_MODE)] 
	HRESULT mode([retval, out] VARIANT *pRetMode);
	[propput, id(DISPID_ICRROTATEBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRROTATEBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	[id(DISPID_ICRROTATEBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);
}; // ICrRotateBvr

//*****************************************************************************
//
// ICrScaleBvr
//
//*****************************************************************************
 
[
	object,
	uuid(E80353D1-677D-11d2-875E-00A0C93C09B3),
	dual,
	helpstring("ICrScaleBvr Interface"),
	pointer_default(unique)
]
interface ICrScaleBvr : IDispatch
{
	[propput, id(DISPID_ICRSCALEBVR_FROM)]
	HRESULT from([in] VARIANT varFrom);
	[propget, id(DISPID_ICRSCALEBVR_FROM)] 
	HRESULT from([retval, out] VARIANT *pRetFrom);
	[propput, id(DISPID_ICRSCALEBVR_TO)]
	HRESULT to([in] VARIANT varTo);
	[propget, id(DISPID_ICRSCALEBVR_TO)]
	HRESULT to([retval, out] VARIANT *pRetTo);
	[propput, id(DISPID_ICRSCALEBVR_BY)]
	HRESULT by([in] VARIANT varBy);
	[propget, id(DISPID_ICRSCALEBVR_BY)]
	HRESULT by([retval, out] VARIANT *pRetBy);
	[propput, id(DISPID_ICRSCALEBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICRSCALEBVR_TYPE)] 
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICRSCALEBVR_MODE)]
	HRESULT mode([in] VARIANT varMode);
	[propget, id(DISPID_ICRSCALEBVR_MODE)] 
	HRESULT mode([retval, out] VARIANT *pRetMode);
	[propput, id(DISPID_ICRSCALEBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRSCALEBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	//mehtods
	[id(DISPID_ICRSCALEBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments( [in]IDispatch *pActorDisp );
}; // ICrScaleBvr

//*****************************************************************************
//
// ICrMoveBvr
//
//*****************************************************************************

[
	object,
	uuid(C5B86F31-69EE-11d2-875F-00A0C93C09B3),
	dual,
	helpstring("ICrMoveBvr Interface"),
	pointer_default(unique)
]
interface ICrMoveBvr : IDispatch
{
	[propput, id(DISPID_ICRMOVEBVR_FROM)]
	HRESULT from([in] VARIANT varFrom);
	[propget, id(DISPID_ICRMOVEBVR_FROM)] 
	HRESULT from([retval, out] VARIANT *pRetFrom);
	[propput, id(DISPID_ICRMOVEBVR_TO)]
	HRESULT to([in] VARIANT varTo);
	[propget, id(DISPID_ICRMOVEBVR_TO)]
	HRESULT to([retval, out] VARIANT *pRetTo);
	[propput, id(DISPID_ICRMOVEBVR_BY)]
	HRESULT by([in] VARIANT varBy);
	[propget, id(DISPID_ICRMOVEBVR_BY)]
	HRESULT by([retval, out] VARIANT *pRetBy);
	[propput, id(DISPID_ICRMOVEBVR_V)]
	HRESULT v([in] VARIANT varPath);
	[propget, id(DISPID_ICRMOVEBVR_V)] 
	HRESULT v([retval, out] VARIANT *pRetPath);
	[propput, id(DISPID_ICRMOVEBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRMOVEBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	[propput, id(DISPID_ICRMOVEBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICRMOVEBVR_TYPE)] 
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICRMOVEBVR_MODE)]
	HRESULT mode([in] VARIANT varMode);
	[propget, id(DISPID_ICRMOVEBVR_MODE)] 
	HRESULT mode([retval, out] VARIANT *pRetMode);
    [propput, id(DISPID_ICRMOVEBVR_DIRECTION)]
	HRESULT direction([in] VARIANT varDirection);
	[propget, id(DISPID_ICRMOVEBVR_DIRECTION)] 
	HRESULT direction([retval, out] VARIANT *pRetDirection);
	//methods
	[id(DISPID_ICRMOVEBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);

}; // ICrMoveBvr

[
	object,
	uuid(2DDEABE2-FAA5-11D2-B9DD-00C04F6843FA),
	dual,
	helpstring("ICrMoveBvr2 Interface"),
	pointer_default(unique)
]
interface ICrMoveBvr2 : ICrMoveBvr
{
	[propget, id(DISPID_ICRMOVEBVR_CURRENTX)]
	HRESULT currentX( [retval,out] VARIANT *pRetCurrent );
	[propget, id(DISPID_ICRMOVEBVR_CURRENTY)]
	HRESULT currentY( [retval,out] VARIANT *pRetCurrent );

}; // ICrMoveBvr

//*****************************************************************************
//
// ICrPathBvr
//
//*****************************************************************************

[
	object,
	uuid(80F49561-6A9A-11d2-875F-00A0C93C09B3),
	dual,
	helpstring("ICrPathBvr Interface"),
	pointer_default(unique)
]
interface ICrPathBvr : IDispatch
{
	[propput, id(DISPID_ICRPATHBVR_V)]
	HRESULT v([in] VARIANT varPath);
	[propget, id(DISPID_ICRPATHBVR_V)] 
	HRESULT v([retval, out] VARIANT *pRetPath);
	[id(DISPID_ICRPATHBVR_DATRANSFORM)]
	HRESULT GetDATransform([in] IDispatch *pDispProgress,
                           [retval, out] VARIANT *pRetTrans);
}; // ICrPathBvr

//*****************************************************************************
//
// ICrNumberBvr
//
//*****************************************************************************

[
	object,
	uuid(ECDB03D1-6E99-11d2-875F-00A0C93C09B3),
	dual,
	helpstring("ICrNumberBvr Interface"),
	pointer_default(unique)
]
interface ICrNumberBvr : IDispatch
{
	//properties
	[propput, id(DISPID_ICRNUMBERBVR_FROM)]
	HRESULT from([in] VARIANT varFrom);
	[propget, id(DISPID_ICRNUMBERBVR_FROM)] 
	HRESULT from([retval, out] VARIANT *pRetFrom);
	[propput, id(DISPID_ICRNUMBERBVR_TO)]
	HRESULT to([in] VARIANT varTo);
	[propget, id(DISPID_ICRNUMBERBVR_TO)]
	HRESULT to([retval, out] VARIANT *pRetTo);
	[propput, id(DISPID_ICRNUMBERBVR_BY)]
	HRESULT by([in] VARIANT varBy);
	[propget, id(DISPID_ICRNUMBERBVR_BY)]
	HRESULT by([retval, out] VARIANT *pRetBy);
	[propput, id(DISPID_ICRNUMBERBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICRNUMBERBVR_TYPE)] 
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICRNUMBERBVR_MODE)]
	HRESULT mode([in] VARIANT varMode);
	[propget, id(DISPID_ICRNUMBERBVR_MODE)] 
	HRESULT mode([retval, out] VARIANT *pRetMode);
	[propput, id(DISPID_ICRNUMBERBVR_PROPERTY)]
	HRESULT property([in] VARIANT varProperty);
	[propget, id(DISPID_ICRNUMBERBVR_PROPERTY)]
	HRESULT property([retval, out] VARIANT *pRetProperty);
	[propput, id(DISPID_ICRNUMBERBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRNUMBERBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	//methods
	[id(DISPID_ICRNUMBERBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);
}; // ICrNumberBvr

//*****************************************************************************
//
// ICrSetBvr
//
//*****************************************************************************

[
	object,
	uuid(BA60F741-6F72-11d2-875F-00A0C93C09B3),
	dual,
	helpstring("ICrSetBvr Interface"),
	pointer_default(unique)
]
interface ICrSetBvr : IDispatch
{
	[propput, id(DISPID_ICRSETBVR_VALUE)]
	HRESULT value([in] VARIANT varValue);
	[propget, id(DISPID_ICRSETBVR_VALUE)] 
	HRESULT value([retval, out] VARIANT *pRetValue);
	[propput, id(DISPID_ICRSETBVR_PROPERTY)]
	HRESULT property([in] VARIANT varProperty);
	[propget, id(DISPID_ICRSETBVR_PROPERTY)]
	HRESULT property([retval, out] VARIANT *pRetProperty);
	[propput, id(DISPID_ICRSETBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICRSETBVR_TYPE)]
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICRSETBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRSETBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	[id(DISPID_ICRSETBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);
}; // ICrSetBvr

//*****************************************************************************
//
// ICrEffectBvr
//
//*****************************************************************************

[
	object,
	uuid(54274111-7A5E-11d2-875F-00A0C93C09B3),
	dual,
	helpstring("ICrEffectBvr Interface"),
	pointer_default(unique)
]
interface ICrEffectBvr : IDispatch
{
	[propput, id(DISPID_ICREFFECTBVR_TYPE)]
	HRESULT type([in] VARIANT varType);
	[propget, id(DISPID_ICREFFECTBVR_TYPE)] 
	HRESULT type([retval, out] VARIANT *pRetType);
	[propput, id(DISPID_ICREFFECTBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICREFFECTBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pRetAnimates);
	[propput, id(DISPID_ICREFFECTBVR_CLASSID)]
	HRESULT classid([in] VARIANT varClassId);
	[propget, id(DISPID_ICREFFECTBVR_CLASSID)] 
	HRESULT classid([retval, out] VARIANT *pRetClassId);
	[propput, id(DISPID_ICREFFECTBVR_TRANSITION)]
	HRESULT transition([in] VARIANT varTransition);
	[propget, id(DISPID_ICREFFECTBVR_TRANSITION)] 
	HRESULT transition([retval, out] VARIANT *pRetTransition);
	[propput, id(DISPID_ICREFFECTBVR_PROGID)]
	HRESULT progid([in] VARIANT varProgId);
	[propget, id(DISPID_ICREFFECTBVR_PROGID)] 
	HRESULT progid([retval, out] VARIANT *pRetProgId);
	[propput, id(DISPID_ICREFFECTBVR_DIRECTION)]
	HRESULT direction([in] VARIANT varDirection);
	[propget, id(DISPID_ICREFFECTBVR_DIRECTION)] 
	HRESULT direction([retval, out] VARIANT *pRetDirection);
	[id(DISPID_ICREFFECTBVR_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments([in]IDispatch *pActorDisp);
}; // ICrEffectBvr

//*****************************************************************************
//
// ICrActorBvr
//
//*****************************************************************************

typedef enum ActorBvrFlags
{
	e_None,
    e_Absolute,
	e_AbsoluteAccum,
    e_Relative,
	e_RelativeAccum,
	e_RelativeReset,
	e_RelativeFrom,
    e_Filter,
	e_ScaledImage,
	e_UnscaledImage,
	e_Static,
	e_Intermediate,
	e_Composed,
	e_Final,
	e_From
} ActorBvrFlags;

typedef enum ActorBvrType
{
    e_Translation,
    e_Rotation,
    e_Scale,
    e_Color,
    e_Number,
    e_String,
    e_Effect,
	e_Image
} ActorBvrType;

[
	object,
	uuid(484C7A41-736C-11D2-A5E8-00A0C967A25F),
	dual,
	helpstring("ICrActorBvr Interface"),
	pointer_default(unique)
]
interface ICrActorBvr : IDispatch
{
	[propput, id(DISPID_ICRACTORBVR_ANIMATES)]
	HRESULT animates([in] VARIANT varAnimates);
	[propget, id(DISPID_ICRACTORBVR_ANIMATES)] 
	HRESULT animates([retval, out] VARIANT *pvarAnimates);
	[propput, id(DISPID_ICRACTORBVR_SCALE)]
	HRESULT scale([in] VARIANT varScale);
	[propget, id(DISPID_ICRACTORBVR_SCALE)] 
	HRESULT scale([retval, out] VARIANT *pRetScale);
	[propput, id(DISPID_ICRACTORBVR_PIXELSCALE)]
	HRESULT pixelScale([in] VARIANT varPixelScale);
	[propget, id(DISPID_ICRACTORBVR_PIXELSCALE)] 
	HRESULT pixelScale([retval, out] VARIANT *pRetPixelScale);

	//methods
	[id(DISPID_ICRACTORBVR_GETACTORBEHAVIOR)] 
	HRESULT getActorBehavior([in] BSTR				bstrProperty,
							 [in] ActorBvrFlags		eFlags,
							 [in] ActorBvrType		eType,
							 [retval, out] VARIANT *pvarRetBvr);

	[id(DISPID_ICRACTORBVR_ADDBEHAVIORFRAGMENT)]
	HRESULT addBehaviorFragment([in] BSTR           bstrProperty,
                                [in] IUnknown      *pdabvrAnimator,
                                [in] IUnknown      *pdaboolActive,
								[in] IUnknown	   *pdabvrTimeline,
                                [in] ActorBvrFlags  eFlags,
                                [in] ActorBvrType   eType);
	[id(DISPID_ICRACTORBVR_ADDMOUSELISTENER)]
	HRESULT addMouseEventListener([in] IUnknown *pUnkListener );
	[id(DISPID_ICRACTORBVR_REMOVEMOUSELISTENER)]
	HRESULT removeMouseEventListener([in] IUnknown *pUnkListener );

}; // ICrActorBvr

[
	object,
	uuid(b93d15fc-afc3-11d2-b0de-00a0c999c4c0),
	dual,
	helpstring("ICrActorBvr Interface"),
	pointer_default(unique)
]
interface ICrActorBvr2 : ICrActorBvr
{
	[id(DISPID_ICRACTORBVR_ADDBEHAVIORFRAGMENTEX) ]
	HRESULT addBehaviorFragmentEx( [in] BSTR			bstrProperty,
								   [in] IUnknown		*pdabvrAnimator,
								   [in] IUnknown		*pdaboolActive,
								   [in] IUnknown		*pdavrTimeline,
								   [in] ActorBvrFlags	eFlags,
								   [in] ActorBvrType	eType,
								   [in] IDispatch		*pdispBehaviorElement,
								   [out,retval]long		*pCookie);
	
	[id(DISPID_ICRACTORBVR_REMOVEBEHAVIORFRAGMENT) ]
	HRESULT removeBehaviorFragment( [in] long			cookie );

	[id(DISPID_ICRACTORBVR_REQUESTREBUILD) ]
	HRESULT requestRebuild( [in] IDispatch *pdispBehaviorElement );

	[id(DISPID_ICRACTORBVR_CANCELREBUILDREQUESTS) ]
	HRESULT cancelRebuildRequests( [in] IDispatch *pdispBehaviorElement );

	[id(DISPID_ICRACTORBVR_REBUILDNOW) ]
	HRESULT rebuildNow();

	[id(DISPID_ICRACTORBVR_GETSTATIC) ]
	HRESULT getStatic( [in]BSTR bstrTrackName, [out,retval]VARIANT* pRetStatic );

	[id(DISPID_ICRACTORBVR_SETSTATIC) ]
	HRESULT setStatic( [in]BSTR bstrTrackName, [in]VARIANT varStatic );

	[id(DISPID_ICRACTORBVR_GETDYNAMIC) ]
	HRESULT getDynamic( [in]BSTR bstrTrackName, [out,retval]VARIANT* pRetStatic );

	[id(DISPID_ICRACTORBVR_APPLYSTATICS) ]
	HRESULT applyStatics( );

	[id(DISPID_ICRACTORBVR_APPLYDYNAMICS) ]
	HRESULT applyDynamics( );

}; // ICrActorBvr2

//*****************************************************************************
//
// ICrActionBvr
//
//*****************************************************************************


[
	object,
	uuid(3045D45A-8304-11D2-9533-0060B0C3C4F4),
	dual,
	helpstring("ICrActionBvr Interface"),
	pointer_default(unique)
]
interface ICrActionBvr : IDispatch
{
	//methods
	[id(DISPID_ICRACTION_BUILDBVRFRAGS)]
	HRESULT buildBehaviorFragments(IDispatch *pActorDisp);
}; // ICrActionBvr

//*****************************************************************************
//
// CrBehaviorFactory
//
//*****************************************************************************

[
	uuid(754FF233-5D4E-11d2-875B-00A0C93C09B3),
	helpstring("CrBehaviorFactory Class")
]
coclass CrBehaviorFactory
{
	[default] interface ICrBehaviorFactory;
}; // CrBehaviorFactory

//*****************************************************************************
//
// CrScaleBvr
//
//*****************************************************************************

[
	uuid(E80353D3-677D-11d2-875E-00A0C93C09B3),
	helpstring("Scale Behavior Class")
]
coclass CrScaleBvr
{
	[default] interface ICrScaleBvr;
}; // CrScaleBvr


//*****************************************************************************
//
// CrColorBvr
//
//*****************************************************************************

[
	uuid(3845A174-EB30-11D1-9A23-00A0C879FE5F),
	helpstring("Color Behavior Class")
]
coclass CrColorBvr
{
	[default] interface ICrColorBvr;
}; // CrColorBvr

//*****************************************************************************
//
// CrRotateBvr
//
//*****************************************************************************

[
	uuid(027713F2-5FA8-11d2-875B-00A0C93C09B3),
	helpstring("Rotate Behavior Class")
]
coclass CrRotateBvr
{
	[default] interface ICrRotateBvr;
}; // CrRotateBvr

//*****************************************************************************
//
// CrMoveBvr
//
//*****************************************************************************

[
	uuid(C5B86F32-69EE-11d2-875F-00A0C93C09B3),
	helpstring("Move Behavior Class")
]
coclass CrMoveBvr
{
	[default] interface ICrMoveBvr;
}; // CrMoveBvr

//*****************************************************************************
//
// CrPathBvr
//
//*****************************************************************************

[
	uuid(80F49562-6A9A-11d2-875F-00A0C93C09B3),
	helpstring("Path Behavior Class")
]
coclass CrPathBvr
{
	[default] interface ICrPathBvr;
}; // CrPathBvr

//*****************************************************************************
//
// CrNumberBvr
//
//*****************************************************************************

[
	uuid(ECDB03D2-6E99-11d2-875F-00A0C93C09B3),
	helpstring("Number Behavior Class")
]
coclass CrNumberBvr
{
	[default] interface ICrNumberBvr;
}; // CrNumberBvr

//*****************************************************************************
//
// CrSetBvr
//
//*****************************************************************************

[
	uuid(BA60F742-6F72-11d2-875F-00A0C93C09B3),
	helpstring("Set Behavior Class")
]
coclass CrSetBvr
{
	[default] interface ICrSetBvr;
}; // CrSetBvr

//*****************************************************************************
//
// CrActorBvr
//
//*****************************************************************************

[
	uuid(6DDE3061-736C-11D2-A5E8-00A0C967A25F),
	helpstring("Actor Behavior Class")
]
coclass CrActorBvr
{
	[default] interface ICrActorBvr;
}; // CrActorBvr

//*****************************************************************************
//
// CrEffectBvr
//
//*****************************************************************************

[
	uuid(54274112-7A5E-11d2-875F-00A0C93C09B3),
	helpstring("Effect Behavior Class")
]
coclass CrEffectBvr
{
	[default] interface ICrEffectBvr;
}; // CrEffectBvr

//*****************************************************************************
//
// CrActionBvr
//
//*****************************************************************************

[
	uuid(58A2E406-8304-11D2-9533-0060B0C3C4F4),
	helpstring("Action Behavior Class")
]
coclass CrActionBvr
{
	[default] interface ICrActionBvr;
}; // CrEffectBvr

/**************************************************************/
	//The LmSampleInterface
	[
	object,
	uuid(30c11f2c-78fd-11d2-952c-0060b0c3c4f4),
	local,
	helpstring("LMSample Interface"),
	hidden,
	pointer_default(unique)
    ]
	interface ILMSample : IUnknown
	{
		[id(1), helpstring( "Sample method" )]
	HRESULT Sample( double startTime, double globalNow, double localNow );		
	}

//*****************************************************************************
//
// End of File
//
//*****************************************************************************
