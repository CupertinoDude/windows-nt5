import "oleidl.idl";
import "oaidl.idl";

interface IViewFilter;
interface IViewFilterEx;
interface IViewFilterSink;

[
local,
object,
uuid(76d88da0-2c08-11d0-8439-00aa006c88e9),
version(1.0)
]
interface IViewFilter : IUnknown
{
	HRESULT SetSource([in] IViewFilter *pFilter);
	HRESULT GetSource([out] IViewFilter **ppFilter);
	HRESULT SetAdvise([in] IViewFilterSink *pSink);
	HRESULT GetAdvise([out] IViewFilterSink **ppSink);
	HRESULT Draw([in] HDC hdc, [in] LPRECTL prcBounds);
	HRESULT GetColorSet([out] LOGPALETTE **ppPalette);
	HRESULT SetExtent([in] SIZEL *pSizel);
	HRESULT IsOpaque();
}

[
local,
object,
uuid(0502be50-2c09-11d0-8439-00aa006c88e9),
version(1.0)
]
interface IViewFilterEx : IViewFilter
{
	HRESULT QueryHitPoint([in] LPRECTL prcBounds, [in] POINTL *pPoint, [in] LONG lCloseHint, [out] DWORD *pdwResult);
	HRESULT QueryHitRect([in] LPRECTL prcBounds, [in] LPRECTL prect, [in] LONG lCloseHint, [out] DWORD *pdwResult);
	HRESULT TransformPoints([in] ULONG cPoints, [in, out, size_is(cPoints)] POINTL pPoints[]);
}

[
local,
object,
uuid(137accd0-2c09-11d0-8439-00aa006c88e9),
version(1.0)
]
interface IViewFilterSink : IUnknown
{
	HRESULT InvalidateRect([in] LPRECTL prc, [in] BOOL fErase);
	HRESULT InvalidateRgn([in] HRGN hrgn, [in] BOOL fErase);
	HRESULT OnOpaqueChange([in] BOOL fOpaque);
}
