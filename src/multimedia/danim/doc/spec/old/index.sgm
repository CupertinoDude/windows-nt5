<chp id=avr_idx n=0><ti>ActiveVRML Index
<h1><ti> 
<list BREAKALL>
<i><k rid=composition>o (function composition)</k>
<i><k rid=constructor>:: (list constructor)</k>
<i><k rid=pairing>, (pairing constructor)</k>
<i><k rid=equality>= (equality test, lists)</k>
<i><k rid=addition>+ (addition)</k>
<i><k rid=multiplication>* (multiplication)</k>
<i><k rid=scale_vector1>* (2-D vector scaling)</k>
<i><k rid=scale_vector2>* (3-D vector scaling)</k>
<i><k rid=subtraction>- (subtraction)</k>
<i><k rid=division>/ (division)</k>
<i><k rid=scalar_division1>/ (2-D scalar division)</k>
<i><k rid=scalar_division2>/ (3-D scalar division)</k>
<i><k rid=negative>- (negative prefix)</k>
<i><k rid=positive>- (positive prefix)</k>
<i><k rid=less_than>< (less than)</k>
<i><k rid=less_than_equal><= (less than or equal to)</k>
<i><k rid=greater_than>> (greather than)</k>
<i><k rid=greather_than_equal>>= (greather than or equal to)</k>
<i><k rid=power>^ (raised to the power of)</k>
<i><k rid=expression_list>[ ] (expression list constructor)</k>
<i><k rid=alternate>| (alternate event)</k>
<i><k rid=handler>| (handler event)</k>
<i><k rid=create_vector>- (create vector from two points)</k>
<i><k rid=vector_add2>+ (2-D vector addition)</k>
<i><k rid=vector_subtract2>- (2-D vector subtraction)</k>
<i><k rid=vector_add3>+ (3-D vector addition)</k>
<i><k rid=vector_subtract3>- (3-D vector subtraction)</k>
<i><k rid=combine_transform>o (combine two transformations)</k>
<i><k rid=combine_strings>& (combine strings)</k>
</list>

<h1><ti>A
<list BREAKALL>
<i><k>abs</k>
<i><k>acos</k>
<i><xref rid=grammar_and_lexical_conventions>ActiveVRML Grammar and Lexical Conventions</xref>
<i><xref rid=world_wide_web_browsing>ActiveVRML Models and World Wide Web Browsing</xref>
<i><xref rid=sound>Adding Sound</xref>
<i><k>ambientColor</k>
<i><k>ambientLight</k>
<i><k>andEvent</k>
<i><xref rid=appendix>Appendix A: An Extended Example</xref>
<i><k>asin</k>
<i><k>atan</k> (arctangent in radians)
<i><k>atan</k> (arctangent)
</list>

<h1><ti>B
<list BREAKALL>
<i><xref rid=basic_types>Basic Types</xref>
<i><xref rid=behavior>Behaviors</xref>
<i><k>black</k>
<i><k>blue</k>
<i><k>blueComponent</k>
<i><k>bold</k>
<i><k>boolean</k>
</list>

<h1><ti>C
<list BREAKALL>
<i><k>camera</k>
<i><k>ceiling</k>
<i><k>char</k>
<i><k>chr</k>
<i><k>colorHsl</k>
<i><k>colorRgb</k>
<i><xref rid=comp_spec>Compositional Specification</xref>
<i><xref rid=lit_con>Constructor Expressions</xref>
<i><k>cos</k>
<i><k>crop</k>
<i><k>cross</k>
<i><k>cubicBSpline</k>
<i><k>cyan</k>
</list>

<h1><ti>D
<list BREAKALL>
<i><xref rid=expr_dec>Declarations</xref>
<i><k>defaultCamera</k>
<i><k>defaultMicrophone</k>
<i><k>degreesToRadians</k>
<i><xref rid=diff_integration>Differentiation and Integration </xref>
<i><k>diffuseColor</k>
<i><k>directionalLight</k>
<i><k>distance</k> (2-dimensional)
<i><k>distance</k> (3-dimensional)
<i><k>distanceSquared</k> (2-dimensional)
<i><k>distanceSquared</k> (3-dimensional)
<i><xref rid=distrib>Distribution</xref>
<i><k>done</k>
<i><k>dot</k> (2-dimensional)
<i><k>dot</k> (3-dimensional)
</list>

<h1><ti>E
<list BREAKALL>
<i><xref rid=formats>Embracing Existing Formats</xref>
<i><k>emissiveColor</k>
<i><k>empty</k>
<i><k>emptyGeometry</k>
<i><k>emptyImage</k>
<i><k>emptyMontage</k>
<i><k>end</k>
<i><k>exp</k>
<i><k>explode</k>
<i><k>expression</k>
<i><xref rid=expr_dec>Expressions</xref>
<d><xref rid=lit_con>Constructor</xref>
<p><xref rid=lit_con>Literal</xref>
<p><xref rid=var>Variable</xref>
</list>

<h1><ti>F
<list BREAKALL>
<i><k>false</k>
<i><k>first</k>
<i><k>floor</k>
<i><xref rid=footnotes>Footnotes</xref>
<i><k>function pattern</k>
</list>

<h1><ti>G
<list BREAKALL>
<i><k>gain</k>
<i><k>geometry</k>
<i><k>green</k>
<i><k>greenComponent</k>
</list>

<h1><ti>H
<list BREAKALL>
<i><k>head</k>
<i><k>hueComponent</k>
</list>

<h1><ti>I
<list BREAKALL>
<i><k>identityTransform2</k>
<i><k>identityTransform3</k>
<i><k>image</k>
<i><k>imageMontage</k>
<i><k>implode</k>
<i><k>import</k> geometry (supports inline expression of VRML 1.0)
<i><k>import</k> geometry
<i><k>import</k> image
<i><k>import</k> sound
<i><xref rid=integration_differentiation_and_interpolation>Integration, Differentiation, and Interpolation</xref>
<i><k>inverse</k> 2-dimensional transform
<i><k>inverse</k> 3-dimensional transform
<i><k>isSingular</k> 2-dimensional transform
<i><k>isSingular</k> 3-dimensional transform
<i><k>italic</k>
</list>

<h1><ti>J
<list BREAKALL>
</list>

<h1><ti>K
<list BREAKALL>
<i><k>keyDown</k>
<i><k>keyState</k>
<i><k>keyUp</k>
</list>

<h1><ti>L
<list BREAKALL>
<i><xref rid=lang_int>Language Integration for ActiveVRML</xref>
<i><k>leftButtonDown</k>
<i><k>leftButtonState</k>
<i><k>leftButtonUp</k>
<i><k>length</k> list
<i><k>length</k> 2-dimensional vector
<i><k>length</k> 3-dimensional vector
<i><k>lengthSquared</k>
<i><k>lengthSquared</k>
<i><k>lightAttenuation</k>
<i><k>lightColor</k>
<i><k>lightnessComponent</k>
<i><xref rid=lit_con>Literal Expressions</xref>
<i><k>ln</k>
<i><k>log10</k>
<i><k>lookAtFrom</k>
</list>

<h1><ti>M
<list BREAKALL>
<i><k>magenta</k>
<i><k>map</k>
<i><k>microphone</k>
<i><k>mod</k>
<i><xref rid=modeling_types>Modeling Types</xref>
<i><k>monospaced</k>
<i><k>montage</k>
<i><k>mousePosition</k>
</list>

<h1><ti>N
<list BREAKALL>
<i><k>normal</k> 2-dimensional vector
<i><k>normal</k> 3-dimensional vector
<i><k>not</k>
<i><k>nth</k>
<i><k>number-literal</k>
<i><k>number</k>
<i><k>numberToString</k>
<i><k>nurb</k>
</list>

<h1><ti>O
<list BREAKALL>
<i><k>opacity2</k>
<i><k>opacity3</k>
<i><xref rid=optim>Optimizations and Regulation </xref>
<i><k>ord</k>
<i><k>origin2</k>
<i><k>origin3</k>
<i><xref rid=media>Overview of Supported Media Types</xref>
</list>

<h1><ti>P
<list BREAKALL>
<i><xref rid=param>Parameterization</xref>
<i><xref rid=pattern_matching>Pattern Matching</xref>
<i><k>phiComponent</k> 2-dimensional point
<i><k>phiComponent</k> 3-dimensional point
<i><k>phiComponent</k> 3-dimensional vector
<i><k>pi</k>
<i><xref rid=picking_images_and_geometry>Picking Images and Geometry</xref>
<i><k>point2</k>
<i><k>point2Polar</k>
<i><k>point2Xy</k>
<i><k>point3</k>
<i><k>point3Spherical</k>
<i><k>point3Xyz</k>
<i><k>pointLight</k>
<i><k>predicate</k>
<i><k>prefix +</k>
<i><k>prefix -</k>
</list>

<h1><ti>Q
<list BREAKALL>
</list>

<h1><ti>R
<list BREAKALL>
<i><k>radiansToDegrees</k>
<i><k>random</k>
<i><xref rid=reactive_behaviors>Reactive Behaviors</xref>
<i><xref rid=reactivity>Reactivity</xref>
<i><k>red</k>
<i><k>redComponent</k>
<i><k>reduce</k>
<i><k>renderedImage</k> geometry
<i><k>renderedImage</k> montage
<i><k>renderedImage</k> text
<i><k>renderedSound</k>
<i><k>repeat</k>
<i><k>rhoComponent</k> 3-dimensional point
<i><k>rhoComponent</k> 2-dimensional vector
<i><k>rhoComponent</k> 3-dimensional vector
<i><k>rightButtonDown</k>
<i><k>rightButtonState</k>
<i><k>rightButtonUp</k>
<i><k>rotate2</k>
<i><k>rotate</k>
<i><k>round</k>
</list>

<h1><ti>S
<list BREAKALL>
<i><k>sansSerifProportional</k>
<i><k>saturationComponent</k>
<i><k>scale2</k>
<i><k>scale3</k>
<i><k>scale</k> 3-dimensions (point)
<i><k>scale</k> 2-dimensions (point)
<i><k>scale</k> 2-dimensions (vector)
<i><k>scale</k> 3-dimensionas (vector)
<i><xref rid=scoped_name>Scoped Naming</xref>
<i><k>second</k>
<i><k>seededRandom</k>
<i><k>serifProportional</k>
<i><k>shear2</k>
<i><k>silence</k>
<i><k>simpleText</k>
<i><k>sin</k>
<i><xref rid=single_user_interactivity>Single User Interactivity</xref>
<i><k>snapshot</k>
<i><k>sound</k>
<i><k>soundSource3</k>
<i><k>specularColor</k>
<i><k>specularExponent</k>
<i><k>spotLight</k>
<i><k>sqrt</k>
<i><k>string</k>
<i><k>suchThat</k>
</list>

<h1><ti>T
<list BREAKALL>
<i><k>tail</k>
<i><k>tan</k>
<i><k>text</k>
<i><k>textColor</k>
<i><k>textFamily</k>
<i><k>texture</k>
<i><k>thetaComponent</k> 2-dimensions (point)
<i><k>thetaComponent</k> 3-dimensions (point)
<i><k>thetaComponent</k> 2-dimensions (vector)
<i><k>thetaComponent</k> 3-dimensioons (vector)
<i><k>tile</k>
<i><k>time</k>
<i><k>timeTransform</k>
<i><xref rid=time_transforms>Time Transforms</xref>
<i><k>transform2</k>
<i><k>transform3</k>
<i><k>transform3x2</k>
<i><k>transform4x4</k>
<i><k>transformCamera</k>
<i><k>transformGeometry</k>
<i><k>transformImage</k>
<i><k>transformMicrophone</k>
<i><k>transformPoint2</k>
<i><k>transformPoint3</k>
<i><k>transformVector2</k>
<i><k>transformVector3</k>
<i><k>translate</k> 3-dimensions (point)
<i><k>translate</k> 2-dimensions (point)
<i><k>translate</k> 2-dimensions (vector)
<i><k>translate</k> 3-dimensions (vector)
<i><k>true</k>
<i><k>type * type</k>
<i><k>type -> type</k>
</list>

<h1><ti>U
<list BREAKALL>
<i><k>unit</k>
<i><xref rid=user_interaction>User Interaction</xref>
</list>

<h1><ti>V
<list BREAKALL>
<i><xref rid=var>Variable Expressions</xref>
<i><k>vector2</k>
<i><k>vector2Polar</k>
<i><k>vector2Xy</k>
<i><k>vector3</k>
<i><k>vector3Spherical</k>
<i><k>vector3Xyz</k>
<i><xref rid=viewer_conventions_and_information>Viewer Conventions and Information</xref>
</list>

<h1><ti>W
<list BREAKALL>
<i><k>white</k>
</list>

<h1><ti>X
<list BREAKALL>
<i><k>xComponent</k> 2-dimensions (point)
<i><k>xComponent</k> 3-dimensions (point)
<i><k>xComponent</k> 2-dimensions (vector)
<i><k>xComponent</k> 3-dimensions (vector)
<i><k>xVector2</k>
<i><k>xVector3</k>
<i><k>xyShear</k>
</list>

<h1><ti>Y
<list BREAKALL>
<i><k>yComponent</k> 2-dimensions (point)
<i><k>yComponent</k> 3-dimensions (point)
<i><k>yComponent</k> 2-dimensions (vector)
<i><k>yComponent</k> 3-dimensions (vector)
<i><k>yellow</k>
<i><k>yVector2</k>
<i><k>yVector3</k>
<i><k>yzShear</k>
</list>

<h1><ti>Z
<list BREAKALL>
<i><k>zComponent</k>
<i><k>zComponent</k>
<i><k>zeroVector2</k>
<i><k>zeroVector3</k>
<i><k>zVector3</k>
<i><k>zxShear</k>
</list>

