//---------------------------------------------------------------------
//
//  BdaRcvr.idl
//
//      This file defines the Ring 3 BDA interfaces for BDA Receivers
//
//$BUGBUG - This should be merged with BdaIface.idl when we can import tuner.idl
//          there.
//
//  Copyright (c) 1999  Microsoft Corporation
//
//---------------------------------------------------------------------

//---------------------------------------------------------------------
// IUnknown import idl
//---------------------------------------------------------------------
#ifndef DO_NO_IMPORTS
import "unknwn.idl";
import "strmif.idl";
import "BdaTypes.h";
import "tuner.idl";
#endif

//---------------------------------------------------------------------
// IBDA_Mpeg2Receiver interface
//---------------------------------------------------------------------
[
    object,
    uuid(FEFF2C5B-997C-4196-965C-75EC89EF9EEA),
    pointer_default(unique)
]

interface IBDA_Mpeg2Receiver : IUnknown
{
    HRESULT
    put_TuneRequest (
        [in] ITuneRequest *     pTuneRequest
        );

    HRESULT
    put_Locator (
        [in] ILocator *         pLocator
        );

    HRESULT
    AddComponent (
        [in] IComponent *       pComponent
        );

    HRESULT
    RemoveComponent (
        [in] IComponent *       pComponent
        );

    HRESULT
    PutTableSection (
        [in] BDA_TABLE_SECTION *    pBdaTableSection
        );
}


//---------------------------------------------------------------------
// IBDA_Mpeg2CA interface
//---------------------------------------------------------------------
[
    object,
    uuid(B0693766-5278-4ec6-B9E1-3CE40560EF5A),
    pointer_default(unique)
]

interface IBDA_Mpeg2CA : IBDA_Mpeg2Receiver
{
}


//---------------------------------------------------------------------
// IBDA_KSNode interface
//---------------------------------------------------------------------
[
    object,
    uuid(9777DCF8-5F9A-406a-86B0-D74F26772382),
    pointer_default(unique)
]

interface IBDA_KSNode : IUnknown
{

    HRESULT
    ControllingPin( 
        void
        );

    HRESULT
    put_BdaNodeProperty(
        [in] REFGUID                                    refguidPropSet,
        [in] ULONG                                      ulPropertyId,
        [in, out, size_is (ulcbPropertyData)] UCHAR *   pbPropertyData, 
        [in] ULONG                                      ulcbPropertyData
        );

    HRESULT
    get_BdaNodeProperty(
        [in] REFGUID                                    refguidPropSet,
        [in] ULONG                                      ulPropertyId,
        [in, out, size_is (ulcbPropertyData)] UCHAR *   pbPropertyData, 
        [in] ULONG                                      ulcbPropertyData, 
        [in, out] ULONG *                               pulcbBytesReturned
        );
}

