// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (59038596).
//
// danim.tlh
//
// C++ source equivalent of Win32 type library danim.dll
// compiler-generated file created 01/10/99 at 13:36:48 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace DAnim {

//
// Forward references and typedefs
//

struct __declspec(uuid("283807b3-2c60-11d0-a31d-00aa00b92c03"))
/* dual interface */ IDAViewSite;
struct __declspec(uuid("283807b4-2c60-11d0-a31d-00aa00b92c03"))
/* dual interface */ IDAView;
struct __declspec(uuid("283807b7-2c60-11d0-a31d-00aa00b92c03"))
/* dual interface */ IDABehavior;
struct __declspec(uuid("9cde7340-3c20-11d0-a330-00aa00b92c03"))
/* dual interface */ IDANumber;
struct __declspec(uuid("c46c1bc3-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAString;
struct __declspec(uuid("3e2487c4-8709-11d0-b177-00c04fc2a0ca"))
/* dual interface */ IDABvrHook;
struct __declspec(uuid("c46c1bd3-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAImage;
struct __declspec(uuid("4a933703-e36f-11d0-9b99-00c04fc2f51d"))
/* dual interface */ IDAPickableResult;
struct __declspec(uuid("c46c1bdf-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAGeometry;
struct __declspec(uuid("c46c1be5-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAMicrophone;
struct __declspec(uuid("c46c1bdb-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDATransform3;
struct __declspec(uuid("c46c1bc0-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDABoolean;
struct __declspec(uuid("c46c1bcb-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDATransform2;
struct __declspec(uuid("c46c1be3-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDASound;
struct __declspec(uuid("c46c1bc5-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAColor;
struct __declspec(uuid("c46c1bdd-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDABbox3;
struct __declspec(uuid("c46c1bd7-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAPoint3;
struct __declspec(uuid("c46c1be1-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDACamera;
struct __declspec(uuid("c46c1bc7-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAPoint2;
struct __declspec(uuid("50b4791e-4731-11d0-8912-00c04fc2a0ca"))
/* dual interface */ IDAEvent;
struct __declspec(uuid("3f3da01a-4705-11d0-8710-00c04fc29d46"))
/* dual interface */ IDAUntilNotifier;
struct __declspec(uuid("c46c1bcd-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDABbox2;
struct __declspec(uuid("c46c1bd1-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAMatte;
struct __declspec(uuid("69b5bc70-9b19-11d0-9b60-00c04fc2f51d"))
/* dual interface */ IDAPreferences;
struct __declspec(uuid("bc0bfd34-d21d-11d0-9385-00c04fb6bd36"))
/* dual interface */ IDADrawingSurface;
struct __declspec(uuid("c46c1bf1-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDALineStyle;
struct __declspec(uuid("c46c1beb-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAEndStyle;
struct __declspec(uuid("c46c1bed-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAJoinStyle;
struct __declspec(uuid("c46c1bef-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDADashStyle;
struct __declspec(uuid("25b0f91d-d23d-11d0-9b85-00c04fc2f51d"))
/* dual interface */ IDAFontStyle;
typedef enum __MIDL___MIDL_itf_danim_0184_0001 DA_DASH_STYLE;
typedef enum __MIDL___MIDL_itf_danim_0184_0002 DA_END_STYLE;
typedef enum __MIDL___MIDL_itf_danim_0184_0003 DA_JOIN_STYLE;
struct __declspec(uuid("c46c1bcf-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAPath2;
struct __declspec(uuid("9caddc0c-ad56-11d1-9ff8-00c04fa32195"))
/* dual interface */ IDA2Behavior;
typedef enum __MIDL___MIDL_itf_danim_0134_0001 DA_IMAGE_QUALITY_FLAGS;
typedef enum __MIDL___MIDL_itf_danim_0134_0002 DA_INVALIDATED_RECTS_FLAGS;
typedef enum __MIDL___MIDL_itf_danim_0134_0003 DA_DASHSTYLE_ENUM;
typedef enum __MIDL___MIDL_itf_danim_0134_0004 DA_ENDSTYLE_ENUM;
typedef enum __MIDL___MIDL_itf_danim_0134_0005 DA_JOINSTYLE_ENUM;
struct __declspec(uuid("fc54beaa-5b12-11d1-8e7b-00c04fc29d46"))
/* dual interface */ IDAImport;
struct __declspec(uuid("fc54beab-5b12-11d1-8e7b-00c04fc29d46"))
/* dual interface */ IDAModifiableBehavior;
struct /* coclass */ DABehavior;
struct __declspec(uuid("c46c1bd5-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAMontage;
struct __declspec(uuid("c46c1bc9-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAVector2;
struct __declspec(uuid("c46c1bd9-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAVector3;
struct __declspec(uuid("c46c1bf3-3c52-11d0-9200-848c1d000000"))
/* dual interface */ IDAPair;
struct __declspec(uuid("d17506c2-6b26-11d0-8914-00c04fc2a0ca"))
/* dual interface */ IDAArray;
struct __declspec(uuid("5dfb2650-9668-11d0-b17b-00c04fc2a0ca"))
/* dual interface */ IDATuple;
struct __declspec(uuid("af868305-ab0b-11d0-876a-00c04fc29d46"))
/* dual interface */ IDAUserData;
struct __declspec(uuid("b90e5258-574a-11d1-8e7b-00c04fc29d46"))
/* dual interface */ IDA2Geometry;
struct __declspec(uuid("b90e5259-574a-11d1-8e7b-00c04fc29d46"))
/* dual interface */ IDA2Image;
struct __declspec(uuid("960d8eff-e494-11d1-ab75-00c04fd92b6b"))
/* dual interface */ IDA2FontStyle;
struct __declspec(uuid("5f00f545-df18-11d1-ab6f-00c04fd92b6b"))
/* dual interface */ IDA2LineStyle;
struct __declspec(uuid("b90e525a-574a-11d1-8e7b-00c04fc29d46"))
/* dual interface */ IDA2Event;
struct __declspec(uuid("2a8f0b06-be2b-11d1-b219-00c04fc2a0ca"))
/* dual interface */ IDA2Array;
struct __declspec(uuid("28a4b924-61fe-11d2-a740-00c04f79754c"))
/* dual interface */ IDA2Color;
struct __declspec(uuid("eb5093c7-56f9-11d2-88ce-00c04fa35859"))
/* dual interface */ IDA3Geometry;
struct __declspec(uuid("ad083dbb-5817-11d2-aba1-00c04fd92b6b"))
/* dual interface */ IDA3Image;
struct __declspec(uuid("3089d9a0-4ce1-11d2-933e-00a0c9b72d4d"))
/* dual interface */ IDA3Array;
struct __declspec(uuid("2ae71568-4b34-11d1-b1e3-00c04fc2a0ca"))
/* dual interface */ IDA2View;
struct __declspec(uuid("d5570790-57e2-11d2-933f-00a0c9b72d4d"))
/* dual interface */ IDA3View;
struct __declspec(uuid("89131312-7806-11d2-8bee-00c04fc2f51d"))
/* dispinterface */ _IDAViewEvents;
struct /* coclass */ DAView;
struct __declspec(uuid("45393df0-54b9-11cf-92a2-00aa00b8a733"))
/* dual interface */ IDASite;
struct __declspec(uuid("4a933702-e36f-11d0-9b99-00c04fc2f51d"))
/* dual interface */ IDAImportationResult;
struct __declspec(uuid("bacd4d86-4a4f-11d1-9bc8-00c04fc2f51d"))
/* dual interface */ IDADXTransformResult;
struct __declspec(uuid("542fb452-5003-11cf-92a2-00aa00b8a733"))
/* dual interface */ IDAStatics;
struct __declspec(uuid("fa261cf0-c44e-11d1-9be4-00c04fc2f51d"))
/* dual interface */ IDA2Statics;
struct __declspec(uuid("6e0b5fc4-4d1e-11d2-aa53-00c04fc2f60f"))
/* dual interface */ IDA3Statics;
struct /* coclass */ DAStatics;
typedef enum __MIDL___MIDL_itf_danim_0192_0001 DA_TIMER_SOURCE;
struct __declspec(uuid("0e41257b-812d-11d0-9b4a-00c04fc2f51d"))
/* dual interface */ IDAViewerControl;
struct __declspec(uuid("ba8b033e-1e91-11d1-8809-00c04fc29d46"))
/* dual interface */ IDAViewerControlWindowed;
struct __declspec(uuid("f3e1b522-d8a6-11d1-9be5-00c04fc2f51d"))
/* dual interface */ IDA2ViewerControl;
struct __declspec(uuid("a3034056-ec1c-11d1-9be8-00c04fc2f51d"))
/* dual interface */ IDA2ViewerControlWindowed;
struct __declspec(uuid("09509866-79aa-11d2-8bf5-00c04fc2f51d"))
/* dual interface */ IDA3ViewerControl;
struct __declspec(uuid("09509867-79aa-11d2-8bf5-00c04fc2f51d"))
/* dual interface */ IDA3ViewerControlWindowed;
struct __declspec(uuid("3584f274-61ea-11d2-8bd9-00c04fc2f51d"))
/* dispinterface */ _IDAViewerControlEvents;
struct /* coclass */ DAViewerControl;
struct /* coclass */ DAViewerControlWindowed;
struct /* coclass */ DABoolean;
struct /* coclass */ DACamera;
struct /* coclass */ DAColor;
struct /* coclass */ DAGeometry;
struct /* coclass */ DAImage;
struct /* coclass */ DAMatte;
struct /* coclass */ DAMicrophone;
struct /* coclass */ DAMontage;
struct /* coclass */ DANumber;
struct /* coclass */ DAPath2;
struct /* coclass */ DAPoint2;
struct /* coclass */ DAPoint3;
struct /* coclass */ DASound;
struct /* coclass */ DAString;
struct /* coclass */ DATransform2;
struct /* coclass */ DATransform3;
struct /* coclass */ DAVector2;
struct /* coclass */ DAVector3;
struct /* coclass */ DAFontStyle;
struct /* coclass */ DALineStyle;
struct /* coclass */ DAEndStyle;
struct /* coclass */ DAJoinStyle;
struct /* coclass */ DADashStyle;
struct /* coclass */ DABbox2;
struct /* coclass */ DABbox3;
struct /* coclass */ DAPair;
struct /* coclass */ DAEvent;
struct /* coclass */ DAArray;
struct /* coclass */ DATuple;
struct /* coclass */ DAUserData;
struct /* coclass */ DAImportationResult;
struct /* coclass */ DAPickableResult;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IDAViewSite, __uuidof(IDAViewSite));
_COM_SMARTPTR_TYPEDEF(IDAView, __uuidof(IDAView));
_COM_SMARTPTR_TYPEDEF(IDABehavior, __uuidof(IDABehavior));
_COM_SMARTPTR_TYPEDEF(IDANumber, __uuidof(IDANumber));
_COM_SMARTPTR_TYPEDEF(IDAString, __uuidof(IDAString));
_COM_SMARTPTR_TYPEDEF(IDABvrHook, __uuidof(IDABvrHook));
_COM_SMARTPTR_TYPEDEF(IDAImage, __uuidof(IDAImage));
_COM_SMARTPTR_TYPEDEF(IDAPickableResult, __uuidof(IDAPickableResult));
_COM_SMARTPTR_TYPEDEF(IDAGeometry, __uuidof(IDAGeometry));
_COM_SMARTPTR_TYPEDEF(IDAMicrophone, __uuidof(IDAMicrophone));
_COM_SMARTPTR_TYPEDEF(IDATransform3, __uuidof(IDATransform3));
_COM_SMARTPTR_TYPEDEF(IDABoolean, __uuidof(IDABoolean));
_COM_SMARTPTR_TYPEDEF(IDATransform2, __uuidof(IDATransform2));
_COM_SMARTPTR_TYPEDEF(IDASound, __uuidof(IDASound));
_COM_SMARTPTR_TYPEDEF(IDAColor, __uuidof(IDAColor));
_COM_SMARTPTR_TYPEDEF(IDABbox3, __uuidof(IDABbox3));
_COM_SMARTPTR_TYPEDEF(IDAPoint3, __uuidof(IDAPoint3));
_COM_SMARTPTR_TYPEDEF(IDACamera, __uuidof(IDACamera));
_COM_SMARTPTR_TYPEDEF(IDAPoint2, __uuidof(IDAPoint2));
_COM_SMARTPTR_TYPEDEF(IDAEvent, __uuidof(IDAEvent));
_COM_SMARTPTR_TYPEDEF(IDAUntilNotifier, __uuidof(IDAUntilNotifier));
_COM_SMARTPTR_TYPEDEF(IDABbox2, __uuidof(IDABbox2));
_COM_SMARTPTR_TYPEDEF(IDAMatte, __uuidof(IDAMatte));
_COM_SMARTPTR_TYPEDEF(IDAPreferences, __uuidof(IDAPreferences));
_COM_SMARTPTR_TYPEDEF(IDADrawingSurface, __uuidof(IDADrawingSurface));
_COM_SMARTPTR_TYPEDEF(IDALineStyle, __uuidof(IDALineStyle));
_COM_SMARTPTR_TYPEDEF(IDAEndStyle, __uuidof(IDAEndStyle));
_COM_SMARTPTR_TYPEDEF(IDAJoinStyle, __uuidof(IDAJoinStyle));
_COM_SMARTPTR_TYPEDEF(IDADashStyle, __uuidof(IDADashStyle));
_COM_SMARTPTR_TYPEDEF(IDAFontStyle, __uuidof(IDAFontStyle));
_COM_SMARTPTR_TYPEDEF(IDAPath2, __uuidof(IDAPath2));
_COM_SMARTPTR_TYPEDEF(IDA2Behavior, __uuidof(IDA2Behavior));
_COM_SMARTPTR_TYPEDEF(IDAImport, __uuidof(IDAImport));
_COM_SMARTPTR_TYPEDEF(IDAModifiableBehavior, __uuidof(IDAModifiableBehavior));
_COM_SMARTPTR_TYPEDEF(IDAMontage, __uuidof(IDAMontage));
_COM_SMARTPTR_TYPEDEF(IDAVector2, __uuidof(IDAVector2));
_COM_SMARTPTR_TYPEDEF(IDAVector3, __uuidof(IDAVector3));
_COM_SMARTPTR_TYPEDEF(IDAPair, __uuidof(IDAPair));
_COM_SMARTPTR_TYPEDEF(IDAArray, __uuidof(IDAArray));
_COM_SMARTPTR_TYPEDEF(IDATuple, __uuidof(IDATuple));
_COM_SMARTPTR_TYPEDEF(IDAUserData, __uuidof(IDAUserData));
_COM_SMARTPTR_TYPEDEF(IDA2Geometry, __uuidof(IDA2Geometry));
_COM_SMARTPTR_TYPEDEF(IDA2Image, __uuidof(IDA2Image));
_COM_SMARTPTR_TYPEDEF(IDA2FontStyle, __uuidof(IDA2FontStyle));
_COM_SMARTPTR_TYPEDEF(IDA2LineStyle, __uuidof(IDA2LineStyle));
_COM_SMARTPTR_TYPEDEF(IDA2Event, __uuidof(IDA2Event));
_COM_SMARTPTR_TYPEDEF(IDA2Array, __uuidof(IDA2Array));
_COM_SMARTPTR_TYPEDEF(IDA2Color, __uuidof(IDA2Color));
_COM_SMARTPTR_TYPEDEF(IDA3Geometry, __uuidof(IDA3Geometry));
_COM_SMARTPTR_TYPEDEF(IDA3Image, __uuidof(IDA3Image));
_COM_SMARTPTR_TYPEDEF(IDA3Array, __uuidof(IDA3Array));
_COM_SMARTPTR_TYPEDEF(IDA2View, __uuidof(IDA2View));
_COM_SMARTPTR_TYPEDEF(IDA3View, __uuidof(IDA3View));
_COM_SMARTPTR_TYPEDEF(_IDAViewEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IDASite, __uuidof(IDASite));
_COM_SMARTPTR_TYPEDEF(IDAImportationResult, __uuidof(IDAImportationResult));
_COM_SMARTPTR_TYPEDEF(IDADXTransformResult, __uuidof(IDADXTransformResult));
_COM_SMARTPTR_TYPEDEF(IDAStatics, __uuidof(IDAStatics));
_COM_SMARTPTR_TYPEDEF(IDA2Statics, __uuidof(IDA2Statics));
_COM_SMARTPTR_TYPEDEF(IDA3Statics, __uuidof(IDA3Statics));
_COM_SMARTPTR_TYPEDEF(IDAViewerControl, __uuidof(IDAViewerControl));
_COM_SMARTPTR_TYPEDEF(IDAViewerControlWindowed, __uuidof(IDAViewerControlWindowed));
_COM_SMARTPTR_TYPEDEF(IDA2ViewerControl, __uuidof(IDA2ViewerControl));
_COM_SMARTPTR_TYPEDEF(IDA2ViewerControlWindowed, __uuidof(IDA2ViewerControlWindowed));
_COM_SMARTPTR_TYPEDEF(IDA3ViewerControl, __uuidof(IDA3ViewerControl));
_COM_SMARTPTR_TYPEDEF(IDA3ViewerControlWindowed, __uuidof(IDA3ViewerControlWindowed));
_COM_SMARTPTR_TYPEDEF(_IDAViewerControlEvents, __uuidof(IDispatch));

//
// Type library items
//

struct __declspec(uuid("283807b3-2c60-11d0-a31d-00aa00b92c03"))
IDAViewSite : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetStatusText (
        _bstr_t StatusText );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetStatusText (
        BSTR StatusText ) = 0;
};

struct __declspec(uuid("283807b4-2c60-11d0-a31d-00aa00b92c03"))
IDAView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSimulationTime))
    double SimulationTime;
    __declspec(property(get=GetWindow,put=PutWindow))
    long Window;
    __declspec(property(get=GetIDirectDrawSurface,put=PutIDirectDrawSurface))
    IUnknownPtr IDirectDrawSurface;
    __declspec(property(get=GetDC,put=PutDC))
    wireHDC DC;
    __declspec(property(get=GetCompositeDirectlyToTarget,put=PutCompositeDirectlyToTarget))
    VARIANT_BOOL CompositeDirectlyToTarget;
    __declspec(property(get=GetSite,put=PutSite))
    IDAViewSitePtr Site;
    __declspec(property(get=GetClientSite,put=PutClientSite))
    IOleClientSitePtr ClientSite;
    __declspec(property(get=GetPreferences))
    IDAPreferencesPtr Preferences;

    //
    // Wrapper methods for error-handling
    //

    double GetSimulationTime ( );
    VARIANT_BOOL Tick (
        double simTime );
    HRESULT Render ( );
    long AddBvrToRun (
        struct IDABehavior * bvr );
    HRESULT RemoveRunningBvr (
        long id );
    HRESULT StartModel (
        struct IDAImage * pImage,
        struct IDASound * pSound,
        double startTime );
    HRESULT StopModel ( );
    long GetWindow ( );
    void PutWindow (
        long hwnd );
    IUnknownPtr GetIDirectDrawSurface ( );
    void PutIDirectDrawSurface (
        IUnknown * ddsurf );
    wireHDC GetDC ( );
    void PutDC (
        wireHDC DC );
    VARIANT_BOOL GetCompositeDirectlyToTarget ( );
    void PutCompositeDirectlyToTarget (
        VARIANT_BOOL composeToTarget );
    HRESULT SetViewport (
        long xPos,
        long yPos,
        long w,
        long h );
    HRESULT SetClipRect (
        long xPos,
        long yPos,
        long w,
        long h );
    HRESULT RePaint (
        long xPos,
        long yPos,
        long w,
        long h );
    HRESULT PaletteChanged (
        VARIANT_BOOL bNew );
    IDAViewSitePtr GetSite ( );
    void PutSite (
        struct IDAViewSite * pViewSite );
    void PutClientSite (
        struct IOleClientSite * pClientSite );
    IOleClientSitePtr GetClientSite ( );
    HRESULT OnMouseMove (
        double when,
        long xPos,
        long yPos,
        unsigned char modifiers );
    HRESULT OnMouseButton (
        double when,
        long xPos,
        long yPos,
        unsigned char button,
        VARIANT_BOOL bPressed,
        unsigned char modifiers );
    HRESULT OnKey (
        double when,
        long key,
        VARIANT_BOOL bPressed,
        unsigned char modifiers );
    HRESULT OnFocus (
        VARIANT_BOOL bHasFocus );
    IDAPreferencesPtr GetPreferences ( );
    unsigned long QueryHitPoint (
        unsigned long dwAspect,
        struct tagRECT * prcBounds,
        struct tagPOINT ptLoc,
        long lCloseHint );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SimulationTime (
        double * simTime ) = 0;
    virtual HRESULT __stdcall raw_Tick (
        double simTime,
        VARIANT_BOOL * needToRender ) = 0;
    virtual HRESULT __stdcall raw_Render ( ) = 0;
    virtual HRESULT __stdcall raw_AddBvrToRun (
        struct IDABehavior * bvr,
        long * pId ) = 0;
    virtual HRESULT __stdcall raw_RemoveRunningBvr (
        long id ) = 0;
    virtual HRESULT __stdcall raw_StartModel (
        struct IDAImage * pImage,
        struct IDASound * pSound,
        double startTime ) = 0;
    virtual HRESULT __stdcall raw_StopModel ( ) = 0;
    virtual HRESULT __stdcall get_Window (
        long * hwnd ) = 0;
    virtual HRESULT __stdcall put_Window (
        long hwnd ) = 0;
    virtual HRESULT __stdcall get_IDirectDrawSurface (
        IUnknown * * ddsurf ) = 0;
    virtual HRESULT __stdcall put_IDirectDrawSurface (
        IUnknown * ddsurf ) = 0;
    virtual HRESULT __stdcall get_DC (
        wireHDC * DC ) = 0;
    virtual HRESULT __stdcall put_DC (
        wireHDC DC ) = 0;
    virtual HRESULT __stdcall get_CompositeDirectlyToTarget (
        VARIANT_BOOL * composeToTarget ) = 0;
    virtual HRESULT __stdcall put_CompositeDirectlyToTarget (
        VARIANT_BOOL composeToTarget ) = 0;
    virtual HRESULT __stdcall raw_SetViewport (
        long xPos,
        long yPos,
        long w,
        long h ) = 0;
    virtual HRESULT __stdcall raw_SetClipRect (
        long xPos,
        long yPos,
        long w,
        long h ) = 0;
    virtual HRESULT __stdcall raw_RePaint (
        long xPos,
        long yPos,
        long w,
        long h ) = 0;
    virtual HRESULT __stdcall raw_PaletteChanged (
        VARIANT_BOOL bNew ) = 0;
    virtual HRESULT __stdcall get_Site (
        struct IDAViewSite * * pViewSite ) = 0;
    virtual HRESULT __stdcall put_Site (
        struct IDAViewSite * pViewSite ) = 0;
    virtual HRESULT __stdcall put_ClientSite (
        struct IOleClientSite * pClientSite ) = 0;
    virtual HRESULT __stdcall get_ClientSite (
        struct IOleClientSite * * pClientSite ) = 0;
    virtual HRESULT __stdcall raw_OnMouseMove (
        double when,
        long xPos,
        long yPos,
        unsigned char modifiers ) = 0;
    virtual HRESULT __stdcall raw_OnMouseButton (
        double when,
        long xPos,
        long yPos,
        unsigned char button,
        VARIANT_BOOL bPressed,
        unsigned char modifiers ) = 0;
    virtual HRESULT __stdcall raw_OnKey (
        double when,
        long key,
        VARIANT_BOOL bPressed,
        unsigned char modifiers ) = 0;
    virtual HRESULT __stdcall raw_OnFocus (
        VARIANT_BOOL bHasFocus ) = 0;
    virtual HRESULT __stdcall get_Preferences (
        struct IDAPreferences * * prefs ) = 0;
    virtual HRESULT __stdcall raw_QueryHitPoint (
        unsigned long dwAspect,
        struct tagRECT * prcBounds,
        struct tagPOINT ptLoc,
        long lCloseHint,
        unsigned long * pHitResult ) = 0;
};

struct __declspec(uuid("283807b7-2c60-11d0-a31d-00aa00b92c03"))
IDABehavior : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetClassName ( );
    HRESULT Init (
        struct IDABehavior * toBvr );
    IDABehaviorPtr Importance (
        double relativeImportance );
    IDABehaviorPtr RunOnce ( );
    IDABehaviorPtr SubstituteTime (
        struct IDANumber * xform );
    HRESULT SwitchTo (
        struct IDABehavior * SwitchTo );
    HRESULT SwitchToNumber (
        double numToSwitchTo );
    HRESULT SwitchToString (
        _bstr_t strToSwitchTo );
    IDABehaviorPtr Hook (
        struct IDABvrHook * notifier );
    IDABehaviorPtr Duration (
        double Duration );
    IDABehaviorPtr DurationAnim (
        struct IDANumber * Duration );
    IDABehaviorPtr Repeat (
        long count );
    IDABehaviorPtr RepeatForever ( );
    VARIANT_BOOL IsReady (
        VARIANT_BOOL bBlock );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_GetClassName (
        BSTR * pClassName ) = 0;
    virtual HRESULT __stdcall raw_Init (
        struct IDABehavior * toBvr ) = 0;
    virtual HRESULT __stdcall raw_Importance (
        double relativeImportance,
        struct IDABehavior * * ppBvr ) = 0;
    virtual HRESULT __stdcall raw_RunOnce (
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_SubstituteTime (
        struct IDANumber * xform,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_SwitchTo (
        struct IDABehavior * SwitchTo ) = 0;
    virtual HRESULT __stdcall raw_SwitchToNumber (
        double numToSwitchTo ) = 0;
    virtual HRESULT __stdcall raw_SwitchToString (
        BSTR strToSwitchTo ) = 0;
    virtual HRESULT __stdcall raw_Hook (
        struct IDABvrHook * notifier,
        struct IDABehavior * * pBvr ) = 0;
    virtual HRESULT __stdcall raw_Duration (
        double Duration,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_DurationAnim (
        struct IDANumber * Duration,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Repeat (
        long count,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_RepeatForever (
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_IsReady (
        VARIANT_BOOL bBlock,
        VARIANT_BOOL * b ) = 0;
};

struct __declspec(uuid("9cde7340-3c20-11d0-a330-00aa00b92c03"))
IDANumber : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    double Extract ( );
    IDANumberPtr AnimateProperty (
        _bstr_t propertyPath_0,
        _bstr_t scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3 );
    IDAStringPtr ToStringAnim (
        struct IDANumber * precision_0 );
    IDAStringPtr ToString (
        double precision_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Extract (
        double * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_AnimateProperty (
        BSTR propertyPath_0,
        BSTR scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3,
        struct IDANumber * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_ToStringAnim (
        struct IDANumber * precision_0,
        struct IDAString * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ToString (
        double precision_0,
        struct IDAString * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1bc3-3c52-11d0-9200-848c1d000000"))
IDAString : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    _bstr_t Extract ( );
    IDAStringPtr AnimateProperty (
        _bstr_t propertyPath_0,
        _bstr_t scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Extract (
        BSTR * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_AnimateProperty (
        BSTR propertyPath_0,
        BSTR scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3,
        struct IDAString * * ret_4 ) = 0;
};

struct __declspec(uuid("3e2487c4-8709-11d0-b177-00c04fc2a0ca"))
IDABvrHook : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr Notify (
        long id,
        VARIANT_BOOL startingPerformance,
        double startTime,
        double gTime,
        double lTime,
        struct IDABehavior * sampleVal,
        struct IDABehavior * curRunningBvr );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Notify (
        long id,
        VARIANT_BOOL startingPerformance,
        double startTime,
        double gTime,
        double lTime,
        struct IDABehavior * sampleVal,
        struct IDABehavior * curRunningBvr,
        struct IDABehavior * * ppBvr ) = 0;
};

struct __declspec(uuid("c46c1bd3-3c52-11d0-9200-848c1d000000"))
IDAImage : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetBoundingBox))
    IDABbox2Ptr BoundingBox;

    //
    // Wrapper methods for error-handling
    //

    IDAPickableResultPtr Pickable ( );
    IDAPickableResultPtr PickableOccluded ( );
    IDAImagePtr ApplyBitmapEffect (
        IUnknown * effectToApply_0,
        struct IDAEvent * firesWhenChanged_1 );
    IDABbox2Ptr GetBoundingBox ( );
    IDAImagePtr Crop (
        struct IDAPoint2 * min_0,
        struct IDAPoint2 * max_1 );
    IDAImagePtr Transform (
        struct IDATransform2 * xf_0 );
    IDAImagePtr OpacityAnim (
        struct IDANumber * opacity_0 );
    IDAImagePtr Opacity (
        double opacity_0 );
    IDAImagePtr Undetectable ( );
    IDAImagePtr Tile ( );
    IDAImagePtr Clip (
        struct IDAMatte * m_0 );
    IDAImagePtr MapToUnitSquare ( );
    IDAImagePtr ClipPolygonImageEx (
        long points_0size,
        struct IDAPoint2 * * points_0 );
    IDAImagePtr ClipPolygonImage (
        const _variant_t & points_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Pickable (
        struct IDAPickableResult * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_PickableOccluded (
        struct IDAPickableResult * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_ApplyBitmapEffect (
        IUnknown * effectToApply_0,
        struct IDAEvent * firesWhenChanged_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_BoundingBox (
        struct IDABbox2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Crop (
        struct IDAPoint2 * min_0,
        struct IDAPoint2 * max_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xf_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_OpacityAnim (
        struct IDANumber * opacity_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Opacity (
        double opacity_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Undetectable (
        struct IDAImage * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Tile (
        struct IDAImage * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Clip (
        struct IDAMatte * m_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_MapToUnitSquare (
        struct IDAImage * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_ClipPolygonImageEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ClipPolygonImage (
        VARIANT points_0,
        struct IDAImage * * ret_1 ) = 0;
};

struct __declspec(uuid("4a933703-e36f-11d0-9b99-00c04fc2f51d"))
IDAPickableResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetImage))
    IDAImagePtr Image;
    __declspec(property(get=GetGeometry))
    IDAGeometryPtr Geometry;
    __declspec(property(get=GetPickEvent))
    IDAEventPtr PickEvent;

    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr GetImage ( );
    IDAGeometryPtr GetGeometry ( );
    IDAEventPtr GetPickEvent ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Image (
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IDAGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall get_PickEvent (
        struct IDAEvent * * ppPickEvent ) = 0;
};

struct __declspec(uuid("c46c1bdf-3c52-11d0-9200-848c1d000000"))
IDAGeometry : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetBoundingBox))
    IDABbox3Ptr BoundingBox;

    //
    // Wrapper methods for error-handling
    //

    IDASoundPtr RenderSound (
        struct IDAMicrophone * mic_0 );
    IDAPickableResultPtr Pickable ( );
    IDAPickableResultPtr PickableOccluded ( );
    IDAGeometryPtr Undetectable ( );
    IDAGeometryPtr EmissiveColor (
        struct IDAColor * col_0 );
    IDAGeometryPtr DiffuseColor (
        struct IDAColor * col_0 );
    IDAGeometryPtr SpecularColor (
        struct IDAColor * col_0 );
    IDAGeometryPtr SpecularExponent (
        double power_0 );
    IDAGeometryPtr SpecularExponentAnim (
        struct IDANumber * power_0 );
    IDAGeometryPtr Texture (
        struct IDAImage * texture_0 );
    IDAGeometryPtr Opacity (
        double level_0 );
    IDAGeometryPtr OpacityAnim (
        struct IDANumber * level_0 );
    IDAGeometryPtr Transform (
        struct IDATransform3 * xf_0 );
    IDABbox3Ptr GetBoundingBox ( );
    IDAImagePtr Render (
        struct IDACamera * cam_0 );
    IDAGeometryPtr LightColor (
        struct IDAColor * color_0 );
    IDAGeometryPtr LightAttenuationAnim (
        struct IDANumber * constant_0,
        struct IDANumber * linear_1,
        struct IDANumber * quadratic_2 );
    IDAGeometryPtr LightAttenuation (
        double constant_0,
        double linear_1,
        double quadratic_2 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_RenderSound (
        struct IDAMicrophone * mic_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Pickable (
        struct IDAPickableResult * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_PickableOccluded (
        struct IDAPickableResult * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Undetectable (
        struct IDAGeometry * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_EmissiveColor (
        struct IDAColor * col_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DiffuseColor (
        struct IDAColor * col_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SpecularColor (
        struct IDAColor * col_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SpecularExponent (
        double power_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SpecularExponentAnim (
        struct IDANumber * power_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Texture (
        struct IDAImage * texture_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Opacity (
        double level_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_OpacityAnim (
        struct IDANumber * level_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform3 * xf_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_BoundingBox (
        struct IDABbox3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Render (
        struct IDACamera * cam_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_LightColor (
        struct IDAColor * color_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_LightAttenuationAnim (
        struct IDANumber * constant_0,
        struct IDANumber * linear_1,
        struct IDANumber * quadratic_2,
        struct IDAGeometry * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_LightAttenuation (
        double constant_0,
        double linear_1,
        double quadratic_2,
        struct IDAGeometry * * ret_3 ) = 0;
};

struct __declspec(uuid("c46c1be5-3c52-11d0-9200-848c1d000000"))
IDAMicrophone : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAMicrophonePtr Transform (
        struct IDATransform3 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform3 * xf_0,
        struct IDAMicrophone * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1bdb-3c52-11d0-9200-848c1d000000"))
IDATransform3 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetIsSingular))
    IDABooleanPtr IsSingular;

    //
    // Wrapper methods for error-handling
    //

    IDATransform3Ptr Inverse ( );
    IDABooleanPtr GetIsSingular ( );
    IDATransform2Ptr ParallelTransform2 ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Inverse (
        struct IDATransform3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_IsSingular (
        struct IDABoolean * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_ParallelTransform2 (
        struct IDATransform2 * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bc0-3c52-11d0-9200-848c1d000000"))
IDABoolean : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL Extract ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Extract (
        VARIANT_BOOL * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bcb-3c52-11d0-9200-848c1d000000"))
IDATransform2 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetIsSingular))
    IDABooleanPtr IsSingular;

    //
    // Wrapper methods for error-handling
    //

    IDATransform2Ptr Inverse ( );
    IDABooleanPtr GetIsSingular ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Inverse (
        struct IDATransform2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_IsSingular (
        struct IDABoolean * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1be3-3c52-11d0-9200-848c1d000000"))
IDASound : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDASoundPtr PhaseAnim (
        struct IDANumber * phaseAmt_0 );
    IDASoundPtr Phase (
        double phaseAmt_0 );
    IDASoundPtr RateAnim (
        struct IDANumber * pitchShift_0 );
    IDASoundPtr Rate (
        double pitchShift_0 );
    IDASoundPtr PanAnim (
        struct IDANumber * panAmt_0 );
    IDASoundPtr Pan (
        double panAmt_0 );
    IDASoundPtr GainAnim (
        struct IDANumber * gainAmt_0 );
    IDASoundPtr Gain (
        double gainAmt_0 );
    IDASoundPtr Loop ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_PhaseAnim (
        struct IDANumber * phaseAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Phase (
        double phaseAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_RateAnim (
        struct IDANumber * pitchShift_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rate (
        double pitchShift_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_PanAnim (
        struct IDANumber * panAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Pan (
        double panAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_GainAnim (
        struct IDANumber * gainAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Gain (
        double gainAmt_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Loop (
        struct IDASound * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bc5-3c52-11d0-9200-848c1d000000"))
IDAColor : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetRed))
    IDANumberPtr Red;
    __declspec(property(get=GetGreen))
    IDANumberPtr Green;
    __declspec(property(get=GetBlue))
    IDANumberPtr Blue;
    __declspec(property(get=GetHue))
    IDANumberPtr Hue;
    __declspec(property(get=GetSaturation))
    IDANumberPtr Saturation;
    __declspec(property(get=GetLightness))
    IDANumberPtr Lightness;

    //
    // Wrapper methods for error-handling
    //

    IDANumberPtr GetRed ( );
    IDANumberPtr GetGreen ( );
    IDANumberPtr GetBlue ( );
    IDANumberPtr GetHue ( );
    IDANumberPtr GetSaturation ( );
    IDANumberPtr GetLightness ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Red (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Green (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Blue (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Hue (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Saturation (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Lightness (
        struct IDANumber * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bdd-3c52-11d0-9200-848c1d000000"))
IDABbox3 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetMin))
    IDAPoint3Ptr Min;
    __declspec(property(get=GetMax))
    IDAPoint3Ptr Max;

    //
    // Wrapper methods for error-handling
    //

    IDAPoint3Ptr GetMin ( );
    IDAPoint3Ptr GetMax ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Min (
        struct IDAPoint3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Max (
        struct IDAPoint3 * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bd7-3c52-11d0-9200-848c1d000000"))
IDAPoint3 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetX))
    IDANumberPtr X;
    __declspec(property(get=GetY))
    IDANumberPtr Y;
    __declspec(property(get=GetZ))
    IDANumberPtr Z;
    __declspec(property(get=GetSphericalCoordXYAngle))
    IDANumberPtr SphericalCoordXYAngle;
    __declspec(property(get=GetSphericalCoordYZAngle))
    IDANumberPtr SphericalCoordYZAngle;
    __declspec(property(get=GetSphericalCoordLength))
    IDANumberPtr SphericalCoordLength;

    //
    // Wrapper methods for error-handling
    //

    IDAPoint2Ptr Project (
        struct IDACamera * cam_0 );
    IDANumberPtr GetX ( );
    IDANumberPtr GetY ( );
    IDANumberPtr GetZ ( );
    IDANumberPtr GetSphericalCoordXYAngle ( );
    IDANumberPtr GetSphericalCoordYZAngle ( );
    IDANumberPtr GetSphericalCoordLength ( );
    IDAPoint3Ptr Transform (
        struct IDATransform3 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Project (
        struct IDACamera * cam_0,
        struct IDAPoint2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_X (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Y (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Z (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordXYAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordYZAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordLength (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform3 * xf_0,
        struct IDAPoint3 * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1be1-3c52-11d0-9200-848c1d000000"))
IDACamera : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDACameraPtr Transform (
        struct IDATransform3 * xf_0 );
    IDACameraPtr Depth (
        double depth_0 );
    IDACameraPtr DepthAnim (
        struct IDANumber * depth_0 );
    IDACameraPtr DepthResolution (
        double resolution_0 );
    IDACameraPtr DepthResolutionAnim (
        struct IDANumber * resolution_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform3 * xf_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Depth (
        double depth_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DepthAnim (
        struct IDANumber * depth_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DepthResolution (
        double resolution_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DepthResolutionAnim (
        struct IDANumber * resolution_0,
        struct IDACamera * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1bc7-3c52-11d0-9200-848c1d000000"))
IDAPoint2 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetX))
    IDANumberPtr X;
    __declspec(property(get=GetY))
    IDANumberPtr Y;
    __declspec(property(get=GetPolarCoordAngle))
    IDANumberPtr PolarCoordAngle;
    __declspec(property(get=GetPolarCoordLength))
    IDANumberPtr PolarCoordLength;

    //
    // Wrapper methods for error-handling
    //

    IDAPoint2Ptr AnimateControlPosition (
        _bstr_t propertyPath_0,
        _bstr_t scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3 );
    IDAPoint2Ptr AnimateControlPositionPixel (
        _bstr_t propertyPath_0,
        _bstr_t scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3 );
    IDANumberPtr GetX ( );
    IDANumberPtr GetY ( );
    IDANumberPtr GetPolarCoordAngle ( );
    IDANumberPtr GetPolarCoordLength ( );
    IDAPoint2Ptr Transform (
        struct IDATransform2 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AnimateControlPosition (
        BSTR propertyPath_0,
        BSTR scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3,
        struct IDAPoint2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_AnimateControlPositionPixel (
        BSTR propertyPath_0,
        BSTR scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3,
        struct IDAPoint2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall get_X (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Y (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_PolarCoordAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_PolarCoordLength (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xf_0,
        struct IDAPoint2 * * ret_1 ) = 0;
};

struct __declspec(uuid("50b4791e-4731-11d0-8912-00c04fc2a0ca"))
IDAEvent : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAEventPtr Notify (
        struct IDAUntilNotifier * notifier_0 );
    IDAEventPtr Snapshot (
        struct IDABehavior * b_0 );
    IDAEventPtr AttachData (
        struct IDABehavior * data_0 );
    IDAEventPtr ScriptCallback (
        _bstr_t scriptlet_0,
        _bstr_t language_1 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Notify (
        struct IDAUntilNotifier * notifier_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Snapshot (
        struct IDABehavior * b_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_AttachData (
        struct IDABehavior * data_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ScriptCallback (
        BSTR scriptlet_0,
        BSTR language_1,
        struct IDAEvent * * ret_2 ) = 0;
};

struct __declspec(uuid("3f3da01a-4705-11d0-8710-00c04fc29d46"))
IDAUntilNotifier : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr Notify (
        struct IDABehavior * eventData,
        struct IDABehavior * curRunningBvr,
        struct IDAView * curView );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Notify (
        struct IDABehavior * eventData,
        struct IDABehavior * curRunningBvr,
        struct IDAView * curView,
        struct IDABehavior * * ppBvr ) = 0;
};

struct __declspec(uuid("c46c1bcd-3c52-11d0-9200-848c1d000000"))
IDABbox2 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetMin))
    IDAPoint2Ptr Min;
    __declspec(property(get=GetMax))
    IDAPoint2Ptr Max;

    //
    // Wrapper methods for error-handling
    //

    IDAPoint2Ptr GetMin ( );
    IDAPoint2Ptr GetMax ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Min (
        struct IDAPoint2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Max (
        struct IDAPoint2 * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bd1-3c52-11d0-9200-848c1d000000"))
IDAMatte : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAMattePtr Transform (
        struct IDATransform2 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xf_0,
        struct IDAMatte * * ret_1 ) = 0;
};

struct __declspec(uuid("69b5bc70-9b19-11d0-9b60-00c04fc2f51d"))
IDAPreferences : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT PutPreference (
        _bstr_t preferenceName,
        const _variant_t & value );
    _variant_t GetPreference (
        _bstr_t preferenceName );
    HRESULT Propagate ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_PutPreference (
        BSTR preferenceName,
        VARIANT value ) = 0;
    virtual HRESULT __stdcall raw_GetPreference (
        BSTR preferenceName,
        VARIANT * value ) = 0;
    virtual HRESULT __stdcall raw_Propagate ( ) = 0;
};

struct __declspec(uuid("bc0bfd34-d21d-11d0-9385-00c04fb6bd36"))
IDADrawingSurface : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetImage))
    IDAImagePtr Image;
    __declspec(property(put=PutLineStyle))
    IDALineStylePtr LineStyle;
    __declspec(property(put=PutBorderStyle))
    IDALineStylePtr BorderStyle;
    __declspec(property(put=PutFontStyle))
    IDAFontStylePtr FontStyle;
    __declspec(property(put=PutClipMatte))
    IDAMattePtr ClipMatte;
    __declspec(property(put=PutMouseEventsEnabled))
    VARIANT_BOOL MouseEventsEnabled;
    __declspec(property(put=PutHatchFillTransparent))
    VARIANT_BOOL HatchFillTransparent;
    __declspec(property(get=GetLocalContextImage))
    IDAImagePtr LocalContextImage;

    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr GetImage ( );
    void PutLineStyle (
        struct IDALineStyle * _arg1 );
    void PutBorderStyle (
        struct IDALineStyle * _arg1 );
    void PutFontStyle (
        struct IDAFontStyle * _arg1 );
    void PutClipMatte (
        struct IDAMatte * _arg1 );
    void PutMouseEventsEnabled (
        VARIANT_BOOL _arg1 );
    void PutHatchFillTransparent (
        VARIANT_BOOL _arg1 );
    IDAImagePtr GetLocalContextImage ( );
    HRESULT Reset ( );
    HRESULT Clear ( );
    HRESULT SaveGraphicsState ( );
    HRESULT RestoreGraphicsState ( );
    HRESULT Opacity (
        double opac );
    HRESULT OpacityAnim (
        struct IDANumber * opac );
    HRESULT Crop (
        double lowerLeftX,
        double lowerLeftY,
        double upperRightX,
        double upperRightY );
    HRESULT CropPoints (
        struct IDAPoint2 * Min,
        struct IDAPoint2 * Max );
    HRESULT Transform (
        struct IDATransform2 * xform );
    HRESULT LineColor (
        struct IDAColor * clr );
    HRESULT LineWidth (
        double w );
    HRESULT LineDashStyle (
        DA_DASH_STYLE id );
    HRESULT LineEndStyle (
        DA_END_STYLE id );
    HRESULT LineJoinStyle (
        DA_JOIN_STYLE id );
    HRESULT BorderColor (
        struct IDAColor * clr );
    HRESULT BorderWidth (
        double w );
    HRESULT BorderDashStyle (
        DA_DASH_STYLE id );
    HRESULT BorderEndStyle (
        DA_END_STYLE obsolete );
    HRESULT BorderJoinStyle (
        DA_JOIN_STYLE id );
    HRESULT Font (
        _bstr_t FontFace,
        long sizeInPoints,
        VARIANT_BOOL Bold,
        VARIANT_BOOL Italic,
        VARIANT_BOOL Underline,
        VARIANT_BOOL Strikethrough );
    HRESULT TextureFill (
        struct IDAImage * obsolete1,
        double obsolete2,
        double obsolete3 );
    HRESULT ImageFill (
        struct IDAImage * obsolete1,
        double obsolete2,
        double obsolete3 );
    HRESULT FillTexture (
        struct IDAImage * img );
    HRESULT FillImage (
        struct IDAImage * img );
    HRESULT FillStyle (
        int id );
    HRESULT FillColor (
        struct IDAColor * foreground );
    HRESULT SecondaryFillColor (
        struct IDAColor * val );
    HRESULT GradientShape (
        const _variant_t & pts );
    HRESULT GradientExtent (
        double startx,
        double starty,
        double finishx,
        double finishy );
    HRESULT GradientExtentPoints (
        struct IDAPoint2 * startColor,
        struct IDAPoint2 * stopColor );
    HRESULT GradientRolloffPower (
        double power );
    HRESULT GradientRolloffPowerAnim (
        struct IDANumber * power );
    HRESULT FixedFillScale ( );
    HRESULT HorizontalFillScale ( );
    HRESULT VerticalFillScale ( );
    HRESULT AutoSizeFillScale ( );
    HRESULT PolylineEx (
        long numPts,
        struct IDAPoint2 * * pts );
    HRESULT Polyline (
        const _variant_t & v );
    HRESULT PolygonEx (
        long numPts,
        struct IDAPoint2 * * pts );
    HRESULT Polygon (
        const _variant_t & v );
    HRESULT LinePoints (
        struct IDAPoint2 * p1,
        struct IDAPoint2 * p2 );
    HRESULT Line (
        double startx,
        double starty,
        double endX,
        double endY );
    HRESULT ArcRadians (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight );
    HRESULT ArcDegrees (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight );
    HRESULT Oval (
        double xPos,
        double yPos,
        double w,
        double h );
    HRESULT Rect (
        double xPos,
        double yPos,
        double w,
        double h );
    HRESULT RoundRect (
        double xPos,
        double yPos,
        double w,
        double h,
        double arcWidth,
        double arcHeight );
    HRESULT PieRadians (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight );
    HRESULT PieDegrees (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight );
    HRESULT Text (
        _bstr_t str,
        double xPos,
        double yPos );
    HRESULT TextPoint (
        _bstr_t str,
        struct IDAPoint2 * point );
    HRESULT FillPath (
        struct IDAPath2 * path );
    HRESULT DrawPath (
        struct IDAPath2 * path );
    HRESULT OverlayImage (
        struct IDAImage * img );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Image (
        struct IDAImage * * img ) = 0;
    virtual HRESULT __stdcall put_LineStyle (
        struct IDALineStyle * _arg1 ) = 0;
    virtual HRESULT __stdcall put_BorderStyle (
        struct IDALineStyle * _arg1 ) = 0;
    virtual HRESULT __stdcall put_FontStyle (
        struct IDAFontStyle * _arg1 ) = 0;
    virtual HRESULT __stdcall put_ClipMatte (
        struct IDAMatte * _arg1 ) = 0;
    virtual HRESULT __stdcall put_MouseEventsEnabled (
        VARIANT_BOOL _arg1 ) = 0;
    virtual HRESULT __stdcall put_HatchFillTransparent (
        VARIANT_BOOL _arg1 ) = 0;
    virtual HRESULT __stdcall get_LocalContextImage (
        struct IDAImage * * img ) = 0;
    virtual HRESULT __stdcall raw_Reset ( ) = 0;
    virtual HRESULT __stdcall raw_Clear ( ) = 0;
    virtual HRESULT __stdcall raw_SaveGraphicsState ( ) = 0;
    virtual HRESULT __stdcall raw_RestoreGraphicsState ( ) = 0;
    virtual HRESULT __stdcall raw_Opacity (
        double opac ) = 0;
    virtual HRESULT __stdcall raw_OpacityAnim (
        struct IDANumber * opac ) = 0;
    virtual HRESULT __stdcall raw_Crop (
        double lowerLeftX,
        double lowerLeftY,
        double upperRightX,
        double upperRightY ) = 0;
    virtual HRESULT __stdcall raw_CropPoints (
        struct IDAPoint2 * Min,
        struct IDAPoint2 * Max ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xform ) = 0;
    virtual HRESULT __stdcall raw_LineColor (
        struct IDAColor * clr ) = 0;
    virtual HRESULT __stdcall raw_LineWidth (
        double w ) = 0;
    virtual HRESULT __stdcall raw_LineDashStyle (
        DA_DASH_STYLE id ) = 0;
    virtual HRESULT __stdcall raw_LineEndStyle (
        DA_END_STYLE id ) = 0;
    virtual HRESULT __stdcall raw_LineJoinStyle (
        DA_JOIN_STYLE id ) = 0;
    virtual HRESULT __stdcall raw_BorderColor (
        struct IDAColor * clr ) = 0;
    virtual HRESULT __stdcall raw_BorderWidth (
        double w ) = 0;
    virtual HRESULT __stdcall raw_BorderDashStyle (
        DA_DASH_STYLE id ) = 0;
    virtual HRESULT __stdcall raw_BorderEndStyle (
        DA_END_STYLE obsolete ) = 0;
    virtual HRESULT __stdcall raw_BorderJoinStyle (
        DA_JOIN_STYLE id ) = 0;
    virtual HRESULT __stdcall raw_Font (
        BSTR FontFace,
        long sizeInPoints,
        VARIANT_BOOL Bold,
        VARIANT_BOOL Italic,
        VARIANT_BOOL Underline,
        VARIANT_BOOL Strikethrough ) = 0;
    virtual HRESULT __stdcall raw_TextureFill (
        struct IDAImage * obsolete1,
        double obsolete2,
        double obsolete3 ) = 0;
    virtual HRESULT __stdcall raw_ImageFill (
        struct IDAImage * obsolete1,
        double obsolete2,
        double obsolete3 ) = 0;
    virtual HRESULT __stdcall raw_FillTexture (
        struct IDAImage * img ) = 0;
    virtual HRESULT __stdcall raw_FillImage (
        struct IDAImage * img ) = 0;
    virtual HRESULT __stdcall raw_FillStyle (
        int id ) = 0;
    virtual HRESULT __stdcall raw_FillColor (
        struct IDAColor * foreground ) = 0;
    virtual HRESULT __stdcall raw_SecondaryFillColor (
        struct IDAColor * val ) = 0;
    virtual HRESULT __stdcall raw_GradientShape (
        VARIANT pts ) = 0;
    virtual HRESULT __stdcall raw_GradientExtent (
        double startx,
        double starty,
        double finishx,
        double finishy ) = 0;
    virtual HRESULT __stdcall raw_GradientExtentPoints (
        struct IDAPoint2 * startColor,
        struct IDAPoint2 * stopColor ) = 0;
    virtual HRESULT __stdcall raw_GradientRolloffPower (
        double power ) = 0;
    virtual HRESULT __stdcall raw_GradientRolloffPowerAnim (
        struct IDANumber * power ) = 0;
    virtual HRESULT __stdcall raw_FixedFillScale ( ) = 0;
    virtual HRESULT __stdcall raw_HorizontalFillScale ( ) = 0;
    virtual HRESULT __stdcall raw_VerticalFillScale ( ) = 0;
    virtual HRESULT __stdcall raw_AutoSizeFillScale ( ) = 0;
    virtual HRESULT __stdcall raw_PolylineEx (
        long numPts,
        struct IDAPoint2 * * pts ) = 0;
    virtual HRESULT __stdcall raw_Polyline (
        VARIANT v ) = 0;
    virtual HRESULT __stdcall raw_PolygonEx (
        long numPts,
        struct IDAPoint2 * * pts ) = 0;
    virtual HRESULT __stdcall raw_Polygon (
        VARIANT v ) = 0;
    virtual HRESULT __stdcall raw_LinePoints (
        struct IDAPoint2 * p1,
        struct IDAPoint2 * p2 ) = 0;
    virtual HRESULT __stdcall raw_Line (
        double startx,
        double starty,
        double endX,
        double endY ) = 0;
    virtual HRESULT __stdcall raw_ArcRadians (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight ) = 0;
    virtual HRESULT __stdcall raw_ArcDegrees (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight ) = 0;
    virtual HRESULT __stdcall raw_Oval (
        double xPos,
        double yPos,
        double w,
        double h ) = 0;
    virtual HRESULT __stdcall raw_Rect (
        double xPos,
        double yPos,
        double w,
        double h ) = 0;
    virtual HRESULT __stdcall raw_RoundRect (
        double xPos,
        double yPos,
        double w,
        double h,
        double arcWidth,
        double arcHeight ) = 0;
    virtual HRESULT __stdcall raw_PieRadians (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight ) = 0;
    virtual HRESULT __stdcall raw_PieDegrees (
        double xPos,
        double yPos,
        double startAngle,
        double endAngle,
        double arcWidth,
        double arcHeight ) = 0;
    virtual HRESULT __stdcall raw_Text (
        BSTR str,
        double xPos,
        double yPos ) = 0;
    virtual HRESULT __stdcall raw_TextPoint (
        BSTR str,
        struct IDAPoint2 * point ) = 0;
    virtual HRESULT __stdcall raw_FillPath (
        struct IDAPath2 * path ) = 0;
    virtual HRESULT __stdcall raw_DrawPath (
        struct IDAPath2 * path ) = 0;
    virtual HRESULT __stdcall raw_OverlayImage (
        struct IDAImage * img ) = 0;
};

struct __declspec(uuid("c46c1bf1-3c52-11d0-9200-848c1d000000"))
IDALineStyle : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDALineStylePtr End (
        struct IDAEndStyle * obsolete_0 );
    IDALineStylePtr Join (
        struct IDAJoinStyle * obsolete_0 );
    IDALineStylePtr Dash (
        struct IDADashStyle * obsolete_0 );
    IDALineStylePtr WidthAnim (
        struct IDANumber * sty_0 );
    IDALineStylePtr width (
        double sty_0 );
    IDALineStylePtr AntiAliasing (
        double aaStyle_0 );
    IDALineStylePtr Detail ( );
    IDALineStylePtr Color (
        struct IDAColor * clr_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_End (
        struct IDAEndStyle * obsolete_0,
        struct IDALineStyle * * obsolete_1 ) = 0;
    virtual HRESULT __stdcall raw_Join (
        struct IDAJoinStyle * obsolete_0,
        struct IDALineStyle * * obsolete_1 ) = 0;
    virtual HRESULT __stdcall raw_Dash (
        struct IDADashStyle * obsolete_0,
        struct IDALineStyle * * obsolete_1 ) = 0;
    virtual HRESULT __stdcall raw_WidthAnim (
        struct IDANumber * sty_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_width (
        double sty_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_AntiAliasing (
        double aaStyle_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Detail (
        struct IDALineStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Color (
        struct IDAColor * clr_0,
        struct IDALineStyle * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1beb-3c52-11d0-9200-848c1d000000"))
IDAEndStyle : IDABehavior
{};

struct __declspec(uuid("c46c1bed-3c52-11d0-9200-848c1d000000"))
IDAJoinStyle : IDABehavior
{};

struct __declspec(uuid("c46c1bef-3c52-11d0-9200-848c1d000000"))
IDADashStyle : IDABehavior
{};

struct __declspec(uuid("25b0f91d-d23d-11d0-9b85-00c04fc2f51d"))
IDAFontStyle : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAFontStylePtr Bold ( );
    IDAFontStylePtr Italic ( );
    IDAFontStylePtr Underline ( );
    IDAFontStylePtr Strikethrough ( );
    IDAFontStylePtr AntiAliasing (
        double aaStyle_0 );
    IDAFontStylePtr Color (
        struct IDAColor * col_0 );
    IDAFontStylePtr FamilyAnim (
        struct IDAString * face_0 );
    IDAFontStylePtr Family (
        _bstr_t face_0 );
    IDAFontStylePtr SizeAnim (
        struct IDANumber * size_0 );
    IDAFontStylePtr Size (
        double size_0 );
    IDAFontStylePtr Weight (
        double weight_0 );
    IDAFontStylePtr WeightAnim (
        struct IDANumber * weight_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Bold (
        struct IDAFontStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Italic (
        struct IDAFontStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Underline (
        struct IDAFontStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Strikethrough (
        struct IDAFontStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_AntiAliasing (
        double aaStyle_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Color (
        struct IDAColor * col_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_FamilyAnim (
        struct IDAString * face_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Family (
        BSTR face_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SizeAnim (
        struct IDANumber * size_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Size (
        double size_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Weight (
        double weight_0,
        struct IDAFontStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_WeightAnim (
        struct IDANumber * weight_0,
        struct IDAFontStyle * * ret_1 ) = 0;
};

enum __MIDL___MIDL_itf_danim_0184_0001
{
    DAEmpty = 0,
    DASolid = 1,
    DADash = 2
};

enum __MIDL___MIDL_itf_danim_0184_0002
{
    DAEndFlat = 0,
    DAEndSquare = 1,
    DAEndRound = 2
};

enum __MIDL___MIDL_itf_danim_0184_0003
{
    DAJoinBevel = 0,
    DAJoinRound = 1,
    DAJoinMiter = 2
};

struct __declspec(uuid("c46c1bcf-3c52-11d0-9200-848c1d000000"))
IDAPath2 : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAPath2Ptr Transform (
        struct IDATransform2 * xf_0 );
    IDABbox2Ptr BoundingBox (
        struct IDALineStyle * style_0 );
    IDAImagePtr Fill (
        struct IDALineStyle * border_0,
        struct IDAImage * fill_1 );
    IDAImagePtr Draw (
        struct IDALineStyle * border_0 );
    IDAPath2Ptr Close ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xf_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_BoundingBox (
        struct IDALineStyle * style_0,
        struct IDABbox2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Fill (
        struct IDALineStyle * border_0,
        struct IDAImage * fill_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Draw (
        struct IDALineStyle * border_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Close (
        struct IDAPath2 * * ret_0 ) = 0;
};

enum __MIDL___MIDL_itf_danim_0133_0001
{
    DAContinueTimeline = 1,
    DASwitchFinal = 2,
    DASwitchNextTick = 4
};

struct __declspec(uuid("9caddc0c-ad56-11d1-9ff8-00c04fa32195"))
IDA2Behavior : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SwitchToEx (
        struct IDABehavior * newBvr,
        unsigned long dwFlags );
    IDABehaviorPtr ApplyPreference (
        _bstr_t pref,
        const _variant_t & val );
    IDABehaviorPtr ExtendedAttrib (
        _bstr_t arg1,
        const _variant_t & arg2 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SwitchToEx (
        struct IDABehavior * newBvr,
        unsigned long dwFlags ) = 0;
    virtual HRESULT __stdcall raw_ApplyPreference (
        BSTR pref,
        VARIANT val,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_ExtendedAttrib (
        BSTR arg1,
        VARIANT arg2,
        struct IDABehavior * * ppResult ) = 0;
};

enum __MIDL___MIDL_itf_danim_0134_0001
{
    DAQUAL_AA_TEXT_ON = 1,
    DAQUAL_AA_TEXT_OFF = 2,
    DAQUAL_AA_LINES_ON = 4,
    DAQUAL_AA_LINES_OFF = 8,
    DAQUAL_AA_SOLIDS_ON = 16,
    DAQUAL_AA_SOLIDS_OFF = 32,
    DAQUAL_AA_CLIP_ON = 64,
    DAQUAL_AA_CLIP_OFF = 128,
    DAQUAL_MSHTML_COLORS_ON = 256,
    DAQUAL_MSHTML_COLORS_OFF = 512,
    DAQUAL_QUALITY_TRANSFORMS_ON = 1024,
    DAQUAL_QUALITY_TRANSFORMS_OFF = 2048
};

enum __MIDL___MIDL_itf_danim_0134_0002
{
    DAINVRECT_MERGE_BOXES = 1
};

enum __MIDL___MIDL_itf_danim_0134_0003
{
    DASHSTYLE_SOLID = 0,
    DASHSTYLE_DASH = 1,
    DASHSTYLE_DOT = 2,
    DASHSTYLE_DASHDOT = 3,
    DASHSTYLE_DASHDOTDOT = 4,
    DASHSTYLE_NULL = 5
};

enum __MIDL___MIDL_itf_danim_0134_0004
{
    ENDSTYLE_ROUND = 0,
    ENDSTYLE_SQUARE = 1,
    ENDSTYLE_FLAT = 2
};

enum __MIDL___MIDL_itf_danim_0134_0005
{
    JOINSTYLE_ROUND = 0,
    JOINSTYLE_BEVEL = 1,
    JOINSTYLE_MITER = 2
};

struct __declspec(uuid("fc54beaa-5b12-11d1-8e7b-00c04fc29d46"))
IDAImport : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetImportPriority,put=PutImportPriority))
    float ImportPriority;

    //
    // Wrapper methods for error-handling
    //

    long ImportStatus ( );
    HRESULT ImportCancel ( );
    float GetImportPriority ( );
    void PutImportPriority (
        float prio );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ImportStatus (
        long * status ) = 0;
    virtual HRESULT __stdcall raw_ImportCancel ( ) = 0;
    virtual HRESULT __stdcall get_ImportPriority (
        float * prio ) = 0;
    virtual HRESULT __stdcall put_ImportPriority (
        float prio ) = 0;
};

struct __declspec(uuid("fc54beab-5b12-11d1-8e7b-00c04fc29d46"))
IDAModifiableBehavior : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr GetCurrentBehavior ( );
    void PutCurrentBehavior (
        const _variant_t & bvr );
    HRESULT SwitchToEx (
        struct IDABehavior * newBvr,
        unsigned long dwFlags );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CurrentBehavior (
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall put_CurrentBehavior (
        VARIANT bvr ) = 0;
    virtual HRESULT __stdcall raw_SwitchToEx (
        struct IDABehavior * newBvr,
        unsigned long dwFlags ) = 0;
};

struct __declspec(uuid("283807b8-2c60-11d0-a31d-00aa00b92c03"))
DABehavior;
    // [ default ] interface IDABehavior

struct __declspec(uuid("c46c1bd5-3c52-11d0-9200-848c1d000000"))
IDAMontage : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr Render ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Render (
        struct IDAImage * * ret_0 ) = 0;
};

struct __declspec(uuid("c46c1bc9-3c52-11d0-9200-848c1d000000"))
IDAVector2 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    IDANumberPtr Length;
    __declspec(property(get=GetLengthSquared))
    IDANumberPtr LengthSquared;
    __declspec(property(get=GetX))
    IDANumberPtr X;
    __declspec(property(get=GetY))
    IDANumberPtr Y;
    __declspec(property(get=GetPolarCoordAngle))
    IDANumberPtr PolarCoordAngle;
    __declspec(property(get=GetPolarCoordLength))
    IDANumberPtr PolarCoordLength;

    //
    // Wrapper methods for error-handling
    //

    IDANumberPtr GetLength ( );
    IDANumberPtr GetLengthSquared ( );
    IDAVector2Ptr Normalize ( );
    IDAVector2Ptr MulAnim (
        struct IDANumber * scalar_0 );
    IDAVector2Ptr Mul (
        double scalar_0 );
    IDAVector2Ptr DivAnim (
        struct IDANumber * scalar_0 );
    IDAVector2Ptr Div (
        double scalar_0 );
    IDANumberPtr GetX ( );
    IDANumberPtr GetY ( );
    IDANumberPtr GetPolarCoordAngle ( );
    IDANumberPtr GetPolarCoordLength ( );
    IDAVector2Ptr Transform (
        struct IDATransform2 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Length (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_LengthSquared (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Normalize (
        struct IDAVector2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_MulAnim (
        struct IDANumber * scalar_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Mul (
        double scalar_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DivAnim (
        struct IDANumber * scalar_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Div (
        double scalar_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_X (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Y (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_PolarCoordAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_PolarCoordLength (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform2 * xf_0,
        struct IDAVector2 * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1bd9-3c52-11d0-9200-848c1d000000"))
IDAVector3 : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    IDANumberPtr Length;
    __declspec(property(get=GetLengthSquared))
    IDANumberPtr LengthSquared;
    __declspec(property(get=GetX))
    IDANumberPtr X;
    __declspec(property(get=GetY))
    IDANumberPtr Y;
    __declspec(property(get=GetZ))
    IDANumberPtr Z;
    __declspec(property(get=GetSphericalCoordXYAngle))
    IDANumberPtr SphericalCoordXYAngle;
    __declspec(property(get=GetSphericalCoordYZAngle))
    IDANumberPtr SphericalCoordYZAngle;
    __declspec(property(get=GetSphericalCoordLength))
    IDANumberPtr SphericalCoordLength;

    //
    // Wrapper methods for error-handling
    //

    IDANumberPtr GetLength ( );
    IDANumberPtr GetLengthSquared ( );
    IDAVector3Ptr Normalize ( );
    IDAVector3Ptr MulAnim (
        struct IDANumber * scalar_0 );
    IDAVector3Ptr Mul (
        double scalar_0 );
    IDAVector3Ptr DivAnim (
        struct IDANumber * scalar_0 );
    IDAVector3Ptr Div (
        double scalar_0 );
    IDANumberPtr GetX ( );
    IDANumberPtr GetY ( );
    IDANumberPtr GetZ ( );
    IDANumberPtr GetSphericalCoordXYAngle ( );
    IDANumberPtr GetSphericalCoordYZAngle ( );
    IDANumberPtr GetSphericalCoordLength ( );
    IDAVector3Ptr Transform (
        struct IDATransform3 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Length (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_LengthSquared (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Normalize (
        struct IDAVector3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_MulAnim (
        struct IDANumber * scalar_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Mul (
        double scalar_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DivAnim (
        struct IDANumber * scalar_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Div (
        double scalar_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_X (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Y (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Z (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordXYAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordYZAngle (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_SphericalCoordLength (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Transform (
        struct IDATransform3 * xf_0,
        struct IDAVector3 * * ret_1 ) = 0;
};

struct __declspec(uuid("c46c1bf3-3c52-11d0-9200-848c1d000000"))
IDAPair : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetFirst))
    IDABehaviorPtr First;
    __declspec(property(get=GetSecond))
    IDABehaviorPtr Second;

    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr GetFirst ( );
    IDABehaviorPtr GetSecond ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_First (
        struct IDABehavior * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Second (
        struct IDABehavior * * ret_0 ) = 0;
};

struct __declspec(uuid("d17506c2-6b26-11d0-8914-00c04fc2a0ca"))
IDAArray : IDABehavior
{
    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr NthAnim (
        struct IDANumber * index_0 );
    IDANumberPtr Length ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_NthAnim (
        struct IDANumber * index_0,
        struct IDABehavior * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Length (
        struct IDANumber * * ret_0 ) = 0;
};

struct __declspec(uuid("5dfb2650-9668-11d0-b17b-00c04fc2a0ca"))
IDATuple : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    long Length;

    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr Nth (
        long index_0 );
    long GetLength ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Nth (
        long index_0,
        struct IDABehavior * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_Length (
        long * ret_0 ) = 0;
};

struct __declspec(uuid("af868305-ab0b-11d0-876a-00c04fc29d46"))
IDAUserData : IDABehavior
{
    //
    // Property data
    //

    __declspec(property(get=GetData))
    IUnknownPtr Data;

    //
    // Wrapper methods for error-handling
    //

    IUnknownPtr GetData ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Data (
        IUnknown * * ret_0 ) = 0;
};

struct __declspec(uuid("b90e5258-574a-11d1-8e7b-00c04fc29d46"))
IDA2Geometry : IDAGeometry
{
    //
    // Wrapper methods for error-handling
    //

    IDAGeometryPtr AddPickData (
        IUnknown * id_0,
        VARIANT_BOOL ignoresOcclusion_1 );
    IDAGeometryPtr Shadow (
        struct IDAGeometry * geoContainingLights_0,
        struct IDAPoint3 * planePoint_1,
        struct IDAVector3 * planeNormal_2 );
    IDAGeometryPtr LightRangeAnim (
        struct IDANumber * range_0 );
    IDAGeometryPtr LightRange (
        double range_0 );
    IDAGeometryPtr BlendTextureDiffuse (
        struct IDABoolean * blended_0 );
    IDAGeometryPtr AmbientColor (
        struct IDAColor * color_0 );
    IDAGeometryPtr D3DRMTexture (
        IUnknown * rmTex_0 );
    IDAGeometryPtr ModelClip (
        struct IDAPoint3 * planePt_0,
        struct IDAVector3 * planeVec_1 );
    IDAGeometryPtr Lighting (
        struct IDABoolean * lighting_0 );
    IDAGeometryPtr TextureImage (
        struct IDAImage * texture_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AddPickData (
        IUnknown * id_0,
        VARIANT_BOOL ignoresOcclusion_1,
        struct IDAGeometry * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Shadow (
        struct IDAGeometry * geoContainingLights_0,
        struct IDAPoint3 * planePoint_1,
        struct IDAVector3 * planeNormal_2,
        struct IDAGeometry * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_LightRangeAnim (
        struct IDANumber * range_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_LightRange (
        double range_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_BlendTextureDiffuse (
        struct IDABoolean * blended_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_AmbientColor (
        struct IDAColor * color_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_D3DRMTexture (
        IUnknown * rmTex_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ModelClip (
        struct IDAPoint3 * planePt_0,
        struct IDAVector3 * planeVec_1,
        struct IDAGeometry * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Lighting (
        struct IDABoolean * lighting_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_TextureImage (
        struct IDAImage * texture_0,
        struct IDAGeometry * * ret_1 ) = 0;
};

struct __declspec(uuid("b90e5259-574a-11d1-8e7b-00c04fc29d46"))
IDA2Image : IDAImage
{
    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr AddPickData (
        IUnknown * id_0,
        VARIANT_BOOL ignoresOcclusion_1 );
    IDAImagePtr RenderResolution (
        long width_0,
        long height_1 );
    IDAImagePtr ImageQuality (
        unsigned long dwQualityFlags_0 );
    IDAImagePtr ColorKey (
        struct IDAColor * colorKey_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AddPickData (
        IUnknown * id_0,
        VARIANT_BOOL ignoresOcclusion_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_RenderResolution (
        long width_0,
        long height_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ImageQuality (
        unsigned long dwQualityFlags_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ColorKey (
        struct IDAColor * colorKey_0,
        struct IDAImage * * ret_1 ) = 0;
};

struct __declspec(uuid("960d8eff-e494-11d1-ab75-00c04fd92b6b"))
IDA2FontStyle : IDAFontStyle
{
    //
    // Wrapper methods for error-handling
    //

    IDAFontStylePtr TransformCharacters (
        struct IDATransform2 * transform_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_TransformCharacters (
        struct IDATransform2 * transform_0,
        struct IDAFontStyle * * ret_1 ) = 0;
};

struct __declspec(uuid("5f00f545-df18-11d1-ab6f-00c04fd92b6b"))
IDA2LineStyle : IDALineStyle
{
    //
    // Wrapper methods for error-handling
    //

    IDALineStylePtr DashStyle (
        unsigned long ds_enum_0 );
    IDALineStylePtr MiterLimit (
        double mtrlim_0 );
    IDALineStylePtr MiterLimitAnim (
        struct IDANumber * mtrlim_0 );
    IDALineStylePtr JoinStyle (
        unsigned long js_enum_0 );
    IDALineStylePtr EndStyle (
        unsigned long es_enum_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_DashStyle (
        unsigned long ds_enum_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_MiterLimit (
        double mtrlim_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_MiterLimitAnim (
        struct IDANumber * mtrlim_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_JoinStyle (
        unsigned long js_enum_0,
        struct IDALineStyle * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_EndStyle (
        unsigned long es_enum_0,
        struct IDALineStyle * * ret_1 ) = 0;
};

struct __declspec(uuid("b90e525a-574a-11d1-8e7b-00c04fc29d46"))
IDA2Event : IDAEvent
{
    //
    // Wrapper methods for error-handling
    //

    IDAEventPtr NotifyScript (
        _bstr_t scriptlet_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_NotifyScript (
        BSTR scriptlet_0,
        struct IDAEvent * * ret_1 ) = 0;
};

struct __declspec(uuid("2a8f0b06-be2b-11d1-b219-00c04fc2a0ca"))
IDA2Array : IDAArray
{
    //
    // Wrapper methods for error-handling
    //

    long AddElement (
        struct IDABehavior * b_0,
        unsigned long flag_1 );
    HRESULT RemoveElement (
        long i_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AddElement (
        struct IDABehavior * b_0,
        unsigned long flag_1,
        long * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_RemoveElement (
        long i_0 ) = 0;
};

struct __declspec(uuid("28a4b924-61fe-11d2-a740-00c04f79754c"))
IDA2Color : IDAColor
{
    //
    // Wrapper methods for error-handling
    //

    IDA2ColorPtr AnimateProperty (
        _bstr_t propertyPath_0,
        _bstr_t scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_AnimateProperty (
        BSTR propertyPath_0,
        BSTR scriptingLanguage_1,
        VARIANT_BOOL invokeAsMethod_2,
        double minUpdateInterval_3,
        struct IDA2Color * * ret_4 ) = 0;
};

struct __declspec(uuid("eb5093c7-56f9-11d2-88ce-00c04fa35859"))
IDA3Geometry : IDA2Geometry
{
    //
    // Wrapper methods for error-handling
    //

    IDAGeometryPtr Billboard (
        struct IDAVector3 * axis_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Billboard (
        struct IDAVector3 * axis_0,
        struct IDAGeometry * * ret_1 ) = 0;
};

struct __declspec(uuid("ad083dbb-5817-11d2-aba1-00c04fd92b6b"))
IDA3Image : IDA2Image
{
    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr TransformColorRGB (
        struct IDATransform3 * xf_0 );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_TransformColorRGB (
        struct IDATransform3 * xf_0,
        struct IDAImage * * ret_1 ) = 0;
};

struct __declspec(uuid("3089d9a0-4ce1-11d2-933e-00a0c9b72d4d"))
IDA3Array : IDA2Array
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetElement (
        long index,
        struct IDABehavior * b,
        long flag );
    IDABehaviorPtr GetElement (
        long index );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetElement (
        long index,
        struct IDABehavior * b,
        long flag ) = 0;
    virtual HRESULT __stdcall raw_GetElement (
        long index,
        struct IDABehavior * * ret ) = 0;
};

enum __MIDL___MIDL_itf_danim_0181_0001
{
    DAAsyncFlag = 1
};

struct __declspec(uuid("2ae71568-4b34-11d1-b1e3-00c04fc2a0ca"))
IDA2View : IDAView
{
    //
    // Wrapper methods for error-handling
    //

    long QueryHitPointEx (
        long s,
        unsigned long * cookies,
        double * points,
        struct tagRECT * prcBounds,
        struct tagPOINT ptLoc );
    HRESULT StartModelEx (
        struct IDAImage * pImage,
        struct IDASound * pSound,
        double startTime,
        unsigned long dwFlags );
    HRESULT GetDDD3DRM (
        IUnknown * * directDraw,
        IUnknown * * d3drm );
    HRESULT GetRMDevice (
        IUnknown * * d3drmDevice,
        unsigned long * sequenceNumber );
    long GetInvalidatedRects (
        unsigned long Flags,
        long s,
        struct tagRECT * pRects );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_QueryHitPointEx (
        long s,
        unsigned long * cookies,
        double * points,
        struct tagRECT * prcBounds,
        struct tagPOINT ptLoc,
        long * hits ) = 0;
    virtual HRESULT __stdcall raw_StartModelEx (
        struct IDAImage * pImage,
        struct IDASound * pSound,
        double startTime,
        unsigned long dwFlags ) = 0;
    virtual HRESULT __stdcall raw_GetDDD3DRM (
        IUnknown * * directDraw,
        IUnknown * * d3drm ) = 0;
    virtual HRESULT __stdcall raw_GetRMDevice (
        IUnknown * * d3drmDevice,
        unsigned long * sequenceNumber ) = 0;
    virtual HRESULT __stdcall raw_GetInvalidatedRects (
        unsigned long Flags,
        long s,
        struct tagRECT * pRects,
        long * pNumRects ) = 0;
};

struct __declspec(uuid("d5570790-57e2-11d2-933f-00a0c9b72d4d"))
IDA3View : IDA2View
{
    //
    // Property data
    //

    __declspec(property(get=GetWindow2,put=PutWindow2))
    wireHWND Window2;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Pause ( );
    HRESULT Resume ( );
    HRESULT OnMouseLeave (
        double when );
    wireHWND GetWindow2 ( );
    void PutWindow2 (
        wireHWND hwnd );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Resume ( ) = 0;
    virtual HRESULT __stdcall raw_OnMouseLeave (
        double when ) = 0;
    virtual HRESULT __stdcall get_Window2 (
        wireHWND * hwnd ) = 0;
    virtual HRESULT __stdcall put_Window2 (
        wireHWND hwnd ) = 0;
};

struct __declspec(uuid("89131312-7806-11d2-8bee-00c04fc2f51d"))
_IDAViewEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Start ( );
    HRESULT Stop ( );
    HRESULT OnMouseMove (
        double when,
        long xPos,
        long yPos,
        int modifiers );
    HRESULT OnMouseButton (
        double when,
        long xPos,
        long yPos,
        int button,
        VARIANT_BOOL bPressed,
        int modifiers );
    HRESULT OnKey (
        double when,
        long key,
        VARIANT_BOOL bPressed,
        int modifiers );
    HRESULT OnFocus (
        VARIANT_BOOL bHasFocus );
    HRESULT Pause ( );
    HRESULT Resume ( );
    HRESULT Error (
        long HResult,
        _bstr_t ErrorString );
};

struct __declspec(uuid("283807b5-2c60-11d0-a31d-00aa00b92c03"))
DAView;
    // [ default ] interface IDA3View
    // [ default, source ] dispinterface _IDAViewEvents

struct __declspec(uuid("45393df0-54b9-11cf-92a2-00aa00b8a733"))
IDASite : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetStatusText (
        _bstr_t StatusText );
    HRESULT ReportError (
        HRESULT hr,
        _bstr_t ErrorText );
    HRESULT ReportGC (
        VARIANT_BOOL bStarting );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetStatusText (
        BSTR StatusText ) = 0;
    virtual HRESULT __stdcall raw_ReportError (
        HRESULT hr,
        BSTR ErrorText ) = 0;
    virtual HRESULT __stdcall raw_ReportGC (
        VARIANT_BOOL bStarting ) = 0;
};

struct __declspec(uuid("4a933702-e36f-11d0-9b99-00c04fc2f51d"))
IDAImportationResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetImage))
    IDAImagePtr Image;
    __declspec(property(get=GetSound))
    IDASoundPtr Sound;
    __declspec(property(get=GetGeometry))
    IDAGeometryPtr Geometry;
    __declspec(property(get=GetDuration))
    IDANumberPtr Duration;
    __declspec(property(get=GetCompletionEvent))
    IDAEventPtr CompletionEvent;
    __declspec(property(get=GetProgress))
    IDANumberPtr Progress;
    __declspec(property(get=GetSize))
    IDANumberPtr Size;

    //
    // Wrapper methods for error-handling
    //

    IDAImagePtr GetImage ( );
    IDASoundPtr GetSound ( );
    IDAGeometryPtr GetGeometry ( );
    IDANumberPtr GetDuration ( );
    IDAEventPtr GetCompletionEvent ( );
    IDANumberPtr GetProgress ( );
    IDANumberPtr GetSize ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Image (
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall get_Sound (
        struct IDASound * * ppSound ) = 0;
    virtual HRESULT __stdcall get_Geometry (
        struct IDAGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall get_Duration (
        struct IDANumber * * ppDuration ) = 0;
    virtual HRESULT __stdcall get_CompletionEvent (
        struct IDAEvent * * ppCompletionEvent ) = 0;
    virtual HRESULT __stdcall get_Progress (
        struct IDANumber * * ppProgress ) = 0;
    virtual HRESULT __stdcall get_Size (
        struct IDANumber * * ppSizeInBytes ) = 0;
};

struct __declspec(uuid("bacd4d86-4a4f-11d1-9bc8-00c04fc2f51d"))
IDADXTransformResult : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOutputBvr))
    IDABehaviorPtr OutputBvr;
    __declspec(property(get=GetTheTransform))
    IDispatchPtr TheTransform;

    //
    // Wrapper methods for error-handling
    //

    IDABehaviorPtr GetOutputBvr ( );
    IDispatchPtr GetTheTransform ( );
    HRESULT PutBvrAsProperty (
        _bstr_t property,
        struct IDABehavior * bvr );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_OutputBvr (
        struct IDABehavior * * ppOutputBvr ) = 0;
    virtual HRESULT __stdcall get_TheTransform (
        IDispatch * * ppTheTransform ) = 0;
    virtual HRESULT __stdcall raw_PutBvrAsProperty (
        BSTR property,
        struct IDABehavior * bvr ) = 0;
};

struct __declspec(uuid("542fb452-5003-11cf-92a2-00aa00b8a733"))
IDAStatics : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetVersionString))
    _bstr_t VersionString;
    __declspec(property(get=GetSite,put=PutSite))
    IDASitePtr Site;
    __declspec(property(get=GetClientSite,put=PutClientSite))
    IOleClientSitePtr ClientSite;
    __declspec(property(get=GetIdentityTransform2))
    IDATransform2Ptr IdentityTransform2;
    __declspec(property(get=GetPixelConstructionMode,put=PutPixelConstructionMode))
    VARIANT_BOOL PixelConstructionMode;
    __declspec(property(get=GetRed))
    IDAColorPtr Red;
    __declspec(property(get=GetGreen))
    IDAColorPtr Green;
    __declspec(property(get=GetBlue))
    IDAColorPtr Blue;
    __declspec(property(get=GetCyan))
    IDAColorPtr Cyan;
    __declspec(property(get=GetMagenta))
    IDAColorPtr Magenta;
    __declspec(property(get=GetYellow))
    IDAColorPtr Yellow;
    __declspec(property(get=GetBlack))
    IDAColorPtr Black;
    __declspec(property(get=GetWhite))
    IDAColorPtr White;
    __declspec(property(get=GetAqua))
    IDAColorPtr Aqua;
    __declspec(property(get=GetFuchsia))
    IDAColorPtr Fuchsia;
    __declspec(property(get=GetGray))
    IDAColorPtr Gray;
    __declspec(property(get=GetLime))
    IDAColorPtr Lime;
    __declspec(property(get=GetMaroon))
    IDAColorPtr Maroon;
    __declspec(property(get=GetNavy))
    IDAColorPtr Navy;
    __declspec(property(get=GetOlive))
    IDAColorPtr Olive;
    __declspec(property(get=GetPurple))
    IDAColorPtr Purple;
    __declspec(property(get=GetSilver))
    IDAColorPtr Silver;
    __declspec(property(get=GetTeal))
    IDAColorPtr Teal;
    __declspec(property(get=GetSilence))
    IDASoundPtr Silence;
    __declspec(property(get=GetSinSynth))
    IDASoundPtr SinSynth;
    __declspec(property(get=GetDefaultFont))
    IDAFontStylePtr DefaultFont;
    __declspec(property(get=GetXVector2))
    IDAVector2Ptr XVector2;
    __declspec(property(get=GetLeftButtonDown))
    IDAEventPtr LeftButtonDown;
    __declspec(property(get=GetLeftButtonUp))
    IDAEventPtr LeftButtonUp;
    __declspec(property(get=GetRightButtonDown))
    IDAEventPtr RightButtonDown;
    __declspec(property(get=GetRightButtonUp))
    IDAEventPtr RightButtonUp;
    __declspec(property(get=GetAlways))
    IDAEventPtr Always;
    __declspec(property(get=GetNever))
    IDAEventPtr Never;
    __declspec(property(get=GetYVector2))
    IDAVector2Ptr YVector2;
    __declspec(property(get=GetZeroVector2))
    IDAVector2Ptr ZeroVector2;
    __declspec(property(get=GetOrigin2))
    IDAPoint2Ptr Origin2;
    __declspec(property(get=GetAreBlockingImportsComplete))
    VARIANT_BOOL AreBlockingImportsComplete;
    __declspec(property(get=GetEmptyGeometry))
    IDAGeometryPtr EmptyGeometry;
    __declspec(property(get=GetEmptyImage))
    IDAImagePtr EmptyImage;
    __declspec(property(get=GetDetectableEmptyImage))
    IDAImagePtr DetectableEmptyImage;
    __declspec(property(get=GetXVector3))
    IDAVector3Ptr XVector3;
    __declspec(property(get=GetYVector3))
    IDAVector3Ptr YVector3;
    __declspec(property(get=GetZVector3))
    IDAVector3Ptr ZVector3;
    __declspec(property(get=GetZeroVector3))
    IDAVector3Ptr ZeroVector3;
    __declspec(property(get=GetOrigin3))
    IDAPoint3Ptr Origin3;
    __declspec(property(get=GetIdentityTransform3))
    IDATransform3Ptr IdentityTransform3;
    __declspec(property(get=GetAmbientLight))
    IDAGeometryPtr AmbientLight;
    __declspec(property(get=GetDirectionalLight))
    IDAGeometryPtr DirectionalLight;
    __declspec(property(get=GetPointLight))
    IDAGeometryPtr PointLight;
    __declspec(property(get=GetDefaultLineStyle))
    IDALineStylePtr DefaultLineStyle;
    __declspec(property(get=GetEmptyLineStyle))
    IDALineStylePtr EmptyLineStyle;
    __declspec(property(get=GetJoinStyleBevel))
    IDAJoinStylePtr JoinStyleBevel;
    __declspec(property(get=GetJoinStyleRound))
    IDAJoinStylePtr JoinStyleRound;
    __declspec(property(get=GetJoinStyleMiter))
    IDAJoinStylePtr JoinStyleMiter;
    __declspec(property(get=GetMousePosition))
    IDAPoint2Ptr MousePosition;
    __declspec(property(get=GetLeftButtonState))
    IDABooleanPtr LeftButtonState;
    __declspec(property(get=GetRightButtonState))
    IDABooleanPtr RightButtonState;
    __declspec(property(get=GetDATrue))
    IDABooleanPtr DATrue;
    __declspec(property(get=GetDAFalse))
    IDABooleanPtr DAFalse;
    __declspec(property(get=GetLocalTime))
    IDANumberPtr LocalTime;
    __declspec(property(get=GetGlobalTime))
    IDANumberPtr GlobalTime;
    __declspec(property(get=GetPixel))
    IDANumberPtr Pixel;
    __declspec(property(get=GetEndStyleFlat))
    IDAEndStylePtr EndStyleFlat;
    __declspec(property(get=GetEndStyleSquare))
    IDAEndStylePtr EndStyleSquare;
    __declspec(property(get=GetEndStyleRound))
    IDAEndStylePtr EndStyleRound;
    __declspec(property(get=GetDashStyleSolid))
    IDADashStylePtr DashStyleSolid;
    __declspec(property(get=GetDashStyleDashed))
    IDADashStylePtr DashStyleDashed;
    __declspec(property(get=GetDefaultMicrophone))
    IDAMicrophonePtr DefaultMicrophone;
    __declspec(property(get=GetOpaqueMatte))
    IDAMattePtr OpaqueMatte;
    __declspec(property(get=GetClearMatte))
    IDAMattePtr ClearMatte;
    __declspec(property(get=GetEmptyMontage))
    IDAMontagePtr EmptyMontage;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetVersionString ( );
    IDASitePtr GetSite ( );
    void PutSite (
        struct IDASite * pSite );
    void PutClientSite (
        struct IOleClientSite * pClientSite );
    IOleClientSitePtr GetClientSite ( );
    void PutPixelConstructionMode (
        VARIANT_BOOL bMode );
    VARIANT_BOOL GetPixelConstructionMode ( );
    HRESULT TriggerEvent (
        struct IDAEvent * event,
        struct IDABehavior * Data );
    IDADrawingSurfacePtr NewDrawingSurface ( );
    IDAImportationResultPtr ImportMovie (
        _bstr_t url );
    IDAImportationResultPtr ImportMovieAsync (
        _bstr_t url,
        struct IDAImage * pImageStandIn,
        struct IDASound * pSoundStandIn );
    IDAImagePtr ImportImage (
        _bstr_t url );
    IDAImportationResultPtr ImportImageAsync (
        _bstr_t url,
        struct IDAImage * pImageStandIn );
    IDAImagePtr ImportImageColorKey (
        _bstr_t url,
        unsigned char colorKeyRed,
        unsigned char colorKeyGreen,
        unsigned char colorKeyBlue );
    IDAImportationResultPtr ImportImageAsyncColorKey (
        _bstr_t url,
        struct IDAImage * pImageStandIn,
        unsigned char colorKeyRed,
        unsigned char colorKeyGreen,
        unsigned char colorKeyBlue );
    IDAImportationResultPtr ImportSound (
        _bstr_t url );
    IDAImportationResultPtr ImportSoundAsync (
        _bstr_t url,
        struct IDASound * pSoundStandIn );
    IDAGeometryPtr ImportGeometry (
        _bstr_t url );
    IDAImportationResultPtr ImportGeometryAsync (
        _bstr_t url,
        struct IDAGeometry * pGeoStandIn );
    IDAImagePtr ImportDirectDrawSurface (
        IUnknown * dds,
        struct IDAEvent * updateEvent );
    IDABehaviorPtr Cond (
        struct IDABoolean * c,
        struct IDABehavior * i,
        struct IDABehavior * e );
    IDAArrayPtr DAArrayEx (
        long s,
        struct IDABehavior * * pBvrs );
    IDAArrayPtr DAArray (
        const _variant_t & bvrs );
    IDATuplePtr DATupleEx (
        long s,
        struct IDABehavior * * pBvrs );
    IDATuplePtr DATuple (
        const _variant_t & bvrs );
    IDABehaviorPtr ModifiableBehavior (
        struct IDABehavior * orig );
    IDAArrayPtr UninitializedArray (
        struct IDAArray * typeTmp );
    IDATuplePtr UninitializedTuple (
        struct IDATuple * typeTmp );
    IDANumberPtr NumberBSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDANumber * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator );
    IDANumberPtr NumberBSpline (
        int degree,
        const _variant_t & knots,
        const _variant_t & ctrlPts,
        const _variant_t & weights,
        struct IDANumber * evaluator );
    IDAPoint2Ptr Point2BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAPoint2 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator );
    IDAPoint2Ptr Point2BSpline (
        int degree,
        const _variant_t & knots,
        const _variant_t & ctrlPts,
        const _variant_t & weights,
        struct IDANumber * evaluator );
    IDAPoint3Ptr Point3BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAPoint3 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator );
    IDAPoint3Ptr Point3BSpline (
        int degree,
        const _variant_t & knots,
        const _variant_t & ctrlPts,
        const _variant_t & weights,
        struct IDANumber * evaluator );
    IDAVector2Ptr Vector2BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAVector2 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator );
    IDAVector2Ptr Vector2BSpline (
        int degree,
        const _variant_t & knots,
        const _variant_t & ctrlPts,
        const _variant_t & weights,
        struct IDANumber * evaluator );
    IDAVector3Ptr Vector3BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAVector3 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator );
    IDAVector3Ptr Vector3BSpline (
        int degree,
        const _variant_t & knots,
        const _variant_t & ctrlPts,
        const _variant_t & weights,
        struct IDANumber * evaluator );
    IDANumberPtr Pow (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Abs (
        struct IDANumber * a_0 );
    IDANumberPtr Sqrt (
        struct IDANumber * a_0 );
    IDANumberPtr Floor (
        struct IDANumber * a_0 );
    IDANumberPtr Round (
        struct IDANumber * a_0 );
    IDANumberPtr Ceiling (
        struct IDANumber * a_0 );
    IDANumberPtr Asin (
        struct IDANumber * a_0 );
    IDANumberPtr Acos (
        struct IDANumber * a_0 );
    IDANumberPtr Atan (
        struct IDANumber * a_0 );
    IDANumberPtr Sin (
        struct IDANumber * a_0 );
    IDANumberPtr Cos (
        struct IDANumber * a_0 );
    IDANumberPtr Tan (
        struct IDANumber * a_0 );
    IDANumberPtr Exp (
        struct IDANumber * a_0 );
    IDANumberPtr Ln (
        struct IDANumber * a_0 );
    IDANumberPtr Log10 (
        struct IDANumber * a_0 );
    IDANumberPtr ToDegrees (
        struct IDANumber * a_0 );
    IDANumberPtr ToRadians (
        struct IDANumber * a_0 );
    IDANumberPtr Mod (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Atan2 (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Add (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Sub (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Mul (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Div (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr LT (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr LTE (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr GT (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr GTE (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr EQ (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDABooleanPtr NE (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDANumberPtr Neg (
        struct IDANumber * a_0 );
    IDANumberPtr InterpolateAnim (
        struct IDANumber * from_0,
        struct IDANumber * to_1,
        struct IDANumber * duration_2 );
    IDANumberPtr Interpolate (
        double from_0,
        double to_1,
        double duration_2 );
    IDANumberPtr SlowInSlowOutAnim (
        struct IDANumber * from_0,
        struct IDANumber * to_1,
        struct IDANumber * duration_2,
        struct IDANumber * sharpness_3 );
    IDANumberPtr SlowInSlowOut (
        double from_0,
        double to_1,
        double duration_2,
        double sharpness_3 );
    IDAGeometryPtr SoundSource (
        struct IDASound * snd_0 );
    IDASoundPtr Mix (
        struct IDASound * left_0,
        struct IDASound * right_1 );
    IDABooleanPtr And (
        struct IDABoolean * a_0,
        struct IDABoolean * b_1 );
    IDABooleanPtr Or (
        struct IDABoolean * a_0,
        struct IDABoolean * b_1 );
    IDABooleanPtr Not (
        struct IDABoolean * a_0 );
    IDANumberPtr Integral (
        struct IDANumber * b_0 );
    IDANumberPtr Derivative (
        struct IDANumber * b_0 );
    IDAVector2Ptr IntegralVector2 (
        struct IDAVector2 * v_0 );
    IDAVector3Ptr IntegralVector3 (
        struct IDAVector3 * v_0 );
    IDAVector2Ptr DerivativeVector2 (
        struct IDAVector2 * v_0 );
    IDAVector3Ptr DerivativeVector3 (
        struct IDAVector3 * v_0 );
    IDAVector2Ptr DerivativePoint2 (
        struct IDAPoint2 * v_0 );
    IDAVector3Ptr DerivativePoint3 (
        struct IDAPoint3 * v_0 );
    IDABooleanPtr KeyState (
        struct IDANumber * n_0 );
    IDAEventPtr KeyUp (
        long arg_0 );
    IDAEventPtr KeyDown (
        long arg_0 );
    IDANumberPtr DANumber (
        double num_0 );
    IDAStringPtr DAString (
        _bstr_t str_0 );
    IDABooleanPtr DABoolean (
        VARIANT_BOOL num_0 );
    IDANumberPtr SeededRandom (
        double arg_0 );
    IDAPoint2Ptr GetMousePosition ( );
    IDABooleanPtr GetLeftButtonState ( );
    IDABooleanPtr GetRightButtonState ( );
    IDABooleanPtr GetDATrue ( );
    IDABooleanPtr GetDAFalse ( );
    IDANumberPtr GetLocalTime ( );
    IDANumberPtr GetGlobalTime ( );
    IDANumberPtr GetPixel ( );
    IDAUserDataPtr UserData (
        IUnknown * data_0 );
    IDABehaviorPtr UntilNotify (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        struct IDAUntilNotifier * notifier_2 );
    IDABehaviorPtr Until (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        struct IDABehavior * b1_2 );
    IDABehaviorPtr UntilEx (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1 );
    IDABehaviorPtr Sequence (
        struct IDABehavior * s1_0,
        struct IDABehavior * s2_1 );
    IDATransform2Ptr FollowPath (
        struct IDAPath2 * path_0,
        double duration_1 );
    IDATransform2Ptr FollowPathAngle (
        struct IDAPath2 * path_0,
        double duration_1 );
    IDATransform2Ptr FollowPathAngleUpright (
        struct IDAPath2 * path_0,
        double duration_1 );
    IDATransform2Ptr FollowPathEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1 );
    IDATransform2Ptr FollowPathAngleEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1 );
    IDATransform2Ptr FollowPathAngleUprightEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1 );
    IDATransform2Ptr FollowPathAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1 );
    IDATransform2Ptr FollowPathAngleAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1 );
    IDATransform2Ptr FollowPathAngleUprightAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1 );
    IDAStringPtr ConcatString (
        struct IDAString * s1_0,
        struct IDAString * s2_1 );
    IDACameraPtr PerspectiveCamera (
        double focalDist_0,
        double nearClip_1 );
    IDACameraPtr PerspectiveCameraAnim (
        struct IDANumber * focalDist_0,
        struct IDANumber * nearClip_1 );
    IDACameraPtr ParallelCamera (
        double nearClip_0 );
    IDACameraPtr ParallelCameraAnim (
        struct IDANumber * nearClip_0 );
    IDAColorPtr ColorRgbAnim (
        struct IDANumber * red_0,
        struct IDANumber * green_1,
        struct IDANumber * blue_2 );
    IDAColorPtr ColorRgb (
        double red_0,
        double green_1,
        double blue_2 );
    IDAColorPtr ColorRgb255 (
        short red_0,
        short green_1,
        short blue_2 );
    IDAColorPtr ColorHsl (
        double hue_0,
        double saturation_1,
        double lum_2 );
    IDAColorPtr ColorHslAnim (
        struct IDANumber * hue_0,
        struct IDANumber * saturation_1,
        struct IDANumber * lum_2 );
    IDAColorPtr GetRed ( );
    IDAColorPtr GetGreen ( );
    IDAColorPtr GetBlue ( );
    IDAColorPtr GetCyan ( );
    IDAColorPtr GetMagenta ( );
    IDAColorPtr GetYellow ( );
    IDAColorPtr GetBlack ( );
    IDAColorPtr GetWhite ( );
    IDAColorPtr GetAqua ( );
    IDAColorPtr GetFuchsia ( );
    IDAColorPtr GetGray ( );
    IDAColorPtr GetLime ( );
    IDAColorPtr GetMaroon ( );
    IDAColorPtr GetNavy ( );
    IDAColorPtr GetOlive ( );
    IDAColorPtr GetPurple ( );
    IDAColorPtr GetSilver ( );
    IDAColorPtr GetTeal ( );
    IDAEventPtr Predicate (
        struct IDABoolean * b_0 );
    IDAEventPtr NotEvent (
        struct IDAEvent * event_0 );
    IDAEventPtr AndEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1 );
    IDAEventPtr OrEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1 );
    IDAEventPtr ThenEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1 );
    IDAEventPtr GetLeftButtonDown ( );
    IDAEventPtr GetLeftButtonUp ( );
    IDAEventPtr GetRightButtonDown ( );
    IDAEventPtr GetRightButtonUp ( );
    IDAEventPtr GetAlways ( );
    IDAEventPtr GetNever ( );
    IDAEventPtr TimerAnim (
        struct IDANumber * n_0 );
    IDAEventPtr Timer (
        double n_0 );
    IDAEventPtr AppTriggeredEvent ( );
    IDAEventPtr ScriptCallback (
        _bstr_t obsolete1_0,
        struct IDAEvent * obsolete2_1,
        _bstr_t obsolete3_2 );
    IDAGeometryPtr GetEmptyGeometry ( );
    IDAGeometryPtr UnionGeometry (
        struct IDAGeometry * g1_0,
        struct IDAGeometry * g2_1 );
    IDAGeometryPtr UnionGeometryArrayEx (
        long imgs_0size,
        struct IDAGeometry * * imgs_0 );
    IDAGeometryPtr UnionGeometryArray (
        const _variant_t & imgs_0 );
    IDAImagePtr GetEmptyImage ( );
    IDAImagePtr GetDetectableEmptyImage ( );
    IDAImagePtr SolidColorImage (
        struct IDAColor * col_0 );
    IDAImagePtr GradientPolygonEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long colors_1size,
        struct IDAColor * * colors_1 );
    IDAImagePtr GradientPolygon (
        const _variant_t & points_0,
        const _variant_t & colors_1 );
    IDAImagePtr RadialGradientPolygonEx (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        long points_2size,
        struct IDAPoint2 * * points_2,
        double fallOff_3 );
    IDAImagePtr RadialGradientPolygon (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        const _variant_t & points_2,
        double fallOff_3 );
    IDAImagePtr RadialGradientPolygonAnimEx (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        long points_2size,
        struct IDAPoint2 * * points_2,
        struct IDANumber * fallOff_3 );
    IDAImagePtr RadialGradientPolygonAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        const _variant_t & points_2,
        struct IDANumber * fallOff_3 );
    IDAImagePtr GradientSquare (
        struct IDAColor * lowerLeft_0,
        struct IDAColor * upperLeft_1,
        struct IDAColor * upperRight_2,
        struct IDAColor * lowerRight_3 );
    IDAImagePtr RadialGradientSquare (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        double fallOff_2 );
    IDAImagePtr RadialGradientSquareAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        struct IDANumber * fallOff_2 );
    IDAImagePtr RadialGradientRegularPoly (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        double numEdges_2,
        double fallOff_3 );
    IDAImagePtr RadialGradientRegularPolyAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        struct IDANumber * numEdges_2,
        struct IDANumber * fallOff_3 );
    IDAImagePtr GradientHorizontal (
        struct IDAColor * start_0,
        struct IDAColor * stop_1,
        double fallOff_2 );
    IDAImagePtr GradientHorizontalAnim (
        struct IDAColor * start_0,
        struct IDAColor * stop_1,
        struct IDANumber * fallOff_2 );
    IDAImagePtr HatchHorizontal (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchHorizontalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr HatchVertical (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchVerticalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr HatchForwardDiagonal (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchForwardDiagonalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr HatchBackwardDiagonal (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchBackwardDiagonalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr HatchCross (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchCrossAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr HatchDiagonalCross (
        struct IDAColor * lineClr_0,
        double spacing_1 );
    IDAImagePtr HatchDiagonalCrossAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1 );
    IDAImagePtr Overlay (
        struct IDAImage * top_0,
        struct IDAImage * bottom_1 );
    IDAImagePtr OverlayArrayEx (
        long imgs_0size,
        struct IDAImage * * imgs_0 );
    IDAImagePtr OverlayArray (
        const _variant_t & imgs_0 );
    IDAGeometryPtr GetAmbientLight ( );
    IDAGeometryPtr GetDirectionalLight ( );
    IDAGeometryPtr GetPointLight ( );
    IDAGeometryPtr SpotLightAnim (
        struct IDANumber * fullcone_0,
        struct IDANumber * cutoff_1 );
    IDAGeometryPtr SpotLight (
        struct IDANumber * fullcone_0,
        double cutoff_1 );
    IDALineStylePtr GetDefaultLineStyle ( );
    IDALineStylePtr GetEmptyLineStyle ( );
    IDAJoinStylePtr GetJoinStyleBevel ( );
    IDAJoinStylePtr GetJoinStyleRound ( );
    IDAJoinStylePtr GetJoinStyleMiter ( );
    IDAEndStylePtr GetEndStyleFlat ( );
    IDAEndStylePtr GetEndStyleSquare ( );
    IDAEndStylePtr GetEndStyleRound ( );
    IDADashStylePtr GetDashStyleSolid ( );
    IDADashStylePtr GetDashStyleDashed ( );
    IDAMicrophonePtr GetDefaultMicrophone ( );
    IDAMattePtr GetOpaqueMatte ( );
    IDAMattePtr GetClearMatte ( );
    IDAMattePtr UnionMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1 );
    IDAMattePtr IntersectMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1 );
    IDAMattePtr DifferenceMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1 );
    IDAMattePtr FillMatte (
        struct IDAPath2 * p_0 );
    IDAMattePtr TextMatte (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1 );
    IDAMontagePtr GetEmptyMontage ( );
    IDAMontagePtr ImageMontage (
        struct IDAImage * im_0,
        double depth_1 );
    IDAMontagePtr ImageMontageAnim (
        struct IDAImage * im_0,
        struct IDANumber * depth_1 );
    IDAMontagePtr UnionMontage (
        struct IDAMontage * m1_0,
        struct IDAMontage * m2_1 );
    IDAPath2Ptr Concat (
        struct IDAPath2 * p1_0,
        struct IDAPath2 * p2_1 );
    IDAPath2Ptr ConcatArrayEx (
        long paths_0size,
        struct IDAPath2 * * paths_0 );
    IDAPath2Ptr ConcatArray (
        const _variant_t & paths_0 );
    IDAPath2Ptr Line (
        struct IDAPoint2 * p1_0,
        struct IDAPoint2 * p2_1 );
    IDAPath2Ptr Ray (
        struct IDAPoint2 * pt_0 );
    IDAPath2Ptr StringPathAnim (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1 );
    IDAPath2Ptr StringPath (
        _bstr_t str_0,
        struct IDAFontStyle * fs_1 );
    IDAPath2Ptr PolylineEx (
        long points_0size,
        struct IDAPoint2 * * points_0 );
    IDAPath2Ptr Polyline (
        const _variant_t & points_0 );
    IDAPath2Ptr PolydrawPathEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long codes_1size,
        struct IDANumber * * codes_1 );
    IDAPath2Ptr PolydrawPath (
        const _variant_t & points_0,
        const _variant_t & codes_1 );
    IDAPath2Ptr ArcRadians (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3 );
    IDAPath2Ptr ArcRadiansAnim (
        struct IDANumber * startAngle_0,
        struct IDANumber * endAngle_1,
        struct IDANumber * arcWidth_2,
        struct IDANumber * arcHeight_3 );
    IDAPath2Ptr ArcDegrees (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3 );
    IDAPath2Ptr PieRadians (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3 );
    IDAPath2Ptr PieRadiansAnim (
        struct IDANumber * startAngle_0,
        struct IDANumber * endAngle_1,
        struct IDANumber * arcWidth_2,
        struct IDANumber * arcHeight_3 );
    IDAPath2Ptr PieDegrees (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3 );
    IDAPath2Ptr Oval (
        double width_0,
        double height_1 );
    IDAPath2Ptr OvalAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1 );
    IDAPath2Ptr Rect (
        double width_0,
        double height_1 );
    IDAPath2Ptr RectAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1 );
    IDAPath2Ptr RoundRect (
        double width_0,
        double height_1,
        double cornerArcWidth_2,
        double cornerArcHeight_3 );
    IDAPath2Ptr RoundRectAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1,
        struct IDANumber * cornerArcWidth_2,
        struct IDANumber * cornerArcHeight_3 );
    IDAPath2Ptr CubicBSplinePathEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long knots_1size,
        struct IDANumber * * knots_1 );
    IDAPath2Ptr CubicBSplinePath (
        const _variant_t & points_0,
        const _variant_t & knots_1 );
    IDAPath2Ptr TextPath (
        struct IDAString * obsolete1_0,
        struct IDAFontStyle * obsolete2_1 );
    IDASoundPtr GetSilence ( );
    IDASoundPtr MixArrayEx (
        long snds_0size,
        struct IDASound * * snds_0 );
    IDASoundPtr MixArray (
        const _variant_t & snds_0 );
    IDASoundPtr GetSinSynth ( );
    IDAFontStylePtr GetDefaultFont ( );
    IDAFontStylePtr FontAnim (
        struct IDAString * str_0,
        struct IDANumber * size_1,
        struct IDAColor * col_2 );
    IDAFontStylePtr Font (
        _bstr_t str_0,
        double size_1,
        struct IDAColor * col_2 );
    IDAImagePtr StringImageAnim (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1 );
    IDAImagePtr StringImage (
        _bstr_t str_0,
        struct IDAFontStyle * fs_1 );
    IDAImagePtr TextImageAnim (
        struct IDAString * obsoleted1_0,
        struct IDAFontStyle * obsoleted2_1 );
    IDAImagePtr TextImage (
        _bstr_t obsoleted1_0,
        struct IDAFontStyle * obsoleted2_1 );
    IDAVector2Ptr GetXVector2 ( );
    IDAVector2Ptr GetYVector2 ( );
    IDAVector2Ptr GetZeroVector2 ( );
    IDAPoint2Ptr GetOrigin2 ( );
    IDAVector2Ptr Vector2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1 );
    IDAVector2Ptr Vector2 (
        double x_0,
        double y_1 );
    IDAPoint2Ptr Point2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1 );
    IDAPoint2Ptr Point2 (
        double x_0,
        double y_1 );
    IDAVector2Ptr Vector2PolarAnim (
        struct IDANumber * theta_0,
        struct IDANumber * radius_1 );
    IDAVector2Ptr Vector2Polar (
        double theta_0,
        double radius_1 );
    IDAVector2Ptr Vector2PolarDegrees (
        double theta_0,
        double radius_1 );
    IDAPoint2Ptr Point2PolarAnim (
        struct IDANumber * theta_0,
        struct IDANumber * radius_1 );
    IDAPoint2Ptr Point2Polar (
        double theta_0,
        double radius_1 );
    IDANumberPtr DotVector2 (
        struct IDAVector2 * v_0,
        struct IDAVector2 * u_1 );
    IDAVector2Ptr NegVector2 (
        struct IDAVector2 * v_0 );
    IDAVector2Ptr SubVector2 (
        struct IDAVector2 * v1_0,
        struct IDAVector2 * v2_1 );
    IDAVector2Ptr AddVector2 (
        struct IDAVector2 * v1_0,
        struct IDAVector2 * v2_1 );
    IDAPoint2Ptr AddPoint2Vector (
        struct IDAPoint2 * p_0,
        struct IDAVector2 * v_1 );
    IDAPoint2Ptr SubPoint2Vector (
        struct IDAPoint2 * p_0,
        struct IDAVector2 * v_1 );
    IDAVector2Ptr SubPoint2 (
        struct IDAPoint2 * p1_0,
        struct IDAPoint2 * p2_1 );
    IDANumberPtr DistancePoint2 (
        struct IDAPoint2 * p_0,
        struct IDAPoint2 * q_1 );
    IDANumberPtr DistanceSquaredPoint2 (
        struct IDAPoint2 * p_0,
        struct IDAPoint2 * q_1 );
    IDAVector3Ptr GetXVector3 ( );
    IDAVector3Ptr GetYVector3 ( );
    IDAVector3Ptr GetZVector3 ( );
    IDAVector3Ptr GetZeroVector3 ( );
    IDAPoint3Ptr GetOrigin3 ( );
    IDAVector3Ptr Vector3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2 );
    IDAVector3Ptr Vector3 (
        double x_0,
        double y_1,
        double z_2 );
    IDAPoint3Ptr Point3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2 );
    IDAPoint3Ptr Point3 (
        double x_0,
        double y_1,
        double z_2 );
    IDAVector3Ptr Vector3SphericalAnim (
        struct IDANumber * xyAngle_0,
        struct IDANumber * yzAngle_1,
        struct IDANumber * radius_2 );
    IDAVector3Ptr Vector3Spherical (
        double xyAngle_0,
        double yzAngle_1,
        double radius_2 );
    IDAPoint3Ptr Point3SphericalAnim (
        struct IDANumber * zxAngle_0,
        struct IDANumber * xyAngle_1,
        struct IDANumber * radius_2 );
    IDAPoint3Ptr Point3Spherical (
        double zxAngle_0,
        double xyAngle_1,
        double radius_2 );
    IDANumberPtr DotVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * u_1 );
    IDAVector3Ptr CrossVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * u_1 );
    IDAVector3Ptr NegVector3 (
        struct IDAVector3 * v_0 );
    IDAVector3Ptr SubVector3 (
        struct IDAVector3 * v1_0,
        struct IDAVector3 * v2_1 );
    IDAVector3Ptr AddVector3 (
        struct IDAVector3 * v1_0,
        struct IDAVector3 * v2_1 );
    IDAPoint3Ptr AddPoint3Vector (
        struct IDAPoint3 * p_0,
        struct IDAVector3 * v_1 );
    IDAPoint3Ptr SubPoint3Vector (
        struct IDAPoint3 * p_0,
        struct IDAVector3 * v_1 );
    IDAVector3Ptr SubPoint3 (
        struct IDAPoint3 * p1_0,
        struct IDAPoint3 * p2_1 );
    IDANumberPtr DistancePoint3 (
        struct IDAPoint3 * p_0,
        struct IDAPoint3 * q_1 );
    IDANumberPtr DistanceSquaredPoint3 (
        struct IDAPoint3 * p_0,
        struct IDAPoint3 * q_1 );
    IDATransform3Ptr GetIdentityTransform3 ( );
    IDATransform3Ptr Translate3Anim (
        struct IDANumber * tx_0,
        struct IDANumber * ty_1,
        struct IDANumber * tz_2 );
    IDATransform3Ptr Translate3 (
        double tx_0,
        double ty_1,
        double tz_2 );
    IDATransform3Ptr Translate3Rate (
        double tx_0,
        double ty_1,
        double tz_2 );
    IDATransform3Ptr Translate3Vector (
        struct IDAVector3 * delta_0 );
    IDATransform3Ptr Translate3Point (
        struct IDAPoint3 * new_origin_0 );
    IDATransform3Ptr Scale3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2 );
    IDATransform3Ptr Scale3 (
        double x_0,
        double y_1,
        double z_2 );
    IDATransform3Ptr Scale3Rate (
        double x_0,
        double y_1,
        double z_2 );
    IDATransform3Ptr Scale3Vector (
        struct IDAVector3 * scale_vec_0 );
    IDATransform3Ptr Scale3UniformAnim (
        struct IDANumber * uniform_scale_0 );
    IDATransform3Ptr Scale3Uniform (
        double uniform_scale_0 );
    IDATransform3Ptr Scale3UniformRate (
        double uniform_scale_0 );
    IDATransform3Ptr Rotate3Anim (
        struct IDAVector3 * axis_0,
        struct IDANumber * angle_1 );
    IDATransform3Ptr Rotate3 (
        struct IDAVector3 * axis_0,
        double angle_1 );
    IDATransform3Ptr Rotate3Rate (
        struct IDAVector3 * axis_0,
        double angle_1 );
    IDATransform3Ptr Rotate3Degrees (
        struct IDAVector3 * axis_0,
        double angle_1 );
    IDATransform3Ptr Rotate3RateDegrees (
        struct IDAVector3 * axis_0,
        double angle_1 );
    IDATransform3Ptr XShear3Anim (
        struct IDANumber * a_0,
        struct IDANumber * b_1 );
    IDATransform3Ptr XShear3 (
        double a_0,
        double b_1 );
    IDATransform3Ptr XShear3Rate (
        double a_0,
        double b_1 );
    IDATransform3Ptr YShear3Anim (
        struct IDANumber * c_0,
        struct IDANumber * d_1 );
    IDATransform3Ptr YShear3 (
        double c_0,
        double d_1 );
    IDATransform3Ptr YShear3Rate (
        double c_0,
        double d_1 );
    IDATransform3Ptr ZShear3Anim (
        struct IDANumber * e_0,
        struct IDANumber * f_1 );
    IDATransform3Ptr ZShear3 (
        double e_0,
        double f_1 );
    IDATransform3Ptr ZShear3Rate (
        double e_0,
        double f_1 );
    IDATransform3Ptr Transform4x4AnimEx (
        long m_0size,
        struct IDANumber * * m_0 );
    IDATransform3Ptr Transform4x4Anim (
        const _variant_t & m_0 );
    IDATransform3Ptr Compose3 (
        struct IDATransform3 * a_0,
        struct IDATransform3 * b_1 );
    IDATransform3Ptr Compose3ArrayEx (
        long xfs_0size,
        struct IDATransform3 * * xfs_0 );
    IDATransform3Ptr Compose3Array (
        const _variant_t & xfs_0 );
    IDATransform3Ptr LookAtFrom (
        struct IDAPoint3 * to_0,
        struct IDAPoint3 * from_1,
        struct IDAVector3 * up_2 );
    IDATransform2Ptr GetIdentityTransform2 ( );
    IDATransform2Ptr Translate2Anim (
        struct IDANumber * tx_0,
        struct IDANumber * ty_1 );
    IDATransform2Ptr Translate2 (
        double tx_0,
        double ty_1 );
    IDATransform2Ptr Translate2Rate (
        double tx_0,
        double ty_1 );
    IDATransform2Ptr Translate2Vector (
        struct IDAVector2 * delta_0 );
    IDATransform2Ptr Translate2Point (
        struct IDAPoint2 * pos_0 );
    IDATransform2Ptr Scale2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1 );
    IDATransform2Ptr Scale2 (
        double x_0,
        double y_1 );
    IDATransform2Ptr Scale2Rate (
        double x_0,
        double y_1 );
    IDATransform2Ptr Scale2Vector2 (
        struct IDAVector2 * obsoleteMethod_0 );
    IDATransform2Ptr Scale2Vector (
        struct IDAVector2 * scale_vec_0 );
    IDATransform2Ptr Scale2UniformAnim (
        struct IDANumber * uniform_scale_0 );
    IDATransform2Ptr Scale2Uniform (
        double uniform_scale_0 );
    IDATransform2Ptr Scale2UniformRate (
        double uniform_scale_0 );
    IDATransform2Ptr Rotate2Anim (
        struct IDANumber * angle_0 );
    IDATransform2Ptr Rotate2 (
        double angle_0 );
    IDATransform2Ptr Rotate2Rate (
        double angle_0 );
    IDATransform2Ptr Rotate2Degrees (
        double angle_0 );
    IDATransform2Ptr Rotate2RateDegrees (
        double angle_0 );
    IDATransform2Ptr XShear2Anim (
        struct IDANumber * arg_0 );
    IDATransform2Ptr XShear2 (
        double arg_0 );
    IDATransform2Ptr XShear2Rate (
        double arg_0 );
    IDATransform2Ptr YShear2Anim (
        struct IDANumber * arg_0 );
    IDATransform2Ptr YShear2 (
        double arg_0 );
    IDATransform2Ptr YShear2Rate (
        double arg_0 );
    IDATransform2Ptr Transform3x2AnimEx (
        long m_0size,
        struct IDANumber * * m_0 );
    IDATransform2Ptr Transform3x2Anim (
        const _variant_t & m_0 );
    IDATransform2Ptr Compose2 (
        struct IDATransform2 * a_0,
        struct IDATransform2 * b_1 );
    IDATransform2Ptr Compose2ArrayEx (
        long xfs_0size,
        struct IDATransform2 * * xfs_0 );
    IDATransform2Ptr Compose2Array (
        const _variant_t & xfs_0 );
    IDATuplePtr Tuple (
        const _variant_t & obsolete1 );
    IDAArrayPtr Array (
        const _variant_t & obsolete1 );
    VARIANT_BOOL GetAreBlockingImportsComplete ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_VersionString (
        BSTR * str ) = 0;
    virtual HRESULT __stdcall get_Site (
        struct IDASite * * pSite ) = 0;
    virtual HRESULT __stdcall put_Site (
        struct IDASite * pSite ) = 0;
    virtual HRESULT __stdcall put_ClientSite (
        struct IOleClientSite * pClientSite ) = 0;
    virtual HRESULT __stdcall get_ClientSite (
        struct IOleClientSite * * pClientSite ) = 0;
    virtual HRESULT __stdcall put_PixelConstructionMode (
        VARIANT_BOOL bMode ) = 0;
    virtual HRESULT __stdcall get_PixelConstructionMode (
        VARIANT_BOOL * bMode ) = 0;
    virtual HRESULT __stdcall raw_TriggerEvent (
        struct IDAEvent * event,
        struct IDABehavior * Data ) = 0;
    virtual HRESULT __stdcall raw_NewDrawingSurface (
        struct IDADrawingSurface * * pds ) = 0;
    virtual HRESULT __stdcall raw_ImportMovie (
        BSTR url,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportMovieAsync (
        BSTR url,
        struct IDAImage * pImageStandIn,
        struct IDASound * pSoundStandIn,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportImage (
        BSTR url,
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall raw_ImportImageAsync (
        BSTR url,
        struct IDAImage * pImageStandIn,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportImageColorKey (
        BSTR url,
        unsigned char colorKeyRed,
        unsigned char colorKeyGreen,
        unsigned char colorKeyBlue,
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall raw_ImportImageAsyncColorKey (
        BSTR url,
        struct IDAImage * pImageStandIn,
        unsigned char colorKeyRed,
        unsigned char colorKeyGreen,
        unsigned char colorKeyBlue,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportSound (
        BSTR url,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportSoundAsync (
        BSTR url,
        struct IDASound * pSoundStandIn,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportGeometry (
        BSTR url,
        struct IDAGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall raw_ImportGeometryAsync (
        BSTR url,
        struct IDAGeometry * pGeoStandIn,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportDirectDrawSurface (
        IUnknown * dds,
        struct IDAEvent * updateEvent,
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall raw_Cond (
        struct IDABoolean * c,
        struct IDABehavior * i,
        struct IDABehavior * e,
        struct IDABehavior * * pCondBvr ) = 0;
    virtual HRESULT __stdcall raw_DAArrayEx (
        long s,
        struct IDABehavior * * pBvrs,
        struct IDAArray * * bvr ) = 0;
    virtual HRESULT __stdcall raw_DAArray (
        VARIANT bvrs,
        struct IDAArray * * bvr ) = 0;
    virtual HRESULT __stdcall raw_DATupleEx (
        long s,
        struct IDABehavior * * pBvrs,
        struct IDATuple * * bvr ) = 0;
    virtual HRESULT __stdcall raw_DATuple (
        VARIANT bvrs,
        struct IDATuple * * bvr ) = 0;
    virtual HRESULT __stdcall raw_ModifiableBehavior (
        struct IDABehavior * orig,
        struct IDABehavior * * bvr ) = 0;
    virtual HRESULT __stdcall raw_UninitializedArray (
        struct IDAArray * typeTmp,
        struct IDAArray * * bvr ) = 0;
    virtual HRESULT __stdcall raw_UninitializedTuple (
        struct IDATuple * typeTmp,
        struct IDATuple * * bvr ) = 0;
    virtual HRESULT __stdcall raw_NumberBSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDANumber * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator,
        struct IDANumber * * bvr ) = 0;
    virtual HRESULT __stdcall raw_NumberBSpline (
        int degree,
        VARIANT knots,
        VARIANT ctrlPts,
        VARIANT weights,
        struct IDANumber * evaluator,
        struct IDANumber * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Point2BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAPoint2 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator,
        struct IDAPoint2 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Point2BSpline (
        int degree,
        VARIANT knots,
        VARIANT ctrlPts,
        VARIANT weights,
        struct IDANumber * evaluator,
        struct IDAPoint2 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Point3BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAPoint3 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator,
        struct IDAPoint3 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Point3BSpline (
        int degree,
        VARIANT knots,
        VARIANT ctrlPts,
        VARIANT weights,
        struct IDANumber * evaluator,
        struct IDAPoint3 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Vector2BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAVector2 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator,
        struct IDAVector2 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Vector2BSpline (
        int degree,
        VARIANT knots,
        VARIANT ctrlPts,
        VARIANT weights,
        struct IDANumber * evaluator,
        struct IDAVector2 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Vector3BSplineEx (
        int degree,
        long numKnots,
        struct IDANumber * * knots,
        long numPts,
        struct IDAVector3 * * ctrlPts,
        long numWts,
        struct IDANumber * * weights,
        struct IDANumber * evaluator,
        struct IDAVector3 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Vector3BSpline (
        int degree,
        VARIANT knots,
        VARIANT ctrlPts,
        VARIANT weights,
        struct IDANumber * evaluator,
        struct IDAVector3 * * bvr ) = 0;
    virtual HRESULT __stdcall raw_Pow (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Abs (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Sqrt (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Floor (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Round (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Ceiling (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Asin (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Acos (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Atan (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Sin (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Cos (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Tan (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Exp (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Ln (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Log10 (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ToDegrees (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ToRadians (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Mod (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Atan2 (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Add (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Sub (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Mul (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Div (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_LT (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_LTE (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_GT (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_GTE (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_EQ (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_NE (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Neg (
        struct IDANumber * a_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_InterpolateAnim (
        struct IDANumber * from_0,
        struct IDANumber * to_1,
        struct IDANumber * duration_2,
        struct IDANumber * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Interpolate (
        double from_0,
        double to_1,
        double duration_2,
        struct IDANumber * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_SlowInSlowOutAnim (
        struct IDANumber * from_0,
        struct IDANumber * to_1,
        struct IDANumber * duration_2,
        struct IDANumber * sharpness_3,
        struct IDANumber * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_SlowInSlowOut (
        double from_0,
        double to_1,
        double duration_2,
        double sharpness_3,
        struct IDANumber * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_SoundSource (
        struct IDASound * snd_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Mix (
        struct IDASound * left_0,
        struct IDASound * right_1,
        struct IDASound * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_And (
        struct IDABoolean * a_0,
        struct IDABoolean * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Or (
        struct IDABoolean * a_0,
        struct IDABoolean * b_1,
        struct IDABoolean * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Not (
        struct IDABoolean * a_0,
        struct IDABoolean * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Integral (
        struct IDANumber * b_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Derivative (
        struct IDANumber * b_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_IntegralVector2 (
        struct IDAVector2 * v_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_IntegralVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DerivativeVector2 (
        struct IDAVector2 * v_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DerivativeVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DerivativePoint2 (
        struct IDAPoint2 * v_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DerivativePoint3 (
        struct IDAPoint3 * v_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_KeyState (
        struct IDANumber * n_0,
        struct IDABoolean * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_KeyUp (
        long arg_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_KeyDown (
        long arg_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DANumber (
        double num_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DAString (
        BSTR str_0,
        struct IDAString * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_DABoolean (
        VARIANT_BOOL num_0,
        struct IDABoolean * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SeededRandom (
        double arg_0,
        struct IDANumber * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_MousePosition (
        struct IDAPoint2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_LeftButtonState (
        struct IDABoolean * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_RightButtonState (
        struct IDABoolean * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DATrue (
        struct IDABoolean * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DAFalse (
        struct IDABoolean * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_LocalTime (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_GlobalTime (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Pixel (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_UserData (
        IUnknown * data_0,
        struct IDAUserData * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_UntilNotify (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        struct IDAUntilNotifier * notifier_2,
        struct IDABehavior * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Until (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        struct IDABehavior * b1_2,
        struct IDABehavior * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_UntilEx (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        struct IDABehavior * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Sequence (
        struct IDABehavior * s1_0,
        struct IDABehavior * s2_1,
        struct IDABehavior * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPath (
        struct IDAPath2 * path_0,
        double duration_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngle (
        struct IDAPath2 * path_0,
        double duration_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngleUpright (
        struct IDAPath2 * path_0,
        double duration_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngleEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngleUprightEval (
        struct IDAPath2 * path_0,
        struct IDANumber * eval_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngleAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FollowPathAngleUprightAnim (
        struct IDAPath2 * obsoleted1_0,
        struct IDANumber * obsoleted2_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ConcatString (
        struct IDAString * s1_0,
        struct IDAString * s2_1,
        struct IDAString * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_PerspectiveCamera (
        double focalDist_0,
        double nearClip_1,
        struct IDACamera * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_PerspectiveCameraAnim (
        struct IDANumber * focalDist_0,
        struct IDANumber * nearClip_1,
        struct IDACamera * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ParallelCamera (
        double nearClip_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ParallelCameraAnim (
        struct IDANumber * nearClip_0,
        struct IDACamera * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ColorRgbAnim (
        struct IDANumber * red_0,
        struct IDANumber * green_1,
        struct IDANumber * blue_2,
        struct IDAColor * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_ColorRgb (
        double red_0,
        double green_1,
        double blue_2,
        struct IDAColor * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_ColorRgb255 (
        short red_0,
        short green_1,
        short blue_2,
        struct IDAColor * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_ColorHsl (
        double hue_0,
        double saturation_1,
        double lum_2,
        struct IDAColor * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_ColorHslAnim (
        struct IDANumber * hue_0,
        struct IDANumber * saturation_1,
        struct IDANumber * lum_2,
        struct IDAColor * * ret_3 ) = 0;
    virtual HRESULT __stdcall get_Red (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Green (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Blue (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Cyan (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Magenta (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Yellow (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Black (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_White (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Aqua (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Fuchsia (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Gray (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Lime (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Maroon (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Navy (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Olive (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Purple (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Silver (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Teal (
        struct IDAColor * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Predicate (
        struct IDABoolean * b_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_NotEvent (
        struct IDAEvent * event_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_AndEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1,
        struct IDAEvent * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_OrEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1,
        struct IDAEvent * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ThenEvent (
        struct IDAEvent * e1_0,
        struct IDAEvent * e2_1,
        struct IDAEvent * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_LeftButtonDown (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_LeftButtonUp (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_RightButtonDown (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_RightButtonUp (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Always (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Never (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_TimerAnim (
        struct IDANumber * n_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Timer (
        double n_0,
        struct IDAEvent * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_AppTriggeredEvent (
        struct IDAEvent * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_ScriptCallback (
        BSTR obsolete1_0,
        struct IDAEvent * obsolete2_1,
        BSTR obsolete3_2,
        struct IDAEvent * * ret_3 ) = 0;
    virtual HRESULT __stdcall get_EmptyGeometry (
        struct IDAGeometry * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_UnionGeometry (
        struct IDAGeometry * g1_0,
        struct IDAGeometry * g2_1,
        struct IDAGeometry * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_UnionGeometryArrayEx (
        long imgs_0size,
        struct IDAGeometry * * imgs_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_UnionGeometryArray (
        VARIANT imgs_0,
        struct IDAGeometry * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_EmptyImage (
        struct IDAImage * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DetectableEmptyImage (
        struct IDAImage * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_SolidColorImage (
        struct IDAColor * col_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_GradientPolygonEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long colors_1size,
        struct IDAColor * * colors_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_GradientPolygon (
        VARIANT points_0,
        VARIANT colors_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientPolygonEx (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        long points_2size,
        struct IDAPoint2 * * points_2,
        double fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientPolygon (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        VARIANT points_2,
        double fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientPolygonAnimEx (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        long points_2size,
        struct IDAPoint2 * * points_2,
        struct IDANumber * fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientPolygonAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        VARIANT points_2,
        struct IDANumber * fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_GradientSquare (
        struct IDAColor * lowerLeft_0,
        struct IDAColor * upperLeft_1,
        struct IDAColor * upperRight_2,
        struct IDAColor * lowerRight_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientSquare (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        double fallOff_2,
        struct IDAImage * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientSquareAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        struct IDANumber * fallOff_2,
        struct IDAImage * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientRegularPoly (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        double numEdges_2,
        double fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientRegularPolyAnim (
        struct IDAColor * inner_0,
        struct IDAColor * outer_1,
        struct IDANumber * numEdges_2,
        struct IDANumber * fallOff_3,
        struct IDAImage * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_GradientHorizontal (
        struct IDAColor * start_0,
        struct IDAColor * stop_1,
        double fallOff_2,
        struct IDAImage * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_GradientHorizontalAnim (
        struct IDAColor * start_0,
        struct IDAColor * stop_1,
        struct IDANumber * fallOff_2,
        struct IDAImage * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_HatchHorizontal (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchHorizontalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchVertical (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchVerticalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchForwardDiagonal (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchForwardDiagonalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchBackwardDiagonal (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchBackwardDiagonalAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchCross (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchCrossAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchDiagonalCross (
        struct IDAColor * lineClr_0,
        double spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_HatchDiagonalCrossAnim (
        struct IDAColor * lineClr_0,
        struct IDANumber * spacing_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Overlay (
        struct IDAImage * top_0,
        struct IDAImage * bottom_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_OverlayArrayEx (
        long imgs_0size,
        struct IDAImage * * imgs_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_OverlayArray (
        VARIANT imgs_0,
        struct IDAImage * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_AmbientLight (
        struct IDAGeometry * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DirectionalLight (
        struct IDAGeometry * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_PointLight (
        struct IDAGeometry * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_SpotLightAnim (
        struct IDANumber * fullcone_0,
        struct IDANumber * cutoff_1,
        struct IDAGeometry * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_SpotLight (
        struct IDANumber * fullcone_0,
        double cutoff_1,
        struct IDAGeometry * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_DefaultLineStyle (
        struct IDALineStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_EmptyLineStyle (
        struct IDALineStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_JoinStyleBevel (
        struct IDAJoinStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_JoinStyleRound (
        struct IDAJoinStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_JoinStyleMiter (
        struct IDAJoinStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_EndStyleFlat (
        struct IDAEndStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_EndStyleSquare (
        struct IDAEndStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_EndStyleRound (
        struct IDAEndStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DashStyleSolid (
        struct IDADashStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DashStyleDashed (
        struct IDADashStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DefaultMicrophone (
        struct IDAMicrophone * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_OpaqueMatte (
        struct IDAMatte * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_ClearMatte (
        struct IDAMatte * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_UnionMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1,
        struct IDAMatte * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_IntersectMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1,
        struct IDAMatte * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DifferenceMatte (
        struct IDAMatte * m1_0,
        struct IDAMatte * m2_1,
        struct IDAMatte * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_FillMatte (
        struct IDAPath2 * p_0,
        struct IDAMatte * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_TextMatte (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1,
        struct IDAMatte * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_EmptyMontage (
        struct IDAMontage * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_ImageMontage (
        struct IDAImage * im_0,
        double depth_1,
        struct IDAMontage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ImageMontageAnim (
        struct IDAImage * im_0,
        struct IDANumber * depth_1,
        struct IDAMontage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_UnionMontage (
        struct IDAMontage * m1_0,
        struct IDAMontage * m2_1,
        struct IDAMontage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Concat (
        struct IDAPath2 * p1_0,
        struct IDAPath2 * p2_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ConcatArrayEx (
        long paths_0size,
        struct IDAPath2 * * paths_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_ConcatArray (
        VARIANT paths_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Line (
        struct IDAPoint2 * p1_0,
        struct IDAPoint2 * p2_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Ray (
        struct IDAPoint2 * pt_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_StringPathAnim (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_StringPath (
        BSTR str_0,
        struct IDAFontStyle * fs_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_PolylineEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Polyline (
        VARIANT points_0,
        struct IDAPath2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_PolydrawPathEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long codes_1size,
        struct IDANumber * * codes_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_PolydrawPath (
        VARIANT points_0,
        VARIANT codes_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ArcRadians (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_ArcRadiansAnim (
        struct IDANumber * startAngle_0,
        struct IDANumber * endAngle_1,
        struct IDANumber * arcWidth_2,
        struct IDANumber * arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_ArcDegrees (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_PieRadians (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_PieRadiansAnim (
        struct IDANumber * startAngle_0,
        struct IDANumber * endAngle_1,
        struct IDANumber * arcWidth_2,
        struct IDANumber * arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_PieDegrees (
        double startAngle_0,
        double endAngle_1,
        double arcWidth_2,
        double arcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_Oval (
        double width_0,
        double height_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_OvalAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Rect (
        double width_0,
        double height_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_RectAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_RoundRect (
        double width_0,
        double height_1,
        double cornerArcWidth_2,
        double cornerArcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_RoundRectAnim (
        struct IDANumber * width_0,
        struct IDANumber * height_1,
        struct IDANumber * cornerArcWidth_2,
        struct IDANumber * cornerArcHeight_3,
        struct IDAPath2 * * ret_4 ) = 0;
    virtual HRESULT __stdcall raw_CubicBSplinePathEx (
        long points_0size,
        struct IDAPoint2 * * points_0,
        long knots_1size,
        struct IDANumber * * knots_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_CubicBSplinePath (
        VARIANT points_0,
        VARIANT knots_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_TextPath (
        struct IDAString * obsolete1_0,
        struct IDAFontStyle * obsolete2_1,
        struct IDAPath2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_Silence (
        struct IDASound * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_MixArrayEx (
        long snds_0size,
        struct IDASound * * snds_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_MixArray (
        VARIANT snds_0,
        struct IDASound * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_SinSynth (
        struct IDASound * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_DefaultFont (
        struct IDAFontStyle * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_FontAnim (
        struct IDAString * str_0,
        struct IDANumber * size_1,
        struct IDAColor * col_2,
        struct IDAFontStyle * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Font (
        BSTR str_0,
        double size_1,
        struct IDAColor * col_2,
        struct IDAFontStyle * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_StringImageAnim (
        struct IDAString * str_0,
        struct IDAFontStyle * fs_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_StringImage (
        BSTR str_0,
        struct IDAFontStyle * fs_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_TextImageAnim (
        struct IDAString * obsoleted1_0,
        struct IDAFontStyle * obsoleted2_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_TextImage (
        BSTR obsoleted1_0,
        struct IDAFontStyle * obsoleted2_1,
        struct IDAImage * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_XVector2 (
        struct IDAVector2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_YVector2 (
        struct IDAVector2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_ZeroVector2 (
        struct IDAVector2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Origin2 (
        struct IDAPoint2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Vector2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Vector2 (
        double x_0,
        double y_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Point2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Point2 (
        double x_0,
        double y_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Vector2PolarAnim (
        struct IDANumber * theta_0,
        struct IDANumber * radius_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Vector2Polar (
        double theta_0,
        double radius_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Vector2PolarDegrees (
        double theta_0,
        double radius_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Point2PolarAnim (
        struct IDANumber * theta_0,
        struct IDANumber * radius_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Point2Polar (
        double theta_0,
        double radius_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DotVector2 (
        struct IDAVector2 * v_0,
        struct IDAVector2 * u_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_NegVector2 (
        struct IDAVector2 * v_0,
        struct IDAVector2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SubVector2 (
        struct IDAVector2 * v1_0,
        struct IDAVector2 * v2_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_AddVector2 (
        struct IDAVector2 * v1_0,
        struct IDAVector2 * v2_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_AddPoint2Vector (
        struct IDAPoint2 * p_0,
        struct IDAVector2 * v_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_SubPoint2Vector (
        struct IDAPoint2 * p_0,
        struct IDAVector2 * v_1,
        struct IDAPoint2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_SubPoint2 (
        struct IDAPoint2 * p1_0,
        struct IDAPoint2 * p2_1,
        struct IDAVector2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DistancePoint2 (
        struct IDAPoint2 * p_0,
        struct IDAPoint2 * q_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DistanceSquaredPoint2 (
        struct IDAPoint2 * p_0,
        struct IDAPoint2 * q_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_XVector3 (
        struct IDAVector3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_YVector3 (
        struct IDAVector3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_ZVector3 (
        struct IDAVector3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_ZeroVector3 (
        struct IDAVector3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall get_Origin3 (
        struct IDAPoint3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Vector3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2,
        struct IDAVector3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Vector3 (
        double x_0,
        double y_1,
        double z_2,
        struct IDAVector3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Point3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2,
        struct IDAPoint3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Point3 (
        double x_0,
        double y_1,
        double z_2,
        struct IDAPoint3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Vector3SphericalAnim (
        struct IDANumber * xyAngle_0,
        struct IDANumber * yzAngle_1,
        struct IDANumber * radius_2,
        struct IDAVector3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Vector3Spherical (
        double xyAngle_0,
        double yzAngle_1,
        double radius_2,
        struct IDAVector3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Point3SphericalAnim (
        struct IDANumber * zxAngle_0,
        struct IDANumber * xyAngle_1,
        struct IDANumber * radius_2,
        struct IDAPoint3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Point3Spherical (
        double zxAngle_0,
        double xyAngle_1,
        double radius_2,
        struct IDAPoint3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_DotVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * u_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_CrossVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * u_1,
        struct IDAVector3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_NegVector3 (
        struct IDAVector3 * v_0,
        struct IDAVector3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SubVector3 (
        struct IDAVector3 * v1_0,
        struct IDAVector3 * v2_1,
        struct IDAVector3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_AddVector3 (
        struct IDAVector3 * v1_0,
        struct IDAVector3 * v2_1,
        struct IDAVector3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_AddPoint3Vector (
        struct IDAPoint3 * p_0,
        struct IDAVector3 * v_1,
        struct IDAPoint3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_SubPoint3Vector (
        struct IDAPoint3 * p_0,
        struct IDAVector3 * v_1,
        struct IDAPoint3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_SubPoint3 (
        struct IDAPoint3 * p1_0,
        struct IDAPoint3 * p2_1,
        struct IDAVector3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DistancePoint3 (
        struct IDAPoint3 * p_0,
        struct IDAPoint3 * q_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_DistanceSquaredPoint3 (
        struct IDAPoint3 * p_0,
        struct IDAPoint3 * q_1,
        struct IDANumber * * ret_2 ) = 0;
    virtual HRESULT __stdcall get_IdentityTransform3 (
        struct IDATransform3 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Translate3Anim (
        struct IDANumber * tx_0,
        struct IDANumber * ty_1,
        struct IDANumber * tz_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Translate3 (
        double tx_0,
        double ty_1,
        double tz_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Translate3Rate (
        double tx_0,
        double ty_1,
        double tz_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Translate3Vector (
        struct IDAVector3 * delta_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Translate3Point (
        struct IDAPoint3 * new_origin_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale3Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDANumber * z_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Scale3 (
        double x_0,
        double y_1,
        double z_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Scale3Rate (
        double x_0,
        double y_1,
        double z_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall raw_Scale3Vector (
        struct IDAVector3 * scale_vec_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale3UniformAnim (
        struct IDANumber * uniform_scale_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale3Uniform (
        double uniform_scale_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale3UniformRate (
        double uniform_scale_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate3Anim (
        struct IDAVector3 * axis_0,
        struct IDANumber * angle_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Rotate3 (
        struct IDAVector3 * axis_0,
        double angle_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Rotate3Rate (
        struct IDAVector3 * axis_0,
        double angle_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Rotate3Degrees (
        struct IDAVector3 * axis_0,
        double angle_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Rotate3RateDegrees (
        struct IDAVector3 * axis_0,
        double angle_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_XShear3Anim (
        struct IDANumber * a_0,
        struct IDANumber * b_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_XShear3 (
        double a_0,
        double b_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_XShear3Rate (
        double a_0,
        double b_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_YShear3Anim (
        struct IDANumber * c_0,
        struct IDANumber * d_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_YShear3 (
        double c_0,
        double d_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_YShear3Rate (
        double c_0,
        double d_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ZShear3Anim (
        struct IDANumber * e_0,
        struct IDANumber * f_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ZShear3 (
        double e_0,
        double f_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_ZShear3Rate (
        double e_0,
        double f_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Transform4x4AnimEx (
        long m_0size,
        struct IDANumber * * m_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Transform4x4Anim (
        VARIANT m_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Compose3 (
        struct IDATransform3 * a_0,
        struct IDATransform3 * b_1,
        struct IDATransform3 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Compose3ArrayEx (
        long xfs_0size,
        struct IDATransform3 * * xfs_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Compose3Array (
        VARIANT xfs_0,
        struct IDATransform3 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_LookAtFrom (
        struct IDAPoint3 * to_0,
        struct IDAPoint3 * from_1,
        struct IDAVector3 * up_2,
        struct IDATransform3 * * ret_3 ) = 0;
    virtual HRESULT __stdcall get_IdentityTransform2 (
        struct IDATransform2 * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_Translate2Anim (
        struct IDANumber * tx_0,
        struct IDANumber * ty_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Translate2 (
        double tx_0,
        double ty_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Translate2Rate (
        double tx_0,
        double ty_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Translate2Vector (
        struct IDAVector2 * delta_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Translate2Point (
        struct IDAPoint2 * pos_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale2Anim (
        struct IDANumber * x_0,
        struct IDANumber * y_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Scale2 (
        double x_0,
        double y_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Scale2Rate (
        double x_0,
        double y_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Scale2Vector2 (
        struct IDAVector2 * obsoleteMethod_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale2Vector (
        struct IDAVector2 * scale_vec_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale2UniformAnim (
        struct IDANumber * uniform_scale_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale2Uniform (
        double uniform_scale_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Scale2UniformRate (
        double uniform_scale_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate2Anim (
        struct IDANumber * angle_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate2 (
        double angle_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate2Rate (
        double angle_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate2Degrees (
        double angle_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Rotate2RateDegrees (
        double angle_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_XShear2Anim (
        struct IDANumber * arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_XShear2 (
        double arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_XShear2Rate (
        double arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_YShear2Anim (
        struct IDANumber * arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_YShear2 (
        double arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_YShear2Rate (
        double arg_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Transform3x2AnimEx (
        long m_0size,
        struct IDANumber * * m_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Transform3x2Anim (
        VARIANT m_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Compose2 (
        struct IDATransform2 * a_0,
        struct IDATransform2 * b_1,
        struct IDATransform2 * * ret_2 ) = 0;
    virtual HRESULT __stdcall raw_Compose2ArrayEx (
        long xfs_0size,
        struct IDATransform2 * * xfs_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Compose2Array (
        VARIANT xfs_0,
        struct IDATransform2 * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_Tuple (
        VARIANT obsolete1,
        struct IDATuple * * obsolete2 ) = 0;
    virtual HRESULT __stdcall raw_Array (
        VARIANT obsolete1,
        struct IDAArray * * obsolete2 ) = 0;
    virtual HRESULT __stdcall get_AreBlockingImportsComplete (
        VARIANT_BOOL * bComplete ) = 0;
};

struct __declspec(uuid("fa261cf0-c44e-11d1-9be4-00c04fc2f51d"))
IDA2Statics : IDAStatics
{
    //
    // Property data
    //

    __declspec(property(get=GetViewFrameRate))
    IDANumberPtr ViewFrameRate;
    __declspec(property(get=GetModifiableBehaviorFlags,put=PutModifiableBehaviorFlags))
    unsigned long ModifiableBehaviorFlags;
    __declspec(property(get=GetEmptyColor))
    IDAColorPtr EmptyColor;

    //
    // Wrapper methods for error-handling
    //

    IDAGeometryPtr ImportDirect3DRMVisual (
        IUnknown * visual );
    IDADXTransformResultPtr ApplyDXTransformEx (
        IUnknown * theXf,
        long numInputs,
        struct IDABehavior * * inputs,
        struct IDANumber * evaluator );
    IDADXTransformResultPtr ApplyDXTransform (
        const _variant_t & varXf,
        const _variant_t & inputs,
        const _variant_t & evaluator );
    IDANumberPtr ModifiableNumber (
        double initVal );
    IDAStringPtr ModifiableString (
        _bstr_t initVal );
    IDAArrayPtr DAArrayEx2 (
        long s,
        struct IDABehavior * * pBvrs,
        unsigned long dwFlags );
    IDAArrayPtr DAArray2 (
        const _variant_t & bvrs,
        unsigned long dwFlags );
    IDAGeometryPtr ImportGeometryWrapped (
        _bstr_t url,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags );
    IDAImportationResultPtr ImportGeometryWrappedAsync (
        _bstr_t url,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags,
        struct IDAGeometry * pGeoStandIn );
    IDAGeometryPtr ImportDirect3DRMVisualWrapped (
        IUnknown * visual,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags );
    IDABehaviorPtr UntilNotifyScript (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        _bstr_t scriptlet_2 );
    IDANumberPtr GetViewFrameRate ( );
    IDAMontagePtr UnionMontageArrayEx (
        long mtgs_0size,
        struct IDAMontage * * mtgs_0 );
    IDAMontagePtr UnionMontageArray (
        const _variant_t & mtgs_0 );
    unsigned long GetModifiableBehaviorFlags ( );
    void PutModifiableBehaviorFlags (
        unsigned long dwFlags );
    IDAColorPtr GetEmptyColor ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ImportDirect3DRMVisual (
        IUnknown * visual,
        struct IDAGeometry * * bvr ) = 0;
    virtual HRESULT __stdcall raw_ApplyDXTransformEx (
        IUnknown * theXf,
        long numInputs,
        struct IDABehavior * * inputs,
        struct IDANumber * evaluator,
        struct IDADXTransformResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ApplyDXTransform (
        VARIANT varXf,
        VARIANT inputs,
        VARIANT evaluator,
        struct IDADXTransformResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ModifiableNumber (
        double initVal,
        struct IDANumber * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ModifiableString (
        BSTR initVal,
        struct IDAString * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_DAArrayEx2 (
        long s,
        struct IDABehavior * * pBvrs,
        unsigned long dwFlags,
        struct IDAArray * * bvr ) = 0;
    virtual HRESULT __stdcall raw_DAArray2 (
        VARIANT bvrs,
        unsigned long dwFlags,
        struct IDAArray * * bvr ) = 0;
    virtual HRESULT __stdcall raw_ImportGeometryWrapped (
        BSTR url,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags,
        struct IDAGeometry * * ppGeometry ) = 0;
    virtual HRESULT __stdcall raw_ImportGeometryWrappedAsync (
        BSTR url,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags,
        struct IDAGeometry * pGeoStandIn,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportDirect3DRMVisualWrapped (
        IUnknown * visual,
        long wrapType,
        double originX,
        double originY,
        double originZ,
        double zAxisX,
        double zAxisY,
        double zAxisZ,
        double yAxisX,
        double yAxisY,
        double yAxisZ,
        double texOriginX,
        double texOriginY,
        double texScaleX,
        double texScaleY,
        unsigned long Flags,
        struct IDAGeometry * * bvr ) = 0;
    virtual HRESULT __stdcall raw_UntilNotifyScript (
        struct IDABehavior * b0_0,
        struct IDAEvent * event_1,
        BSTR scriptlet_2,
        struct IDABehavior * * ret_3 ) = 0;
    virtual HRESULT __stdcall get_ViewFrameRate (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_UnionMontageArrayEx (
        long mtgs_0size,
        struct IDAMontage * * mtgs_0,
        struct IDAMontage * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_UnionMontageArray (
        VARIANT mtgs_0,
        struct IDAMontage * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_ModifiableBehaviorFlags (
        unsigned long * dwFlags ) = 0;
    virtual HRESULT __stdcall put_ModifiableBehaviorFlags (
        unsigned long dwFlags ) = 0;
    virtual HRESULT __stdcall get_EmptyColor (
        struct IDAColor * * ret_0 ) = 0;
};

struct __declspec(uuid("6e0b5fc4-4d1e-11d2-aa53-00c04fc2f60f"))
IDA3Statics : IDA2Statics
{
    //
    // Property data
    //

    __declspec(property(get=GetViewTimeDelta))
    IDANumberPtr ViewTimeDelta;

    //
    // Wrapper methods for error-handling
    //

    IDAImportationResultPtr ImportSoundStream (
        _bstr_t url );
    IDAImportationResultPtr ImportMovieStream (
        _bstr_t url );
    IDABehaviorPtr SequenceArrayEx (
        long sz,
        struct IDABehavior * * bvrs_0 );
    IDABehaviorPtr SequenceArray (
        const _variant_t & bvrs_0 );
    IDANumberPtr GetViewTimeDelta ( );
    IDAGeometryPtr TriMesh (
        int nTriangles,
        const _variant_t & positions,
        const _variant_t & normals,
        const _variant_t & UVs,
        const _variant_t & indices );
    IDAGeometryPtr TriMeshEx (
        int nTriangles,
        int nPositions,
        float * positions,
        int nNormals,
        float * normals,
        int nUVs,
        float * UVs,
        int nIndices,
        int * indices );
    IDAImagePtr RadialGradientMulticolor (
        const _variant_t & offsets,
        const _variant_t & colors );
    IDAImagePtr RadialGradientMulticolorEx (
        int nOffsets,
        struct IDANumber * * offsets,
        int nColors,
        struct IDAColor * * colors );
    IDAImagePtr LinearGradientMulticolor (
        const _variant_t & offsets,
        const _variant_t & colors );
    IDAImagePtr LinearGradientMulticolorEx (
        int nOffsets,
        struct IDANumber * * offsets,
        int nColors,
        struct IDAColor * * colors );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_ImportSoundStream (
        BSTR url,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_ImportMovieStream (
        BSTR url,
        struct IDAImportationResult * * ppResult ) = 0;
    virtual HRESULT __stdcall raw_SequenceArrayEx (
        long sz,
        struct IDABehavior * * bvrs_0,
        struct IDABehavior * * ret_1 ) = 0;
    virtual HRESULT __stdcall raw_SequenceArray (
        VARIANT bvrs_0,
        struct IDABehavior * * ret_1 ) = 0;
    virtual HRESULT __stdcall get_ViewTimeDelta (
        struct IDANumber * * ret_0 ) = 0;
    virtual HRESULT __stdcall raw_TriMesh (
        int nTriangles,
        VARIANT positions,
        VARIANT normals,
        VARIANT UVs,
        VARIANT indices,
        struct IDAGeometry * * result ) = 0;
    virtual HRESULT __stdcall raw_TriMeshEx (
        int nTriangles,
        int nPositions,
        float * positions,
        int nNormals,
        float * normals,
        int nUVs,
        float * UVs,
        int nIndices,
        int * indices,
        struct IDAGeometry * * result ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientMulticolor (
        VARIANT offsets,
        VARIANT colors,
        struct IDAImage * * result ) = 0;
    virtual HRESULT __stdcall raw_RadialGradientMulticolorEx (
        int nOffsets,
        struct IDANumber * * offsets,
        int nColors,
        struct IDAColor * * colors,
        struct IDAImage * * result ) = 0;
    virtual HRESULT __stdcall raw_LinearGradientMulticolor (
        VARIANT offsets,
        VARIANT colors,
        struct IDAImage * * result ) = 0;
    virtual HRESULT __stdcall raw_LinearGradientMulticolorEx (
        int nOffsets,
        struct IDANumber * * offsets,
        int nColors,
        struct IDAColor * * colors,
        struct IDAImage * * result ) = 0;
};

struct __declspec(uuid("542fb453-5003-11cf-92a2-00aa00b8a733"))
DAStatics;
    // [ default ] interface IDA3Statics

enum __MIDL___MIDL_itf_danim_0192_0001
{
    DAMultimediaTimer = 0,
    DAContainerTimer = 1,
    DAWMTimer = 2
};

struct __declspec(uuid("0e41257b-812d-11d0-9b4a-00c04fc2f51d"))
IDAViewerControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUpdateInterval,put=PutUpdateInterval))
    double UpdateInterval;
    __declspec(property(get=GetView,put=PutView))
    IDAViewPtr View;
    __declspec(property(get=GetImage,put=PutImage))
    IDAImagePtr Image;
    __declspec(property(get=GetBackgroundImage,put=PutBackgroundImage))
    IDAImagePtr BackgroundImage;
    __declspec(property(get=GetSound,put=PutSound))
    IDASoundPtr Sound;
    __declspec(property(get=GetPixelLibrary))
    IDAStaticsPtr PixelLibrary;
    __declspec(property(get=GetMeterLibrary))
    IDAStaticsPtr MeterLibrary;
    __declspec(property(get=GetInputImage))
    IDAImagePtr InputImage;
    __declspec(property(get=GetOpaqueForHitDetect,put=PutOpaqueForHitDetect))
    VARIANT_BOOL OpaqueForHitDetect;
    __declspec(property(get=GetTimerSource,put=PutTimerSource))
    DA_TIMER_SOURCE TimerSource;

    //
    // Wrapper methods for error-handling
    //

    double GetUpdateInterval ( );
    void PutUpdateInterval (
        double pVal );
    IDAViewPtr GetView ( );
    void PutView (
        struct IDAView * ppView );
    IDAImagePtr GetImage ( );
    void PutImage (
        struct IDAImage * ppImage );
    IDAImagePtr GetBackgroundImage ( );
    void PutBackgroundImage (
        struct IDAImage * ppImage );
    IDASoundPtr GetSound ( );
    void PutSound (
        struct IDASound * ppSound );
    IDAStaticsPtr GetPixelLibrary ( );
    IDAStaticsPtr GetMeterLibrary ( );
    HRESULT AddBehaviorToRun (
        struct IDABehavior * pBehavior );
    HRESULT Start ( );
    IDAImagePtr GetInputImage ( );
    VARIANT_BOOL GetOpaqueForHitDetect ( );
    void PutOpaqueForHitDetect (
        VARIANT_BOOL b );
    DA_TIMER_SOURCE GetTimerSource ( );
    void PutTimerSource (
        DA_TIMER_SOURCE ts );
    HRESULT RegisterErrorHandler (
        _bstr_t scriptlet );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UpdateInterval (
        double * pVal ) = 0;
    virtual HRESULT __stdcall put_UpdateInterval (
        double pVal ) = 0;
    virtual HRESULT __stdcall get_View (
        struct IDAView * * ppView ) = 0;
    virtual HRESULT __stdcall put_View (
        struct IDAView * ppView ) = 0;
    virtual HRESULT __stdcall get_Image (
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall put_Image (
        struct IDAImage * ppImage ) = 0;
    virtual HRESULT __stdcall get_BackgroundImage (
        struct IDAImage * * ppImage ) = 0;
    virtual HRESULT __stdcall put_BackgroundImage (
        struct IDAImage * ppImage ) = 0;
    virtual HRESULT __stdcall get_Sound (
        struct IDASound * * ppSound ) = 0;
    virtual HRESULT __stdcall put_Sound (
        struct IDASound * ppSound ) = 0;
    virtual HRESULT __stdcall get_PixelLibrary (
        struct IDAStatics * * ppStatics ) = 0;
    virtual HRESULT __stdcall get_MeterLibrary (
        struct IDAStatics * * ppStatics ) = 0;
    virtual HRESULT __stdcall raw_AddBehaviorToRun (
        struct IDABehavior * pBehavior ) = 0;
    virtual HRESULT __stdcall raw_Start ( ) = 0;
    virtual HRESULT __stdcall get_InputImage (
        struct IDAImage * * pVal ) = 0;
    virtual HRESULT __stdcall get_OpaqueForHitDetect (
        VARIANT_BOOL * b ) = 0;
    virtual HRESULT __stdcall put_OpaqueForHitDetect (
        VARIANT_BOOL b ) = 0;
    virtual HRESULT __stdcall get_TimerSource (
        DA_TIMER_SOURCE * ts ) = 0;
    virtual HRESULT __stdcall put_TimerSource (
        DA_TIMER_SOURCE ts ) = 0;
    virtual HRESULT __stdcall raw_RegisterErrorHandler (
        BSTR scriptlet ) = 0;
};

struct __declspec(uuid("ba8b033e-1e91-11d1-8809-00c04fc29d46"))
IDAViewerControlWindowed : IDAViewerControl
{};

struct __declspec(uuid("f3e1b522-d8a6-11d1-9be5-00c04fc2f51d"))
IDA2ViewerControl : IDAViewerControl
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetPreference (
        _bstr_t pref,
        const _variant_t & val );
    _variant_t GetPreference (
        _bstr_t pref );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetPreference (
        BSTR pref,
        VARIANT val ) = 0;
    virtual HRESULT __stdcall raw_GetPreference (
        BSTR pref,
        VARIANT * pVal ) = 0;
};

struct __declspec(uuid("a3034056-ec1c-11d1-9be8-00c04fc2f51d"))
IDA2ViewerControlWindowed : IDAViewerControlWindowed
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetPreference (
        _bstr_t pref,
        const _variant_t & val );
    _variant_t GetPreference (
        _bstr_t pref );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_SetPreference (
        BSTR pref,
        VARIANT val ) = 0;
    virtual HRESULT __stdcall raw_GetPreference (
        BSTR pref,
        VARIANT * pVal ) = 0;
};

struct __declspec(uuid("09509866-79aa-11d2-8bf5-00c04fc2f51d"))
IDA3ViewerControl : IDA2ViewerControl
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Stop ( );
    HRESULT Pause ( );
    HRESULT Resume ( );
    HRESULT Tick ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Stop ( ) = 0;
    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Resume ( ) = 0;
    virtual HRESULT __stdcall raw_Tick ( ) = 0;
};

struct __declspec(uuid("09509867-79aa-11d2-8bf5-00c04fc2f51d"))
IDA3ViewerControlWindowed : IDA2ViewerControlWindowed
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Stop ( );
    HRESULT Pause ( );
    HRESULT Resume ( );
    HRESULT Tick ( );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Stop ( ) = 0;
    virtual HRESULT __stdcall raw_Pause ( ) = 0;
    virtual HRESULT __stdcall raw_Resume ( ) = 0;
    virtual HRESULT __stdcall raw_Tick ( ) = 0;
};

struct __declspec(uuid("3584f274-61ea-11d2-8bd9-00c04fc2f51d"))
_IDAViewerControlEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Start ( );
    HRESULT MouseUp (
        long button,
        long KeyFlags,
        long X,
        long Y );
    HRESULT MouseDown (
        long button,
        long KeyFlags,
        long X,
        long Y );
    HRESULT MouseMove (
        long button,
        long KeyFlags,
        long X,
        long Y );
    HRESULT Click ( );
    HRESULT KeyPress (
        long KeyAscii );
    HRESULT KeyUp (
        long KeyCode,
        long KeyData );
    HRESULT KeyDown (
        long KeyCode,
        long KeyData );
    HRESULT Error (
        long HResult,
        _bstr_t ErrorString );
    HRESULT Stop ( );
    HRESULT Pause ( );
    HRESULT Resume ( );
};

struct __declspec(uuid("b6ffc24c-7e13-11d0-9b47-00c04fc2f51d"))
DAViewerControl;
    // [ default ] interface IDA3ViewerControl
    // [ default, source ] dispinterface _IDAViewerControlEvents

struct __declspec(uuid("69ad90ef-1c20-11d1-8801-00c04fc29d46"))
DAViewerControlWindowed;
    // [ default ] interface IDA3ViewerControlWindowed
    // [ default, source ] dispinterface _IDAViewerControlEvents

struct __declspec(uuid("c46c1bc1-3c52-11d0-9200-848c1d000000"))
DABoolean;
    // [ default ] interface IDABoolean

struct __declspec(uuid("c46c1be2-3c52-11d0-9200-848c1d000000"))
DACamera;
    // [ default ] interface IDACamera

struct __declspec(uuid("c46c1bc6-3c52-11d0-9200-848c1d000000"))
DAColor;
    // [ default ] interface IDA2Color

struct __declspec(uuid("c46c1be0-3c52-11d0-9200-848c1d000000"))
DAGeometry;
    // [ default ] interface IDA3Geometry

struct __declspec(uuid("c46c1bd4-3c52-11d0-9200-848c1d000000"))
DAImage;
    // [ default ] interface IDA3Image

struct __declspec(uuid("c46c1bd2-3c52-11d0-9200-848c1d000000"))
DAMatte;
    // [ default ] interface IDAMatte

struct __declspec(uuid("c46c1be6-3c52-11d0-9200-848c1d000000"))
DAMicrophone;
    // [ default ] interface IDAMicrophone

struct __declspec(uuid("c46c1bd6-3c52-11d0-9200-848c1d000000"))
DAMontage;
    // [ default ] interface IDAMontage

struct __declspec(uuid("9cde7341-3c20-11d0-a330-00aa00b92c03"))
DANumber;
    // [ default ] interface IDANumber

struct __declspec(uuid("c46c1bd0-3c52-11d0-9200-848c1d000000"))
DAPath2;
    // [ default ] interface IDAPath2

struct __declspec(uuid("c46c1bc8-3c52-11d0-9200-848c1d000000"))
DAPoint2;
    // [ default ] interface IDAPoint2

struct __declspec(uuid("c46c1bd8-3c52-11d0-9200-848c1d000000"))
DAPoint3;
    // [ default ] interface IDAPoint3

struct __declspec(uuid("c46c1be4-3c52-11d0-9200-848c1d000000"))
DASound;
    // [ default ] interface IDASound

struct __declspec(uuid("c46c1bc4-3c52-11d0-9200-848c1d000000"))
DAString;
    // [ default ] interface IDAString

struct __declspec(uuid("c46c1bcc-3c52-11d0-9200-848c1d000000"))
DATransform2;
    // [ default ] interface IDATransform2

struct __declspec(uuid("c46c1bdc-3c52-11d0-9200-848c1d000000"))
DATransform3;
    // [ default ] interface IDATransform3

struct __declspec(uuid("c46c1bca-3c52-11d0-9200-848c1d000000"))
DAVector2;
    // [ default ] interface IDAVector2

struct __declspec(uuid("c46c1bda-3c52-11d0-9200-848c1d000000"))
DAVector3;
    // [ default ] interface IDAVector3

struct __declspec(uuid("25b0f91c-d23d-11d0-9b85-00c04fc2f51d"))
DAFontStyle;
    // [ default ] interface IDA2FontStyle

struct __declspec(uuid("c46c1bf2-3c52-11d0-9200-848c1d000000"))
DALineStyle;
    // [ default ] interface IDA2LineStyle

struct __declspec(uuid("c46c1bec-3c52-11d0-9200-848c1d000000"))
DAEndStyle;
    // [ default ] interface IDAEndStyle

struct __declspec(uuid("c46c1bee-3c52-11d0-9200-848c1d000000"))
DAJoinStyle;
    // [ default ] interface IDAJoinStyle

struct __declspec(uuid("c46c1bf0-3c52-11d0-9200-848c1d000000"))
DADashStyle;
    // [ default ] interface IDADashStyle

struct __declspec(uuid("c46c1bce-3c52-11d0-9200-848c1d000000"))
DABbox2;
    // [ default ] interface IDABbox2

struct __declspec(uuid("c46c1bde-3c52-11d0-9200-848c1d000000"))
DABbox3;
    // [ default ] interface IDABbox3

struct __declspec(uuid("c46c1bf4-3c52-11d0-9200-848c1d000000"))
DAPair;
    // [ default ] interface IDAPair

struct __declspec(uuid("50b4791f-4731-11d0-8912-00c04fc2a0ca"))
DAEvent;
    // [ default ] interface IDA2Event

struct __declspec(uuid("d17506c3-6b26-11d0-8914-00c04fc2a0ca"))
DAArray;
    // [ default ] interface IDA3Array

struct __declspec(uuid("5dfb2651-9668-11d0-b17b-00c04fc2a0ca"))
DATuple;
    // [ default ] interface IDATuple

struct __declspec(uuid("af868304-ab0b-11d0-876a-00c04fc29d46"))
DAUserData;
    // [ default ] interface IDAUserData

struct __declspec(uuid("bcbb1f75-e384-11d0-9b99-00c04fc2f51d"))
DAImportationResult;
    // [ default ] interface IDAImportationResult

struct __declspec(uuid("bcbb1f74-e384-11d0-9b99-00c04fc2f51d"))
DAPickableResult;
    // [ default ] interface IDAPickableResult

//
// Function implementation mapping
//

#pragma start_map_region("danim.tli")
__declspec(implementation_key(1)) HRESULT IDAViewSite::SetStatusText ( _bstr_t StatusText );
__declspec(implementation_key(2)) double IDAView::GetSimulationTime ( );
__declspec(implementation_key(3)) VARIANT_BOOL IDAView::Tick ( double simTime );
__declspec(implementation_key(4)) HRESULT IDAView::Render ( );
__declspec(implementation_key(5)) long IDAView::AddBvrToRun ( struct IDABehavior * bvr );
__declspec(implementation_key(6)) HRESULT IDAView::RemoveRunningBvr ( long id );
__declspec(implementation_key(7)) HRESULT IDAView::StartModel ( struct IDAImage * pImage, struct IDASound * pSound, double startTime );
__declspec(implementation_key(8)) HRESULT IDAView::StopModel ( );
__declspec(implementation_key(9)) long IDAView::GetWindow ( );
__declspec(implementation_key(10)) void IDAView::PutWindow ( long hwnd );
__declspec(implementation_key(11)) IUnknownPtr IDAView::GetIDirectDrawSurface ( );
__declspec(implementation_key(12)) void IDAView::PutIDirectDrawSurface ( IUnknown * ddsurf );
__declspec(implementation_key(13)) wireHDC IDAView::GetDC ( );
__declspec(implementation_key(14)) void IDAView::PutDC ( wireHDC DC );
__declspec(implementation_key(15)) VARIANT_BOOL IDAView::GetCompositeDirectlyToTarget ( );
__declspec(implementation_key(16)) void IDAView::PutCompositeDirectlyToTarget ( VARIANT_BOOL composeToTarget );
__declspec(implementation_key(17)) HRESULT IDAView::SetViewport ( long xPos, long yPos, long w, long h );
__declspec(implementation_key(18)) HRESULT IDAView::SetClipRect ( long xPos, long yPos, long w, long h );
__declspec(implementation_key(19)) HRESULT IDAView::RePaint ( long xPos, long yPos, long w, long h );
__declspec(implementation_key(20)) HRESULT IDAView::PaletteChanged ( VARIANT_BOOL bNew );
__declspec(implementation_key(21)) IDAViewSitePtr IDAView::GetSite ( );
__declspec(implementation_key(22)) void IDAView::PutSite ( struct IDAViewSite * pViewSite );
__declspec(implementation_key(23)) void IDAView::PutClientSite ( struct IOleClientSite * pClientSite );
__declspec(implementation_key(24)) IOleClientSitePtr IDAView::GetClientSite ( );
__declspec(implementation_key(25)) HRESULT IDAView::OnMouseMove ( double when, long xPos, long yPos, unsigned char modifiers );
__declspec(implementation_key(26)) HRESULT IDAView::OnMouseButton ( double when, long xPos, long yPos, unsigned char button, VARIANT_BOOL bPressed, unsigned char modifiers );
__declspec(implementation_key(27)) HRESULT IDAView::OnKey ( double when, long key, VARIANT_BOOL bPressed, unsigned char modifiers );
__declspec(implementation_key(28)) HRESULT IDAView::OnFocus ( VARIANT_BOOL bHasFocus );
__declspec(implementation_key(29)) IDAPreferencesPtr IDAView::GetPreferences ( );
__declspec(implementation_key(30)) unsigned long IDAView::QueryHitPoint ( unsigned long dwAspect, struct tagRECT * prcBounds, struct tagPOINT ptLoc, long lCloseHint );
__declspec(implementation_key(31)) _bstr_t IDABehavior::GetClassName ( );
__declspec(implementation_key(32)) HRESULT IDABehavior::Init ( struct IDABehavior * toBvr );
__declspec(implementation_key(33)) IDABehaviorPtr IDABehavior::Importance ( double relativeImportance );
__declspec(implementation_key(34)) IDABehaviorPtr IDABehavior::RunOnce ( );
__declspec(implementation_key(35)) IDABehaviorPtr IDABehavior::SubstituteTime ( struct IDANumber * xform );
__declspec(implementation_key(36)) HRESULT IDABehavior::SwitchTo ( struct IDABehavior * SwitchTo );
__declspec(implementation_key(37)) HRESULT IDABehavior::SwitchToNumber ( double numToSwitchTo );
__declspec(implementation_key(38)) HRESULT IDABehavior::SwitchToString ( _bstr_t strToSwitchTo );
__declspec(implementation_key(39)) IDABehaviorPtr IDABehavior::Hook ( struct IDABvrHook * notifier );
__declspec(implementation_key(40)) IDABehaviorPtr IDABehavior::Duration ( double Duration );
__declspec(implementation_key(41)) IDABehaviorPtr IDABehavior::DurationAnim ( struct IDANumber * Duration );
__declspec(implementation_key(42)) IDABehaviorPtr IDABehavior::Repeat ( long count );
__declspec(implementation_key(43)) IDABehaviorPtr IDABehavior::RepeatForever ( );
__declspec(implementation_key(44)) VARIANT_BOOL IDABehavior::IsReady ( VARIANT_BOOL bBlock );
__declspec(implementation_key(45)) double IDANumber::Extract ( );
__declspec(implementation_key(46)) IDANumberPtr IDANumber::AnimateProperty ( _bstr_t propertyPath_0, _bstr_t scriptingLanguage_1, VARIANT_BOOL invokeAsMethod_2, double minUpdateInterval_3 );
__declspec(implementation_key(47)) IDAStringPtr IDANumber::ToStringAnim ( struct IDANumber * precision_0 );
__declspec(implementation_key(48)) IDAStringPtr IDANumber::ToString ( double precision_0 );
__declspec(implementation_key(49)) _bstr_t IDAString::Extract ( );
__declspec(implementation_key(50)) IDAStringPtr IDAString::AnimateProperty ( _bstr_t propertyPath_0, _bstr_t scriptingLanguage_1, VARIANT_BOOL invokeAsMethod_2, double minUpdateInterval_3 );
__declspec(implementation_key(51)) IDABehaviorPtr IDABvrHook::Notify ( long id, VARIANT_BOOL startingPerformance, double startTime, double gTime, double lTime, struct IDABehavior * sampleVal, struct IDABehavior * curRunningBvr );
__declspec(implementation_key(52)) IDAPickableResultPtr IDAImage::Pickable ( );
__declspec(implementation_key(53)) IDAPickableResultPtr IDAImage::PickableOccluded ( );
__declspec(implementation_key(54)) IDAImagePtr IDAImage::ApplyBitmapEffect ( IUnknown * effectToApply_0, struct IDAEvent * firesWhenChanged_1 );
__declspec(implementation_key(55)) IDABbox2Ptr IDAImage::GetBoundingBox ( );
__declspec(implementation_key(56)) IDAImagePtr IDAImage::Crop ( struct IDAPoint2 * min_0, struct IDAPoint2 * max_1 );
__declspec(implementation_key(57)) IDAImagePtr IDAImage::Transform ( struct IDATransform2 * xf_0 );
__declspec(implementation_key(58)) IDAImagePtr IDAImage::OpacityAnim ( struct IDANumber * opacity_0 );
__declspec(implementation_key(59)) IDAImagePtr IDAImage::Opacity ( double opacity_0 );
__declspec(implementation_key(60)) IDAImagePtr IDAImage::Undetectable ( );
__declspec(implementation_key(61)) IDAImagePtr IDAImage::Tile ( );
__declspec(implementation_key(62)) IDAImagePtr IDAImage::Clip ( struct IDAMatte * m_0 );
__declspec(implementation_key(63)) IDAImagePtr IDAImage::MapToUnitSquare ( );
__declspec(implementation_key(64)) IDAImagePtr IDAImage::ClipPolygonImageEx ( long points_0size, struct IDAPoint2 * * points_0 );
__declspec(implementation_key(65)) IDAImagePtr IDAImage::ClipPolygonImage ( const _variant_t & points_0 );
__declspec(implementation_key(66)) IDAImagePtr IDAPickableResult::GetImage ( );
__declspec(implementation_key(67)) IDAGeometryPtr IDAPickableResult::GetGeometry ( );
__declspec(implementation_key(68)) IDAEventPtr IDAPickableResult::GetPickEvent ( );
__declspec(implementation_key(69)) IDASoundPtr IDAGeometry::RenderSound ( struct IDAMicrophone * mic_0 );
__declspec(implementation_key(70)) IDAPickableResultPtr IDAGeometry::Pickable ( );
__declspec(implementation_key(71)) IDAPickableResultPtr IDAGeometry::PickableOccluded ( );
__declspec(implementation_key(72)) IDAGeometryPtr IDAGeometry::Undetectable ( );
__declspec(implementation_key(73)) IDAGeometryPtr IDAGeometry::EmissiveColor ( struct IDAColor * col_0 );
__declspec(implementation_key(74)) IDAGeometryPtr IDAGeometry::DiffuseColor ( struct IDAColor * col_0 );
__declspec(implementation_key(75)) IDAGeometryPtr IDAGeometry::SpecularColor ( struct IDAColor * col_0 );
__declspec(implementation_key(76)) IDAGeometryPtr IDAGeometry::SpecularExponent ( double power_0 );
__declspec(implementation_key(77)) IDAGeometryPtr IDAGeometry::SpecularExponentAnim ( struct IDANumber * power_0 );
__declspec(implementation_key(78)) IDAGeometryPtr IDAGeometry::Texture ( struct IDAImage * texture_0 );
__declspec(implementation_key(79)) IDAGeometryPtr IDAGeometry::Opacity ( double level_0 );
__declspec(implementation_key(80)) IDAGeometryPtr IDAGeometry::OpacityAnim ( struct IDANumber * level_0 );
__declspec(implementation_key(81)) IDAGeometryPtr IDAGeometry::Transform ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(82)) IDABbox3Ptr IDAGeometry::GetBoundingBox ( );
__declspec(implementation_key(83)) IDAImagePtr IDAGeometry::Render ( struct IDACamera * cam_0 );
__declspec(implementation_key(84)) IDAGeometryPtr IDAGeometry::LightColor ( struct IDAColor * color_0 );
__declspec(implementation_key(85)) IDAGeometryPtr IDAGeometry::LightAttenuationAnim ( struct IDANumber * constant_0, struct IDANumber * linear_1, struct IDANumber * quadratic_2 );
__declspec(implementation_key(86)) IDAGeometryPtr IDAGeometry::LightAttenuation ( double constant_0, double linear_1, double quadratic_2 );
__declspec(implementation_key(87)) IDAMicrophonePtr IDAMicrophone::Transform ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(88)) IDATransform3Ptr IDATransform3::Inverse ( );
__declspec(implementation_key(89)) IDABooleanPtr IDATransform3::GetIsSingular ( );
__declspec(implementation_key(90)) IDATransform2Ptr IDATransform3::ParallelTransform2 ( );
__declspec(implementation_key(91)) VARIANT_BOOL IDABoolean::Extract ( );
__declspec(implementation_key(92)) IDATransform2Ptr IDATransform2::Inverse ( );
__declspec(implementation_key(93)) IDABooleanPtr IDATransform2::GetIsSingular ( );
__declspec(implementation_key(94)) IDASoundPtr IDASound::PhaseAnim ( struct IDANumber * phaseAmt_0 );
__declspec(implementation_key(95)) IDASoundPtr IDASound::Phase ( double phaseAmt_0 );
__declspec(implementation_key(96)) IDASoundPtr IDASound::RateAnim ( struct IDANumber * pitchShift_0 );
__declspec(implementation_key(97)) IDASoundPtr IDASound::Rate ( double pitchShift_0 );
__declspec(implementation_key(98)) IDASoundPtr IDASound::PanAnim ( struct IDANumber * panAmt_0 );
__declspec(implementation_key(99)) IDASoundPtr IDASound::Pan ( double panAmt_0 );
__declspec(implementation_key(100)) IDASoundPtr IDASound::GainAnim ( struct IDANumber * gainAmt_0 );
__declspec(implementation_key(101)) IDASoundPtr IDASound::Gain ( double gainAmt_0 );
__declspec(implementation_key(102)) IDASoundPtr IDASound::Loop ( );
__declspec(implementation_key(103)) IDANumberPtr IDAColor::GetRed ( );
__declspec(implementation_key(104)) IDANumberPtr IDAColor::GetGreen ( );
__declspec(implementation_key(105)) IDANumberPtr IDAColor::GetBlue ( );
__declspec(implementation_key(106)) IDANumberPtr IDAColor::GetHue ( );
__declspec(implementation_key(107)) IDANumberPtr IDAColor::GetSaturation ( );
__declspec(implementation_key(108)) IDANumberPtr IDAColor::GetLightness ( );
__declspec(implementation_key(109)) IDAPoint3Ptr IDABbox3::GetMin ( );
__declspec(implementation_key(110)) IDAPoint3Ptr IDABbox3::GetMax ( );
__declspec(implementation_key(111)) IDAPoint2Ptr IDAPoint3::Project ( struct IDACamera * cam_0 );
__declspec(implementation_key(112)) IDANumberPtr IDAPoint3::GetX ( );
__declspec(implementation_key(113)) IDANumberPtr IDAPoint3::GetY ( );
__declspec(implementation_key(114)) IDANumberPtr IDAPoint3::GetZ ( );
__declspec(implementation_key(115)) IDANumberPtr IDAPoint3::GetSphericalCoordXYAngle ( );
__declspec(implementation_key(116)) IDANumberPtr IDAPoint3::GetSphericalCoordYZAngle ( );
__declspec(implementation_key(117)) IDANumberPtr IDAPoint3::GetSphericalCoordLength ( );
__declspec(implementation_key(118)) IDAPoint3Ptr IDAPoint3::Transform ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(119)) IDACameraPtr IDACamera::Transform ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(120)) IDACameraPtr IDACamera::Depth ( double depth_0 );
__declspec(implementation_key(121)) IDACameraPtr IDACamera::DepthAnim ( struct IDANumber * depth_0 );
__declspec(implementation_key(122)) IDACameraPtr IDACamera::DepthResolution ( double resolution_0 );
__declspec(implementation_key(123)) IDACameraPtr IDACamera::DepthResolutionAnim ( struct IDANumber * resolution_0 );
__declspec(implementation_key(124)) IDAPoint2Ptr IDAPoint2::AnimateControlPosition ( _bstr_t propertyPath_0, _bstr_t scriptingLanguage_1, VARIANT_BOOL invokeAsMethod_2, double minUpdateInterval_3 );
__declspec(implementation_key(125)) IDAPoint2Ptr IDAPoint2::AnimateControlPositionPixel ( _bstr_t propertyPath_0, _bstr_t scriptingLanguage_1, VARIANT_BOOL invokeAsMethod_2, double minUpdateInterval_3 );
__declspec(implementation_key(126)) IDANumberPtr IDAPoint2::GetX ( );
__declspec(implementation_key(127)) IDANumberPtr IDAPoint2::GetY ( );
__declspec(implementation_key(128)) IDANumberPtr IDAPoint2::GetPolarCoordAngle ( );
__declspec(implementation_key(129)) IDANumberPtr IDAPoint2::GetPolarCoordLength ( );
__declspec(implementation_key(130)) IDAPoint2Ptr IDAPoint2::Transform ( struct IDATransform2 * xf_0 );
__declspec(implementation_key(131)) IDAEventPtr IDAEvent::Notify ( struct IDAUntilNotifier * notifier_0 );
__declspec(implementation_key(132)) IDAEventPtr IDAEvent::Snapshot ( struct IDABehavior * b_0 );
__declspec(implementation_key(133)) IDAEventPtr IDAEvent::AttachData ( struct IDABehavior * data_0 );
__declspec(implementation_key(134)) IDAEventPtr IDAEvent::ScriptCallback ( _bstr_t scriptlet_0, _bstr_t language_1 );
__declspec(implementation_key(135)) IDABehaviorPtr IDAUntilNotifier::Notify ( struct IDABehavior * eventData, struct IDABehavior * curRunningBvr, struct IDAView * curView );
__declspec(implementation_key(136)) IDAPoint2Ptr IDABbox2::GetMin ( );
__declspec(implementation_key(137)) IDAPoint2Ptr IDABbox2::GetMax ( );
__declspec(implementation_key(138)) IDAMattePtr IDAMatte::Transform ( struct IDATransform2 * xf_0 );
__declspec(implementation_key(139)) HRESULT IDAPreferences::PutPreference ( _bstr_t preferenceName, const _variant_t & value );
__declspec(implementation_key(140)) _variant_t IDAPreferences::GetPreference ( _bstr_t preferenceName );
__declspec(implementation_key(141)) HRESULT IDAPreferences::Propagate ( );
__declspec(implementation_key(142)) IDAImagePtr IDADrawingSurface::GetImage ( );
__declspec(implementation_key(143)) void IDADrawingSurface::PutLineStyle ( struct IDALineStyle * _arg1 );
__declspec(implementation_key(144)) void IDADrawingSurface::PutBorderStyle ( struct IDALineStyle * _arg1 );
__declspec(implementation_key(145)) void IDADrawingSurface::PutFontStyle ( struct IDAFontStyle * _arg1 );
__declspec(implementation_key(146)) void IDADrawingSurface::PutClipMatte ( struct IDAMatte * _arg1 );
__declspec(implementation_key(147)) void IDADrawingSurface::PutMouseEventsEnabled ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(148)) void IDADrawingSurface::PutHatchFillTransparent ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(149)) IDAImagePtr IDADrawingSurface::GetLocalContextImage ( );
__declspec(implementation_key(150)) HRESULT IDADrawingSurface::Reset ( );
__declspec(implementation_key(151)) HRESULT IDADrawingSurface::Clear ( );
__declspec(implementation_key(152)) HRESULT IDADrawingSurface::SaveGraphicsState ( );
__declspec(implementation_key(153)) HRESULT IDADrawingSurface::RestoreGraphicsState ( );
__declspec(implementation_key(154)) HRESULT IDADrawingSurface::Opacity ( double opac );
__declspec(implementation_key(155)) HRESULT IDADrawingSurface::OpacityAnim ( struct IDANumber * opac );
__declspec(implementation_key(156)) HRESULT IDADrawingSurface::Crop ( double lowerLeftX, double lowerLeftY, double upperRightX, double upperRightY );
__declspec(implementation_key(157)) HRESULT IDADrawingSurface::CropPoints ( struct IDAPoint2 * Min, struct IDAPoint2 * Max );
__declspec(implementation_key(158)) HRESULT IDADrawingSurface::Transform ( struct IDATransform2 * xform );
__declspec(implementation_key(159)) HRESULT IDADrawingSurface::LineColor ( struct IDAColor * clr );
__declspec(implementation_key(160)) HRESULT IDADrawingSurface::LineWidth ( double w );
__declspec(implementation_key(161)) HRESULT IDADrawingSurface::LineDashStyle ( DA_DASH_STYLE id );
__declspec(implementation_key(162)) HRESULT IDADrawingSurface::LineEndStyle ( DA_END_STYLE id );
__declspec(implementation_key(163)) HRESULT IDADrawingSurface::LineJoinStyle ( DA_JOIN_STYLE id );
__declspec(implementation_key(164)) HRESULT IDADrawingSurface::BorderColor ( struct IDAColor * clr );
__declspec(implementation_key(165)) HRESULT IDADrawingSurface::BorderWidth ( double w );
__declspec(implementation_key(166)) HRESULT IDADrawingSurface::BorderDashStyle ( DA_DASH_STYLE id );
__declspec(implementation_key(167)) HRESULT IDADrawingSurface::BorderEndStyle ( DA_END_STYLE obsolete );
__declspec(implementation_key(168)) HRESULT IDADrawingSurface::BorderJoinStyle ( DA_JOIN_STYLE id );
__declspec(implementation_key(169)) HRESULT IDADrawingSurface::Font ( _bstr_t FontFace, long sizeInPoints, VARIANT_BOOL Bold, VARIANT_BOOL Italic, VARIANT_BOOL Underline, VARIANT_BOOL Strikethrough );
__declspec(implementation_key(170)) HRESULT IDADrawingSurface::TextureFill ( struct IDAImage * obsolete1, double obsolete2, double obsolete3 );
__declspec(implementation_key(171)) HRESULT IDADrawingSurface::ImageFill ( struct IDAImage * obsolete1, double obsolete2, double obsolete3 );
__declspec(implementation_key(172)) HRESULT IDADrawingSurface::FillTexture ( struct IDAImage * img );
__declspec(implementation_key(173)) HRESULT IDADrawingSurface::FillImage ( struct IDAImage * img );
__declspec(implementation_key(174)) HRESULT IDADrawingSurface::FillStyle ( int id );
__declspec(implementation_key(175)) HRESULT IDADrawingSurface::FillColor ( struct IDAColor * foreground );
__declspec(implementation_key(176)) HRESULT IDADrawingSurface::SecondaryFillColor ( struct IDAColor * val );
__declspec(implementation_key(177)) HRESULT IDADrawingSurface::GradientShape ( const _variant_t & pts );
__declspec(implementation_key(178)) HRESULT IDADrawingSurface::GradientExtent ( double startx, double starty, double finishx, double finishy );
__declspec(implementation_key(179)) HRESULT IDADrawingSurface::GradientExtentPoints ( struct IDAPoint2 * startColor, struct IDAPoint2 * stopColor );
__declspec(implementation_key(180)) HRESULT IDADrawingSurface::GradientRolloffPower ( double power );
__declspec(implementation_key(181)) HRESULT IDADrawingSurface::GradientRolloffPowerAnim ( struct IDANumber * power );
__declspec(implementation_key(182)) HRESULT IDADrawingSurface::FixedFillScale ( );
__declspec(implementation_key(183)) HRESULT IDADrawingSurface::HorizontalFillScale ( );
__declspec(implementation_key(184)) HRESULT IDADrawingSurface::VerticalFillScale ( );
__declspec(implementation_key(185)) HRESULT IDADrawingSurface::AutoSizeFillScale ( );
__declspec(implementation_key(186)) HRESULT IDADrawingSurface::PolylineEx ( long numPts, struct IDAPoint2 * * pts );
__declspec(implementation_key(187)) HRESULT IDADrawingSurface::Polyline ( const _variant_t & v );
__declspec(implementation_key(188)) HRESULT IDADrawingSurface::PolygonEx ( long numPts, struct IDAPoint2 * * pts );
__declspec(implementation_key(189)) HRESULT IDADrawingSurface::Polygon ( const _variant_t & v );
__declspec(implementation_key(190)) HRESULT IDADrawingSurface::LinePoints ( struct IDAPoint2 * p1, struct IDAPoint2 * p2 );
__declspec(implementation_key(191)) HRESULT IDADrawingSurface::Line ( double startx, double starty, double endX, double endY );
__declspec(implementation_key(192)) HRESULT IDADrawingSurface::ArcRadians ( double xPos, double yPos, double startAngle, double endAngle, double arcWidth, double arcHeight );
__declspec(implementation_key(193)) HRESULT IDADrawingSurface::ArcDegrees ( double xPos, double yPos, double startAngle, double endAngle, double arcWidth, double arcHeight );
__declspec(implementation_key(194)) HRESULT IDADrawingSurface::Oval ( double xPos, double yPos, double w, double h );
__declspec(implementation_key(195)) HRESULT IDADrawingSurface::Rect ( double xPos, double yPos, double w, double h );
__declspec(implementation_key(196)) HRESULT IDADrawingSurface::RoundRect ( double xPos, double yPos, double w, double h, double arcWidth, double arcHeight );
__declspec(implementation_key(197)) HRESULT IDADrawingSurface::PieRadians ( double xPos, double yPos, double startAngle, double endAngle, double arcWidth, double arcHeight );
__declspec(implementation_key(198)) HRESULT IDADrawingSurface::PieDegrees ( double xPos, double yPos, double startAngle, double endAngle, double arcWidth, double arcHeight );
__declspec(implementation_key(199)) HRESULT IDADrawingSurface::Text ( _bstr_t str, double xPos, double yPos );
__declspec(implementation_key(200)) HRESULT IDADrawingSurface::TextPoint ( _bstr_t str, struct IDAPoint2 * point );
__declspec(implementation_key(201)) HRESULT IDADrawingSurface::FillPath ( struct IDAPath2 * path );
__declspec(implementation_key(202)) HRESULT IDADrawingSurface::DrawPath ( struct IDAPath2 * path );
__declspec(implementation_key(203)) HRESULT IDADrawingSurface::OverlayImage ( struct IDAImage * img );
__declspec(implementation_key(204)) IDALineStylePtr IDALineStyle::End ( struct IDAEndStyle * obsolete_0 );
__declspec(implementation_key(205)) IDALineStylePtr IDALineStyle::Join ( struct IDAJoinStyle * obsolete_0 );
__declspec(implementation_key(206)) IDALineStylePtr IDALineStyle::Dash ( struct IDADashStyle * obsolete_0 );
__declspec(implementation_key(207)) IDALineStylePtr IDALineStyle::WidthAnim ( struct IDANumber * sty_0 );
__declspec(implementation_key(208)) IDALineStylePtr IDALineStyle::width ( double sty_0 );
__declspec(implementation_key(209)) IDALineStylePtr IDALineStyle::AntiAliasing ( double aaStyle_0 );
__declspec(implementation_key(210)) IDALineStylePtr IDALineStyle::Detail ( );
__declspec(implementation_key(211)) IDALineStylePtr IDALineStyle::Color ( struct IDAColor * clr_0 );
__declspec(implementation_key(212)) IDAFontStylePtr IDAFontStyle::Bold ( );
__declspec(implementation_key(213)) IDAFontStylePtr IDAFontStyle::Italic ( );
__declspec(implementation_key(214)) IDAFontStylePtr IDAFontStyle::Underline ( );
__declspec(implementation_key(215)) IDAFontStylePtr IDAFontStyle::Strikethrough ( );
__declspec(implementation_key(216)) IDAFontStylePtr IDAFontStyle::AntiAliasing ( double aaStyle_0 );
__declspec(implementation_key(217)) IDAFontStylePtr IDAFontStyle::Color ( struct IDAColor * col_0 );
__declspec(implementation_key(218)) IDAFontStylePtr IDAFontStyle::FamilyAnim ( struct IDAString * face_0 );
__declspec(implementation_key(219)) IDAFontStylePtr IDAFontStyle::Family ( _bstr_t face_0 );
__declspec(implementation_key(220)) IDAFontStylePtr IDAFontStyle::SizeAnim ( struct IDANumber * size_0 );
__declspec(implementation_key(221)) IDAFontStylePtr IDAFontStyle::Size ( double size_0 );
__declspec(implementation_key(222)) IDAFontStylePtr IDAFontStyle::Weight ( double weight_0 );
__declspec(implementation_key(223)) IDAFontStylePtr IDAFontStyle::WeightAnim ( struct IDANumber * weight_0 );
__declspec(implementation_key(224)) IDAPath2Ptr IDAPath2::Transform ( struct IDATransform2 * xf_0 );
__declspec(implementation_key(225)) IDABbox2Ptr IDAPath2::BoundingBox ( struct IDALineStyle * style_0 );
__declspec(implementation_key(226)) IDAImagePtr IDAPath2::Fill ( struct IDALineStyle * border_0, struct IDAImage * fill_1 );
__declspec(implementation_key(227)) IDAImagePtr IDAPath2::Draw ( struct IDALineStyle * border_0 );
__declspec(implementation_key(228)) IDAPath2Ptr IDAPath2::Close ( );
__declspec(implementation_key(229)) HRESULT IDA2Behavior::SwitchToEx ( struct IDABehavior * newBvr, unsigned long dwFlags );
__declspec(implementation_key(230)) IDABehaviorPtr IDA2Behavior::ApplyPreference ( _bstr_t pref, const _variant_t & val );
__declspec(implementation_key(231)) IDABehaviorPtr IDA2Behavior::ExtendedAttrib ( _bstr_t arg1, const _variant_t & arg2 );
__declspec(implementation_key(232)) long IDAImport::ImportStatus ( );
__declspec(implementation_key(233)) HRESULT IDAImport::ImportCancel ( );
__declspec(implementation_key(234)) float IDAImport::GetImportPriority ( );
__declspec(implementation_key(235)) void IDAImport::PutImportPriority ( float prio );
__declspec(implementation_key(236)) IDABehaviorPtr IDAModifiableBehavior::GetCurrentBehavior ( );
__declspec(implementation_key(237)) void IDAModifiableBehavior::PutCurrentBehavior ( const _variant_t & bvr );
__declspec(implementation_key(238)) HRESULT IDAModifiableBehavior::SwitchToEx ( struct IDABehavior * newBvr, unsigned long dwFlags );
__declspec(implementation_key(239)) IDAImagePtr IDAMontage::Render ( );
__declspec(implementation_key(240)) IDANumberPtr IDAVector2::GetLength ( );
__declspec(implementation_key(241)) IDANumberPtr IDAVector2::GetLengthSquared ( );
__declspec(implementation_key(242)) IDAVector2Ptr IDAVector2::Normalize ( );
__declspec(implementation_key(243)) IDAVector2Ptr IDAVector2::MulAnim ( struct IDANumber * scalar_0 );
__declspec(implementation_key(244)) IDAVector2Ptr IDAVector2::Mul ( double scalar_0 );
__declspec(implementation_key(245)) IDAVector2Ptr IDAVector2::DivAnim ( struct IDANumber * scalar_0 );
__declspec(implementation_key(246)) IDAVector2Ptr IDAVector2::Div ( double scalar_0 );
__declspec(implementation_key(247)) IDANumberPtr IDAVector2::GetX ( );
__declspec(implementation_key(248)) IDANumberPtr IDAVector2::GetY ( );
__declspec(implementation_key(249)) IDANumberPtr IDAVector2::GetPolarCoordAngle ( );
__declspec(implementation_key(250)) IDANumberPtr IDAVector2::GetPolarCoordLength ( );
__declspec(implementation_key(251)) IDAVector2Ptr IDAVector2::Transform ( struct IDATransform2 * xf_0 );
__declspec(implementation_key(252)) IDANumberPtr IDAVector3::GetLength ( );
__declspec(implementation_key(253)) IDANumberPtr IDAVector3::GetLengthSquared ( );
__declspec(implementation_key(254)) IDAVector3Ptr IDAVector3::Normalize ( );
__declspec(implementation_key(255)) IDAVector3Ptr IDAVector3::MulAnim ( struct IDANumber * scalar_0 );
__declspec(implementation_key(256)) IDAVector3Ptr IDAVector3::Mul ( double scalar_0 );
__declspec(implementation_key(257)) IDAVector3Ptr IDAVector3::DivAnim ( struct IDANumber * scalar_0 );
__declspec(implementation_key(258)) IDAVector3Ptr IDAVector3::Div ( double scalar_0 );
__declspec(implementation_key(259)) IDANumberPtr IDAVector3::GetX ( );
__declspec(implementation_key(260)) IDANumberPtr IDAVector3::GetY ( );
__declspec(implementation_key(261)) IDANumberPtr IDAVector3::GetZ ( );
__declspec(implementation_key(262)) IDANumberPtr IDAVector3::GetSphericalCoordXYAngle ( );
__declspec(implementation_key(263)) IDANumberPtr IDAVector3::GetSphericalCoordYZAngle ( );
__declspec(implementation_key(264)) IDANumberPtr IDAVector3::GetSphericalCoordLength ( );
__declspec(implementation_key(265)) IDAVector3Ptr IDAVector3::Transform ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(266)) IDABehaviorPtr IDAPair::GetFirst ( );
__declspec(implementation_key(267)) IDABehaviorPtr IDAPair::GetSecond ( );
__declspec(implementation_key(268)) IDABehaviorPtr IDAArray::NthAnim ( struct IDANumber * index_0 );
__declspec(implementation_key(269)) IDANumberPtr IDAArray::Length ( );
__declspec(implementation_key(270)) IDABehaviorPtr IDATuple::Nth ( long index_0 );
__declspec(implementation_key(271)) long IDATuple::GetLength ( );
__declspec(implementation_key(272)) IUnknownPtr IDAUserData::GetData ( );
__declspec(implementation_key(273)) IDAGeometryPtr IDA2Geometry::AddPickData ( IUnknown * id_0, VARIANT_BOOL ignoresOcclusion_1 );
__declspec(implementation_key(274)) IDAGeometryPtr IDA2Geometry::Shadow ( struct IDAGeometry * geoContainingLights_0, struct IDAPoint3 * planePoint_1, struct IDAVector3 * planeNormal_2 );
__declspec(implementation_key(275)) IDAGeometryPtr IDA2Geometry::LightRangeAnim ( struct IDANumber * range_0 );
__declspec(implementation_key(276)) IDAGeometryPtr IDA2Geometry::LightRange ( double range_0 );
__declspec(implementation_key(277)) IDAGeometryPtr IDA2Geometry::BlendTextureDiffuse ( struct IDABoolean * blended_0 );
__declspec(implementation_key(278)) IDAGeometryPtr IDA2Geometry::AmbientColor ( struct IDAColor * color_0 );
__declspec(implementation_key(279)) IDAGeometryPtr IDA2Geometry::D3DRMTexture ( IUnknown * rmTex_0 );
__declspec(implementation_key(280)) IDAGeometryPtr IDA2Geometry::ModelClip ( struct IDAPoint3 * planePt_0, struct IDAVector3 * planeVec_1 );
__declspec(implementation_key(281)) IDAGeometryPtr IDA2Geometry::Lighting ( struct IDABoolean * lighting_0 );
__declspec(implementation_key(282)) IDAGeometryPtr IDA2Geometry::TextureImage ( struct IDAImage * texture_0 );
__declspec(implementation_key(283)) IDAImagePtr IDA2Image::AddPickData ( IUnknown * id_0, VARIANT_BOOL ignoresOcclusion_1 );
__declspec(implementation_key(284)) IDAImagePtr IDA2Image::RenderResolution ( long width_0, long height_1 );
__declspec(implementation_key(285)) IDAImagePtr IDA2Image::ImageQuality ( unsigned long dwQualityFlags_0 );
__declspec(implementation_key(286)) IDAImagePtr IDA2Image::ColorKey ( struct IDAColor * colorKey_0 );
__declspec(implementation_key(287)) IDAFontStylePtr IDA2FontStyle::TransformCharacters ( struct IDATransform2 * transform_0 );
__declspec(implementation_key(288)) IDALineStylePtr IDA2LineStyle::DashStyle ( unsigned long ds_enum_0 );
__declspec(implementation_key(289)) IDALineStylePtr IDA2LineStyle::MiterLimit ( double mtrlim_0 );
__declspec(implementation_key(290)) IDALineStylePtr IDA2LineStyle::MiterLimitAnim ( struct IDANumber * mtrlim_0 );
__declspec(implementation_key(291)) IDALineStylePtr IDA2LineStyle::JoinStyle ( unsigned long js_enum_0 );
__declspec(implementation_key(292)) IDALineStylePtr IDA2LineStyle::EndStyle ( unsigned long es_enum_0 );
__declspec(implementation_key(293)) IDAEventPtr IDA2Event::NotifyScript ( _bstr_t scriptlet_0 );
__declspec(implementation_key(294)) long IDA2Array::AddElement ( struct IDABehavior * b_0, unsigned long flag_1 );
__declspec(implementation_key(295)) HRESULT IDA2Array::RemoveElement ( long i_0 );
__declspec(implementation_key(296)) IDA2ColorPtr IDA2Color::AnimateProperty ( _bstr_t propertyPath_0, _bstr_t scriptingLanguage_1, VARIANT_BOOL invokeAsMethod_2, double minUpdateInterval_3 );
__declspec(implementation_key(297)) IDAGeometryPtr IDA3Geometry::Billboard ( struct IDAVector3 * axis_0 );
__declspec(implementation_key(298)) IDAImagePtr IDA3Image::TransformColorRGB ( struct IDATransform3 * xf_0 );
__declspec(implementation_key(299)) HRESULT IDA3Array::SetElement ( long index, struct IDABehavior * b, long flag );
__declspec(implementation_key(300)) IDABehaviorPtr IDA3Array::GetElement ( long index );
__declspec(implementation_key(301)) long IDA2View::QueryHitPointEx ( long s, unsigned long * cookies, double * points, struct tagRECT * prcBounds, struct tagPOINT ptLoc );
__declspec(implementation_key(302)) HRESULT IDA2View::StartModelEx ( struct IDAImage * pImage, struct IDASound * pSound, double startTime, unsigned long dwFlags );
__declspec(implementation_key(303)) HRESULT IDA2View::GetDDD3DRM ( IUnknown * * directDraw, IUnknown * * d3drm );
__declspec(implementation_key(304)) HRESULT IDA2View::GetRMDevice ( IUnknown * * d3drmDevice, unsigned long * sequenceNumber );
__declspec(implementation_key(305)) long IDA2View::GetInvalidatedRects ( unsigned long Flags, long s, struct tagRECT * pRects );
__declspec(implementation_key(306)) HRESULT IDA3View::Pause ( );
__declspec(implementation_key(307)) HRESULT IDA3View::Resume ( );
__declspec(implementation_key(308)) HRESULT IDA3View::OnMouseLeave ( double when );
__declspec(implementation_key(309)) wireHWND IDA3View::GetWindow2 ( );
__declspec(implementation_key(310)) void IDA3View::PutWindow2 ( wireHWND hwnd );
__declspec(implementation_key(311)) HRESULT _IDAViewEvents::Start ( );
__declspec(implementation_key(312)) HRESULT _IDAViewEvents::Stop ( );
__declspec(implementation_key(313)) HRESULT _IDAViewEvents::OnMouseMove ( double when, long xPos, long yPos, int modifiers );
__declspec(implementation_key(314)) HRESULT _IDAViewEvents::OnMouseButton ( double when, long xPos, long yPos, int button, VARIANT_BOOL bPressed, int modifiers );
__declspec(implementation_key(315)) HRESULT _IDAViewEvents::OnKey ( double when, long key, VARIANT_BOOL bPressed, int modifiers );
__declspec(implementation_key(316)) HRESULT _IDAViewEvents::OnFocus ( VARIANT_BOOL bHasFocus );
__declspec(implementation_key(317)) HRESULT _IDAViewEvents::Pause ( );
__declspec(implementation_key(318)) HRESULT _IDAViewEvents::Resume ( );
__declspec(implementation_key(319)) HRESULT _IDAViewEvents::Error ( long HResult, _bstr_t ErrorString );
__declspec(implementation_key(320)) HRESULT IDASite::SetStatusText ( _bstr_t StatusText );
__declspec(implementation_key(321)) HRESULT IDASite::ReportError ( HRESULT hr, _bstr_t ErrorText );
__declspec(implementation_key(322)) HRESULT IDASite::ReportGC ( VARIANT_BOOL bStarting );
__declspec(implementation_key(323)) IDAImagePtr IDAImportationResult::GetImage ( );
__declspec(implementation_key(324)) IDASoundPtr IDAImportationResult::GetSound ( );
__declspec(implementation_key(325)) IDAGeometryPtr IDAImportationResult::GetGeometry ( );
__declspec(implementation_key(326)) IDANumberPtr IDAImportationResult::GetDuration ( );
__declspec(implementation_key(327)) IDAEventPtr IDAImportationResult::GetCompletionEvent ( );
__declspec(implementation_key(328)) IDANumberPtr IDAImportationResult::GetProgress ( );
__declspec(implementation_key(329)) IDANumberPtr IDAImportationResult::GetSize ( );
__declspec(implementation_key(330)) IDABehaviorPtr IDADXTransformResult::GetOutputBvr ( );
__declspec(implementation_key(331)) IDispatchPtr IDADXTransformResult::GetTheTransform ( );
__declspec(implementation_key(332)) HRESULT IDADXTransformResult::PutBvrAsProperty ( _bstr_t property, struct IDABehavior * bvr );
__declspec(implementation_key(333)) _bstr_t IDAStatics::GetVersionString ( );
__declspec(implementation_key(334)) IDASitePtr IDAStatics::GetSite ( );
__declspec(implementation_key(335)) void IDAStatics::PutSite ( struct IDASite * pSite );
__declspec(implementation_key(336)) void IDAStatics::PutClientSite ( struct IOleClientSite * pClientSite );
__declspec(implementation_key(337)) IOleClientSitePtr IDAStatics::GetClientSite ( );
__declspec(implementation_key(338)) void IDAStatics::PutPixelConstructionMode ( VARIANT_BOOL bMode );
__declspec(implementation_key(339)) VARIANT_BOOL IDAStatics::GetPixelConstructionMode ( );
__declspec(implementation_key(340)) HRESULT IDAStatics::TriggerEvent ( struct IDAEvent * event, struct IDABehavior * Data );
__declspec(implementation_key(341)) IDADrawingSurfacePtr IDAStatics::NewDrawingSurface ( );
__declspec(implementation_key(342)) IDAImportationResultPtr IDAStatics::ImportMovie ( _bstr_t url );
__declspec(implementation_key(343)) IDAImportationResultPtr IDAStatics::ImportMovieAsync ( _bstr_t url, struct IDAImage * pImageStandIn, struct IDASound * pSoundStandIn );
__declspec(implementation_key(344)) IDAImagePtr IDAStatics::ImportImage ( _bstr_t url );
__declspec(implementation_key(345)) IDAImportationResultPtr IDAStatics::ImportImageAsync ( _bstr_t url, struct IDAImage * pImageStandIn );
__declspec(implementation_key(346)) IDAImagePtr IDAStatics::ImportImageColorKey ( _bstr_t url, unsigned char colorKeyRed, unsigned char colorKeyGreen, unsigned char colorKeyBlue );
__declspec(implementation_key(347)) IDAImportationResultPtr IDAStatics::ImportImageAsyncColorKey ( _bstr_t url, struct IDAImage * pImageStandIn, unsigned char colorKeyRed, unsigned char colorKeyGreen, unsigned char colorKeyBlue );
__declspec(implementation_key(348)) IDAImportationResultPtr IDAStatics::ImportSound ( _bstr_t url );
__declspec(implementation_key(349)) IDAImportationResultPtr IDAStatics::ImportSoundAsync ( _bstr_t url, struct IDASound * pSoundStandIn );
__declspec(implementation_key(350)) IDAGeometryPtr IDAStatics::ImportGeometry ( _bstr_t url );
__declspec(implementation_key(351)) IDAImportationResultPtr IDAStatics::ImportGeometryAsync ( _bstr_t url, struct IDAGeometry * pGeoStandIn );
__declspec(implementation_key(352)) IDAImagePtr IDAStatics::ImportDirectDrawSurface ( IUnknown * dds, struct IDAEvent * updateEvent );
__declspec(implementation_key(353)) IDABehaviorPtr IDAStatics::Cond ( struct IDABoolean * c, struct IDABehavior * i, struct IDABehavior * e );
__declspec(implementation_key(354)) IDAArrayPtr IDAStatics::DAArrayEx ( long s, struct IDABehavior * * pBvrs );
__declspec(implementation_key(355)) IDAArrayPtr IDAStatics::DAArray ( const _variant_t & bvrs );
__declspec(implementation_key(356)) IDATuplePtr IDAStatics::DATupleEx ( long s, struct IDABehavior * * pBvrs );
__declspec(implementation_key(357)) IDATuplePtr IDAStatics::DATuple ( const _variant_t & bvrs );
__declspec(implementation_key(358)) IDABehaviorPtr IDAStatics::ModifiableBehavior ( struct IDABehavior * orig );
__declspec(implementation_key(359)) IDAArrayPtr IDAStatics::UninitializedArray ( struct IDAArray * typeTmp );
__declspec(implementation_key(360)) IDATuplePtr IDAStatics::UninitializedTuple ( struct IDATuple * typeTmp );
__declspec(implementation_key(361)) IDANumberPtr IDAStatics::NumberBSplineEx ( int degree, long numKnots, struct IDANumber * * knots, long numPts, struct IDANumber * * ctrlPts, long numWts, struct IDANumber * * weights, struct IDANumber * evaluator );
__declspec(implementation_key(362)) IDANumberPtr IDAStatics::NumberBSpline ( int degree, const _variant_t & knots, const _variant_t & ctrlPts, const _variant_t & weights, struct IDANumber * evaluator );
__declspec(implementation_key(363)) IDAPoint2Ptr IDAStatics::Point2BSplineEx ( int degree, long numKnots, struct IDANumber * * knots, long numPts, struct IDAPoint2 * * ctrlPts, long numWts, struct IDANumber * * weights, struct IDANumber * evaluator );
__declspec(implementation_key(364)) IDAPoint2Ptr IDAStatics::Point2BSpline ( int degree, const _variant_t & knots, const _variant_t & ctrlPts, const _variant_t & weights, struct IDANumber * evaluator );
__declspec(implementation_key(365)) IDAPoint3Ptr IDAStatics::Point3BSplineEx ( int degree, long numKnots, struct IDANumber * * knots, long numPts, struct IDAPoint3 * * ctrlPts, long numWts, struct IDANumber * * weights, struct IDANumber * evaluator );
__declspec(implementation_key(366)) IDAPoint3Ptr IDAStatics::Point3BSpline ( int degree, const _variant_t & knots, const _variant_t & ctrlPts, const _variant_t & weights, struct IDANumber * evaluator );
__declspec(implementation_key(367)) IDAVector2Ptr IDAStatics::Vector2BSplineEx ( int degree, long numKnots, struct IDANumber * * knots, long numPts, struct IDAVector2 * * ctrlPts, long numWts, struct IDANumber * * weights, struct IDANumber * evaluator );
__declspec(implementation_key(368)) IDAVector2Ptr IDAStatics::Vector2BSpline ( int degree, const _variant_t & knots, const _variant_t & ctrlPts, const _variant_t & weights, struct IDANumber * evaluator );
__declspec(implementation_key(369)) IDAVector3Ptr IDAStatics::Vector3BSplineEx ( int degree, long numKnots, struct IDANumber * * knots, long numPts, struct IDAVector3 * * ctrlPts, long numWts, struct IDANumber * * weights, struct IDANumber * evaluator );
__declspec(implementation_key(370)) IDAVector3Ptr IDAStatics::Vector3BSpline ( int degree, const _variant_t & knots, const _variant_t & ctrlPts, const _variant_t & weights, struct IDANumber * evaluator );
__declspec(implementation_key(371)) IDANumberPtr IDAStatics::Pow ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(372)) IDANumberPtr IDAStatics::Abs ( struct IDANumber * a_0 );
__declspec(implementation_key(373)) IDANumberPtr IDAStatics::Sqrt ( struct IDANumber * a_0 );
__declspec(implementation_key(374)) IDANumberPtr IDAStatics::Floor ( struct IDANumber * a_0 );
__declspec(implementation_key(375)) IDANumberPtr IDAStatics::Round ( struct IDANumber * a_0 );
__declspec(implementation_key(376)) IDANumberPtr IDAStatics::Ceiling ( struct IDANumber * a_0 );
__declspec(implementation_key(377)) IDANumberPtr IDAStatics::Asin ( struct IDANumber * a_0 );
__declspec(implementation_key(378)) IDANumberPtr IDAStatics::Acos ( struct IDANumber * a_0 );
__declspec(implementation_key(379)) IDANumberPtr IDAStatics::Atan ( struct IDANumber * a_0 );
__declspec(implementation_key(380)) IDANumberPtr IDAStatics::Sin ( struct IDANumber * a_0 );
__declspec(implementation_key(381)) IDANumberPtr IDAStatics::Cos ( struct IDANumber * a_0 );
__declspec(implementation_key(382)) IDANumberPtr IDAStatics::Tan ( struct IDANumber * a_0 );
__declspec(implementation_key(383)) IDANumberPtr IDAStatics::Exp ( struct IDANumber * a_0 );
__declspec(implementation_key(384)) IDANumberPtr IDAStatics::Ln ( struct IDANumber * a_0 );
__declspec(implementation_key(385)) IDANumberPtr IDAStatics::Log10 ( struct IDANumber * a_0 );
__declspec(implementation_key(386)) IDANumberPtr IDAStatics::ToDegrees ( struct IDANumber * a_0 );
__declspec(implementation_key(387)) IDANumberPtr IDAStatics::ToRadians ( struct IDANumber * a_0 );
__declspec(implementation_key(388)) IDANumberPtr IDAStatics::Mod ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(389)) IDANumberPtr IDAStatics::Atan2 ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(390)) IDANumberPtr IDAStatics::Add ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(391)) IDANumberPtr IDAStatics::Sub ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(392)) IDANumberPtr IDAStatics::Mul ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(393)) IDANumberPtr IDAStatics::Div ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(394)) IDABooleanPtr IDAStatics::LT ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(395)) IDABooleanPtr IDAStatics::LTE ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(396)) IDABooleanPtr IDAStatics::GT ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(397)) IDABooleanPtr IDAStatics::GTE ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(398)) IDABooleanPtr IDAStatics::EQ ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(399)) IDABooleanPtr IDAStatics::NE ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(400)) IDANumberPtr IDAStatics::Neg ( struct IDANumber * a_0 );
__declspec(implementation_key(401)) IDANumberPtr IDAStatics::InterpolateAnim ( struct IDANumber * from_0, struct IDANumber * to_1, struct IDANumber * duration_2 );
__declspec(implementation_key(402)) IDANumberPtr IDAStatics::Interpolate ( double from_0, double to_1, double duration_2 );
__declspec(implementation_key(403)) IDANumberPtr IDAStatics::SlowInSlowOutAnim ( struct IDANumber * from_0, struct IDANumber * to_1, struct IDANumber * duration_2, struct IDANumber * sharpness_3 );
__declspec(implementation_key(404)) IDANumberPtr IDAStatics::SlowInSlowOut ( double from_0, double to_1, double duration_2, double sharpness_3 );
__declspec(implementation_key(405)) IDAGeometryPtr IDAStatics::SoundSource ( struct IDASound * snd_0 );
__declspec(implementation_key(406)) IDASoundPtr IDAStatics::Mix ( struct IDASound * left_0, struct IDASound * right_1 );
__declspec(implementation_key(407)) IDABooleanPtr IDAStatics::And ( struct IDABoolean * a_0, struct IDABoolean * b_1 );
__declspec(implementation_key(408)) IDABooleanPtr IDAStatics::Or ( struct IDABoolean * a_0, struct IDABoolean * b_1 );
__declspec(implementation_key(409)) IDABooleanPtr IDAStatics::Not ( struct IDABoolean * a_0 );
__declspec(implementation_key(410)) IDANumberPtr IDAStatics::Integral ( struct IDANumber * b_0 );
__declspec(implementation_key(411)) IDANumberPtr IDAStatics::Derivative ( struct IDANumber * b_0 );
__declspec(implementation_key(412)) IDAVector2Ptr IDAStatics::IntegralVector2 ( struct IDAVector2 * v_0 );
__declspec(implementation_key(413)) IDAVector3Ptr IDAStatics::IntegralVector3 ( struct IDAVector3 * v_0 );
__declspec(implementation_key(414)) IDAVector2Ptr IDAStatics::DerivativeVector2 ( struct IDAVector2 * v_0 );
__declspec(implementation_key(415)) IDAVector3Ptr IDAStatics::DerivativeVector3 ( struct IDAVector3 * v_0 );
__declspec(implementation_key(416)) IDAVector2Ptr IDAStatics::DerivativePoint2 ( struct IDAPoint2 * v_0 );
__declspec(implementation_key(417)) IDAVector3Ptr IDAStatics::DerivativePoint3 ( struct IDAPoint3 * v_0 );
__declspec(implementation_key(418)) IDABooleanPtr IDAStatics::KeyState ( struct IDANumber * n_0 );
__declspec(implementation_key(419)) IDAEventPtr IDAStatics::KeyUp ( long arg_0 );
__declspec(implementation_key(420)) IDAEventPtr IDAStatics::KeyDown ( long arg_0 );
__declspec(implementation_key(421)) IDANumberPtr IDAStatics::DANumber ( double num_0 );
__declspec(implementation_key(422)) IDAStringPtr IDAStatics::DAString ( _bstr_t str_0 );
__declspec(implementation_key(423)) IDABooleanPtr IDAStatics::DABoolean ( VARIANT_BOOL num_0 );
__declspec(implementation_key(424)) IDANumberPtr IDAStatics::SeededRandom ( double arg_0 );
__declspec(implementation_key(425)) IDAPoint2Ptr IDAStatics::GetMousePosition ( );
__declspec(implementation_key(426)) IDABooleanPtr IDAStatics::GetLeftButtonState ( );
__declspec(implementation_key(427)) IDABooleanPtr IDAStatics::GetRightButtonState ( );
__declspec(implementation_key(428)) IDABooleanPtr IDAStatics::GetDATrue ( );
__declspec(implementation_key(429)) IDABooleanPtr IDAStatics::GetDAFalse ( );
__declspec(implementation_key(430)) IDANumberPtr IDAStatics::GetLocalTime ( );
__declspec(implementation_key(431)) IDANumberPtr IDAStatics::GetGlobalTime ( );
__declspec(implementation_key(432)) IDANumberPtr IDAStatics::GetPixel ( );
__declspec(implementation_key(433)) IDAUserDataPtr IDAStatics::UserData ( IUnknown * data_0 );
__declspec(implementation_key(434)) IDABehaviorPtr IDAStatics::UntilNotify ( struct IDABehavior * b0_0, struct IDAEvent * event_1, struct IDAUntilNotifier * notifier_2 );
__declspec(implementation_key(435)) IDABehaviorPtr IDAStatics::Until ( struct IDABehavior * b0_0, struct IDAEvent * event_1, struct IDABehavior * b1_2 );
__declspec(implementation_key(436)) IDABehaviorPtr IDAStatics::UntilEx ( struct IDABehavior * b0_0, struct IDAEvent * event_1 );
__declspec(implementation_key(437)) IDABehaviorPtr IDAStatics::Sequence ( struct IDABehavior * s1_0, struct IDABehavior * s2_1 );
__declspec(implementation_key(438)) IDATransform2Ptr IDAStatics::FollowPath ( struct IDAPath2 * path_0, double duration_1 );
__declspec(implementation_key(439)) IDATransform2Ptr IDAStatics::FollowPathAngle ( struct IDAPath2 * path_0, double duration_1 );
__declspec(implementation_key(440)) IDATransform2Ptr IDAStatics::FollowPathAngleUpright ( struct IDAPath2 * path_0, double duration_1 );
__declspec(implementation_key(441)) IDATransform2Ptr IDAStatics::FollowPathEval ( struct IDAPath2 * path_0, struct IDANumber * eval_1 );
__declspec(implementation_key(442)) IDATransform2Ptr IDAStatics::FollowPathAngleEval ( struct IDAPath2 * path_0, struct IDANumber * eval_1 );
__declspec(implementation_key(443)) IDATransform2Ptr IDAStatics::FollowPathAngleUprightEval ( struct IDAPath2 * path_0, struct IDANumber * eval_1 );
__declspec(implementation_key(444)) IDATransform2Ptr IDAStatics::FollowPathAnim ( struct IDAPath2 * obsoleted1_0, struct IDANumber * obsoleted2_1 );
__declspec(implementation_key(445)) IDATransform2Ptr IDAStatics::FollowPathAngleAnim ( struct IDAPath2 * obsoleted1_0, struct IDANumber * obsoleted2_1 );
__declspec(implementation_key(446)) IDATransform2Ptr IDAStatics::FollowPathAngleUprightAnim ( struct IDAPath2 * obsoleted1_0, struct IDANumber * obsoleted2_1 );
__declspec(implementation_key(447)) IDAStringPtr IDAStatics::ConcatString ( struct IDAString * s1_0, struct IDAString * s2_1 );
__declspec(implementation_key(448)) IDACameraPtr IDAStatics::PerspectiveCamera ( double focalDist_0, double nearClip_1 );
__declspec(implementation_key(449)) IDACameraPtr IDAStatics::PerspectiveCameraAnim ( struct IDANumber * focalDist_0, struct IDANumber * nearClip_1 );
__declspec(implementation_key(450)) IDACameraPtr IDAStatics::ParallelCamera ( double nearClip_0 );
__declspec(implementation_key(451)) IDACameraPtr IDAStatics::ParallelCameraAnim ( struct IDANumber * nearClip_0 );
__declspec(implementation_key(452)) IDAColorPtr IDAStatics::ColorRgbAnim ( struct IDANumber * red_0, struct IDANumber * green_1, struct IDANumber * blue_2 );
__declspec(implementation_key(453)) IDAColorPtr IDAStatics::ColorRgb ( double red_0, double green_1, double blue_2 );
__declspec(implementation_key(454)) IDAColorPtr IDAStatics::ColorRgb255 ( short red_0, short green_1, short blue_2 );
__declspec(implementation_key(455)) IDAColorPtr IDAStatics::ColorHsl ( double hue_0, double saturation_1, double lum_2 );
__declspec(implementation_key(456)) IDAColorPtr IDAStatics::ColorHslAnim ( struct IDANumber * hue_0, struct IDANumber * saturation_1, struct IDANumber * lum_2 );
__declspec(implementation_key(457)) IDAColorPtr IDAStatics::GetRed ( );
__declspec(implementation_key(458)) IDAColorPtr IDAStatics::GetGreen ( );
__declspec(implementation_key(459)) IDAColorPtr IDAStatics::GetBlue ( );
__declspec(implementation_key(460)) IDAColorPtr IDAStatics::GetCyan ( );
__declspec(implementation_key(461)) IDAColorPtr IDAStatics::GetMagenta ( );
__declspec(implementation_key(462)) IDAColorPtr IDAStatics::GetYellow ( );
__declspec(implementation_key(463)) IDAColorPtr IDAStatics::GetBlack ( );
__declspec(implementation_key(464)) IDAColorPtr IDAStatics::GetWhite ( );
__declspec(implementation_key(465)) IDAColorPtr IDAStatics::GetAqua ( );
__declspec(implementation_key(466)) IDAColorPtr IDAStatics::GetFuchsia ( );
__declspec(implementation_key(467)) IDAColorPtr IDAStatics::GetGray ( );
__declspec(implementation_key(468)) IDAColorPtr IDAStatics::GetLime ( );
__declspec(implementation_key(469)) IDAColorPtr IDAStatics::GetMaroon ( );
__declspec(implementation_key(470)) IDAColorPtr IDAStatics::GetNavy ( );
__declspec(implementation_key(471)) IDAColorPtr IDAStatics::GetOlive ( );
__declspec(implementation_key(472)) IDAColorPtr IDAStatics::GetPurple ( );
__declspec(implementation_key(473)) IDAColorPtr IDAStatics::GetSilver ( );
__declspec(implementation_key(474)) IDAColorPtr IDAStatics::GetTeal ( );
__declspec(implementation_key(475)) IDAEventPtr IDAStatics::Predicate ( struct IDABoolean * b_0 );
__declspec(implementation_key(476)) IDAEventPtr IDAStatics::NotEvent ( struct IDAEvent * event_0 );
__declspec(implementation_key(477)) IDAEventPtr IDAStatics::AndEvent ( struct IDAEvent * e1_0, struct IDAEvent * e2_1 );
__declspec(implementation_key(478)) IDAEventPtr IDAStatics::OrEvent ( struct IDAEvent * e1_0, struct IDAEvent * e2_1 );
__declspec(implementation_key(479)) IDAEventPtr IDAStatics::ThenEvent ( struct IDAEvent * e1_0, struct IDAEvent * e2_1 );
__declspec(implementation_key(480)) IDAEventPtr IDAStatics::GetLeftButtonDown ( );
__declspec(implementation_key(481)) IDAEventPtr IDAStatics::GetLeftButtonUp ( );
__declspec(implementation_key(482)) IDAEventPtr IDAStatics::GetRightButtonDown ( );
__declspec(implementation_key(483)) IDAEventPtr IDAStatics::GetRightButtonUp ( );
__declspec(implementation_key(484)) IDAEventPtr IDAStatics::GetAlways ( );
__declspec(implementation_key(485)) IDAEventPtr IDAStatics::GetNever ( );
__declspec(implementation_key(486)) IDAEventPtr IDAStatics::TimerAnim ( struct IDANumber * n_0 );
__declspec(implementation_key(487)) IDAEventPtr IDAStatics::Timer ( double n_0 );
__declspec(implementation_key(488)) IDAEventPtr IDAStatics::AppTriggeredEvent ( );
__declspec(implementation_key(489)) IDAEventPtr IDAStatics::ScriptCallback ( _bstr_t obsolete1_0, struct IDAEvent * obsolete2_1, _bstr_t obsolete3_2 );
__declspec(implementation_key(490)) IDAGeometryPtr IDAStatics::GetEmptyGeometry ( );
__declspec(implementation_key(491)) IDAGeometryPtr IDAStatics::UnionGeometry ( struct IDAGeometry * g1_0, struct IDAGeometry * g2_1 );
__declspec(implementation_key(492)) IDAGeometryPtr IDAStatics::UnionGeometryArrayEx ( long imgs_0size, struct IDAGeometry * * imgs_0 );
__declspec(implementation_key(493)) IDAGeometryPtr IDAStatics::UnionGeometryArray ( const _variant_t & imgs_0 );
__declspec(implementation_key(494)) IDAImagePtr IDAStatics::GetEmptyImage ( );
__declspec(implementation_key(495)) IDAImagePtr IDAStatics::GetDetectableEmptyImage ( );
__declspec(implementation_key(496)) IDAImagePtr IDAStatics::SolidColorImage ( struct IDAColor * col_0 );
__declspec(implementation_key(497)) IDAImagePtr IDAStatics::GradientPolygonEx ( long points_0size, struct IDAPoint2 * * points_0, long colors_1size, struct IDAColor * * colors_1 );
__declspec(implementation_key(498)) IDAImagePtr IDAStatics::GradientPolygon ( const _variant_t & points_0, const _variant_t & colors_1 );
__declspec(implementation_key(499)) IDAImagePtr IDAStatics::RadialGradientPolygonEx ( struct IDAColor * inner_0, struct IDAColor * outer_1, long points_2size, struct IDAPoint2 * * points_2, double fallOff_3 );
__declspec(implementation_key(500)) IDAImagePtr IDAStatics::RadialGradientPolygon ( struct IDAColor * inner_0, struct IDAColor * outer_1, const _variant_t & points_2, double fallOff_3 );
__declspec(implementation_key(501)) IDAImagePtr IDAStatics::RadialGradientPolygonAnimEx ( struct IDAColor * inner_0, struct IDAColor * outer_1, long points_2size, struct IDAPoint2 * * points_2, struct IDANumber * fallOff_3 );
__declspec(implementation_key(502)) IDAImagePtr IDAStatics::RadialGradientPolygonAnim ( struct IDAColor * inner_0, struct IDAColor * outer_1, const _variant_t & points_2, struct IDANumber * fallOff_3 );
__declspec(implementation_key(503)) IDAImagePtr IDAStatics::GradientSquare ( struct IDAColor * lowerLeft_0, struct IDAColor * upperLeft_1, struct IDAColor * upperRight_2, struct IDAColor * lowerRight_3 );
__declspec(implementation_key(504)) IDAImagePtr IDAStatics::RadialGradientSquare ( struct IDAColor * inner_0, struct IDAColor * outer_1, double fallOff_2 );
__declspec(implementation_key(505)) IDAImagePtr IDAStatics::RadialGradientSquareAnim ( struct IDAColor * inner_0, struct IDAColor * outer_1, struct IDANumber * fallOff_2 );
__declspec(implementation_key(506)) IDAImagePtr IDAStatics::RadialGradientRegularPoly ( struct IDAColor * inner_0, struct IDAColor * outer_1, double numEdges_2, double fallOff_3 );
__declspec(implementation_key(507)) IDAImagePtr IDAStatics::RadialGradientRegularPolyAnim ( struct IDAColor * inner_0, struct IDAColor * outer_1, struct IDANumber * numEdges_2, struct IDANumber * fallOff_3 );
__declspec(implementation_key(508)) IDAImagePtr IDAStatics::GradientHorizontal ( struct IDAColor * start_0, struct IDAColor * stop_1, double fallOff_2 );
__declspec(implementation_key(509)) IDAImagePtr IDAStatics::GradientHorizontalAnim ( struct IDAColor * start_0, struct IDAColor * stop_1, struct IDANumber * fallOff_2 );
__declspec(implementation_key(510)) IDAImagePtr IDAStatics::HatchHorizontal ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(511)) IDAImagePtr IDAStatics::HatchHorizontalAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(512)) IDAImagePtr IDAStatics::HatchVertical ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(513)) IDAImagePtr IDAStatics::HatchVerticalAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(514)) IDAImagePtr IDAStatics::HatchForwardDiagonal ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(515)) IDAImagePtr IDAStatics::HatchForwardDiagonalAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(516)) IDAImagePtr IDAStatics::HatchBackwardDiagonal ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(517)) IDAImagePtr IDAStatics::HatchBackwardDiagonalAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(518)) IDAImagePtr IDAStatics::HatchCross ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(519)) IDAImagePtr IDAStatics::HatchCrossAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(520)) IDAImagePtr IDAStatics::HatchDiagonalCross ( struct IDAColor * lineClr_0, double spacing_1 );
__declspec(implementation_key(521)) IDAImagePtr IDAStatics::HatchDiagonalCrossAnim ( struct IDAColor * lineClr_0, struct IDANumber * spacing_1 );
__declspec(implementation_key(522)) IDAImagePtr IDAStatics::Overlay ( struct IDAImage * top_0, struct IDAImage * bottom_1 );
__declspec(implementation_key(523)) IDAImagePtr IDAStatics::OverlayArrayEx ( long imgs_0size, struct IDAImage * * imgs_0 );
__declspec(implementation_key(524)) IDAImagePtr IDAStatics::OverlayArray ( const _variant_t & imgs_0 );
__declspec(implementation_key(525)) IDAGeometryPtr IDAStatics::GetAmbientLight ( );
__declspec(implementation_key(526)) IDAGeometryPtr IDAStatics::GetDirectionalLight ( );
__declspec(implementation_key(527)) IDAGeometryPtr IDAStatics::GetPointLight ( );
__declspec(implementation_key(528)) IDAGeometryPtr IDAStatics::SpotLightAnim ( struct IDANumber * fullcone_0, struct IDANumber * cutoff_1 );
__declspec(implementation_key(529)) IDAGeometryPtr IDAStatics::SpotLight ( struct IDANumber * fullcone_0, double cutoff_1 );
__declspec(implementation_key(530)) IDALineStylePtr IDAStatics::GetDefaultLineStyle ( );
__declspec(implementation_key(531)) IDALineStylePtr IDAStatics::GetEmptyLineStyle ( );
__declspec(implementation_key(532)) IDAJoinStylePtr IDAStatics::GetJoinStyleBevel ( );
__declspec(implementation_key(533)) IDAJoinStylePtr IDAStatics::GetJoinStyleRound ( );
__declspec(implementation_key(534)) IDAJoinStylePtr IDAStatics::GetJoinStyleMiter ( );
__declspec(implementation_key(535)) IDAEndStylePtr IDAStatics::GetEndStyleFlat ( );
__declspec(implementation_key(536)) IDAEndStylePtr IDAStatics::GetEndStyleSquare ( );
__declspec(implementation_key(537)) IDAEndStylePtr IDAStatics::GetEndStyleRound ( );
__declspec(implementation_key(538)) IDADashStylePtr IDAStatics::GetDashStyleSolid ( );
__declspec(implementation_key(539)) IDADashStylePtr IDAStatics::GetDashStyleDashed ( );
__declspec(implementation_key(540)) IDAMicrophonePtr IDAStatics::GetDefaultMicrophone ( );
__declspec(implementation_key(541)) IDAMattePtr IDAStatics::GetOpaqueMatte ( );
__declspec(implementation_key(542)) IDAMattePtr IDAStatics::GetClearMatte ( );
__declspec(implementation_key(543)) IDAMattePtr IDAStatics::UnionMatte ( struct IDAMatte * m1_0, struct IDAMatte * m2_1 );
__declspec(implementation_key(544)) IDAMattePtr IDAStatics::IntersectMatte ( struct IDAMatte * m1_0, struct IDAMatte * m2_1 );
__declspec(implementation_key(545)) IDAMattePtr IDAStatics::DifferenceMatte ( struct IDAMatte * m1_0, struct IDAMatte * m2_1 );
__declspec(implementation_key(546)) IDAMattePtr IDAStatics::FillMatte ( struct IDAPath2 * p_0 );
__declspec(implementation_key(547)) IDAMattePtr IDAStatics::TextMatte ( struct IDAString * str_0, struct IDAFontStyle * fs_1 );
__declspec(implementation_key(548)) IDAMontagePtr IDAStatics::GetEmptyMontage ( );
__declspec(implementation_key(549)) IDAMontagePtr IDAStatics::ImageMontage ( struct IDAImage * im_0, double depth_1 );
__declspec(implementation_key(550)) IDAMontagePtr IDAStatics::ImageMontageAnim ( struct IDAImage * im_0, struct IDANumber * depth_1 );
__declspec(implementation_key(551)) IDAMontagePtr IDAStatics::UnionMontage ( struct IDAMontage * m1_0, struct IDAMontage * m2_1 );
__declspec(implementation_key(552)) IDAPath2Ptr IDAStatics::Concat ( struct IDAPath2 * p1_0, struct IDAPath2 * p2_1 );
__declspec(implementation_key(553)) IDAPath2Ptr IDAStatics::ConcatArrayEx ( long paths_0size, struct IDAPath2 * * paths_0 );
__declspec(implementation_key(554)) IDAPath2Ptr IDAStatics::ConcatArray ( const _variant_t & paths_0 );
__declspec(implementation_key(555)) IDAPath2Ptr IDAStatics::Line ( struct IDAPoint2 * p1_0, struct IDAPoint2 * p2_1 );
__declspec(implementation_key(556)) IDAPath2Ptr IDAStatics::Ray ( struct IDAPoint2 * pt_0 );
__declspec(implementation_key(557)) IDAPath2Ptr IDAStatics::StringPathAnim ( struct IDAString * str_0, struct IDAFontStyle * fs_1 );
__declspec(implementation_key(558)) IDAPath2Ptr IDAStatics::StringPath ( _bstr_t str_0, struct IDAFontStyle * fs_1 );
__declspec(implementation_key(559)) IDAPath2Ptr IDAStatics::PolylineEx ( long points_0size, struct IDAPoint2 * * points_0 );
__declspec(implementation_key(560)) IDAPath2Ptr IDAStatics::Polyline ( const _variant_t & points_0 );
__declspec(implementation_key(561)) IDAPath2Ptr IDAStatics::PolydrawPathEx ( long points_0size, struct IDAPoint2 * * points_0, long codes_1size, struct IDANumber * * codes_1 );
__declspec(implementation_key(562)) IDAPath2Ptr IDAStatics::PolydrawPath ( const _variant_t & points_0, const _variant_t & codes_1 );
__declspec(implementation_key(563)) IDAPath2Ptr IDAStatics::ArcRadians ( double startAngle_0, double endAngle_1, double arcWidth_2, double arcHeight_3 );
__declspec(implementation_key(564)) IDAPath2Ptr IDAStatics::ArcRadiansAnim ( struct IDANumber * startAngle_0, struct IDANumber * endAngle_1, struct IDANumber * arcWidth_2, struct IDANumber * arcHeight_3 );
__declspec(implementation_key(565)) IDAPath2Ptr IDAStatics::ArcDegrees ( double startAngle_0, double endAngle_1, double arcWidth_2, double arcHeight_3 );
__declspec(implementation_key(566)) IDAPath2Ptr IDAStatics::PieRadians ( double startAngle_0, double endAngle_1, double arcWidth_2, double arcHeight_3 );
__declspec(implementation_key(567)) IDAPath2Ptr IDAStatics::PieRadiansAnim ( struct IDANumber * startAngle_0, struct IDANumber * endAngle_1, struct IDANumber * arcWidth_2, struct IDANumber * arcHeight_3 );
__declspec(implementation_key(568)) IDAPath2Ptr IDAStatics::PieDegrees ( double startAngle_0, double endAngle_1, double arcWidth_2, double arcHeight_3 );
__declspec(implementation_key(569)) IDAPath2Ptr IDAStatics::Oval ( double width_0, double height_1 );
__declspec(implementation_key(570)) IDAPath2Ptr IDAStatics::OvalAnim ( struct IDANumber * width_0, struct IDANumber * height_1 );
__declspec(implementation_key(571)) IDAPath2Ptr IDAStatics::Rect ( double width_0, double height_1 );
__declspec(implementation_key(572)) IDAPath2Ptr IDAStatics::RectAnim ( struct IDANumber * width_0, struct IDANumber * height_1 );
__declspec(implementation_key(573)) IDAPath2Ptr IDAStatics::RoundRect ( double width_0, double height_1, double cornerArcWidth_2, double cornerArcHeight_3 );
__declspec(implementation_key(574)) IDAPath2Ptr IDAStatics::RoundRectAnim ( struct IDANumber * width_0, struct IDANumber * height_1, struct IDANumber * cornerArcWidth_2, struct IDANumber * cornerArcHeight_3 );
__declspec(implementation_key(575)) IDAPath2Ptr IDAStatics::CubicBSplinePathEx ( long points_0size, struct IDAPoint2 * * points_0, long knots_1size, struct IDANumber * * knots_1 );
__declspec(implementation_key(576)) IDAPath2Ptr IDAStatics::CubicBSplinePath ( const _variant_t & points_0, const _variant_t & knots_1 );
__declspec(implementation_key(577)) IDAPath2Ptr IDAStatics::TextPath ( struct IDAString * obsolete1_0, struct IDAFontStyle * obsolete2_1 );
__declspec(implementation_key(578)) IDASoundPtr IDAStatics::GetSilence ( );
__declspec(implementation_key(579)) IDASoundPtr IDAStatics::MixArrayEx ( long snds_0size, struct IDASound * * snds_0 );
__declspec(implementation_key(580)) IDASoundPtr IDAStatics::MixArray ( const _variant_t & snds_0 );
__declspec(implementation_key(581)) IDASoundPtr IDAStatics::GetSinSynth ( );
__declspec(implementation_key(582)) IDAFontStylePtr IDAStatics::GetDefaultFont ( );
__declspec(implementation_key(583)) IDAFontStylePtr IDAStatics::FontAnim ( struct IDAString * str_0, struct IDANumber * size_1, struct IDAColor * col_2 );
__declspec(implementation_key(584)) IDAFontStylePtr IDAStatics::Font ( _bstr_t str_0, double size_1, struct IDAColor * col_2 );
__declspec(implementation_key(585)) IDAImagePtr IDAStatics::StringImageAnim ( struct IDAString * str_0, struct IDAFontStyle * fs_1 );
__declspec(implementation_key(586)) IDAImagePtr IDAStatics::StringImage ( _bstr_t str_0, struct IDAFontStyle * fs_1 );
__declspec(implementation_key(587)) IDAImagePtr IDAStatics::TextImageAnim ( struct IDAString * obsoleted1_0, struct IDAFontStyle * obsoleted2_1 );
__declspec(implementation_key(588)) IDAImagePtr IDAStatics::TextImage ( _bstr_t obsoleted1_0, struct IDAFontStyle * obsoleted2_1 );
__declspec(implementation_key(589)) IDAVector2Ptr IDAStatics::GetXVector2 ( );
__declspec(implementation_key(590)) IDAVector2Ptr IDAStatics::GetYVector2 ( );
__declspec(implementation_key(591)) IDAVector2Ptr IDAStatics::GetZeroVector2 ( );
__declspec(implementation_key(592)) IDAPoint2Ptr IDAStatics::GetOrigin2 ( );
__declspec(implementation_key(593)) IDAVector2Ptr IDAStatics::Vector2Anim ( struct IDANumber * x_0, struct IDANumber * y_1 );
__declspec(implementation_key(594)) IDAVector2Ptr IDAStatics::Vector2 ( double x_0, double y_1 );
__declspec(implementation_key(595)) IDAPoint2Ptr IDAStatics::Point2Anim ( struct IDANumber * x_0, struct IDANumber * y_1 );
__declspec(implementation_key(596)) IDAPoint2Ptr IDAStatics::Point2 ( double x_0, double y_1 );
__declspec(implementation_key(597)) IDAVector2Ptr IDAStatics::Vector2PolarAnim ( struct IDANumber * theta_0, struct IDANumber * radius_1 );
__declspec(implementation_key(598)) IDAVector2Ptr IDAStatics::Vector2Polar ( double theta_0, double radius_1 );
__declspec(implementation_key(599)) IDAVector2Ptr IDAStatics::Vector2PolarDegrees ( double theta_0, double radius_1 );
__declspec(implementation_key(600)) IDAPoint2Ptr IDAStatics::Point2PolarAnim ( struct IDANumber * theta_0, struct IDANumber * radius_1 );
__declspec(implementation_key(601)) IDAPoint2Ptr IDAStatics::Point2Polar ( double theta_0, double radius_1 );
__declspec(implementation_key(602)) IDANumberPtr IDAStatics::DotVector2 ( struct IDAVector2 * v_0, struct IDAVector2 * u_1 );
__declspec(implementation_key(603)) IDAVector2Ptr IDAStatics::NegVector2 ( struct IDAVector2 * v_0 );
__declspec(implementation_key(604)) IDAVector2Ptr IDAStatics::SubVector2 ( struct IDAVector2 * v1_0, struct IDAVector2 * v2_1 );
__declspec(implementation_key(605)) IDAVector2Ptr IDAStatics::AddVector2 ( struct IDAVector2 * v1_0, struct IDAVector2 * v2_1 );
__declspec(implementation_key(606)) IDAPoint2Ptr IDAStatics::AddPoint2Vector ( struct IDAPoint2 * p_0, struct IDAVector2 * v_1 );
__declspec(implementation_key(607)) IDAPoint2Ptr IDAStatics::SubPoint2Vector ( struct IDAPoint2 * p_0, struct IDAVector2 * v_1 );
__declspec(implementation_key(608)) IDAVector2Ptr IDAStatics::SubPoint2 ( struct IDAPoint2 * p1_0, struct IDAPoint2 * p2_1 );
__declspec(implementation_key(609)) IDANumberPtr IDAStatics::DistancePoint2 ( struct IDAPoint2 * p_0, struct IDAPoint2 * q_1 );
__declspec(implementation_key(610)) IDANumberPtr IDAStatics::DistanceSquaredPoint2 ( struct IDAPoint2 * p_0, struct IDAPoint2 * q_1 );
__declspec(implementation_key(611)) IDAVector3Ptr IDAStatics::GetXVector3 ( );
__declspec(implementation_key(612)) IDAVector3Ptr IDAStatics::GetYVector3 ( );
__declspec(implementation_key(613)) IDAVector3Ptr IDAStatics::GetZVector3 ( );
__declspec(implementation_key(614)) IDAVector3Ptr IDAStatics::GetZeroVector3 ( );
__declspec(implementation_key(615)) IDAPoint3Ptr IDAStatics::GetOrigin3 ( );
__declspec(implementation_key(616)) IDAVector3Ptr IDAStatics::Vector3Anim ( struct IDANumber * x_0, struct IDANumber * y_1, struct IDANumber * z_2 );
__declspec(implementation_key(617)) IDAVector3Ptr IDAStatics::Vector3 ( double x_0, double y_1, double z_2 );
__declspec(implementation_key(618)) IDAPoint3Ptr IDAStatics::Point3Anim ( struct IDANumber * x_0, struct IDANumber * y_1, struct IDANumber * z_2 );
__declspec(implementation_key(619)) IDAPoint3Ptr IDAStatics::Point3 ( double x_0, double y_1, double z_2 );
__declspec(implementation_key(620)) IDAVector3Ptr IDAStatics::Vector3SphericalAnim ( struct IDANumber * xyAngle_0, struct IDANumber * yzAngle_1, struct IDANumber * radius_2 );
__declspec(implementation_key(621)) IDAVector3Ptr IDAStatics::Vector3Spherical ( double xyAngle_0, double yzAngle_1, double radius_2 );
__declspec(implementation_key(622)) IDAPoint3Ptr IDAStatics::Point3SphericalAnim ( struct IDANumber * zxAngle_0, struct IDANumber * xyAngle_1, struct IDANumber * radius_2 );
__declspec(implementation_key(623)) IDAPoint3Ptr IDAStatics::Point3Spherical ( double zxAngle_0, double xyAngle_1, double radius_2 );
__declspec(implementation_key(624)) IDANumberPtr IDAStatics::DotVector3 ( struct IDAVector3 * v_0, struct IDAVector3 * u_1 );
__declspec(implementation_key(625)) IDAVector3Ptr IDAStatics::CrossVector3 ( struct IDAVector3 * v_0, struct IDAVector3 * u_1 );
__declspec(implementation_key(626)) IDAVector3Ptr IDAStatics::NegVector3 ( struct IDAVector3 * v_0 );
__declspec(implementation_key(627)) IDAVector3Ptr IDAStatics::SubVector3 ( struct IDAVector3 * v1_0, struct IDAVector3 * v2_1 );
__declspec(implementation_key(628)) IDAVector3Ptr IDAStatics::AddVector3 ( struct IDAVector3 * v1_0, struct IDAVector3 * v2_1 );
__declspec(implementation_key(629)) IDAPoint3Ptr IDAStatics::AddPoint3Vector ( struct IDAPoint3 * p_0, struct IDAVector3 * v_1 );
__declspec(implementation_key(630)) IDAPoint3Ptr IDAStatics::SubPoint3Vector ( struct IDAPoint3 * p_0, struct IDAVector3 * v_1 );
__declspec(implementation_key(631)) IDAVector3Ptr IDAStatics::SubPoint3 ( struct IDAPoint3 * p1_0, struct IDAPoint3 * p2_1 );
__declspec(implementation_key(632)) IDANumberPtr IDAStatics::DistancePoint3 ( struct IDAPoint3 * p_0, struct IDAPoint3 * q_1 );
__declspec(implementation_key(633)) IDANumberPtr IDAStatics::DistanceSquaredPoint3 ( struct IDAPoint3 * p_0, struct IDAPoint3 * q_1 );
__declspec(implementation_key(634)) IDATransform3Ptr IDAStatics::GetIdentityTransform3 ( );
__declspec(implementation_key(635)) IDATransform3Ptr IDAStatics::Translate3Anim ( struct IDANumber * tx_0, struct IDANumber * ty_1, struct IDANumber * tz_2 );
__declspec(implementation_key(636)) IDATransform3Ptr IDAStatics::Translate3 ( double tx_0, double ty_1, double tz_2 );
__declspec(implementation_key(637)) IDATransform3Ptr IDAStatics::Translate3Rate ( double tx_0, double ty_1, double tz_2 );
__declspec(implementation_key(638)) IDATransform3Ptr IDAStatics::Translate3Vector ( struct IDAVector3 * delta_0 );
__declspec(implementation_key(639)) IDATransform3Ptr IDAStatics::Translate3Point ( struct IDAPoint3 * new_origin_0 );
__declspec(implementation_key(640)) IDATransform3Ptr IDAStatics::Scale3Anim ( struct IDANumber * x_0, struct IDANumber * y_1, struct IDANumber * z_2 );
__declspec(implementation_key(641)) IDATransform3Ptr IDAStatics::Scale3 ( double x_0, double y_1, double z_2 );
__declspec(implementation_key(642)) IDATransform3Ptr IDAStatics::Scale3Rate ( double x_0, double y_1, double z_2 );
__declspec(implementation_key(643)) IDATransform3Ptr IDAStatics::Scale3Vector ( struct IDAVector3 * scale_vec_0 );
__declspec(implementation_key(644)) IDATransform3Ptr IDAStatics::Scale3UniformAnim ( struct IDANumber * uniform_scale_0 );
__declspec(implementation_key(645)) IDATransform3Ptr IDAStatics::Scale3Uniform ( double uniform_scale_0 );
__declspec(implementation_key(646)) IDATransform3Ptr IDAStatics::Scale3UniformRate ( double uniform_scale_0 );
__declspec(implementation_key(647)) IDATransform3Ptr IDAStatics::Rotate3Anim ( struct IDAVector3 * axis_0, struct IDANumber * angle_1 );
__declspec(implementation_key(648)) IDATransform3Ptr IDAStatics::Rotate3 ( struct IDAVector3 * axis_0, double angle_1 );
__declspec(implementation_key(649)) IDATransform3Ptr IDAStatics::Rotate3Rate ( struct IDAVector3 * axis_0, double angle_1 );
__declspec(implementation_key(650)) IDATransform3Ptr IDAStatics::Rotate3Degrees ( struct IDAVector3 * axis_0, double angle_1 );
__declspec(implementation_key(651)) IDATransform3Ptr IDAStatics::Rotate3RateDegrees ( struct IDAVector3 * axis_0, double angle_1 );
__declspec(implementation_key(652)) IDATransform3Ptr IDAStatics::XShear3Anim ( struct IDANumber * a_0, struct IDANumber * b_1 );
__declspec(implementation_key(653)) IDATransform3Ptr IDAStatics::XShear3 ( double a_0, double b_1 );
__declspec(implementation_key(654)) IDATransform3Ptr IDAStatics::XShear3Rate ( double a_0, double b_1 );
__declspec(implementation_key(655)) IDATransform3Ptr IDAStatics::YShear3Anim ( struct IDANumber * c_0, struct IDANumber * d_1 );
__declspec(implementation_key(656)) IDATransform3Ptr IDAStatics::YShear3 ( double c_0, double d_1 );
__declspec(implementation_key(657)) IDATransform3Ptr IDAStatics::YShear3Rate ( double c_0, double d_1 );
__declspec(implementation_key(658)) IDATransform3Ptr IDAStatics::ZShear3Anim ( struct IDANumber * e_0, struct IDANumber * f_1 );
__declspec(implementation_key(659)) IDATransform3Ptr IDAStatics::ZShear3 ( double e_0, double f_1 );
__declspec(implementation_key(660)) IDATransform3Ptr IDAStatics::ZShear3Rate ( double e_0, double f_1 );
__declspec(implementation_key(661)) IDATransform3Ptr IDAStatics::Transform4x4AnimEx ( long m_0size, struct IDANumber * * m_0 );
__declspec(implementation_key(662)) IDATransform3Ptr IDAStatics::Transform4x4Anim ( const _variant_t & m_0 );
__declspec(implementation_key(663)) IDATransform3Ptr IDAStatics::Compose3 ( struct IDATransform3 * a_0, struct IDATransform3 * b_1 );
__declspec(implementation_key(664)) IDATransform3Ptr IDAStatics::Compose3ArrayEx ( long xfs_0size, struct IDATransform3 * * xfs_0 );
__declspec(implementation_key(665)) IDATransform3Ptr IDAStatics::Compose3Array ( const _variant_t & xfs_0 );
__declspec(implementation_key(666)) IDATransform3Ptr IDAStatics::LookAtFrom ( struct IDAPoint3 * to_0, struct IDAPoint3 * from_1, struct IDAVector3 * up_2 );
__declspec(implementation_key(667)) IDATransform2Ptr IDAStatics::GetIdentityTransform2 ( );
__declspec(implementation_key(668)) IDATransform2Ptr IDAStatics::Translate2Anim ( struct IDANumber * tx_0, struct IDANumber * ty_1 );
__declspec(implementation_key(669)) IDATransform2Ptr IDAStatics::Translate2 ( double tx_0, double ty_1 );
__declspec(implementation_key(670)) IDATransform2Ptr IDAStatics::Translate2Rate ( double tx_0, double ty_1 );
__declspec(implementation_key(671)) IDATransform2Ptr IDAStatics::Translate2Vector ( struct IDAVector2 * delta_0 );
__declspec(implementation_key(672)) IDATransform2Ptr IDAStatics::Translate2Point ( struct IDAPoint2 * pos_0 );
__declspec(implementation_key(673)) IDATransform2Ptr IDAStatics::Scale2Anim ( struct IDANumber * x_0, struct IDANumber * y_1 );
__declspec(implementation_key(674)) IDATransform2Ptr IDAStatics::Scale2 ( double x_0, double y_1 );
__declspec(implementation_key(675)) IDATransform2Ptr IDAStatics::Scale2Rate ( double x_0, double y_1 );
__declspec(implementation_key(676)) IDATransform2Ptr IDAStatics::Scale2Vector2 ( struct IDAVector2 * obsoleteMethod_0 );
__declspec(implementation_key(677)) IDATransform2Ptr IDAStatics::Scale2Vector ( struct IDAVector2 * scale_vec_0 );
__declspec(implementation_key(678)) IDATransform2Ptr IDAStatics::Scale2UniformAnim ( struct IDANumber * uniform_scale_0 );
__declspec(implementation_key(679)) IDATransform2Ptr IDAStatics::Scale2Uniform ( double uniform_scale_0 );
__declspec(implementation_key(680)) IDATransform2Ptr IDAStatics::Scale2UniformRate ( double uniform_scale_0 );
__declspec(implementation_key(681)) IDATransform2Ptr IDAStatics::Rotate2Anim ( struct IDANumber * angle_0 );
__declspec(implementation_key(682)) IDATransform2Ptr IDAStatics::Rotate2 ( double angle_0 );
__declspec(implementation_key(683)) IDATransform2Ptr IDAStatics::Rotate2Rate ( double angle_0 );
__declspec(implementation_key(684)) IDATransform2Ptr IDAStatics::Rotate2Degrees ( double angle_0 );
__declspec(implementation_key(685)) IDATransform2Ptr IDAStatics::Rotate2RateDegrees ( double angle_0 );
__declspec(implementation_key(686)) IDATransform2Ptr IDAStatics::XShear2Anim ( struct IDANumber * arg_0 );
__declspec(implementation_key(687)) IDATransform2Ptr IDAStatics::XShear2 ( double arg_0 );
__declspec(implementation_key(688)) IDATransform2Ptr IDAStatics::XShear2Rate ( double arg_0 );
__declspec(implementation_key(689)) IDATransform2Ptr IDAStatics::YShear2Anim ( struct IDANumber * arg_0 );
__declspec(implementation_key(690)) IDATransform2Ptr IDAStatics::YShear2 ( double arg_0 );
__declspec(implementation_key(691)) IDATransform2Ptr IDAStatics::YShear2Rate ( double arg_0 );
__declspec(implementation_key(692)) IDATransform2Ptr IDAStatics::Transform3x2AnimEx ( long m_0size, struct IDANumber * * m_0 );
__declspec(implementation_key(693)) IDATransform2Ptr IDAStatics::Transform3x2Anim ( const _variant_t & m_0 );
__declspec(implementation_key(694)) IDATransform2Ptr IDAStatics::Compose2 ( struct IDATransform2 * a_0, struct IDATransform2 * b_1 );
__declspec(implementation_key(695)) IDATransform2Ptr IDAStatics::Compose2ArrayEx ( long xfs_0size, struct IDATransform2 * * xfs_0 );
__declspec(implementation_key(696)) IDATransform2Ptr IDAStatics::Compose2Array ( const _variant_t & xfs_0 );
__declspec(implementation_key(697)) IDATuplePtr IDAStatics::Tuple ( const _variant_t & obsolete1 );
__declspec(implementation_key(698)) IDAArrayPtr IDAStatics::Array ( const _variant_t & obsolete1 );
__declspec(implementation_key(699)) VARIANT_BOOL IDAStatics::GetAreBlockingImportsComplete ( );
__declspec(implementation_key(700)) IDAGeometryPtr IDA2Statics::ImportDirect3DRMVisual ( IUnknown * visual );
__declspec(implementation_key(701)) IDADXTransformResultPtr IDA2Statics::ApplyDXTransformEx ( IUnknown * theXf, long numInputs, struct IDABehavior * * inputs, struct IDANumber * evaluator );
__declspec(implementation_key(702)) IDADXTransformResultPtr IDA2Statics::ApplyDXTransform ( const _variant_t & varXf, const _variant_t & inputs, const _variant_t & evaluator );
__declspec(implementation_key(703)) IDANumberPtr IDA2Statics::ModifiableNumber ( double initVal );
__declspec(implementation_key(704)) IDAStringPtr IDA2Statics::ModifiableString ( _bstr_t initVal );
__declspec(implementation_key(705)) IDAArrayPtr IDA2Statics::DAArrayEx2 ( long s, struct IDABehavior * * pBvrs, unsigned long dwFlags );
__declspec(implementation_key(706)) IDAArrayPtr IDA2Statics::DAArray2 ( const _variant_t & bvrs, unsigned long dwFlags );
__declspec(implementation_key(707)) IDAGeometryPtr IDA2Statics::ImportGeometryWrapped ( _bstr_t url, long wrapType, double originX, double originY, double originZ, double zAxisX, double zAxisY, double zAxisZ, double yAxisX, double yAxisY, double yAxisZ, double texOriginX, double texOriginY, double texScaleX, double texScaleY, unsigned long Flags );
__declspec(implementation_key(708)) IDAImportationResultPtr IDA2Statics::ImportGeometryWrappedAsync ( _bstr_t url, long wrapType, double originX, double originY, double originZ, double zAxisX, double zAxisY, double zAxisZ, double yAxisX, double yAxisY, double yAxisZ, double texOriginX, double texOriginY, double texScaleX, double texScaleY, unsigned long Flags, struct IDAGeometry * pGeoStandIn );
__declspec(implementation_key(709)) IDAGeometryPtr IDA2Statics::ImportDirect3DRMVisualWrapped ( IUnknown * visual, long wrapType, double originX, double originY, double originZ, double zAxisX, double zAxisY, double zAxisZ, double yAxisX, double yAxisY, double yAxisZ, double texOriginX, double texOriginY, double texScaleX, double texScaleY, unsigned long Flags );
__declspec(implementation_key(710)) IDABehaviorPtr IDA2Statics::UntilNotifyScript ( struct IDABehavior * b0_0, struct IDAEvent * event_1, _bstr_t scriptlet_2 );
__declspec(implementation_key(711)) IDANumberPtr IDA2Statics::GetViewFrameRate ( );
__declspec(implementation_key(712)) IDAMontagePtr IDA2Statics::UnionMontageArrayEx ( long mtgs_0size, struct IDAMontage * * mtgs_0 );
__declspec(implementation_key(713)) IDAMontagePtr IDA2Statics::UnionMontageArray ( const _variant_t & mtgs_0 );
__declspec(implementation_key(714)) unsigned long IDA2Statics::GetModifiableBehaviorFlags ( );
__declspec(implementation_key(715)) void IDA2Statics::PutModifiableBehaviorFlags ( unsigned long dwFlags );
__declspec(implementation_key(716)) IDAColorPtr IDA2Statics::GetEmptyColor ( );
__declspec(implementation_key(717)) IDAImportationResultPtr IDA3Statics::ImportSoundStream ( _bstr_t url );
__declspec(implementation_key(718)) IDAImportationResultPtr IDA3Statics::ImportMovieStream ( _bstr_t url );
__declspec(implementation_key(719)) IDABehaviorPtr IDA3Statics::SequenceArrayEx ( long sz, struct IDABehavior * * bvrs_0 );
__declspec(implementation_key(720)) IDABehaviorPtr IDA3Statics::SequenceArray ( const _variant_t & bvrs_0 );
__declspec(implementation_key(721)) IDANumberPtr IDA3Statics::GetViewTimeDelta ( );
__declspec(implementation_key(722)) IDAGeometryPtr IDA3Statics::TriMesh ( int nTriangles, const _variant_t & positions, const _variant_t & normals, const _variant_t & UVs, const _variant_t & indices );
__declspec(implementation_key(723)) IDAGeometryPtr IDA3Statics::TriMeshEx ( int nTriangles, int nPositions, float * positions, int nNormals, float * normals, int nUVs, float * UVs, int nIndices, int * indices );
__declspec(implementation_key(724)) IDAImagePtr IDA3Statics::RadialGradientMulticolor ( const _variant_t & offsets, const _variant_t & colors );
__declspec(implementation_key(725)) IDAImagePtr IDA3Statics::RadialGradientMulticolorEx ( int nOffsets, struct IDANumber * * offsets, int nColors, struct IDAColor * * colors );
__declspec(implementation_key(726)) IDAImagePtr IDA3Statics::LinearGradientMulticolor ( const _variant_t & offsets, const _variant_t & colors );
__declspec(implementation_key(727)) IDAImagePtr IDA3Statics::LinearGradientMulticolorEx ( int nOffsets, struct IDANumber * * offsets, int nColors, struct IDAColor * * colors );
__declspec(implementation_key(728)) double IDAViewerControl::GetUpdateInterval ( );
__declspec(implementation_key(729)) void IDAViewerControl::PutUpdateInterval ( double pVal );
__declspec(implementation_key(730)) IDAViewPtr IDAViewerControl::GetView ( );
__declspec(implementation_key(731)) void IDAViewerControl::PutView ( struct IDAView * ppView );
__declspec(implementation_key(732)) IDAImagePtr IDAViewerControl::GetImage ( );
__declspec(implementation_key(733)) void IDAViewerControl::PutImage ( struct IDAImage * ppImage );
__declspec(implementation_key(734)) IDAImagePtr IDAViewerControl::GetBackgroundImage ( );
__declspec(implementation_key(735)) void IDAViewerControl::PutBackgroundImage ( struct IDAImage * ppImage );
__declspec(implementation_key(736)) IDASoundPtr IDAViewerControl::GetSound ( );
__declspec(implementation_key(737)) void IDAViewerControl::PutSound ( struct IDASound * ppSound );
__declspec(implementation_key(738)) IDAStaticsPtr IDAViewerControl::GetPixelLibrary ( );
__declspec(implementation_key(739)) IDAStaticsPtr IDAViewerControl::GetMeterLibrary ( );
__declspec(implementation_key(740)) HRESULT IDAViewerControl::AddBehaviorToRun ( struct IDABehavior * pBehavior );
__declspec(implementation_key(741)) HRESULT IDAViewerControl::Start ( );
__declspec(implementation_key(742)) IDAImagePtr IDAViewerControl::GetInputImage ( );
__declspec(implementation_key(743)) VARIANT_BOOL IDAViewerControl::GetOpaqueForHitDetect ( );
__declspec(implementation_key(744)) void IDAViewerControl::PutOpaqueForHitDetect ( VARIANT_BOOL b );
__declspec(implementation_key(745)) DA_TIMER_SOURCE IDAViewerControl::GetTimerSource ( );
__declspec(implementation_key(746)) void IDAViewerControl::PutTimerSource ( DA_TIMER_SOURCE ts );
__declspec(implementation_key(747)) HRESULT IDAViewerControl::RegisterErrorHandler ( _bstr_t scriptlet );
__declspec(implementation_key(748)) HRESULT IDA2ViewerControl::SetPreference ( _bstr_t pref, const _variant_t & val );
__declspec(implementation_key(749)) _variant_t IDA2ViewerControl::GetPreference ( _bstr_t pref );
__declspec(implementation_key(750)) HRESULT IDA2ViewerControlWindowed::SetPreference ( _bstr_t pref, const _variant_t & val );
__declspec(implementation_key(751)) _variant_t IDA2ViewerControlWindowed::GetPreference ( _bstr_t pref );
__declspec(implementation_key(752)) HRESULT IDA3ViewerControl::Stop ( );
__declspec(implementation_key(753)) HRESULT IDA3ViewerControl::Pause ( );
__declspec(implementation_key(754)) HRESULT IDA3ViewerControl::Resume ( );
__declspec(implementation_key(755)) HRESULT IDA3ViewerControl::Tick ( );
__declspec(implementation_key(756)) HRESULT IDA3ViewerControlWindowed::Stop ( );
__declspec(implementation_key(757)) HRESULT IDA3ViewerControlWindowed::Pause ( );
__declspec(implementation_key(758)) HRESULT IDA3ViewerControlWindowed::Resume ( );
__declspec(implementation_key(759)) HRESULT IDA3ViewerControlWindowed::Tick ( );
__declspec(implementation_key(760)) HRESULT _IDAViewerControlEvents::Start ( );
__declspec(implementation_key(761)) HRESULT _IDAViewerControlEvents::MouseUp ( long button, long KeyFlags, long X, long Y );
__declspec(implementation_key(762)) HRESULT _IDAViewerControlEvents::MouseDown ( long button, long KeyFlags, long X, long Y );
__declspec(implementation_key(763)) HRESULT _IDAViewerControlEvents::MouseMove ( long button, long KeyFlags, long X, long Y );
__declspec(implementation_key(764)) HRESULT _IDAViewerControlEvents::Click ( );
__declspec(implementation_key(765)) HRESULT _IDAViewerControlEvents::KeyPress ( long KeyAscii );
__declspec(implementation_key(766)) HRESULT _IDAViewerControlEvents::KeyUp ( long KeyCode, long KeyData );
__declspec(implementation_key(767)) HRESULT _IDAViewerControlEvents::KeyDown ( long KeyCode, long KeyData );
__declspec(implementation_key(768)) HRESULT _IDAViewerControlEvents::Error ( long HResult, _bstr_t ErrorString );
__declspec(implementation_key(769)) HRESULT _IDAViewerControlEvents::Stop ( );
__declspec(implementation_key(770)) HRESULT _IDAViewerControlEvents::Pause ( );
__declspec(implementation_key(771)) HRESULT _IDAViewerControlEvents::Resume ( );
#pragma stop_map_region

} // namespace DAnim

#pragma pack(pop)
