I made quite a few changes to the implementation of IPropertyPageSite
in GraphEdt. This now reflects the protocol intended by OLE.

Refer to "\\ole\specs\draft\Interface Specification for OLE Controls.doc",
which is by far the best documentation I have found on this.

A few things I have noticed in existing property pages, which will break
with my new version.

IPropertyPage::TranslateAccelerator - should return E_NOTIMPL if it doesn't
        process any messages, S_FALSE if it doesn't use this message and
	S_OK if if this message was used.

IPropertyPage::SetObjects - If called with parameter 0 all
	addref'ed pointers from a previous SetObjects call should be released.

	SetObjects will be called twice. Once with the pointers, second time
	with 0 to release them.

	SetObjects should be for initialisation/clean up of the property
	page.

IPropertyPage::Show - can be used to show or hide the property page
	(when user is clicking between tabs). Only SW_SHOW, SW_SHOWNORMAL
	 and SW_HIDE are allowed as argument.

IPropertyPage::Activate - this can also be used to show and hide the property
	page and can therefore be used more than once during the lifetime
	of a property page. (it is actually the prefered mechanism to
	show/hide the pages, since memory is only needed for the visible
	page.

IPropertyPage::Deactivate - Destroys a window, but state of property
	page must be kept for next Activate call.

IPropertyPage::SetPageSite - This must addref the pointer given to it and
	release the pointer if the argument is NULL.

Please read the documentation from \\ole - it specifies which return codes
are allowed and which are not.

Jonathan has actually started (maybe even finished) to implement a class
which deals with most of these methods in order to make the property
pages easier and faster to create.


