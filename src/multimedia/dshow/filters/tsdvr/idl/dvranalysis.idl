
/*++

    Copyright (c) 2001 Microsoft Corporation

    Module Name:

        dvranalysis.idl

    Abstract:

        This module the analysis framework interface definitions & CLSIDs

    Author:

        Matthijs Gates  (mgates)

    Revision History:

        01-Feb-2001     created

--*/

import "unknwn.idl" ;
import "wtypes.idl" ;
import "objidl.idl" ;
import "strmif.idl" ;

interface IDVRAnalyze ;
interface IDVRAnalysisBuffer ;
interface IDVRAnalysisBufferEx ;

cpp_quote ("// {6CFAD761-735D-4aa5-8AFC-AF91A7D61EBA}")
cpp_quote ("DEFINE_GUID(CLSID_DVRMpeg2VideoFrameAnalysis,")
cpp_quote ("0x6cfad761, 0x735d, 0x4aa5, 0x8a, 0xfc, 0xaf, 0x91, 0xa7, 0xd6, 0x1e, 0xba);")

cpp_quote ("// {163AB04A-6601-43fc-8710-96B281D0A765}")
cpp_quote ("DEFINE_GUID(CLSID_DVRAnalysisFilter,")
cpp_quote ("0x163ab04a, 0x6601, 0x43fc, 0x87, 0x10, 0x96, 0xb2, 0x81, 0xd0, 0xa7, 0x65);")

cpp_quote ("// {34E3B4A1-9F47-4e80-A0EC-FADD49B2CA29}")
cpp_quote ("DEFINE_GUID(CLSID_DVRAnalysisFilterFactory,")
cpp_quote ("0x34e3b4a1, 0x9f47, 0x4e80, 0xa0, 0xec, 0xfa, 0xdd, 0x49, 0xb2, 0xca, 0x29);")

[
    object,
    uuid(7d682d10-da8e-4865-a13c-fea0c5fc9990),
    pointer_default(unique)
]
interface IDVRAnalysisFilterHostFactory : IUnknown
{
    HRESULT
    InstantiateFilterHost (
        [in]    IUnknown *  punkAnalysisLogic,
        [in]    LPCWSTR     pszLogicName,
        [out]   IUnknown ** ppunkAnalysisHostFilter
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRANALYSISFILTERHOSTFACTORY() \\")
cpp_quote ("virtual STDMETHODIMP InstantiateFilterHost (IUnknown *, LPCWSTR, IUnknown **) ;")


//  wraps IMediaSample2
[
    object,
    uuid(7808403b-c95b-4493-918e-8d01051b28cd),
    pointer_default(unique)
]
interface IDVRAnalysisBuffer : IUnknown
{
    HRESULT
    IsDiscontinuity (
        [out]   BOOL *  pfDiscontinuity
        ) ;

    HRESULT
    GetBuffer (
        [out]   BYTE ** ppbBuffer
        ) ;

    HRESULT
    GetBufferLength (
        [in]    LONG *  plBufferLen
        ) ;

    HRESULT
    Mark (
        [in]    LONG            lBufferOffset,
        [in]    const GUID *    pguidAttribute
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRANALYSISBUFFER()    \\")
cpp_quote ("virtual STDMETHODIMP IsDiscontinuity (BOOL *) ; \\")
cpp_quote ("virtual STDMETHODIMP GetBuffer (BYTE **) ; \\")
cpp_quote ("virtual STDMETHODIMP GetBufferLength (LONG *) ; \\")
cpp_quote ("virtual STDMETHODIMP Mark (LONG, const GUID *) ;")

[
    object,
    uuid(bfc89f48-481a-43a3-9270-35f788b3b1c0),
    pointer_default(unique)
]
interface IDVRAnalysisBufferPriv : IDVRAnalysisBuffer
{
    HRESULT
    GetWrappedMediaSample (
        [out]   IMediaSample ** ppIMediaSample  //  ref'd
        ) ;

    HRESULT
    GetAttribute (
        [in]    LONG    lIndex,
        [out]   LONG *  plBufferOffset,
        [out]   GUID *  pguidAttribute
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRANALYSISBUFFERPRIV()    \\")
cpp_quote ("DECLARE_IDVRANALYSISBUFFER() \\")
cpp_quote ("virtual STDMETHODIMP GetWrappedMediaSample (IMediaSample **) ; \\")
cpp_quote ("virtual STDMETHODIMP GetAttribute (LONG, LONG *, GUID *) ;")

//  implemented by the analysis logic
[
    object,
    uuid(917e8b35-0da4-4e1d-a148-b59604bc178a),
    pointer_default(unique)
]
interface IDVRAnalyze : IUnknown
{
    HRESULT
    Analyze (
        [in]    IDVRAnalysisBuffer *    pIDVRAnalysisBuffer,
        [in]    BOOL                    fDiscontinuity
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRANALYZE() \\")
cpp_quote ("virtual STDMETHODIMP Analyze (IDVRAnalysisBuffer *, BOOL) ;")

//  implemented by the logic-hosting layer
[
    object,
    uuid(4a3a810b-bef8-4d0f-9095-a88e7b2ba924),
    pointer_default(unique)
]
interface IDVRPostAnalysisSend : IUnknown
{
    HRESULT
    CompleteAnalysis (
        [in]    IDVRAnalysisBuffer *    pIOwningAnalysisBuffer
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRPOSTANALYSISSEND()  \\")
cpp_quote ("virtual STDMETHODIMP CompleteAnalysis (IDVRAnalysisBuffer *) ;")

//  ============================================================================
//  known types of analysis

//  GOP header / I-frame
cpp_quote ("// {DC7615EA-31DD-42d4-88BF-61E80C59EEB9}")
cpp_quote ("DEFINE_GUID(DVRAnalysis_Mpeg2GOP,")
cpp_quote ("0xdc7615ea, 0x31dd, 0x42d4, 0x88, 0xbf, 0x61, 0xe8, 0xc, 0x59, 0xee, 0xb9);")

//  B-frames
cpp_quote ("// {AA5BF0C7-BDAD-41ce-A14C-5253B9C9B5AE}")
cpp_quote ("DEFINE_GUID(DVRAnalysis_Mpeg2_BFrame,")
cpp_quote ("0xaa5bf0c7, 0xbdad, 0x41ce, 0xa1, 0x4c, 0x52, 0x53, 0xb9, 0xc9, 0xb5, 0xae);")

//  P-frames
cpp_quote ("// {135FCFAB-C06C-4dba-A10B-EBC5CB1FEB69}")
cpp_quote ("DEFINE_GUID(DVRAnalysis_Mpeg2_PFrame,")
cpp_quote ("0x135fcfab, 0xc06c, 0x4dba, 0xa1, 0xb, 0xeb, 0xc5, 0xcb, 0x1f, 0xeb, 0x69);")

//  ============================================================================

typedef struct _DVR_ANALYSIS_DESC {
    GUID    guidAnalysis ;
    LPWSTR  pszDescription ;
} DVR_ANALYSIS_DESC ;

[
    object,
    uuid(7acea8ff-ff70-40da-b4c2-77f772dbf554),
    pointer_default(unique)
]
interface IDVRAnalysisLogicProp : IUnknown
{
    HRESULT
    GetDisplayName (
        [out]   LPWSTR *    ppszDisplayName
        ) ;

    HRESULT
    CheckMediaType (
        [in]    const AM_MEDIA_TYPE *   pMediaType,
        [out]   BOOL *                  pfAccept
        ) ;

    //  weak ref !!!!
    HRESULT
    SetPostAnalysisSend (
        [in]    IDVRPostAnalysisSend *
        ) ;

    HRESULT
    EnumAnalysis (
        [out]   LONG *                  plCount,
        [out]   DVR_ANALYSIS_DESC **    ppAnalysisDesc   //  callee allocates; caller deallocates
        ) ;
} ;

cpp_quote ("#define DECLARE_IDVRANALYSISLOGICPROP()   \\")
cpp_quote ("virtual STDMETHODIMP GetDisplayName (LPWSTR *) ; \\")
cpp_quote ("virtual STDMETHODIMP CheckMediaType (const AM_MEDIA_TYPE *, BOOL *) ; \\")
cpp_quote ("virtual STDMETHODIMP SetPostAnalysisSend (IDVRPostAnalysisSend *) ; \\")
cpp_quote ("virtual STDMETHODIMP EnumAnalysis (LONG *, DVR_ANALYSIS_DESC **) ;")
