// TveViewer.idl : IDL source for TveViewer.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (TveViewer.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"



import  "..\..\..\..\..\published\DXMDev\dshowdev\idl\MSTvE.idl";
//import  "..\..\..\..\..\public\sdk\inc\MSTvE.idl";	
//import "C:\Program Files\Microsoft Visual Studio\VC98\Include\Exdisp.IDL";
// import "Exdisp.IDL";


	[
		object,
		uuid(14AED0F3-E98F-4FA3-973F-AF8CE2FA24E6),
		dual,
		helpstring("ITveView Interface"),
		pointer_default(unique)
	]
	interface ITveView : IDispatch
	{
				// methods
	
		[propput, id(DISPID_AUTOSIZE)]
		HRESULT AutoSize([in]VARIANT_BOOL vbool);
		[propget, id(DISPID_AUTOSIZE)]
		HRESULT AutoSize([out,retval]VARIANT_BOOL* pbool);
		[propput, id(DISPID_BACKCOLOR)]
		HRESULT BackColor([in]OLE_COLOR clr);
		[propget, id(DISPID_BACKCOLOR)]
		HRESULT BackColor([out,retval]OLE_COLOR* pclr);
		[propput, id(DISPID_BORDERCOLOR)]
		HRESULT BorderColor([in]OLE_COLOR clr);
		[propget, id(DISPID_BORDERCOLOR)]
		HRESULT BorderColor([out, retval]OLE_COLOR* pclr);
		[propput, id(DISPID_BORDERSTYLE)]
		HRESULT BorderStyle([in]long style);
		[propget, id(DISPID_BORDERSTYLE)]
		HRESULT BorderStyle([out, retval]long* pstyle);
		[propput, id(DISPID_FILLCOLOR)]
		HRESULT FillColor([in]OLE_COLOR clr);
		[propget, id(DISPID_FILLCOLOR)]
		HRESULT FillColor([out, retval]OLE_COLOR* pclr);
		[propput, id(DISPID_FORECOLOR)]
		HRESULT ForeColor([in]OLE_COLOR clr);
		[propget, id(DISPID_FORECOLOR)]
		HRESULT ForeColor([out,retval]OLE_COLOR* pclr);
		[propput, id(DISPID_ENABLED)]
		HRESULT Enabled([in]VARIANT_BOOL vbool);
		[propget, id(DISPID_ENABLED)]
		HRESULT Enabled([out,retval]VARIANT_BOOL* pbool);
		[propget, id(DISPID_HWND)]
		HRESULT Window([out, retval]long* phwnd);
		[propput, id(DISPID_CAPTION)]
		HRESULT Caption([in]BSTR strCaption);
		[propget, id(DISPID_CAPTION)]
		HRESULT Caption([out,retval]BSTR* pstrCaption);

				// these are incoming sinkn events called by Supervisor ((_ITVEvents).. ID's Must match (I think)
		[id(2101),  helpstring("method NotifyTVETune")]					HRESULT NotifyTVETune([in] NTUN_Mode tuneMode, [in] ITVEService *pService, [in] BSTR bstrDescription, [in] BSTR bstrIPAdapter);
		[id(2102),  helpstring("method NotifyTVEEnhancementNew")]		HRESULT NotifyTVEEnhancementNew([in] ITVEEnhancement *pEnh);
		[id(2103),  helpstring("method NotifyTVEEnhancementUpdated")]	HRESULT NotifyTVEEnhancementUpdated([in] ITVEEnhancement *pEnh, [in] long lChangedFlags);	// changedFlags : NENH_grfDiff
		[id(2104),  helpstring("method NotifyTVEEnhancementStarting")]	HRESULT NotifyTVEEnhancementStarting([in] ITVEEnhancement *pEnh);
		[id(2105),  helpstring("method NotifyTVEEnhancementExpired")]	HRESULT NotifyTVEEnhancementExpired([in] ITVEEnhancement *pEnh);
		[id(2106),  helpstring("method NotifyTVETriggerNew")]			HRESULT NotifyTVETriggerNew([in] ITVETrigger *pTrigger,[in]  BOOL fActive);
		[id(2107),  helpstring("method NotifyTVETriggerUpdated")]		HRESULT NotifyTVETriggerUpdated([in] ITVETrigger *pTrigger,[in]  BOOL fActive, [in] long lChangedFlags);	// changedFlags : NTRK_grfDiff
		[id(2108),  helpstring("method NotifyTVETriggerExpired")]		HRESULT NotifyTVETriggerExpired([in] ITVETrigger *pTrigger,[in]  BOOL fActive);
		[id(2109),  helpstring("method NotifyTVEPackage")]				HRESULT NotifyTVEPackage([in] NPKG_Mode engPkgMode, [in] ITVEVariation *pVariation, [in] BSTR bstrUUID, [in] long  cBytesTotal, [in] long  cBytesReceived);
		[id(2110),  helpstring("method NotifyTVEFile")]					HRESULT NotifyTVEFile([in] NFLE_Mode engFileMode, [in] ITVEVariation *pVariation, [in] BSTR bstrUrlName, [in] BSTR bstrFileName);
		[id(2111),  helpstring("method NotifyTVEAuxInfo")]				HRESULT NotifyTVEAuxInfo([in] NWHAT_Mode engAuxInfoMode, [in] BSTR bstrAuxInfoString, [in] long lChangedFlags, [in] long lErrorLine);	// WhatIsIt is NWHAT_Mode - lChangedFlags is NENH_grfDiff or NTRK_grfDiff treated as error bits 


		// &DIID__ITVETreeEvents
		[id(2401), helpstring("method NotifyTVETreeTuneTrigger")]		HRESULT NotifyTVETreeTuneTrigger([in] ITVETrigger *pTriggerFrom, [in] ITVETrigger *pTriggerTo);
		[id(2402), helpstring("method NotifyTVETreeTuneVariation")]		HRESULT NotifyTVETreeTuneVariation([in] ITVEVariation *pVariationFrom, [in] ITVEVariation *pVariationTo);
		[id(2403), helpstring("method NotifyTVETreeTuneEnhancement")]	HRESULT NotifyTVETreeTuneEnhancement([in] ITVEEnhancement *pEnhancementFrom, [in] ITVEEnhancement *pEnhancementTo);
		[id(2404), helpstring("method NotifyTVETreeTuneService")]		HRESULT NotifyTVETreeTuneService([in] ITVEService *pServiceFrom, [in] ITVEService *pServiceTo);


		// &DIID_DWebBrowserEvents2, 

		[id(0x66),  helpstring("method")] HRESULT NotifyStatusTextChange(BSTR Text);
		[id(0x6c),  helpstring("method")]  HRESULT NotifyProgressChange(LONG Progress, LONG ProgressMax);
		[id(0x69),  helpstring("method")]  HRESULT NotifyCommandStateChange(LONG Command, VARIANT_BOOL Enable);
		[id(0x6a),  helpstring("method")]  HRESULT NotifyDownloadBegin();
		[id(0x68),  helpstring("method")]  HRESULT NotifyDownloadComplete();
		[id(0x71),  helpstring("method")]  HRESULT NotifyTitleChange(BSTR Text);
		[id(0x70),  helpstring("method")]  HRESULT NotifyPropertyChange(BSTR szProperty);
		[id(0xfa),  helpstring("method")]  HRESULT NotifyBeforeNavigate2(IDispatch * pDisp, VARIANT * URL, VARIANT * Flags, VARIANT * TargetFrameName, VARIANT * PostData, VARIANT * Headers, VARIANT_BOOL * Cancel);
		[id(0xfb),  helpstring("method")]  HRESULT NotifyNewWindow2(IDispatch * * ppDisp, VARIANT_BOOL * Cancel);
		[id(0xfc),  helpstring("method")]  HRESULT NotifyNavigateComplete2(IDispatch * pDisp, VARIANT * URL);
		[id(0x103), helpstring("method")]  HRESULT NotifyDocumentComplete(IDispatch * pDisp, VARIANT * URL);
		[id(0xfd),  helpstring("method")]  HRESULT NotifyOnQuit();
		[id(0xfe),  helpstring("method")]  HRESULT NotifyOnVisible(VARIANT_BOOL Visible);
		[id(0xff),  helpstring("method")]  HRESULT NotifyOnToolBar(VARIANT_BOOL ToolBar);
		[id(0x100), helpstring("method")]  HRESULT NotifyOnMenuBar(VARIANT_BOOL MenuBar);
		[id(0x101), helpstring("method")]  HRESULT NotifyOnStatusBar(VARIANT_BOOL StatusBar);
		[id(0x102), helpstring("method")]  HRESULT NotifyOnFullScreen(VARIANT_BOOL FullScreen);
		[id(0x104), helpstring("method")]  HRESULT NotifyOnTheaterMode(VARIANT_BOOL TheaterMode);

	};

[
	uuid(19557179-D237-4EC8-820B-68095093691D),
	version(1.0),
	helpstring("TveViewer 1.0 Type Library")
]
library TveViewerLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(74774DCC-1580-4EC5-AC70-F7364A2D4451),
		helpstring("TveView Class")
	]
	coclass TveView
	{
		[default] interface ITveView;
		interface _ITVEEvents;				// incoming atvef events
//		interface DWebBrowserEvents2;
//		interface IWebBrowser2
	};
};
