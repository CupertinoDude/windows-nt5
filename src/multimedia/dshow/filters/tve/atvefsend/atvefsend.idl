// ATVEFSend.idl : IDL source for ATVEFSend.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (ATVEFSend.tlb) and marshalling code.

cpp_quote("//+-------------------------------------------------------------------------")
cpp_quote("//")
cpp_quote("//  Microsoft Windows")
cpp_quote("//  Copyright (C) Microsoft Corporation, 1999.")
cpp_quote("//")
cpp_quote("//--------------------------------------------------------------------------")

		// forward declarations
interface IATVEFPackage;
interface IATVEFAnnouncement;
//interface IATVEFAttrMap;
interface IATVEFAttrList;
interface IATVEFMedia;

#define COLLECTID_Item		DISPID_VALUE	// (0)	
#define COLLECTID_Count		1				// standard set of collection interfaces
#define COLLECTID_Add		2
#define COLLECTID_Remove	3
#define COLLECTID_RemoveAll	4				// extra for maps
#define COLLECTID_Key		5	
#define COLLECTID_Replace	6		

import "oaidl.idl";
import "ocidl.idl";

	[
		object,
		uuid(D158EA99-A18F-4924-AFC5-490CD22AD94C),
		dual,
		helpstring("IATVEFPackage Interface"),
		pointer_default(unique)
	]
	interface IATVEFPackage : IDispatch
	{
		[		  id(1), helpstring("method Initialize")]	HRESULT Initialize([in] DATE MimeContentExpires);
		[		  id(2), helpstring("method InitializeEx")]	HRESULT InitializeEx([in] DATE MimeContentExpires, [in] long cPacketsPerXORSet, [in] BSTR bstrPackageUUID);
		[propget, id(3), helpstring("property PackageUUID")]	HRESULT PackageUUID([out, retval] BSTR *pbstrPackageUUID);
		[		  id(4), helpstring("method AddFile")]		HRESULT AddFile([in] BSTR bstrFilename, [in] BSTR bstrSourceLocation, [in] BSTR bstrMIMEContentLocation, [in] BSTR bstrMIMEContentType, [in] DATE dateExpires, [in] LONG lMIMEContentLanguageId, [in] BOOL fCompress);
		[		  id(5), helpstring("method AddDir")]		HRESULT AddDir([in] BSTR bstrSourceDirname, [in] BSTR bstrMIMEContentLocation, [in] DATE dateExpires, [in] LONG lMIMEContentLanguageId, [in] BOOL fCompress);
		[		  id(6), helpstring("method Close")]		HRESULT Close();
		[		  id(7), helpstring("method TransmitTime")]	HRESULT TransmitTime([in] float rExpectedTransmissionBitRate, [out, retval] float* prTransmissionTimeSeconds);
		[		  id(8), helpstring("method DumpToBSTR")]	HRESULT DumpToBSTR([out] BSTR *pVal);
	};

	[
		object,  
		uuid(42CD67CB-4290-4034-A069-2304F5B6E8F1),
		dual,
		helpstring("IATVEFPackage_Helper Interface"),
		pointer_default(unique)
	]
	interface IATVEFPackage_Helper : IUnknown
	{
		[id(1), helpstring("method Lock")]   HRESULT Lock();
		[id(2), helpstring("method Unlock")] HRESULT Unlock();
		[id(3), helpstring("method ResetDatagramFetch")] HRESULT ResetDatagramFetch();
		[id(4), helpstring("method FetchNextDatagram")]  HRESULT FetchNextDatagram([out] BSTR *pVal, [out] int *piLengthBytes);	// inefficent, but easy
	};

	[
		object,  hidden, restricted, 
		uuid(8266F7E4-B819-4156-AB8A-35A23BDF6C87), 
		dual,
		helpstring("IATVEFPackage_Test Interface"),
		pointer_default(unique)
	]
	interface IATVEFPackage_Test : IUnknown
	{
		[id(1), helpstring("method GetCorruptMode")] HRESULT GetCorruptMode([in] LONG nPacket, [out] INT* bMode);
		[id(2), helpstring("method get_NPackets")]	HRESULT get_NPackets([out] LONG *pcPackets);
		[id(3), helpstring("method CorruptPacket")]	HRESULT CorruptPacket([in] LONG nPacketID, [in] INT bMode);
		[id(4), helpstring("method AddExtensionHeader")] HRESULT AddExtensionHeader(
									[in] BOOL ExtHeaderFollows, [in] USHORT	ExtHeaderType, 
									[in] USHORT	ExtDataLength, [in] BSTR ExtHeaderData);
	};

	[
		object,
		uuid(841853FA-233D-4FEB-AEC5-996A92A88B9F),
		dual,
		helpstring("IATVEFAnnouncement Interface"),
		pointer_default(unique)
	]
	interface IATVEFAnnouncement : IDispatch
	{
		[propget, id(1), helpstring("property SAPMessageIDHash")]	HRESULT SAPMessageIDHash([out, retval] SHORT *pVal);
		[propput, id(1), helpstring("property SAPMessageIDHash")]	HRESULT SAPMessageIDHash([in] SHORT newVal);
		[propget, id(2), helpstring("property SAPSendingIP")]		HRESULT SAPSendingIP([out, retval] LONG *pVal);
		[propput, id(2), helpstring("property SAPSendingIP")]		HRESULT SAPSendingIP([in] LONG newVal);
		[propget, id(3), helpstring("property SAPDeleteAnnc")]		HRESULT SAPDeleteAnnc([out, retval] BOOL *pVal);
		[propput, id(3), helpstring("property SAPDeleteAnnc")]		HRESULT SAPDeleteAnnc([in] BOOL newVal);

		[propget, id(4), helpstring("property SendingIP")]		HRESULT SendingIP([out, retval] LONG *pVal);
		[propput, id(4), helpstring("property SendingIP")]		HRESULT SendingIP([in] LONG newVal);
		[propget, id(5), helpstring("property SessionVersion")]	HRESULT SessionVersion([out, retval] INT *pVal);	// new name
		[propput, id(5), helpstring("property SessionVersion")]	HRESULT SessionVersion([in] INT newVal);
		[propget, id(6), helpstring("property SessionURL")]		HRESULT SessionURL([out, retval] BSTR *pVal);
		[propput, id(6), helpstring("property SessionURL")]		HRESULT SessionURL([in] BSTR newVal);

		[propget, id(7), helpstring("property MaxCacheSize")]	HRESULT MaxCacheSize([out, retval] LONG *pVal);
		[propput, id(7), helpstring("property MaxCacheSize")]	HRESULT MaxCacheSize([in] LONG newVal);
		[propget, id(8), helpstring("property ContentLevelID")] HRESULT ContentLevelID([out, retval] float *pVal);
		[propput, id(8), helpstring("property ContentLevelID")] HRESULT ContentLevelID([in] float newVal);
		[propget, id(9), helpstring("property LangID")]			HRESULT LangID([out, retval] SHORT *pVal);
		[propput, id(9), helpstring("property LangID")]			HRESULT LangID([in] SHORT newVal);
		[propget, id(10), helpstring("property SDPLangID")]		HRESULT SDPLangID([out, retval] SHORT *pVal);
		[propput, id(10), helpstring("property SDPLangID")]		HRESULT SDPLangID([in] SHORT newVal);
		[propget, id(11), helpstring("property Primary")]		HRESULT Primary([out, retval] BOOL *pVal);
		[propput, id(11), helpstring("property Primary")]		HRESULT Primary([in] BOOL newVal);
		[propget, id(12), helpstring("property SecondsToEnd")]	HRESULT SecondsToEnd([out, retval] INT *pVal);
		[propput, id(12), helpstring("property SecondsToEnd")]	HRESULT SecondsToEnd([in] INT newVal);
		[propget, id(13), helpstring("property SessionLabel")]	HRESULT SessionLabel([out, retval] BSTR *pVal);
		[propput, id(13), helpstring("property SessionLabel")]	HRESULT SessionLabel([in] BSTR newVal);
		[propget, id(14), helpstring("property UUID")]			HRESULT UUID([out, retval] BSTR *pVal);
		[propput, id(14), helpstring("property UUID")]			HRESULT UUID([in] BSTR newVal);
					// new properties since ATVEFSnd
		[propget, id(15), helpstring("property SessionName")]	HRESULT SessionName([out, retval] BSTR *pVal);
		[propput, id(15), helpstring("property SessionName")]	HRESULT SessionName([in] BSTR newVal);
		[propget, id(16), helpstring("property SessionID")]		HRESULT SessionID([out, retval] INT *pVal);
		[propput, id(16), helpstring("property SessionID")]		HRESULT SessionID([in] INT newVal);
		[propget, id(17), helpstring("property UserName")]		HRESULT UserName([out, retval] BSTR *pVal);
		[propput, id(17), helpstring("property UserName")]		HRESULT UserName([in] BSTR newVal);

		[id(23), helpstring("method AddStartStopTime")]			HRESULT AddStartStopTime([in] DATE dtStart, [in] DATE dtEnd);		// new (split from StartStop)
		[id(24), helpstring("method GetStartStopTime")]			HRESULT GetStartStopTime([in] int iLoc, [out] DATE *pdtStart, [out] DATE *pdtEnd);

		[id(25), helpstring("method AddEmailAddress")]			HRESULT AddEmailAddress([in] BSTR bstrName, [in] BSTR bstrAddress);
		[id(26), helpstring("method AddPhoneNumber")]			HRESULT AddPhoneNumber([in] BSTR bstrName, [in] BSTR bstrPhoneNumber);
		[id(27), helpstring("method AddExtraAttribute")]		HRESULT AddExtraAttribute([in] BSTR bstrKey, [in] BSTR bstrValue);

		[id(28), helpstring("method ConfigureDataAndTriggerTransmission")] HRESULT ConfigureDataAndTriggerTransmission([in] LONG IP, [in] SHORT Port, [in] INT Ttl, [in] LONG MaxBitRate);
		[id(29), helpstring("method ConfigureDataTransmission")]		HRESULT ConfigureDataTransmission([in] LONG IP, [in] SHORT Port, [in] INT Ttl, [in] LONG MaxBitRate);
		[id(30), helpstring("method ConfigureTriggerTransmission")]		HRESULT ConfigureTriggerTransmission([in] LONG IP, [in] SHORT Port, [in] INT Ttl, [in] LONG MaxBitRate);
		[id(31), helpstring("method ConfigureAnncTransmission")]		HRESULT ConfigureAnncTransmission([in] LONG IP,[in]  SHORT Port, [in] INT Ttl, [in] LONG MaxBitRate); // new
	
		[id(32), helpstring("method ClearTimes")]					HRESULT ClearTimes();
		[id(33), helpstring("method ClearEmailAddresses")]			HRESULT ClearEmailAddresses();
		[id(34), helpstring("method ClearPhoneNumbers")]			HRESULT ClearPhoneNumbers();
		[id(35), helpstring("method ClearExtraAttributes")]			HRESULT ClearExtraAttributes();

					// new methods since ATVEFSnd

		[propget, id(36), helpstring("property EmailAddresses")]	HRESULT EmailAddresses([out, retval] IDispatch* *pVal);				// returns IATVEFAttrList*
		[propget, id(37), helpstring("property PhoneNumbers")]		HRESULT PhoneNumbers([out, retval] IDispatch* *pVal);				// returns IATVEFAttrList*
		[propget, id(38), helpstring("property ExtraAttributes")]	HRESULT ExtraAttributes([out, retval] IDispatch* *pVal);			// returns IATVEFAttrList*


		[propget, id(40), helpstring("property MediaCount")]		HRESULT MediaCount([out, retval] LONG* pVal);
		[propget, id(41), helpstring("property Media")]				HRESULT Media([in] LONG iLoc, [out, retval] IATVEFMedia* *pVal);
		[id(42), helpstring("property SetCurrentMedia")]			HRESULT SetCurrentMedia([in] LONG iLoc);
	


		[id(51), helpstring("method DumpToBSTR")]					HRESULT DumpToBSTR([out] BSTR *pVal);
		[id(52), helpstring("method AnncToBSTR")]					HRESULT AnncToBSTR([out] BSTR *pVal);

					// new methods since AtvefSend 2.0
		[propget, id(55), helpstring("property ExtraAttributes")]	HRESULT ExtraFlags([out, retval] IDispatch* *pVal);					// returns IATVEFAttrList*
		[         id(56), helpstring("method AddExtraFlag")]		HRESULT AddExtraFlag([in] BSTR bstrKey, [in] BSTR bstrValue);
		[         id(57), helpstring("method ClearExtraFlags")]		HRESULT ClearExtraFlags();

	};

				// ----------------------------------
	[
		object,
		uuid(9900A6AF-68B2-4EFA-BE07-C9621F3EE215),
		dual,
		helpstring("IATVEFMedia Interface"),
		pointer_default(unique)
	]
	interface IATVEFMedia : IDispatch
	{
		[id(1), helpstring("method ConfigureDataAndTriggerTransmission")] HRESULT ConfigureDataAndTriggerTransmission([in] LONG IP, [in] SHORT Port, [in] INT scope, [in] LONG MaxBitRate);
		[id(2), helpstring("method ConfigureDataTransmission")]		HRESULT ConfigureDataTransmission([in] LONG IP, [in] SHORT Port, [in] INT Scope, [in] LONG MaxBitRate);
		[id(3), helpstring("method ConfigureTriggerTransmission")]	HRESULT ConfigureTriggerTransmission([in] LONG IP, [in] SHORT Port, [in] INT Scope, [in] LONG MaxBitRate);
		[id(4), helpstring("method GetDataTransmission")]			HRESULT GetDataTransmission([out] LONG *pIP, [out] SHORT *pPort, [out] INT *pScope, [out] LONG *pMaxBitRate);
		[id(5), helpstring("method GetTriggerTransmission")]		HRESULT GetTriggerTransmission([out] LONG *pIP, [out] SHORT *pPort, [out] INT *pScope, [out] LONG *pMaxBitRate);

		[propget, id(6), helpstring("property MaxCacheSize")]		HRESULT MaxCacheSize([out, retval] LONG *pVal);
		[propput, id(6), helpstring("property MaxCacheSize")]		HRESULT MaxCacheSize([in] LONG newVal);
		[propget, id(9), helpstring("property LangID")]				HRESULT LangID([out, retval] SHORT *pVal);
		[propput, id(9), helpstring("property LangID")]				HRESULT LangID([in] SHORT newVal);
		[propget, id(10), helpstring("property SDPLangID")]			HRESULT SDPLangID([out, retval] SHORT *pVal);
		[propput, id(10), helpstring("property SDPLangID")]			HRESULT SDPLangID([in] SHORT newVal);
		[propget, id(13), helpstring("property MediaLabel")]		HRESULT MediaLabel([out, retval] BSTR *pVal);
		[propput, id(13), helpstring("property MediaLabel")]		HRESULT MediaLabel([in] BSTR newVal);


		[id(42), helpstring("method MediaToBSTR")]					HRESULT MediaToBSTR([out] BSTR *pVal);

		// new methods since AtvefSend 2.0
			// extra 'a=key:value' attributes 
		[propget, id(45), helpstring("property ExtraAttributes")]	HRESULT ExtraAttributes([out, retval] IDispatch* *ppVal);			// returns IATVEFAttrList*
		[         id(46), helpstring("method AddExtraAttribute")]	HRESULT AddExtraAttribute([in] BSTR bstrKey, [in] BSTR bstrVal);
			// extra 'key=value' flags 
		[propget, id(47), helpstring("property ExtraFlags")]		HRESULT ExtraFlags([out, retval] IDispatch* *ppVal);					// returns IATVEFAttrList*
		[         id(48), helpstring("method AddExtraFlag")]		HRESULT AddExtraFlag([in] BSTR bstrKey, [in] BSTR bstrVal);
	};
					// ---------------------------------
	[
		object,
		uuid(020B4A37-D95A-4821-8D69-7FAA361FE467),
		dual,
		helpstring("IATVEFMedias Interface"),
		pointer_default(unique),
		hidden
	]
	interface IATVEFMedias : IDispatch			// mark this as private
	{
		[propget, id(DISPID_NEWENUM), restricted, helpstring("property _NewEnum")] HRESULT _NewEnum([out, retval] IUnknown **pCollection);
		[propget, id(COLLECTID_Count),  helpstring("property Count")]	HRESULT Count([out, retval] long *pVal);
		[propget, id(COLLECTID_Item),   helpstring("property Item")]	HRESULT Item([in] VARIANT var, [out, retval] IATVEFMedia * *pVal);
		[         id(COLLECTID_Add),    helpstring("method Add")]		HRESULT Add([in] IATVEFMedia *punk);
		[         id(COLLECTID_Remove), helpstring("method Remove")]	HRESULT Remove([in] VARIANT var);
	};
					// ---------------------------------
	[
		object,
		uuid(F5F32EEC-0512-430A-B901-B2790C6BA34B),
		dual,
		helpstring("IATVEFAttrMap Interface"),
		pointer_default(unique), 
		hidden
	]
	interface IATVEFAttrMap : IDispatch
	{
		[propget, id(DISPID_NEWENUM), restricted, helpstring("property _NewEnum")] HRESULT _NewEnum([out, retval] IUnknown **pCollection);
		[propget, id(COLLECTID_Count),     helpstring("property Count")]   HRESULT Count([out, retval] long *pVal);
		[propget, id(COLLECTID_Item),      helpstring("property Item")]    HRESULT Item([in] VARIANT var, [out, retval] BSTR *pVal);
		[propget, id(COLLECTID_Key),       helpstring("property Key")]     HRESULT Key([in] VARIANT var, [out, retval] BSTR *pKey);
		[         id(COLLECTID_Add),       helpstring("method Add")]       HRESULT Add([in] BSTR bstrKey, [in] BSTR bstrValue);
		[         id(COLLECTID_Replace),   helpstring("method Replace")]   HRESULT Replace([in] BSTR bstrKey, [in] BSTR bstrValue);
		[         id(COLLECTID_Remove),    helpstring("method Remove")]    HRESULT Remove([in] VARIANT var);
		[         id(COLLECTID_RemoveAll), helpstring("method RemoveAll")] HRESULT RemoveAll();
		[         id(7),				   helpstring("method Add1")]      HRESULT Add1(BSTR bstrValue);
		[         id(8),                   helpstring("method DumpToBSTR")] HRESULT DumpToBSTR([out, retval] BSTR *pDump);
	}; 
	[
		object,
		uuid(65CBFFD5-025B-40FB-A1E2-52BE96A84AFF),
		dual,
		helpstring("IATVEFAttrList Interface"),
		pointer_default(unique)
	]
	interface IATVEFAttrList : IDispatch
	{
		[propget, id(DISPID_NEWENUM), restricted, helpstring("property _NewEnum")] HRESULT _NewEnum([out, retval] IUnknown **pCollection);
		[propget, id(COLLECTID_Count),     helpstring("property Count")]   HRESULT Count([out, retval] long *pVal);
		[propget, id(COLLECTID_Item),      helpstring("property Item")]    HRESULT Item([in] VARIANT var, [out, retval] BSTR *pVal);
		[propget, id(COLLECTID_Key),       helpstring("property Key")]     HRESULT Key([in] VARIANT var, [out, retval] BSTR *pKey);
		[         id(COLLECTID_Add),       helpstring("method Add")]       HRESULT Add([in] BSTR bstrKey, [in] BSTR bstrValue);
		[         id(COLLECTID_Remove),    helpstring("method Remove")]    HRESULT Remove([in] VARIANT var);
		[         id(COLLECTID_RemoveAll), helpstring("method RemoveAll")] HRESULT RemoveAll();
		[         id(7),				   helpstring("method Add1")]      HRESULT Add1([in] BSTR bstrValue);
		[         id(8),                   helpstring("method DumpToBSTR")] HRESULT DumpToBSTR([out, retval] BSTR *pDump);
	};
	[
		object,
		uuid(A6D18E8F-9B32-49AD-BF7E-5E94E3FD5AED),
		dual,
		helpstring("IATVEFStartStopList Interface"),
		pointer_default(unique),
		hidden
	]
	interface IATVEFStartStopList : IDispatch
	{
		[propget, id(DISPID_NEWENUM), restricted, helpstring("property _NewEnum")] HRESULT _NewEnum([out, retval] IUnknown **pCollection);
		[propget, id(COLLECTID_Count),     helpstring("property Count")]   HRESULT Count([out, retval] long *pVal);
		[propget, id(COLLECTID_Item),      helpstring("property Item")]    HRESULT Item([in] VARIANT var, [out, retval] DATE *pVal);
		[propget, id(COLLECTID_Key),       helpstring("property Key")]     HRESULT Key([in] VARIANT var, [out, retval] DATE *pKey);
		[         id(COLLECTID_Add),       helpstring("method Add")]       HRESULT Add([in] DATE bstrKey, [in] DATE bstrValue);
		[         id(COLLECTID_Remove),    helpstring("method Remove")]    HRESULT Remove([in] VARIANT var);
		[         id(COLLECTID_RemoveAll), helpstring("method RemoveAll")] HRESULT RemoveAll();
		[         id(8),                   helpstring("method DumpToBSTR")] HRESULT DumpToBSTR([out, retval] BSTR *pDump);
	};
	[
		object,
		uuid(18166150-7B92-4536-AC63-DF8C215516D7),
		dual,
		helpstring("IATVEFMulticastSession Interface"),
		pointer_default(unique)
	]
	interface IATVEFMulticastSession : IDispatch
	{
		[id(1), helpstring("method Initialize")]		HRESULT Initialize([in] LONG NetworkInterface);
		[id(3), helpstring("method Connect")]			HRESULT Connect();
		[id(4), helpstring("method Disconnect")]		HRESULT Disconnect();
		[id(5), helpstring("method SendRawAnnouncement"), hidden]	HRESULT SendRawAnnouncement([in] BSTR bstrAnnouncement);
		[id(6), helpstring("method SendAnnouncement")]	HRESULT SendAnnouncement();
		[id(7), helpstring("method SetCurrentMedia")]	HRESULT SetCurrentMedia([in] LONG iMediaID );
		[id(8), helpstring("method SendPackage")]		HRESULT SendPackage([in] IATVEFPackage *pPackage);
		[id(9), helpstring("method SendTrigger")]		HRESULT SendTrigger([in] BSTR bstrURL, [in] BSTR bstrName, [in] BSTR bstrScript, [in] DATE dateExpires);
		[id(10), helpstring("method SendRawTrigger")]	HRESULT SendRawTrigger([in] BSTR bstrTrigger);
		[propget, id(11), helpstring("property Announcement")] HRESULT Announcement([out, retval] IDispatch* *pVal);
		[id(12), helpstring("method DumpToBSTR")]		HRESULT DumpToBSTR([out] BSTR *pVal);
	};
	[
		object,
		uuid(185E3A8B-cf58-4b09-96ec-72e2b3ea8001),
		dual,
		helpstring("IATVEFInserterSession Interface"),
		pointer_default(unique)
	]
	interface IATVEFInserterSession : IDispatch
	{
		[id(1), helpstring("method Initialize")]			HRESULT Initialize([in] LONG InserterIP, [in] SHORT InserterPort);
		[id(2), helpstring("method InitializeEx")]			HRESULT InitializeEx([in] LONG InserterIP, [in] SHORT InserterPort, [in] SHORT CompressionIndexMin, [in] SHORT CompressionIndexMax, [in] SHORT CompressedUncompressRatio);
		[id(3), helpstring("method Connect")]				HRESULT Connect();
		[id(4), helpstring("method Disconnect")]			HRESULT Disconnect();
		[id(5), helpstring("method SendRawAnnouncement"), hidden]	HRESULT SendRawAnnouncement([in] BSTR bstrAnnouncement);
		[id(6), helpstring("method SendAnnouncement")]		HRESULT SendAnnouncement();
		[id(7), helpstring("method SetCurrentMedia")]		HRESULT SetCurrentMedia([in] LONG iMediaID );
		[id(8), helpstring("method SendPackage")]			HRESULT SendPackage([in] IATVEFPackage *pPackage);
		[id(9), helpstring("method SendTrigger")]			HRESULT SendTrigger([in] BSTR bstrURL, [in] BSTR bstrName, [in] BSTR bstrScript, [in] DATE dateExpires);
		[id(10), helpstring("method SendRawTrigger")]		HRESULT SendRawTrigger([in] BSTR bstrTrigger);
		[propget, id(11), helpstring("property Announcement")] HRESULT Announcement([out, retval] IDispatch* *pVal);
		[id(12), helpstring("method DumpToBSTR")]			HRESULT DumpToBSTR([out] BSTR *pVal);
	};
	[
		object,
		uuid(F1F7472F-9F5A-4C8D-BC04-319BF09BE8DF),
		dual,
		helpstring("IATVEFLine21Session Interface"),
		pointer_default(unique)
	]
	interface IATVEFLine21Session : IDispatch
	{
		[id(1), helpstring("method Initialize")]				HRESULT Initialize([in] LONG InserterIP, [in] SHORT InserterPort);
		[id(2), helpstring("method Connect")]					HRESULT Connect();
		[id(3), helpstring("method Disconnect")]				HRESULT Disconnect();
		[id(4), helpstring("method SendTrigger")]				HRESULT SendTrigger([in] BSTR bstrURL, [in] BSTR bstrName, [in] BSTR bstrScript, [in] DATE dateExpires);
		[id(5), helpstring("method SendTriggerEx")]				HRESULT SendTriggerEx([in] BSTR bstrURL, [in] BSTR bstrName, [in] BSTR bstrScript, [in] DATE dateExpires, [in] double tveLevel);
		[id(6), helpstring("method SendRawTrigger")]			HRESULT SendRawTrigger([in] BSTR bstrTrigger, [in] BOOL fAppendCRC);
		[id(7), helpstring("method DumpToBSTR")]				HRESULT DumpToBSTR([out] BSTR *pVal);
	};
	[
		object,
		uuid(3EEDFB26-4165-46A5-B42C-080B2285DF5F),
		dual,
		helpstring("IATVEFRouterSession Interface"),
		pointer_default(unique),
		hidden
	]
	interface IATVEFRouterSession : IDispatch
	{
		[id(1), helpstring("method Initialize")]		HRESULT Initialize(BSTR bstrRouterHostname);
		[id(3), helpstring("method Connect")]			HRESULT Connect();
		[id(4), helpstring("method Disconnect")]		HRESULT Disconnect();
		[id(5), helpstring("method SendAnnouncement")]	HRESULT SendAnnouncement();
		[id(6), helpstring("method SetCurrentMedia")]	HRESULT SetCurrentMedia([in] LONG iMediaID );
		[id(7), helpstring("method SendPackage")]		HRESULT SendPackage([in] IATVEFPackage *pPackage);
		[id(8), helpstring("method SendTrigger")]		HRESULT SendTrigger([in] BSTR bstrURL, [in] BSTR bstrName, [in] BSTR bstrScript, [in] DATE dateExpires);
		[id(9), helpstring("method SendRawTrigger")]		HRESULT SendRawTrigger([in] BSTR bstrTrigger);
		[propget, id(10), helpstring("property Announcement")] HRESULT Announcement([out, retval] IDispatch* *pVal);
		[id(11), helpstring("method DumpToBSTR")]		HRESULT DumpToBSTR([out] BSTR *pVal);
	};


[
	uuid(DE587A32-6005-495C-8217-4ADF43B9DD8E),
	version(1.0),
	helpstring("Microsoft ATVEFSend 1.0 Type Library")
]
library ATVEFSENDLib
{
	importlib("stdole2.tlb");
			// --------------
	[
		uuid(66BC5B07-420B-4CF4-8A9B-1F94F7944E59),
		helpstring("ATVEFPackage Class")
	]
	coclass ATVEFPackage
	{
		[default] interface IATVEFPackage;
		interface IATVEFPackage_Test;
	};
			// --------------------
	[
		uuid(D97E715B-4FEF-4DF5-9F5E-FE3A77B05761),
		helpstring("ATVEFAnnouncement Class")
	]
	coclass ATVEFAnnouncement
	{
		[default] interface IATVEFAnnouncement;
	};
			// --------------
	[
		uuid(1E674E80-1F34-49D9-B103-50A3F4355688),
		helpstring("ATVEFMedia Class")
	]
	coclass ATVEFMedia
	{
		[default] interface IATVEFMedia;
	};
			// --------------
	[
		uuid(9188E8F5-CC1D-49B4-9266-DFA1F976C095),
		helpstring("ATVEFMedias Class"),
		hidden
	]
	coclass ATVEFMedias
	{
		[default] interface IATVEFMedias;
	};
			// --------------------
	[
		uuid(1B353FCE-317E-47F9-9CE8-8EF64F235FAC),
		hidden,
		helpstring("ATVEFAttrMap Class")
	]
	coclass ATVEFAttrMap
	{
		[default] interface IATVEFAttrMap;
	}; 
			// --------------
	[
		uuid(0B67A12A-0D68-4A58-B94E-1DF41E975021),
		helpstring("ATVEFAttrList Class")
	]
	coclass ATVEFAttrList
	{
		[default] interface IATVEFAttrList;
	};
			// --------------
	[
		uuid(045B72CD-9F49-4EFD-AE73-6F8A51514B41),
		helpstring("ATVEFStartStopList Class"),
		hidden
	]
	coclass ATVEFStartStopList
	{
		[default] interface IATVEFStartStopList;
	};
	
	// ---------------------------------- sessions ------------------
	[
		uuid(289D753B-9A31-43D2-8123-61D8F740A967),
		helpstring("ATVEFMulticastSession Class")
	]
	coclass ATVEFMulticastSession
	{
		[default] interface IATVEFMulticastSession;
	};

			// --------------
	[
		uuid(A1C25233-DD68-4855-83CD-FF6E4CB6B797),
		helpstring("ATVEFInserterSession Class")
	]
	coclass ATVEFInserterSession
	{
		[default] interface IATVEFInserterSession;
	};
			// --------------
	[  
		uuid(D4E7BAF2-533A-445B-B5D0-9553458E6901),
		helpstring("ATVEFLine21Session Class"),
	]
	coclass ATVEFLine21Session
	{
		[default] interface IATVEFLine21Session;
	};
			// --------------
	[
		uuid(5D4FA77F-F54D-47A4-9DD2-41247D5E4664),
		helpstring("ATVEFRouterSession Class"),
		hidden
	]
	coclass ATVEFRouterSession
	{
		[default] interface IATVEFRouterSession;
	};


}