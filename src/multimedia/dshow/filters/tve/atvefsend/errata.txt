ATVEFSend Errata

Last updated:
		Feb 28, 2000



Note 1) Trigger Character Encoding

According to the Spec, characters in trigger outside the range of 0x20 to 0x7e 
are to be encoded.  This is doen with standard Internet URL mechanism of the 
percent character ("%") followed by the two-digit hexadecimal value of the character
in standard ASCII (?? how different is this than ISO-8859-1 ??)   ATVEFSend does this
automatically.

Note possible Spec problems:
		In ATVEFSend, the characters '[', ']', and '%' are also escaped,
		even though they are within the range of 0x20 to 0x7e.  This makes parsing on the
		receiver side far easier..  

		The name string is encoded - this lets it contain values outside the range 0x20
		to 0x7e, and also lets it contain square brackets contrary to the spec.

	Receivers code should unencode all strings (name, URL, and script), and be able to 
	handle '%NN' encoded values that happen to be inside the 0x20 to 0x7e range.


Note 2) Max Trigger Length

All triggers are required to be less than 1480 or so bytes long. If they are longer, an 
ATVEFSEND_E_TRIGGER_TOO_LONG error will be returned.  Calculation of this max length
is a bit fuzzy by about 5-20 characters due to encoded characters and short/long keywords.
Hence strings that appear to be short enough may actually be rejected.



Note 3) Norpack Inserter Hangs or Refuses Connection on Initialize (error 0x8007274c)

Often the Norpack Inserter will hang during the Initialize call (for ATVEFInserterSession and 
ATVEFLine21Session).  This happens more often than not after breaking out of an established
connection instead of disconnecting nicely.  So far, the only way to fix things I've discovered
is to power cycle the inserter.


Note 4) Line21Session::SendTriggerEx - new method that takes TveLevel parameter

SendTriggerEx  (just for Line21Session) is like SendTrigger, but takes an additional argument. 
	[in] double rTveLevel.  
This should normally be 1.0 for ATVEF compient triggers, and 0.0 
for old pre-Atvef triggers, for sending to WebTV boxes. A value of 0.0 value causes no
[t:] field to be entered in the trigger at all.   Only 1 decimal place in the fraction
is supported.  SendTriggerEx should only be used for testing, non 1.0 values are not
Atvef Complient.


Note 5) Line21Session::SendTriggers - Automatically padded with Norpack control codes

Line21Session::SendTrigger automatically pads the constructed trigger string
with correct characters for sending on Norpack encoders,  
		   The header padding prepended to is : "2 t2\r"
		   The trailer padding appended is    : "\r\003\r"
Construct the trigger yourself and use SendRawTrigger if you desire to send
other padding characters (e.g. 'c1' instead of 't2' to send trigger as closed
caption text.)

Note 6) Line21Session::SendRawTrigger - CRC works despite Norpack control codes

SendRawTrigger will construct and append a CRC field to a raw trigger if the
the 'insertCRC' flag is set true. This is designed to work despite any control
characters before or after the trigger string added to configure a Norpack CC inserter.

This CRC calculations ignore any characters before the
first "<" or "[" character (which ever comes first), and after the last ">" or "]"
character (which ever comes last).  The CRC field [NNNN]is inserted after
the last "]" or ">" character, before any trailing Norpack characters.


Note 7) IATvefInserterSession, IAtvefMulticastSession - new SendRawAnnouncement method
This method allows you to send self formated announcements.  No error checking is performed
on wether they are valid or not. Use of this method is **highly** discouraged except for 
purposes of generating bad announcements for testing ATVEF receivers.


Note 8) Bug fixes 1/31/2000

-> CAtvefPackage::AddLotsOfFiles (addDir), now returns error on bogus directoryies..
-> GenTrigger:: (line 84) Terminates string with zero before computing CRC
-> Line21::SendRawTrigger - now computes CRC around padding caracter (Note6 above)
-> Line21::SendTriggerEx - New method - now takes new 'tveLevel' parameter.
-> Inserter/Multicast::SendRawAnnouncement - New method

Note 9) Bug fix...
Most of the IAtvefAnnouncement methods were automatically disconnecting the server when accessed,
this was in error.  The following routines do disconnect from the server when called.

	AddEmailAddress
	AddExtraAttribute
	AddPhoneNumber
	AddStartStopTime
	ClearEmailAddresses
	ClearExtraAttributes
	ClearPhoneNumbers
	ClearTimes
	GetStartStopTime

	put/get_ContentLevelID
	get_EmailAddresses
	get_ExtraAttributes
	put/put_LangID
	put/get_MaxCacheSize
	get_Media
	get_MediaCount
	get_PhoneNumbers
	put/get_Primary
	put/get_SAPDeleteAnnc
	put/get_SAPMessageIDHash
	put/get_SAPSendingIP
	put/get_SDPLangID
	put/get_SecondsToEnd
	put/get_SendingIP
	put/get_SessionID
	put/get_SessionLabel
	put/get_SessionName
	put/get_SessionURL
	put/get_SessionVersion
	put/get_UserName
	put/get_UUID

(This may be swinging overboard in the opposite direction too far...)


The only methods that will now automatically disconnect are:

	ConfigureAnncTransmission
	ConfigureDataAndTriggerTransmission
	ConfigureDataTransmission
	ConfigureTriggerTransmission

(There is some question as to wether the Configure Data and Trigger calls
should not disconnect the announcement connections. This is hard to do, so they
will disconnect all 3 connections.)

Note 10) IAtvefLine21 Session bug fixes.
  A disconnect may immediatly follow a connect - no longer need to have an initialize here.

  Bogus few bytes occasionally found before valid data in a trigger
  (particularly second or later ones after a connect) have been eliminated.


Note 11) Line21Session sends to 't2', instead of 'c1'
  Brief bug in bugfix 10 caused data to be send to C1, instead of T2.  Fixed.

2/15/2000

Note 12) IAtvefPackage::DumpToBSTR() automagically truncates output
   strings to a max of 63K bytes to prevent tragic errors. It returns S_FALSE
   in this case, and appends the string "*** PACKAGE TO LARGE - TRUNCATING DUMP ***" to
   end of dump.

   This method is predominatly a debug method and doesn't handle large strings
   reliably. As such this shouldn't be a problem.
   a problem.

Note 13) SendRawAnnouncement methods 'hidden' from VB.


2/21/2000

Note 14)  Bug fixes:

	Newly found bug in CTVEComPack::WriteStreamHeader (called from CPackage::AddFile)
	causing  heap allocation errors caught in debug version when GetMIMEContentLocation
	was shorter than Filename.

	CPackage::GetTransmitSize() now works even after a package has been fragmented (sent).
	It used to return an error value.  This may return a slightly different (more correct)
	value after the package has been sent than before, since it works on the true number
	of bytes sent.

	CPackage::AddFile() no longer resets (kills) the package when adding a non-existant file.
	(It still throws an error however, a VB client needs to catch this error and continue.)

	CPackage::DumpToBSTR() used to leak temp files, forgot to close a file handle. Fixed.
	
	CPackage::DumpToBSTR() used to have problems converting compressed files in the package,
	was using a conversion to wide char routine that used NULL termination.  Changed to do
	it by hand.

Note 15)  SendRawAnnouncement
    This method is provided to send self-generated and formatted announcements to clients.
	As such, it is intended for debugging purposes only, and should not be used by normal clients.
	There is a problem with this method in that the Connect() method attempts to verify the announcement 
	specified by the normal methods on IAtvefAnnouncement is valid, even though that announcement
	is not actually sent.  Else connect fails.  The work around is to actually specify a valid
	default announcement before calling connect, and then use SendRawAnnouncement() to send
	the test announcement.  Parameters in the true announcement will not be used.



Note 16)	More bug fixes   (3/02/2000)
	IAtvefInsertSession::Disconnect() now disconnects the announcement session, which
	should disconnect the socket used to talk to the inserter. This means other clients
	should be able to now talk to the inserter.

	IAtvefLine21Session.  Call to Disconnect() before call to Initialize() no longer
	crashes.  (Returns ATVEFSEND_E_NOT_INTIALIZED error.)


	IAtvefInserterSession:	Call to Disconnect() actually disconnects the connection to
	the inserter.  This allows another process to use it during this period.  Additional
	change to Connect (actually first send), causes a reconnection if previously disconnected.
	NOTE: the inserter is actually connected during the first Initialize, not the first
	Connect.  This could be a bit wierd.

	IAtvefAnnouncement calls to put_UserName, put_SessionURL, put_SessionName, 
	put_SessionLabel, and put_UUID now will not fail on zero length strings.

	Bug in DateTONTP TIme where date was off by 2 days.  Fixed.

	BIG BUG FIX - converted to use correct GZIP implementation, using CRC32, rather than adler32.
	Also added support to skip optional fields in gzip header (extra, file, and crc), rather.
	NOTE - Fixed huffman dictionaries headers may not work (random calls to adler32 still left
	in dictionary code). Don't expect many of these.


	Updated version number of the dll/file from 1.0.0.5  to 2.0.0.0.


Note 17)	Prefix bug fixes (6/22/2000)
	Five minor bugs the prefix tool pointed out fixed.  (See bug 118709-118715).   Most had to
	do with not catching NULL returns from new correctly, leading to crashes in out of memory 
	situations.  (Most were because I tried to NULL terminate the null string.)  Also fixed
	minor memory leak in gzmime.cpp where I was reallocating strings to different lenghts, but
	forgot to delete the old string.



Note 18)	Fixed 0 start/stop time bug (underflow) (11/22/2000)
	Passing of 0's in the t=start stop  (IATVEFAnnouncement AddStartStopTime() method) had 
	numeric underflow problems do to use of unsigned values, producing some very bad (large) values.
	Dates in first two days of January 1900 may be wrong due to this fix.




Note 19)	Removed debug assert in put_LangID() and put_SDPLangID() (11/22/2000)
	These two methods tossed a "Debug Assertion Failed" error when passed bad language 
	ids (e.g. 99999).  Fixed by removing the assert...


Note 20)	Fixed debug build problem in trees.c Assert()	(11/22/2000)
	Turning on debug code made a new error pop up in an Assert in this file due to bad numerical casting.


Note 21)	New (extra) methods. (11/22/2000)
	Added the following interface methods to IATVEFMedia

	HRESULT ExtraAttributes([out, retval] IDispatch* *ppVal);	// returns IATVEFAttrList*
	HRESULT AddExtraAttribute([in] BSTR bstrKey, [in] BSTR bstrVal);
	HRESULT ExtraFlags([out, retval] IDispatch* *ppVal);		// returns IATVEFAttrList*
	HRESULT AddExtraFlag([in] BSTR bstrKey, [in] BSTR bstrVal);
	
	And the following ones to IATVEFAnnouncement.
	HRESULT ExtraFlags([out, retval] IDispatch* *pVal);		// returns IATVEFAttrList*
	HRESULT AddExtraFlag([in] BSTR bstrKey, [in] BSTR bstrValue);
	HRESULT ClearExtraFlags();

	ExtraFlags allow any arbitrary flag to be added to either the session or media level of the 
	form (key=value), while the ExtraAttributes allow attributes of the form (a=key:value) to 
	be added.  These are primarily supported to write debug announcements to test the reliability 
	and hardness of receivers, and are not intended for normal use.

Note 20)	Changed .Dll version (11/22/2000)
	Changed from 2.0.0.0 to 2.1.0.0 because of new interface methods above.


 
