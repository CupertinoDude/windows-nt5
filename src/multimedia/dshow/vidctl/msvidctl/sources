!IF 0

Copyright (C) Microsoft Corporation, 1999-2000

Module Name:

    sources.

!ENDIF

MAJORCOMP=DirectShow
MINORCOMP=MSVidCtl
DSHOWPUB=$(PROJECT_ROOT)\published\dxmdev\dshowdev
PUBLICPROXYSTUBS=$(DSHOWPUB)\idl\$(O)
FILTERS=$(PROJECT_ROOT)\dshow\filters

PASS0_HEADERDIR = $(O)
PASS0_SOURCEDIR = $(O)
MIDL_UUIDDIR    = $(O)
MIDL_TLBDIR     = $(O)

TARGETNAME=MSVidCtl
TARGETPATH=obj
TARGETTYPE=DYNLINK
MP2DEMUX = $(PROJECT_ROOT)\DShow\filters\mpeg2\mp2demux
ENCDEC_ROOT = $(PROJECT_ROOT)\DShow\Filters\Encdec

						    # turn on /GS  (see http://swiweb/bufferoverruns/gs.html)
BUFFER_OVERFLOW_CHECKS=1


# Explicitly include $(O) first else we pick up the
# wrong copy of msg00001.bin from $(PUBLICPROXYSTUBS)

INCLUDES= \
        $(O); \
        ..\atl;\
	.;\
	..;\
	..\..\..\published\dxmdev\dshowdev\base;\
	..\..\..\published\dxmdev\dshowdev\include;\
	$(SDK_INC_PATH)\atl30;\
	$(PUBLICPROXYSTUBS);\
        $(SDK_PATH)\amovie\inc; \
        $(MP2DEMUX); \
	$(ENCDEC_ROOT)\inc; \
	$(ENCDEC_ROOT)\idl\$(O); 
	

RC_INCLUDES=res

UMTYPE=windows
NOT_LEAN_AND_MEAN=1

C_DEFINES=$(C_DEFINES) -D_USRDLL 

#version goo
C_DEFINES=$(C_DEFINES) -DOFFICIAL=1

!if exist( "$(PROJECT_ROOT)\dshow\qbuild.ver" )
C_DEFINES=$(C_DEFINES) -DQBUILD_VER
INCLUDES = $(INCLUDES);$(PROJECT_ROOT)\dshow
!endif

!if defined(DIRECTX_REDIST) && exist( "$(PROJECT_ROOT)\directx\inc\verinfo.h" )
C_DEFINES=$(C_DEFINES) -DDXBUILD_VER
INCLUDES=$(INCLUDES);$(PROJECT_ROOT)\directx\inc
!endif
#end version goo

MSC_WARNING_LEVEL=/W3

#USE_MSVCRT=1
USE_LIBCMT=1
USE_STL=1
DLLENTRY=_DllMainCRTStartup

DLLDEF=MSVidCtl.def
USE_NATIVE_EH=1

!ifndef TUNING_MODEL_ONLY
TUNING_MODEL_ONLY=0
!endif

!if "$(TUNING_MODEL_ONLY)"=="1"
C_DEFINES=$(C_DEFINES) -DTUNING_MODEL_ONLY=1
NONTM_SOURCES=
!else

#
#note build.exe won't do !ifdef so keeping separate lists of .cpp files for
# the tuning_model_only version going out in dx8 and the full ctl going out in whistler
# doesn't actually do anything.  we're solving this with #ifdef in the code.  but,
# i'm keeping the lists separate in the sources file for documentation purposes.
#
NONTM_SOURCES= composition.cpp \
               devices.cpp \
               MSVidAudioRenderer.cpp \
	       MSVidVideoRenderer.cpp \
               MSVidFileplayback.cpp \
	       MSVidSBERecorder.cpp \
	       MSVidSBESink.cpp \
	       MSVidSBESource.cpp \
	       MSVidEncoder.cpp \
	       MSVidXDS.cpp \
               MSVidWebDVD.cpp \
               MSVidDVDAdm.cpp \
               MSVidDVDBookmark.cpp \
               BDATuner.cpp \
               MSVidtvtuner.cpp \
               vidctl.cpp \
               vidprot.cpp \
               dvdprot.cpp \
               ..\dsextend.cpp \
               topwin.cpp \
               ..\segment.cpp \
               CMSEventBinder.cpp

!endif

!if "$(BUILD_PRODUCT)" == "NT" 
C_DEFINES=$(C_DEFINES) -DUNICODE -D_UNICODE
WINVER_VERSION=0x0500
!else
C_DEFINES=$(C_DEFINES) -D_MBCS
WINVER_VERSION=0x0400
!endif

USER_C_FLAGS=/Zm200 $(USER_C_FLAGS)

C_DEFINES=$(C_DEFINES) -D_ATL_STATIC_REGISTRY

PRECOMPILED_INCLUDE=stdafx.h
PRECOMPILED_SOURCEFILE=stdafx.cpp
PRECOMPILED_CXX=1
USE_VCCOM=1
!if $(FREEBUILD)
STRMBASE_LIB=$(SDK_LIB_PATH)\strmbase.lib
!else
DEBUG_CRTS=1
386_OPTIMIZATION=/Odi
STRMBASE_LIB=$(SDK_LIB_PATH)\strmbasd.lib
!endif

!if $(FREEBUILD)        #two different versions of libraries, one for debug
DRMO=free
!else
DRMO=checked
!endif

LINKER_WARNING_SWITCH=      # turn of warnings stopping build (nothing after '=
                                    #   DRM don't give us PDB files for libs and it complains

TARGETLIBS=$(TARGETLIBS) \
           $(SDK_LIB_PATH)\ddraw.lib        \
           $(SDK_LIB_PATH)\d3dx.lib        \
           $(SDK_LIB_PATH)\ole32.lib        \
           $(SDK_LIB_PATH)\oleaut32.lib     \
           $(SDK_LIB_PATH)\kernel32.lib     \
           $(SDK_LIB_PATH)\user32.lib       \
           $(SDK_LIB_PATH)\advapi32.lib     \
           $(SDK_LIB_PATH)\uuid.lib         \
           $(SDK_LIB_PATH)\comctl32.lib     \
           $(SDK_LIB_PATH)\comdlg32.lib     \
           $(SDK_LIB_PATH)\gdi32.lib        \
           $(SDK_LIB_PATH)\shell32.lib      \
           $(SDK_LIB_PATH)\winspool.lib     \
           $(SDK_LIB_PATH)\odbc32.lib       \
           $(SDK_LIB_PATH)\odbccp32.lib     \
           $(SDK_LIB_PATH)\winmm.lib        \
           $(SDK_LIB_PATH)\strmiids.lib     \
           $(SDK_LIB_PATH)\shlwapi.lib      \
           $(SDK_LIB_PATH)\rpcrt4.lib             
#           $(STRMBASE_LIB) 

#DRM goo
!if $(IA64)
BUILD_WITH_DRM=0
!else
BUILD_WITH_DRM=1
!endif

!if "$(BUILD_WITH_DRM)"=="1"
#C_DEFINES=$(C_DEFINES) -DBUILD_WITH_DRM -DUSE_TEST_DRM_CERT		# no longer using test certs.
C_DEFINES=$(C_DEFINES) -DBUILD_WITH_DRM 
TARGETLIBS= \
    $(ENCDEC_ROOT)\DrmLib\drmutil.lib                  \
    $(ENCDEC_ROOT)\DrmLib\$(DRMO)\drmclien.lib         \
    $(ENCDEC_ROOT)\DrmLib\$(DRMO)\fsv1stub.lib         \
    $(ENCDEC_ROOT)\DrmLib\$(DRMO)\DRMSecureChannel.lib \
    $(ENCDEC_ROOT)\DrmLib\rsa32.lib                    \
    $(ENCDEC_ROOT)\DrmLib\bnpkvsp.lib                  \
    $(ENCDEC_ROOT)\DrmLib\randlib.lib                  \
    $(TARGETLIBS)      
!endif
#end DRM goo

DLOAD_ERROR_HANDLER=kernel32.dll
#DELAYLOAD = gdi32.dll; urlmon.dll;shlwapi.dll;winmm.dll
DELAYLOAD = winmm.dll		

!if $(IA64)
TARGETLIBS=$(TARGETLIBS) $(SDK_LIB_PATH)\atl21asm.lib   
!endif


TM_SOURCES= \
    regexp.idl \
    MSVidCtl.cpp \
    rgsbag.cpp \
    createregbag.cpp \
    ChannelTuneRequest.cpp \
    ATSCChannelTuneRequest.cpp \
    MPEG2TuneRequest.cpp \
    atsclocator.cpp \
    dvbtunerequest.cpp \
    dvbslocator.cpp \
    dvbtlocator.cpp \
    ComponentTypes.cpp  \
    Components.cpp  \
    TuningSpaceContainer.cpp \
    regexthread.cpp \
    bcastevent.cpp \
    MSVidCtlerrors.mc \
    mtype.cpp \
    msvidctlp.c \
    regbagp.c \
    segmentp.c \
    tunerp.c \
    dlldatax.c \
    MSVidCtl.rc

SOURCES= $(TM_SOURCES) $(NONTM_SOURCES)

PASS0_PUBLISH= \
    {..\trace.cpp=$(PROJECT_INC_PATH)\trace.cpp}        \
    {..\dsextend.cpp=$(PROJECT_INC_PATH)\dsextend.cpp}  \
    {..\segment.cpp=$(PROJECT_INC_PATH)\segment.cpp}

# end of file - sources
