@name: TSPI_lineAccept
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCSTR lpsUserUserInfo,
		DWORD dwSize
)
;
@name: TSPI_lineAddToConference
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdConfCall,
		HDRVCALL hdConsultCall
)
;
@name: TSPI_lineAnswer
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCSTR lpsUserUserInfo,
		DWORD dwSize
)
;
@name: TSPI_lineBlindTransfer
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCWSTR lpszDestAddress,
		DWORD dwCountryCode
)
;
@name: TSPI_lineCloseCall
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall
)
;
@name: TSPI_lineCompleteCall
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPDWORD lpdwCompletionID,
		DWORD dwCompletionMode,
		DWORD dwMessageID
)
;
@name: TSPI_lineCompleteTransfer
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		HDRVCALL hdConsultCall,
		HTAPICALL htConfCall,
		LPHDRVCALL lphdConfCall,
		DWORD dwTransferMode
)
;
@name: TSPI_lineConditionalMediaDetection
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwMediaModes,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineDevSpecific
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HDRVCALL hdCall,
		LPVOID lpParams,
		DWORD dwSize
)
;
@name: TSPI_lineDevSpecificFeature
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwFeature,
		LPVOID lpParams,
		DWORD dwSize
)
;
@name: TSPI_lineDial
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCWSTR lpszDestAddress,
		DWORD dwCountryCode
)
;
@name: TSPI_lineDrop
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCSTR lpsUserUserInfo,
		DWORD dwSize
)
;
@name: TSPI_lineDropOnClose
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall
)
;
@name: TSPI_lineDropNoOwner
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall
)
;
@name: TSPI_lineForward
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD bAllAddresses,
		DWORD dwAddressID,
		LPLINEFORWARDLIST const lpForwardList,
		DWORD dwNumRingsNoAnswer,
		HTAPICALL htConsultCall,
		LPHDRVCALL lphdConsultCall,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineGatherDigits
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwEndToEndID,
		DWORD dwDigitModes,
		LPWSTR lpsDigits,
		DWORD dwNumDigits,
		LPCWSTR lpszTerminationDigits,
		DWORD dwFirstDigitTimeout,
		DWORD dwInterDigitTimeout
)
;
@name: TSPI_lineGenerateDigits
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwEndToEndID,
		DWORD dwDigitMode,
		LPCWSTR lpszDigits,
		DWORD dwDuration
)
;
@name: TSPI_lineGenerateTone
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwEndToEndID,
		DWORD dwToneMode,
		DWORD dwDuration,
		DWORD dwNumTones,
		LPLINEGENERATETONE const lpTones
)
;
@name: TSPI_lineGetAddressCaps
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwAddressID,
		DWORD dwTSPIVersion,
		DWORD dwExtVersion,
		LPLINEADDRESSCAPS lpAddressCaps
)
;
@name: TSPI_lineGetAddressID
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		LPDWORD lpdwAddressID,
		DWORD dwAddressMode,
		LPCWSTR lpsAddress,
		DWORD dwSize
)
;
@name: TSPI_lineGetAddressStatus
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwAddressID,
		LPLINEADDRESSSTATUS lpAddressStatus
)
;
@name: TSPI_lineGetCallAddressID
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		LPDWORD lpdwAddressID
)
;
@name: TSPI_lineGetCallInfo
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		LPLINECALLINFO lpCallInfo
)
;
@name: TSPI_lineGetCallStatus
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		LPLINECALLSTATUS lpCallStatus
)
;
@name: TSPI_lineGetDevCaps
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		DWORD dwExtVersion,
		LPLINEDEVCAPS lpLineDevCaps
)
;
@name: TSPI_lineGetDevConfig
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		LPVARSTRING lpDeviceConfig,
		LPCWSTR lpszDeviceClass
)
;
@name: TSPI_lineGetExtensionID
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		LPLINEEXTENSIONID lpExtensionID
)
;
@name: TSPI_lineGetIcon
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		LPCWSTR lpszDeviceClass,
		LPHICON lphIcon
)
;
@name: TSPI_lineGetID
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HDRVCALL hdCall,
		DWORD dwSelect,
		LPVARSTRING lpDeviceID,
		LPCWSTR lpszDeviceClass,
		HANDLE hTargetProcess
)
;
@name: TSPI_lineGetLineDevStatus
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		LPLINEDEVSTATUS lpLineDevStatus
)
;
@name: TSPI_lineGetNumAddressIDs
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		LPDWORD lpdwNumAddressIDs
)
;
@name: TSPI_lineHold
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall
)
;
@name: TSPI_lineMakeCall
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		HTAPICALL htCall,
		LPHDRVCALL lphdCall,
		LPCWSTR lpszDestAddress,
		DWORD dwCountryCode,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineMonitorDigits
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwDigitModes
)
;
@name: TSPI_lineMonitorMedia
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwMediaModes
)
;
@name: TSPI_lineMonitorTones
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwToneListID,
		LPLINEMONITORTONE const lpToneList,
		DWORD dwNumEntries
)
;
@name: TSPI_lineNegotiateExtVersion
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		DWORD dwLowVersion,
		DWORD dwHighVersion,
		LPDWORD lpdwExtVersion
)
;
@name: TSPI_linePark
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		DWORD dwParkMode,
		LPCWSTR lpszDirAddress,
		LPVARSTRING lpNonDirAddress
)
;
@name: TSPI_linePickup
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HTAPICALL htCall,
		LPHDRVCALL lphdCall,
		LPCWSTR lpszDestAddress,
		LPCWSTR lpszGroupID
)
;
@name: TSPI_linePrepareAddToConference
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdConfCall,
		HTAPICALL htConsultCall,
		LPHDRVCALL lphdConsultCall,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineRedirect
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCWSTR lpszDestAddress,
		DWORD dwCountryCode
)
;
@name: TSPI_lineReleaseUserUserInfo
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall
)
;
@name: TSPI_lineRemoveFromConference
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall
)
;
@name: TSPI_lineSecureCall
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall
)
;
@name: TSPI_lineSelectExtVersion
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwExtVersion
)
;
@name: TSPI_lineSendUserUserInfo
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPCSTR lpsUserUserInfo,
		DWORD dwSize
)
;
@name: TSPI_lineSetAppSpecific
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwAppSpecific
)
;
@name: TSPI_lineSetCallData
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPVOID lpCallData,
		DWORD dwSize
)
;
@name: TSPI_lineSetCallParams
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		DWORD dwBearerMode,
		DWORD dwMinRate,
		DWORD dwMaxRate,
		LPLINEDIALPARAMS const lpDialParams
)
;
@name: TSPI_lineSetCallQualityOfService
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		LPVOID lpSendingFlowspec,
		DWORD dwSendingFlowspecSize,
		LPVOID lpReceivingFlowspec,
		DWORD dwReceivingFlowspecSize
)
;
@name: TSPI_lineSetCallTreatment
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		DWORD dwTreatment
)
;
@name: TSPI_lineSetDefaultMediaDetection
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwMediaModes
)
;
@name: TSPI_lineSetDevConfig
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		LPVOID const lpDeviceConfig,
		DWORD dwSize,
		LPCWSTR lpszDeviceClass
)
;
@name: TSPI_lineSetLineDevStatus
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwStatusToChange,
		DWORD fStatus
)
;
@name: TSPI_lineSetMediaControl
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HDRVCALL hdCall,
		DWORD dwSelect,
		LPLINEMEDIACONTROLDIGIT const lpDigitList,
		DWORD dwDigitNumEntries,
		LPLINEMEDIACONTROLMEDIA const lpMediaList,
		DWORD dwMediaNumEntries,
		LPLINEMEDIACONTROLTONE const lpToneList,
		DWORD dwToneNumEntries,
		LPLINEMEDIACONTROLCALLSTATE const lpCallStateList,
		DWORD dwCallStateNumEntries
)
;
@name: TSPI_lineSetMediaMode
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVCALL hdCall,
		DWORD dwMediaMode
)
;
@name: TSPI_lineSetStatusMessages
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVLINE hdLine,
		DWORD dwLineStates,
		DWORD dwAddressStates
)
;
@name: TSPI_lineSetTerminal
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HDRVCALL hdCall,
		DWORD dwSelect,
		DWORD dwTerminalModes,
		DWORD dwTerminalID,
		DWORD bEnable
)
;
@name: TSPI_lineSetupConference
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		HDRVLINE hdLine,
		HTAPICALL htConfCall,
		LPHDRVCALL lphdConfCall,
		HTAPICALL htConsultCall,
		LPHDRVCALL lphdConsultCall,
		DWORD dwNumParties,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineSetupTransfer
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall,
		HTAPICALL htConsultCall,
		LPHDRVCALL lphdConsultCall,
		LPLINECALLPARAMS const lpCallParams
)
;
@name: TSPI_lineSwapHold
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdActiveCall,
		HDRVCALL hdHeldCall
)
;
@name: TSPI_lineUncompleteCall
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwCompletionID
)
;
@name: TSPI_lineUnhold
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVCALL hdCall
)
;
@name: TSPI_lineUnpark
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVLINE hdLine,
		DWORD dwAddressID,
		HTAPICALL htCall,
		LPHDRVCALL lphdCall,
		LPCWSTR lpszDestAddress
)
;
@name: TSPI_phoneDevSpecific
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		LPVOID lpParams,
		DWORD dwSize
)
;
@name: TSPI_phoneGetButtonInfo
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwButtonLampID,
		LPPHONEBUTTONINFO lpButtonInfo
)
;
@name: TSPI_phoneGetData
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwDataID,
		LPVOID lpData,
		DWORD dwSize
)
;
@name: TSPI_phoneGetDevCaps
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		DWORD dwExtVersion,
		LPPHONECAPS lpPhoneCaps
)
;
@name: TSPI_phoneGetDisplay
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		LPVARSTRING lpDisplay
)
;
@name: TSPI_phoneGetExtensionID
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		LPPHONEEXTENSIONID lpExtensionID
)
;
@name: TSPI_phoneGetGain
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwHookSwitchDev,
		LPDWORD lpdwGain
)
;
@name: TSPI_phoneGetHookSwitch
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		LPDWORD lpdwHookSwitchDevs
)
;
@name: TSPI_phoneGetIcon
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		LPCWSTR lpszDeviceClass,
		LPHICON lphIcon
)
;
@name: TSPI_phoneGetID
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		LPVARSTRING lpDeviceID,
		LPCWSTR lpszDeviceClass,
		HANDLE hTargetProcess
)
;
@name: TSPI_phoneGetLamp
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwButtonLampID,
		LPDWORD lpdwLampMode
)
;
@name: TSPI_phoneGetRing
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		LPDWORD lpdwRingMode,
		LPDWORD lpdwVolume
)
;
@name: TSPI_phoneGetStatus
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		LPPHONESTATUS lpPhoneStatus
)
;
@name: TSPI_phoneGetVolume
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwHookSwitchDev,
		LPDWORD lpdwVolume
)
;
@name: TSPI_phoneNegotiateExtVersion
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwTSPIVersion,
		DWORD dwLowVersion,
		DWORD dwHighVersion,
		LPDWORD lpdwExtVersion
)
;
@name: TSPI_phoneNegotiateTSPIVersion
 @ret: LONG
@qual: TSPIAPI
@args: (
		DWORD dwDeviceID,
		DWORD dwLowVersion,
		DWORD dwHighVersion,
		LPDWORD lpdwTSPIVersion
)
;
@name: TSPI_phoneSelectExtVersion
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwExtVersion
)
;
@name: TSPI_phoneSetButtonInfo
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwButtonLampID,
		LPPHONEBUTTONINFO const lpButtonInfo
)
;
@name: TSPI_phoneSetData
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwDataID,
		LPVOID const lpData,
		DWORD dwSize
)
;
@name: TSPI_phoneSetDisplay
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwRow,
		DWORD dwColumn,
		LPCWSTR lpsDisplay,
		DWORD dwSize
)
;
@name: TSPI_phoneSetGain
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwHookSwitchDev,
		DWORD dwGain
)
;
@name: TSPI_phoneSetHookSwitch
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwHookSwitchDevs,
		DWORD dwHookSwitchMode
)
;
@name: TSPI_phoneSetLamp
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwButtonLampID,
		DWORD dwLampMode
)
;
@name: TSPI_phoneSetRing
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwRingMode,
		DWORD dwVolume
)
;
@name: TSPI_phoneSetStatusMessages
 @ret: LONG
@qual: TSPIAPI
@args: (
		HDRVPHONE hdPhone,
		DWORD dwPhoneStates,
		DWORD dwButtonModes,
		DWORD dwButtonStates
)
;
@name: TSPI_phoneSetVolume
 @ret: LONG
@qual: TSPIAPI
@args: (
		DRV_REQUESTID dwRequestID,
		HDRVPHONE hdPhone,
		DWORD dwHookSwitchDev,
		DWORD dwVolume
)
;
@name: TUISPI_lineConfigDialog
 @ret: LONG
@qual: TSPIAPI
@args: (
		TUISPIDLLCALLBACK lpfnUIDLLCallback,
		DWORD dwDeviceID,
		HWND hwndOwner,
		LPCWSTR lpszDeviceClass
)
;
@name: TUISPI_lineConfigDialogEdit
 @ret: LONG
@qual: TSPIAPI
@args: (
		TUISPIDLLCALLBACK lpfnUIDLLCallback,
		DWORD dwDeviceID,
		HWND hwndOwner,
		LPCWSTR lpszDeviceClass,
		LPVOID const lpDeviceConfigIn,
		DWORD dwSize,
		LPVARSTRING lpDeviceConfigOut
)
;
@name: TUISPI_phoneConfigDialog
 @ret: LONG
@qual: TSPIAPI
@args: (
		TUISPIDLLCALLBACK lpfnUIDLLCallback,
		DWORD dwDeviceID,
		HWND hwndOwner,
		LPCWSTR lpszDeviceClass
)
;

