

;;;;majority of commands are swapped in here;;;;
;;;;note that the chipset name has been swapped for "chipset";;;;
[MfgAddReg]
HKR, Settings, Terminator,, "<cr>"
@Chipset.StaticInit@   
@Chipset.FlowHard@
@Chipset.FlowSoft@
@Chipset.FlowOff@
@Chipset.ECMOn@  
@Chipset.ECMForced@
@Chipset.ECMOff@
@Chipset.CompressionOn@
@Chipset.CompressionOff@
@Chipset.ErrorControl.Cellular@  
@Chipset.ErrorControl.CellularForced@ 
@Chipset.InactivityTimeout@
@Global.BlindOff@   ' these are globals, used regardless of chipset
@Global.BlindOn@
@Global.Reset@
@Global.Pulse@
@Global.Tone@
@Global.CCITT@
@Global.Bell@
@Global.Monitor@
@Global.Hangup@
@Global.Answer@
@Global.Prefix@
@Global.DialPrefix@
@Global.DialSuffix@
@Global.SpeakerVolumeLow@ 
@Global.SpeakerVolumeMed@
@Global.SpeakerVolumeHigh@
@Global.SpeakerModeOff@
@Global.SpeakerModeDial@
@Global.SpeakerModeOn@
@Global.SpeakerModeSetup@
@Global.CallSetupFailTimer@  

;;;;this is a new variable, it is going to be tricky to determine, we'll have to talk about this one::::
@Chipset.InactivityScale@   

;;;;entire response section swapped in below for this single variable which maps to a chipset and speed found;;;;
@Chipset.Speed.Responses@

;;;; INF template for INF Devil or "DriveBy" ;;;;
;;;; comments for Ken are labelled with four semicolons ;;;;
;;;;variables which are swapped out for real data have leading/trailing @. For example:  @ModemVariable@
;;;;comments with single semicolon are retained. comments with four semicolons can be purged;;;;

; Windows Modem Setup File
; Copyright (c) 1993-1998 Microsoft Corporation
; Manufacturer: Test Modem INF

[Version]
Signature="$CHICAGO$"
Class=Modem
ClassGUID={4D36E96D-E325-11CE-BFC1-08002BE10318}
Provider=%Mfg%

;;;;leave as commented for now;;;;
; [ControlFlags]
; ExcludeFromSelect=IDgoesHere

;;;;leave as commented for now;;;;
; [ModemXXXX.PosDup]
; *PNP0500

;;;;leave as commented for now;;;;
; [ModemXXXX.NoResDup]
; @UnimodemID@

[Manufacturer]
%Mfg% = Models

;;;;IDs replaced with real IDs if we can sniff ports and registry, otherwise we can prompt user for ID or just punt and use the variables as is for now (of course strip the @ chars)
;;;;if modem is pnp we would have two IDs. If not PnP we only have one;;;;
[Models]
%Modem1%= Modem1, @PnPID@
%Modem1%= Modem1, @UnimodemID@

;;;; ProfileVariable will be replaced with Internal, External or PCMCIA depending on input user makes in gui or some form of detection we make automatically by sniffing ports;;;;
[Modem1]
AddReg=All, MfgAddReg, Modem1.AddReg, @ProfileVariable@

;;;; PropertiesVariable will be replaced by a properties line we construct based on interrogation;;;;
[Modem1.AddReg]
@Properties@

;;;;swap in a company name and model name;;;;
;;;;if none given, default to company = "Test Company", model = "Test modem";;;;
[Strings]
Mfg = "@CompanyName@"
Modem1="@ModelName@"

[All]
HKR,,FriendlyDriver,,unimodem.vxd
HKR,,DevLoader,,*vcomm
HKR,,PortSubClass,1,02
HKR,,ConfigDialog,,modemui.dll
HKR,,EnumPropPages,,"modemui.dll,EnumPropPages"
HKR, Init, 1,, "AT<cr>"
HKR, Responses, "<cr><lf>OK<cr><lf>", 1, 00, 00, 00,00,00,00, 00,00,00,00
HKR, Responses, "<cr><lf>ERROR<cr><lf>", 1, 03, 00, 00,00,00,00, 00,00,00,00

[EXTERNAL]
HKR,, DeviceType, 1, 01

[INTERNAL]
HKR,, DeviceType, 1, 02

[PCMCIA]
HKR,,PortDriver,,serial.vxd
HKR,,Contention,,*vcd
HKR,, DeviceType, 1, 03