//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1998 - 1999
//
//  File:       fltrhelp.cpp
//
//--------------------------------------------------------------------------

#include "stdafx.h"
#include "rtrfiltr.hm"
#include "resource.h"


//
// What follows is the data that gets generated from
//		mkdlg.exe -c rtrfiltr.rc
//




// "File rtrfiltr.rc line 82 : Resource - DIALOG : IDD_IPXFILTER"
static const DWORD rgdw_IDD_IPXFILTER[] = 
{
    IDC_IPX_PERMIT, HIDC_IPX_PERMIT,
    IDC_IPX_DENY, HIDC_IPX_DENY,
    IDC_IPX_FILTER_LIST, HIDC_IPX_FILTER_LIST,
    IDC_IPX_FILTER_ADD, HIDC_IPX_FILTER_ADD,
    IDC_IPX_FILTER_EDIT, HIDC_IPX_FILTER_EDIT,
    IDC_IPX_FILTER_DELETE, HIDC_IPX_FILTER_DELETE,
	0,0 
};


// "File rtrfiltr.rc line 106 : Resource - DIALOG : IDD_IPXFILTER_ADDEDIT"
static const DWORD rgdw_IDD_IPXFILTER_ADDEDIT[] = 
{
    IDC_AI_ST_SRC_NET, HIDC_AI_ST_SRC_NET,
    IDC_AEIPX_EB_SRC_NET, HIDC_AEIPX_EB_SRC_NET,
    IDC_AI_ST_SRC_MASK, HIDC_AI_ST_SRC_MASK,
    IDC_AEIPX_EB_SRC_MASK, HIDC_AEIPX_EB_SRC_MASK,
    IDC_AI_ST_SRC_NODE, HIDC_AI_ST_SRC_NODE,
    IDC_AEIPX_EB_SRC_NODE, HIDC_AEIPX_EB_SRC_NODE,
    IDC_AI_ST_SRC_SOCKET, HIDC_AI_ST_SRC_SOCKET,
    IDC_AEIPX_EB_SRC_SOCKET, HIDC_AEIPX_EB_SRC_SOCKET,
    IDC_AI_ST_DST_NET, HIDC_AI_ST_DST_NET,
    IDC_AEIPX_EB_DST_NET, HIDC_AEIPX_EB_DST_NET,
    IDC_AI_ST_DST_MASK, HIDC_AI_ST_DST_MASK,
    IDC_AEIPX_EB_DST_MASK, HIDC_AEIPX_EB_DST_MASK,
    IDC_AI_ST_DST_NODE, HIDC_AI_ST_DST_NODE,
    IDC_AEIPX_EB_DST_NODE, HIDC_AEIPX_EB_DST_NODE,
    IDC_AI_ST_DST_SOCKET, HIDC_AI_ST_DST_SOCKET,
    IDC_AEIPX_EB_DST_SOCKET, HIDC_AEIPX_EB_DST_SOCKET,
    IDC_AI_ST_PACKET_TYPE, HIDC_AI_ST_PACKET_TYPE,
    IDC_AEIPX_EB_PACKET_TYPE, HIDC_AEIPX_EB_PACKET_TYPE,
	0,0 
};


// "File rtrfiltr.rc line 138 : Resource - DIALOGEX : IDD_IPFILTER"
static const DWORD rgdw_IDD_IPFILTER[] = 
{
    IDC_IP_PERMIT, HIDC_IP_PERMIT,
    IDC_IP_DENY, HIDC_IP_DENY,
    IDC_IP_FILTER_LIST, HIDC_IP_FILTER_LIST,
    IDC_IP_FILTER_ADD, HIDC_IP_FILTER_ADD,
    IDC_IP_FILTER_EDIT, HIDC_IP_FILTER_EDIT,
    IDC_IP_FILTER_DELETE, HIDC_IP_FILTER_DELETE,
	0,0 
};


// "File rtrfiltr.rc line 165 : Resource - DIALOG : IDD_IPFILTER_ADDEDIT"
static const DWORD rgdw_IDD_IPFILTER_ADDEDIT[] = 
{
    IDC_AEIP_CB_SOURCE, HIDC_AEIP_CB_SOURCE,
    IDC_AEIP_ST_SOURCE_ADDRESS, HIDC_AEIP_ST_SOURCE_ADDRESS,
    IDC_AEIP_EB_SOURCE_ADDRESS, HIDC_AEIP_EB_SOURCE_ADDRESS,
    IDC_AEIP_ST_SOURCE_MASK, HIDC_AEIP_ST_SOURCE_MASK,
    IDC_AEIP_EB_SOURCE_MASK, HIDC_AEIP_EB_SOURCE_MASK,
    IDC_AEIP_CB_DEST, HIDC_AEIP_CB_DEST,
    IDC_AEIP_ST_DEST_ADDRESS, HIDC_AEIP_ST_DEST_ADDRESS,
    IDC_AEIP_EB_DEST_ADDRESS, HIDC_AEIP_EB_DEST_ADDRESS,
    IDC_AEIP_ST_DEST_MASK, HIDC_AEIP_ST_DEST_MASK,
    IDC_AEIP_EB_DEST_MASK, HIDC_AEIP_EB_DEST_MASK,
    IDC_AEIP_CB_PROTOCOL, HIDC_AEIP_CB_PROTOCOL,
    IDC_AEIP_ST_SRC_PORT, HIDC_AEIP_ST_SRC_PORT,
    IDC_AEIP_CB_SRC_PORT, HIDC_AEIP_CB_SRC_PORT,
    IDC_AEIP_ST_DEST_PORT, HIDC_AEIP_ST_DEST_PORT,
    IDC_AEIP_CB_DEST_PORT, HIDC_AEIP_CB_DEST_PORT,
	0,0 
};


// "File rtrfiltr.rc line 205 : Resource - DIALOGEX : IDD_IPFILTER_DD"
static const DWORD rgdw_IDD_IPFILTER_DD[] = 
{
    IDC_IP_FILTER_ONLY, HIDC_IP_FILTER_ONLY,
    IDC_IP_FILTER_ALL, HIDC_IP_FILTER_ALL,
    IDC_IP_FILTER_LIST, HIDC_IP_FILTER_LIST,
    IDC_IP_FILTER_ADD, HIDC_IP_FILTER_ADD,
    IDC_IP_FILTER_EDIT, HIDC_IP_FILTER_EDIT,
    IDC_IP_FILTER_DELETE, HIDC_IP_FILTER_DELETE,
	0,0 
};

//
// End of mkdlg.exe output
//



static BOOL				s_fInitHelpMap = FALSE;
static CMapWordToPtr	s_IDDHelpMap;
void InitHelpMap();

DWORD *	RtrfiltrSnapHelpMap(DWORD dwIDD)
{
	LPVOID	pvHelpMap = NULL;
	
	if (!s_fInitHelpMap)
	{
		InitHelpMap();
		s_fInitHelpMap = TRUE;
	}

	// Look in the help map
	s_IDDHelpMap.Lookup((WORD) dwIDD, pvHelpMap);
	return (DWORD *) pvHelpMap;
}

void InitHelpMap()
{
	s_IDDHelpMap.SetAt(IDD_IPXFILTER_INPUT, (LPVOID) rgdw_IDD_IPXFILTER);
	s_IDDHelpMap.SetAt(IDD_IPXFILTER_OUTPUT, (LPVOID) rgdw_IDD_IPXFILTER);
	s_IDDHelpMap.SetAt(IDD_IPXFILTER_ADDEDIT, (LPVOID) rgdw_IDD_IPXFILTER_ADDEDIT);
	s_IDDHelpMap.SetAt(IDD_IPFILTER, (LPVOID) rgdw_IDD_IPFILTER);
	s_IDDHelpMap.SetAt(IDD_IPFILTER_ADDEDIT, (LPVOID) rgdw_IDD_IPFILTER_ADDEDIT);
	s_IDDHelpMap.SetAt(IDD_IPFILTER_DD, (LPVOID) rgdw_IDD_IPFILTER_DD);
}

