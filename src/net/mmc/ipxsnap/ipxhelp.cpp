//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1998 - 1999
//
//  File:       ipxhelp.cpp
//
//--------------------------------------------------------------------------

#include "stdafx.h"
#include "ipxsnap.hm"
#include "resource.h"


//
// What follows is the data that gets generated from
//		mkdlg.exe -c ipxsnap.rc
//



// "File ipxsnap.rc line 87 : Resource - DIALOG : IDD_GENERIC_PROP_PAGE"
static const DWORD rgdw_IDD_GENERIC_PROP_PAGE[] = 
{
	0,0 
};


// "File ipxsnap.rc line 96 : Resource - DIALOG : IDD_IPX_GLOBAL_GENERAL_PAGE"
static const DWORD rgdw_IDD_IPX_GLOBAL_GENERAL_PAGE[] = 
{
    IDC_IGG_BTN_LOG_NONE, HIDC_IGG_BTN_LOG_NONE,
    IDC_IGG_BTN_LOG_ERRORS, HIDC_IGG_BTN_LOG_ERRORS,
    IDC_IGG_BTN_LOG_WARNINGS, HIDC_IGG_BTN_LOG_WARNINGS,
    IDC_IGG_BTN_LOG_INFO, HIDC_IGG_BTN_LOG_INFO,
	0,0 
};


// "File ipxsnap.rc line 119 : Resource - DIALOG : IDD_IPX_IF_GENERAL_PAGE"
static const DWORD rgdw_IDD_IPX_IF_GENERAL_PAGE[] = 
{
    IDC_IIG_BTN_ADMIN_STATE, HIDC_IIG_BTN_ADMIN_STATE,
    IDC_IIG_GRP_CONTROL_PROTOCOL, HIDC_IIG_GRP_CONTROL_PROTOCOL,
    IDC_IIG_BTN_IPX_CP, HIDC_IIG_BTN_IPX_CP,
    IDC_IIG_BTN_IPX_WAN, HIDC_IIG_BTN_IPX_WAN,
    IDC_IIG_BTN_INPUT_FILTERS, HIDC_IIG_BTN_INPUT_FILTERS,
    IDC_IIG_BTN_OUTPUT_FILTERS, HIDC_IIG_BTN_OUTPUT_FILTERS,
	0,0 
};


// "File ipxsnap.rc line 144 : Resource - DIALOG : IDD_IPX_NB_IF_GENERAL_PAGE"
static const DWORD rgdw_IDD_IPX_NB_IF_GENERAL_PAGE[] = 
{
    IDC_NIG_BTN_ACCEPT, HIDC_NIG_BTN_ACCEPT,
    IDC_NIG_BTN_DELIVER_ALWAYS, HIDC_NIG_BTN_DELIVER_ALWAYS,
    IDC_NIG_BTN_DELIVER_NEVER, HIDC_NIG_BTN_DELIVER_NEVER,
    IDC_NIG_BTN_DELIVER_STATIC, HIDC_NIG_BTN_DELIVER_STATIC,
    IDC_NIG_BTN_DELIVER_WHEN_UP, HIDC_NIG_BTN_DELIVER_WHEN_UP,
	0,0 
};


// "File ipxsnap.rc line 173 : Resource - DIALOG : IDD_STATIC_ROUTE"
static const DWORD rgdw_IDD_STATIC_ROUTE[] = 
{
    IDC_SRD_EDIT_NETWORK_NUMBER, HIDC_SRD_EDIT_NETWORK_NUMBER,
    IDC_SRD_EDIT_NEXT_HOP, HIDC_SRD_EDIT_NEXT_HOP,
    IDC_SRD_EDIT_TICK_COUNT, HIDC_SRD_EDIT_TICK_COUNT,
    IDC_SRD_SPIN_TICK_COUNT, HIDC_SRD_SPIN_TICK_COUNT,
    IDC_SRD_EDIT_HOP_COUNT, HIDC_SRD_EDIT_HOP_COUNT,
    IDC_SRD_SPIN_HOP_COUNT, HIDC_SRD_SPIN_HOP_COUNT,
    IDC_SRD_COMBO_INTERFACE, HIDC_SRD_COMBO_INTERFACE,
	0,0 
};


// "File ipxsnap.rc line 203 : Resource - DIALOG : IDD_STATIC_SERVICE"
static const DWORD rgdw_IDD_STATIC_SERVICE[] = 
{
    IDC_SSD_EDIT_SERVICE_TYPE, HIDC_SSD_EDIT_SERVICE_TYPE,
    IDC_SSD_EDIT_SERVICE_NAME, HIDC_SSD_EDIT_SERVICE_NAME,
    IDC_SSD_EDIT_NETWORK_ADDRESS, HIDC_SSD_EDIT_NETWORK_ADDRESS,
    IDC_SSD_EDIT_NODE_ADDRESS, HIDC_SSD_EDIT_NODE_ADDRESS,
    IDC_SSD_EDIT_SOCKET_ADDRESS, HIDC_SSD_EDIT_SOCKET_ADDRESS,
    IDC_SSD_EDIT_HOP_COUNT, HIDC_SSD_EDIT_HOP_COUNT,
    IDC_SSD_SPIN_HOP_COUNT, HIDC_SSD_SPIN_HOP_COUNT,
    IDC_SSD_COMBO_INTERFACE, HIDC_SSD_COMBO_INTERFACE,
	0,0 
};


// "File ipxsnap.rc line 233 : Resource - DIALOG : IDD_STATIC_NETBIOS_NAME"
static const DWORD rgdw_IDD_STATIC_NETBIOS_NAME[] = 
{
    IDC_SND_EDIT_NAME, HIDC_SND_EDIT_NAME,
    IDC_SND_EDIT_TYPE, HIDC_SND_EDIT_TYPE,
    IDC_SND_COMBO_INTERFACE, HIDC_SND_COMBO_INTERFACE,
	0,0 
};


// "File ipxsnap.rc line 252 : Resource - DIALOG : IDD_RIP_GLOBAL_GENERAL_PAGE"
static const DWORD rgdw_IDD_RIP_GLOBAL_GENERAL_PAGE[] = 
{
    IDC_RGG_BTN_LOG_ERROR, HIDC_RGG_BTN_LOG_ERROR,
    IDC_RGG_BTN_LOG_WARN, HIDC_RGG_BTN_LOG_WARN,
    IDC_RGG_BTN_LOG_INFO, HIDC_RGG_BTN_LOG_INFO,
    IDC_RGG_BTN_LOG_NONE, HIDC_RGG_BTN_LOG_NONE,
	0,0 
};


// "File ipxsnap.rc line 275 : Resource - DIALOG : IDD_RIP_INTERFACE_GENERAL_PAGE"
static const DWORD rgdw_IDD_RIP_INTERFACE_GENERAL_PAGE[] = 
{
    IDC_RIG_BTN_ADMIN_STATE, HIDC_RIG_BTN_ADMIN_STATE,
    IDC_RIG_BTN_ADVERTISE_ROUTES, HIDC_RIG_BTN_ADVERTISE_ROUTES,
    IDC_RIG_BTN_ACCEPT_ROUTE_ADS, HIDC_RIG_BTN_ACCEPT_ROUTE_ADS,
    IDC_RIG_BTN_UPDATE_MODE_STANDARD, HIDC_RIG_BTN_UPDATE_MODE_STANDARD,
    IDC_RIG_BTN_UPDATE_MODE_NONE, HIDC_RIG_BTN_UPDATE_MODE_NONE,
    IDC_RIG_BTN_UPDATE_MODE_AUTOSTATIC, HIDC_RIG_BTN_UPDATE_MODE_AUTOSTATIC,
    IDC_RIG_EDIT_INTERVAL, HIDC_RIG_EDIT_INTERVAL,
    IDC_RIG_SPIN_INTERVAL, HIDC_RIG_SPIN_INTERVAL,
    IDC_RIG_EDIT_MULTIPLIER, HIDC_RIG_EDIT_MULTIPLIER,
    IDC_RIG_SPIN_MULTIPLIER, HIDC_RIG_SPIN_MULTIPLIER,
    IDC_RIG_BTN_INPUT_FILTERS, HIDC_RIG_BTN_INPUT_FILTERS,
    IDC_RIG_BTN_OUTPUT_FILTERS, HIDC_RIG_BTN_OUTPUT_FILTERS,
	0,0 
};


// "File ipxsnap.rc line 319 : Resource - DIALOG : IDD_SAP_GLOBAL_GENERAL_PAGE"
static const DWORD rgdw_IDD_SAP_GLOBAL_GENERAL_PAGE[] = 
{
    IDC_SGG_BTN_LOG_NONE, HIDC_SGG_BTN_LOG_NONE,
    IDC_SGG_BTN_LOG_ERROR, HIDC_SGG_BTN_LOG_ERROR,
    IDC_SGG_BTN_LOG_WARN, HIDC_SGG_BTN_LOG_WARN,
    IDC_SGG_BTN_LOG_INFO, HIDC_SGG_BTN_LOG_INFO,
	0,0 
};


// "File ipxsnap.rc line 341 : Resource - DIALOG : IDD_SAP_INTERFACE_GENERAL_PAGE"
static const DWORD rgdw_IDD_SAP_INTERFACE_GENERAL_PAGE[] = 
{
    IDC_SIG_BTN_ADMIN_STATE, HIDC_SIG_BTN_ADMIN_STATE,
    IDC_SIG_BTN_ADVERTISE_SERVICES, HIDC_SIG_BTN_ADVERTISE_SERVICES,
    IDC_SIG_BTN_ACCEPT_SERVICE_ADS, HIDC_SIG_BTN_ACCEPT_SERVICE_ADS,
    IDC_SIG_BTN_REPLY_GNS_REQUESTS, HIDC_SIG_BTN_REPLY_GNS_REQUESTS,
    IDC_SIG_BTN_UPDATE_MODE_STANDARD, HIDC_SIG_BTN_UPDATE_MODE_STANDARD,
    IDC_SIG_BTN_UPDATE_MODE_NONE, HIDC_SIG_BTN_UPDATE_MODE_NONE,
    IDC_SIG_BTN_UPDATE_MODE_AUTOSTATIC, HIDC_SIG_BTN_UPDATE_MODE_AUTOSTATIC,
    IDC_SIG_EDIT_INTERVAL, HIDC_SIG_EDIT_INTERVAL,
    IDC_SIG_SPIN_INTERVAL, HIDC_SIG_SPIN_INTERVAL,
    IDC_SIG_EDIT_MULTIPLIER, HIDC_SIG_EDIT_MULTIPLIER,
    IDC_SIG_SPIN_MULTIPLIER, HIDC_SIG_SPIN_MULTIPLIER,
    IDC_SIG_BTN_INPUT_FILTERS, HIDC_SIG_BTN_INPUT_FILTERS,
    IDC_SIG_BTN_OUTPUT_FILTERS, HIDC_SIG_BTN_OUTPUT_FILTERS,
	0,0 
};


// "File ipxsnap.rc line 390 : Resource - DIALOG : IDD_IPX_IF_CONFIG_PAGE"
static const DWORD rgdw_IDD_IPX_IF_CONFIG_PAGE[] = 
{
    IDC_IIC_EDIT_NETNUMBER, HIDC_IIC_EDIT_NETNUMBER,
	0,0 
};


// "File ipxsnap.rc line 401 : Resource - DIALOG : IDD_ROUTE_FILTERS_INPUT and IDD_ROUTE_FILTERS_OUTPUT"
static const DWORD rgdw_IDD_ROUTE_FILTERS[] = 
{
    IDC_RFS_BTN_DENY, HIDC_RFS_BTN_DENY,
    IDC_RFS_BTN_PERMIT, HIDC_RFS_BTN_PERMIT,
    IDC_RFS_LIST, HIDC_RFS_LIST,
    IDC_RFS_BTN_ADD, HIDC_RFS_BTN_ADD,
    IDC_RFS_BTN_EDIT, HIDC_RFS_BTN_EDIT,
    IDC_RFS_BTN_DELETE, HIDC_RFS_BTN_DELETE,
	0,0 
};


// "File ipxsnap.rc line 425 : Resource - DIALOG : IDD_ROUTE_FILTER"
static const DWORD rgdw_IDD_ROUTE_FILTER[] = 
{
    IDC_RF_TEXT_INTERFACE, HIDC_RF_TEXT_INTERFACE,
    IDC_RF_EDIT_INTERFACE, HIDC_RF_EDIT_INTERFACE,
    IDC_RF_EDIT_NETWORK, HIDC_RF_EDIT_NETWORK,
    IDC_RF_EDIT_NETMASK, HIDC_RF_EDIT_NETMASK,
	0,0 
};


// "File ipxsnap.rc line 443 : Resource - DIALOG : IDD_SERVICE_FILTER"
static const DWORD rgdw_IDD_SERVICE_FILTER[] = 
{
    IDC_SF_TEXT_INTERFACE, HIDC_SF_TEXT_INTERFACE,
    IDC_SF_EDIT_INTERFACE, HIDC_SF_EDIT_INTERFACE,
    IDC_SF_EDIT_SERVICE_TYPE, HIDC_SF_EDIT_SERVICE_TYPE,
    IDC_SF_EDIT_SERVICE_NAME, HIDC_SF_EDIT_SERVICE_NAME,
	0,0 
};


// "File ipxsnap.rc line 461 : Resource - DIALOG : IDD_SERVICE_FILTERS"
static const DWORD rgdw_IDD_SERVICE_FILTERS[] = 
{
    IDC_SFS_BTN_DENY, HIDC_SFS_BTN_DENY,
    IDC_SFS_BTN_PERMIT, HIDC_SFS_BTN_PERMIT,
    IDC_SFS_LIST, HIDC_SFS_LIST,
    IDC_SFS_BTN_ADD, HIDC_SFS_BTN_ADD,
    IDC_SFS_BTN_EDIT, HIDC_SFS_BTN_EDIT,
    IDC_SFS_BTN_DELETE, HIDC_SFS_BTN_DELETE,
	0,0 
};


//
// End of mkdlg.exe output
//

// This is similar to IDD_STATIC_ROUTE, so I'll use the same helps
static const DWORD rgdw_IDD_STATIC_ROUTE_PROPERTYPAGE[] = 
{
    IDC_SRD_EDIT_NETWORK_NUMBER, HIDC_SRD_EDIT_NETWORK_NUMBER,
    IDC_SRD_EDIT_NEXT_HOP, HIDC_SRD_EDIT_NEXT_HOP,
    IDC_SRD_EDIT_TICK_COUNT, HIDC_SRD_EDIT_TICK_COUNT,
    IDC_SRD_SPIN_TICK_COUNT, HIDC_SRD_SPIN_TICK_COUNT,
    IDC_SRD_EDIT_HOP_COUNT, HIDC_SRD_EDIT_HOP_COUNT,
    IDC_SRD_SPIN_HOP_COUNT, HIDC_SRD_SPIN_HOP_COUNT,
	0,0
};

// This is similar to IDD_STATIC_NETBIOS_NAME, so I'll use the same helps
static const DWORD rgdw_IDD_STATIC_NETBIOS_NAME_PROPERTYPAGE[] = 
{
    IDC_SND_EDIT_NAME, HIDC_SND_EDIT_NAME,
    IDC_SND_EDIT_TYPE, HIDC_SND_EDIT_TYPE,
	0,0
};

// Have to include the dialogs in common
#include "commhelp.cpp"


static BOOL				s_fInitHelpMap = FALSE;
static CMapWordToPtr	s_IDDHelpMap;
void InitHelpMap();

DWORD *	IpxSnapHelpMap(DWORD dwIDD)
{
	LPVOID	pvHelpMap = NULL;
	
	if (!s_fInitHelpMap)
	{
		InitHelpMap();
		s_fInitHelpMap = TRUE;
	}

	// Look in the help map
	s_IDDHelpMap.Lookup((SHORT) dwIDD, pvHelpMap);
	return (DWORD *) pvHelpMap;
}

void InitHelpMap()
{
	s_IDDHelpMap.SetAt(IDD_IPX_GLOBAL_GENERAL_PAGE, (LPVOID) rgdw_IDD_IPX_GLOBAL_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_IPX_IF_GENERAL_PAGE, (LPVOID) rgdw_IDD_IPX_IF_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_IPX_NB_IF_GENERAL_PAGE, (LPVOID) rgdw_IDD_IPX_NB_IF_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_STATIC_ROUTE, (LPVOID) rgdw_IDD_STATIC_ROUTE);
	s_IDDHelpMap.SetAt(IDD_STATIC_SERVICE, (LPVOID) rgdw_IDD_STATIC_SERVICE);
	s_IDDHelpMap.SetAt(IDD_STATIC_NETBIOS_NAME, (LPVOID) rgdw_IDD_STATIC_NETBIOS_NAME);
	s_IDDHelpMap.SetAt(IDD_RIP_GLOBAL_GENERAL_PAGE, (LPVOID) rgdw_IDD_RIP_GLOBAL_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_RIP_INTERFACE_GENERAL_PAGE, (LPVOID) rgdw_IDD_RIP_INTERFACE_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_SAP_GLOBAL_GENERAL_PAGE, (LPVOID) rgdw_IDD_SAP_GLOBAL_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_SAP_INTERFACE_GENERAL_PAGE, (LPVOID) rgdw_IDD_SAP_INTERFACE_GENERAL_PAGE);
	s_IDDHelpMap.SetAt(IDD_IPX_IF_CONFIG_PAGE, (LPVOID) rgdw_IDD_IPX_IF_CONFIG_PAGE);
	
	s_IDDHelpMap.SetAt(IDD_ROUTE_FILTERS_INPUT, (LPVOID) rgdw_IDD_ROUTE_FILTERS);
	s_IDDHelpMap.SetAt(IDD_ROUTE_FILTERS_OUTPUT, (LPVOID) rgdw_IDD_ROUTE_FILTERS);

	s_IDDHelpMap.SetAt(IDD_ROUTE_FILTER, (LPVOID) rgdw_IDD_ROUTE_FILTER);
	s_IDDHelpMap.SetAt(IDD_SERVICE_FILTER, (LPVOID) rgdw_IDD_SERVICE_FILTER);
	s_IDDHelpMap.SetAt(IDD_SERVICE_FILTERS_INPUT, (LPVOID) rgdw_IDD_SERVICE_FILTERS);
	s_IDDHelpMap.SetAt(IDD_SERVICE_FILTERS_OUTPUT, (LPVOID) rgdw_IDD_SERVICE_FILTERS);
	s_IDDHelpMap.SetAt(IDD_STATIC_ROUTE_PROPERTYPAGE, (LPVOID) rgdw_IDD_STATIC_ROUTE_PROPERTYPAGE);
	s_IDDHelpMap.SetAt(IDD_STATIC_NETBIOS_NAME_PROPERTYPAGE, (LPVOID) rgdw_IDD_STATIC_NETBIOS_NAME_PROPERTYPAGE);

    // Include the entries for common
    s_IDDHelpMap.SetAt(IDD_STATS, (LPVOID) rgdw_IDD_STATS);
    s_IDDHelpMap.SetAt(IDD_STATS_NARROW, (LPVOID) rgdw_IDD_STATS_NARROW);
    s_IDDHelpMap.SetAt(IDD_COMMON_SELECT_COLUMNS, (LPVOID) rgdw_IDD_COMMON_SELECT_COLUMNS);
    s_IDDHelpMap.SetAt(IDD_BUSY, (LPVOID) rgdw_IDD_BUSY);
    
}

