/*++

Copyright (c) 1996 Microsoft Corporation

Module Name:

    winsmon.rc

Abstract:

    Wins Manager Console Monitor Resources

Author:

    Shubho Bhattacharya(a-sbhatt) created on 11/14/98

Revision History:


--*/

#include    "strdefs.h"

STRINGTABLE
{
    WINS_FORMAT_LINE,                           "\n"
    WINS_FORMAT_TAB,                            "\t"
    WINS_MSG_NULL,                              ""

    WINS_TYPE_STATIC,                           "STATIC "

    WINS_TYPE_DYNAMIC,                          "DYNAMIC"

    WINS_STATE_ACTIVE,                          "ACTIVE   "
    
    WINS_STATE_RELEASED,                        "RELEASED "
    
    WINS_STATE_TOMBSTONE,                       "TOMBSTONE"

    WINS_GROUP_UNIQUE,                          "UNIQUE        "

    WINS_GROUP_GROUP,                           "GROUP         "

    WINS_GROUP_DOMAIN,                          "DOMAIN NAME   "

    WINS_GROUP_INTERNET,                        "INTERNET GROUP"

    WINS_GROUP_MULTIHOMED,                      "MULTIHOMED    "

    WINS_GENERAL_UNKNOWN,                       "Not Set"
    
    WINS_GENERAL_ENABLE,                        "Enabled"

    WINS_GENERAL_DISABLE,                       "Disabled"

    WINS_GENERAL_RANDOM,                        "Randomly Selected Server"

    WINS_GENERAL_OWNER,                         "Owner Server"

    WINS_GENERAL_INFINITE,                      "Infinite                "

    WINS_GENERAL_PUSH,                          "    Push"

    WINS_GENERAL_PULL,                          "    Pull"

    WINS_GENERAL_PUSHPULL,                      "  Push/Pull"

    WINS_GENERAL_NORMAL,                        "NORMAL"
    
    WINS_GENERAL_HIGH,                          "HIGH"

    WINS_GENERAL_DELETED,                       "Deleted. Slot will be reused later."
    
    WINS_GENERAL_OK,                            "OK"

    WINS_GENERAL_FAILURE,                       "FAILED"

    WINS_GENERAL_READWRITE,                     "Read and Write"

    WINS_GENERAL_READ,                          "Read Only"

    WINS_GENERAL_NOREAD,                        "No"

    WINS_GENERAL_NAMENOTVERIFIED,               "Name can not be verified."
    
    
    HLP_WINS_HELP1,                             "\
    help                            - Displays help.\n"

    HLP_WINS_HELP1_EX,                          "\
    \nUsage: help\n\
    \n       Displays help.\n\n"

    HLP_WINS_HELP2,                             "\
    ?                               - Displays help.\n"

    HLP_WINS_HELP2_EX,                          "\
    \nUsage: ?\n\
    \n       Displays help.\n\n"

    HLP_WINS_HELP3,                             "\
    /?                              - Displays help.\n"

    HLP_WINS_HELP3_EX,                          "\
    \nUsage: /?\n\
    \n       Displays help.\n\n"

    HLP_WINS_HELP4,                             "\
    -?                              - Displays help.\n"

    HLP_WINS_HELP4_EX,                          "\
    \nUsage: -?\n\
    \n       Displays help.\n\n"

    HLP_WINS_DUMP,                              "\
    dump                            - Dumps configuration to the output.\n"

    HLP_WINS_DUMP_EX,                           "\
    \nSyntax: \
    \n \
    \n        netsh wins server [\\ServerName | Address] dump > FileName \
    \n \
    \nParameters: \
    \n     \
    \n        ServerName     - The name of the remote (non-local) WINS  \
    \n                         server. \
    \n \
    \n        Address	     - The IP address of the remote (non-local) WINS \
    \n                         server. \
    \n \
    \n        FileName       - The name of the destination file where the \
    \n                         WINS server configuration is dumped. \
    \n \
    \nNotes:         This command permits you to view the WINS configuration \
    \n               in a text editor or use the load command for loading \
    \n               the output file to configure another WINS server. If \
    \n               used without redirection in Netshell, this command \
    \n               displays the WINS server configuration information in \
    \n               the command window.   \
    \n \
    \nExamples:      netsh wins server dump > wincfg.dmp \
    \n               netsh wins server \\WINS-A dump > winscfg.dmp \
    \n               netsh wins server 10.0.0.1 dump > winscfg.dmp \
    \n"


    HLP_WINS_CONTEXT_SERVER,                    "\
    server [\\\\servername/ipaddress] - Switches to the specified server context. \
    \n                                  No parameter implies local machine.\n"

    HLP_WINS_CONTEXT_SERVER_EX,                 "\
    \nSwitches the active command context to the specified WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        server [\\\\ServerName | IP Address] \
    \n \
    \nParameters: \
    \n \
    \n        ServerName     - The name of the remote (non-local) WINS \
    \n                         server. \
    \n \
    \n        IP Address     - The IP address of the remote (non-local) \
    \n                         WINS server. \
    \n \
    \nNotes:         If no parameters are used with this command, the local \
    \n               WINS server on the same computer is assumed as the \
    \n               default.    \
    \n \
    \nExamples:	   server \
    \n               server \\\\WINS-SRV1 \
    \n               server 10.0.0.1 \
    \n"

    HLP_WINS_ADD_SERVER,                        "\
    add server                      - Adds a WINS server to the WINS manager." 

    HLP_WINS_ADD_SERVER_EX,                     "\
    \nUsage   : add server [[server=]\\\\servername or serveripaddress]\
    \n          server : Server name. Either NetBios name or IP Address.\
    \nPurpose : Add server to the WINS Server Manager.\
    \nExample : add server server=101.214.32.28\
    \n          will add a server with ip address 101.214.32.28 to the WINS\
    \n          manager.\n"
    
    HLP_WINS_DELETE_SERVER,                     "\
    delete server                   - Deletes a WINS server from the WINS manager."

    HLP_WINS_DELETE_SERVER_EX,                  "\
    \nUsage   : delete server [[server=]\\\\servername or serveripaddress]\
    \n          server : Server name. Either NetBios name or IP Address.\
    \nPurpose : Delete server from the WINS Server Manager.\
    \nExample : delete server server=101.214.32.28 \
    \n          will delete the server with ip address 101.214.32.28 from the WINS\
    \n          manager.\n"

    HLP_WINS_SHOW_SERVER,                       "\
    show server                     - Displays all the WINS servers under the\
    \n                                  current manager"

    HLP_WINS_SHOW_SERVER_EX,                    "\
    \nDisplays information for the currently selected server where WINS \
    \ncommands are applied.  \
    \n \
    \nSyntax: \
    \n \
    \n        show server \
    \n \
    \nNote:          This command displays the name and IP address of the \
    \n               current WINS server.  \
    \n"


    HLP_GROUP_ADD,                              "\
    add                             - Adds a configuration entry to a table.\n"

    HLP_GROUP_CHECK,                            "\
    check                           - Checks the integritry of a table.\n"

    HLP_GROUP_DELETE,                           "\
    delete                          - Deletes a configuration entry from a table.\n"

    HLP_GROUP_INIT,                             "\
    init                            - Initiates an operation for the table.\n"

    HLP_GROUP_RESET,                            "\
    reset                           - Resets a configuration entry in a table.\n"

    HLP_GROUP_SET,                              "\
    set                             - Sets the value of a configuration entry in a \
    \n                                  table.\n"

    HLP_GROUP_SHOW,                             "\
    show                            - Displays information about a set or a \
    \n                                  particular entry in a table.\n"

    HLP_SRVR_ADD_FILTER,                        "\
    add filter                      - To add user defined Filters to the server."

    HLP_SRVR_ADD_FILTER_EX,                     "\
    \nUsage   : add filter <[ID=]id(in hex)> <[Desc=]filter description>\
    \n          ID   : ID of the filter in hex.\
    \n          Desc : A description of the filter.\
    \nPurpose : To add a filter with the given id and description to the server.\n"

    HLP_SRVR_ADD_NAME,                          "\
    Add Name                        - Adds a name record to the server."

    HLP_SRVR_ADD_NAME_EX,                       "\
    \nTo add a name record to the WINS server database. \
    \n \
    \nSyntax: \
    \n \
    \n        add name [Name=]ServerName [[Endchar=]16th char in Hex] \
    \n        [[Scope=]scopename] [[RecType=]RecordType] [[Group=]GroupType] \
    \n        [[Node=]NodeType] [IP=]{address1[,address2,address3]} \
    \n \
    \nParameters: \
    \n \
    \n        Name           - The name to add and register in the WINS \
    \n                         server database.  \
    \n \
    \n        Endchar        - If used, the 16th character of the name in \
    \n                         hexadecimal.  \
    \n \
    \n        Scope          - If NetBIOS scope is used, the name of the \
    \n                         scope.  \
    \n \
    \n        RecType        - The record type: 0-Static(default), \
    \n                         1-Dynamic.  \
    \n \
    \n        Group          - The group type: 0-Unique, 1-Group, 2-Internet \
    \n                         3-Multihomed, 4-Domain Name. \
    \n \
    \n        Node           - The NetBIOS node type: 0-B Node, 1-P Node, \
    \n                         3-H Node.  \
    \n \
    \n        IP             - The list of IP addresses separated by commas \
    \n                         and enclosed by {}.  \
    \n \
    \nNotes:         Field tags (Name=, EndChar=) are optional. If \
    \n               EndChar and Group are both used, EndChar overrides the \
    \n               Group parameter. If used, tags must be applied to all \
    \n               field parameters in the command. If tags are omitted, a \
    \n               value must be provided for each of the supported fields \
    \n               in the specified command.   \
    \n \
    \nExamples:      add name Name=HOSTA IP={10.0.0.1} \
    \n               add name HOSTB 20 SUBNETA 0 3 1 {10.0.0.2,10.0.0.3} \
    \n \
    \n               The first example command adds a default NetBIOS record \
    \n               set of the 00h, 03h, and 20h records for a computer \
    \n               named HOSTA with a mapped IP address of 10.0.0.1. The \
    \n               second example command adds a 20h record for HOSTB, a \
    \n               multihomed computer with IP addresses 10.0.0.2 and \
    \n               10.0.0.3.  \
    \n"
    
    HLP_SRVR_ADD_PARTNER,                       "\
    Add Partner	                    - Adds a replication partner to the server."

    HLP_SRVR_ADD_PARTNER_EX,                    "\
    \nTo add a replication partner for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        add partner [Server=]IP address [[NetBIOS=]Server NetBIOS name]   \
    \n        [[Type=]Partner type] \
    \n \
    \nParameters: \
    \n \
    \n        Server         - Server IP address. \
    \n \
    \n        NetBIOS        - Server NetBIOS name. \
    \n \
    \n        Type           - 0-Pull, 1-Push, 2-Both (default). \
    \n \
    \nNotes:         If the IP address does not resolve, the NetBIOS name \
    \n               parameter is used for creating the partner \
    \n               record. Otherwise, the NetBIOS parameter is not used.  \
    \n \
    \nExample:	   add partner 10.2.2.2 \
    \n \
    \n               This example command adds a push/pull replication \
    \n               partner with an IP address of 10.2.2.2 to the current \
    \n               WINS server.  \
    \n"

    HLP_SRVR_ADD_PNGSERVER,        "\
    Add PNGServer                   - Adds a list of Persona Non Grata Servers for\
    \n                                  the current server."

    HLP_SRVR_ADD_PNGSERVER_EX,     "\
    \nTo add to the list of Persona Non Grata servers for the current \
    \nserver.   \
    \n \
    \nSyntax: \
    \n \
    \nadd pngserver [Servers=]{list of server IP addresses} \
    \n \
    \nParameters: \
    \n \
    \n        Servers        - A list of server IP addresses separated by \
    \n                         commas and enclosed by brackets ({}). \
    \n \
    \nNotes:         This operation appends the new server after checking \
    \n               for duplicates. The Persona Non Grata list is used to \
    \n               specify owners (other WINS servers) whose records are \
    \n               to be blocked during replication.  \
    \n \
    \nExample:       add pngserver {10.2.2.2,10.2.2.3} \
    \n \
    \n               This command adds the WINS servers 10.2.2.2 and \
    \n               10.2.2.3 to the Persona Non Grata list for the current \
    \n               WINS server.   \
    \n"

    HLP_SRVR_ADD_PGSERVER,          "\
    Add PGServer                    - Adds a list of Persona Grata Servers for\
    \n                                  the current server."

    HLP_SRVR_ADD_PGSERVER_EX,       "\
    \nTo add to the list of Persona Grata servers for the current \
    \nserver.   \n\
    \n \
    \nSyntax: \
    \n \
    \nadd pgserver [Servers=]{list of server IP addresses} \
    \n \
    \nParameters: \
    \n \
    \n        Servers        - A list of server IP addresses separated by \
    \n                         commas and enclosed by brackets ({}). \
    \n \
    \nNotes:         This operation appends the new server after checking \
    \n               for duplicates. The Persona Grata list is used to \
    \n               specify owners (other WINS servers) whose records are \
    \n               the only ones to be accepted during replication.  \
    \n \
    \nExample:       add pgserver {10.2.2.2,10.2.2.3} \
    \n \
    \n               This command adds the WINS servers 10.2.2.2 and \
    \n               10.2.2.3 to the Persona Grata list for the current \
    \n               WINS server.   \
    \n"        

    HLP_SRVR_CHECK_DATABASE,                    "\
    Check Database                  - Checks the consistency of the database."

    HLP_SRVR_CHECK_DATABASE_EX,                 "\
    \nTo check the consistency of the WINS database. \
    \n \
    \nSyntax: \
    \n \
    \n        check database [[all=]1|0] [[force=]1|0] \
    \n \
    \nParameters: \
    \n \
    \n        all           - To do Consistency check for All replicas or  \
    \n                        those older than the verify interval. \
    \n                        1 - for all, 0 - otherwise(default). \
    \n        force         - To override Wins Consistency check under \
    \n                        overloaded condition. \
    \n                        1 - to override, 0 - otherwise(default). \
    \n \
    \nNotes:         Consistency checking all replicas is a network and \
    \n               resource intensive operation. \
    \n               Overload condition is  Consistency Check command being \
    \n               repeated within a duration of 1 hour. \
    \n \
    \nExample:       check database 1 \
    \n \
    \n               This command will do a consistency check for all \
    \n               replicas without overriding the operation under \
    \n               overloaded  condition. \
    \n"
    
    HLP_SRVR_CHECK_NAME,                        "\
    Check Name                      - Checks a list of name records against a set\
    \n                                  of WINS servers." 

    HLP_SRVR_CHECK_NAME_EX,                     "\
    \nTo check a list of name records against a set of WINS servers. \
    \n \
    \nSyntax: \
    \n \
    \n        check name [NameFile=]File name or [NameList=]Names list  \
    \n        [ServerFile=]File name or [ServerList=]List of server IP \
    \n        addresses [[InclPartner=]Y] \
    \n \
    \nParameters: \
    \n \
    \n        NameFile       - The name of the file containing the list of \
    \n                         names.  \
    \n \
    \n        NameList       - The list of names separated by commas and \
    \n                         enclosed by {braces}. \
    \n \
    \n        ServerFile     - The name of the file with the list of server \
    \n                         IP addresses.  \
    \n \
    \n        ServerList     - The list of server IP addresses, separated by \
    \n                         commas and enclosed by {braces}. \
    \n \
    \n        InclPartner    - Use Y or y to include all partners in the \
    \n                         list of servers. Partners are not included by \
    \n                         default.  \
    \n \
    \nNotes:         Appropriate tags are required for this command. Whenever \
    \n               inconsistencies are found, repair is attempted.  \
    \n               Format for Name in both NameFile and NameList is\
    \n               Name*16thchar, where Name is the record name and 16thchar \
    \n               is the 16th character for the record. \
    \n               Name entries in the file are separated by comma or line \
    \n               feed or carriage return. \
    \n \
    \nExample:       check name NameFile=D:\\names.txt ServerFile=D:\\servers.txt  \
    \n \
    \n               check name NameList={Name1*03,Name1*00,Name1*20}\
    \n                          ServerList={10.2.2.2,10.2.2.3}\
    \n \
    \n               The first example command checks WINS data against the \
    \n               Names.txt and Servers.txt files, assuming those files \
    \n               to be located in the specified path location (the root \
    \n               of drive D).\
    \n \
    \n               The second example command checks the names Name1 with\
    \n               16th character 03, 00 and 20h respectively against the\
    \n               servers with IP address 10.2.2.2 and 10.2.2.3.\
    \n"

    
    HLP_SRVR_CHECK_VERSION,                     "\
    Check Version                   - Checks the consistency of the version number."
    
    HLP_SRVR_CHECK_VERSION_EX,                  "\
    \nTo check the consistency of version ID numbers for owners in the WINS \
    \ndatabase.  \
    \n \
    \nSyntax: \
    \n \
    \n        check version [Server=]IP address [[File=]File name] \
    \n \
    \nParameters: \
    \n \
    \n        Server         - IP address of the start WINS server. \
    \n \
    \n        File           - Name of the file to store the index to IP \
    \n                         address table.  \
    \n \
    \nNotes:         If the name of the file provided for File= tag is \
    \n               invalid, the FileName is set to Wins.rec in the current \
    \n               directory. You might also need to increase the width of \
    \n               the command window to make it wide enough to view \
    \n               the table correctly.  \
    \n \
    \nExample:       check version 10.2.2.2 \
    \n \
    \n               This command is used to verify the version number \
    \n               consistency of the records for a WINS server of IP \
    \n               address 10.2.2.2 at its replication partners. \
    \n"

    
    HLP_SRVR_DELETE_NAME,                       "\
    Delete Name                     - Deletes a registered name from the server\
    \n                                  database."

    HLP_SRVR_DELETE_NAME_EX,                    "\
    \nTo delete a registered name from the WINS server database. \
    \n \
    \nSyntax: \
    \n \
    \n        delete name [Name=]Server name [EndChar=]16th character (Hex) \
    \n        [[Scope=]Scope name] \
    \n \
    \nParameters: \
    \n \
    \n        Name           - Name to be deleted. \
    \n \
    \n        EndChar        - 16th character of the name. \
    \n \
    \n        Scope          - Scope name. \
    \n \
    \nNotes:         Not all parameters are used. \
    \n \
    \nExample:       delete name Name=HOSTA Endchar=03 \
    \n \
    \n               This command is used to delete the messenger (03h) \
    \n               records with the record name HOSTA from the WINS \
    \n               database.  \
    \n"

    
    HLP_SRVR_DELETE_RECORDS,                    "\
    Delete Records                  - Deletes or tombstones all or a set of\
    \n                                  records from the server."

    HLP_SRVR_DELETE_RECORDS_EX,                 "\
    \nTo delete or tombstone all records or a set of records from the server. \
    \n \
    \nSyntax: \
    \n \
    \n        delete records [MinVer=]{high,low} [MaxVer=]{high,low}  \
    \n        [[Op=]Delete or tombstone] \
    \n \
    \nParameters: \
    \n \
    \n        MinVer         - Minimum version from which to begin \
    \n                         deletion. \
    \n \
    \n        MaxVer         - Maximum version at which to end deletion.   \
    \n \
    \n        Op             - 0-delete(default), 1-tombstone. \
    \n \
    \nNotes: Setting MinVer and MaxVer both to {0,0} deletes all records. \
    \n \
    \nExample:       delete records minver={0,0} maxver={0,0} op=1 \
    \n \
    \n               This command marks all records on the WINS server as \
    \n               tombstoned.  \
    \n"
    
    HLP_SRVR_DELETE_PARTNER,                    "\
    Delete Partner                  - Deletes a replication partner from the\
    \n                                  list of replication partners."
    
    HLP_SRVR_DELETE_PARTNER_EX,                 "\
    \nTo delete either all replication partners or a specified replication \
    \npartner.  \
    \n \
    \nSyntax: \
    \n \
    \ndelete partner [[Server=]IP address] [[Type=]0|1|2] [Confirm=] Y \
    \n \
    \nParameters: \
    \n \
    \n        Server         - IP address of the partner to delete. When no \
    \n                         address is provided, all partners are deleted. \
    \n \
    \n        Type           - 0-Pull, 1-Push, 2-Both(default). When no type \
    \n                         is selected, the specified server is deleted \
    \n                         from both the push partner and pull partner \
    \n                         lists.  \
    \n \
    \n        Confirm	       - Y-initiate and complete the operation. \
    \n \
    \nNotes:         When confirming server deletion, the default is No. \
    \n \
    \nExample:       delete partner server=10.0.0.1 type=2 confirm=Y \
    \n \
    \n               This command deletes a push/pull type partner with an \
    \n               IP address of 10.0.0.1 from the current WINS server \
    \n               without prompting for confirmation.  \
    \n"

    HLP_SRVR_DELETE_PNGSERVER,                  "\
    Delete PNGServer                - Deletes all or selected Persona Non Grata\
    \n                                  Servers from the list"

    HLP_SRVR_DELETE_PNGSERVER_EX,               "\
    \nTo delete all or specific Persona Non Grata servers from the list. \
    \n \
    \nSyntax: \
    \n \
    \n        delete pngserver [Servers=]{List of IP addresses} \
    \n \
    \nParameters: \
    \n \
    \n        Servers	       - A list of server IP addresses separated by \
    \n                         commas and enclosed by {brackets}. \
    \n \
    \nNotes:         The Persona Non Grata (PNG) list is used to specify \
    \n               owners (other WINS servers) whose records are to be \
    \n               blocked during replication. If an empty set of brackets \
    \n               {} are used with no IP addresses specified, all servers \
    \n               on the PNG server list are deleted. \
    \n \
    \nExample:       delete pngserver server={10.2.2.2,10.2.2.3} \
    \n \
    \n               This command adds the WINS servers 10.2.2.2 and \
    \n               10.2.2.3 to the Persona Non Grata list for this WINS \
    \n               server.  \
    \n"

    HLP_SRVR_DELETE_PGSERVER,                  "\
    Delete PGServer                 - Deletes all or selected Persona Grata\
    \n                                  Servers from the list"

    HLP_SRVR_DELETE_PGSERVER_EX,               "\
    \nTo delete all or specific Persona Grata servers from the list. \
    \n \
    \nSyntax: \
    \n \
    \n        delete pgserver [Servers=]{List of IP addresses} \
    \n \
    \nParameters: \
    \n \
    \n        Servers	       - A list of server IP addresses separated by \
    \n                         commas and enclosed by {brackets}. \
    \n \
    \nNotes:         The Persona Grata (PG) list is used to specify \
    \n               owners (other WINS servers) whose records are to be \
    \n               the only ones accepted during replication. If an empty set of \
    \n               brackets {} are used with no IP addresses specified, all \
    \n               servers on the PG server list are deleted. \
    \n \
    \nExample:       delete pgserver server={10.2.2.2,10.2.2.3} \
    \n \
    \n               This command adds the WINS servers 10.2.2.2 and \
    \n               10.2.2.3 to the Persona Grata list for this WINS \
    \n               server.  \
    \n"    

    HLP_SRVR_DELETE_WINS,                       "\
    Delete Owners                   - Deletes a list of owners and their records."

    HLP_SRVR_DELETE_WINS_EX,                    "\
    \nTo delete a list of owners and their records. \
    \n \
    \nSyntax: \
    \n \
    \n        delete owners [Servers=]{List of IP addresses} [[Op=]0|1]  \
    \n \
    \nParameters: \
    \n \
    \n        Servers        - A list of owner server IP addresses with \
    \n                         records that are to be deleted, separated by \
    \n                         commas and enclosed by brackets ({}). \
    \n \
    \n        Op             - 0-Tombstone (default), 1-delete. \
    \n \
    \nExample:       delete owners servers={10.0.0.1} op=0 \
    \n \
    \n               This command deletes all records owned by the WINS \
    \n               server with the IP address 10.0.0.1. \
    \n"


    HLP_SRVR_INIT_BACKUP,                       "\
    Init Backup                     - Initiates backup of WINS database."

    HLP_SRVR_INIT_BACKUP_EX,                    "\
    \nTo initiate backup of the WINS database to a specified directory. \
    \n \
    \nSyntax: \
    \n \
    \ninit backup [[Dir=]Backup dir] [[Type=]0|1] \
    \n \
    \nParameters: \
    \n \
    \n        Dir            - Directory where backups are stored. If not \
    \n                         specified, the current default backup path is \
    \n                         used.  \
    \n \
    \n        Type           - 0-Full backup(default), 1-Incremental backup. \
    \n \
    \nNotes:         WINS backup can only be used for local backup on the \
    \n               same server. Backup of remote WINS servers is not \
    \n               supported.  \
    \n               Also, the backup files will be created under Dir\wins_bak\
    \n               directory rather than the ""Dir"" directory. \
    \n \
    \nExample:       init backup dir=C:\WINSfiles type=0 \
    \n \
    \n               This command starts a full backup of the WINS database \
    \n               on the local WINS server to the folder C:\WINSfiles\wins_bak. \
    \n               wins_bak subdirectory will be created by WINS. \
    \n"


    
    HLP_SRVR_INIT_COMPACT,                      "\
    Init Compact                    - Initiates compacting of database."

    HLP_SRVR_INIT_COMPACT_EX,                   "\
    \nTo initialize compacting of the WINS server database. \
    \n \
    \nSyntax: \
    \n \
    \n        init compact \
    \n \
    \n Example:      init compact \
    \n \
    \n               This command initiates compaction of the WINS database \
    \n"
    
    HLP_SRVR_INIT_EXPORT,                       "\
    Init Export                     - Initiates export WINS database to a file."
    
    HLP_SRVR_INIT_EXPORT_EX,                    "\
    \n"

    HLP_SRVR_INIT_IMPORT,                       "\
    Init Import                     - Initiates import from an LMHOSTS file."

    HLP_SRVR_INIT_IMPORT_EX,                    "\
    \nTo initiate an import of static mappings from an Lmhosts file. \
    \n \
    \nSyntax: \
    \n \
    \n        init import [File=]Import File \
    \n \
    \nParameters: \
    \n \
    \n        File           - The name of the Lmhosts-formatted text file \
    \n                         used for importing static mappings into the \
    \n                         WINS database.   \
    \n \
    \nExample:       init import file=C:\WINSfiles\Fixedip.sam \
    \n \
    \n               This command imports the contents of the Fixedip.sam \
    \n               file, located at the C:\WINSfiles path as new static \
    \n               mappings in the local WINS database.  \
    \n"

    
    HLP_SRVR_INIT_PULL,                         "\
    Init Pull                       - Initiates and send a pull trigger to \
    \n                                  another WINS server."

    HLP_SRVR_INIT_PULL_EX,                      "\
    \nTo initiate and send a pull trigger to another WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        init pull [Server=]Pull server name or IP address \
    \n \
    \nParameters: \
    \n \
    \n        Server         - Name of the pull server to which to send trigger. \
    \n \
    \nNote:          If the name is provided and cannot be resolved, the \
    \n               operation fails. \
    \n \
    \nExample:       init pull server=10.2.2.2 \
    \n \
    \n               This command sends a pull trigger to WINS server \
    \n               10.2.2.2.  \
    \n"


    HLP_SRVR_INIT_PULLRANGE,                    "\
    Init PullRange                  - Initiates and pull a range of records \
    \n                                  from another WINS server."

    HLP_SRVR_INIT_PULLRANGE_EX,                 "\
    \nTo initiate and pull a range of records from another WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        init pullrange [Owner=] Owner server IP  [Server=] Pull server IP \
    \n        [MaxVer=] {high,low} [MinVer=] {high,low} \
    \n \
    \nParameters: \
    \n \
    \n        Owner          - IP address of the WINS server with records to \
    \n                         be pulled.  \
    \n \
    \n        Server         - IP address of the WINS server that pulls the \
    \n                         range of records.  \
    \n \
    \n        MaxVer         - Maximum version number of records to be pulled. \
    \n \
    \n        MinVer         - Minimum version number of records to be pulled. \
    \n \
    \nNote:      Setting both MaxVer and MinVer to {0,0} pulls the entire \
    \n           range of records. \
    \n \
    \nExample:   init pullrange owner=10.2.2.2 server=10.2.2.3 maxver={0,0} minver={0,0} \
    \n \
    \n           This command sends a pull trigger to WINS server 10.2.2.3 \
    \n           for all records owned by WINS server 10.2.2.2. \
    \n"


    HLP_SRVR_INIT_PUSH,                         "\
    Init Push                       - Initiates and send a push trigger to \
    \n                                  another WINS server."
   
    HLP_SRVR_INIT_PUSH_EX,                      "\
    \nTo initiate and send a push trigger to another WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        init push [Server=]Push server name or IP address [[PropReq=]0|1] \
    \n \
    \nParameters: \
    \n \
    \n        Server         - The name of the push server to which to send \
    \n                         a trigger.  \
    \n \
    \n        PropReq        - 0-Push to the specified server only (default) \
    \n                         1-Have server propagate the push trigger to \
    \n                         all of its partners  \
    \n \
    \nNote:          If the name is provided and cannot be resolved, the \
    \n               operation fails.  \
    \n \
    \nExample:       init push server=10.2.2.2 propreq=1 \
    \n \
    \n               This command sends a push trigger to WINS server \
    \n               10.2.2.2 and has it propagate the trigger to all of its \
    \n               replication partners. \
    \n"

    
    HLP_SRVR_INIT_REPLICATE,                    "\
    Init Replicate                  - Initiates replication of database with\
    \n                                  replication partners."

    HLP_SRVR_INIT_REPLICATE_EX,                 "\
    \nTo initiate and force an immediate replication of the database with  \
    \nreplication partners. \
    \n \
    \nSyntax:	 \
    \n \
    \n        init replicate \
    \n \
    \nNote:          This command initiates push/pull replication with all \
    \n               replication partners for this server. \
    \n"
    
    HLP_SRVR_INIT_RESTORE,                      "\
    Init Restore                    - Initiates restoring of database from a file."
 
    HLP_SRVR_INIT_RESTORE_EX,                   "\
    \nTo initiate restoring of the WINS database from a directory at the  \
    \nserver computer. \
    \n \
    \nSyntax: \
    \n \
    \n        init restore [Dir=] Restore dir \
    \n \
    \nParameters: \
    \n \
    \n        Dir            - Directory from which to restore files. \
    \n \
    \nNote:          WINS backups can only be restored locally on the same \
    \n               server. Restoring the WINS database does not work from \
    \n               a remote computer.  \
    \n               Dir should contain a subdirectory wins_bak which will\
    \n               contain the database file. But this subdirectory should\
    \n               not be included in the Dir parameter. \
    \n \
    \nExample:       init restore dir=C:\WINSfiles \
    \n \
    \n               This command restores the WINS database from the backup \
    \n               database file location of C:\WINSfiles. \
    \n"

    
    HLP_SRVR_INIT_SCAVENGE,                     "\
    Init Scavenge                   - Initiates scavenging of WINS database\
    \n                                  for the server."
    
    HLP_SRVR_INIT_SCAVENGE_EX,                  "\
    \nTo initiate scavenging of the WINS database for the server. \
    \n \
    \nSyntax: \
    \n \
    \n        init scavenge \
    \n \
    \nNote:          This command removes outdated information from the WINS \
    \n               database.  \
    \n"


    HLP_SRVR_INIT_SEARCH,                       "\
    Init Search                     - Initiates search on the WINS server \
    \n                                  database for the specified record."


    HLP_SRVR_INIT_SEARCH_EX,                    "\
    \nTo initiate a search on the WINS database for the specified record \
    \nname.  \
    \n \
    \nSyntax: \
    \n \
    \n        init search [Name=]Record name [[EndChar=]End character]  \
    \n        [[Case=]0|1] [[File=]File name] \
    \n \
    \nParameters: \
    \n \
    \n        Name           - Name of the record for which to search. \
    \n \
    \n        EndChar	     - 16th character of the NetBIOS name record. \
    \n \
    \n        Case           - 0-Ignore name case (default), 1-Use name case. \
    \n \
    \n        File           - Name of the file in which to store formatted \
    \n                         output (comma separated format). \
    \n \
    \nExample:       init search name=dc1 endchar=1c case=0 file=C:\WINSfiles\names.txt  \
    \n \
    \n               This command searches for records named dc1 with an end \
    \n               character of 1c, and outputs the information to the \
    \n               names.txt file located in C:\WINSfiles. \
    \n"


    HLP_SRVR_RESET_COUNTER,                     "\
    Reset Statistics                - Resets the server statistics.\n"
        
    HLP_SRVR_RESET_COUNTER_EX,                  "\
    \nTo reset the server statistics. \
    \n \
    \nSyntax: \
    \n \
    \n        reset statistics \
    \n \
    \nNote:          This command resets the statistics for the local WINS \
    \n               server.  \
    \n"


    HLP_SRVR_SET_AUTOPARTNERCONFIG,             "\
    Set AutoPartnerConfig           - Sets the automatic replication partner\
    \n                                  configuration info for the server."

    HLP_SRVR_SET_AUTOPARTNERCONFIG_EX,          "\
    \nTo set automatic configuration of replication partners for a WINS \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        set autopartnerconfig [State=]0|1 [[Interval=]Value]  \
    \n        [[TTL=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - 0-Reset(default), 1-Set. \
    \n \
    \n        Interval       - Multicast interval in seconds. \
    \n \
    \n        TTL            - Time-To-Live value for Multicast Datagrams \
    \n                         between WINS Servers. Valid range : 1-32 \
    \n \
    \nNote:          If no parameters are used, automatic partner \
    \n               configuration is reset (disabled). \
    \n \
    \nExample:       set autopartnerconfig state=0 interval=3600 ttl=20  \
    \n \
    \n               This command configures the automatic configuration \
    \n               information for this WINS server for a multicast \
    \n               interval of 3600 seconds and a Time to Live (TTL) value \
    \n               of 20.  \
    \n"

    
    HLP_SRVR_SET_BACKUPPATH,                    "\
    Set BackupPath                  - Sets the backup parameters for the server."
    
    HLP_SRVR_SET_BACKUPPATH_EX,                 "\
    \nTo set the backup parameters for the server. \
    \n \
    \nSyntax: \
    \n \
    \n        set backuppath [Dir=]New path [[Shutdown=]1|0] \
    \n \
    \nParameters: \
    \n \
    \n        Path           - The backup path for the server database. The \
    \n                         default path is C:\\  \
    \n \
    \n        Shutdown       - 0-disable backup of the WINS database during \
    \n                         shutdown (default). 1-enable backup of the \
    \n                         WINS database during shutdown.  \
    \n \
    \nExample:       set backuppath dir=C:\WINSfiles shutdown=1 \
    \n \
    \n               This command sets the WINS server to automatically back \
    \n               up the WINS database to C:\WINSfiles each time the \
    \n               server is shut down.  \
    \n"

    HLP_SRVR_SET_DEFAULTPARAM,					"\
	Set DefaultParam                - Sets the default values for the WINS Server \
	\n                                  configuration parameters."

	HLP_SRVR_SET_DEFAULTPARAM_EX,				"\
	\nTo set the configuration parameters to their default values for the server.\
	\n \
	\nSyntax: \
	\n \
	\n		 set defaultparam\
	\n \
	\nNote: \
	\n \
	\n       This commands sets all the configuration parameters for the WINS\
	\n       server to their default values. Please run this command at least\
    \n       once to configure the server for the first time with its default\
    \n       parameter settings.\n"

    HLP_SRVR_SET_MIGRATEFLAG,                   "\
    Set MigrateFlag                 - Sets the migration flag for the server."

    HLP_SRVR_SET_MIGRATEFLAG_EX,                "\
    \nTo set the migration flag for the WINS server, which determines if \
    \nunique static mappings can be overwritten by dynamic records. \
    \n \
    \nSyntax: \
    \n \
    \n       set migrateflag [State=]1|0 \
    \n \
    \nParameters: \
    \n \
    \n       State           - 1-Enable (migrate on), 0-Disable (migrate off). \
    \n \
    \nExample:       set migrateflag state=1 \
    \n \
    \n               This command sets the migrate flag to permit overwrite \
    \n               of unique static mappings by dynamic records for the \
    \n               current WINS server.  \
    \n"


    HLP_SRVR_SET_NAMERECORD,                    "\
    Set NameRecord                  - Sets Intervals and Timeout values for the\
    \n                                  server."

    HLP_SRVR_SET_NAMERECORD_EX,                 "\
    \nTo set intervals used to determine when WINS name records are renewed, \
    \ndeleted, and verified at the current WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        set namerecord [[Renew=]Value] [[Extinction=]Value]  \
    \n        [[ExTimeout=]Value] [[Verification=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        Renew          - Interval renew rate (seconds). \
    \n \
    \n        Extinction     - Extinction interval (seconds). \
    \n \
    \n        ExTimeout      - Extinction timeout (seconds). \
    \n \
    \n        Verification   - Verification interval (seconds). \
    \n \
    \nNote:          All parameters are optional. For parameters not used, \
    \n               previously set or default values are maintained. If no\
    \n               parameters are provied, it maintains the current value.\
    \n \
    \nExample:       set namerecord renew=3600 extinction=7200 extimeout=86400\
    \n                              verification=2073600 \
    \n \
    \n               This command sets each of the values for name records \
    \n               on this WINS server. \
    \n"

    
    HLP_SRVR_SET_PERIODICDBCHECKING,            "\
    Set PeriodicDBChecking          - Sets periodic database checking parameters\
    \n                                  for the server."

    HLP_SRVR_SET_PERIODICDBCHECKING_EX,         "\
    \nTo set the periodic database consistency checking parameters for the \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        set periodicdbchecking [State=] 0|1 [[MaxRec=]Value]  \
    \n        [[CheckAgainst=]1|0] [[CheckEvery=]Value] [[Start=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - 0-Disable, 1-Enable(Default). \
    \n \
    \n        MaxRec         - Maximum number of records checked each period \
    \n                         (default=30000). \
    \n \
    \n        CheckAgainst   - 1-Randomly selected server, 0-Owner server \
    \n                         (default).  \
    \n \
    \n        CheckEvery     - Check every {Value} (hours). \
    \n \
    \n        Start          - Starting at {Value} (seconds). \
    \n \
    \nExample:       set periodicdbchecking state=1 maxrec=1000 checkagainst=1 \
    \n                                      checkevery=1 start=3600 \
    \n \
    \n               This command checks the WINS database against a random \
    \n               replication partner every hour starting at 3600 seconds. \
    \n"

    
    HLP_SRVR_SET_PULLPERSISTENTCONNECTION,          "\
    Set Pullpartnerconfig           - Sets the configuration parameters for the\
    \n                                  specified pull partner."
    
    HLP_SRVR_SET_PULLPERSISTENTCONNECTION_EX,       "\
    \nTo set the configuration parameters for the specified pull partner. \
    \n \
    \nSyntax: \
    \n \
    \n        set pullpartnerconfig [State=] 0|1 [Server=]Server name  \
    \n        [[Start=]Value] [[Interval=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - To enable or disable persistence connection \
    \n                         flag. 0-Disable, 1-Enable (default).  \
    \n \
    \n        Server         - Name or IP address of the pull replication \
    \n                         partner.  \
    \n \
    \n        Start          - Start time for replication (seconds). \
    \n \
    \n        Interval       - Interval between pull replications \
    \n                         (seconds).  \
    \n \
    \nNote:          If a name is provided for the Server parameter and it \
    \n               cannot be resolved to an IP address, the function \
    \n               fails.  \
    \n \
    \nExample:       set pullpartnerconfig state=1 server=10.2.2.2 start=3600 interval=4320 \
    \n \
    \n               This command sets the pull partner configuration for \
    \n               the current WINS server for the partner WINS server, \
    \n               10.2.2.2. Pull replication starts in 3600 seconds and \
    \n               runs every 4320 seconds. \
    \n"


    HLP_SRVR_SET_PUSHPERSISTENTCONNECTION,          "\
    Set Pushpartnerconfig           - Sets the configuration parameter for the\
    \n                                  specified push partner."
    
    HLP_SRVR_SET_PUSHPERSISTENTCONNECTION_EX,       "\
    \nTo set the configuration parameters for the specified push partner. \
    \n \
    \nSyntax: \
    \n \
    \n        set pushpartnerconfig [State=] 0|1  [Server=]Server name   \
    \n        [Update=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - To enable or disable persistence connection \
    \n                         flag. 0-Disable, 1-Enable(default). \
    \n \
    \n        Server         - Name or IP address of the server. \
    \n \
    \n        Update         - Update count. \
    \n \
    \nNote:          If name is provided in the server parameter and it \
    \n               cannot be resolved to an IP address, the function \
    \n               fails.  \
    \n \
    \nExample:       set pushpartnerconfig state=1 server=10.2.2.2 update=2 \
    \n \
    \n               This command sets the push partner configuration for \
    \n               the current WINS server for the partner WINS server, \
    \n               10.2.2.2. It also sets the number of changes in version \
    \n               ID before push partners are informed about them for    \
    \n               replication (Update Count) to 2.\
    \n"


    HLP_SRVR_SET_PULLPARAM,                     "\
    Set PullParam                   - Sets the default pull partner parameters for\
    \n                                  the server."

    HLP_SRVR_SET_PULLPARAM_EX,                  "\
    \nTo set the default pull partner parameters for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        set pullparam [State=]0|1  [[Strtup=]1|0] [[Start=]Value] \
    \n        [[Interval=]Value] [[Retry=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - 0-Do not use persistent connections with pull \
    \n                         partners.  \
    \n                         1-Use persistent connections with pull partners. \
    \n \
    \n        Strtup         - 0-Do not start pull replication at startup \
    \n                         (default).  \
    \n                         1-Start pull replication at startup. \
    \n \
    \n        Start          - Start time for the pull trigger (seconds). \
    \n \
    \n        Interval       - Replication interval (seconds). \
    \n \
    \n        Retry          - Retry count. \
    \n \
    \nNote:          None of these parameters are required and, when not \
    \n               used, previously set or default values are maintained. \
    \n \
    \nExample:       set pullparam state=1 strtup=1 start=23600 interval=259200 \
    \n                             retry=7 \
    \n \
    \n               This command sets the default pull partner parameters \
    \n               for this WINS server to use a persistent connection \
    \n               with its pull partners, begin replication at startup, \
    \n               start the pull trigger in 23600 seconds at an interval \
    \n               of 259200 seconds, and retry replication seven times.  \
    \n"


    
    HLP_SRVR_SET_PUSHPARAM,                     "\
    Set PushParam                   - Sets the default push partner parameters for\
    \n                                  the server."

    HLP_SRVR_SET_PUSHPARAM_EX,                  "\
    \nTo set the default push partner parameters for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        set pushparam [State=]0|1  [[Strtup=]1|0] [[AddChange=]1|0]  \
    \n        [[Update=]Value] \
    \n \
    \nParameters: \
    \n \
    \n        State          - 0-Do not use persistent connections with push \
    \n                         partners.  \
    \n                         1-Use persistent connections with push partners. \
    \n \
    \n        Strtup         - 0-Do not start push replication at startup (default). \
    \n                         1-Start push replication at startup. \
    \n \
    \n        AddChange      - 0-Do not trigger replication upon address \
    \n                         change (default)  \
    \n                         1-Trigger replication upon address change. \
    \n \
    \n        Update         - Update count threshold. \
    \n \
    \nExample:       set pushparam state=1 strtup=1 AddChange=1 Update=2 \
    \n \
    \n               This command sets the default push partner parameters \
    \n               for this WINS server to use persistent connections with \
    \n               its push partners, start push replication at startup or \
    \n               when address changes, and push to partners after the \
    \n               version ID has been updated twice for records owned at \
    \n               this WINS server.  \
    \n"

    
    HLP_SRVR_SET_REPLICATEFLAG,                 "\
    Set ReplicateFlag               - Sets the replication flag for the server."
    
    HLP_SRVR_SET_REPLICATEFLAG_EX,              "\
    \nTo set the replication flag for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        set replicateflag [State=]1|0 \
    \n \
    \nParameters: \
    \n \
    \n        State          - 1-Set replication flag on (enable) \
    \n                         0-Set replication flag off (disable). \
    \n \
    \nExample:       set replicateflag state=1 \
    \n \
    \n               This command enables the replication flag for this \
    \n               server. \
    \n"

    HLP_SRVR_SET_LOGPARAM,                      "\
    Set Logparam                    - Sets the database and event logging options."

    HLP_SRVR_SET_LOGPARAM_EX,                   "\
    \nTo set or reset database and detailed event logging parameters. \
    \n \
    \nSyntax: \
    \n \
    \n        set logparam [[DBChange=]0|1] [[Event=]0|1] \
    \n \
    \nParameters: \
    \n \
    \n        DBChange       - 1-Enables logging of database changes to \
    \n                         JET log files.  0-Resets this option. \
    \n \
    \n        Event          - 1-Log detailed events to the System Event \
    \n                         Log. 0-Resets this option. \
    \n \
    \nNotes:   The WINS database engine can log the database changes to \
    \n               separate files. Because this option is improving \
    \n               the performance of database operations it is turned on\
    \n               by default.\
    \n         The WINS server can log detailed event information in \
    \n               the system event log. Because this option is \
    \n               resource-intensive, it is  turned off by default.\
    \n         If no parameters are defined, the current values are retained. \
    \n \
    \nExample:       set logparam event=1\
    \n \
    \n               This command sets logging parameters for this WINS \
    \n               server to log detailed events to the Windows Event \
    \n               Log.  \
    \n"


    HLP_SRVR_SET_BURSTPARAM,                    "\
    Set Burstparam                  - Sets the burst handling parameters for the\
    \n                                  server."

    HLP_SRVR_SET_BURSTPARAM_EX,                 "\
    \nTo set the burst handling parameters for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        set burstparam  [State=]0|1  [[Value=]Queue size] \
    \n \
    \nParameters: \
    \n \
    \n        State          - 0-reset or disable burst handling for the \
    \n                         WINS server.  \
    \n                         1-set or enable burst handling for the WINS \
    \n                         server.   \
    \n \
    \n        Value          - Value of the burst queue size (50 - 5000)\
    \n \
    \nExample:       set burstparam state=1 value=1000 \
    \n \
    \n               This command sets the size of the burst queue to permit \
    \n               1000 client registration/renewal requests before the \
    \n               WINS server uses burst handling.  \
    \n"


    HLP_SRVR_SET_STARTVERSION,                  "\
    Set Startversion                - Sets the start version ID for the database."

    HLP_SRVR_SET_STARTVERSION_EX,               "\
    \nTo set the value of the beginning (start) version ID number for the \
    \ndatabase.  \
    \n \
    \nSyntax: \
    \n \
    \n        set startversion [Version=]{high,low} \
    \n \
    \nParameters: \
    \n \
    \n        Version        - The beginning version ID number for the WINS \
    \n                         database. High and low are separated by a \
    \n                         comma and enclosed by {brackets}.  \
    \n \
    \nExample:       set startversion version={0,0} \
    \n \
    \n               This command sets the beginning version ID number for \
    \n               the WINS database to 0.  \
    \n"

    HLP_SRVR_SET_PGMODE,                        "\
    Set PGMode                      - Sets the Persona Grata/Non-Grata mode."

    HLP_SRVR_SET_PGMODE_EX,                   "\
    \nTo set the Persona Grata/Non-Grata mode.\
    \n \
    \nSyntax: \
    \n \
    \n        set pgmode [Mode=]0|1 \
    \n \
    \nParameters: \
    \n \
    \n        Mode           - 0-Specifies the Persona Non-grata mode. \
    \n                         1-Specifies the Persona Grata mode. \
    \n \
    \nExample:       set pgmode Mode=1 \
    \n \
    \n               This command sets WINS in Persona Grata mode. During \
    \n               replication, WINS will accept only records owned by \
    \n               servers specified in the persona grata list. \
    \n               Use 'add pgserver / delete pgserver' commands to operate \
    \n               with the persona grata list. \
    \n"

    HLP_SRVR_SHOW_DATABASE,                     "\
    Show Database                   - Displays the database and records for all or\
    \n                                  a list of specified owner servers."

    HLP_SRVR_SHOW_DATABASE_EX,                  "\
    \nTo display the database and records for a partial or complete list of \
    \nspecified owner servers. \
    \n \
    \nSyntax: \
    \n \
    \n        show database [Servers=]{IP addresses}  [[RecType=]0|1|2]   \
    \n        [Count=]Count] [[Start=]0|1] [[EndChar=]16th character(hex)]  \
    \n        [[File=]FileName] \
    \n \
    \nParameters: \
    \n \
    \n        Servers        - A list of the IP addresses of owner servers \
    \n                         whose records are to be displayed, separated \
    \n                         by commas and enclosed in {brackets}.  \
    \n \
    \n        RecType        - Type of record: 0-both (default), 1-static,  \
    \n                         or 2-dynamic. \
    \n \
    \n        Count          - Number of records of specified RecType wanted. \
    \n \
    \n        Start          - 0-Start from the beginning of the database. \
    \n                         1-Start from the end of the database. \
    \n \
    \n        EndChar        - The 16th character of the records should \
    \n                         match the endchar (filter).  \
    \n \
    \n        File           - Name of the file in which formatted output is \
    \n                         stored.  \
    \n \
    \nNote:          If Servers={}, all records are displayed for all owner \
    \n               servers.  \
    \n \
    \nExample:       show database servers={10.2.2.2} rectype=2 count=1000 \
    \n               start=0 endchar=0 file=C:\WINSfiles\output.txt \
    \n \
    \n               This command outputs the first 1000 dynamic records in \
    \n               the WINS database for the server 10.2.2.2 to the text \
    \n               file output.txt. \
    \n"


    HLP_SRVR_SHOW_DOMAIN,                       "\
    Show Browser                    - Displays all active domain master browser\
    \n                                  [1Bh] records."

    HLP_SRVR_SHOW_DOMAIN_EX,                    "\
    \nTo display all active domain master browser [1Bh] records. \
    \n \
    \nSyntax: \
    \n \
    \n        show browser \
    \n \
    \nNotes:         This command shows the domain master [1B] records for \
    \n               the current WINS server. \
    \n"

    HLP_SRVR_SHOW_INFO,                         "\
    Show Info                       - Displays server configuration information."
    
    HLP_SRVR_SHOW_INFO_EX,                      "\
    \nTo display configuration information for the WINS server.  \
    \n \
    \nSyntax: \
    \n \
    \n        show info \
    \n \
    \nNote:          If set, this command displays the following WINS \
    \n               configuration information for the current server: \
    \n                   - Backup path. \
    \n                   - Name record setting. \
    \n                   - Periodic database consistency checking. \
    \n                   - Burst handling. \
    \n                   - Logging parameters. \
    \n                   - Start version count. \
    \n"


    HLP_SRVR_SHOW_PARTNER,                      "\
    Show Partner                    - Displays all or pull or push partners for\
    \n                                  the server."

    HLP_SRVR_SHOW_PARTNER_EX,                   "\
    \nTo display all pull partners or push partners (or both) for the \
    \ncurrent WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        show partner [[Type=]0|1|2|3] \
    \n \
    \nParameters: \
    \n \
    \n        Type           - 0-all (default), 1-pull, 2-push, 3-push/pull. \
    \n \
    \nExample:       show partner \
    \n \
    \n               This command displays the server name, IP address, and \
    \n               replication type of each replication partner for this \
    \n               WINS server.  \
    \n"

    HLP_SRVR_SHOW_NAME,                         "\
    Show Name                       - Displays the detail information for a\
    \n                                  particular record in the server."

    HLP_SRVR_SHOW_NAME_EX,                      "\
    \nTo query and display detailed information for a specified record in \
    \nthe server.  \
    \n \
    \nSyntax: \
    \n \
    \n        show name [Name=]Record name [[EndChar=]16th character]  \
    \n        [[Scope=]Scope name] \
    \n \
    \nParameters: \
    \n \
    \n        Name           - Name of the record for which to query. \
    \n \
    \n        EndChar        - 16th character(must be specified for all but \
    \n                         unique type records). \
    \n \
    \n        Scope          - Name of the NetBIOS scope, if used. \
    \n \
    \nExample:       show name Name=HOSTA Endchar=20 \
    \n \
    \n               This command shows currently stored information for a \
    \n               name record 'HOSTA' of File Server type [20h] that \
    \n               exists in the WINS database at the current WINS server. \
    \n"

    
    HLP_SRVR_SHOW_SERVER,                       "\
    Show Server                     - Displays the currently selected server."

    HLP_SRVR_SHOW_SERVER_EX,                    "\
    \nDisplays information for the currently selected server where WINS \
    \ncommands are applied.  \
    \n \
    \nSyntax: \
    \n \
    \n        show server \
    \n \
    \nNote:          This command displays the name and IP address of the \
    \n               current WINS server.  \
    \n"
    
    HLP_SRVR_SHOW_SERVERSTATISTICS,             "\
    Show Statistics                 - Displays the statistics for the WINS server."

    HLP_SRVR_SHOW_SERVERSTATISTICS_EX,          "\
    \nTo display statistics for the WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        show statistics \
    \n \
    \nNote:          This command shows the statistics for the current WINS \
    \n               server.  \
    \n"

    HLP_SRVR_SHOW_VERSION,                      "\
    Show Version                    - Displays the current maximum version\
    \n                                  counter value for the WINS Server."

    HLP_SRVR_SHOW_VERSION_EX,                   "\
    \nTo display maximum version counter value for the current WINS server. \
    \n \
    \nSyntax: \
    \n \
    \n        show version \
    \n \
    \nNote:          This command displays the maximum version counter value\
    \n               for the current WINS server. \
    \n"

    HLP_SRVR_SHOW_VERSIONMAP,                   "\
    Show Versionmap                 - Displays the owner Id to Maximum Version\
    \n                                  Number mappings."

    HLP_SRVR_SHOW_VERSIONMAP_EX,                "\
    \nTo display the Owner-to-Highest (version) ID mappings table for the \
    \ncurrent WINS server.  \
    \n \
    \nSyntax: \
    \n \
    \n        show versionmap \
    \n \
    \nNote:          This command shows the Owner-to-Highest ID mappings \
    \n               table for the current WINS server. \
    \n"

    HLP_SRVR_SHOW_PARTNERPROPERTIES,            "\
    Show Partnerproperties          - Displays default partner configuration."

    HLP_SRVR_SHOW_PARTNERPROPERTIES_EX,         "\
    \nTo display default partner configuration information. \
    \n \
    \nSyntax: \
    \n \
    \n        show partnerproperties \
    \n \
    \nNote:          This command displays the auto partner configuration \
    \n               and default push/pull parameters for the current WINS \
    \n               server.  \
    \n"


    HLP_SRVR_SHOW_PULLPARTNERPROPERTIES,        "\
    Show Pullpartnerconfig          - Displays configuration information for a\
    \n                                  pull partner."

    HLP_SRVR_SHOW_PULLPARTNERPROPERTIES_EX,     "\
    \nTo display configuration information for a pull partner. \
    \n \
    \nSyntax: \
    \n \
    \n        show pullpartnerconfig [Server=]Name or IP address \
    \n \
    \nParameters: \
    \n \
    \n        Server         - Name or IP address of the pull partner. \
    \n \
    \nNote:          If a name is provided in the server parameter and it \
    \n               cannot be resolved to an IP address, the function \
    \n               fails.  \
    \n \
    \nExample:       show pullpartnerconfig server=10.2.2.2 \
    \n \
    \n               This command displays the pull partner configuration \
    \n               parameters for WINS server 10.2.2.2. \
    \n"


    HLP_SRVR_SHOW_PUSHPARTNERPROPERTIES,        "\
    Show Pushpartnerconfig          - Displays configuration information for a\
    \n                                  push partner."
  
    HLP_SRVR_SHOW_PUSHPARTNERPROPERTIES_EX,     "\
    \nTo display configuration information for a push partner. \
    \n \
    \nSyntax: \
    \n \
    \n        show pushpartnerconfig [Server=]Name or IP address \
    \n \
    \nParameters: \
    \n \
    \n        Server         - Name or IP address of the push partner. \
    \n \
    \nNote:          If a name is provided in the server parameter and it \
    \n               cannot be resolved to an IP address, the function \
    \n               fails.  \
    \n \
    \nExample:       show pushpartnerconfig server=10.2.2.2 \
    \n \
    \n               This command displays the pull partner configuration \
    \n               parameters for WINS server 10.2.2.2. \
    \n"


    HLP_SRVR_SHOW_RECCOUNT,                     "\
    Show Reccount                   - Displays no of records owned by a specific\
    \n                                  owner server."

    HLP_SRVR_SHOW_RECCOUNT_EX,                  "\
    \nTo display the number of records owned by a specific server specified \
    \nby the version range. \
    \n \
    \nSyntax: \
    \n \
    \n        show reccount  [Server=]IP address  [[MaxVer=]{high,low}] \
    \n        [[MinVer=]{high,low}] \
    \n \
    \nParameters: \
    \n \
    \n        Server         - IP address of the owner server. \
    \n \
    \n        MaxVer         - Specifies the maximum version of records to show. \
    \n \
    \n        MinVer         - Specifies the minimum version of records to show. \
    \n \
    \nNote:          Setting MinVer and MaxVer counts the whole range of records. \
    \nExample:       show reccount server=10.2.2.2 maxver={0,0} minver={0,0} \
    \n \
    \n               This command shows the total record count for WINS \
    \n               server 10.2.2.2.   \
    \n"


    HLP_SRVR_SHOW_RECBYVERSION,                 "\
    Show Recbyversion               - Displays records owned by a specific server."

    HLP_SRVR_SHOW_RECBYVERSION_EX,              "\
    \nTo display a set of records for an owner, specified as a range of \
    \nversion IDs.  \
    \n \
    \nSyntax: \
    \n \
    \n        show recbyversion  [Server=]IP address  [[MaxVer=]{high,low}]  \
    \n        [[MinVer=]{high,low}] [[Name=]Record name]  \
    \n        [[EndChar=]16th character] [Case=]0|1 \
    \n \
    \nParameters: \
    \n \
    \n        Server         - IP address of the owner server. \
    \n \
    \n        MaxVer         - Maximum version number, separated by commas \
    \n                         and enclosed by brackets {}.  \
    \n \
    \n        MinVer         - Minimum version number, separated by commas \
    \n                         and enclosed by brackets {}.   \
    \n \
    \n        Name           - Name of the records for which to look. \
    \n \
    \n        EndChar        - The 16th character for which to look in the \
    \n                         record. \
    \n \
    \n        Case           - 0-case ignored (default), 1-case-sensitive \
    \n                         comparison.  \
    \n \
    \nNote:          EndChar and Case parameters are ignored if the Name \
    \n               parameter is not specified. \
    \n               Also, setting MinVer and MaxVer both to {0,0} will display \
    \n               entire range of records. \
    \n \
    \nExample:       show recbyversion server=10.2.2.2 maxver={0,0} \
    \n               minver={0,0} name=dc1 endchar=1c case=0 \
    \n \
    \n               This command displays the total number of records (by \
    \n               record version) owned by WINS server 10.2.2.2. \
    \n"


    MSG_WINS_ACCESS,                            "\
    \n***You have %1!s! access to the server %2!s!***\n"

    MSG_WINS_DISPLAY_NAME,                      "\
    \nName                  : %1!s! \
    \nNodeType              : %2!x!\
    \nState                 : %3!s! \
    \nExpiration Date       : %4!s!\
    \nType of Rec           : %5!s!\
    \nVersion No            : %6!x! %7!x! \
    \nRecordType            : %8!s!"

    MSG_WINS_IPADDRESS_STRING,                  "\
    \nIP Address            : %1!s!"

    MSG_WINS_OWNER_ADDRESS,                     "\
    \nOwner                 : %1!s!"

    MSG_WINS_MEMBER_ADDRESS,                    "\
    \nMember                : %1!s!"

    MSG_WINS_VERSION_INFO,                      "\
    \nIP Address = %1!s! Max. Version No. = (%2!x!, %3!x!)\n"

    MSG_WINS_SERVER_NAME,                       "\
    \nCurrent Server = %1!s! , IP Address = %2!s!\n"

    MSG_WINS_REFRESH_INTERVAL,                  "\
    \nRefresh Interval          : %1!s! "

    MSG_WINS_TOMBSTONE_INTERVAL,                "\
    \nTombstone Interval        : %1!s! "

    MSG_WINS_TOMBSTONE_TIMEOUT,                 "\
    \nTombstore Timeout         : %1!s! "

    MSG_WINS_VERIFY_INTERVAL,                   "\
    \nVerify Interval           : %1!s! "

    MSG_WINS_PRIORITY_CLASS,                    "\
    \nWins Priority Class                  : %1!s! "

    MSG_WINS_WORKER_THREAD,                     "\
    \nNo. of Worker Threads                : %1!d! "

    MSG_WINS_OWNER_TABLE,                       "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n   Owner ID   -  Owner IP Address  -  Version No.                                \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

    MSG_WINS_OWNER_INFO_MAX,                    "\
    \n%1!s!-%2!s!-  %3!s!"

    MSG_WINS_OWNER_INFO,                        "\
    \n%1!s!-%2!s!-  %3!1x! %4!1x!"

    MSG_WINS_SEARCHING_STATUS,                  "\
    \nSearching the database for the Wins Server : %1!s!\n"

    MSG_WINS_NO_RECORDS,                        "\
    \nNo records available to display.\n"

    MSG_WINS_TIMESTAMP,                         "\
    \nWINS Started                              : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_LAST_INIT,                         "\
    \nLast initialization                       : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_PLANNED_SCV,                       "\
    \nLast planned scavenging                   : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_TRIGGERED_SCV,                     "\
    \nLast admin triggered scavenging           : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_TOMBSTONE_SCV,                     "\
    \nLast replicas tombstones scavenging       : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_REPLICA_VERIFICATION,              "\
    \nLast replicas verification scavenging     : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_PLANNED_REPLICATION,               "\
    \nLast planned replication                  : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_TRIGGERED_REPLICATION,             "\
    \nLast admin triggered replication          : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_RESET_COUNTER,                     "\
    \nLast reset of counter                     : %1!d!/%2!d!/%3!d! at %4!d!:%5!d!:%6!d!"

    MSG_WINS_COUNTER_INFORMATION,               "\
    \nCounter Information : \
    \n                     No of U and G Registration requests = (%1!d! %2!d!)\
    \n                     No of Successful/Failed Queries = (%3!d!/%4!d!)\
    \n                     No of U and G Refreshes = (%5!d! %6!d!)\
    \n                     No Of Successful/Failed Releases = (%7!d!/%8!d!)\
    \n                     No Of U. and G. Conflicts = (%9!d! %10!d!)\n"

    MSG_WINS_PARTNER_TABLE,                     "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n  WINS Partner IP Address       -   No. of Replication   - No. of Comm Failure  \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

    MSG_WINS_PARTNER_INFO,                      "\
    \n%1!s!-%2!s!-   %3!d!"

    MSG_WINS_RECORDS_COUNT,                     "\
    \nTotal No of record            : %1!d!"

    MSG_WINS_RECORDS_RETRIEVED,                 "\
    \nTotal No of records retrieved for the server %1!s! : %2!d! \n"

    MSG_WINS_RECORD_LINE,                       "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_RECORD_INFO,                       "\
    \nRecord Name           : %1!s!\
    \nRecord Type           : %2!s!\
    \nRecord State          : %3!s!\
    \nRecord Version        : { %4!x! %5!x! }\
    \nRecord Node Type      : %6!x!\
    \nRecord Group          : %7!s!\
    \nRecord Expiration Date: %8!s!"

    MSG_WINS_RECORD_TABLE,                      "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n      NAME           -T-S- VERSION -G-    IPADDRESS   -    EXPIRATION DATE     \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

    MSG_WINS_RECORD_ENTRY,                      
    " %1!s!-%2!s!-%3!s!- %4!s!-%5!s!- %6!s!-%7!s!\n"

    MSG_WINS_RECORD_IPADDRESS,                  
    "                                       %1!s!"

    MSG_WINS_RECORD_DESC,                       "\
    \n Description of different fields in the Record Table\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n NAME            = Name of the Record. Upto 16 characters\
    \n T               = Type of Record : D - Dynamic, S - Static\
    \n S               = State of the Record : A - Active, R - Released,\
    \n                                         T - Tombstoned\
    \n VERSION         = LowPart ( in Hex)\
    \n G               = Address Group : U - Unique, N - Group, I - Internet,\
    \n                                   M - Multihomed, D - Domain Name.\
    \n IPADDRESS       = List of IP Addresses associated with the Name.\
    \n EXPIRATION DATE = Expiration Time Stamp for the Name Record.\n\n"

    MSG_WINS_MEMBER_COUNT,                      "\
    \nNo. of Members        : %1!d!\n"


    MSG_SRVR_REPLICATE_STATE,                   "\
    \nReplicate only with Partners(Flag)                                  : %1!s!"

    MSG_SRVR_MIGRATE_STATE,                     "\
    \nMigrate ( Overwrite Unique static record with dynamic record ) Flag : %1!s!"

    MSG_SRVR_AUTOCONFIGURE,                     "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n       AUTO PARTNER CONFIGURATION            \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

    MSG_SRVR_SELFFINDPNRS_STATE,                "\
    \nAuto configure partners : %1!s!"

    MSG_SRVR_MCAST_INTERVAL,                    "\
    \nMulticast Interval      : %1!s! (h:m:s)"

    MSG_SRVR_MCAST_TTL,                         "\
    \nMulticast TTL           : %1!s!"
    
    MSG_SRVR_PULL_PERSISTENCE_STATE,            "\
    \nPersistence connection with Pull partners   : %1!s!"

    MSG_SRVR_PUSH_PERSISTENCE_STATE,            "\
    \nPersistence connection with Push partners   : %1!s!"

    MSG_SRVR_PULL_INITTIMEREPL_STATE,           "\
    \nTrigger Pull Replication on Initial Startup : %1!s!"

    MSG_SRVR_PUSH_INITTIMEREPL_STATE,           "\
    \nTrigger Push Replication on Initial Startup : %1!s!"

    MSG_SRVR_PULL_STARTTIME,                    "\
    \nReplicate Start Time ( h:m:s )              : %1!s!"

    MSG_WINS_PULL_REPLINTERVAL,                 "\
    \nReplication Interval ( d:h:m )              : %1!s!"

    MSG_WINS_PULL_RETRYCOUNT,                   "\
    \nRetry Count                                 : %1!s!"

    MSG_SRVR_PUSH_INFO,                         "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n      DEFAULT PUSH PARAMETERS                                        \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_SRVR_PULL_INFO,                         "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n      DEFAULT PULL PARAMETERS                                        \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"    

    MSG_SRVR_PUSH_ONADDCHANGE,                  "\
    \nTrigger Push Replication on Address Change  : %1!s!"

    MSG_SRVR_PUSH_UPDATECOUNT,                  "\
    \nUpdate Count Threshold                      : %1!s!\n"

    MSG_WINS_PNGSERVER_TABLE,                   "\
    \nList of Persona Non Grata Servers for the WINS Server :\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_PGSERVER_TABLE,                    "\
    \nList of Persona Grata Servers for the WINS Server :\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_PNGSERVER_ENTRY,                   "\
    \nPNG Server IPAddress  : %1!s!"

    MSG_WINS_PGSERVER_ENTRY,                    "\
    \nPG Server IPAddress   : %1!s!"

    MSG_WINS_NO_PNGSERVER,                      "\
    \nNo Persona Non Grata Server set for this WINS Server.\n"

    MSG_WINS_NO_PGSERVER,                       "\
    \nNo Persona Grata Server set for this WINS Server.\n"

    MSG_WINS_PULLPARTNER_INFO,                  "\
    \nPartner IP Address    :   %1!s!\
    \nPartner NetBIOS Name  :   %2!s!\
    \nPartner Type          :   %3!s!\n"

    MSG_WINS_PUSHPARTNER_INFO,                  "\
    \nPartner IP Address    :   %1!s!\
    \nPartner NetBIOS Name  :   %2!s!\
    \nPartner Type          :   %3!s!\n"

    MSG_WINS_PARTNERLIST_TABLE,                 "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n       Server Name             -     IP Address         -    Type         \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_PARTNERLIST_ENTRY,                 "\
    \n%1!s!-%2!s!-%3!s!"

    MSG_WINS_DATABASE_BACKUPPARAM,              "\
    \nWINS Database backup parameter\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_DATABASE_BACKUPDIR,                "\
    \nBackup Dir                           : %1!s!"

    MSG_WINS_DATABASE_BACKUPONTERM,             "\
    \nBackup on Shutdown                   : %1!s!"

    MSG_WINS_NAMERECORD_SETTINGS,               "\
    \nName Record Settings(day:hour:minute) \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_NAMERECORD_REFRESHINTVL,           "\
    \nRefresh Interval                     : %1!s!"

    MSG_WINS_NAMERECORD_TOMBSTONEINTVL,         "\
    \nExtinction(Tombstone) Interval       : %1!s!"

    MSG_WINS_NAMERECORD_TOMBSTONETMOUT,         "\
    \nExtinction(Tombstone) TimeOut        : %1!s!"

    MSG_WINS_NAMERECORD_VERIFYINTVL,            "\
    \nVerification Interval                : %1!s!"

    MSG_WINS_DBCC_PARAM,                        "\
    \nDatabase consistency checking parameters :\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
    
    MSG_WINS_DBCC_STATE,                        "\
    \nPeriodic Checking                    : %1!s!"

    MSG_WINS_DBCC_MAXCOUNT,                     "\
    \nMax no. of records check each period : %1!s!"

    MSG_WINS_DBCC_CHECKAGAINST,                 "\
    \nCheck database against               : %1!s!"

    MSG_WINS_DBCC_CHECKEVERY,                   "\
    \nCheck database every                 : %1!s! hours"
    
    MSG_WINS_DBCC_STARTAT,                      "\
    \nStarting at(hour:minute:second)      : %1!s!"

    MSG_WINS_LOGGING_PARAM,                     "\
    \nWINS Logging Parameters:\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_LOGGING_FLAG,                      "\
    \nLog Database changes in Jet.Log      : %1!s!"

    MSG_WINS_LOGGING_DETAILS,                   "\
    \nLog details events to event log      : %1!s!"

    MSG_WINS_BURSTHNDL_PARAM,                   "\
    \nBurst Handling Parameters :\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_BURSTHNDL_STATE,                   "\
    \nBurst Handling State                 : %1!s!"

    MSG_WINS_BURSTHNDL_SIZE,                    "\
    \nBurst handing queue size             : %1!s!"

    MSG_SRVR_START_VERSION,                     "\
    \nStart Version Counter ( in hex )                        \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \nStart Version Count(High , Low)      : %1!s!\n"

    MSG_WINS_TIME_WARNING,                      "\
    \nThis operation might take long time.\n"

    MSG_WINS_SEND_PUSH,                         "\
    \nSending replication request to the push partner %1!s!\n"

    MSG_WINS_SEND_PULL,                         "\
    \nSending replication request to the pull partner %1!s!\n"

    MSG_WINS_TRIGGER_DONE,                      "\
    Replication request sent.\n"

    MSG_DLL_LOAD_FAILED,                        "\
    \nLoading of DLL %1!s! failed.\n"

    MSG_WINS_SERVICE_TIME,                      "\
    \nWINS Service stopped/started in approx %1!d! ms!\n"

    MSG_WINS_SEARCHDB_COUNT,                    "\
    \nTotal No Of records Searched = (%1!d!)\n"

    MSG_WINS_NO_RECORD,                         "\
    \nNo records of WINS %1!s! is available to search.\n"

    MSG_WINS_RECORDS_SEARCHED,                  "\
    \nGot %1!d! records in this round\n"

    MSG_WINS_NO_PARTNER,                        "\
    \nCurrently there is no Replication partner for this WINS Server\n"

    MSG_WINS_PARTNER_COUNT,                     "\
    \nTotal No. of Active Replication Partner : %1!d!\n"

    MSG_WINS_CONFIRMATION_DENIED,               "\
    \nOperation did not complete because the confirmation is denied.\n"

    MSG_WINS_COMMAND_QUEUED,                    "\
    \nOperation has been queued. Check Event log for start and completion information.\n"

    MSG_WINS_DOMAIN_COUNT,                      "\
    \nTotal no of domain records returned  : %1!d!\n"

    MSG_WINS_DOMAIN_TABLE,                      "\
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \n   ID              -   Domain Name                        \
    \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"

    MSG_WINS_DOMAIN_ENTRY,                      "\
    \n%1!s!-%2!s!"

    MSG_WINS_DELETING_RECORD,                   "\
    \nDeleting records for the owner    : %1!s!\n"

    MSG_WINS_TOMBSTONE_RECORD,                  "\
    \nTombstoning records for the owner : %1!s!\n"

    MSG_SRVR_FILTER_RECCOUNT,                   "\
    \nTotal no of records displayed for the filter [%1!s!h] : %2!d!\n"

    MSG_WINS_RECORDS_COUNT_OWNER,               "\
    \nTotal no of records owned by the server %1!s!  : %2!d!\n"
    
    MSG_SRVR_RECORD_MATCH,                      "\
    \nTotal no of records matched       : %1!d!\n"

    MSG_WINS_SOTABLE_HEADER,                    "\
    \nSERVER-->OWNER TABLE:    \
    \nEach row represents the (owner address - version#) mapping table obtained from\
    \na particular WINS server. We have a problem if the diagonal element is not the\
    \nhighest in its column.\
    \nList of Owners ----> \n\n" 
                                                   
    MSG_WINS_MASTEROWNER_INDEX,                 "\t%1!d!"

    MSG_WINS_MASTEROWNER_INDEX1,                "%1!d!"

    MSG_WINS_MAP_SOURCE,                        "\
    \n|\n|  List of WINSs from where the mapping table was retrieved\n|\n\n"
    
    MSG_WINS_INDEXTOIP_TABLE,                   "\
    \nIndex to IP Address Table :\n"

    MSG_WINS_INDEXTOIP_ENTRY,                   "\
    \t%1!d!\t: %2!s!\n "

    MSG_SRVR_MAPTABLE_HEADER,                   "\
    \nGetting Map Table from %1!s!:"

    MSG_WINS_GETSTATUS_SUCCESS,                 "\
    Operation Successfull."

    MSG_SRVR_SEARCH_COUNT,                      "\
    \nTotal no of records matched the criteria is %1!d!\n"

    MSG_NO_DEFAULT_PULL,                        "\
    \n\n\nNot all default Pull Properties are defined.\n"

    MSG_NO_DEFAULT_PUSH,                        "\
    \n\n\nNot all default Push Properties are defined.\n"

    MSG_WINS_OWNER_RECCOUNT,                    "\
    \nOwner : %1!s!\tTotal Records : %2!d!\n"

    MSG_WINS_GET_MAPTABLE,                      "\
    \n*******\nGetting Map Table from %1!s!\n"
    
    MSG_WINS_PASS_COUNT,                        "\
    \nPass : %1!d!\n"

    MSG_SRVR_NAME_VERIFIED,                     "\
    \n%1!s! has a verified address of %2!s!\n"

    MSG_WINS_SEND_NAMEQUERY,                    "\
    \nSending Name Query to the server [%1!s!] for name %2!s! : "

    MSG_WINS_DISPLAY_STRING,                    "%1!s!"

    MSG_WINS_RESULTS,                           "\
    \n\nResults :                               \n"
    
    MSG_WINS_FINAL_RESULTS,                     "\
    \n\nSummary :                               \n"

    MSG_SRVR_TOTAL_RECCOUNT,                    "\
    \n Total No of records displayed : %1!d! \n"

    MSG_SRVR_RETRIEVE_DATABASE,                 "\
    \n Retrieving database from the Wins server %1!s! \n"


    EMSG_WINS_ACCESS_DENIED,                    "\
    \nAccess is denied for the operation.\n"

    EMSG_WINS_ERROR_SUCCESS,                    "\
    \nCommand completed successfully.\n"

    EMSG_WINS_FAILED,                           "\
    \nWins operation failed with error = %1!d!.\n"

    EMSG_WINS_UNKNOWN_SERVER,                   "\
    \nThe server name specified %1!s! is not a valid Server.\n"

    EMSG_WINS_INVALID_SERVER_HANDLE,            "\
    \nWins Server Handle is invalid.\n"

    EMSG_WINS_REQUIRED_PARAMETER,               "\
    \nThe parameter %1!d! is required to complete the operation.\n"

    EMSG_WINS_INVALID_COMPUTER_NAME,            "\
    \nThe server name specified ( %1!s! ) is not a valid server.\n"

    EMSG_WINS_INVALID_PULLPARTNER,              "\
    \nThe server name specified %1!s! is not a valid pull partner for the \
    \ncurrent WINS server %2!s!.\n"

    EMSG_WINS_INVALID_PUSHPARTNER,              "\
    \nThe server name specified %1!s! is not a valid push partner for the \
    \ncurrent WINS server %2!s!.\n"

    EMSG_WINS_SERVERPROP_FAILED,                "\
    \nFailed to extract properties for the Pull partner %1!s!.\n"

    EMSG_WINS_VERSION_HIGHER,                   "\
    \nVersion number higher in server: %1!s! than in owner: %1!s!\n"

    EMSG_WINS_VERSION_CORRECT,                  "\
    \nVersion numbers inconsistencies verified - No problems found!\n"

    EMSG_WINS_INVALID_NAME,                     "\
    \nThe name %1!s! is invalid.\n"

    EMSG_WINS_INVALID_FILENAME,                 "\
    \nFailed to open the file %1!s!\n"

    EMSG_WINS_VALUE_OUTOFRANGE,                 "\
    \nThe value is out of valid range.\n"

    EMSG_WINS_EMPTY_FILE,                       "\
    \nThe file %1!s! is empty.\n"

    EMSG_WINS_FILEREAD_FAILED,                  "\
    \nFailed to read data from the file %1!s!\n"

    EMSG_WINS_INVALID_IPADDRESS,                "\
    \nThe String %1!s! is not a valid IP Address.\n"

    EMSG_SRVR_ATLEAST_ONE_PNG,                  "\
    \nNone of the PNG Server Addresses passed belongs to the list of PNGServers.\n"

    EMSG_SRVR_ATLEAST_ONE_PG,                   "\
    \nNone of the PG Server Addresses passed belongs to the list of PGServers.\n"

    EMSG_SRVR_NO_VALID_IP,                      "\
    \nNo valid IP address is provided to complete the operation.\n"

    EMSG_WINS_NO_NAMES,                         "\
    \nThere is no Name specified to be checked.\n"

    EMSG_WINS_NO_SERVERS,                       "\
    \nThere is no Server specified against which the names are to be checked.\n"

    EMSG_WINS_DISPLAY_STRING,                   "\
    \n%1!s!"

    EMSG_WINS_PULL_FAILED,                      "\
    \nThe Pull Trigger operation failed"

    EMSG_WINS_PUSH_FAILED,                      "\
    \nThe Push Trigger operation failed"

    EMSG_WINS_NO_PULLPARTNER,                   "\
    \nNo pull partner available for replication."

    EMSG_WINS_NO_PUSHPARTNER,                   "\
    \nNo push partner available for replication."

    EMSG_WINS_INVALID_PARAMETER,                "\
    \nThe parameter specified is either invalid or insufficient to complete \
    \nthe operations.\n"

    EMSG_WINS_OUT_OF_MEMORY,                    "\
    \nNot enough memory available to complete the operation."

    EMSG_WINS_NO_MORE_ITEMS,                    "\
    \nNo more items available for display."

    EMSG_WINS_MORE_DATA,                        "\
    \nBuffer supplied is insufficient to hold the data.\n"

    EMSG_WINS_SERVICE_FAILED,                   "\
    \nWINS Service did NOT stop/start in wait period!\n"

    EMSG_WINS_DELETE_FILE,                      "\
    \nDeleting file %1!s! failed.\n"


    EMSG_WINS_RESTORE_IMPROPER,                 "\
    \nRestore might fail to retore the backed up database as DoBackupOnTerm could \
    \nnot be verified. Please reset DoBackupOnTerm parameter to 0 using either \
    \nthis tool or Wins Snap-in.\n"

    EMSG_WINS_REGCONNECT_FAILED,                "\
    \nRegConnectRegistry operation failed with Error %1!s!\n"

    EMSG_WINS_REGOPEN_FAILED,                   "\
    \nRegOpenKeyEx operation failed with Error %1!s!\n"

    EMSG_WINS_REGSETVAL_FAILED,                 "\
    \nRegSetValueEx operation failed with Error %1!s!\n"

    EMSG_SRVR_ADD_NAME,                         "\
    \nWins Server Add Name failed with Error : \n%1!s!\n"

    EMSG_SRVR_ADD_PARTNER,                      "\
    \nWins Server Add Partner failed with Error : \n%1!s!\n"

    EMSG_SRVR_ADD_PNGSERVER,                    "\
    \nWins Server Add Persona Non Grata Server failed with Error : \n%1!s!\n"

    EMSG_SRVR_ADD_PGSERVER,                    "\
    \nWins Server Add Persona Grata Server failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_NAME,                      "\
    \nWins Server Delete Name failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_PARTNER,                   "\
    \nWins Server Delete Partner failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_PNGSERVER,                 "\
    \nWins Server Delete Persona Non Grata Server failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_PGSERVER,                 "\
    \nWins Server Delete Persona Grata Server failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_RECORDS,                   "\
    \nWins Server Delete Records failed with Error : \n%1!s!\n"

    EMSG_SRVR_DELETE_WINS,                      "\
    \nWins Server Delete Owner failed with Error : \n%1!s!\n"

    EMSG_SRVR_CHECK_NAME,                       "\
    \nWins Server Check Name Consistency failed with Error : \n%1!s!\n"

    EMSG_SRVR_CHECK_DATABASE,                   "\
    \nWins Server Check Database Consistency failed with Error : \n%1!s!\n"

    EMSG_SRVR_CHECK_VERSION,                    "\
    \nWins Server Check Version Number Consistency failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_BACKUP,                      "\
    \nWins Server Initialize Backup of Wins Database failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_IMPORT,                      "\
    \nWins Server Initialize Import from LMHOSTS file failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_PULL,                        "\
    \nWins Server Initialize and Send Pull Trigger to selected partner failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_PULLRANGE,                   "\
    \nWins Server Pull Range of Records failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_PUSH,                        "\
    \nWins Server Initialize and Send Push Trigger to selected partner failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_REPLICATE,                   "\
    \nWins Server Replication failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_RESTORE,                     "\
    \nWins Server Initialize Wins Database Restore failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_SCAVENGE,                    "\
    \nWins Server Scavenging Wins Database failed with Error : \n%1!s!\n"

    EMSG_SRVR_INIT_SEARCH,                      "\
    \nWins Server Name Search failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_AUTOPARTNERCONFIG,            "\
    \nWins Server Set Autopartnerconfig failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_BACKUPPATH,                   "\
    \nWins Server Set Backuppath failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_DEFAULTPARAM,                 "\
    \nWins Server Set Defaultparam failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_MIGRATEFLAG,                  "\
    \nWins Server Set MigrateFlag failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_NAMERECORD,                   "\
    \nWins Server Set NameRecord failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PERIODICDBCHECKING,           "\
    \nWins Server Set PeriodicDatabaseChecking failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PULLPERSISTENTCONNECTION,     "\
    \nWins Server Set PullPartnerConfig failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PUSHPERSISTENTCONNECTION,     "\
    \nWins Server Set PushPartnerConfig failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PULLPARAM,                    "\
    \nWins Server Set PushParam failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PUSHPARAM,                    "\
    \nWins Server Set PushParam failed with Error : \n%1!s!\n"
    
    EMSG_SRVR_SET_REPLICATEFLAG,                "\
    \nWins Server Set ReplicateFlag failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_LOGPARAM,                     "\
    \nWins Server Set LogParam failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_BURSTPARAM,                   "\
    \nWins Server Set BurstParam failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_STARTVERSION,                 "\
    \nWins Server Set StartVersion failed with Error : \n%1!s!\n"

    EMSG_SRVR_SET_PGMODE,                       "\
    \nWins Server Set Persona failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_DATABASE,                    "\
    \nWins Server Show Database failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_DOMAIN,                      "\
    \nWins Server Show Browser failed with Error  : \n%1!s!\n"

    EMSG_SRVR_SHOW_INFO,                        "\
    \nWins Server Show ServerInfo failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_PARTNER,                     "\
    \nWins Server Show Partner failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_NAME,                        "\
    \nWins Server Show Name failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_STATISTICS,                  "\
    \nWins Server Show Statistics failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_VERSION,                     "\
    \nWins Server Show Version failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_VERSIONMAP,                  "\
    \nWins Server Show VersionMap failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_PARTNERPROPERTIES,           "\
    \nWins Server Show PartnerProperties failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_PULLPARTNERPROPERTIES,       "\
    \nWins Server Show PullPartnerProperties failed with Error ; \n%1!s!\n"

    EMSG_SRVR_SHOW_PUSHPARTNERPROPERTIES,       "\
    \nWins Server Show PushPartnerProperties failed with Error ; \n%1!s!\n"

    EMSG_SRVR_SHOW_RECCOUNT,                    "\
    \nWins Server Show RecCount failed with Error : \n%1!s!\n"

    EMSG_SRVR_SHOW_RECBYVERSION,                "\
    \nWins Server Show RecByVersion failed with Error : \n%1!s!\n"

    EMSG_WINS_DUMP,                             "\
    \nWins Dump configuration failed with Error : \n%1!s!\n"

    EMSG_SRVR_DUMP,                             "\
    \nWins Server Dump configuration failed with Error : \n%1!s!\n"
    
    EMSG_WINS_BIND_FAILED,                      "\
    \nWins Server Bind failed with Server %1!s!\n"

    EMSG_INVALID_DB_VERSION,                    "\
    \nData base version is not valid.\n"

    EMSG_INVALID_IPADDRESS,                      "\
    \nIP Address does not resolve into a valid server.\n"

    EMSG_INVALID_PARTNER_NAME,                  "\
    \nServer name provided is not a valid partner for this server.\n"
    
    EMSG_NO_PARTNER_EXIST,                      "\
    \nNo partner exist for this WINS Server.\n"

    EMSG_INVALID_PARAMETER_SPECIFICATION,       "\
    \nParameters specified is invalid for this command.\n"

    EMSG_WINS_LOCAL_SERVER,                     "\
    \nThis operation can not be performed on the remote server %1!s!.\n"

    EMSG_WINS_GETSTATUS_FAILED,                 "\
    Wins Operation failed with Error %1!s!\n"

    EMSG_SRVR_NO_REPLPARTNERS,                  "\
    \nNo Wins Partner defined.\n"

    EMSG_SRVR_RETRIEVEDB_FAILED,                "\
    \nDatabase retrieve operation for the server %1!s! failed with Error : "

    EMSG_SRVR_ERROR_MESSAGE,                    "\
    \n%1!s!\n"

    EMSG_WINS_RETRIEVEDB_PARTIAL,               "\
    \nDatabase retrieve operation failed with some or all servers.\n"


    EMSG_ACCESS_NOT_DETERMINED,                 "\
    \nUnable to determine the access level for the server %1!s!.\
    \nMay be an older server or server may not work correctly.\n"

    EMSG_WINS_VERIFY_ADDRESS,                   "\
    \nUnable to verify the binding address for the WINS Server. Server Might\
    \nnot work properly. Error : \n%1!s!\n"
    
    EMSG_SRVR_NOBACKUP_PATH,                    "\
    \nNo backup path set for the server.\n"

    EMSG_SRVR_UNABLE_BIND,                      "\
    \nUnable to bind to %1!s!\n"

    EMSG_WINS_GET_WINSSTATUS,                    "\
    \nGet WINS status failed with Error : \n%1!s!\n"

    EMSG_WINS_OWNER_DATABASE,                   "\
    \nThe Database list of owners is empty.\n"

    EMSG_WINS_UNABLE_VERIFY,                    "\
    \nUnable to verify against WINS server : \n%1!s!\n"

    EMSG_WINS_SENDTO_FAILED,                    "\
    \nSend Name Query failed with Error : \n%1!s!\n"

    EMSG_WINS_GETRESPONSE_FAILED,               "\
    \nGet Name Response failed with Error : \n%1!s!\n"

    EMSG_WINS_NAMECHECK_FAILED,                 "\
    \nName Check failed with Error : \n%1!s!\n"

    EMSG_WINS_NAME_NOT_FOUND,                   "Name Not Found!"

    EMSG_WINS_NO_RESPONSE,                      "No Response!"
    
    EMSG_WINS_NAME_INCONSISTENCY,               "\
    \nAn inconsistency was found with WINS for NetBIOS name %1!s!"
    
    EMSG_WINS_VERIFIED_ADDRESS,                 "\
    \nNetBIOS name has verified address ( %1!s! ). \n"

    EMSG_WINS_NAME_VERIFIED,                    "\
    \n%1!s! has a verified address of %2!s!\n"

    EMSG_WINS_NAMEQUERY_RESULT,                 "\
    \nName query from %1!s! for \\\\%2!s! returned %3!s! \n"

    EMSG_WINS_WINS_NEVERRESPONDED,              "\
    \nWINS server %1!s! never responded.\n"

    EMSG_WINS_WINS_INCOMPLETE,                  "\
    \nWINS server %1!s! response incomplete!\n"

    EMSG_WINS_ADDRESS_VERIFY_FAILED,            "\
    \nCould not verify address for name : %1!s!"
    

    EMSG_WINS_ADMIN_INSTALL,                    "\
    \nWinsrpc.dll is not available in the installation.. Please install Admin Pack\
    \nfor WINS context to work.\n"
	
	EMSG_WINS_NOT_CONFIGURED,					"\
	\nDefault parameters for the WINS Server are not yet configured. Please run \
	\nWINS Snap-in through Microsoft Management Console(MMC) or ""set \
    \ndefaultparam"" command from under Netsh WINS Server context at least once \
    \nto configure the default parameters before running this command.\n"

    EMSG_SRVR_INVALID_PARTNER,                  "\
    \nThe specified server %1!s! is not defined as partner for the current WINS\
    \nServer.\n"
 
    EMSG_SRVR_IP_DISCARD,                       "\
    \nThe IP Address %1!s! provided is invalid and is discarded.\n"

    EMSG_SRVR_NO_IP_ADDED_PNG,                  "\
    \nNo new PNG Server address is added to the list.\n"

    EMSG_SRVR_NO_IP_ADDED_PG,                   "\
    \nNo new PG Server address is added to the list.\n"

    EMSG_SRVR_NOT_TAGGED,                       "\
    \nThe parameter %1!d! is not tagged when it is expected to be. It will be \
    \ndiscarded and default value will be used for the parameter.\n"

    EMSG_SRVR_NOT_UNTAGGED,                     "\
    \nThe parameter %1!d! is tagged when it is expected not to be. This might \
    \nlead to improper result. The command is cancelled.\n"

    EMSG_SRVR_NAME_NOT_VERIFIED,                "\
    The name cannot be verified.\n"

    EMSG_WINS_FILEOPEN_FAILED,                  "\
    \nFailed to open the file %1!s!. Results will not be stored.\n"

    EMSG_SRVR_BURST_PARAM_OUTOFRANGE,           "\
    \nPlease specify the number of requests the server can handle at one time \
    \nbefore clients have to retry registration or renewal value between 50-5000.\n"

    EMSG_SRVR_RENEW_INTERVAL,                   "\
    \nThe renew interval must be at least 40 minutes.\n"

    EMSG_SRVR_TOMBSTONE_TIMEOUT,                "\
    \nThe extinction timout must be equal or greater than %1!d!\n"

    EMSG_SRVR_TOMBSTONE_INTERVAL,               "\
    \nThe extinction interval must be at least the renew interval or 4 days, \
    \nwhich ever is smaller."
    
    EMSG_SRVR_VERIFY_INTERVAL,                  "\
    \nThe verify interval must be at least %1!d! times the tombstone interval or\
    \nmust be at least 24 days.\n"

    EMSG_WINS_OPERATION_FAILED,                 "\
    \nThe Wins operation has failed for the server %1!s! with Error: "

    EMSG_SRVR_DUPLICATE_DISCARD,                "\
    \nThe IP Address %1!s! is already present in the list.\n"

    EMSG_SRVR_INVALID_NETBIOS_NAME,             "\
    \nThe NetBIOS name is invalid. It may be too long or it may contain one or \
    \nmore invalid characters. Valid names are 0 to 15 characters in length.\n"

    EMSG_SRVR_PG_INVALIDOP,                     "\
    \nPersona Grata commands are inaccessible when Persona Mode is set \
    \nto Non-Grata. Please change Persona Mode to Grata before using this \
    \ncommand.\n\n"
    
    EMSG_SRVR_PNG_INVALIDOP                     "\
    \nPersona Non-Grata commands are inaccessible when Persona Mode is \
    \nset to Grata. Please change Persona Mode to Non-Grata before \
    \nusing this command.\n\n"

    DMP_SRVR_SET_BACKUPPATH,                    "\
    \nWins Server %1!s! set backuppath dir=%2!s! shutdown=%3!d!"

    DMP_SRVR_SET_BACKUPTERM,                    "\
    \nWins Server %1!s! set backuppath shutdown=%2!d!"

    DMP_SRVR_SET_NAMERECORD,                    "\
    \nWins Server %1!s! set namerecord renew=%2!d! extinction=%3!d! extimeout=%4!d! verification=%5!d!"

    DMP_SRVR_SET_PERIODICDBCHECKING,            "\
    \nWins Server %1!s! set periodicdbchecking state=%2!d! maxrec=%3!d! checkagainst=%4!d! checkevery=%5!d! start=%6!d!"

    DMP_SRVR_SET_REPLICATEFLAG,                 "\
    \nWins Server %1!s! set replicateflag state=%2!d!"

    DMP_SRVR_SET_MIGRATEFLAG,                   "\
    \nWins Server %1!s! set migrateflag state=%2!d!"

    DMP_SRVR_SET_PULLPARAM,                     "\
    \nWins Server %1!s! set pullparam state=%2!d! strtup=%3!d! start=%4!d! interval=%5!d! retry=%6!d!"

    DMP_SRVR_SET_PUSHPARAM,                     "\
    \nWins Server %1!s! set pushparam state=%2!d! strtup=%3!d! addchange=%4!d! update=%5!d!"

    DMP_SRVR_ADD_PARTNER,                       "\
    \nWIns Server %1!s! add partner server=%2!s! type=%3!d!"

    DMP_SRVR_SET_PULLPERSISTENTCONNECTION,      "\
    \nWins Server %1!s! set pullpartnerconfig state=%2!d! server=%3!s! start=%4!d! interval=%5!d!"

    DMP_SRVR_SET_PUSHPERSISTENTCONNECTION,      "\
    \nWins Server %1!s! set pushpartnerconfig state=%2!d! server=%3!s! update=%4!d!"

    DMP_SRVR_SET_AUTOPARTNERCONFIG,             "\
    \nWins Server %1!s! set autopartnerconfig state=%2!d! interval=%3!d! ttl=%4!d!"

    DMP_SRVR_SET_PGMODE                         "\
    \nWins Server %1!s! set pgmode Mode=%2!d!"

    DMP_SRVR_ADD_PNGSERVER,                     "\
    \nWins Server %1!s! add pngserver servers={%2!s!}"

    DMP_SRVR_ADD_PGSERVER,                      "\
    \nWins Server %1!s! add pgserver servers={%2!s!}"

    DMP_SRVR_SET_BURSTPARAM,                    "\
    \nWins Server %1!s! set burstparam state=%2!d!"

    DMP_SRVR_SET_BURSTPARAM_ALL,                "\
    \nWins Server %1!s! set burstparam state=%2!d! value=%3!d!"
    
    DMP_SRVR_SET_LOGPARAM,                      "\
    \nWins Server %1!s! set logparam dbchange=%2!d! event=%3!d!"
    
    DMP_SRVR_SET_STARTVERSION,                  "\
    \nWins Server %1!s! set startversion version={%2!x!,%3!x!}"

    FMSG_WINS_RECORDS_INFO,                     "\
    \n\r%1!s! \t%2!s! \t%3!s! \t%4!2x! %5!8x! \t%6!8x! \t%7!s! \t%8!s! "

    FMSG_WINS_IPADDRESS_STRING,                 "\
    \t%1!s! \t%2!s!"                                                                                                   
    
    FMSG_WINS_IPADDRESS_LIST,                   "\
    \n\r                     \t        \t         \t              \t        \t           \t                          \t%1!s! \t%2!s!"

    FMSG_WINS_RECORD_TABLE,                     "\
    \n\rNAME                 \tTYPE    \tSTATE    \tVERSION       \tNODETYPE \tGROUP         \tEXPIRATION TIME STAMP    \tIPADDRESS   \tOwner"

    FMSG_WINS_RECORD_ENTRY,                     
    " %1!s! \t%2!s! \t%3!s! \t%4!s! \t%5!s! \t%6!s! \t%7!s!\t%8!s! \n\r"
    
    FMSG_WINS_RECORDS_TABLE,                     "\
    \n\r NAME                \tTYPE    \tSTATE     \tVERSION   \tGROUP          \tEXPIRATION TIME STAMP    \tIPADDRESS  \tOwner\n\r"
    
    FMSG_WINS_RECORD_IPADDRESS,                 
    "                     \t        \t          \t          \t               \t                         \t%1!s!\t%2!s!"

    FMSG_WINS_SOTABLE_HEADER,                    "\
    \n\rSERVER-->OWNER TABLE:    \
    \n\tEach row represents the (owner address - version#) mapping table obtained from\
    \n\ra particular WINS server. We have a problem if the diagonal element is not the\
    \n\rhighest in its column.\
    \n\rList of Owners ----> \n\r\n\r" 
                                                   
    FMSG_WINS_MASTEROWNER_INDEX,                 "\t%1!d!"

    FMSG_WINS_MASTEROWNER_INDEX1,                "%1!d!"

    FMSG_WINS_MAP_SOURCE,                        "\
    \n\r|\n\r|  List of WINSs from where the mapping table was retrieved\n\r|\n\r\n\r"
    
    FMSG_WINS_INDEXTOIP_TABLE,                   "\
    \nIndex to IP Address Table :\n\r"

    FMSG_WINS_INDEXTOIP_ENTRY,                   "\
    \t%1!d! \t %2!s!\n\r "

}

#include <windows.h>
#include <ntverp.h>

#define VER_FILETYPE              VFT_DLL
#define VER_FILESUBTYPE           VFT2_UNKNOWN
#define VER_FILEDESCRIPTION_STR   "WINS Monitor Dll"
#define VER_INTERNALNAME_STR      "winsmon.dll"
#define VER_ORIGINALFILENAME_STR  "winsmon.dll"

#include "common.ver"   // NT5.0 version file.
