TARGETNAME=tprov
TARGETTYPE=PROGRAM
TARGETPATH=obj

UMTYPE=console
UMENTRY=wmain



# USE_MSVCRT=1
USE_NATIVE_EH=ASYNC

C_DEFINES=$(C_DEFINES) -DTEST_HARNESS -DUNICODE -D_UNICODE

INCLUDES=  .;                         \
	..;  \
        $(SDK_INC_PATH); \
        $(SDK_INC_PATH)\crt; \
	..\..\..\inc;

TARGETLIBS= \
    $(NET_LIB_PATH)\icmp.lib        \
    $(SDK_LIB_PATH)\ole32.lib        \
    $(SDK_LIB_PATH)\USER32.lib        \
    $(SDK_LIB_PATH)\kernel32.lib      \
    $(SDK_LIB_PATH)\iphlpapi.lib      \
    $(SDK_LIB_PATH)\ws2_32.lib        \
    $(SDK_LIB_PATH)\comctl32.lib    \
    $(SDK_LIB_PATH)\setupapi.lib    \
    $(SDK_LIB_PATH)\uuid.lib    \
    $(SDK_LIB_PATH)\advapi32.lib    \
    $(SDK_LIB_PATH)\wbemuuid.lib        \
    ..\..\..\api\$(O)\wlbsctrl.lib     \
    $(SDK_LIB_PATH)\oleaut32.lib       \
    $(SDK_LIB_PATH)\mprapi.lib

SOURCES= \
    tmgr.cpp \
    nlbhost.cpp \
    nlbhost_ping.cpp \
    ..\new.cpp \
    ..\cfgutils.cpp \
    ..\updatecfg.cpp \
    tprov.cpp \
	tprov.rc

#
# Following for _bstr_t and other COM-related stuff
#
USE_VCCOM=1

#
# The following statement specifies the list of files to be preprocessed
# for tracing macros. See http://coreos/tech/tracing/ for details.
# The ini file tracewpp.ini explains to the preprocessor how to interpret
# various trace macros, like LOG_CRIT.
#
RUN_WPP= $(SOURCES) -dll  -ini:tracewpp.ini
