/*++

Copyright (c) 1996 Microsoft Corporation

Module Name:

    dhcpmon.rc

Abstract:

    Dhcp Manager Console Monitor Resources

Author:

    Shubho Bhattacharya(a-sbhatt) created on 11/14/98

Revision History:


--*/

#include    "strdefs.h"

STRINGTABLE
{
    //Formatting Messages
    MSG_DHCP_NULL,                          ""
    MSG_DHCP_FORMAT_TAB,                    "\t"
    MSG_DHCP_FORMAT_LINE,                   "\n"
    MSG_DHCP_FORMAT_DASH,                   "-"
    MSG_DHCP_FORMAT_STRING,                 "%1!s!"
    
   
    HLP_DHCP_HELP1,                         "\
    help                          - Displays help.\n"

    HLP_DHCP_HELP1_EX,                         "\
    \nUsage: help\n\
    \n       Displays help.\n\n"

    HLP_DHCP_HELP2,                            "\
    ?                             - Displays help.\n"

    HLP_DHCP_HELP2_EX,                         "\
    \nUsage: ?\n\
    \n       Displays help.\n\n"

    HLP_DHCP_HELP3,                            "\
    /?                            - Displays help.\n"

    HLP_DHCP_HELP3_EX,                         "\
    \nUsage: /?\n\
    \n       Displays help.\n\n"

    HLP_DHCP_HELP4,                            "\
    -?                            - Displays help.\n"

    HLP_DHCP_HELP4_EX,                         "\
    \nUsage: -?\n\
    \n       Displays help.\n\n"

    HLP_DHCP_LIST,                            "\
    list                          - Lists all the commands available.\n"

    HLP_DHCP_LIST_EX,                         "\
    \nUsage: list\n\
    \n       Lists all the commands available.\n"

    HLP_DHCP_DUMP,                            "\
    dump                          - Dumps configuration to a text file.\n"

    HLP_DHCP_DUMP_EX,                         "\
    \nDumps the configuration of the local computer's DHCP Server to a file \
    \n \
    \nSyntax: \
    \n \
    \n        netsh dhcp dump > Filename  \
    \n \
    \nParameters: \
    \n \
    \n        Filename       - The name of the destination file where the \
    \n                         DHCP server configuration is dumped. \
    \n \
    \nNotes: This command dumps the DHCP configuration as text output within\
    \n       the command prompt. Optionally, you can either copy or redirect this\
    \n       output to a file for later viewing in a text editor. When file output\
    \n       is obtained, you can use the 'exec' command to execute the output\
    \n       file to configure another DHCP server.\
    \n \
    \n       Before performing this command, reconcile all scopes and fix any\
    \n       inconsistencies reported.  Prior to executing a dump file created\
    \n       using this command at another server using the 'exec' command, do\
    \n       the following:\
    \n \
    \n       1. Close the DHCP console.\
    \n \
    \n          Do not re-open the console until after the 'exec' command is used.\
    \n \
    \n       2. Delete all default option definitions and any user and vendor classes.\
    \n \
    \n          Examples for deleting options and classes:\
    \n \
    \n               netsh dhcp server delete optiondef 01\
    \n               netsh dhcp server delete optiondef 76\
    \n \
    \n               netsh dhcp server delete class ""Default Routing and Remote Access Class""\
    \n               netsh dhcp server delete Class ""Default BOOTP Class""\
    \n               netsh dhcp server delete Class ""Microsoft Windows 2000 Options""\
    \n               netsh dhcp server delete Class ""Microsoft Windows 98 Options""\
    \n               netsh dhcp server delete Class ""Microsoft Options""\
    \n \
    \n \
    \n       After using the 'exec' command to load the dump file, reconcile all\
    \n       scopes again. You then need to use NET STOP DHCPSERVER to stop the\
    \n       DHCP Server service and NET START DHCPSERVER so that the service is\
    \n       re-started so that DHCP database changes take effect.\
    \n \
    \nExample:      netsh dhcp dump > dhcpcfg.dmp \
    \n"


    HLP_DHCP_CONTEXT_SERVER,                  "\
    server [\\\\servername/ipaddress] - To switch the context to the server specified.\
    \n                                A Null implies the local machine."

    HLP_DHCP_CONTEXT_SERVER_EX,                 "\
    \nSwitches the active command context to the specified DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        dhcp> server <\\\\ServerName | ServerIP> \
    \n \
    \nParameters: \
    \n \
    \n        ServerName     - The NetBIOS name of the DHCP server \
    \n                         computer.  \
    \n \
    \n        ServerIP       - The IP address of the DHCP server computer.   \
    \n \
    \nNotes:         If neither a value for ServerName or ServerIP are \
    \n               specified, the local computer is assumed. \
    \n \
    \nExamples:      server \\\\DHCP-SRV1 \
    \n               server 10.0.0.1 \
    \n"

    HLP_SRVR_CONTEXT_SCOPE,                     "\
    scope <scope-ip-address>      - To switch to the scope identified by\
    \n                                the IP Address."

    HLP_SRVR_CONTEXT_SCOPE_EX,                  "\
    \nTo switch from the server context to the scope sub-context identified \
    \nby its network IP address. \
    \n \
    \nSyntax:  \
    \n \
    \n        scope <ScopeIP> \
    \n \
    \nParameters: \
    \n \
    \n        ScopeIP        - The scope IP address number for the \
    \n                         network/subnet.  \
    \n \
    \nNotes:         Subsequent operations are performed on this scope at \
    \n               the specified server. \
    \n \
    \nExample:       scope 10.0.0.0 \
    \n \
    \n               This command switches the netsh command context to \
    \n               enable you to use any of the available DHCP scope-level \
    \n               commands for the 10.0.0.0 scope.  \
    \n"

    HLP_SRVR_CONTEXT_MSCOPE,                     "\
    mscope <mscope-name>          - To switch to the mscope identified by\
    \n                                the MScope name."

    HLP_SRVR_CONTEXT_MSCOPE_EX,                  "\
    \nTo switch from the server context to the multicast scope sub-context  \
    \nidentified by name.  \
    \n \
    \nSyntax:  \
    \n \
    \n      	mscope <MscopeName> \
    \n \
    \nParameters: \
    \n \
    \n        MscopeName     - Name of the multicast scope (case \
    \n                         sensitive).  \
    \n \
    \nNotes:         Subsequent operations are performed on this multicast \
    \n               scope at the specified server. \
    \n \
    \nExample:       mscope ""My Multicast Scope"" \
    \n \
    \n               This command switches the command context to a \
    \n               multicast scope named ""My Multicast Scope"" and enables \
    \n               you to use any of the available DHCP multicast \
    \n               scope-level commands subsequently for this scope.  \
    \n"

    HLP_DHCP_ADD_SERVER,                      "\
    add server       - Adds server to the list of authorized servers in the DS ." 

    HLP_DHCP_ADD_SERVER_EX,                   "\
    \nTo add a DHCP server to the list of authorized servers in the DS. \
    \n \
    \nSyntax: \
    \n \
    \n        add server <ServerDNS> <ServerIP> \
    \n \
    \nParameters: \
    \n \
    \n        ServerDNS      - The DNS domain name of the DHCP server \
    \n                         computer.  \
    \n \
    \n        ServerIP       - The IP address of the DHCP server computer.  \
    \n \
    \nNotes:         All parameters, as shown in <angle brackets>, are \
    \n               required.  \
    \n \
    \nExample:       add server dhcpsrv1.example.microsoft.com 10.2.2.2  \
    \n \
    \n               This command adds a server with a DNS name of \
    \n               dhcpsrv1.example.microsoft.com and an IP address of \
    \n               10.2.2.2 to the list of authorized servers in the DS.  \
    \n"
    
    HLP_DHCP_ADD_HELPER,                      "\
    add helper       - Installs a Helper under DHCP." 

    HLP_DHCP_ADD_HELPER_EX,                   "\
    \nUsage   : add helper <helper-name> <dll-name> <dll-init-name>\
    \n          helper-name     - Token name (context) of the helper.\
    \n          dll-name        - DLL supporting this context.\
    \n          dll-init-name   - Name of the initialization function exported by the DLL.\
    \nPurpose : Installs a helper under DHCP\n"

    HLP_DHCP_DELETE_SERVER,                   "\
    delete server    - Deletes a DHCP server from the list of servers in the DS."

    HLP_DHCP_DELETE_SERVER_EX,                "\
    \nTo delete a DHCP server from the list of authorized servers in the DS. \
    \n \
    \ndelete server <ServerDNS> <ServerIP> \
    \n \
    \nParameters: \
    \n \
    \n        ServerDNS      - The DNS domain name of the DHCP server \
    \n                         computer.  \
    \n \
    \n        ServerIP       - The IP address of the DHCP server computer.  \
    \n \
    \nNotes:         All parameters, as shown in <angle brackets>, are \
    \n               required.  \
    \n \
    \nExample:       delete server dhcpsrv1.example.microsoft.com 10.2.2.2 \
    \n \
    \n               This command deletes the server with DNS name \
    \n               mycomp.mydom.microsoft.com and IP address 10.2.2.2 from \
    \n               the list of servers in the DS -- this effectively removes\
    \n               any authorization for the DHCP server service to run.  \
    \n"

    HLP_DHCP_DELETE_HELPER,                   "\
    delete helper     - Deletes a Helper from under DHCP." 

    HLP_DHCP_DELETE_HELPER_EX,                "\
    \nUsage   : delete helper <helper-name>\
    \n          helper-name     - Token name (context) of the helper to remove\
    \nPurpose : Removes a helper from under DHCP.\n"

    HLP_DHCP_SHOW_SERVER,                     "\
    show server      - Displays all the DHCP servers in the DS for the current domain"

    HLP_DHCP_SHOW_SERVER_EX,                  "\
    \nTo display the list of authorized servers in the DS for the current domain. \
    \n \
    \nSyntax: \
    \n \
    \n        show server \
    \n \
    \nNotes:         This command displays the list of authorized servers in \
    \n               the DS for the current domain. \
    \n"

    HLP_DHCP_SHOW_HELPER,                     "\
    show helper      - Displays all the helpers under DHCP."

    HLP_DHCP_SHOW_HELPER_EX,                  "\
    \nUsage   : show helper\
    \nPurpose : To display all the helpers under DHCP."

    
    HLP_GROUP_ADD,                          "\
    add                           - Adds a configuration entry to a table.\n"

    HLP_GROUP_CHECK,                        "\
    initiate                      - Initiates an operation. \n"

    HLP_GROUP_DELETE,                       "\
    delete                        - Deletes a configuration entry from a table.\n"

    HLP_GROUP_REDO,                         "\
    initiate                      - Initiates an operation.\n"

    HLP_GROUP_EXPORT,                       "\
    export                        - Exports the configuration to a file.\n"

    HLP_GROUP_IMPORT,                       "\
    import                        - Imports the configuration from a file.\n"

    HLP_GROUP_SET,                          "\
    set                           - Sets configuration information.\n"

    HLP_GROUP_SHOW,                         "\
    show                          - Displays information.\n"

    DMP_DHCP_ADD_SERVER,                    "\
    \nAdd server \n\tdns name = %1!s! \n\tIP address = %1!s!\n"
    
    MSG_DHCP_SERVER_ADDING,                 "\
    \nAdding server %1!s!, %2!s!\n"

    EMSG_DHCP_ADD_SERVER,                   "\
    \nDHCP Add Server failed.\n"

    DMP_DHCP_DELETE_SERVER,                 "\
    \nDelete server \n\tdns name =%1!s! \n\tIP Address = !2%s!\n"

    MSG_DHCP_SERVER_DELETING,               "\
    \nDeleting server with %1!s!, %2!s!\n"

    EMSG_DHCP_DELETE_SERVER,                "\
    \nDHCP Delete Server failed.\n"
    
    DMP_DHCP_SHOW_SERVER,                   "\
    \nDisplaying Server:\n"

    MSG_DHCP_SERVER_SHOW_INFO_ARRAY,        "\
    \n%1!d! Servers were found in the DS:\n"

    MSG_DHCP_SERVER_SHOW_INFO,              "\
    \n\tServer [%1!s!] Address [%2!s!] Ds location: %3!s! \n"
    
    MSG_DHCP_SERVER_SHOW_INFO_NODS,         "\
    \n\tServer [%1!s!] Address [%2!s!] Ds location: <no-ds-location-available> \n"

    EMSG_DHCP_SHOW_SERVER,                  "\
    \nDHCP Show Server failed.\n"

    EMSG_DHCP_RECONCILE_SUCCESS,            "\
    \nDHCP Initiate Reconcile request is successfully queued.\n"

    EMSG_DHCP_ERROR_SUCCESS,                "\
    \nCommand completed successfully.\n"

    EMSG_DHCP_INCOMPLETE_COMMAND,           "\
    The command is incomplete. The possible completions are:\n\n"
    
    EMSG_DHCP_UNABLE_TO_CREATE_FILE,        "\
    Unable to create file %1!s!. Error %1!d!\n"

    EMSG_DHCP_DSINIT_FAILED,                "\
    \nFailed to initialize DS with Error = %1!d!.\n"

    EMSG_DHCP_INVALID_PARAMETER,            "\
    \nParameter(s) passed are either incomplete or invalid.\n"

    EMSG_DHCP_OUT_OF_MEMORY,                "\
    \nNot enough memory available to perform the operation.\n"

    EMSG_DHCP_NO_MORE_ITEMS,                "\
    \nNo items to display.\n"

    EMSG_DHCP_MORE_DATA,                    "\
    \nMore items to display.\n"

    EMSG_DHCP_INVALID_TAG,                  "\
    \nTag %1!s! supplied is not valid for the command.\n"

    EMSG_DHCP_DUPLICATE_TAG,                "\
    \nTag %1!s! is already supplied.\n"

    MSG_NO_ENTRY_PT,			            "No entry point %1!s! in helper\n"
	MSG_DLL_LOAD_FAILED,		            "Could not load DLL %1!s!.\n"
    MSG_DLL_START_FAILED,                   "Initialization Function %1!s! in %2!s!\
                                            failed to start with error code %1!d!\n"
	MSG_NO_HELPER,				            "No helper found for %1!s!.\n"
  	MSG_DHCP_NOT_ENOUGH_MEMORY,			    "\nOut of Memory\n"
    
    MSG_HELPER_HELP, "%1!-16s! - Change to the %1!s! context.\n"


    EMSG_INSTALL_KEY_FAILED,                "Error creating key for %1!s! in the registry.\n"
	EMSG_UNINSTALL_KEY_FAILED,              "Error deleting key for %1!s! in the registry.\n"
	EMSG_UNINSTALL_SUBKEYS,                 "First uninstall helpers under %1!s!.\n"
    EMSG_RSVD_KEYWORD,                      "%1!s! is a reserved keyword\n"

    EMSG_DHCP_FAILED_TO_LOAD_HELPER,        "Failed to load Helper %1!s!."
    
    EMSG_DHCP_DUMP,                         "\nDHCP Dump Configuration Failed.\n"

    EMSG_SRVR_NEED_DNS_CREDENTIALS_SUPPORT, "\
    \nThe server does not support this command. This command will only work \
    on servers that have support for using credentials for DNS updates.\n"

    HLP_SRVR_HELP1,                         "\
    help                          - Displays help.\n"

    HLP_SRVR_HELP1_EX,                         "\
    \nUsage: help\n\
    \n       Displays help.\n\n"

    HLP_SRVR_HELP2,                            "\
    ?                             - Displays help.\n"

    HLP_SRVR_HELP2_EX,                         "\
    \nUsage: ?\n\
    \n       Displays help.\n\n"

    HLP_SRVR_HELP3,                            "\
    /?                            - Displays help.\n"

    HLP_SRVR_HELP3_EX,                         "\
    \nUsage: /?\n\
    \n       Displays help.\n\n"

    HLP_SRVR_HELP4,                            "\
    -?                            - Displays help.\n"

    HLP_SRVR_HELP4_EX,                         "\
    \nUsage: -?\n\
    \n       Displays help.\n\n"

    HLP_SRVR_LIST,                            "\
    list                          - Lists all the commands available.\n"

    HLP_SRVR_LIST_EX,                         "\
    \nUsage: list\n\
    \n       Lists all the commands available.\n"

    HLP_SRVR_DUMP,                            "\
    dump                          - Dumps configuration to a text file.\n"

    HLP_SRVR_DUMP_EX,                         "\
    \nDumps the configuration of a DHCP Server to a file \
    \n \
    \nSyntax: \
    \n \
    \n        netsh dhcp server [\\\\Servername | Address] dump > Filename  \
    \n \
    \nParameters: \
    \n \
    \n        Servername     - The name of the remote (non-local) DHCP \
    \n                         server.  \
    \n \
    \n        Address        - The IP address of the remote (non-local) DHCP \
    \n                         server.  \
    \n \
    \n        Filename       - The name of the destination file where the \
    \n                         DHCP server configuration is dumped. \
    \n \
    \nNotes:         This command permits you to view the DHCP configuration \
    \n               in a text editor or use the load command for loading \
    \n               the output file to configure another DHCP server. If \
    \n               used without redirection in Netshell, this command \
    \n               displays the DHCP server configuration information in \
    \n               the command window.  \
    \n \
    \nExamples:      netsh dhcp server dump > dhcpcfg.dmp \
    \n               netsh dhcp server \\\\DHCP-A dump > dhcpcfg.dmp \
    \n               netsh dhcp server 10.0.0.1 dump > dhcpcfg.dmp \
    \n"

    HLP_SRVR_ADD_CLASS,                       "\
    add class                     - Adds a class to the server."

    HLP_SRVR_ADD_CLASS_EX,                    "\
    \nTo create and add a class to the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        add class <ClassName> <ClassComment> <Data> [IsVendor(1|0)] \
    \n        [IsBinary(B|b)] \
    \n \
    \nParameters: \
    \n \
    \n        ClassName      - Name of the class to be created. \
    \n \
    \n        ClassComment   - Comment to be associated with the class. \
    \n \
    \n        Data           - Data in ASCII or binary format depending on \
    \n                         IsBinary parameter.  By default, the format \
    \n                         of the data is assumed to be ASCII.  \
    \n \
    \n        IsVendor       - 0-Creates the class as a user class (default) \
    \n                       - 1-Creates the class as a vendor class \
    \n \
    \n        IsBinary       - 'B' or 'b' if the data is in binary \
    \n                         format. By default, the format of the data is \
    \n                         assumed to be ASCII.   \
    \n \
    \nNotes:         For parameters, <angle brackets> indicate a required \
    \n               parameter and [braces] an optional parameter. The \
    \n               IsBinary parameter can be provided  without providing \
    \n               the IsVendor parameter. See example below.  \
    \n \
    \nExamples:      add class MyClass TestClass testdataforMyClass 1 \
    \n               add class MyUserClass TestClass1 4345335532 b \
    \n \
    \n               The first command creates a vendor class under the \
    \n               server called MyClass, with comment TestClass, class \
    \n               data of testdataforMyClass in ASCII format. The second \
    \n               command creates a user class under the server called \
    \n               MyUserClass with binary data of 4345335532 \
    \n               (ASCII-CE3U2). This is equivalent to the following \
    \n               alternate command syntax:  \
    \n                   add class MyClass1 TestClass1 4345335532 0 b  \
    \n"

    
    HLP_SRVR_ADD_HELPER,                      "\
    add helper                    - Installs a Helper under SERVER." 

    HLP_SRVR_ADD_HELPER_EX,                   "\
    \nUsage   : add helper <helper-name> <dll-name> <dll-init-name>\
    \n          helper-name     - Token name (context) of the helper.\
    \n          dll-name        - DLL supporting this context.\
    \n          dll-init-name   - Name of the initialization function exported by the DLL.\
    \nPurpose : Installs a helper under DHCP\n"
    
    
    HLP_SRVR_ADD_MSCOPE,                      "\
    add mscope                    - Adds a multicast scope to the server."

    HLP_SRVR_ADD_MSCOPE_EX,                   "\
    \nTo add a multicast scope to the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        add mscope <MscopeName> [MscopeComment] [TTL] \
    \n \
    \nParameters: \
    \n \
    \n        MscopeName     - The name of the multicast scope. \
    \n \
    \n        MscopeComment  - Description of the multicast scope \
    \n                         (optional). \
    \n \
    \n        TTL            - Time-to-Live value for the multicast \
    \n                         scope. The valid range of for this field is \
    \n                         between 1 to 255, with a default of 32.  \
    \n \
    \nNotes:         For parameters, <angle brackets> indicate a required \
    \n               parameter and [braces] an optional parameter.  By default,\
    \n               new multicast scopes have an infinite lease duration, \
    \n               though the Set lease command can be used to modify the \
    \n               duration of the leases.\
    \n \
    \nExample:       add mscope ""My MultiCast Scope"" MyTestMulticastScope 40 \
    \n \
    \n               This command creates a multicast scope with name ""My \
    \n               MultiCast Scope"", a comment of MyTestMulticastScope, \
    \n               and a multicast TTL value of 40.  \
    \n"

    HLP_SRVR_ADD_OPTIONDEF,                   "\
    add optiondef                 - Adds a new option to the server."

    HLP_SRVR_ADD_OPTIONDEF_EX,                "\
    \nTo define a new option type for use on the DHCP server. \
    \n \
    \nSyntax:  \
    \n \
    \n        	add optiondef <OptCode> <OptName> <DataType> \
    \n            <IsArray[1|0]> [vendor=VendorClass] \
    \n            [comment=OptComment] [DefValue]   \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - Unique option code that identifies the option \
    \n                         you are defining. The value should be a \
    \n                         number between 0 and 255.  \
    \n \
    \n        OptName        - Name of the newly created option type for use \
    \n                         at this server.  \
    \n \
    \n        DataType       - Data type of the option. Should be of the \
    \n                         following: \
    \n                         BYTE | WORD | DWORD | STRING | IPADDRESS  \
    \n \
    \n        IsArray        - 0=The data type is Unary or non-arrayed \
    \n                         (Default)  \
    \n                       - 1=The data type is arrayed \
    \n \
    \n        VendorName     - The name of the vendor class for which the \
    \n                         option to be added.  If unspecified, the \
    \n                         default is to use the default vendor class, \
    \n                         the DHCP Standard Options class.  \
    \n \
    \n        OptComment     - An optional comment. If used, the comment= \
    \n                         field tag must be provided. The default value \
    \n                         is NULL.  \
    \n \
    \n        DefValue       - A default value to be used for this option \
    \n                         type if one is not specified otherwise. \
    \n \
    \nNotes:         For parameters, <angle brackets> indicate a required \
    \n               parameter and [braces] an optional parameter. If \
    \n               parameters that require field tags are used, you must \
    \n               provide and use all parameters that precede them in the \
    \n               fully ordered command syntax. \
    \n               Note that IsArray must be ""0"" for STRING type options.\
    \n  \
    \nExample:       add optiondef 18 ExtensionsPath STRING 0 c:\\temp \
    \n               add optiondef 231 TestOption IPADDRESS \
    \n               add optiondef 231 TestOption IPADDRESS 1 vendor=MyVendorClass \
    \n                             10.1.1.1 \
    \n \
    \n               The first example defines a new option type named \
    \n               ExtensionsPath with code 18, a data type of STRING and \
    \n               assigns it a default value of c:\\temp. The second and \
    \n               third examples defines an option type named TestOption \
    \n               with code 231 of data type IPADDRESS. In the second \
    \n               example, the option is defined to provide only a single \
    \n               IP address. The IsArray and DefValue parameters are not \
    \n               necessary because defaults are assumed. In the third \
    \n               example, defValue and IsArray parameters are required.  \
    \n"

    
    HLP_SRVR_ADD_SCOPE,                       "\
    add scope                     - Adds a scope to the Server."

    HLP_SRVR_ADD_SCOPE_EX,                    "\
    \nTo create and add a new scope to the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        	add scope <ScopeAddress> <SubnetMask> <ScopeName> [ScopeComment] \
    \n \
    \nParameters: \
    \n \
    \n        ScopeAddress   - The IP network number of the scope to be \
    \n                         created.  \
    \n \
    \n        SubnetMask     - The subnet mask for the scope. \
    \n \
    \n        ScopeName      - An identifying name for the scope. \
    \n \
    \n        ScopeComment   - A comment associated with the scope (optional). \
    \n \
    \nNotes:         Parameters in angled brackets are required. \
    \n \
    \nExample:       add scope 10.2.2.0 255.255.255.0 MyScope MyComment \
    \n \
    \n               This command adds a new scope for the specified DHCP \
    \n               server with scope address 10.2.2.0, subnet mask \
    \n               255.255.255.0, a scope name of MyScope and a scope \
    \n               comment of MyComment.  \
    \n"

    HLP_SRVR_DELETE_CLASS,                    "\
    delete class                  - Deletes a specific class from the server."

    HLP_SRVR_DELETE_CLASS_EX,                 "\
    \nTo delete a specified class from the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        delete class <Name> \
    \n \
    \nParameters: \
    \n \
    \n        Name           - Name of the user or vendor class to be \
    \n                         deleted.  \
    \n \
    \nNotes:         All parameters in <angle brackets> are required. \
    \n \
    \nExample:       delete class MyClass  \
    \n \
    \n               This command deletes the class named MyClass. \
    \n"

    HLP_SRVR_DELETE_DNSCREDENTIALS               "\
    delete dnscredentials            - Sets the credentials to use for DNS updates"

    HLP_SRVR_DELETE_DNSCREDENTIALS_EX,                "\
    \nTo delete the credentials to use for all DNS updates.\
    \n \
    \nSyntax: \
    \n \
    \n       	delete dnscredentials <DhcpForceFlag> \
    \n \
    \nParameters: \
    \n \
    \n        <DhcpForceFlag>- If this parameter is <DHCPFULLFORCE> the \
    \n                         credentials are deleted, otherwise the operation\
    \n                         is aborted.\
    \n\
    \nNotes:         This command is only available for use with Windows \
    \n               2000 DHCP servers.  \
    \n \
    \n"


    HLP_SRVR_DELETE_HELPER,                   "\
    delete helper                 - Deletes a Helper from under Server." 

    HLP_SRVR_DELETE_HELPER_EX,                "\
    \nUsage   : delete helper <helper-name>\
    \n          helper-name     - Token name (context) of the helper to remove\
    \nPurpose : Removes a helper from under DHCP Server.\n"

    HLP_SRVR_DELETE_MSCOPE,                   "\
    delete mscope                 - Deletes a multicast scope from the Server."

    HLP_SRVR_DELETE_MSCOPE_EX,                "\
    \nTo delete a multicast scope from the DHCP server. \
    \n \
    \nSyntax:  \
    \n \
    \n        	delete mscope <MscopeName> \
    \n \
    \nParameters: \
    \n \
    \n        MscopeName     - Name of the multicast scope to be deleted. \
    \n \
    \nNotes:         All parameters are required. \
    \n \
    \nExample:       delete mscope MyMultiCastScope \
    \n \
    \n               This command deletes the multicast scope \
    \n               MyMultiCastScope (case sensitive) from the DHCP \
    \n               server.  \
    \n"

    HLP_SRVR_DELETE_OPTIONDEF,                "\
    delete optiondef              - Deletes an option from the Server."

    HLP_SRVR_DELETE_OPTIONDEF_EX,             "\
    \nTo delete a defined option type from the DHCP server. \
    \n \
    \nSyntax:  \
    \n \
    \n        	delete optiondef <OptCode> [vendor=VendorName] \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - Unique identifier for the option type to be \
    \n                         deleted.  \
    \n \
    \n        VendorName     - The vendor class name with which the option \
    \n                         type is associated. The vendor= field tag \
    \n                         must be provided. If no class is specified, \
    \n                         the default is assumed to be the non-vendor \
    \n                         specific DHCP Standard Options class. \
    \n \
    \nNotes:         This option is only applicable for DHCP servers running \
    \n               Windows 2000 Server.  \
    \n \
    \nExample:       delete optiondef 18  \
    \n \
    \n               This command deletes an option type with code 18 from \
    \n               the DHCP Standard Options class. \
    \n"

    HLP_SRVR_DELETE_OPTIONVALUE,              "\
    delete optionvalue            - Deletes an option value from the server."

    HLP_SRVR_DELETE_OPTIONVALUE_EX,           "\
    \nTo delete the current value of the specified option type for the DHCP \
    \nserver.  \
    \n \
    \nSyntax:  \
    \n \
    \n        	delete optionvalue <OptCode> [vendor=VendorClass] \
    \n        	[user=UserClass]  \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - ID of the Global option whose value is to be \
    \n                         deleted. \
    \n \
    \n        UserClass      - The user class name with which the option is   \
    \n                         associated. Tag user= must be provided. The \
    \n                         default is the global UserName set by using \
    \n                         Set userclass. Available for Windows 2000 \
    \n                         Server.  \
    \n \
    \n        VendorClass    - The vendor class name with which the option \
    \n                         is associated. Tag vendor= must be \
    \n                         provided. The default is the global \
    \n                         VendorName set by using Set \
    \n                         vendorclass. Available for Windows 2000 \
    \n                         Server.  \
    \n \
    \nNotes:         For parameters, <angle brackets> indicate a required \
    \n               parameter and [braces] an optional parameter. \
    \n \
    \nExample:       delete optionvalue 18  \
    \n \
    \n               This command deletes the current value of the option \
    \n               type with code 18.   \
    \n"

    HLP_SRVR_DELETE_SCOPE,                    "\
    delete scope                  - Deletes a scope from the Server."

    HLP_SRVR_DELETE_SCOPE_EX,                 "\
    \nTo delete a scope from the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        	delete scope <ScopeAddress> <ForceFlag> \
    \n \
    \nParameters: \
    \n \
    \n        ScopeAddress   - Specifies the address of the scope to be \
    \n                         deleted.  \
    \n \
    \n        ForceFlag      - Can be either DHCPNOFORCE or DHCPFULLFORCE \
    \n                         DHCPNOFORCE will only delete the scope if \
    \n                         there are no active clients in the scope. \
    \n \
    \nNotes:         All parameters are required. \
    \n \
    \nExample:       delete scope 10.2.2.0 dhcpfullforce \
    \n \
    \n               This command forces the deletion of the scope 10.2.2.0 \
    \n               from the DHCP server ignoring all warnings. \
    \n"

    HLP_SRVR_DELETE_SUPERSCOPE,               "\
    delete superscope             - Deletes a superscope from the Server."

    HLP_SRVR_DELETE_SUPERSCOPE_EX,            "\
    \nTo delete a superscope from the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        	delete superscope <SuperscopeName> \
    \n \
    \nParameters: \
    \n \
    \n        SuperscopeName - Name of the superscope to be deleted. \
    \n \
    \nNotes:         Superscope for a scope can be set from the scope \
    \n               context using the Set superscope command. \
    \n \
    \nExample:       delete superscope ""My Superscope"" \
    \n \
    \n               This command deletes the superscope named ""My \
    \n               Superscope"" (case sensitive) from the DHCP server. \
    \n"

    HLP_SRVR_REDO_AUTH,                       "\
    initiate auth                 - Initiates retry authorization with the server."

    HLP_SRVR_REDO_AUTH_EX,                    "\
    \nTo initiate authorization for the current DHCP server in Active \
    \nDirectory.  \
    \n \
    \nSyntax:	 \
    \n \
    \n        initiate auth \
    \n \
    \nNotes:         No additional parameters are supported or \
    \n               required.  \
    \n \
    \nExample:       initiate auth \
    \n \
    \n               This command attempts authorization for the current \
    \n               DHCP server in Active Directory.   \
    \n"

    HLP_SRVR_EXPORT,                          "\
    export                        - Exports configuration of the server."

    HLP_SRVR_EXPORT_EX,                       "\
    \nTo export service configuration of the local server to a file. \
    \n \
    \nSyntax:	 \
    \n \
    \n        export <Filename> <ScopeList>  \
    \n \
    \nParameters: \
    \n\
    \n        FileName       - File where the configuration will be stored.\
    \n\
    \n        ScopeList      - List of subnet IP addresses (separated by spaces) \
    \n                         of all the scopes that need to be exported. \
    \n                         If all the scopes need to be exported, the string\
    \n                         ""all"" can be specified.\
    \n
    \nNotes:         This command works only on the local server.\
    \n               The command takes a long time to execute if the \
    \n               service has a large number of scopes or large number of\
    \n               clients, etc.  Also, while the command is in progress,\
    \n               the service is stopped and will not respond to clients.\
    \n \
    \nExample:       export c:\\temp\\dhcpdb all \
    \n \
    \n               This command exports the full service configuration to \
    \n               the file c:\\temp\\dhcpdb.   \
    \n \
    \n               export c:\\temp\\dhcpdb 10.0.0.0 20.0.0.0 \
    \n \
    \n               This command exports the configuration pertaining to \
    \n               scopes 10.0.0.0 and 20.0.0.0 to the file c:\\temp\\dhcpdb.\
    \n"

    HLP_SRVR_IMPORT,                          "\
    import                        - Imports configuraiton of the server."

    HLP_SRVR_IMPORT_EX,                       "\
    \nTo import service configuration from a file. \
    \n \
    \nSyntax:	 \
    \n \
    \n        import <Filename> <ScopeList>  \
    \n \
    \nParameters: \
    \n\
    \n        FileName       - File where the configuration is stored.\
    \n\
    \n        ScopeList      - List of subnet IP addresses (separated by spaces) \
    \n                         of all the scopes that need to be imported. \
    \n                         If all the scopes need to be imported, the string\
    \n                         ""all"" can be specified.\
    \n
    \nNotes:         This command works only on the local server.\
    \n               The command takes a long time to execute if the \
    \n               service has a large number of scopes or large number of\
    \n               clients, etc.  Also, while the command is in progress,\
    \n               the service is stopped and will not respond to clients.\
    \n \
    \nExample:       import c:\\temp\\dhcpdb all \
    \n \
    \n               This command imports  the full configuration from \
    \n               the file c:\\temp\\dhcpdb.   \
    \n \
    \n               import c:\\temp\\dhcpdb 10.0.0.0 20.0.0.0 \
    \n \
    \n               This command imports the configuration pertaining to \
    \n               scopes 10.0.0.0 and 20.0.0.0 from the file c:\\temp\\dhcpdb.\
    \n"

    HLP_SRVR_INITIATE_RECONCILE,              "\
    initiate reconcile            - Checks and reconciles the database for all\
    \n                                scopes under the server."

    HLP_SRVR_INITIATE_RECONCILE_EX,           "\
    \nTo initiate reconciliation for all scopes defined at the current DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        initiate reconcile [fix] \
    \n \
    \nParameters: \
    \n \
    \n        fix            - Fixes, if possible, any inconsistencies found \
    \n                         in the database.  \
    \n \
    \nExample:       initiate reconcile \
    \n               initiate reconcile fix \
    \n \
    \n               The first command verifies the scopes and checks for \
    \n               any inconsistencies.  In addition, the second command \
    \n               will fix any inconsistencies that are found.  \
    \n"


    HLP_SRVR_SET_BACKUPINTERVAL,              "\
    set databasebackupinterval    - Sets the database backup interval of the\
    \n                                current server."

    HLP_SRVR_SET_BACKUPINTERVAL_EX,           "\
    \nTo set the database backup interval for the current DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        	set databasebackupinterval <NewInterval> \
    \n \
    \nParameters: \
    \n \
    \n        NewInterval    - The new backup interval specified in \
    \n                         minutes.  \
    \n \
    \nExample:       set databasebackupinterval 1440 \
    \n \
    \n               This command sets the database backup interval for the\
    \n               DHCP server to 1440 minutes (every 24 hours). \
    \n"
    
    HLP_SRVR_SET_BACKUPPATH,                  "\
    set databasebackuppath        - Sets the database backup path for the Server."

    HLP_SRVR_SET_BACKUPPATH_EX,               "\
    \nTo set the database backup path for the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        	set databasebackuppath <NewBackupPath> \
    \n \
    \nParameters: \
    \n \
    \n        NewBackupPath  - The modified path for the DHCP server to use \
    \n                         when storing database backups. \
    \n \
    \nExample:       set databasebackuppath c:\\winnt\\dhcp\\backup \
    \n \
    \n               This command sets path to c:\\winnnt\\dhcp\\backup for the \
    \n               DHCP server to use when backing up the server \
    \n               database.  \
    \n"

    HLP_SRVR_SET_DATABASECLEANUPINTERVAL      "\
    set databasecleanupinterval   - Sets the database clean up interval."

    HLP_SRVR_SET_DATABASECLEANUPINTERVAL_EX   "\
    \nTo set the database clean up interval to a new value. \
    \n \
    \nSyntax: \
    \n \
    \n        	set databasecleanupinterval <NewInterval> \
    \n \
    \nParameters: \
    \n \
    \n        NewInterval    - The new time interval in minutes to use for \
    \n                         database cleanup.  \
    \n \
    \nExample:       set databasecleanupinterval 10080 \
    \n \
    \n               This command sets the database cleanup interval to \
    \n               10080 minutes (every 7 days).  \
    \n"

    HLP_SRVR_SET_DATABASELOGGINGFLAG,         "\
    set databaseloggingflag       - Sets/resets the database logging flag."

    HLP_SRVR_SET_DATABASELOGGINGFLAG_EX,      "\
    \nTo set or reset the database logging flag. \
    \n \
    \nSyntax: \
    \n \
    \n       	set databaseloggingflag <NewFlag> \
    \n \
    \nParameters: \
    \n \
    \n        NewFlag        - 1-sets the flag, 0-resets the flag \
    \n                         (default).  \
    \n \
    \nExample:       set databaseloggingflag 0 \
    \n \
    \n               This command resets the database logging flag for the \
    \n               DHCP server.  \
    \n"

    HLP_SRVR_SET_DATABASENAME,                "\
    set databasename              - Sets the name of the server database file."

    HLP_SRVR_SET_DATABASENAME_EX,             "\
    \nTo set the name of the DHCP server database file. \
    \n \
    \nSyntax: \
    \n \
    \n        set databasename <NewFileName> \
    \n \
    \nParameters: \
    \n \
    \n        NewFileName    - The new name of the DHCP server database \
    \n                         file.  \
    \n \
    \nNotes:         You need to stop and restart the DHCP Server service in \
    \n               order for this change to take effect. \
    \n \
    \nExample:       set databasename newdatabase.mdb \
    \n \
    \n               This command sets the DHCP server database file name to \
    \n               newdatabase.mdb.  \
    \n"

    HLP_SRVR_SET_DATABASEPATH,                "\
    set databasepath              - Sets the path of the server database file."
    
    HLP_SRVR_SET_DATABASEPATH_EX,             "\
    \nTo set a new or modified path of the DHCP server database file. \
    \n \
    \nSyntax: \
    \n \
    \n        set databasepath <NewPath> \
    \n \
    \nParameters: \
    \n \
    \n        NewPath        - The new path of the database file for the \
    \n                         DHCP server.  \
    \n \
    \nNotes:         You need to stop and restart the DHCP Server service in \
    \n               order for this change to take effect. \
    \n \
    \nExample:       set databasepath c:\\winnt\\dhcp \
    \n \
    \n               This command sets the path of the database file to \
    \n               c:\\winnt\\dhcp for the current DHCP server. \
    \n"

    HLP_SRVR_SET_DATABASERESTOREFLAG,         "\
    set databaserestoreflag       - Sets/Resets the database restore flag."

    HLP_SRVR_SET_DATABASERESTOREFLAG_EX,      "\
    \nTo set or reset the database restore flag. \
    \n \
    \nSyntax: \
    \n \
    \n        set databaserestoreflag <NewFlag> \
    \n \
    \nParameters: \
    \n \
    \n        NewFlag        - 1-sets the flag, 0 resets the flag \
    \n                         (default).  \
    \n \
    \nExample:       set databaserestoreflag 1 \
    \n \
    \n               This command sets the database restore flag for the \
    \n               DHCP server.   \
    \n"

    HLP_SRVR_SET_OPTIONVALUE,                 "\
    set optionvalue               - Sets the global option value for the Server."

    HLP_SRVR_SET_OPTIONVALUE_EX,              "\
    \nTo set a default value for a specified option type at the DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        set optionvalue <OptCode> <DataType> [user=UserName]  \
    \n        [vendor= VendorName] <OptValue> \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - Unique code for the defined option type for \
    \n                         which a value is to be set. \
    \n \
    \n        DataType       - The data type of the defined option \
    \n                         type. Should be of the following:  \
    \n                         BYTE | WORD | DWORD | STRING | IPADDRESS \
    \n \
    \n        UserName       - Sets the applicable user class name that this \
    \n                         command will apply towards. If not specified, \
    \n                         the Default User Class is assumed. Applicable \
    \n                         only for Windows 2000 DHCP Servers. Otherwise \
    \n                         ignored.\
    \n \
    \n        VendorName     - Sets the applicable vendor class name that \
    \n                         this command will apply towards. If not \
    \n                         specified, the DHCP Standard Options class is \
    \n                         assumed. Applicable only for Windows 2000 DHCP \
    \n                         Servers. Otherwise ignored.\
    \n \
    \n        OptValue       - The new server default value for the option \
    \n                         type identified by OptCode. The value must be \
    \n                         of the associated data type.  \
    \n \
    \nNotes:         For OptValue, if BYTE is the data type, the value \
    \n               should be stated as hexadecimal. The UserName and \
    \n               VendorName are only available for Windows 2000 DHCP \
    \n               servers. servers used, and if used, the field tags for \
    \n               each are required.  \
    \n \
    \nExample:       set optionvalue 003 IPADDRESS 1.1.1.1 1.1.1.2 1.1.1.3 \
    \n               set optionvalue 003 IPADDRESS vendor=Vendor1 10.1.1.1 10.1.1.2 10.1.1.3 \
    \n \
    \n               The first command sets the value of the option with \
    \n               code 3(Router) and of data type IPADDRESS to the values \
    \n               given (10.1.1.1, 10.1.1.2, 10.1.1.3) for the current \
    \n               scope. The second command performs similar results for \
    \n               the vendor class Vendor1. For this example, Vendor1 \
    \n               class must already be defined with the specified option \
    \n               type (code 003) using the same data type IPADDRESS to \
    \n               the optional values provided. \
    \n"

    HLP_SRVR_SET_SERVER,                      "\
    set server                    - Sets the current server in the Server mode."

    HLP_SRVR_SET_SERVER_EX,                   "\
    \nTo switch the current server at the DHCP server command context  \
    \n \
    \nSyntax: \
    \n \
    \n        set server [ServerIP | \\\\ServerDNS] \
    \n \
    \nParameters: \
    \n \
    \n        ServerIP       - The IP address of the DHCP server. \
    \n \
    \n        ServerDNS      - The DNS name of the DHCP server. \
    \n \
    \nNotes:         When this command is used, all subsequent command \
    \n               operations are performed on this server, until this \
    \n               command is repeated. If no IP address or DNS name is \
    \n               stated, the local computer is assumed.  \
    \n \
    \nExample:       set server 10.1.1.1 \
    \n \
    \n               This command switches the DHCP server command context \
    \n               to have subsequent commands applied towards the server \
    \n               at IP address 10.1.1.1  \
    \n"
    
    HLP_SRVR_SET_USERCLASS,                     "\
    set userclass                 - Sets the global user class name for \
    \n                                subsequent operation."

    HLP_SRVR_SET_USERCLASS_EX,                  "\
    \nTo set the current user class for subsequent command operations. \
    \n \
    \nSyntax: \
    \n \
    \n        	set userclass [UserClass] \
    \n \
    \nParameters: \
    \n \
    \n        UserClass      - The name of the specified user class for the \
    \n                         current server.  \
    \n \
    \nNotes:         This command is only available for use with Windows \
    \n               2000 DHCP servers.  \
    \n \
    \nExamples:      set userclass MyUserClass \
    \n               set userclass \
    \n \
    \n               The first command example sets the user class name to \
    \n               MyUserClass for subsequent command operations. The \
    \n               second example resets the current user class to the \
    \n               Default User Class.  \
    \n"

    HLP_SRVR_SET_VENDORCLASS                    "\
    set vendorclass               - Sets the global vendor class name for \
    \n                                subsequent operation."

    HLP_SRVR_SET_VENDORCLASS_EX,                "\
    \nTo set the global vendor class name for subsequent operation use. \
    \n \
    \nSyntax: \
    \n \
    \n       	set vendorclass [VendorClass] \
    \n \
    \nParameters: \
    \n \
    \n        VendorClass    - The name of the specified vendor class for \
    \n                         the current server.  \
    \n \
    \nNotes:         This command is only available for use with Windows \
    \n               2000 DHCP servers.  \
    \n \
    \nExamples:      set vendorclass MyVendorClass \
    \n               set vendorclass \
    \n \
    \n               The first command example sets the vendor class name to \
    \n               MyVendorClass for subsequent command operations. The \
    \n               second example resets the current vendor class to the \
    \n               default class, DHCP Standard Options.  \
    \n"


    HLP_SRVR_SET_DNSCREDENTIALS               "\
    set dnscredentials            - Sets the credentials to use for DNS updates"

    HLP_SRVR_SET_DNSCREDENTIALS_EX,                "\
    \nTo set the credentials to use for all DNS updates.\
    \n \
    \nSyntax: \
    \n \
    \n       	set dnscredentials UserName Domain Password \
    \n \
    \nParameters: \
    \n \
    \n        UserName       - The username that will be used for DNS updates\
    \n\
    \n        Domain         - The domain the username above belogs to.\
    \n\
    \n        Password       - The password to use for the above username.\
    \n \
    \nNotes:         This command is only available for use with Windows \
    \n               2000 DHCP servers.  \
    \n \
    \nExamples:      set dnscredentials MyUserName MyDomain MyPassWord \
    \n               set dnscredentials MyUserName MyDomain *\
    \n \
    \n               The first command example sets the DNS credentials to \
    \n               the values specified.  The second example does the same \
    \n               but the password would be queried (for security). \
    \n"

    HLP_SRVR_SET_DETECTCONFLICTRETRY,           "\
    set detectconflictretry       - Sets the number of conflict detection attempts\
    \n                                by the DHCP server."

    HLP_SRVR_SET_DETECTCONFLICTRETRY_EX,        "\
    \nTo set the number of conflict detection attempts made by the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        set detectconflictretry <RetryNumber> \
    \n \
    \nParameters: \
    \n \
    \n        RetryNumber    - The number of conflict detection attempts to \
    \n                         be used by the DHCP server for a scope IP \
    \n                         address before it leases the address to a \
    \n                         client.  \
    \nNotes : Maximum value for RetryNumber is 5. All values greater than 5 \
    \n        will default down to 5. \
    \n \
    \nExample:       set detectconflictretry 4 \
    \n \
    \n               This command sets the use of conflict detection for the \
    \n               DHCP server to make four attempts to detect if a there \
    \n               is a conflict for the IP address before it is used in a \
    \n               new address lease.  \
    \n"

    HLP_SRVR_SET_DNSCONFIG,                     "\
    set dnsconfig                 - Sets the Dynamic DNS configuration for the Server."

    HLP_SRVR_SET_DNSCONFIG_EX,                  "\
    \nTo set the dynamic DNS update properties for use by the current DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        set dnsconfig <Enable(0|1> [Update(0|1)] [Lookup(0|1)] [NonDyn(0|1)] \
    \n \
    \nParameters: \
    \n \
    \n        Enable         - 0=Disable dynamic updates of DNS client \
    \n                         information.  \
    \n                         1=Enable dynamic updates of DNS client \
    \n                         information.  \
    \n \
    \n        Update         - Forward and Reverse name lookup can be \
    \n                         updated when a client acquires a lease.  \
    \n                         0=Update according to client request.  \
    \n                         1=Always update forward and reverse lookups. \
    \n \
    \n        Lookup         - Discard forward lookups for clients when \
    \n                         lease expires.  \
    \n                         0=Disable these lookups, 1=Enable these \
    \n                         lookups.  \
    \n \
    \n        NonDyn         - Update DNS information for clients that do \
    \n                         not support dynamic updates.  \
    \n                         0=Disable these updates,  \
    \n                         1=Enable these updates. \
    \n \
    \nNotes:         This feature is only supported for Windows 2000 DHCP \
    \n               servers. When dynamic updates are enabled, the DNS \
    \n               server used by the DHCP server to submit updates is \
    \n               based on DNS servers configured for TCP/IP client \
    \n               properties for network connections.  \
    \n  \
    \n \
    \nExample:       set dnsconfig 1 1 0 1 \
    \n \
    \n               This command enables dynamic update of DNS information \
    \n               by the DHCP server and configures updates to always be \
    \n               made for both forward and reverse lookups. In addition, \
    \n               the option to discard forward lookups when leases expire \
    \n               is disabled and updates for non-dynamic clients are \
    \n               enabled.   \
    \n"
                
    HLP_SRVR_SET_AUDITLOG,                     "\
    set auditlog                  - Sets the audit log parameters for the server."
    
    HLP_SRVR_SET_AUDITLOG_EX,                  "\
    \nTo set audit logging parameters for the current DHCP server. \
    \n \
    \nSyntax:  \
    \n \
    \n       	set auditlog <NewAuditPath> \
    \n \
    \nParameters: \
    \n \
    \n        NewAuditPath   - The modified path for the DHCP server to use \
    \n                         when storing audit log files. The directory \
    \n                         name needs to be valid and existing one. \
    \n \
    \nNotes:         You need to stop and restart the DHCP Server Service in \
    \n               order for this change to take effect. \
    \n \
    \nExample:       set auditlog c:\\logpath \
    \n"

    HLP_SRVR_SHOW_ALL,                        "\
    show all                      - Displays all information for the Server."

    HLP_SRVR_SHOW_ALL_EX,                     "\
    \nTo display all stored and configured information for the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show all \
    \n \
    \nNotes:         No additional parameters are required. When used, this \
    \n               command includes all current server status and \
    \n               configuration details, including stored Management \
    \n               Information Base (MIB) information for the current DHCP \
    \n               server.  \
    \n"


    HLP_SRVR_SHOW_BINDINGS,                   "\
    show bindings                 - Displays Binding information for the server."

    HLP_SRVR_SHOW_BINDINGS_EX,                "\
    \nTo display service bindings information for the current DHCP server.  \
    \n \
    \nSyntax: \
    \n \
    \n        show bindings \
    \n \
    \nNotes:         No additional parameters are required. If used, this \
    \n               command displays current bindings information for the \
    \n               current DHCP server, indicating which of the \
    \n               server's active network connections configured with \
    \n               static IP addresses are enabled/disabled for use in \
    \n               servicing DHCP clients on your network. For network \
    \n               connections that obtain their IP address configuration       \
    \n               dynamically, the DHCP Server service automatically \
    \n               disables those connections from service bindings by \
    \n               default.  \
    \n"

    HLP_SRVR_SHOW_CLASS,                      "\
    show class                    - Displays all available classes for the Server."

    HLP_SRVR_SHOW_CLASS_EX,                   "\
    \nTo enumerate and display all available classes for the current DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        show class \
    \n \
    \nNotes:         No additional parameters are required. When used, This \
    \n               command enumerates and displays all available classes \
    \n               for the current DHCP server. This includes both user \
    \n               and vendor class information.  \
    \n"

    HLP_SRVR_SHOW_HELPER,                     "\
    show helper                   - Displays all the helpers under DHCP Server."

    HLP_SRVR_SHOW_HELPER_EX,                  "\
    \nUsage   : show helper\
    \nPurpose : To display all the helpers under DHCP Server.\n"

    HLP_SRVR_SHOW_MIBINFO,                    "\
    show mibinfo                  - Displays MIBInfo for the Server."

    HLP_SRVR_SHOW_MIBINFO_EX,                   "\
    \nTo display Management Information Base (MIB) information for the \
    \ncurrent DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show mibinfo \
    \n \
    \nNotes:         No additional parameters are required. If used, This \
    \n               command displays the Management Information Base (MIB) \
    \n               information for the current DHCP server.  \
    \n"

    HLP_SRVR_SHOW_MSCOPE,                       "\
    show mscope                   - Displays all multicast scopes for the Server."

    HLP_SRVR_SHOW_MSCOPE_EX,                    "\
    \nTo enumerate and display all multicast scopes for the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show mscope  \
    \n \
    \nNotes:         No additional parameters are required. If used, This \
    \n               command displays all multicast scopes defined for the \
    \n               current DHCP server.  \
    \n"

    HLP_SRVR_SHOW_OPTIONDEF,                    "\
    show optiondef                - Displays all options for the Server."

    HLP_SRVR_SHOW_OPTIONDEF_EX,                 "\
    \nTo enumerate and display all available option types for the DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n       	show optiondef [all | vendor=VendorName] \
    \n \
    \nParameters: \
    \n \
    \n        all            - Display all option types defined and \
    \n                         available for use at the DHCP server, \
    \n                         including those for both user and vendor \
    \n                         classes.  \
    \n \
    \n        VendorName     - Displays the option types for the specified \
    \n                         vendor class. Applicable only for Windows \
    \n                         2000 DHCP Servers. Otherwise ignored.\
    \n \
    \nNotes:         For VendorName, the default is the current default \
    \n               vendor class set for the DHCP server,  which can be \
    \n               set/reset using the Set vendorclass command.  \
    \n \
    \nExample:       show optiondef \
    \n               show optiondef vendor=""Microsoft Windows 2000 Options"" \
    \n \
    \n               The first command example enumerates and displays all \
    \n               option types for the current vendor class. In most \
    \n               cases, the default (none) displays all option types \
    \n               included in the default vendor class, DHCP Standard \
    \n               Options. In the second command example, the option \
    \n               types are shown that are available for use with the \
    \n               specified class, Microsoft Windows 2000 Options.  \
    \n"

    HLP_SRVR_SHOW_OPTIONVALUE,                  "\
    show optionvalue              - Displays all optionvalues that are set for the \
    \n                                server."

    HLP_SRVR_SHOW_OPTIONVALUE_EX,               "\
    \nTo enumerate and display all default values set option types defined \
    \nat the current DHCP server.  \
    \n \
    \nSyntax: \
    \n \
    \n        show optionvalue [all] \
    \n        -or- \
    \n        show optionvalue [user=UserName | vendor=VendorName] \
    \n \
    \nParameters: \
    \n \
    \n        all            - To display all default option values set for \
    \n                         option types used at the server, including \
    \n                         those for both user and vendor classes.  \
    \n \
    \n        UserName       - To display the default values set for option \
    \n                         types available for use with the currently \
    \n                         set user class at the server. Applicable only\
    \n                         for Windows 2000 DHCP Servers. Otherwise ignored.\
    \n \
    \n        VendorName     - To display the default values set for option \
    \n                         types available for use with the currently \
    \n                         set vendor class at the server.  Applicable only \
    \n                         for Windows 2000 DHCP Servers. Otherwise ignored.\
    \n \
    \nNotes:         For either the UserName or VendorName parameters to be \
    \n               used, the respective tags (user= or vendor=) must be \
    \n               included for precise usage. Otherwise, the assumed \
    \n               default is the current user class set by using Set \
    \n               userclass. \
    \n \
    \nExample:       show optionvalue \
    \n \
    \n               This command enumerates and displays the option types \
    \n               that have values set at the current DHCP server.  \
    \n"

    HLP_SRVR_SHOW_SCOPE,                        "\
    show scope                    - Displays all available scopes under the Server."

    HLP_SRVR_SHOW_SCOPE_EX,                     "\
    \nTo enumerate and display all of the configured scopes for the current \
    \nDHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show scope \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"

    HLP_SRVR_SHOW_SERVER,                       "\
    show server                   - Displays the current Server."

    HLP_SRVR_SHOW_SERVER_EX,                    "\
    \nDisplays information for the currently selected server where DHCP \
    \ncommands are applied. \
    \n \
    \nSyntax: \
    \n \
    \n        show server \
    \n \
    \nNotes:         This command displays the name and IP address of the \
    \n               current DHCP server on which all the operations are \
    \n               being performed.  \
    \n"

    HLP_SRVR_SHOW_SERVERCONFIG,                 "\
    show dbproperties             - Displays server database configuration\
    \n                                information."

    HLP_SRVR_SHOW_SERVERCONFIG_EX,              "\
    \nTo display server database configuration information for the current \
    \nDHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show dbproperties \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"

    HLP_SRVR_SHOW_SERVERSTATUS,                 "\
    show serverstatus             - Displays the current status for the Server."

    HLP_SRVR_SHOW_SERVERSTATUS_EX,              "\
    \nTo display the status for the current DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show serverstatus \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"
   
    HLP_SRVR_SHOW_USERCLASS,                    "\
    show userclass                - Displays the currently set user class name."

    HLP_SRVR_SHOW_USERCLASS_EX,                 "\
    \nTo display the currently set user class name. \
    \n \
    \nSyntax: \
    \n \
    \n        show userclass \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"

    HLP_SRVR_SHOW_VENDORCLASS,                  "\
    show vendorclass              - Displays the currently set vendor class name."

    HLP_SRVR_SHOW_VENDORCLASS_EX,               "\
    \nTo display the currently set vendor class name. \
    \n \
    \nSyntax: \
    \n \
    \n        show vendorclass \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"


    HLP_SRVR_SHOW_DNSCREDENTIALS,                  "\
    show dnscredentials           - Displays the currently set DNS credentials."

    HLP_SRVR_SHOW_DNSCREDENTIALS_EX,               "\
    \nTo display the currently set DNS credentials. \
    \n \
    \nSyntax: \
    \n \
    \n        show dnscredentials \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"

    HLP_SRVR_SHOW_VERSION,                      "\
    show version                  - Displays the current version of the Server."

    HLP_SRVR_SHOW_VERSION_EX,                   "\
    \nTo display the current version of the DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show version \
    \n \
    \nNotes:         No additional parameters are required. \
    \n"

    HLP_SRVR_SHOW_DETECTCONFLICTRETRY,          "\
    show detectconflictretry      - Displays the detect conflict retry settings."

    HLP_SRVR_SHOW_DETECTCONFLICTRETRY_EX,       "\
    \nTo display the current conflict detection attempts for the DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        show detectconflictretry \
    \n \
    \nNotes:         The current number of ping retries that are used for \
    \n               attempting to detect address conflicts for scope IP \
    \n               addresses distributed by the server is displayed. No \
    \n               additional parameters are required.  \
    \n"

    HLP_SRVR_SHOW_DNSCONFIG,                    "\
    show dnsconfig                - Displays the dynamic DNS configuration for the\
    \n                                server."

    HLP_SRVR_SHOW_DNSCONFIG_EX,                 "\
    \nTo display the current dynamic DNS properties for use by the DHCP \
    \nserver.  \
    \n \
    \nSyntax: \
    \n \
    \n        show dnsconfig \
    \n \
    \nNotes:         This command displays current DNS update settings for \
    \n               the DHCP server. If DNS configuration has not been \
    \n               enabled or set previously, you might need to use either \
    \n               the DNS console or the Set dnsconfig command to \
    \n               configure these settings.  \
    \n"

    HLP_SRVR_SHOW_AUDITLOG,                     "\
    show auditlog                 - Displays the Audit log settings for the server."

    HLP_SRVR_SHOW_AUDITLOG_EX,                  "\
    \nTo display audit logging parameters for the current DHCP server. \
    \n \
    \nSyntax: \
    \n \
    \n        show auditlog  \
    \n \
    \nNotes :        This command displays the auditlog path. \
    \n"

    HLP_SRVR_PROMPT_PASSWORD, "\
    \nEnter the password: "
    
    DMP_DHCP_SCRIPTHEADER,                       "\
    \n                                            \
    \n# ========================================= \
    \n# DHCP Configuration                        \
    \n# ========================================= \
    \npushd dhcp                                  \
    \n                                            \
    \n                                            \
    \n"

    DMP_DHCP_SCRIPTFOOTER,                       "\
    \n                                            \
    \npopd                                        \
    \n# End of DHCP configuration.                \
    \n                                            \
    \n                                            \
    \n"

    DMP_SRVR_ADD_CLASS,                     "\
    \nDhcp Server %1!s! Add Class ""%2!s!"" %3!s! %4!s! %5!s! b"

    DMP_SRVR_ADD_HELPER,                    "\
    \nAdd Helper = %1!s! "

    DMP_SRVR_ADD_MSCOPE,                    "\
    \nDhcp Server %1!s! Add MScope %2!s! %3!s! %4!d!"

    DMP_SRVR_ADD_OPTIONDEF,                 "\
    \nDhcp Server %1!s! Add Optiondef %2!d! %3!s! %4!s! %5!s! comment=%7!s! %6!s!"

    DMP_SRVR_ADD_OPTIONDEF_NONE,            "\
    \nDhcp Server %1!s! Add Optiondef %2!d! %3!s! %4!s! %5!s! comment=%6!s!"

    DMP_SRVR_ADD_OPTIONDEF_VENDOR,          "\
    \nDhcp Server %1!s! Add Optiondef %2!d! %3!s! %4!s! %5!s! vendor=%7!s! comment=%8!s! %6!s!" 

    DMP_SRVR_ADD_OPTIONDEF_VENDOR_NONE,     "\
    \nDhcp Server %1!s! Add Optiondef %2!d! %3!s! %4!s! %5!s! vendor=%6!s! comment=%7!s! "
    
    DMP_SRVR_ADD_SCOPE,                     "\
    \nDhcp Server %1!s! add scope %2!s! %3!s! %4!s! %5!s!"

    DMP_SRVR_ADD_SUPER_SCOPE,               "\
    \nDhcp Server %1!s! scope %2!s! set superscope %3!s! %4!d!"
    
    DMP_SRVR_DELETE_CLASS,                  "\
    \nDelete class = %1!s! from the DHCP Server = %2!s! "

    DMP_SRVR_DELETE_HELPER,                 "\
    \nDelete Helper = %1!s! \n"

    DMP_SRVR_DELETE_MSCOPE,                 "\
    \nDelete Multicast Scope = %1!s! with scope ID = %2!s! from the DHCP Server = %3!s!"

    DMP_SRVR_DELETE_OPTIONDEF,              "\
    \nDelete the option = %1!d! from the DHCP Server = %1!s!"

    DMP_SRVR_DELETE_OPTIONVALUE,            "\
    \nDelete the option value for ID = %1!d! for the DHCP Server = %1!s!"

    DMP_SRVR_DELETE_SCOPE,                  "\
    \nDelete the scope = %1!s! with force flag %2!s! from the DHCP Server = %1!s!"

    DMP_SRVR_DELETE_SUPERSCOPE,             "\
    \nDelete the Superscope %1!s! from the DHCP Server = %2!s! "

    DMP_SRVR_REDO_AUTH,                     "\
    \nRedo authorization for the DHCP Server = %1!s! "

    DMP_SRVR_SET_BACKUPINTERVAL,            "\
    \nDhcp Server %1!s! Set DatabaseBackupInterval %2!d!"

    DMP_SRVR_SET_BACKUPPATH,                "\
    \nDhcp Server %1!s! Set DatabaseBackupPath ""%2!s!"""

    DMP_SRVR_SET_DATABASECLEANUPINTERVAL,   "\
    \nDhcp Server %1!s! Set DatabaseCleanupInterval %2!d!"

    DMP_SRVR_SET_DATABASELOGGINGFLAG,       "\
    \nDhcp Server %1!s! Set DatabaseLoggingFlag %2!d!"

    DMP_SRVR_SET_DATABASENAME,              "\
    \nDhcp Server %1!s! Set DatabaseName ""%2!s!"""

    DMP_SRVR_SET_DATABASEPATH,              "\
    \nDhcp Server %1!s! Set DatabasePath ""%2!s!"""

    DMP_SRVR_SET_DATABASERESTOREFLAG,       "\
    \nDhcp Server %1!s! Set DatabaseRestoreFlag %2!d!"

    DMP_SRVR_SET_AUDITLOG,                  "\
    \nDhcp Server %1!s! Set AuditLog ""%2!s!"""

    DMP_SRVR_SET_DETECTCONFLICTRETRY,       "\
    \nDhcp Server %1!s! Set DetectConflictRetry %2!d!"

    DMP_SRVR_SET_DNSCONFIG,                 "\
    \nDhcp Server %1!s! Set DnsConfig %2!d! %3!d! %4!d! %5!d!"    

    DMP_SRVR_SET_OPTIONVALUE,               "\
    \nDhcp Server %1!s! set optionvalue %2!d! %3!s! %4!s!"

    DMP_SRVR_SET_OPTIONVALUE_CLASS,         "\
    \nDhcp Server %1!s! set optionvalue %2!d! %3!s! user=%4!s! vendor=%5!s! %6!s!"

    DMP_SRVR_SET_OPTIONVALUE_USER,          "\
    \nDhcp Server %1!s! set optionvalue %2!d! %3!s! user=%4!s! %5!s!"

    DMP_SRVR_SET_OPTIONVALUE_VENDOR,        "\
    \nDhcp Server %1!s! set optionvalue %2!d! %3!s! vendor=%4!s! %5!s!"

    DMP_SRVR_SET_CLASSNAME,                 "\
    \nSet the current class to %1!s! for the DHCP Server %2!s!"

    DMP_SRVR_SET_VENDORNAME,                "\
    \nSet the current vendor to %1!s! for the DHCP Server %2!s!"

    DMP_SRVR_SHOW_ALL,                      "\
    \nShow all server information for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_CLASS,                    "\
    \nShow all the classes for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_HELPER,                   "\
    \nShow all the helper for the context Server"

    DMP_SRVR_SHOW_MIBINFO,                  "\
    \nShow MIBInfo for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_MSCOPE,                   "\
    \nShow all the Multicast Scope for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_OPTIONDEF,                "\
    \Show all the Options for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_OPTIONVALUE,              "\
    \Show all the option values for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_SCOPE,                    "\
    \nShow all the Scopes for the DHCP Server %1!s! "
    
    DMP_SRVR_SHOW_SERVER,                   "\
    \nShow the current DHCP Server %1!s! "

    DMP_SRVR_SHOW_SERVERCONFIG,             "\
    \nShow all the Server configuration information for the DHCP Server %1!s!"

    DMP_SRVR_SHOW_SERVERSTATUS,             "\
    \nShow the current status of the DHCP Server %1!s! "

    DMP_SRVR_SHOW_CLASSNAME,                "\
    \nShow the current class for the DHCP Server %1!s! "

    DMP_SRVR_SHOW_VENDORNAME,               "\
    \nShow the current vendor for the DHCP Server %1!s! "
 
    EMSG_SRVR_ERROR_SUCCESS,                "\
    \nCommand completed successfully.\n"

    EMSG_SRVR_INCOMPLETE_COMMAND,           "\
    The command is incomplete. The possible completions are:\n\n"
    
    EMSG_SRVR_UNABLE_TO_CREATE_FILE,        "\
    Unable to create file %1!s!. Error %1!d!\n"

    EMSG_DHCP_NO_OPTION_VALUE,              "\
    \nNo option value to display.\n"

	  	
    MSG_SRVR_COMPUTER_NAME,                 "\n\
    \nThe current server is %1!s! with Ip Address = %2!s!\n"

    MSG_SRVR_CLASS_INFO_ARRAY,              "\
    \nNo of classes : %1!d! \n"
    
    MSG_SRVR_CLASS_INFO,                    "\
    \nClass [%1!s!]: \ncomment= %2!s! \nFlags: 0x%3!x! \nIsvendor= FALSE"

    MSG_SRVR_CLASS_INFO_VENDOR,              "\
    \nClass [%1!s!]: \ncomment= %2!s! \nFlags: 0x%3!x! \nIsvendor= TRUE"
    
    MSG_SRVR_CLASS_DATA,                    "\nClassData: "
    
    MSG_SRVR_CLASS_DATA_FORMAT,             "%1!.02x!"

    

    MSG_SRVR_OPTION,                        "\n\tOption Value: "

    MSG_SRVR_OPTION_INFO,                   "\n\tOption Info : "

    MSG_SRVR_OPTION_ID,                     "\n\tOptionId : %1!d! "

    MSG_SRVR_OPTION_NAME,                   "\n\tOption Name : %1!s!"

    MSG_SRVR_OPTION_COMMENT,                "\n\tOption Comment : %1!s!"

    MSG_SRVR_OPTION_TYPE1,                  "\nOptionType : %1!d! \n"

    MSG_SRVR_OPTION_COUNT,                  "\n\t\tNumber of Option Elements = %1!d!"

    MSG_SRVR_OPTION_TYPE,                   "\n\t\tOption Element Type = %1!s!"

    MSG_SRVR_OPTION_TYPE_BYTE,              "BYTE"

    MSG_SRVR_OPTION_TYPE_WORD,              "WORD"

    MSG_SRVR_OPTION_TYPE_DWORD,             "DWORD"

    MSG_SRVR_OPTION_TYPE_DWORDDWORD,        "DWORDDWORD"

    MSG_SRVR_OPTION_TYPE_IPADDRESS,         "IPADDRESS"

    MSG_SRVR_OPTION_TYPE_STRINGDATA,        "STRING"    

    MSG_SRVR_OPTION_TYPE_BINARYDATA,        "BINARY"

    MSG_SRVR_OPTION_TYPE_ENCAPSULATEDDATA,  "ENCAPSULATED"

    MSG_SRVR_OPTION_TYPE_UNKNOWN,           "UNKNOWN"

    MSG_SRVR_OPTION_VALUE,                  "\n\t\tOption Element Value = "

    MSG_SRVR_OPTION_VALUE_NUM,              "%1!d!"

    MSG_SRVR_OPTION_VALUE_LONGNUM           "%l!d!, %2!d!"

    MSG_SRVR_OPTION_VALUE_STRING,           "%1!s!"
    
    MSG_SRVR_OPTION_VALUE_BINARY,           "%1!02x!"
    
    MSG_SRVR_OPTION_READ,                   "\n\tOptionsRead = %1!d!.\n"

    MSG_SRVR_OPTION_TOTAL,                  "\n\tOptionsTotal = %1!d!.\n"

    MSG_SRVR_OPTIONS,                       "\n\
        \tOptions\n\
        \t======="

    MSG_SRVR_OPTION_PROPS,                  "\n\
        \tFlags = 0x%1!x!, NumValues = %2!d!\n"

    MSG_SRVR_CLASS_VENDOR,                  "\tFor vendor class [%1!s!]:"

    MSG_SRVR_CLASS_USER,                    "\tFor user class [%1!s!]:"

    MSG_SRVR_STANDARD_OPTION,               "\tDHCP Standard Option :"

    MSG_SRVR_CLASS_NONE,                    "\tGeneral Option Values:"

    MSG_SRVR_OPTION_NONVENDOR,              "\
    \nOptions [Non Vendor specific]:"

    MSG_SRVR_OPTION_VENDOR,                 "\
    \n\nOptions[vendor= %1!s!]"

    MSG_SRVR_UNKNOWN_FORCEFLAG,             "\
    \nUnknown force flag value: %1!s! (expecting DhcpFullForce or DhcpNoForce)\n"


    MSG_SRVR_MIB,                           "\nMIBCounts:"

    MSG_SRVR_MIB_DISCOVERS,                 "\n\tDiscovers = %1!d!."
    
    MSG_SRVR_MIB_OFFERS,                    "\n\tOffers = %1!d!."

    MSG_SRVR_MIB_REQUESTS,                  "\n\tRequests = %1!d!."

    MSG_SRVR_MIB_RENEWS  ,                  "\n\tRenews = %1!d!."

    MSG_SRVR_MIB_ACKS,                      "\n\tAcks = %1!d!."

    MSG_SRVR_MIB_NAKS,                      "\n\tNaks = %1!d!."

    MSG_SRVR_MIB_DECLINES,                  "\n\tDeclines = %1!d!."

    MSG_SRVR_MIB_RELEASES,                  "\n\tReleases = %1!d!."

    MSG_SRVR_MIB_SERVERSTARTTIME,           "\n\
    \tServerStartTime = %1!s! "

    MSG_SRVR_MIB_SCOPES,                    "\n\tScopes = %1!d!."

    MSG_SRVR_MIB_SCOPES_SUBNET,             "\n\tSubnet = %1!s!."


    MSG_SRVR_MIB_SCOPES_SUBNET_NUMADDRESSESINUSE,  "\n\
    \t\tNo. of Addresses in use = %1!d!."

    MSG_SRVR_MIB_SCOPES_SUBNET_NUMADDRESSESFREE,   "\n\
    \t\tNo. of free Addresses = %1!d!."   

    MSG_SRVR_MIB_SCOPES_SUBNET_NUMPENDINGOFFERS,   "\n\
    \t\tNo. of pending offers = %1!d!."

    MSG_SRVR_SERVER_STATUS,                 "\nServer Status: "

    MSG_SRVR_SERVER_ATTRIB_ISROUGE,                 "\
    \n\tServer Attrib - Server Servicing Clients      :"

    MSG_SRVR_SERVER_ATTRIB_ISDYNBOOTP,              "\
    \n\tServer Attrib - Dynamic BootP Support Enabled :"

    MSG_SRVR_SERVER_ATTRIB_ISPARTDSDC,              "\
    \n\tServer Attrib - DHCP Server Part Of DS        :"

    MSG_SRVR_SERVER_ATTRIB_ISBINDING,               "\
    \n\tServer Attrib - DHCP Server Bindings Aware    :"

    MSG_SRVR_SERVER_ATTRIB_ISADMIN,                 "\
    \n\tServer Attrib - Administrative Rights         :"  

    MSG_SRVR_SERVER_ATTRIB_TYPE_BOOL,       "%1!s!"
    
    MSG_SRVR_SERVER_ATTRIB_TYPE_ULONG       "%1!x!"

    
    MSG_SRVR_TRUE,                                  "TRUE"

    MSG_SRVR_FALSE,                                 "FALSE"
    

    MSG_SRVR_SERVERCONFIG_DATABASENAME_VALUE,      "\n\
    \tDatabaseName              = %1!s!"
    
    MSG_SRVR_SERVERCONFIG_DATABASEPATH_VALUE,      "\n\
    \tDatabasePath              = %1!s!"
    
    MSG_SRVR_SERVERCONFIG_BACKUPPATH_VALUE,        "\n\
    \tDatabaseBackupPath        = %1!s!"

    MSG_SRVR_SERVERCONFIG_BACKUPINTERVAL_VALUE,    "\n\
    \tDatabaseBackupInterval    = %1!ld! mins."

    MSG_SRVR_SERVERCONFIG_DATABASELOGGINGFLAG_VALUE, "\n\
    \tDatabaseLoggingFlag       = %1!d!"
    
    MSG_SRVR_SERVERCONFIG_RESTOREFLAG_VALUE,       "\n\
    \tDatabaseRestoreFlag       = %1!d!"
    
    MSG_SRVR_SERVERCONFIG_DATABASECLEANUPINTERVAL_VALUE, "\n\
    \tDatabaseCleanupInterval   = %1!d! mins."

    MSG_SRVR_OWNER_NAME,                    "\nOwner Name = %1!s! "

    MSG_SRVR_OWNER_NETBIOSNAME,             "\nOwner NetBios Name = %1!s!"

    MSG_SRVR_OWNER_IPADDRESS,               "\nOwner IP Address = %1!s! "

    MSG_SRVR_SCOPE,                         "\n Scope %1!d! : "

    MSG_SRVR_SCOPE_COUNT,                   "\n Total No. of Scopes = %1!d! "

    MSG_SRVR_SCOPE_IPADDRESS,               "\n\tScope Address    : %1!s! "

    MSG_SRVR_SCOPE_SUBNETMASK,              "\n\tScope SubnetMask : %1!s!"

    MSG_SRVR_SCOPE_NAME,                    "\n\tScope Name       : %1!s! "

    MSG_SRVR_SCOPE_COMMENT,                 "\n\tScope Comment    : %1!s! "

    MSG_SRVR_SCOPE_STATE,                   "\n\tScope State      : %1!s!"

    MSG_SRVR_MULTICAST_CLIENT_COUNT,        "\nNo. of Multicast Scopes = %1!d!"
    
    MSG_SRVR_MULTICAST_SCOPES,              "\nMulticast Scope %1!d! = %2!s! "

    MSG_SRVR_MULTICAST_SCOPEID,             "\nMultiCast Scope ID = %1!x! .\n"

    MSG_SRVR_OPTIONDEF_TABLE,               "\
    \n=============================================================================================\
    \n OptionID    -  Option Name                                    - Array Type  - Option Type  \
    \n=============================================================================================\n"

    MSG_SRVR_OPTIONDEF_INFO,                "\
    \n%1!s!-%2!s!-%3!s!-%4!s!"

    MSG_SRVR_SCOPE_TABLE,                   "\
    \n==============================================================================\
    \n Scope Address  - Subnet Mask    - State        - Scope Name          -  Comment   \
    \n==============================================================================\n"

    MSG_SRVR_SCOPE_INFO_ACTIVE,             "\
    \n%1!s!-%2!s!-Active        -%3!s!-%4!s!"

    MSG_SRVR_SCOPE_INFO_NOTACTIVE,          "\
    \n%1!s!-%2!s!-Disabled      -%3!s!-%4!s!"

    MSG_SRVR_SCOPE_INFO_ACTIVE_SWITCHED,    "\
    \n%1!s!-%2!s!-Active(Switched)-%3!s!-%4!s!"

    MSG_SRVR_SCOPE_INFO_NOTACTIVE_SWITCHED,    "\
    \n%1!s!-%2!s!-Disabled(Switched)-%3!s!-%4!s!"

    MSG_SRVR_MSCOPE_TABLE,                  "\
    \n==============================================================================\
    \n MScope Name                       - State    - MScope Comment\
    \n==============================================================================\n"

    MSG_SRVR_MSCOPE_INFO_ACTIVE,            "\
    \n %1!s!- Active   - %3!s!"

    MSG_SRVR_MSCOPE_INFO_NOTACTIVE,         "\
    \n %1!s!- Disabled - %3!s!"

    MSG_SRVR_CLASSNAME,                     "\
    \nCurrent Class Name set for the Server %2!s! is %1!s!.\n"

    MSG_SRVR_CLASSNAME_NONE,                "\
    \nCurrent Class Name set for the Server %1!s! is None.\n"

    MSG_SRVR_VENDORNAME,                    "\
    \nCurrent Vendor Name set for the Server %2!s! is %1!s!.\n"

    MSG_SRVR_VENDORNAME_NONE                "\
    \nCurrent Vendor Name set for the Server %1!s! is None.\n"

    MSG_SRVR_USER_CLASS,                    "\
    \nUser Class    : %1!s!"

    MSG_SRVR_VENDOR_CLASS,                  "\
    \nVendor Class  : %1!s!"

    MSG_SRVR_DNS_CREDENTIALS,               "\
    \nThe credentials used for Dynamic DNS registrations:\
    \n\tUser Name  : %1!s!\n\tDomain     : %2!s!\n"

    MSG_SRVR_DBPROPERTIES,                  "\
    \nServer Database Properties :  \n"

    MSG_SRVR_VERSION,                       "\
    \nThe version of the DHCP Server %1!s! is %2!d!.%3!d!.\n"

    MSG_SRVR_OPTIONVAL_COUNT,               "\
    \nNumber of Optionvalues set : %1!d!\n"

    MSG_SRVR_CLASS_COUNT,                   "\
    \nNumber of Classes : %1!d!.\n"

    MSG_SRVR_BINDINGS,                      "\
    \nBinding information       : %1!d! \
    \n=========================================================================\n"

    MSG_SRVR_NO_BINDINGS,                   "\
    \nNo Binding information available for this server.\n"

    MSG_SRVR_BOUNDTOSERVER_TRUE,            "\
    \nBound To Server                       : TRUE\n"

    MSG_SRVR_BOUNDTOSERVER_FALSE,           "\
    \nBound To Server                       : FALSE\n"

    MSG_SRVR_PRIMARY_ADDRESS,               "\
    \nAdapter Primary Address               : %1!s!\n"

    MSG_SRVR_SUBNET_ADDRESS,                "\
    \nAdapter Subnet Address                : %1!s!\n"

    MSG_SRVR_IF_DESCRIPTION,                "\
    \nInterface Description                 : %1!s!\n"

    MSG_SRVR_IFID,                          "\
    \nInterface ID                          : %1!s!\
    \n=========================================================================\n"

    MSG_SRVR_RECONCILE_SCOPE,               "\
    \nDatabase-Registry inconsistencies for scope %1!s! have been succsesfully fixed.\n"

    MSG_SRVR_RECONCILE_SCOPE_NEEDFIX,       "\
    \nDatabase-Registry inconsistencies detected for scope %1!s!.\n"

    MSG_SRVR_RECONCILE_SCOPE_NOFIX,         "\
    \nNo database-registry inconsistencies detected for scope %1!s!.\n"

    MSG_SRVR_AUDIT_SETTINGS,                "\
    \nThe Audit log setting for the current server :\
    \n\tAudit File Path       : %1!s!\
    \n\tDisk Check Interval   : %2!d! Min\
    \n\tMaximum Log File Size : %3!d! MB\
    \n\tMinimum Space on Disk : %4!d! MB\n"

    MSG_SRVR_NEED_RESTART,                  "\
    \nNeed to stop and restart the DHCP server service in order for this change\
    \nto take effect.\n"

    MSG_SRVR_CHANGE_AUDIT_SETTINGS,         "\
    \nSuccessfully changed the audit log directory from %1!s! to\
    \n%2!s!\n"

    MSG_SRVR_PING_RETRY,                    "\
    \nPing Retry setting for the current Server : %1!d!\n"

    MSG_SRVR_DNS_ENABLED,                   "\
    \nDynamic update of DNS client information    : Enabled"

    MSG_SRVR_DNS_DISABLED,                  "\
    \nDynamic update of DNS client information    : Disabled"
    
    MSG_SRVR_UPDATE_LOOKUP,                 "\
    \n\nForward and Reverse name lookups can be updated when a\
    \nclient acquires a lease : "

    MSG_SRVR_UPDATE_DOWNLEVEL_ENABLED,      "\
    Always update forward and reverse lookups."

    MSG_SRVR_UPDATE_DOWNLEVEL_DISABLED,     "\
    Update according to Client Request."

    MSG_SRVR_DNS_OPTIONS,                   "\
    \n\nOptions :"

    MSG_SRVR_CLEANUP_EXPIRED_ENABLED,       "\
    \nDiscard forward lookups when leases expires : Enabled."

    MSG_SRVR_CLEANUP_EXPIRED_DISABLED,      "\
    \nDiscard forward lookups when leases expires : Disabled."

    MSG_SRVR_UPDATE_BOTH_ENABLED,           "\
    \nDo update for non-dynamic DNS clients       : Enabled"

    MSG_SRVR_UPDATE_BOTH_DISABLED,          "\
    \nDo update for non-dynamic DNS clients       : Disabled"

    MSG_SRVR_MSCOPE_ADD,                    "\
    \nMulticast Scope ID will be set after an IP Range is added to the\
    \nMulticast Scope.\n"

    MSG_DHCP_NO_OPTIONVALUE_SET,            "\
    \nThere are no options configured.\n"

    MSG_SRVR_IMPORT_CLASS_CONFLICT          "\
    \nError while importing class ""%1!s!.""\
    \nThis class conflicts with the existing class ""%2!s!."" "

    MSG_SRVR_IMPORT_OPTDEF_CONFLICT         "\
    \nError while importing option definition ""%1!s!.""\
    \nThis option conflicts with the existing option ""%2!s!."" "

    MSG_SRVR_IMPORT_OPTION_CONFLICT         "\
    \nError while importing option ""%1!s!.""\
    \nThis option conflicts with the existing option ""%2!s!"" "

    MSG_SRVR_IMPORT_SUBNET_OPTION_CONFLICT  "\
    \nError while importing option ""%1!s!"" for subnet ""%5!s!""\
    \nThis option conflicts with the existing option ""%2!s!"" "

    MSG_SRVR_IMPORT_RES_OPTION_CONFLICT     "\
    \nError while importing option ""%1!s!"" for reservation ""%6!s!""\
    \nThis option conflicts with the existing option ""%2!s!"" "

    MSG_SRVR_EXPORT_SUBNET_NOT_FOUND        "\
    \nError: the subnet ""%1!s!"" does not exist on this server.\n"

    MSG_SRVR_IMPORT_SUBNET_CONFLICT         "\
    \nError while importing subnet %1!s! ""%2!s!.""\
    \nThis subnet already exists on the local server."

    MSG_SRVR_IMPORT_DBENTRY_CONFLICT        "\
    \nAn error occurred while processing the database entry\
    \nfor client %1!s! (with hardware address ""%2!s!""): %3!s!.\n"

    EMSG_SRVR_STRING_ARRAY_OPTIONS,              "\
    String options cannot also be arrays.\n"

    EMSG_SRVR_NO_COMPUTER_NAME,             "\
    No server name specified. Call Set Server to set the server name for subsequent\
    \noperation.\n"

    EMSG_SRVR_INVALID_COMPUTER_NAME,        "\
    Server name/IP address passed is invalid or does not have TCP/IP running.\n"

    EMSG_SRVR_UNKNOWN_OPTION_TYPE,          "\
    \nUnknown data type for the supplied Option. \n"

    EMSG_SRVR_VALUE_OUT_OF_RANGE,           "\
    \nThe value supplied is out of range. \n"
    
    EMSG_SRVR_UNKNOWN_SERVER_ATTRIB         "\
    \nUnknown Server Attribute Type."
    
    EMSG_SRVR_UNKNOWN_SERVER,               "\
    \nUnable to determine the Server name for the given IP Address.\n"

    EMSG_SRVR_UNKNOWN_VERSION,              "\
    \nUnable to determine the DHCP Server version for the Server %1!s!.\
    \nServer may not function properly.\n"

    EMSG_SRVR_FAILED_TO_LOAD_HELPER,        "Failed to load Helper %1!s!."

    EMSG_SRVR_ADD_CLASS,                    "\
    \nDHCP Server Add Class failed.\n"

    EMSG_SRVR_ADD_HELPER,                   "\
    \nFailed to add Helper %1!s!. \n"

    EMSG_SRVR_ADD_MSCOPE,                   "\
    \nDHCP Server Add MultiCast Scope failed.\n"
    
    EMSG_SRVR_ADD_OPTIONDEF,                "\
    \nDHCP Server Add OptionDef failed.\n"

    EMSG_SRVR_ADD_SCOPE,                    "\
    \nDHCP Server Add Scope failed.\n"
    

    EMSG_SRVR_DELETE_CLASS,                 "\
    \nDHCP Server Delete Class failed.\n"

    EMSG_SRVR_DELETE_DNSCREDENTIALS            "\
    \nDHCP Server Delete DnsCredentials failed.\n"

    EMSG_SRVR_DELETE_HELPER,                "\
    \nFailed to delete Helper %1!s!. \n"

    EMSG_SRVR_DELETE_MSCOPE,                "\
    \nDHCP Server Delete MultiCast Scope failed.\n"

    EMSG_SRVR_DELETE_OPTIONDEF,             "\
    \nDHCP Server Delete OptionDef failed.\n"

    EMSG_SRVR_DELETE_OPTIONVALUE,           "\
    \nDHCP Server Delete Optionvalue failed.\n"
   
    EMSG_SRVR_DELETE_SCOPE,                 "\
    \nDHCP Server Delete Scope failed.\n"

    EMSG_SRVR_DELETE_SUPERSCOPE,            "\
    \nDHCP Server Delete SuperScope failed.\n"

    EMSG_SRVR_REDO_AUTH,                    "\
    \nDHCP Server initiate auth failed.\n"
    
    EMSG_SRVR_EXPORT,                    "\
    \nDHCP Server export failed.\n"

    EMSG_SRVR_IMPORT,                    "\
    \nDHCP Server import failed.\n"

    EMSG_SRVR_EXIM_LOCAL,                "\
    \nDHCP Server import and export are allowed on local servers only.\n"

    EMSG_SRVR_SET_BACKUPINTERVAL,           "\
    \nDHCP Server Set DatabaseBackupInterval failed.\n"

    EMSG_SRVR_SET_BACKUPPATH                "\
    \nDHCP Server Set BackupPath failed.\n"

    EMSG_SRVR_SET_DATABASECLEANUPINTERVAL   "\
    \nDHCP Server Set DatabaseCleanupInterval failed.\n"

    EMSG_SRVR_SET_DATABASELOGGINGFLAG       "\
    \nDHCP Server Set DatabaseLoggingFlag failed.\n"

    EMSG_SRVR_SET_DATABASENAME,             "\
    \nDHCP Server Set DatabaseName failed.\n"

    EMSG_SRVR_SET_DATABASEPATH,             "\
    \nDHCP Server Set DatabasePath failed.\n"
    
    EMSG_SRVR_SET_DATABASERESTOREFLAG,      "\
    \nDHCP Server Set DatabaseRestoreFlag failed.\n"
     
    EMSG_SRVR_SET_OPTIONVALUE,              "\
    \nDHCP Server Set OptionValue failed.\n"

    EMSG_SRVR_SET_SERVER,                   "\
    \nDHCP Server Set Server failed.\n"

    EMSG_SRVR_SET_USERCLASS,                "\
    \nDHCP Server Set User Class failed.\n"

    EMSG_SRVR_SET_VENDORCLASS               "\
    \nDHCP Server Set Vendor Class failed.\n"

    EMSG_SRVR_SET_DNSCREDENTIALS            "\
    \nDHCP Server Set DnsCredentials failed.\n"

    EMSG_SRVR_SET_AUDITLOG,                 "\
    \nDhcp Server Set Auditlog failed.\n"

    EMSG_SRVR_SET_DETECTCONFLICTRETRY,      "\
    \nDhcp Server Set DetectConflictRetry failed.\n"

    EMSG_SRVR_SET_DNSCONFIG,                "\
    \nDhcp Server Set DnsConfig failed.\n"

    EMSG_SRVR_NO_SHOWDNSCONFIG,             "\
    \nDhcp Server Show DnsConfig failed.\
    \nDNS Configuration parameters are not set properly.\n"

    EMSG_SRVR_NO_SETDNSCONFIG,              "\
    \nDhcp Server Set DnsConfig failed.\
    \nDNS Configuration key is not created. Use DHCP Snap-in to\
    \ninitialize the registry keys.\n"

    EMSG_SRVR_SHOW_ALL,                     "\
    \nDHCP Server Show All failed.\n"

    EMSG_SRVR_SHOW_BINDINGS,                "\
    \nDHCP Server Show Bindings failed.\n"

    EMSG_SRVR_SHOW_CLASS,                   "\
    \nDHCP Server Show Class failed.\n"

    EMSG_SRVR_SHOW_HELPER,                  "\
    \nFailed to display list of installed helper.\n"

    EMSG_SRVR_SHOW_MIBINFO,                 "\
    \nDHCP Server Show MIBInfo failed.\n"

    EMSG_SRVR_SHOW_MSCOPE,                  "\
    \nDHCP Server Show MScope failed.\n"

    EMSG_SRVR_SHOW_OPTIONDEF,               "\
    \nDHCP Server Show OptionDef failed.\n"

    EMSG_SRVR_SHOW_OPTIONVALUE,             "\
    \nDHCP Server Show OptionValue failed.\n"

    EMSG_SRVR_SHOW_SCOPE,                   "\
    \nDHCP Server Show Scope failed.\n"

    EMSG_SRVR_SHOW_SERVER,                  "\
    \nDHCP Server Show Server failed.\n"

    EMSG_SRVR_SHOW_SERVERCONFIG,            "\
    \nDHCP Server Show ServerConfig failed.\n"

    EMSG_SRVR_SHOW_SERVERSTATUS,            "\
    \nDHCP Server Show ServerStatus failed.\n"

    EMSG_SRVR_SHOW_USERCLASS,               "\
    \nDHCP Server Show UserClass failed.\n"

    EMSG_SRVR_SHOW_VENDORCLASS,             "\
    \nDHCP Server Show VendorClass failed.\n"

    EMSG_SRVR_SHOW_DNSCREDENTIALS,          "\
    \nDHCP Server Show DnsCredentials failed.\n"

    EMSG_SRVR_SHOW_AUDITLOG,                "\
    \nDhcp Server Show Auditlog failed.\n"

    EMSG_SRVR_SHOW_DETECTCONFLICTRETRY,     "\
    \nDhcp Server Show DetectConflictRetry failed.\n"

    EMSG_SRVR_SHOW_DNSCONFIG,               "\
    \nDhcp Server Show DnsConfig failed.\n"

    EMSG_SRVR_INVALID_VERSION,              "\
    \nThe Server %1!s!(version %2!d!.%3!d! ) does not support this operation. \
    \nThe Server version needs to be greater or equal to 5.5.\n"

    EMSG_SRVR_BINDINGS_SUPPORT,             "\
    \nBinding is not supported for this server.\n"

    EMSG_SRVR_RECONCILE_SCOPE,              "\
    \nDatabase reconcile operation for scope %1!s! is failed with Error : \n%2!s!\n"

    EMSG_SRVR_INVALID_OPTIONTYPE,           "\
    \nOption data type supplied is not valid for the Option.\n"

    EMSG_SRVR_INVALID_DIRECTORY,            "\
    \nFailed to open the specified directory. The directory name may be invalid or\
    \ndoes not exist.\n"

    HLP_SCOPE_ADD_IPRANGE,                     "\
    add iprange                   - Adds a range of ip address for distribution to\
    \n                                the scope."

    HLP_SCOPE_ADD_IPRANGE_EX,                  "\
    \nTo create and add a range of IP addresses for distribution to the \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        add iprange <StartIP> <EndIP> [ClientType] [MaxBootP] \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - The starting IP address of the exclusion \
    \n                         range.  \
    \n \
    \n        EndIP          - The ending IP address of the exclusion \
    \n                         range. \
    \n \
    \n        ClientType     - Type of client: DHCP(Default), BOOTP, or \
    \n                         BOTH.  \
    \n \
    \n        MaxBootP       - Maximum number of BOOTP clients  \
    \n                         (ClientType = BOOTP)  \
    \n \
    \nNotes:         The MaxBootP parameter is optional and only useful if  \
    \n               the ClientType is set to support BOOTP-type clients for \
    \n               the scope.  \
    \n               If any optional parameter is used, all parameters(mandatory \
    \n               as well as optional) before that must be supplied in proper \
    \n               sequence. \
    \n \
    \nExample:       add iprange 10.2.2.10 10.2.2.20 \
    \n \
    \n               This command adds the IP address range 10.2.2.10 to \
    \n               10.2.2.20 to the distribution range in the scope. \
    \n"
    
    HLP_SCOPE_ADD_EXCLUDERANGE,                "\
    add excluderange              - Adds a range of exclusion address to the scope."

    HLP_SCOPE_ADD_EXCLUDERANGE_EX,             "\
    \nTo exclude a range of IP addresses from distribution by the scope.   \
    \n \
    \nSyntax: \
    \n \
    \n        add excluderange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - The starting IP address of the exclusion \
    \n                         range.  \
    \n \
    \n        EndIP          - The ending IP address of the exclusion \
    \n                         range.  \
    \n \
    \nExample:       add excluderange 10.2.2.10 10.2.2.20 \
    \n \
    \n               This command excludes IP addresses in the range \
    \n               10.2.2.10 to 10.2.2.20 from distribution in the scope.  \
    \n"

    HLP_SCOPE_ADD_RESERVEDIP,                  "\
    add reservedip                - Adds a reservation ip address for a particular\
    \n                                Hardware address."

    HLP_SCOPE_ADD_RESERVEDIP_EX                "\
    \nTo reserve an IP address for a particular hardware address in the \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        add reservedip <ReservedIP> <MAC_Address> [ClientName] \
    \n        [ClientComment] [ClientType(DHCP | BOOTP | BOTH)] \
    \n \
    \nParameters: \
    \n \
    \n        ReservedIP     - IP address to be reserved. \
    \n \
    \n        MAC_Address    - Physical hardware or Media Access Control \
    \n                         (MAC) address to be associated with the IP \
    \n                         address to be reserved.  \
    \n \
    \n        ClientName     - Provides space for a client name associated \
    \n                         with this reserved client entry. \
    \n \
    \n        ClientComment  - Provides space for a client comment \
    \n                         associated with this reserved client entry.   \
    \n \
    \n        ClientType     - Type of clients; DHCP(default), BOOTP, or \
    \n                         BOTH. \
    \n \
    \nNotes:         If any optional parameter is used, all parameters(mandatory \
    \n               as well as optional) before that must be supplied in proper \
    \n               sequence. \
    \n \
    \nExample:       add reservedip 10.2.2.32 08002b30369B \
    \n \
    \n               This command reserves the IP address 10.2.2.32 for use \
    \n               by the client that identifies its MAC address as \
    \n               08-00-2b-30-36-9b when obtaining a lease in the current \
    \n               scope.  \
    \n"

    HLP_SCOPE_CHECK_DATABASE,                  "\
    initiate reconcile            - Checks and reconciles the scope database."

    HLP_SCOPE_CHECK_DATABASE_EX,               "\
    \nTo initiate verifying, and optionally, fixing of inconsistencies in   \
    \nthe scope database.  \
    \n \
    \nSyntax: \
    \n \
    \n        initiate reconcile [fix] \
    \n \
    \nParameters: \
    \n \
    \n        fix            - Repairs any inconsistencies found when \
    \n                         reconciling the scope.  \
    \n \
    \nExample:       initiate reconcile \
    \n               initiate reconcile fix \
    \n \
    \n               The first command example initiates a reconcile \
    \n               operation in which the DHCP server examines and \
    \n               compares information about the scope in the server \
    \n               database to similar information mirrored in the Windows \
    \n               registry. When used, any inconsistencies found are only \
    \n               reported in the command output. The second command can \
    \n               be used to repair any inconsistencies found during the \
    \n               use of this command. \
    \n"

    HLP_SCOPE_DELETE_IPRANGE,                    "\
    delete iprange                - Deletes an IP range for distribution from\
    \n                                the scope."

    HLP_SCOPE_DELETE_IPRANGE_EX,               "\
    \nTo delete a range of IP addresses from scope distribution.  \
    \n \
    \nSyntax: \
    \n \
    \n        delete iprange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address of the range to be \
    \n                         deleted.  \
    \n \
    \n        EndIP          - Ending IP address of the range to be \
    \n                         deleted.  \
    \n \
    \nExample:       delete iprange 10.2.1.5 10.2.1.10 \
    \n \
    \n               This command deletes the IP address range 10.2.1.5 to \
    \n               10.2.1.10 from the current scope. \
    \n \
    \n"

    HLP_SCOPE_DELETE_EXCLUDERANGE,             "\
    delete excluderange           - Deletes an exclusion range from the scope."

    HLP_SCOPE_DELETE_EXCLUDERANGE_EX,          "\
    \nTo delete an exclusion range from the scope list. \
    \n \
    \nSyntax: \
    \n \
    \n        delete excluderange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address of the exclusion range.   \
    \n \
    \n        EndIP          - Ending IP address of the exclusion range.  \
    \n \
    \nExample:       delete excluderange 10.2.1.5 10.2.1.10 \
    \n \
    \n               This command deletes the exclusion range from 10.2.1.5 \
    \n               to 10.2.1.10 from the current scope. \
    \n"

    HLP_SCOPE_DELETE_RESERVEDIP,               "\
    delete reservedip             - Deletes a reservation address from the scope."

    HLP_SCOPE_DELETE_RESERVEDIP_EX,           "\
    \nTo delete a client address reservation from the current scope. \
    \n \
    \nSyntax: \
    \n \
    \n        delete reservedip <ReservedIP> <MAC_address>  \
    \n \
    \nParameters: \
    \n \
    \n        ReservedIP     - The IP address reservation to be deleted for \
    \n                         the scope.  \
    \n \
    \n        MAC_address    - The Media Access Control (MAC) or physical \
    \n                         hardware address string for which the IP \
    \n                         address was reserved.  \
    \n \
    \nExample:       delete reservedip 10.2.1.32 08002B30369B \
    \n \
    \n               This command removes the IP address reservation 10.2.1.32 \
    \n               for the MAC address 08002B30369B from the current scope. \
    \n"


    HLP_SCOPE_DELETE_OPTIONVALUE,              "\
    delete optionvalue            - Deletes an option value from the scope."

    HLP_SCOPE_DELETE_OPTIONVALUE_EX,           "\
    \nTo delete a specific option value from the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        delete optionvalue <OptCode> [user=UserName] \
    \n        [vendor=VendorName]  \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - ID of the option whose value is to be deleted.  \
    \n \
    \n        UserName       - To delete the options for the current default \
    \n                         user class or the class specified as \
    \n                         UserName. If this parameter is used, the \
    \n                         user= tag must be provided.   \
    \n \
    \n        VendorName     - To delete the options for the current default \
    \n                         vendor class or the class specified as \
    \n                         VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExamples:      delete optionvalue 18 \
    \n               delete optionvalue 18 vendor=""MyVendorClass"" \
    \n \
    \n               This first command example deletes the currently set \
    \n               option value for option code 18 from the current \
    \n               scope. The second example deletes the current option \
    \n               value for option code 18 for the specified vendor class \
    \n               MyVendorClass. This affects only those scope clients \
    \n               identified as members of this vendor class.  \
    \n"

    HLP_SCOPE_DELETE_RESERVEDOPTIONVALUE,       "\
    delete reservedoptionvalue    - Deletes an optionvalue for the reservation\
    \n                                address."

    HLP_SCOPE_DELETE_RESERVEDOPTIONVALUE_EX,    "\
    \nTo delete an IP-specific option value for the reservation address.  \
    \n \
    \nSyntax: \
    \n \
    \n        	delete reservedoptionvalue <ReservedIP> <OptCode> \
    \n        	[User=UserName] [vendor=VendorName]  \
    \n \
    \nParameters: \
    \n \
    \n        ReservedIP     - Reserved IP address. \
    \n \
    \n        OptCode        - The code for the option type whose reserved \
    \n                         client configured value is to be deleted. \
    \n \
    \n        UserName       - To specify either the current default user \
    \n                         class or the class specified as UserName. If \
    \n                         this parameter is used, the User= tag must \
    \n                         be provided.  \
    \n \
    \n        VendorName     - To specify either the current default vendor \
    \n                         class or the class specified as \
    \n                         VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       delete reservedoptionvalue 10.2.2.32 18 \
    \n \
    \n               This command deletes the currently set option value for \
    \n               the option identified by code 18 for reserved IP \
    \n               address of 10.2.2.32 in the current scope. \
    \n"

    HLP_SCOPE_SET_COMMENT,                     "\
    set comment                   - Sets the comment for the scope."

    HLP_SCOPE_SET_COMMENT_EX,                  "\
    \nTo set a new comment for the current scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set comment [NewComment] \
    \n \
    \nParameters: \
    \n \
    \n        NewComment     - A new or modified comment string for the \
    \n                         scope(Optional). \
    \n \
    \nExamples:      set comment NewCommentNoSpaces \
    \n               set comment ""New Comment With Spaces"" \
    \n \
    \n               The examples show how the comment for the current scope \
    \n               can be modified to set a comment string comment that \
    \n               has no spaces or one that includes spaces if characters \
    \n               are enclosed within quotation marks.  \
    \n"
    
    HLP_SCOPE_SET_NAME,                        "\
    set name                      - Sets the name of the scope."

    HLP_SCOPE_SET_NAME_EX,                     "\
    \nTo set a new name of the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set name <NewName> \
    \n \
    \nParameters: \
    \n \
    \n        NewName        - The new name of the scope. \
    \n \
    \nExamples:      set name NewNameNoSpaces \
    \n               set name ""New Name With Spaces"" \
    \n \
    \n               The examples show how the name for the current scope \
    \n               can be modified to use a new name that is either a \
    \n               single word or several words specified within quotation \
    \n               marks.  \
    \n"

    HLP_SCOPE_SET_OPTIONVALUE,                 "\
    set optionvalue               - Sets the option for the scope."

    HLP_SCOPE_SET_OPTIONVALUE_EX,              "\
    \nTo set the value of an option for the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set optionvalue <OptCode> <DataType> [user=UserName] \
    \n        [vendor=VendorName] <OptionValue> \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - The code for the option type whose value is \
    \n                         to be set.  \
    \n \
    \n        DataType       - The data type for the option type whose value \
    \n                         is to be set.  \
    \n \
    \n        UserName       - To specify either the current default user \
    \n                         class or the class specified as UserName. If \
    \n                         this parameter is used, the user= tag must \
    \n                         be provided.  \
    \n \
    \n        VendorName     - To specify either the current default vendor \
    \n                         class or the class specified as \
    \n                         VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \n        OptValue       - The assigned value for the option type \
    \n                         specified in OptCode. If the option type \
    \n                         supports an array containing more than a \
    \n                         single numeric or IP address value, provide \
    \n                         the additional values in order at the end of \
    \n                         the command.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       set optionvalue 003 IPADDRESS 10.1.1.1 10.1.1.2  \
    \n               set optionvalue 003 IPADDRESS vendor=Vendor1 10.1.1.1 10.1.1.2  \
    \n \
    \n               The command examples sets the value of option code 003 \
    \n               to list two router IP addresses (10.1.1.1, \
    \n               10.1.1.2). For the second example, the command is \
    \n               further qualified to set the specified value to be \
    \n               applied only for those scope clients that identify \
    \n               themselves as members of the vendor class Vendor1. In \
    \n               order for this example to work, this class must already \
    \n               be defined at the server with the specified option type \
    \n               defined for its use.  \
    \n"

    HLP_SCOPE_SET_RESERVEDOPTIONVALUE,         "\
    set reservedoptionvalue       - Sets an option value for a reservation address."

    HLP_SCOPE_SET_RESERVEDOPTIONVALUE_EX,      "\
    \nTo set the value of an option for a reservation IP address in the \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        set reservedoptionvalue <ReservedIP> <OptCode> <DataType> \
    \n        [user=UserName] [vendor=VendorName] <OptValue> \
    \n \
    \nParameters: \
    \n \
    \n        ReservedIP     - Reserved IP address for which the option \
    \n                         value is to be set.  \
    \n  \
    \n        OptCode        - The code for the option type whose value is \
    \n                         to be set.  \
    \n \
    \n        DataType       - The data type for the option type whose value \
    \n                         is to be set.  \
    \n \
    \n        UserName       - To specify either the current default user \
    \n                         class or the class specified as UserName. If \
    \n                         this parameter is used, the user= tag must \
    \n                         be provided.  \
    \n \
    \n        VendorName     - To specify either the current default vendor \
    \n                         class or the class specified as \
    \n                         VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \n        OptValue       - The assigned value for the option type \
    \n                         specified in OptCode. If the option type \
    \n                         supports an array containing more than a \
    \n                         single numeric or IP address value, provide \
    \n                         the additional values in order at the end of \
    \n                         the command.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       set reservedoptionvalue 10.1.1.50 003 IPADDRESS 10.1.1.1 10.1.1.2  \
    \n \
    \n               This command sets the value of the Router option (code \
    \n               003) for the reserved client IP address of 10.1.1.50 in \
    \n               the current scope to set IP addresses of 10.1.1.1 and \
    \n               10.1.1.2 for its configured routers (default \
    \n               gateways).  \
    \n"

    HLP_SCOPE_SET_SCOPE,                       "\
    set scope                     - Sets the scope for subsequent operations."

    HLP_SCOPE_SET_SCOPE_EX,                    "\
    \nTo change or set the scope for subsequent operations. \
    \n \
    \nSyntax: \
    \n \
    \n        set scope <ScopeAddress> \
    \n \
    \nParameters: \
    \n \
    \n        ScopeAddress   - The IP address number for the scope to be \
    \n                         used in subsequent command operations. \
    \n \
    \nExample:       set scope 10.2.3.0 \
    \n \
    \n               This command sets the current scope to 10.2.3.0 for \
    \n               subsequent operations.  \
    \n  \
    \n"

    HLP_SCOPE_SET_STATE,                       "\
    set state                     - Activates/De-activates the current scope."
    
    HLP_SCOPE_SET_STATE_EX,                    "\
    \nTo activate or deactivate the current scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set state [0|1|2|3] \
    \n \
    \nNotes:         A value of 1 activates the scope (default). A value of \
    \n               0 deactivates  the scope. Values 2 and 3 are similar to 0 \
    \n               and 1 with the additional attribute that these two values \
    \n               also cause the scope to be marked as ""Switched"" -- This \
    \n               is typically used for switched networks, or networks where\
    \n               multiple logical networks are hosted on a single physical\
    \n               network.\
    \n \
    \nExamples:      set state 1 \
    \n               set state 0 \
    \n \
    \n"

    HLP_SCOPE_SET_SUPERSCOPE,                  "\
    set superscope                - Sets the superscope for the scope."

    HLP_SCOPE_SET_SUPERSCOPE_EX,               "\
    \nTo add or set the current scope in a superscope. \
    \n \
    \nSyntax: \
    \n \
    \n       	set superscope <SuperscopeName> <1|0> \
    \n \
    \nParameters: \
    \n \
    \n        SuperscopeName - The name of the superscope to include the \
    \n                         current scope.  \
    \n \
    \nNotes:         For the superscope state flag, a value of 1 activates \
    \n               the superscope and a value of 0 deactivates the \
    \n               superscope.  \
    \n \
    \nExamples:      set superscope MySuperscope 1 \
    \n \
    \n                This command adds the current scope to the superscope \
    \n                MySuperScope (case sensitive) and activates the \
    \n                superscope.  \
    \n \
    \n"
  

    HLP_SCOPE_SHOW_CLIENTS,                    "\
    show clients                  - Displays all available version 4 client for\
    \n                                the scope."

    HLP_SCOPE_SHOW_CLIENTS_EX,                 "\
    \nTo enumerate and display all of the version 4 clients for the scope.  \
    \n \
    \nSyntax: \
    \n \
    \n        show clients [Level (0|1) ] \
    \n \
    \nParameters: \
    \n \
    \n        Level          - The detail level of the output can be \
    \n                         controlled  by this parameter. \
    \n                         Default is 0.\
    \n \
    \nNotes:         To view the output of this command effectively, \
    \n               increase the width of the command window to at least 95 \
    \n               characters.  \
    \n"


    HLP_SCOPE_SHOW_CLIENTSV5,                  "\
    show clientsv5                - Displays all available version 5 client for\
    \n                                the scope."

    HLP_SCOPE_SHOW_CLIENTSV5_EX,               "\
    \nTo enumerate and display all of the version 5 clients for the scope.   \
    \n \
    \nSyntax: \
    \n \
    \n        show clientsv5 [Level (0|1) ] \
    \n \
    \nParameters: \
    \n \
    \n        Level          - The detail level of the output can be \
    \n                         controlled  by this parameter. \
    \n                         Default is 0.\
    \n \
    \nNotes:         To view the output of this command effectively, \
    \n               increase the width of the command window to at least 95 \
    \n               characters.  \
    \n"

    HLP_SCOPE_SHOW_IPRANGE,                    "\
    show iprange                  - Displays all available IP ranges for the scope."

    HLP_SCOPE_SHOW_IPRANGE_EX,                 "\
    \nTo display all IP address ranges for available for distributing \
    \naddress leases to scope clients for the current scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show iprange \
    \n \
    \nNotes:         This command displays all available IP address ranges \
    \n               for the current scope. \
    \n"

    HLP_SCOPE_SHOW_MIBINFO,                    "\
    show mibinfo                  - Displays MIBInfo for the scope."

    HLP_SCOPE_SHOW_MIBINFO_EX,                   "\
    \nTo display the Management Information Base (MIB) information for the \
    \ncurrent scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show mibinfo \
    \n \
    \nNotes:         This command displays the DHCP management information \
    \n               base (MIB) information for the current scope. \
    \n"

    HLP_SCOPE_SHOW_EXCLUDERANGE,                 "\
    show excluderange             - Displays all available exclusion ranges for\
    \n                                the scope."

    HLP_SCOPE_SHOW_EXCLUDERANGE_EX,              "\
    \nTo display all currently excluded address ranges for the current \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        show excluderange \
    \n \
    \nNotes:         This command displays all currently set exclusion \
    \n               ranges for the current scope. Use other scope-level \
    \n               commands to add and delete exclusion ranges. \
    \n"

    HLP_SCOPE_SHOW_RESERVEDIP,                   "\
    show reservedip               - Displays all available reservation address for\
    \n                                the scope."

    HLP_SCOPE_SHOW_RESERVEDIP_EX,                "\
    \nTo display all currently defined client reservations for the current scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show reservedip \
    \n \
    \nNotes:         This command displays all currently defined client \
    \n               reservations for the current scope.  \
    \n"

    HLP_SCOPE_SHOW_OPTIONVALUE,                  "\
    show optionvalue              - Displays all options that are set for the scope."

    HLP_SCOPE_SHOW_OPTIONVALUE_EX,               "\
    \nTo display all current options and their set values set for the scope or  \
    \nfor specified classes enabled for use with this scope. \
    \n \
    \nSyntax: \
    \n \
    \n       	show optionvalue [user=UserName] [vendor=VendorName] \
    \n \
    \nParameters: \
    \n \
    \n        UserName       - To display the options set for the current \
    \n                         default user class or the class specified as \
    \n                         UserName. If this parameter is used, the \
    \n                         user= tag must be provided.  \
    \n \
    \n        VendorName     - To display the options set for the current \
    \n                         default vendor class or the class specified \
    \n                         as VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       show optionvalue user=""My User Class"" \
    \n \
    \n               This command displays all options and values set for \
    \n               the current scope for the user defined class, My User \
    \n               Class.  \
    \n"

    HLP_SCOPE_SHOW_SCOPE,                        "\
    show scope                    - Displays the current scope."

    HLP_SCOPE_SHOW_SCOPE_EX,                     "\
    \nTo display the current scope. \
    \n \
    \nSyntax:	 \
    \n \
    \n        show scope \
    \n \
    \nNotes:         To display information about the current scope. \
    \n"

    HLP_SCOPE_SHOW_STATE,                        "\
    show state                    - Displays the current state of the scope."

    HLP_SCOPE_SHOW_STATE_EX,                     "\
    \nTo display the current activation state of the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show state \
    \n \
    \nNotes:         This command displays the activation state for the \
    \n               current scope.  \
    \n"

    HLP_SCOPE_SHOW_RESERVEDOPTIONVALUE,          "\
    show reservedoptionvalue      - Displays the options set for a particular \
    \n                                reservation address in the scope."

    HLP_SCOPE_SHOW_RESERVEDOPTIONVALUE_EX,       "\
    \nTo display the option values set for a specified reservation address \
    \nin the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show reservedoptionvalue <ReservedIP> [user=UserName] \
    \n        [vendor=VendorName]  \
    \n \
    \nParameters: \
    \n \
    \n        ReservedIP     - The IP address reservation for which \
    \n                         currently assigned options are to be \
    \n                         displayed.  \
    \n \
    \n        UserName       - To display the options set for the current \
    \n                         default user class or the class specified as \
    \n                         UserName. If this parameter is used, the \
    \n                         user= tag must be provided.  \
    \n \
    \n        VendorName     - To display the options set for the current \
    \n                         default vendor class or the class specified \
    \n                         as VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       show reservedoptionvalue 10.2.2.100 \
    \n \
    \n               This command displays the option values set for the \
    \n               reserved IP address 10.2.2.100 in the current scope.  \
    \n"

    DMP_SCOPE_ADD_IPRANGE,               "\
    \nDhcp Server %1!s! Scope %2!s! Add iprange %3!s! %4!s! %5!s!"

    DMP_SCOPE_ADD_EXCLUDERANGE,              "\
    \nDhcp Server %1!s! Scope %2!s! add excluderange %3!s! %4!s!"

    DMP_SCOPE_ADD_RESERVEDIP,                "\
    \nDhcp Server %1!s! Scope %2!s! Add reservedip %3!s! %4!s! ""%5!s!"" ""%6!s!"" ""%7!s!"""

    DMP_SCOPE_DELETE_IPRANGE,                "\
    \nDelete iprange = %1!s! - %2!s! from the scope = %3!s!\n"

    DMP_SCOPE_DELETE_EXCLUDERANGE,           "\
    \nDelete excluderange = %1!s! - %2!s! from the scope = %3!s!\n"

    DMP_SCOPE_DELETE_RESERVEDIP,             "\
    \nDelete reserved ip %1!s! with hardware address %2!s! from the scope = %3!s!\n"

    DMP_SCOPE_DELETE_OPTIONVALUE,            "\
    \nDelete the option = %1!d! from the Scope = %2!s!\n"

    DMP_SCOPE_DELETE_RESERVEDOPTIONVALUE,    "\
    \nDelete the option ID = %1!d! for the reservation address %2!s! from the scope = %3!s!\n"

    DMP_SCOPE_CHECK_DATABASE,                "\
    \nChecks the integrity of the database for the scope = %1!s!\n"

    DMP_SCOPE_SET_COMMENT,                   "\
    \nSet the comment to %1!s! for the scope %2!s! \n"

    DMP_SCOPE_SET_NAME,                      "\
    \nSet the name to %1!s! for the scope %2!s! \n"

    DMP_SCOPE_SET_STATE,                     "\
    \nDhcp Server %1!s! Scope %2!s! set state %3!d!"

    DMP_SCOPE_SET_SCOPE,                     "\
    \nSet the the current scope to %1!s! \n"

    DMP_SCOPE_SET_OPTIONVALUE,               "\
    \nDhcp Server %1!s! Scope %2!s! set optionvalue %3!d! %4!s! %5!s!"

    DMP_SCOPE_SET_RESERVEDOPTIONVALUE,       "\
    \nDhcp Server %1!s! Scope %2!s! set reservedoptionvalue %3!s! %4!d! %5!s! %6!s!"

    DMP_SCOPE_SET_OPTIONVALUE_CLASS,        "\
    \nDhcp Server %1!s! Scope %2!s! set optionvalue %3!d! %4!s! user=%5!s! vendor=%6!s! %7!s!"

    DMP_SCOPE_SET_RESERVEDOPTIONVALUE_CLASS,"\
    \nDhcp Server %1!s! Scope %2!s! set reservedoptionvalue %3!s! %4!d! %5!s! user=%6!s! vendor=%7!s! %8!s!"

    DMP_SCOPE_SET_OPTIONVALUE_USER,         "\
    \nDhcp Server %1!s! Scope %2!s! set optionvalue %3!d! %4!s! user=%5!s! %6!s!"

    DMP_SCOPE_SET_RESERVEDOPTIONVALUE_USER, "\
    \nDhcp Server %1!s! Scope %2!s! set reservedoptionvalue %3!s! %4!d! %5!s! user=%6!s! %7!s!"

    DMP_SCOPE_SET_OPTIONVALUE_VENDOR,       "\
    \nDhcp Server %1!s! Scope %2!s! set optionvalue %3!d! %4!s! vendor=%5!s! %6!s!"

    DMP_SCOPE_SET_RESERVEDOPTIONVALUE_VENDOR, "\
    \nDhcp Server %1!s! Scope %2!s! set reservedoptionvalue %3!s! %4!d! %5!s! vendor=%6!s! %7!s!"

    DMP_SCOPE_SET_SUPERSCOPE,                "\
    \nSet the superscope to %1!s! for the scope %2!s!\n"

    DMP_SCOPE_SHOW_CLIENTS,                  "\
    \nShow all version 4 dhcp clients for the scope %1!s!\n"

    DMP_SCOPE_SHOW_CLIENTSV5,                "\
    \nShow all version 5 dhcp clients for the scope %1!s! \n"

    DMP_SCOPE_SHOW_IPRANGE,                  "\
    \nShow all IP ranges available to the scope %1!s!\n"

    DMP_SCOPE_SHOW_MIBINFO,                  "\
    \nShow MIBInfo for the scope %1!s!. "

    DMP_SCOPE_SHOW_EXCLUDERANGE,             "\
    \nShow all exclusion ranges for the scope %1!s! "

    DMP_SCOPE_SHOW_RESERVEDIP,               "\
    \Show all reserved ip address for the scope %1!s!\n"

    DMP_SCOPE_SHOW_OPTIONVALUE,              "\
    \Show all option values for the scope %1!s!\n"

    DMP_SCOPE_SHOW_SCOPE,                    "\
    \nShow the current scope %1!s!\n"
    
    DMP_SCOPE_SHOW_RESERVEDOPTIONVALUE,      "\
    \nShow all option values for the reserved ip %1!s! in the scope %2!s!\n"

    DMP_SCOPE_SHOW_STATE,                    "\
    \nShow current state of the scope %1!s!\n"

    DMP_SRVR_CLASS_HEADER,                   "\
    \n# =====================================\
    \n#     Add Classes                      \
    \n# =====================================\n"

    DMP_SRVR_CLASS_FOOTER,                    "\
    \n# =====================================\
    \n#     Add Classes  End                 \
    \n# =====================================\n"
    
    DMP_SRVR_OPTIONDEF_HEADER,                "\
    \n# =====================================\
    \n#     Add Optiondef                    \
    \n# =====================================\n"
    
    DMP_SRVR_OPTIONDEF_FOOTER,                  "\
    \n# =====================================\
    \n#     Add Optiondef End                \
    \n# ====================================\n"

    DMP_SRVR_OPTIONVALUE_HEADER,                "\
    \n# =====================================\
    \n#     Set Optionvalue                  \
    \n# =====================================\n"

    DMP_SRVR_OPTIONVALUE_FOOTER,                "\
    \n# =====================================\
    \n#     Set Optionvalue End              \
    \n# =====================================\n"

    DMP_SRVR_SCOPE_HEADER,                      "\
    \n# =====================================\
    \n#     Add Scope                        \
    \n# =====================================\n"

    DMP_SRVR_SCOPE_FOOTER,                      "\
    \n# =====================================\
    \n#     Add Scope End                    \
    \n# =====================================\n"

    DMP_SRVR_SUPER_SCOPE_HEADER,                "\
    \n# =====================================\
    \n#     Add Super Scope                  \
    \n# =====================================\n"

    DMP_SRVR_SUPER_SCOPE_FOOTER,                "\
    \n# =====================================\
    \n#     Add Super Scope End              \
    \n# =====================================\n"

    DMP_SRVR_SERVER_HEADER,                     "\
    \n# ==============================================================\
    \n#  Configuration Information for Server %1!s!                   \
    \n# ==============================================================\n\n"

    DMP_SRVR_SERVER_FOOTER,                     "\
    \n# ==============================================================\
    \n#  Configuration Information for Server %1!s! Ends              \
    \n# ==============================================================\n\n"

    DMP_SRVR_MSCOPE_HEADER,                     "\
    \n# =====================================\
    \n#     Add MScope                       \
    \n# =====================================\n"

    DMP_SRVR_MSCOPE_FOOTER,                     "\
    \n# =====================================\
    \n#     Add MScope End                   \
    \n# =====================================\n"

    EMSG_SCOPE_ERROR_SUCCESS,                "\
    \nCommand completed successfully.\n"

    EMSG_SCOPE_INCOMPLETE_COMMAND,           "\
    The command is incomplete. The possible completions are:\n\n"
 
    EMSG_SCOPE_NO_SCOPENAME,                 "\
    \nThe command needs a valid Scope IP Address.\n"
 
    EMSG_SCOPE_INVALID_SCOPE_NAME,        "\
    Scope address passed is not valid.\n"

    EMSG_SCOPE_INVALID_IPADDRESS,               "\
    \nIP Address passed is invalid. \n"


    EMSG_SCOPE_ADD_IPRANGE,                     "\
    \nDHCP Server Scope Add IP Range failed.\n"

    EMSG_SCOPE_ADD_EXCLUDERANGE,                "\
    \nDHCP Server Scope Add ExcludeRange failed.\n"
    
    EMSG_SCOPE_ADD_RESERVEDIP,                 "\
    \nDHCP Server Scope Add ReservedIP failed.\n"

    EMSG_SCOPE_DELETE_IPRANGE,                  "\
    \nDHCP Server Scope Delete IP Range failed.\n"

    EMSG_SCOPE_DELETE_EXCLUDERANGE,             "\
    \nDHCP Server Scope Delete ExcludeRange failed.\n"
    
    EMSG_SCOPE_DELETE_RESERVEDIP,               "\
    \nDHCP Server Scope Delete ReservedIP failed.\n"

    EMSG_SCOPE_DELETE_OPTIONVALUE,              "\
    \nDHCP Server Scope Delete OptionValue failed.\n"

    EMSG_SCOPE_DELETE_RESERVEDOPTIONVALUE,      "\
    \nDHCP Server Scope Delete ReservedOptionValue failed.\n"

    EMSG_SCOPE_CHECK_DATABASE,                  "\
    \nDHCP Server Scope initiate reconcile failed.\n"

    EMSG_SCOPE_SET_COMMENT,                     "\
    \nDHCP Server Scope Set Comment failed.\n"

    EMSG_SCOPE_SET_NAME,                        "\
    \nDHCP Server Scope Set Name failed.\n"

    EMSG_SCOPE_SET_OPTIONVALUE,                 "\
    \nDHCP Server Scope Set OptionValue failed.\n"

    EMSG_SCOPE_SET_RESERVEDOPTIONVALUE,         "\
    \nDHCP Server Scope Set ReservedOptionValue failed.\n"

    EMSG_SCOPE_SET_SCOPE,                       "\
    \nDHCP Server Scope Set Scope failed.\n"

    EMSG_SCOPE_SET_STATE,                       "\
    \nDHCP Server Scope Set State failed.\n"

    EMSG_SCOPE_SET_SUPERSCOPE,                  "\
    \nDHCP Server Scope Set SuperScope failed.\n"

    EMSG_SCOPE_SHOW_CLIENTS,                    "\
    \nDHCP Server Scope Show Clients failed.\n"

    EMSG_SCOPE_SHOW_CLIENTSV5,                  "\
    \nDHCP Server Scope Show ClientsV5 failed.\n"

    EMSG_SCOPE_SHOW_EXCLUDERANGE,               "\
    \nDHCP Server Scope Show ExcludeRange failed.\n"

    EMSG_SCOPE_SHOW_IPRANGE,                    "\
    \nDHCP Server Scope Show IP Range failed.\n"

    EMSG_SCOPE_SHOW_RESERVEDIP,                 "\
    \nDHCP Server Scope Show ReservedIP failed.\n"

    EMSG_SCOPE_SHOW_MIBINFO,                    "\
    \nDHCP Server Scope Show MIBInfo failed.\n"

    EMSG_SCOPE_SHOW_SCOPE,                      "\
    \nDHCP Server Scope Show Scope failed.\n"

    EMSG_SCOPE_SHOW_STATE,                      "\
    \nDHCP Server Scope Show State failed.\n"

    EMSG_SCOPE_SHOW_OPTIONVALUE,                "\
    \nDHCP Server Scope Show OptionValue failed.\n"

    EMSG_SCOPE_SHOW_RESERVEDOPTIONVALUE,        "\
    \nDHCP Server Scope Show ReservedOptionValue failed.\n"

    EMSG_SCOPE_INTERNAL_ERROR,                  "\
    \nAn internal error has occured while performing the operation."

    EMSG_SCOPE_DISPLAY_CLIENTS,                 "\
    \nDisplaying Client failed."

    EMSG_SCOPE_DEFAULT_LEASE_TIME,              "\
    \nFailed to set default lease duration for the IP Range. "
    
    EMSG_SCOPE_INVALID_EXCLUDERANGE,            "\
    \nThe Exclusion range supplied is invalid for the scope.\n"

    EMSG_SCOPE_INVALID_IPRANGE,                 "\
    \nThe IP range supplied is invalid\n"

    EMSG_SCOPE_INVALID_STARTADDRESS,            "\
    \nThe start address %1!s! is invalid for this scope.\n"
    
    EMSG_SCOPE_INVALID_ENDADDRESS,              "\
    \nThe end address %1!s! is invalid for this scope.\n"

    MSG_SCOPE_RANGE_START,                          "\nStart Address : %1!s!"

    MSG_SCOPE_RANGE_END,                            "\nEnd Address : %1!s!"

    MSG_SCOPE_IPRANGE,                              "\nIP Range : "

    MSG_SCOPE_EXCLUDERANGE,                         "\nExcludeRange : \n"

    MSG_SCOPE_RESERVEDIP,                           "\nReserved IP : %1!s!"

  	MSG_SCOPE_RESERVEDIP_HWADDRESS,                "%1!.2x!"


    MSG_DHCP,                                      "\nDHCP : "

    MSG_SCOPE_DHCP,                                 "\nDHCP"

    MSG_SCOPE_DHCPBOOTP,                            "\
    \nDHCPBOOTP Bootp Clients leased = %1!d!; Max Allowed BootpClients = %2!ld!"

    MSG_SCOPE_BOOTP,                                "\
    \nBOOTP     Bootp Clients leased = %1!d!; Max Allowed BootpClients = %2!ld!"
    
    MSG_SCOPE_IPADDRESS,                            "\n%1!ld! %2!- 16.16s! "

    MSG_SCOPE_FIX_REGISTRY,                         "\nFix Registry."

    MSG_SCOPE_FIX_DATABASE,                         "\nFix Database."

    MSG_SCOPE_FIX_UNKNOWN,                          "\nFix Unknown."

    MSG_MSCOPE_CLIENT_INFO,                         "\nClientInfo : "                                                        

    MSG_SCOPE_CLIENT_NAME,                          "\n\tName = %1!s!."

    MSG_SCOPE_CLIENT_COMMENT,                       "\n\tComment = %1!s!."

    MSG_SCOPE_CLIENT_TYPE,                          "\n\tType = %1!s!"

    MSG_SCOPE_CLIENT_HWADDRESS,                     "\n\tClient Unique Id = "

    MSG_SCOPE_CLIENT_HWADDRESS_FORMAT,              "%1!.2x!"

    MSG_SCOPE_CLIENT_IPADDRESS,                     "\n\tIPAddress = %1!s! "

    MSG_SCOPE_CLIENT_SUBNET_MASK,                   "\tSubnet Mask = %1!s! \n"

    MSG_SCOPE_CLIENT_DURATION_STR,                  "\
    \nNever expires (lease duration is infinite.)\n"

    MSG_SCOPE_CLIENT_DURATION_DATE_STARTS,          "\
    \nStarts = %1!s!"

    MSG_SCOPE_CLIENT_DURATION_DATE_EXPIRES,         "\
    \nExpires = %1!s! "

    MSG_SCOPE_CLIENT_STATE,                          "\
    \nState = %1!0x!"

    MSG_SCOPE_CLIENT,                                "\n%1!ld!\t %2!- 16.16s! %3!- 16.16s! "

    MSG_SCOPE_CLIENT_READ,                           "\nNum Client info read = %1!ld!."
    
    MSG_SCOPE_CLIENT_COUNT,                          "\nTotal Client count = %2!ld!"

    MSG_SCOPE_OWNER_NAME,                            "\nOwner Name = %1!s! "

    MSG_SCOPE_OWNER_NETBIOSNAME,                    "\nOwner NetBios Name = %1!s!"

    MSG_SCOPE_OWNER_IPADDRESS,                      "\nOwner IP Address = %1!s! "

    MSG_SCOPE_STATE_ACTIVE,                         "\
    \nCurrent State of the Scope %1!s! : Active\n"

    MSG_SCOPE_STATE_NOTACTIVE,                      "\
    \nCurrent State of the Scope %1!s! : Disabled\n"

    MSG_SCOPE_STATE_ACTIVE_SWITCHED,                "\
    \nCurrent State of the Scope %1!s! : Active (Switched) \n"

    MSG_SCOPE_STATE_NOTACTIVE_SWITCHED,             "\
    \nCurrent State of the Scope %1!s! : Disabled (Switched)\n"

    MSG_SCOPE_SERVER,                               "\
    \nCurrent Scope %1!s! in the Server %2!s!.\n"

    MSG_SCOPE_CLIENTS_COUNT,                        "\
    \n\nNo of Clients(version 4): %1!d! in the Scope : %2!s!.\n"

    MSG_SCOPE_CLIENTSV5_COUNT,                      "\
    \n\nNo of Clients(version 5): %1!d! in the Scope : %2!s!.\n"

    MSG_SCOPE_IPRANGE_COUNT,                        "\
    \nNo of IP Ranges : %1!d! in the Scope : %2!s!.\n"

    MSG_SCOPE_EXCLUDERANGE_COUNT,                   "\
    \nNo of ExcludeRanges : %1!d! in the Scope : %2!s!.\n"

    MSG_SCOPE_RESERVEDIP_COUNT,                     "\
    \nNo of ReservedIPs : %1!d! in the Scope : %2!s!.\n"

    MSG_SCOPE_OPTION_ALL,                           "\
    \nOptions for Scope %1!s!:\n"

    MSG_SCOPE_RESERVEDOPTION_ALL,                   "\
    \nOptions for the Reservation Address %2!s! in the Scope %1!s! :\n"

    MSG_SCOPE_IPRANGE_TABLE,                        "\
    \n=============================================================\
    \n   Start Address   -    End Address    -     Address Type    \
    \n=============================================================\n"

    MSG_SCOPE_IPRANGE_INFO_DHCP,                    "\
    %1!s!-%2!s!-  DHCP\n"

    MSG_SCOPE_IPRANGE_INFO_DHCPONLY,                "\
    %1!s!-%2!s!-  DHCP ONLY\n"

    MSG_SCOPE_IPRANGE_INFO_DHCPBOOTP,               "\
    %1!s!-%2!s!-  DHCP BOOTP\n"

    MSG_SCOPE_IPRANGE_INFO_BOOTP,                   "\
    %1!s!-%2!s!-  BOOTP ONLY\n"

    MSG_SCOPE_IPRANGE_INFO_UNKNOWN,                 "\
    %1!s!-%2!s!-  UNKNOWN\n"

    MSG_SCOPE_EXCLUDERANGE_TABLE,                   "\
    \n=======================================\
    \n   Start Address   -    End Address    \
    \n=======================================\n"

    MSG_SCOPE_EXCLUDERANGE_INFO,                    "\
    %1!s!-%2!s!\n"

    MSG_SCOPE_RESERVEDIP_TABLE,                     "\
    \n===============================================================\
    \n  Reservation Address -    Unique ID                           \
    \n===============================================================\n"

    MSG_SCOPE_RESERVEDIP_INFO,                      "\
    %1!s!-    %2!s!\n"


    MSG_SCOPE_CLIENT_TABLE,                         "\
    \nType : N - NONE, D - DHCP B - BOOTP, U - UNSPECIFIED, R - RESERVATION IP\
    \n==================================================================================\
    \nIP Address      - Subnet Mask    - Unique ID           - Lease Expires        -Type\
    \n==================================================================================\n"

    MSG_SCOPE_CLIENT_TABLE2,                        "\
    \nType : N - NONE, D - DHCP B - BOOTP, U - UNSPECIFIED, R - RESERVATION IP\
    \n============================================================================================\
    \nIP Address      - Subnet Mask    - Unique ID           - Lease Expires        -Type -Name   \
    \n============================================================================================\n"

    MSG_SCOPE_CLIENT_INFO,                          "\
    \n%1!s!-%2!s!- %3!s!-%5!s!-%4!s!"

    MSG_SCOPE_CLIENT_INFO_NEVER,                    "\
    \n%1!s!-%2!s!-%3!s!- NEVER EXPIRES        -%4!s!"

    MSG_SCOPE_CLIENT_INFO_INACTIVE,                 "\
    \n%1!s!-%2!s!-%3!s!- INACTIVE             -%4!s!"

    MSG_SCOPE_CLIENT_INFO2,                          "\
    \n%1!s!-%2!s!- %3!s!-%5!s!-%4!s!-  %6!s!"

    MSG_SCOPE_CLIENT_INFO2_NEVER,                    "\
    \n%1!s!-%2!s!-%3!s!- NEVER EXPIRES        -%4!s!-  %6!s!"

    MSG_SCOPE_CLIENT_INFO2_INACTIVE,                 "\
    \n%1!s!-%2!s!-%3!s!- INACTIVE             -%4!s!-  %6!s!"

    MSG_SCOPE_CHANGE_CONTEXT,                       "\
    \nChanged the current scope context to %1!s! scope.\n"

    HLP_MSCOPE_ADD_IPRANGE,                     "\
    add iprange                   - Adds a range of ip address for distribution\
    \n                                to the mscope."

    HLP_MSCOPE_ADD_IPRANGE_EX,                  "\
    \nTo create and add a range of IP addresses for distribution with the \
    \ncurrent multicast scope.  \
    \n \
    \nSyntax: \
    \n \
    \n        add iprange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address for the range. \
    \n \
    \n        EndIP          - Ending IP address for the range. \
    \n \
    \nNotes:         The additional range must be within the valid range of \
    \n               multicast IP addresses (from 224.0.0.0 to \
    \n               239.255.255.255).  \
    \n \
    \nExample:       add iprange 224.2.2.10 224.2.2.20 \
    \n \
    \n               This command adds the IP address range 224.2.2.10 to \
    \n               224.2.2.20 to the distribution range in the multicast \
    \n               scope.  \
    \n"
    
    HLP_MSCOPE_ADD_EXCLUDERANGE,                "\
    add excluderange              - Adds a range of exclusion address to the mscope."

    HLP_MSCOPE_ADD_EXCLUDERANGE_EX,             "\
    \nTo exclude a range of IP addresses from distribution by the multicast \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        add excluderange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address of the exclusion range. \
    \n \
    \n        EndIP          - Ending IP address of the exclusion range. \
    \n \
    \nNotes:         The exclusion range must be a subset of the overall \
    \n               scope range.  \
    \n \
    \nExample:       add excluderange 224.2.2.10 224.2.2.20 \
    \n \
    \n               This command adds an exclusion range starting with \
    \n               224.2.2.10 and ending with 224.2.2.20 from distribution \
    \n               for the current multicast scope.  \
    \n"

    HLP_MSCOPE_CHECK_DATABASE,                  "\
    initiate reconcile            - Checks, reconciles and verifies the multicast \
    \n                                scope's database."

    HLP_MSCOPE_CHECK_DATABASE_EX,               "\
    \nTo verify the current multicast scope and optionally fix \
    \ndatabase. Repairs if necessary.  \
    \n \
    \nSyntax: \
    \n \
    \n        initiate reconcile \
    \n \
    \nNotes:         This command checks the integrity of the current \
    \n               multicast scope by comparing the current contents of \
    \n               the server database with a mirrored copy of the same \
    \n               information in the Windows registry. If inconsistencies \
    \n               are detected in the database they can be repaired based \
    \n               on the same information that is duplicated in the \
    \n               registry.  \
    \n               Always tries and fixes any inconsistency found. \
    \n"

    HLP_MSCOPE_DELETE_IPRANGE,                    "\
    delete iprange                - Deletes an IP range for distribution from\
    \n                                the mscope."

    HLP_MSCOPE_DELETE_IPRANGE_EX,               "\
    \nTo delete a range of IP addresses and resize the overall range of the \
    \ncurrent multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        delete iprange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address of the range to be \
    \n                         deleted.  \
    \n \
    \n        EndIP          - Ending IP address of the range to be \
    \n                         deleted.  \
    \n \
    \nExample:       delete iprange 224.2.2.10 224.2.2.20 \
    \n \
    \n               This command deletes the IP address range 224.2.2.10 to \
    \n               224.2.2.20 from the overall range of the full multicast \
    \n               scope.  \
    \n"

    HLP_MSCOPE_DELETE_EXCLUDERANGE,             "\
    delete excluderange           - Deletes an exclusion range from the mscope."

    HLP_MSCOPE_DELETE_EXCLUDERANGE_EX,          "\
    \nTo delete a currently set exclusion range from the list for the \
    \ncurrent multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        delete excluderange <StartIP> <EndIP> \
    \n \
    \nParameters: \
    \n \
    \n        StartIP        - Starting IP address of the exclusion range. \
    \n \
    \n        EndIP          - Ending IP address of the exclusion range. \
    \n \
    \nExample:       delete excluderange 224.2.2.10 224.2.2.20 \
    \n \
    \n               This command removes multicast scope exclusion of a \
    \n               range of IP addresses starting at 224.2.2.10 and ending \
    \n               with 224.2.2.20 for the multicast scope.  \
    \n"

    HLP_MSCOPE_DELETE_OPTIONVALUE,              "\
    delete optionvalue            - Deletes the value set for a particular option."

    HLP_MSCOPE_DELETE_OPTIONVALUE_EX,           "\
    \nTo delete a specific option value from the scope. \
    \n \
    \nSyntax: \
    \n \
    \n        delete optionvalue <OptCode> [user=UserName] \
    \n        [vendor=VendorName]  \
    \n \
    \nParameters: \
    \n \
    \n        OptCode        - ID of the option whose value to be deleted.  \
    \n \
    \n        UserName       - To delete the options for the current default \
    \n                         user class or the class specified as \
    \n                         UserName. If this parameter is used, the \
    \n                         user= tag must be provided.   \
    \n \
    \n        VendorName     - To delete the options for the current default \
    \n                         vendor class or the class specified as \
    \n                         VendorName. If this parameter is used, the \
    \n                         vendor= tag must be provided.  \
    \n \
    \nNotes:         Vendor and user classes are only supported for Windows \
    \n               2000 DHCP servers. To modify the current defaults for \
    \n               an unspecified class used with this command, use either \
    \n               the Set userclass or Set vendorclass commands.  \
    \n \
    \nExample:       delete optionvalue 18 \
    \n               delete optionvalue 18 vendor=""MyVendorClass"" \
    \n \
    \n               This first command example deletes the currently set \
    \n               option value for option code 18 from the current \
    \n               multicast scope. The second example resets the current \
    \n               option value for option code 18 for the specified vendor \
    \n               class MyVendorClass. This affects only those mscope clients \
    \n               identified as members of this vendor class.  \
    \n"

    HLP_MSCOPE_SET_COMMENT,                     "\
    set comment                   - Sets the comment for the mscope."

    HLP_MSCOPE_SET_COMMENT_EX,                  "\
    \nTo set a new comment for the mscope. \
    \n \
    \nSyntax: \
    \n \
    \n        set comment [NewComment] \
    \n \
    \nParameters: \
    \n \
    \n        NewComment     - The new or revised comment for the multicast \
    \n                         scope(Optional). \
    \n \
    \nExamples:      set comment NewCommentNoSpaces \
    \n               set comment ""New Comment With Spaces"" \
    \n \
    \n               The examples show how the comment for the current \
    \n               multicast scope can be modified to set a comment string \
    \n               comment that has no spaces or one that includes spaces \
    \n               if characters are enclosed within quotation marks.  \
    \n"
    
    HLP_MSCOPE_SET_NAME,                        "\
    set name                      - Sets the name of the mscope."

    HLP_MSCOPE_SET_NAME_EX,                     "\
    \nTo set a new name of the multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set name <NewName> \
    \n \
    \nParameters: \
    \n \
    \n        NewName        - The new name for the current multicast \
    \n                         scope.  \
    \n \
    \nExamples:      set name NewNameNoSpaces \
    \n               set name ""New Name With Spaces""\
    \n \
    \n               The examples show how the name for the current \
    \n               multicast scope can be modified to use a name that is \
    \n               either a single word or several words specified within \
    \n               quotation marks.  \
    \n"

    HLP_MSCOPE_SET_MSCOPE,                       "\
    set mscope                    - Sets the mscope for subsequent operations."

    HLP_MSCOPE_SET_MSCOPE_EX,                    "\
    \nTo set the current multicast scope for use in subsequent command \
    \noperations.  \
    \n \
    \nSyntax: \
    \n \
    \n        set mscope <NewName> \
    \n \
    \nParameters: \
    \n \
    \n        NewName        - Name of the multicast scope (case sensitive).  \
    \n \
    \nExample:       set mscope MyNewMscope \
    \n \
    \n               This command sets the current multicast scope to \
    \n               MyNewMscope for subsequent operations. \
    \n"

    HLP_MSCOPE_SET_STATE,                       "\
    set state                     - Sets/Resets the activation state of the mscope."
    
    HLP_MSCOPE_SET_STATE_EX,                    "\
    \nTo activate or deactivate the current multicast scope. \
    \n \
    \nSyntax:		 \
    \n \
    \n        set state [1|0] \
    \n \
    \nNotes:         A value of 1 activates the current multicast scope \
    \n               (default).  A value of 0 deactivates the current \
    \n               multicast scope.  \
    \n \
    \nExamples:      set state 1 \
    \n               set state 0 \
    \n                \
    \n"

    HLP_MSCOPE_SET_OPTIONVALUE,                 "\
    set optionvalue               - Sets the value for a particular option."

    HLP_MSCOPE_SET_OPTIONVALUE_EX,              "\
    \nUsage   : set optionvalue <optionID> <valueType> [user=userName]\
    \n                          [vendor= vendorName] <optionValue>\
    \n          optionID    : Unique identifier for the Option whose \
    \n                        value to be set. \
    \n          valueType   : Data type of the option. Should be either\
    \n                        of the following: \
    \n                        BYTE | WORD | DWORD | STRING | IPADDRESS \
    \n          userName    : To set the user class name to userName for this \
    \n                        command(Optional). Tag user= must be provided.\
    \n                        (default is the global userName set by using \
    \n                        Set userclass). Applicable for NT50 servers only.\
    \n          vendorName  : To set the vendor class name to vendorName for this\
    \n                        command(Optional). Tag vendor= must be provided.\
    \n                        (default is the global vendorName set by using\
    \n                        Set vendorclass). Applicable for NT50 servers only.\
    \n          optionValue : The new value of the option identified by the\
    \n                        optionID and should be of type <valueType>. \
    \nPurpose : Sets the value for a option for the MultiCast Scope under the \
    \n          DHCP Server.\
    \nExample : \
    \n          1. \
    \n          set optionvalue 003 IPADDRESS vendor=Vendor1 1.1.1.1 1.1.1.2 1.1.1.3\
    \n          will set the value of the option with ID 003(ROUTER) for the vendor\
    \n          class Vendor1(Vendor Class Vendor1 and Option 003 for Vendor1 must\
    \n          be defined already) and of type IPADDRESS to the values given\
    \n          for the current Multicast scope.\
    \n          2. \
    \n          set optionvalue 003 IPADDRESS 1.1.1.1 1.1.1.2 1.1.1.3\
    \n          will set the value of the option with ID 003(ROUTER)(Dhcp Standard\
    \n          option) and of type IPADDRESS to the values given for the current\
    \n          multicast scope.\n"


    HLP_MSCOPE_SET_TTL,                         "\
    set ttl                       - Sets the TTL value for the MScope."

    HLP_MSCOPE_SET_TTL_EX,                      "\
    \nTo set the Time-to_live (TTL) value for use with the current multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set ttl <TTL> \
    \n \
    \nParameters: \
    \n \
    \n        TTL            - The Time-to-Live (TTL) value to be set. The \
    \n                         valid range for this value is a number from 1 \
    \n                         to 255.  \
    \n \
    \nExample:       set ttl 32 \
    \n \
    \n               This command will set the TTL value for the current \
    \n               multicast scope to 32.  \
    \n"

    HLP_MSCOPE_SET_LEASE,                       "\
    set lease                     - Sets the lease duration for the IP addresses."

    HLP_MSCOPE_SET_LEASE_EX,                    "\
    \nTo set the lease duration for multicast scope IP addresses. \
    \n \
    \nSyntax: \
    \n \
    \n        set lease <Time> \
    \n \
    \nParameters: \
    \n \
    \n        Time           - Lease duration for clients of the multicast \
    \n                         scope. -1 will set the duration for the IP \
    \n                         Address Leases to unlimited or infinite. \
    \n\
    \n \
    \nExample:       set lease 691200 \
    \n \
    \n               This command sets the lease duration for the clients of \
    \n               the current multicast scope to 691200 seconds (8 days). \
    \n"


    HLP_MSCOPE_SHOW_CLIENTS,                    "\
    show clients                  - Displays all available clients for the mscope."

    HLP_MSCOPE_SHOW_CLIENTS_EX,                 "\
    \nTo enumerate and display all clients for the current multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show clients \
    \n \
    \nNotes:         To view the output of this command effectively, \
    \n               increase the width of the command window to at least 95 \
    \n               pixels.  \
    \n"

    HLP_MSCOPE_SHOW_IPRANGE,                    "\
    show iprange                  - Displays all available IP ranges for the mscope."

    HLP_MSCOPE_SHOW_IPRANGE_EX,                 "\
    \nTo display all IP address ranges available for distribution for the \
    \ncurrent multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show iprange \
    \n \
    \nNotes:         This command displays all available IP address ranges \
    \n               for the current multicast scope. \
    \n"

    HLP_MSCOPE_SHOW_MIBINFO,                    "\
    show mibinfo                  - Displays MIBInfo for the mscope."

    HLP_MSCOPE_SHOW_MIBINFO_EX,                   "\
    \nTo display the Management Information Base (MIB) information for the \
    \ncurrent multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show mibinfo \
    \n \
    \nNotes:         This command displays the DHCP management information \
    \n               base (MIB) information for the current multicast \
    \n               scope.  \
    \n"

    HLP_MSCOPE_SHOW_EXCLUDERANGE,                 "\
    show excluderange             - Displays all available exclusion ranges for\
    \n                                the mscope."

    HLP_MSCOPE_SHOW_EXCLUDERANGE_EX,              "\
    \nTo display all available exclusion ranges for the mscope. \
    \n \
    \nSyntax: \
    \n \
    \n        show excluderange \
    \n \
    \nNotes:         This command displays all currently set exclusion \
    \n               ranges for the current multicast scope. If no exclusion \
    \n               ranges have been previously defined for the scope, the \
    \n               command output is an empty list.  \
    \n"

    HLP_MSCOPE_SHOW_MSCOPE,                        "\
    show mscope                   - Displays the current mscope."

    HLP_MSCOPE_SHOW_MSCOPE_EX,                     "\
    \nTo display the current multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show mscope \
    \n \
    \nNotes:         Displays information about the current multicast \
    \n               scope. \
    \n"

    HLP_MSCOPE_SHOW_STATE,                        "\
    show state                    - Displays the current activation state of\
    \n                                the mscope."

    HLP_MSCOPE_SHOW_STATE_EX,                     "\
    \nTo display the current activation state of the multicast scope.  \
    \n \
    \nSyntax: \
    \n \
    \n         show state \
    \n \
    \nNotes:         This command displays state for the current multicast \
    \n               scope, which indicates whether the scope is active or \
    \n               inactive.  \
    \n"

    HLP_MSCOPE_SHOW_OPTIONVALUE,                  "\
    show optionvalue              - Displays all the options whose values are set\
    \n                                for the MScope."

    HLP_MSCOPE_SHOW_OPTIONVALUE_EX,               "\
    \nUsage   : show optionvalue [all] or <[user=userName] [vendor=vendorName]>\
    \n          all         : To display all Option values set including those for\
    \n                        the user classes and vendor classes.\
    \n          userName    : To display the option values set for the user class \
    \n                        userName(Optional). Tag user= must be provided.\
    \n                        (default is the global userName set by using \
    \n                        Set userclass). Applicable only to NT50 Servers.\
    \n          vendorName  : To display the option values set for the vendor class \
    \n                        vendorName(Optional). Tag vendor= must be provided.\
    \n                        (default is the global vendorName set by using \
    \n                        Set vendorclass). Applicable only to NT50 Servers.\
	\nPurpose : To enumerate and display all options whose values are set for the \
    \n          current MultiCast Scope for the DHCP Server.\
    \nExample : show optionvalue\
    \n          To enumerate and display all Global option values set for the\
    \n          current DHCP Server.\n"    


    HLP_MSCOPE_SHOW_TTL,                          "\
    show ttl                      - Displays the TTL value for the MScope."

    HLP_MSCOPE_SHOW_TTL_EX,                       "\
    \nTo display the Time-to-Live (TTL) value for use with the current \
    \nmulticast scope.  \
    \n \
    \nSyntax: \
    \n \
    \n        show ttl \
    \n \
    \nNotes:         This command displays the current TTL value for the \
    \n               current multicast scope. \
    \n"

    HLP_MSCOPE_SHOW_LEASE,                        "\
    show lease                    - Displays the lease duration for the clients."

    HLP_MSCOPE_SHOW_LEASE_EX,                     "\
    \nTo display the current lease duration settings for the multicast \
    \nscope.  \
    \n \
    \nSyntax: \
    \n \
    \n        show lease \
    \n \
    \nNotes:         This command displays the current lease duration \
    \n               settings for the current multicast scope. \
    \n"
    
    DMP_MSCOPE_ADD_IPRANGE,               "\
    \nDhcp server %1!s! MScope %2!s! Add Iprange %3!s! %4!s! %5!d!"

    DMP_MSCOPE_ADD_EXCLUDERANGE,              "\
    \nDhcp server %1!s! MScope %2!s! Add Excluderange %3!s! %4!s!"

    DMP_MSCOPE_DELETE_IPRANGE,                "\
    \nDelete iprange = %1!s! - %2!s! from the mscope = %3!s!\n"

    DMP_MSCOPE_DELETE_EXCLUDERANGE,           "\
    \nDelete excluderange = %1!s! - %2!s! from the mscope = %3!s!\n"

    DMP_MSCOPE_CHECK_DATABASE,                "\
    \nChecks the integrity of the database for the mscope = %1!s!\n"

    DMP_MSCOPE_SET_COMMENT,                   "\
    \nSet the comment to %1!s! for the mscope %2!s! \n"

    DMP_MSCOPE_SET_NAME,                      "\
    \nSet the name to %1!s! for the mscope %2!s! \n"

    DMP_MSCOPE_SET_STATE,                     "\
    \nDhcp server %1!s! MScope %2!s! set state %3!d! \n"

    DMP_MSCOPE_SET_MSCOPE,                     "\
    \nSet the the current mscope to %1!s! \n"

    DMP_MSCOPE_SHOW_CLIENTS,                  "\
    \nShow all clients for the mscope %1!s!\n"

    DMP_MSCOPE_SHOW_IPRANGE,                  "\
    \nShow all IP ranges available to the mscope %1!s!\n"

    DMP_MSCOPE_SHOW_MIBINFO,                  "\
    \nShow MIBInfo for the mscope %1!s!. "

    DMP_MSCOPE_SHOW_EXCLUDERANGE,             "\
    \nShow all exclusion ranges for the mscope %1!s! "

    DMP_MSCOPE_SHOW_MSCOPE,                    "\
    \nShow the current mscope %1!s!\n"
    
    DMP_MSCOPE_SHOW_STATE,                    "\
    \nShow current state of the mscope %1!s!\n"
 

    EMSG_MSCOPE_INVALID_MSCOPE_NAME,        "\
    \nThe command needs a valid MScope Name for the Server.\n"

    EMSG_MSCOPE_NO_MSCOPENAME,                   "\
    \nA valid MScope name needs to be provided.\n"


    EMSG_MSCOPE_ADD_IPRANGE,                     "\
    \nDHCP Server MScope Add IPRange failed.\n"

    EMSG_MSCOPE_ADD_EXCLUDERANGE,                "\
    \nDHCP Server MScope Add ExcludeRange failed.\n"

    EMSG_MSCOPE_DELETE_IPRANGE,                  "\
    \nDHCP Server MScope Delete IPRange failed.\n"

    EMSG_MSCOPE_DELETE_EXCLUDERANGE,             "\
    \nDHCP Server MScope Delete ExcludeRange failed.\n"
  
    EMSG_MSCOPE_CHECK_DATABASE,                  "\
    \nDHCP Server MScope initiate reconcile failed.\n"

    EMSG_MSCOPE_SET_COMMENT,                     "\
    \nDHCP Server MScope Set Comment failed.\n"

    EMSG_MSCOPE_SET_NAME,                        "\
    \nDHCP Server MScope Set Name failed.\n"

    EMSG_MSCOPE_SET_MSCOPE,                      "\
    \nDHCP Server MScope Set MScope failed.\n"

    EMSG_MSCOPE_SET_STATE,                       "\
    \nDHCP Server MScope Set State failed.\n"

    EMSG_MSCOPE_SET_TTL,                         "\
    \nDhcp Server MScope Set TTL failed.\n"

    EMSG_MSCOPE_SET_LEASE,                       "\
    \nDhcp Server MScope Set Lease failed.\n"
    

    EMSG_MSCOPE_SHOW_CLIENTS,                    "\
    \nDhcp Server MScope Show Clients failed.\n"

    EMSG_MSCOPE_SHOW_EXCLUDERANGE,               "\
    \nDhcp Server MScope Show ExcludeRange failed.\n"

    EMSG_MSCOPE_SHOW_IPRANGE,                    "\
    \nDhcp Server MScope Show IPRange failed.\n"

    EMSG_MSCOPE_SHOW_MIBINFO,                    "\
    \nDhcp Server MScope Show MIBInfo failed.\n"

    EMSG_MSCOPE_SHOW_MSCOPE,                      "\
    \nDhcp Server MScope Show MScope failed.\n"

    EMSG_MSCOPE_SHOW_STATE,                      "\
    \nDhcp Server MScope Show State failed.\n"

    EMSG_MSCOPE_SHOW_TTL,                        "\
    \nDhcp Server MScope Show TTL failed.\n"

    EMSG_DHCP_ERROR_TEXT,                        "\
    \nError : "


    EMSG_MSCOPE_SHOW_LEASE,                      "\
    \nDhcp Server MScope Show Lease failed.\n"

    EMSG_MSCOPE_IPRANGE_VERIFY,                  "\
    \nMScope Exclusion address range can not be verified.\n"

    EMSG_MSCOPE_LEASE_NOTSET,                    "\
    \nLease duration is not set for the MScope.\n"

    MSG_MSCOPE_MIB,                           "\nMIBCounts:"

    MSG_MSCOPE_MIB_DISCOVERS,                 "\n\tDiscovers = %1!d!"
    
    MSG_MSCOPE_MIB_OFFERS,                    "\n\tOffers = %1!d!"

    MSG_MSCOPE_MIB_REQUESTS,                  "\n\tRequests = %1!d!"

    MSG_MSCOPE_MIB_ACKS,                      "\n\tAcks = %1!d!"

    MSG_MSCOPE_MIB_NAKS,                      "\n\tNaks = %1!d!"

    MSG_MSCOPE_MIB_DECLINES,                  "\n\tDeclines = %1!d!"

    MSG_MSCOPE_MIB_RELEASES,                  "\n\tReleases = %1!d!"

    MSG_MSCOPE_MIB_INFORMS,                   "\n\tInforms = %1!d! "
    
    MSG_MSCOPE_MIB_RECONFIGURES,              "\n\tReconfigures = %1!d! "

    MSG_MSCOPE_MIB_SERVERSTARTTIME,           "\n\
    \tServerStartTime = %1!s! "

    MSG_MSCOPE_MIB_SCOPES,                    "\n\tScopes = %1!d!"

    MSG_MSCOPE_MIB_MSCOPEID,                  ""

    MSG_MSCOPE_MIB_MSCOPENAME,                "\n\tMScopeName = %1!s! "

    MSG_MSCOPE_MIB_SCOPES_SUBNET_NUMADDRESSESINUSE,  "\n\
    \t\tNo. of Addresses in use = %1!d!."

    MSG_MSCOPE_MIB_SCOPES_SUBNET_NUMADDRESSESFREE,   "\n\
    \t\tNo. of free Addresses = %1!d!."   

    MSG_MSCOPE_MIB_SCOPES_SUBNET_NUMPENDINGOFFERS,   "\n\
    \t\tNo. of pending offers = %1!d!."

    
    MSG_MSCOPE_CLIENTS_COUNT,                        "\
    \nNo of Clients : %1!d! in the MScope : %2!s!.\n"

    MSG_MSCOPE_IPRANGE_COUNT,                        "\
    \nNo of IP Ranges : %1!d! in the MScope : %2!s!.\n"

    MSG_MSCOPE_EXCLUDERANGE_COUNT,                   "\
    \nNo of ExcludeRanges : %1!d! in the MScope : %2!s!.\n"

    MSG_MSCOPE_MSCOPE,                               "\
    \nCurrent Multicast Scope : %1!s!, Server : %2!s!\n"

    MSG_MSCOPE_STATE_ACTIVE,                         "\
    \nThe current State of the MScope %1!s! : Active \n" 

    MSG_MSCOPE_STATE_NOTACTIVE,                      "\
    \nThe current State of the MScope %1!s! : Disabled \n"

    MSG_MSCOPE_OPTION_ALL,                           "\
    \nOptions for Multicast Scope %1!s!:\n"

    MSG_MSCOPE_CHANGE_CONTEXT,                      "\
    \nChanged the current mscope context to %1!s! mscope.\n"

    MSG_MSCOPE_TTL,                                 "\
    \nTTL value for the current MScope is %1!d!\n"

    MSG_MSCOPE_LEASE,                               "\
    \nLease duration for the clients of the MScope is %1!s!( day:hour:minute)\n"

    MSG_MSCOPE_INFINITE_LEASE,                      "\
    \nMulticast scope's IP Address Leases do not expire.\n"

    DMP_SCOPE_ADD_IPRANGES_HEADER,                  "\
    \n   # ======================================================================\
    \n   #  Start Add Ipranges to the Scope %2!s!, Server %1!s!                  \
    \n   # ======================================================================\n"

    DMP_SCOPE_ADD_IPRANGES_FOOTER,                  "\
    \n   # ======================================================================\
    \n   #  End   Add Ipranges to the Scope %2!s!, Server %1!s!                  \
    \n   # ======================================================================\n"
    
    DMP_SCOPE_ADD_EXCLUDERANGES_HEADER,                  "\
    \n   # ======================================================================\
    \n   #  Start Add Excluderanges to the Scope : %2!s!, Server : %1!s!         \
    \n   # ======================================================================\n"

    DMP_SCOPE_ADD_EXCLUDERANGES_FOOTER,                  "\
    \n   # ======================================================================\
    \n   #  End   Add Excluderanges to the Scope : %2!s!, Server : %1!s!         \
    \n   # ======================================================================\n"

    DMP_SCOPE_SET_OPTIONVALUE_HEADER,                    "\
    \n   # ======================================================================\
    \n   #  Start Add OptionValues to the Scope : %2!s!, Server : %1!s!          \
    \n   # ======================================================================\n"
    DMP_SCOPE_SET_OPTIONVALUE_FOOTER,                    "\
    \n   # ======================================================================\
    \n   #  End   Add OptionValues to the Scope : %2!s!, Server : %1!s!          \
    \n   # ======================================================================\n"

    DMP_SCOPE_SET_RESERVEDIP_HEADER,                     "\
    \n   # ======================================================================\
    \n   #  Start Add ReservedIp to the Scope : %2!s!, Server : %1!s!            \
    \n   # ======================================================================\n"

    DMP_SCOPE_SET_RESERVEDIP_FOOTER,                    "\
    \n   # ======================================================================\
    \n   #  End   Add ReservedIp to the Scope : %2!s!, Server : %1!s!            \
    \n   # ======================================================================\n"

    DMP_MSCOPE_ADD_IPRANGES_HEADER,                     "\
    \n   # ======================================================================\
    \n   #  Start Add Ipranges to the MScope %2!s!, Server %1!s!                 \
    \n   # ======================================================================\n"

    DMP_MSCOPE_ADD_IPRANGES_FOOTER,                     "\
    \n   # ======================================================================\
    \n   #  Start Add Ipranges to the MScope %2!s!, Server %1!s!                 \
    \n   # ======================================================================\n"
    
    DMP_MSCOPE_ADD_EXCLUDERANGES_HEADER,                "\
    \n   # ======================================================================\
    \n   #  Start Add Excluderanges to the MScope : %2!s!, Server : %1!s!        \
    \n   # ======================================================================\n"
    DMP_MSCOPE_ADD_EXCLUDERANGES_FOOTER,                "\
    \n   # ======================================================================\
    \n   #  End   Add Excluderanges to the MScope : %2!s!, Server : %1!s!        \
    \n   # ======================================================================\n"

    HLP_MSCOPE_SET_EXPIRY,                              "\
    set scopelife                 - Sets the expiry lifetime for the scope."

    HLP_MSCOPE_SET_EXPIRY_EX,                           "\
    \nTo set the lifetime value for the multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        set scopelife <Time> \
    \n \
    \nParameters: \
    \n \
    \n        Time           - The time value after which the scope expires. \
    \n                         A value of zero indicates scope never expires. \
    \n                         This value is specified in hours. \
    \n \
    \nExamples:      set scopelife 24 \
    \n \
    \n               This command will set the multicast scope to expire in \
    \n               a day. \
    \n"

    HLP_MSCOPE_SHOW_EXPIRY,                      "\
    show scopelife                - Displays the expiry time for the scope."

    HLP_MSCOPE_SHOW_EXPIRY_EX,                   "\
    \nTo show the expiry time for the current multicast scope. \
    \n \
    \nSyntax: \
    \n \
    \n        show scopelife \
    \n \
    \n"

    EMSG_MSCOPE_SET_EXPIRY,                      "\
    \nDhcp Server MScope Set ScopeLife failed.\n"

    EMSG_MSCOPE_SHOW_EXPIRY,                     "\
    \nDhcp Server MScope Show ScopeLife failed.\n"

    MSG_MSCOPE_EXPIRY,                           "\
    \nExpiry Life time for MScope is %1!s! \n"

    MSG_MSCOPE_INFINITE_EXPIRATION,              "\
    \nMulticast scope does not expire.\n"

    DMP_SRVR_MSCOPE_SET_EXPIRY,                  "\n\
    \nDhcp Server %1!s! MScope ""%2!s!"" Set ScopeLife %3!u! %4!u!\n\n"

}

#include <windows.h>
#include <ntverp.h>

#define VER_FILETYPE              VFT_DLL
#define VER_FILESUBTYPE           VFT2_UNKNOWN
#define VER_FILEDESCRIPTION_STR   "DHCP Monitor Dll"
#define VER_INTERNALNAME_STR      "dhcpmon.dll"
#define VER_ORIGINALFILENAME_STR  "dhcpmon.dll"

#include "common.ver"   // NT5.0 version file.

