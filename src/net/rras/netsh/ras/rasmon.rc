/*++

Copyright (c) 1996 Microsoft Corporation

Module Name:

    ipmon.rc

Abstract:

    IP Router Console Monitor Resources

Author:

    Stefan Solomon  01/04/1996

Revision History:


--*/

#include    "strdefs.h"

STRINGTABLE
{
    MSG_NULL,                               ""

    HLP_RAS_HELP1,    "Displays help.\n"

    HLP_RAS_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\nRemarks: Displays help.\n\n"

    HLP_RAS_DUMP,   "Dumps RAS configuration info in script form.\n"
    
    HLP_RAS_DUMP_EX                                                   "\
\n%1!s!                                                                \
\n                                                                     \
\n       Dumps RAS configuration information in script form.           \
\n\n"

    HLP_SHOW_SERVERS,     "Listens for RAS server advertisements.\n"
    HLP_SHOW_SERVERS_EX                                             "\
\n%1!s!                                                              \
\n                                                                   \
\n       Listens for RAS server advertisements.                      \
\n\n"

    HLP_SHOW_CLIENT,      "Shows RAS clients connected to this machine.\n"

    HLP_SHOW_CLIENT_EX,                                             "\
\n%1!s!                                                              \
\n                                                                   \
\n       Displays the RAS clients connected to this machine.         \
\n\n"


    HLP_GROUP_ADD,        "Adds items to a table.\n"
    HLP_GROUP_DEL,        "Removes items from a table.\n"
    HLP_GROUP_SET,        "Sets configuration information.\n"
    HLP_GROUP_SHOW,       "Displays information.\n"
    HLP_GROUP_ENABLE,     "Enables options.\n"
    HLP_GROUP_DISABLE,    "Disables options.\n"

    HLP_TRACE_SHOW, "Shows whether extended tracing is enabled for components.\n"
    HLP_TRACE_SET,  "Enables/disables extended tracing for a component.\n"

    HLP_RASFLAG_SHOW,     "Displays the state of a RAS server flag.\n"
    HLP_RASFLAG_SET,      "Sets or clears a RAS server flag.\n"

    HLP_RASUSER_SHOW,     "Displays RAS properties for a user(s).\n"

    HLP_RASUSER_SET,      "Sets the RAS properties of a user.\n"
    
    HLP_DOMAIN_REGISTER,"Registers the given Windows 2000 computer as a RAS \
\n                  server in the Active Directory of the given domain.\n"

    HLP_DOMAIN_UNREGISTER,"Un-registers the given Windows 2000 computer as a \
\n                    RAS server in the Active Directory of the given  \
\n                    domain.                                          \n"

    HLP_DOMAIN_SHOWREG,"Displays whether a computer is registered as a   \
\n                    RAS server in the Active Directory of the given  \
\n                    domain.                                          \n"

    HLP_TRACE_SHOW_EX,                                                      "\
\n  %1!s! [ [component = ] component ]                                         \
\n                                                                             \
\n    Shows whether tracing for the given component is enabled.  If no         \
\n    component is specified, shows the state of all components.               \
\n                                                                             \
\n    component - the component                                                 \
\n\n"

    HLP_TRACE_SET_EX,                                                         "\
\n  %1!s! [component = ] component [state = ] ENABLED|DISABLED                 \
\n                                                                             \
\n    Enables or disables extended tracing for the given component.            \
\n                                                                             \
\n    component - the component (use '*' to denote all components)              \
\n\n"

    HLP_RASFLAG_SHOW_EX,                                                      "\
\n  %1!s! [ [flag = ] flag ]                                            \
\n                                                                             \
\n    Displays the state of the RAS server flag.  If no flag is given,         \
\n    the state of all flags will be displayed.                                \
\n                                                                             \
\n    flag - The server flag to show which can be one of the following:        \
\n                                                                             \
\n      UseCallbackDelay:        Delay before calling back a client.           \
\n      UseSwCompression:        Enable software compression.                  \
\n      NegotiateSPAP:           Allow SPAP authentication.                    \
\n      RequireEncryption:       Require clients to employ data encryption.    \
\n      NegotiateMSCHAP:         Allow MSCHAP authentication.                  \
\n      UseLcpExtensions:        Use LCP extensions.                           \
\n      NegotiateMultilink:      Allow multilinked calls.                      \
\n      AuthenticatePeer:        Enable mutual auth. for router interfaces.    \
\n      RequireStrongEncryption: Require clients to employ strong encryption.  \
\n      NegotiateBacp:           Allow BACP negotiation.                       \
\n      NegotiateEAP:            Allow EAP authentication.                     \
\n      NegotiatePAP:            Allow PAP authentication.                     \
\n      NegotiateMD5CHAP:        Allow MD5CHAP authentication.                 \
\n      RequireIPSEC:            Require IPSEC when L2TP call is requested.    \
\n      DisableEncryption:       Do not negotiate data encryption.             \
\n      Require56BitEncryption:  Require clients to employ 56 bit encryption.  \
\n      UseLmPassword:           Use LM password.                              \
\n      NegotiateStrongMSCHAP:   Allow MSCHAP version 2 authentication.        \
\n      NoCallback:              Never callback                                \
\n\n"

    HLP_RASFLAG_SET_EX,                                                 "\
\n  %1!s! [flag = ] flag [ [state = ] ENABLED|DISABLED ]                 \
\n                                                                       \
\n      Enables the RAS server flag.                                     \
\n                                                                       \
\n      For a list of available flags, see the help for 'show rasflag'   \
\n      command.                                                         \
\n                                                                       \
\n      If no state is provided, ENABLED is assumed.                     \
\n"

    HLP_RASFLAG_AUTHMODE_SET, "Sets the authentication mode.\n"

    HLP_RASFLAG_AUTHMODE_SET_EX,                                         "\
\n%1!s! [mode = ] STANDARD|NODCC|BYPASS                                  \
\n                                                                       \
\n   Sets the mode that determines whether and when dialin clients should\
\n   be authenticated.                                                   \
\n                                                                       \
\n   mode - The mode                                                     \
\n     STANDARD - All devices need to be authenticated.                  \
\n     NODCC    - Direct-connect devices are not authenticated.          \
\n     BYPASS   - Authentication is not required for any device.         \
\n"

    HLP_RASFLAG_AUTHMODE_SHOW, "Shows the authentication mode.\n"

    HLP_RASFLAG_AUTHMODE_SHOW_EX,                                       "\
\n%1!s!                                                                  \
\n                                                                       \
\n   Shows the authentication mode.                                      \
\n"

    HLP_RASFLAG_AUTHTYPE_ADD, "Adds types of authentication the RAS server will negotiate.\n"
    
    HLP_RASFLAG_AUTHTYPE_ADD_EX,                                        "\
\n%1!s! [type = ] PAP|SPAP|MD5CHAP|MSCHAP|MSCHAPv2|EAP                   \
\n                                                                       \
\nSelects the types of authentication which this RAS server will         \
\nattempt to negotiate.  Negotiation will be in the order most-secure to \
\nleast-secure.  Once both client and server agree upon an authentication\
\ntype, the PPP negotiation will follow the appropriate RFCs.            \
\n                                                                       \
\n   type - the type                                                     \
\n     PAP      - Password Authentication Protocol (clear text).         \
\n     SPAP     - Shiva Password Authentication Protocol.                \
\n     MD5CHAP  - Challenge Handshake Authentication Protocol using      \
\n                Message Digest 5 hashing scheme to encrypt the response.\
\n     MSCHAP   - Microsoft Challenge-Handshake Authentication Protocol. \
\n     MSCHAPv2 - Version 2 of MSCHAP.                                   \
\n     EAP      - Extensible Authentication Protocol.                    \
\n"
    
    HLP_RASFLAG_AUTHTYPE_DEL, "Deletes an authentication type from the RAS server.\n"
    
    HLP_RASFLAG_AUTHTYPE_DEL_EX,                                         "\
\n%1!s! [type = ] PAP|SPAP|MD5CHAP|MSCHAP|MSCHAPv2|EAP                   \
\n                                                                       \
\n   Deletes an authentication type from the list of types that the RAS  \
\n   server will negotiate.                                              \
\n                                                                       \
\n   type - the type                                                     \
\n     PAP      - Password Authentication Protocol (clear text).         \
\n     SPAP     - Shiva Password Authentication Protocol.                \
\n     MD5CHAP  - Challenge Handshake Authentication Protocol using      \
\n                Message Digest 5 hashing scheme to encrypt the response.\
\n     MSCHAP   - Microsoft Challenge-Handshake Authentication Protocol. \
\n     MSCHAPv2 - Version 2 of MSCHAP.                                   \
\n     EAP      - Extensible Authentication Protocol.                    \
\n"

    HLP_RASFLAG_AUTHTYPE_SHOW, "Displays the authentication types currently enabled.\n"
    
    HLP_RASFLAG_AUTHTYPE_SHOW_EX,                                        "\
\n%1!s!                                                                  \
\n                                                                       \
\n   Displays the authentication type(s) currently enabled.              \
\n                                                                       \
\n"

    HLP_RASFLAG_LINK_ADD, "Adds to the list of link properties PPP will negotiate\n"
    HLP_RASFLAG_LINK_DEL, "Deletes from the list of link properties PPP will negotiate\n"
    HLP_RASFLAG_LINK_SHOW, "Shows the link properties PPP will negotiate\n"
    
    HLP_RASFLAG_MLINK_ADD, "Adds to the list of multilink types PPP will negotiate\n" 
    HLP_RASFLAG_MLINK_DEL, "Deletes from the list of multilink types PPP will negotiate\n"
    HLP_RASFLAG_MLINK_SHOW, "Shows the multilink types PPP will negotiate\n"
    
    HLP_RASFLAG_LINK_ADD_EX,                                        "\
\n%1!s! [type = ] SWC|LCP                                                \
\n                                                                       \
\n   Adds to the list of link properties PPP will negotiate.             \
\n                                                                       \
\n   type - the type                                                     \
\n     SWC - Provides software compression (MPPC)                        \
\n     LCP - Provides Link Control Protocol extensions from the PPP suite of protocols. \
\n"
    
    HLP_RASFLAG_LINK_DEL_EX,                                        "\
\n%1!s! [type = ] SWC|LCP                                                \
\n                                                                       \
\n   Deletes from the list of link properties PPP will negotiate.        \
\n                                                                       \
\n   type - the type                                                     \
\n     SWC - Provides software compression (MPPC)                        \
\n     LCP - Provides Link Control Protocol extensions from the PPP suite of protocols. \
\n"
    
    HLP_RASFLAG_LINK_SHOW_EX,                                        "\
\n%1!s!                                                                  \
\n                                                                       \
\n   Shows the link properties PPP will negotiate.                       \
\n                                                                       \
\n"
    
    HLP_RASFLAG_MLINK_ADD_EX,                                        "\
\n%1!s! [type = ] MULTI|BACP                                             \
\n                                                                       \
\n   Adds to the list of multilink types PPP will negotiate.             \
\n                                                                       \
\n   type - the type                                                     \
\n     MULTI - Provides mutlilink PPP sessions.                          \
\n     BACP  - Provides Bandwidth Allocation Control Protocol.           \
\n"
    
    HLP_RASFLAG_MLINK_DEL_EX,                                        "\
\n%1!s! [type = ] MULTI|BACP                                             \
\n                                                                       \
\n   Deletes from the list of multilink types PPP will negotiate.        \
\n                                                                       \
\n   type - the type                                                     \
\n     MULTI - Provides mutlilink PPP sessions.                          \
\n     BACP  - Provides Bandwidth Allocation Control Protocol.           \
\n"
    
    HLP_RASFLAG_MLINK_SHOW_EX,                                        "\
\n%1!s!                                                                  \
\n                                                                       \
\n   Shows the multilink types PPP will negotiate.                       \
\n                                                                       \
\n"

    HLP_RASUSER_SHOW_EX,                                                "\
\n%1!s! [ [name = ] username                                             \
\n            [mode = ] PERMIT|REPORT ]                                  \
\n                                                                       \
\n       Displays user RAS properties.                                   \
\n                                                                       \
\n       username - the user's logon name.  If none is supplied,         \
\n                  all users will be displayed.                         \
\n                                                                       \
\n       mode   - the mode for showing information. If no mode is        \
\n                specified, REPORT is assumed.                          \
\n           REPORT - show all users.                                    \
\n           PERMIT - show only users whose dial in permission is PERMIT \
\n\n"

    HLP_RASUSER_SET_EX,                                               "\
\n%1!s! [name = ] username                                             \
\n         [dialin = ] PERMIT|DENY|POLICY                              \
\n         [ [cbpolicy = ] NONE|CALLER|ADMIN                           \
\n           [cbnumber = ] callback number  ]                          \
\n                                                                     \
\n       Sets user RAS properties.                                     \
\n                                                                     \
\n       username - the user's logon name.                             \
\n                                                                     \
\n       dialin   - whether the user will be allowed to dial in        \
\n           PERMIT - allow the user to dial in.                       \
\n           DENY   - do not allow the user to dial in.                \
\n           POLICY - use remote access policies to determine dialin.  \
\n                                                                     \
\n       cbpolicy - the callback policy of the user.  The callback     \
\n                  feature is used to save the caller the cost of     \
\n                  the phone call.                                    \
\n           NONE   - callback is not allowed for the user             \
\n           CALLER - user can specify callback number at call time    \
\n           ADMIN  - always call the user at the callback number      \
\n                                                                     \
\n       cbnumber - the number to use when cbpolicy is ADMIN           \
\n                                                                     \
\n                                                                     \
\n   NOTE: The 'POLICY' option is not available for users that belong  \
\n         to a mixed-mode domain.  For these users, 'POLICY' is       \
\n         assumed to mean 'DENY'.                                     \
\n"

    HLP_DOMAIN_REGISTER_EX,                                             "\
\n%1!s! [ [domain = ] domain [server = ] server ]              \
\n                                                                       \
\n       Registers the given Windows 2000 computer as a RAS server in    \
\n       the Active Directory of the given domain.                       \
\n                                                                       \
\n       server - the computer name of the computer to be registered as  \
\n                a RAS server.  If no server is specified the computer  \
\n                from which the command is issued is assumed.           \
\n                                                                       \
\n       domain - the domain in which the given server should be         \
\n                registered.  If no domain is provided, the primary     \
\n                domain of the computer from which the command is       \
\n                issued is assumed.                                     \
\n\n"

    HLP_DOMAIN_UNREGISTER_EX,                                           "\
\n%1!s! [ [domain = ] domain [server = ] server ]            \
\n                                                                       \
\n       Un-registers the given Windows 2000 computer as a RAS server in \
\n       the Active Directory of the given domain.                       \
\n                                                                       \
\n       server - the computer name of the computer to be unregistered as\
\n                a RAS server.  If no server is specified the computer  \
\n                from which the command is issued is assumed.           \
\n                                                                       \
\n       domain - the domain in which the given server should be         \
\n                unregistered.  If no domain is provided, the primary   \
\n                domain of the computer from which the command is       \
\n                issued is assumed.                                     \
\n\n"


    HLP_DOMAIN_SHOWREG_EX,                                              "\
\n%1!s! [ [domain = ] domain [server = ] server ]            \
\n                                                                       \
\n       Displays whether the given computer is registered as a RAS      \
\n       server in the given domain.                                     \
\n                                                                       \
\n       server - the computer name of the computer in question.         \
\n                If no server is specified the computer from which the  \
\n                command is issued is assumed.                          \
\n                                                                       \
\n       domain - the domain.  If no domain is provided, the primary     \
\n                domain of the computer from which the command is       \
\n                issued is assumed.                                     \
\n\n"

    MSG_RAS_SCRIPTHEADER,                    "\
\n                                            \
\n# ----------------------------------------- \
\n# RAS Configuration                         \
\n# ----------------------------------------- \
\n"

    MSG_RAS_SCRIPTFOOTER,                     "\
\n# End of RAS configuration.                  \
\n                                             \
\n                                             \
\n"

    MSG_RAS_SHOW_SERVERS_HEADER,                             "\
\nTimestamp                 Sender                            \
\n------------------------  ----------------------------------\
\n"

    MSG_RASFLAG_DUMP,  "%1!s! %2!s! %3!s!\n"
    MSG_RASFLAG_DUMP2, "%1!s! %2!s!\n"
    
    MSG_TRACE_DUMP,    "%1!s! %2!s! %3!s!\n"

    MSG_RASFLAG_AUTHMODE_STANDARD, "authentication mode = standard\n"
    MSG_RASFLAG_AUTHMODE_NODCC,    "authentication mode = nodcc\n"
    MSG_RASFLAG_AUTHMODE_BYPASS,   "authentication mode = bypass\n"

    MSG_RASFLAG_AUTHTYPE_HEADER,            "\
\nEnabled Authentication Types:             \
\n                                          \
\nCode          Meaning		                \
\n------------------------------------------\
\n"

    MSG_RASFLAG_AUTHTYPE_PAP,                "\
PAP           Password Authentication Protocol.\n"

    MSG_RASFLAG_AUTHTYPE_SPAP,               "\
SPAP          Shiva Password Authentication Protocol.\n"

    MSG_RASFLAG_AUTHTYPE_MD5CHAP,            "\
MD5CHAP       Challenge Handshake Authentication Protocol (MD5).\n"

    MSG_RASFLAG_AUTHTYPE_MSCHAP,             "\
MSCHAP        Microsoft Challenge-Handshake Authentication Protocol.\n"

    MSG_RASFLAG_AUTHTYPE_MSCHAP2,            "\
MSCHAPv2      Microsoft Challenge-Handshake Authentication Protocol version 2.\n"

    MSG_RASFLAG_AUTHTYPE_EAP,                "\
EAP           Extensible Authentication Protocol.\n"

    MSG_RASFLAG_LINK_HEADER,            "\
\nEnabled Link Options:                     \
\n                                          \
\nCode          Meaning		                \
\n------------------------------------------\
\n"

    MSG_RASFLAG_LINK_SWC,                "\
SWC           Provides software compression (MPPC).\n"

    MSG_RASFLAG_LINK_LCP,               "\
LCP           Provides Link Control Protocol extensions from the PPP suite of protocols.\n"

    MSG_RASFLAG_MLINK_HEADER,            "\
\nEnabled Multilink Options:             \
\n                                          \
\nCode          Meaning		                \
\n------------------------------------------\
\n"

    MSG_RASFLAG_MLINK_MULTI,                "\
MULTI         Provides mutlilink PPP sessions.\n"

    MSG_RASFLAG_MLINK_BACP,               "\
BACP          Provides Bandwidth Allocation Control Protocol.\n"

    MSG_RASUSER_RASINFO,                      "\
\nUser name:              %1!s!             \
\nDialin:                 %2!s!             \
\nCallback policy:        %3!s!             \
\nCallback number:        %4!s!             \
\n"

    MSG_RASUSER_SET_CMD,    "%1!s! %2!s! %3!s! %4!s! %5!s!\n"

    MSG_DOMAIN_REGISTER_SUCCESS,              "\
\nRegistration completed successfully:        \
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"
    
    MSG_DOMAIN_REGISTER_FAIL,                "\
\nRegistration FAILED:                        \
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"
    
    MSG_DOMAIN_UNREGISTER_SUCCESS,                   "\
\nUn-registration completed successfully:             \
\n  RAS Server:  %1!s!                                \
\n  Domain:      %2!s!                                \
\n                                                    \
\n  Since user accounts are cached by the 'IAS' and   \
\n  'Routing and Remote Access' services, this        \
\n  un-registration will not take effect until these  \
\n  services are restarted.                           \
\n                                                    \
\n"
    
    MSG_DOMAIN_UNREGISTER_FAIL,              "\
\nUn-registration FAILED:                     \
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"

    MSG_DOMAIN_SHOW_REGISTERED,              "\
\nThe following RAS server is registered:\
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"

    MSG_DOMAIN_SHOW_UNREGISTERED,             "\
\nThe following RAS server is not registered:\
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"

    MSG_DOMAIN_SHOW_REGISTER_FAIL,            "\
\nUnable to determine the registration:       \
\n  RAS Server:  %1!s!                        \
\n  Domain:      %2!s!                        \
\n                                            \
\n"

    MSG_CLIENT_SHOW,                                  "\
\nUser:             %1!s!                              \
\nDomain:           %2!s!                              \
\nConnected from:   %3!s!                              \
\nDuration:         %4!d! days %5!d! hours %6!d! mins %7!d! secs \
\n"

    MSG_TRACE_SHOW,   "%1!-40s! %2!s!\n"

    EMSG_CANT_FIND_EOPT,                    "\
    One or more essential parameters not specified\n"

    EMSG_BAD_OPTION_VALUE,                  "\
    %1!s! is not an acceptable value for %2!s!.\n"

    EMSG_UNABLE_TO_ENUM_USERS,              "\
    Unable to enumerate the users:\n\n"
    
    EMSG_RASUSER_MUST_PROVIDE_CB_NUMBER,    "\
\nIn order to set administrative callback mode, either you must specify \
\na callback number or the user must already have a callback number set.\
\n\n"
    
//
// The following are specific to the 'ras ip' sub context
//
    HLP_RASIP_HELP1,    "Displays help.\n"

    HLP_RASIP_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\n       Displays help.\n\n"

    HLP_RASIP_DUMP,   "Dumps RAS IP configuration info in script form.\n"

    HLP_RASIP_SHOW_CONFIG, "Displays current RAS IP configuration.\n"

    HLP_RASIP_SET_ASSIGNMENT, "Sets the method by which the RAS server\
\n                 assigns IP addresses to its clients.\n"

    HLP_RASIP_SET_CALLERSPEC,  "Sets whether clients can request their own IP addresses.\n"
    HLP_RASIP_SET_ACCESS,      "Sets whether clients are given access beyond the remote\
\n                 access server.\n"
    HLP_RASIP_SET_NEGOTIATION, "Sets whether IP is negotiated for client RAS connections.\n"
    HLP_RASIP_SET_NETBTBCAST,  "Sets whether to enable or disable broadcast\
\n                              name resolution using NetBIOS over TCP/IP.\n"
    HLP_RASIP_ADD_RANGE, "Adds a range to the static IP address pool.\n"
    HLP_RASIP_DEL_RANGE, "Deletes a range from the static IP address pool.\n"
    HLP_RASIP_DEL_POOL,  "Deletes all ranges from the static IP address pool.\n"

    HLP_RASIP_DUMP_EX                                                   "\
\n%1!s!                                                                \
\n                                                                     \
\n       Dumps RAS configuration information in script form.           \
\n\n"

    HLP_RASIP_SHOW_CONFIG_EX,                                          "\
\n%1!s!                                                                \
\n                                                                     \
\n       Displays current RAS IP configuration.                        \
\n\n"

    HLP_RASIP_SET_NEGOTIATION_EX,                                       "\
\n%1!s! [mode = ] ALLOW|DENY                                             \
\n                                                                       \
\n  Specifies whether the RAS server will allow IP to be configured for  \
\n  any client connections it accepts.                                   \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW      - permit IP over client connections.                   \
\n     DENY       - do not permit IP over client connections.            \
\n\n"

    HLP_RASIP_SET_ACCESS_EX,                                            "\
\nUsage: %1!s! [mode = ] ALL|SERVERONLY \
\n                                                                       \
\nParameters:                                                            \
\n                                                                       \
\n  mode  - what type of access to grant                                 \
\n     ALL        - clients are able to reach the remote access server and any \
\n                  networks to which it is connected.                   \
\n     SERVERONLY - clients are able to reach the remote access server only.   \
\n                                                                       \
\nRemarks: Specifies whether IP network traffic from any client is       \
\n         forwarded to the network(s) to which the remote access server \
\n         is connected.                                                 \
\n\n"

    HLP_RASIP_SET_ASSIGNMENT_EX,                                         "\
\n%1!s! [method = ] AUTO|POOL                                            \
\n                                                                       \
\n  Sets the method by which the RAS server assigns IP addresses to      \
\n  its clients.                                                         \
\n                                                                       \
\n  method  - the method to use                                          \
\n     AUTO     - automatically assigns IP addresses using DHCP.  If no  \
\n                DHCP server is available, a random, private address    \
\n                is assigned.                                           \
\n     POOL     - assigns IP address from the RAS server's pool.         \
\n\n"

    HLP_RASIP_ADD_RANGE_EX,                                             "\
\n%1!s! [from = ] from [to = ] to                                        \
\n                                                                       \
\n  Adds a range to the static IP address pool that the RAS server uses. \
\n                                                                       \
\n  from  - the starting IP address in the range in the form 'x.x.x.x'   \
\n  to    - the ending IP address in the range in the form 'x.x.x.x'     \
\n\n"

    HLP_RASIP_DEL_RANGE_EX,                                             "\
\n%1!s! [from = ] from [to = ] to                                        \
\n                                                                       \
\n  Deletes a range from the static IP address pool that the RAS server uses.\
\n                                                                       \
\n  from  - the starting IP address in the range in the form 'x.x.x.x'   \
\n  to    - the ending IP address in the range in the form 'x.x.x.x'     \
\n\n"

    HLP_RASIP_DEL_POOL_EX,                                             "\
\n%1!s! \
\n                                                                       \
\n  Deletes all ranges from the static IP address pool.                  \
\n\n"

    HLP_RASIP_SET_CALLERSPEC_EX,                                        "\
\n%1!s! [mode = ] ALLOW|DENY                                             \
\n                                                                       \
\n  Specifies whether dialin clients are permitted to request their own  \
\n  IP addresses.                                                        \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW - allow clients to request their own IP addresses.          \
\n     DENY  - don't allow clients to request their own IP addresses.    \
\n\n"

    HLP_RASIP_SET_NETBTBCAST_EX,                                        "\
\n%1!s! [mode = ] ENABLED|DISABLED                                       \
\n                                                                       \
\n  Specifies whether to enable or disable broadcast name resolution     \
\n  using NetBIOS over TCP/IP.                                           \
\n                                                                       \
\n  mode - the mode                                                      \
\n     ENABLED  - enables broadcast name resolution using NetBIOS over   \
\n                TCP/IP.                                                \
\n     DISABLED - disables broadcast name resolution using NetBIOS over  \
\n                TCP/IP.                                                \
\n\n"

    MSG_RASIP_SERVERCONFIG,                                             "\
\nRAS IP config                                                          \
\n                                                                       \
\n  Negotiation mode:          %2!s!                                     \
\n  Access mode:               %3!s!                                     \
\n  Address request mode:      %5!s!                                     \
\n  Broadcast name resolution: %6!s!                                     \
\n  Assignment method:         %4!s!                                     \
\n  Pool:                                                                \
\n"

    MSG_RASIP_SHOW_POOL "      %1!11s! to %2!11s!\n"

    MSG_RASIP_SET_CMD, "%1!s! %2!s!\n"
    MSG_RASIP_ADD_RANGE_CMD, "%1!s! %2!s! %3!s!\n"
    
    MSG_RASIP_SCRIPTHEADER,                  "\
\n                                            \
\n# ----------------------------------------- \
\n# RAS IP Configuration                      \
\n# ----------------------------------------- \
\n"

    MSG_RASIP_SCRIPTFOOTER,                   "\
\n# End of RAS IP configuration.               \
\n                                             \
\n"

    EMSG_RASIP_INVALID_POOL,                                            "\
\nThe IP address range entered is invalid for the following reason:      \
\n                                                                       \
\n  %1!s!\
\n                                                                       \
\nThe following constraints apply to IP address ranges:                  \
\n                                                                       \
\n  1. The addresses must be specified in standard dotted notation       \
\n     and must lie between 1.0.0.0 and 224.0.0.0                        \
\n                                                                       \
\n  2. The addresses must not be in the form the form 127.x.x.x.         \
\n                                                                       \
\n  3. The 'from' IP address must be at least 1 address less than        \
\n     the 'to' address.                                                 \
\n                                                                       \
\n\n"

    EMSG_RASIP_BAD_ADDRESS, "An IP address entered was invalid."
    EMSG_RASIP_BAD_RANGE, "The range is not large enough."
    EMSG_RASIP_NETID_127, "An IP address entered was in the form 127.x.x.x"
    EMSG_RASIP_BAD_POOL_GENERIC "No reason given"

    EMSG_RASIP_NEED_VALID_POOL,                                         "\
\nBefore you can switch to pool assignment mode, you must specify a      \
\nvalid IP address pool using the '%1!s!' command.                       \
\n\n"

    EMSG_RASIP_OVERLAPPING_RANGE,                                         "\
\nThe range you entered can not be assigned to the system since it overlaps\
\nan existing range.                                                     \
\n\n"

//
// The following are specific to the 'ras ipx' sub context
//
    HLP_RASIPX_HELP1,    "Displays help.\n"

    HLP_RASIPX_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\n       Displays help.\n\n"

    HLP_RASIPX_DUMP,   "Dumps RAS IPX configuration info in script form.\n"

    HLP_RASIPX_SHOW_CONFIG, "Displays current RAS IPX configuration.\n"
    HLP_RASIPX_SET_NEGOTIATION, "Sets whether IPX is negotiated for client RAS connections.\n"
    HLP_RASIPX_SET_ACCESS,      "Sets whether clients will be given access beyond the RAS server.\n"                   
    HLP_RASIPX_SET_ASSIGNMENT, "Sets the method by which the RAS server \
assigns IPX addresses to its clients.\n"

    HLP_RASIPX_SET_POOL,        "Sets the RAS IPX address pool.\n"
    HLP_RASIPX_SET_CALLERSPEC,  "Sets whether clients can request their own IPX node numbers.\n"
    
    HLP_RASIPX_DUMP_EX                                                   "\
\n%1!s!                                                                \
\n                                                                     \
\n       Dumps RAS IPX configuration information in script form.       \
\n\n"

    HLP_RASIPX_SHOW_CONFIG_EX,                                          "\
\n%1!s!                                                                \
\n                                                                     \
\n       Displays current RAS IPX configuration.                       \
\n\n"
    
    HLP_RASIPX_SET_NEGOTIATION_EX,                                       "\
\n%1!s! [mode = ] ALLOW|DENY                                             \
\n                                                                       \
\n  Specifies whether the RAS server will allow IPX to be configured for \
\n  any client connections it accepts.                                   \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW      - permit IPX over client connections.                  \
\n     DENY       - do not permit IPX over client connections.           \
\n\n"

    HLP_RASIPX_SET_ACCESS_EX,                                            "\
\n%1!s! [mode = ] ALL|SERVERONLY                                         \
\n                                                                       \
\n  Specifies whether IPX network traffic from any client will be forwarded\
\n  to the network(s) to which the RAS server is connected.              \
\n                                                                       \
\n  mode  - what type of access to grant                               \
\n     ALL        - clients will be able to reach the RAS server and any \
\n                  networks to which it is connected.                   \
\n     SERVERONLY - clients will be able to reach the RAS server only.   \
\n\n"

    HLP_RASIPX_SET_ASSIGNMENT_EX,                                       "\
\n%1!s! [method = ] AUTO|POOL|AUTOSAME|POOLSAME                          \
\n                                                                       \
\n  Sets the method by which the RAS server assigns IPX addresses to     \
\n  its clients.                                                         \
\n                                                                       \
\n  method  - the method to use                                          \
\n     AUTO     - assigns a different random IPX network number to all   \
\n                clients.                                               \
\n     POOL     - assigns IPX addresses from the RAS server's pool.      \
\n     AUTOSAME - generates a random IPX network number as assigns it to \
\n                all clients.                                           \
\n     POOLSAME - chooses a number from the RAS server's pool and assigns\
\n                it to all clients.                                     \
\n                                                                       \
\n  Notes:                                                               \
\n                                                                       \
\n     For most configurations, either the AUTOSAME or POOLSAME method   \
\n     is recommended as these conserve network numbers and reduce network\
\n     traffic.                                                          \
\n                                                                       \
\n     Before a network number is assigned to a client, it is verified   \
\n     to not be in use on the RAS server's intranet.  As a result some  \
\n     addresses in the address pool may not be assigned.                \
\n\n"

    HLP_RASIPX_SET_POOL_EX,                                             "\
\n%1!s! [firstnet = ] address [size = ] size                             \
\n                                                                       \
\n  Sets RAS server's IPX address pool                                   \
\n                                                                       \
\n  firstnet - the first IPX network number in the pool. (hexadecimal)   \
\n  size     - the total number of IPX addresses in the pool. If zero is \
\n             specified, then the pool will grow dynamically as needed. \
\n             (decimal)                                                 \
\n\n"
    
    HLP_RASIPX_SET_CALLERSPEC_EX,                                       "\
\n%1!s! [mode = ] ALLOW|DENY                                             \
\n                                                                       \
\n  Specifies whether dialin clients are permitted to request their own  \
\n  IPX node numbers.                                                    \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW - allow clients to request their own IPX node numbers.      \
\n     DENY  - don't allow clients to request their own IPX node numbers.\
\n\n"
    
    MSG_RASIPX_SERVERCONFIG,                                            "\
\nRAS IPX config                                                         \
\n                                                                       \
\n  Negotiation mode:           %2!s!                                    \
\n  Access mode:                %3!s!                                    \
\n  Node number request mode:   %5!s!                                    \
\n  Assignment method:          %4!s!                                    \
\n  IPX address pool base:      %6!s!                                    \
\n  IPX address pool size:      %7!s!                                    \
\n                                                                       \
\n\n"

    MSG_RASIPX_SET_CMD, "%1!s! %2!s!\n"
    MSG_RASIPX_SET_POOL_CMD, "%1!s! %2!s! %3!s!\n"
    
    MSG_RASIPX_SCRIPTHEADER,                  "\
\n                                            \
\n# ----------------------------------------- \
\n# RAS IPX Configuration                      \
\n# ----------------------------------------- \
\n"

    MSG_RASIPX_SCRIPTFOOTER,                   "\
\n# End of RAS IPX configuration.               \
\n                                             \
\n                                             \
\n"

    EMSG_RASIPX_BAD_IPX,                                                "\
\nThe IPX network number is invalid.  It must be specified as a string   \
\nwith at most ten characters representing a four-byte hexadecimal value.\
\n                                                                       \
\nAlso, the values 0, 1, and 0xffffffff are not permitted.               \
\n                                                                       \
\n  Examples:                                                            \
\n     ABCDEF                                                            \
\n     0x1234                                                            \
\n     00A1C2E3                                                          \
\n                                                                       \
\n\n"

    EMSG_RASIPX_BAD_POOLSIZE,                                           "\
\nThe pool size is invalid.  It can be at most 64000.  If zero is        \
\nspecified, then the pool will dynamically grow as needed.              \
\n\n"

//
// The following are specific to the 'ras nbf' sub context
//
    HLP_RASNBF_HELP1,    "Displays help.\n"

    HLP_RASNBF_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\n       Displays help.\n\n"

    HLP_RASNBF_DUMP,   "Dumps RAS NBF configuration info in script form.\n"

    HLP_RASNBF_SHOW_CONFIG, "Displays current RAS NBF configuration.\n"
    HLP_RASNBF_SET_NEGOTIATION, "Sets whether NBF is negotiated for client RAS connections.\n"
    HLP_RASNBF_SET_ACCESS,      "Sets whether clients will be given access beyond the RAS server.\n"                   
    
    HLP_RASNBF_DUMP_EX                                                   "\
\n%1!s!                                                                \
\n                                                                     \
\n       Dumps RAS NBF configuration information in script form.       \
\n\n"

    HLP_RASNBF_SHOW_CONFIG_EX,                                          "\
\n%1!s!                                                                \
\n                                                                     \
\n       Displays current RAS NBF configuration.                       \
\n\n"
    
    HLP_RASNBF_SET_NEGOTIATION_EX,                                       "\
\n%1!s! [mode = ] ALLOW|DENY                                             \
\n                                                                       \
\n  Specifies whether the RAS server will allow NBF to be configured for \
\n  any client connections it accepts.                                   \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW      - permit NBF over client connections.                  \
\n     DENY       - do not permit NBF over client connections.           \
\n\n"

    HLP_RASNBF_SET_ACCESS_EX,                                            "\
\n%1!s! [mode = ] ALL|SERVERONLY                                         \
\n                                                                       \
\n  Specifies whether NBF network traffic from any client will be forwarded\
\n  to the network(s) to which the RAS server is connected.              \
\n                                                                       \
\n  mode  - what type of access to grant                               \
\n     ALL        - clients will be able to reach the RAS server and any \
\n                  networks to which it is connected.                   \
\n     SERVERONLY - clients will be able to reach the RAS server only.   \
\n\n"

    MSG_RASNBF_SERVERCONFIG,                                            "\
\nRAS NBF config                                                         \
\n                                                                       \
\n  Negotiation mode:           %2!s!                                    \
\n  Access mode:                %3!s!                                    \
\n                                                                       \
\n\n"

    MSG_RASNBF_SET_CMD, "%1!s! %2!s!\n"
    
    MSG_RASNBF_SCRIPTHEADER,                  "\
\n                                            \
\n# ----------------------------------------- \
\n# RAS NBF Configuration                      \
\n# ----------------------------------------- \
\n"

    MSG_RASNBF_SCRIPTFOOTER,                   "\
\n# End of RAS NBF configuration.               \
\n                                             \
\n                                             \
\n"

//
// The following are specific to the 'ras at' sub context
//
    HLP_RASAT_HELP1,    "Displays help.\n"

    HLP_RASAT_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\n       Displays help.\n\n"

    HLP_RASAT_DUMP,   "Dumps remote access AppleTalk configuration info in script form.\n"

    HLP_RASAT_SHOW_CONFIG, "Displays current remote access AppleTalk configuration.\n"
    HLP_RASAT_SET_NEGOTIATION, "Sets whether AppleTalk is negotiated for client remote\
\n                 access connections.\n"
    HLP_RASAT_SET_ACCESS,      "Sets whether clients will be given access beyond the RAS server.\n"                   
    
    HLP_RASAT_DUMP_EX                                                  "\
\nUsage: %1!s! \
\n                                                                      \
\nRemarks: Dumps remote access AppleTalk configuration information in   \
\n         script form.\n\n"

    HLP_RASAT_SHOW_CONFIG_EX,                                          "\
\nUsage: %1!s! \
\n                                                                      \
\nRemarks: Displays current remote access AppleTalk configuration.      \
\n\n"
    
    HLP_RASAT_SET_NEGOTIATION_EX,                                       "\
\nUsage: %1!s! [mode = ] ALLOW|DENY \
\n                                                                       \
\nParameters:                                                            \
\n                                                                       \
\n  mode  - the mode                                                     \
\n     ALLOW      - permit AppleTalk over client connections.            \
\n     DENY       - do not permit AppleTalk over client connections.     \
\n                                                                       \
\nRemarks: Specifies whether the remote access server allows AppleTalk to be\
\n         configured for any client connections it accepts.             \
\n\n"

    HLP_RASAT_SET_ACCESS_EX,                                            "\
\n%1!s! [mode = ] ALL|SERVERONLY                                         \
\n                                                                       \
\n  Specifies whether AppleTalk network traffic from any client will be  \
\n  forwarded to the network(s) to which the RAS server is connected.    \
\n                                                                       \
\n  mode  - what type of access to grant                                 \
\n     ALL        - clients will be able to reach the RAS server and any \
\n                  networks to which it is connected.                   \
\n     SERVERONLY - clients will be able to reach the RAS server only.   \
\n\n"

    MSG_RASAT_SERVERCONFIG,         "\
\nRemote Access AppleTalk config     \
\n                                   \
\n  Negotiation mode:           %2!s!\
\n  Access mode:                %3!s!\
\n\n"

    MSG_RASAT_SET_CMD, "%1!s! %2!s!\n"
    
    MSG_RASAT_SCRIPTHEADER,                  "\
\n                                            \
\n# ----------------------------------------- \
\n# RemoteAccess AppleTalk Configuration      \
\n# ----------------------------------------- \
\n"

    MSG_RASAT_SCRIPTFOOTER,                    "\
\n# End of RemoteAccess AppleTalk configuration.\
\n\n"

//
// The following are specific to the 'ras aaaa' sub context
//

    HLP_RASAAAA_ADD_AUTHSERV, "Adds a RADIUS authentication server.\n"
    HLP_RASAAAA_ADD_ACCTSERV, "Adds a RADIUS accounting server.\n"
    
    HLP_RASAAAA_DEL_AUTHSERV, "Deletes a RADIUS server.\n"
    HLP_RASAAAA_DEL_ACCTSERV, "Deletes a RADIUS accounting server.\n"
    
    HLP_RASAAAA_SET_AUTH, "Sets the authentication provider.\n"
    HLP_RASAAAA_SET_ACCT, "Sets the accounting provider.\n"
    HLP_RASAAAA_SET_AUTHSERV, "Sets properties of an authentication server.\n"
    HLP_RASAAAA_SET_ACCTSERV, "Sets properties of an accounting server.\n"

    HLP_RASAAAA_SHOW_AUTH, "Displays the current authentication provider.\n"
    HLP_RASAAAA_SHOW_ACCT, "Displays the current accounting provider.\n"
    HLP_RASAAAA_SHOW_AUTHSERV, "Displays the RADIUS server(s) used for authentication.\n"
    HLP_RASAAAA_SHOW_ACCTSERV, "Displays the RADIUS server(s) used for accounting.\n"

    HLP_RASAAAA_ADD_AUTHSERV_EX,                              "\
\n%1!s! [ name = ] server                                      \
\n      [ [secret =] secret                                    \
\n        [init-score =] InitialScore                          \
\n        [port =] port                                        \
\n        [timeout =] timeout                                  \
\n        [signature = ] ENABLED|DISABLED ]                    \
\n                                                             \
\n  Provides an IP address or name of a RADIUS server to pass authentication\
\n  requests.                                                               \
\n                                                                          \
\n  name        The DNS name or IP address of the RADIUS server             \
\n  secret      The shared secret                                           \
\n  init-score  Initial score (server priority)                             \
\n  port        Sets the port on which to send the authentication requests. \
\n  timeout     The timeout period before the RADIUS server is marked       \
\n              unavailable (seconds)                                       \
\n  signature   whether to use digital signatures                           \
\n\n"

    HLP_RASAAAA_ADD_ACCTSERV_EX,                              "\
\n%1!s! [ name = ] server                                      \
\n      [ [secret =] secret                                    \
\n        [init-score =] InitialScore                          \
\n        [port =] port                                        \
\n        [timeout = ] timeout                                 \
\n        [messages = ] ENABLED|DISABLED ]                     \
\n                                                             \
\n  Provides an IP address or name of a RADIUS server to use for accounting.\
\n                                                                          \
\n  name        The DNS name or IP address of the RADIUS server             \
\n  secret      The shared secret                                           \
\n  init-score  Initial score (server priority)                             \
\n  port        Sets the port on which to send the authentication requests. \
\n  timeout     The timeout period before the RADIUS server is marked       \
\n              unavailable (seconds)                                       \
\n  messages    whether to send accounting on/off messages.                  \
\n\n"

    HLP_RASAAAA_DEL_AUTHSERV_EX,                              "\
\n%1!s! [name = ] server                                       \
\n                                                             \
\n  Deletes a RADIUS authentication server.                    \
\n\n"

    HLP_RASAAAA_DEL_ACCTSERV_EX,                              "\
\n%1!s! [ [name = ] server ]                                   \
\n                                                             \
\n  Deletes a RADIUS accounting server.                        \
\n\n"

    HLP_RASAAAA_SET_AUTH_EX,                              "\
\n%1!s! [provider =] WINDOWS|RADIUS                            \
\n                                                             \
\n  Sets the authentication provider.                          \
\n                                                             \
\n	windows     Authentication via Windows security            \
\n	radius      Authentication against a RADIUS server         \
\n\n"

    HLP_RASAAAA_SET_ACCT_EX,                              "\
\n%1!s! [provider =] WINDOWS|RADIUS|NONE                       \
\n                                                             \
\n  Sets the accounting provider.                              \
\n                                                             \
\n	windows     Accounting via the Windows logging facility    \
\n	radius      Accounting via a RADIUS accounting server      \
\n	none        Do not perform accounting                      \
\n\n"

    HLP_RASAAAA_SET_AUTHSERV_EX,                              "\
\n%1!s! [ name = ] server                                      \
\n      [ [secret =] secret                                    \
\n        [init-score =] InitialScore                          \
\n        [port =] port                                        \
\n        [timeout =] timeout                                  \
\n        [signature = ] ENABLED|DISABLED ]                    \
\n                                                             \
\n  Provides an IP address or name of a RADIUS server to pass authentication\
\n  requests.                                                               \
\n                                                                          \
\n  name        The DNS name or IP address of the RADIUS server             \
\n  secret      The shared secret                                           \
\n  init-score  Initial score (server priority)                             \
\n  port        Sets the port on which to send the authentication requests. \
\n  timeout     The timeout period before the RADIUS server is marked       \
\n              unavailable (seconds)                                       \
\n  signature   whether to use digital signatures                           \
\n\n"

    HLP_RASAAAA_SET_ACCTSERV_EX,                              "\
\n%1!s! [ name = ] server                                      \
\n      [ [secret =] secret                                    \
\n        [init-score =] InitialScore                          \
\n        [port =] port                                        \
\n        [timeout = ] timeout                                 \
\n        [messages = ] ENABLED|DISABLED ]                     \
\n                                                             \
\n  Provides an IP address or name of a RADIUS server to use for accounting.\
\n                                                                          \
\n  name        The DNS name or IP address of the RADIUS server             \
\n  secret      The shared secret                                           \
\n  init-score  Initial score (server priority)                             \
\n  port        Sets the port on which to send the authentication requests. \
\n  timeout     The timeout period before the RADIUS server is marked       \
\n              unavailable (seconds)                                       \
\n  messages    whether to send accounting on/off messages.                  \
\n\n"

    HLP_RASAAAA_SHOW_AUTH_EX,                              "\
\n%1!s!                                                        \
\n                                                             \
\n  Displays the authentication provider                       \
\n\n"

    HLP_RASAAAA_SHOW_ACCT_EX,                              "\
\n%1!s!                                                        \
\n                                                             \
\n  Displays the accounting provider                           \
\n\n"

    HLP_RASAAAA_SHOW_AUTHSERV_EX,                              "\
\n%1!s! [ [name = ] server ]                                   \
\n                                                             \
\n  Displays detailed information about an authentication      \
\n  server.                                                    \
\n                                                             \
\n	name    The DNS name or IP address of the RADIUS server    \
\n                                                             \
\n  If no server name is provided, all configured authentication\
\n  servers will be displayed.                                 \
\n\n"

    HLP_RASAAAA_SHOW_ACCTSERV_EX,                              "\
\n%1!s! [ [name = ] server ]                                   \
\n                                                             \
\n  Displays detailed information about an accounting          \
\n  server.                                                    \
\n                                                             \
\n	name   The DNS name or IP address of the RADIUS server     \
\n                                                             \
\n  If no server name is provided, all configured accounting  \
\n  servers will be displayed.                                 \
\n\n"

    HLP_RASAAAA_HELP1,    "Displays help.\n"

    HLP_RASAAAA_HELP1_EX,                         "\
\nUsage: %1!s!\n\
\n       Displays help.\n\n"

    HLP_RASAAAA_DUMP,   "Dumps RAS AAAA configuration info in script form.\n"

    HLP_RASAAAA_DUMP_EX                                               "\
\n%1!s!                                                                \
\n                                                                     \
\n       Dumps RAS AAAA configuration information in script form.      \
\n\n"


    MSG_RASAAAA_SHOW_AUTH, "RAS authentication provider: %1!s!\n"
    MSG_RASAAAA_SHOW_ACCT, "RAS accounting provider: %1!s!\n"                  

    MSG_RASAAAA_SHOW_AUTHSERV_HDR,                       "\
\nName                               Address        Port Score Timeout Signature\
\n-------------------------------------------------------------------------------\n"

    MSG_RASAAAA_SHOW_AUTHSERV,                     "\
%1!-34s! %2!-14s! %3!-4d! %4!-5d! %5!-7d! %6!s!\n"

    MSG_RASAAAA_SHOW_ACCTSERV_HDR,                       "\
\nName                               Address        Port Score Timeout Messages\
\n-------------------------------------------------------------------------------\n"

    MSG_RASAAAA_MUST_RESTART_SERVICES, "\
The RemoteAccess service must be restarted for changes to take effect.\n"

    MSG_RASAAAA_SCRIPTHEADER,                  "\
\n                                            \
\n# ----------------------------------------- \
\n# RAS AAAA Configuration                    \
\n# ----------------------------------------- \
\n"

    MSG_RASAAAA_SCRIPTFOOTER,                   "\
\n# End of RAS AAAA configuration.             \
\n                                             \
\n                                             \
\n"

    MSG_RASAAAA_CMD1, "%1!s! %2!s!\n"
    MSG_RASAAAA_CMD5, "%1!s! %2!s! %3!s! %4!s! %5!s! %6!s!\n"
}

#include <windows.h>
#include <ntverp.h>

#define VER_FILETYPE              VFT_DLL
#define VER_FILESUBTYPE           VFT2_UNKNOWN
#define VER_FILEDESCRIPTION_STR   "RAS Monitor DLL"
#define VER_INTERNALNAME_STR      "rasmontr.dll"
#define VER_ORIGINALFILENAME_STR  "rasmontr.dll"

#include "common.ver"   // NT5.0 version file.
