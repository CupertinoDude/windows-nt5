{\rtf1\ansi \deff0\deflang1033

{\fonttbl
{\f0\froman Times New Roman;}
{\f2\fswiss Arial;}
{\f19\fmodern\fcharset0\fprq1 Courier New;}
}

{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue127;
\red0\green127\blue127;
\red0\green127\blue0;
\red127\green0\blue127;
\red127\green0\blue0;
\red127\green127\blue0;
\red127\green127\blue127;
\red192\green192\blue192;
}


{\stylesheet
{\s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 header;}
{\s251\sb160\sa40\sl-280\keepn \b\f2\lang1033 heading 4;}
{\s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 heading 3;}
{\s253\li-1800\sb160\sa60\sl-380\keepn \b\f0\fs34\lang1033 heading 2;}
{\s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 heading 1;}
{\*\cs10 \additive Default Paragraph Font;}
{\sa160\sl240 \fs21\lang1033 Normal;}
{\s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 Ex;}
{\s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 header rule;}
{\s45\li-1800\sa180\sl-440\keepn\tx0 \b\f2\fs40\up8\lang1033 Rh1;}
{\s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Rmh;}
{\s50\sl-240\keepn \f0\fs21\lang1033 Term1;}
{\s53\li280\sl-240\keepn \f0\fs21\lang1033 Term2;}
{\s54\li280\sa80\sl-240 \f0\fs21\lang1033 Def1;}
{\s55\li560\sa80\sl-240 \f0\fs21\lang1033 Def2;}
{\s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 Rule;}
{\s93\sl240 \fs21\lang1033 
Index Link;}
{\s25\sa80\widctlpar\intbl \f4\fs21\lang1024 \sbasedon0\snext25 Table Text;}
}

\paperw12240\paperh15840\margl3330\margr1530\margt-2540\margb-2220\gutter420 
\facingp\deftab280\widowctrl\ftnbj 

\sectd \binfsxn1\binsxn1\linex0\headery1990\footery360\endnhere\titlepg 

{\headerl \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 4}}{\expnd50  }TAPIVCap Reference - 06/17/99\par 
\pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 \par }

{\headerr \pard\plain \s243\li-1800\sl-210\tqr\tx6960 \b\f2\fs19\lang1033 
\tab TAPIVCap Reference - 06/17/99{\expnd50   }
{\field\flddirty{\*\fldinst PAGE}{\fldrslt 3}}
\par \pard\plain \s44\li-1770\ri30\sb50\sl-80\brdrt\brdrs\brdrw15\brdrcf2 \fs12\lang1033 
\par }
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Contents\par 
\pard\plain \s93\sl240 \fs21\lang1033 
To display a list of topics by category, click any 
of the contents entries below. To display an alphabetical list of 
topics, choose the Index button.\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Introduction\par 
\pard\plain \sa160\sl240 \fs21\lang1033 This DLL implements the TAPI MSP Video Capture filter. This filter reuses 
some of the code that has been developed for the off-the-shelf VfW (QCAP) and 
WDM (KSProxy) video capture filters, but adds a significant amount of 
powerful processing functions to the capture process to meet all the 
requirements discussed in section 4 of "Microsoft Video Capture Filter.doc".\par 

This DLL adds support for  extended bitmap info headers for H.261 and H.263 
video streams to communicate to the TAPI MSP Video Capture filter a list of 
media types supported by the remote endpoint. Still, the decision to use 
optional compression modes is left to the TAPI MSP Video Capture filter. The 
current VfW off-the-shelf capture filter does not have a way to expose all 
the capabilities of the capture device. We create our own media type 
enumeration process to compensate for this limitation.\par 

The TAPI MSP Video Capture filter also supports a number of DirectShow 
interfaces (IAMVfwCaptureDialogs, IAMCrossbar, IAMVideoProcAmp, 
IAMCameraControl, IAMVideoControl) to provide better control over the capture 
process to TAPI applications.\par 

It implements a new H.245 Video Capability interface (IH245VideoCapability) 
to be used by the MSP in order to provide the TAPI MSP Capability module with 
a table of estimated steady-state resource requirements as related to each 
format that the capture device supports.\par 

A new H.245 command interface (IH245EncoderCommand) is implemented to 
communicate to the TAPI MSP Video Capture filter requests for I-frame, group 
of blocks, or macro-block updates due to packet loss or multi-point switching. 
We implement a network statistics interface (INetworkStats), to allow the 
network to provide feedback on the channel conditions to the compressed video 
output pin of the TAPI MSP Video Capture filter. The TAPI MSP Video Capture 
filter is responsible for taking appropriate actions, if needed. The TAPI MSP 
Video Capture filter also implements three control interfaces (ICPUControl, 
IFrameRateControl, IBitrateControl) to be used by the TAPI MSP Quality 
Controller to provide the best user experience.\par 

The TAPI MSP Video Capture filter also exposes a preview output pin that can 
be controlled independently of the capture output pin. The data produced by 
this pin will be rendered using overlay or a video port if supported by the 
capture device.\par 

The TAPI MSP Video Capture filter exposes an interface (IProgressiveRefinement) 
on its compressed video output pin to allow for transmission of 
high-resolution stills that are continuously improved on the remote endpoint 
as more data is received and decompressed. The TAPI MSP Video Capture filter 
may also elect to implement this same interface on an optional separate and 
dedicated still-image output pin.\par 

Finally, the TAPI MSP Video Capture filter exposes an RTP packetization 
descriptor output pin synchronized to the compressed capture output pin. The 
downstream RTP Network Sink filter uses this second pin to understand how to 
better fragment the compressed video data into network RTP packets.\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Implementation\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 VfW capture devices\par 
\pard\plain \sa160\sl240 \fs21\lang1033 The TAPI MSP Video Capture filter talks directly to the VfW capture driver 
using SendDriverMessage. This filter uses the existing DShow code 
implemented in QCAP but adds the necessary functions to perform smart 
teeing of the capture data to the preview pin. It replaces the 
streaming-only code used by QCAP with frame grabbing code whenever 
necessary. It controls the rate at which frames are being captured by 
adjusting the rate at which DVM_FRAME message are being sent to the driver 
in frame grabbing mode, or only returning a fraction of the frames being 
captured in streaming mode. It performs format and Vfw to ITU-T size 
conversions to bring the format of the captured video data to a format that 
can easily be used for rendering, and directly encoded by the downstream 
TAPI MSP Video Encoder filter if an installable codecs is registered with 
the TAPI MSP. If there is no installable codec registered, the TAPI MSP 
Video Capture filter also performs H.26x encoding, generating a compressed 
video capture output stream in H.26x format, as well as an RTP packetization 
descriptor output data stream. Finally, the TAPI MSP Video Capture filter 
does all the necessary sequencing to pause the existing video streams 
whenever it is being asked to generate still-image data, grab a 
high-resolution snapshot, deliver it in progressively rendered form, and 
restart the video streams.\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 WDM capture devices\par 
\pard\plain \sa160\sl240 \fs21\lang1033 The TAPI MSP Video Capture filter talks directly to the WDM capture driver 
using IOCTLs. This filter uses the existing code implemented in KSProxy 
but adds the necessary functions to perform smart teeing of the capture 
data to the preview pin, if necessary. It controls the rate at which frames 
are being captured by adjusting the rate at which buffers are being 
submitted to the driver in frame grabbing mode, or only returning a fraction 
of the frames being captured in streaming mode using overlapped IOs. It 
performs format and Vfw to ITU-T size conversions to bring the format of the 
captured video data to a format that can easily be used for rendering, and 
directly encoded by the downstream TAPI MSP Video Encoder filter if an 
installable codecs is registered with the TAPI MSP. If there is no 
installable codec registered, the TAPI MSP Video Capture filter also performs 
H.26x encoding, generating a compressed video capture output stream in H.26x 
format, as well as an RTP packetization descriptor output data stream. 
Finally, the TAPI MSP Video Capture filter does all the necessary sequencing 
to pause the existing video streams whenever it is being asked to generate 
still-image data, grab a high-resolution snapshot, deliver it in 
progressively rendered form, and restart the video streams.\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Video capture filter application interfaces\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IAMVfwCaptureDialogs application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVfwCaptureDialogs methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVfwCaptureDialogs structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IAMCrossbar application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMCrossbar methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMCrossbar structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IAMVideoProcAmp application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVideoProcAmp methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVideoProcAmp structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IAMCameraControl application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMCameraControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMCameraControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IAMVideoControl application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVideoControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IAMVideoControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IVideoDeviceControl application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IVideoDeviceControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IVideoDeviceControl structures and enums\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Video capture filter MSP interfaces\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IH245VideoCapability application interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IH245VideoCapability methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IH245VideoCapability structures and enums\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Video capture filter output pin TAPI interfaces\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 ICPUControl interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
ICPUControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
ICPUControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IFrameRateControl interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IFrameRateControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IFrameRateControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IBitrateControl interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IBitrateControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IBitrateControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 INetworkStats interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
INetworkStats methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
INetworkStats structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IH245EncoderCommand interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IH245EncoderCommand methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IH245EncoderCommand structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IProgressiveRefinement interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IProgressiveRefinement methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IProgressiveRefinement structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 IRTPPDControl interface\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IRTPPDControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
IRTPPDControl structures and enums\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 Common control structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
Common control structures\par 
\pard\plain \s93\sl240 \fs21\lang1033 
Common control enums\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Classes\par 
\pard\plain \s93\sl240 \fs21\lang1033 
Classes\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Modules\par 
\pard\plain \s93\sl240 \fs21\lang1033 
Modules\par 
\pard\plain \s93\sl240 \fs21\lang1033 
Constants\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Code information\par 
\pard\plain \sa160\sl240 \fs21\lang1033 The only libraries necessary in retail mode (w/o property pages) are ........\\dev\\tools\\amovsdk.20\\lib\\strmbase.lib ......\\ddk\\lib\\i386\\ksuser.lib ......\\ddk\\lib\\i386\\ksguid.lib kernel32.lib ole32.lib uuid.lib msvcrt.lib\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 Exports\par 
\pard\plain \sa160\sl240 \fs21\lang1033 DllCanUnloadNow 
DllGetClassObject\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 Imports\par 
\pard\plain \sa160\sl240 \fs21\lang1033 KERNEL32.DLL: 
CloseHandle 
CreateEventA 
DeviceIoControl 
DisableThreadLibraryCalls 
FreeLibrary 
GetLastError 
GetOverlappedResult 
GetVersionExA 
InterlockedDecrement 
InterlockedIncrement 
RtlZeroMemory\par 

MSVCRT.DLL: 
??2@YAPAXI@Z 
??3@YAXPAX@Z 
_EH_prolog 
__CxxFrameHandler 
_purecall 
memcmp\par 
\pard\plain \s252\sb160\sa40\sl-340\keepn \b\f2\fs30\lang1033 Code size\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Compile options: /nologo /MDd /W3 /GX /O1 /X /I "....\\inc" /I "......\\ddk\\inc" /I "........\\dev\\tools\\amovsdk.20\\include" /I "........\\dev\\tools\\amovsdk.20\\classes\\base" /I "........\\dev\\ntddk\\inc" /I "........\\dev\\inc" /I "........\\dev\\tools\\c32\\inc" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "DLL" /D "STRICT" /FR"Release/" /Fp"Release/TAPIKsIf.pch" /YX /Fo"Release/" /Fd"Release/" /FD /c\par 

Link options: ........\\dev\\tools\\amovsdk.20\\lib\\strmbase.lib ......\\ddk\\lib\\i386\\ksuser.lib ......\\ddk\\lib\\i386\\ksguid.lib comctl32.lib msvcrt.lib winmm.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e180000" /entry:"DllEntryPoint" /dll /incremental:no /pdb:"Release/TAPIKsIf.pdb" /map:"Release/TAPIKsIf.map" /machine:I386 /nodefaultlib /def:".\\TAPIKsIf.def" /out:"Release/TAPIKsIf.ax" /implib:"Release/TAPIKsIf.lib"\par 

Resulting size: 28KB\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Classes\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CCameraControlProperties{\v CCameraControlProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCameraControlProperty{\v CCameraControlProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin{\v CCapturePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCaptureProperties{\v CCaptureProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCaptureProperty{\v CCaptureProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCPUCProperties{\v CCPUCProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCPUCProperty{\v CCPUCProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CKSPropertyEditor{\v CKSPropertyEditor}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CNetworkStatsProperties{\v CNetworkStatsProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CNetworkStatsProperty{\v CNetworkStatsProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
COverlayPin{\v COverlayPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPreviewPin{\v CPreviewPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPreviewProperties{\v CPreviewProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPreviewProperty{\v CPreviewProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CProcAmpProperties{\v CProcAmpProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CProcAmpProperty{\v CProcAmpProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CProgRefProperties{\v CProgRefProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CRtpPdPin{\v CRtpPdPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CRtpPdProperties{\v CRtpPdProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CRtpPdProperty{\v CRtpPdProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin{\v CTAPIBasePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap{\v CTAPIVCap}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap{\v CTAPIVCap_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap{\v CTAPIVCap_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CWDMCapDev{\v CWDMCapDev}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CWDMDialog{\v CWDMDialog}\par 

\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::CCapturePin{\v CCapturePin__CCapturePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::CreateCapturePin{\v CCapturePin__CreateCapturePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::GetPages{\v CCapturePin__GetPages}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::m_pCaptureFilter{\v CCapturePin__m_pCaptureFilter}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::NonDelegatingQueryInterface{\v CCapturePin__NonDelegatingQueryInterface}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::videoFastUpdateGOB{\v CCapturePin__videoFastUpdateGOB}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::videoFastUpdateMB{\v CCapturePin__videoFastUpdateMB}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::videoFastUpdatePicture{\v CCapturePin__videoFastUpdatePicture}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::videoNotDecodedMBs{\v CCapturePin__videoNotDecodedMBs}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::videoSendSyncEveryGOB{\v CCapturePin__videoSendSyncEveryGOB}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::~CCapturePin{\v CCapturePin__.7eCCapturePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Prepare{\v CTAPIVCap__Prepare}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Unprepare{\v CTAPIVCap__Unprepare}\par 

\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Active{\v CTAPIBasePin__Active}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::ActivePause{\v CTAPIBasePin__ActivePause}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::ActiveRun{\v CTAPIBasePin__ActiveRun}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::CheckMediaType{\v CTAPIBasePin__CheckMediaType}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::CloseSoftCamCtrl{\v CTAPIBasePin__CloseSoftCamCtrl}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Commit{\v CTAPIBasePin__Commit}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::CTAPIBasePin{\v CTAPIBasePin__CTAPIBasePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::DecideAllocator{\v CTAPIBasePin__DecideAllocator}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::DecideBufferSize{\v CTAPIBasePin__DecideBufferSize}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Decommit{\v CTAPIBasePin__Decommit}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Flush{\v CTAPIBasePin__Flush}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetBuffer{\v CTAPIBasePin__GetBuffer}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentCPULoad{\v CTAPIBasePin__GetCurrentCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentFrameRate{\v CTAPIBasePin__GetCurrentFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentProcessingTime{\v CTAPIBasePin__GetCurrentProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetFormat{\v CTAPIBasePin__GetFormat}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxCPULoad{\v CTAPIBasePin__GetMaxCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxCPULoadRange{\v CTAPIBasePin__GetMaxCPULoadRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxFrameRate{\v CTAPIBasePin__GetMaxFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxFrameRateRange{\v CTAPIBasePin__GetMaxFrameRateRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxProcessingTime{\v CTAPIBasePin__GetMaxProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxProcessingTimeRange{\v CTAPIBasePin__GetMaxProcessingTimeRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMediaType{\v CTAPIBasePin__GetMediaType}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetNumberOfCapabilities{\v CTAPIBasePin__GetNumberOfCapabilities}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetProperties{\v CTAPIBasePin__GetProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetStreamCaps{\v CTAPIBasePin__GetStreamCaps}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Inactive{\v CTAPIBasePin__Inactive}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::IsSoftCamCtrlOpen{\v CTAPIBasePin__IsSoftCamCtrlOpen}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_AvgTimePerFrameRangeDefault{\v CTAPIBasePin__m_AvgTimePerFrameRangeDefault}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_AvgTimePerFrameRangeMax{\v CTAPIBasePin__m_AvgTimePerFrameRangeMax}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_AvgTimePerFrameRangeMin{\v CTAPIBasePin__m_AvgTimePerFrameRangeMin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_AvgTimePerFrameRangeSteppingDelta{\v CTAPIBasePin__m_AvgTimePerFrameRangeSteppingDelta}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_CurrentAvgTimePerFrame{\v CTAPIBasePin__m_CurrentAvgTimePerFrame}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_CurrentProcessingTime{\v CTAPIBasePin__m_CurrentProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwBitrateRangeDefault{\v CTAPIBasePin__m_dwBitrateRangeDefault}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwBitrateRangeMax{\v CTAPIBasePin__m_dwBitrateRangeMax}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwBitrateRangeMin{\v CTAPIBasePin__m_dwBitrateRangeMin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwBitrateRangeSteppingDelta{\v CTAPIBasePin__m_dwBitrateRangeSteppingDelta}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwConversionType{\v CTAPIBasePin__m_dwConversionType}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwCurrentBitrate{\v CTAPIBasePin__m_dwCurrentBitrate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwCurrentCPULoad{\v CTAPIBasePin__m_dwCurrentCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwFrame{\v CTAPIBasePin__m_dwFrame}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwLastIFrameTime{\v CTAPIBasePin__m_dwLastIFrameTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwLastTimestamp{\v CTAPIBasePin__m_dwLastTimestamp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwMaxBitrate{\v CTAPIBasePin__m_dwMaxBitrate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwMaxCPULoad{\v CTAPIBasePin__m_dwMaxCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwNumBytesDelivered{\v CTAPIBasePin__m_dwNumBytesDelivered}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_dwNumFramesDelivered{\v CTAPIBasePin__m_dwNumFramesDelivered}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fConvert{\v CTAPIBasePin__m_fConvert}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fFlipHorizontal{\v CTAPIBasePin__m_fFlipHorizontal}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fFlipVertical{\v CTAPIBasePin__m_fFlipVertical_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fFlipVertical{\v CTAPIBasePin__m_fFlipVertical}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fPeriodicIFrames{\v CTAPIBasePin__m_fPeriodicIFrames}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fSoftCamCtrl{\v CTAPIBasePin__m_fSoftCamCtrl}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_fTemporalCompress{\v CTAPIBasePin__m_fTemporalCompress}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_hIC{\v CTAPIBasePin__m_hIC}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_MaxAvgTimePerFrame{\v CTAPIBasePin__m_MaxAvgTimePerFrame}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_MaxProcessingTime{\v CTAPIBasePin__m_MaxProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_parms{\v CTAPIBasePin__m_parms}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbiIn{\v CTAPIBasePin__m_pbiIn}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbiInt{\v CTAPIBasePin__m_pbiInt}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbiOut{\v CTAPIBasePin__m_pbiOut}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbiSCCIn{\v CTAPIBasePin__m_pbiSCCIn}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbiSCCOut{\v CTAPIBasePin__m_pbiSCCOut}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbyCamCtrl{\v CTAPIBasePin__m_pbyCamCtrl}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pbyOut{\v CTAPIBasePin__m_pbyOut}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::m_pCaptureFilter{\v CTAPIBasePin__m_pCaptureFilter}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::NonDelegatingQueryInterface{\v CTAPIBasePin__NonDelegatingQueryInterface}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::OpenSoftCamCtrl{\v CTAPIBasePin__OpenSoftCamCtrl}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::Reconnect{\v CTAPIBasePin__Reconnect}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::ReleaseBuffer{\v CTAPIBasePin__ReleaseBuffer}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SendFrame{\v CTAPIBasePin__SendFrame}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetFormat{\v CTAPIBasePin__SetFormat}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxCPULoad{\v CTAPIBasePin__SetMaxCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxFrameRate{\v CTAPIBasePin__SetMaxFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxProcessingTime{\v CTAPIBasePin__SetMaxProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMediaType{\v CTAPIBasePin__SetMediaType}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetProperties{\v CTAPIBasePin__SetProperties}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::~CTAPIBasePin{\v CTAPIBasePin__.7eCTAPIBasePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::ReleaseFrame{\v CTAPIVCap__ReleaseFrame}\par 

\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Get{\v CTAPIVCap__Get}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetCurrentDevice{\v CTAPIVCap__GetCurrentDevice}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetDeviceInfo{\v CTAPIVCap__GetDeviceInfo}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetNumDevices{\v CTAPIVCap__GetNumDevices}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetRange{\v CTAPIVCap__GetRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_fDialogUp{\v CTAPIVCap__m_fDialogUp_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_fDialogUp{\v CTAPIVCap__m_fDialogUp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_fDialogUp{\v CTAPIVCap__m_fDialogUp_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_lock{\v CTAPIVCap__m_lock_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_lock{\v CTAPIVCap__m_lock_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_lock{\v CTAPIVCap__m_lock}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pCapturePin{\v CTAPIVCap__m_pCapturePin_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pCapturePin{\v CTAPIVCap__m_pCapturePin_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pCapturePin{\v CTAPIVCap__m_pCapturePin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pOverlayPin{\v CTAPIVCap__m_pOverlayPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pOverlayPin{\v CTAPIVCap__m_pOverlayPin_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pOverlayPin{\v CTAPIVCap__m_pOverlayPin_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pPreviewPin{\v CTAPIVCap__m_pPreviewPin_2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pPreviewPin{\v CTAPIVCap__m_pPreviewPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pPreviewPin{\v CTAPIVCap__m_pPreviewPin_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::m_pRtpPdPin{\v CTAPIVCap__m_pRtpPdPin}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Set{\v CTAPIVCap__Set}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::SetCurrentDevice{\v CTAPIVCap__SetCurrentDevice}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Common control enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Common control structures\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Constants\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CONVERSIONTYPE_DECODE{\v CONVERSIONTYPE_DECODE}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CONVERSIONTYPE_ENCODE{\v CONVERSIONTYPE_ENCODE}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CONVERSIONTYPE_NONE{\v CONVERSIONTYPE_NONE}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CONVERSIONTYPE_SCALER{\v CONVERSIONTYPE_SCALER}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DISPLAY_DLG_OFF{\v DISPLAY_DLG_OFF}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DISPLAY_DLG_ON{\v DISPLAY_DLG_ON}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
FORMAT_DLG_OFF{\v FORMAT_DLG_OFF}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
FORMAT_DLG_ON{\v FORMAT_DLG_ON}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
NUM_4BIT_ENTRIES{\v NUM_4BIT_ENTRIES}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
NUM_8BIT_ENTRIES{\v NUM_8BIT_ENTRIES}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
SOURCE_DLG_OFF{\v SOURCE_DLG_OFF}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
SOURCE_DLG_ON{\v SOURCE_DLG_ON}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_BI_BITFIELDS{\v VIDEO_FORMAT_BI_BITFIELDS}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_BI_RGB{\v VIDEO_FORMAT_BI_RGB}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_BI_RLE4{\v VIDEO_FORMAT_BI_RLE4}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_BI_RLE8{\v VIDEO_FORMAT_BI_RLE8}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_CVID{\v VIDEO_FORMAT_CVID}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_112_80{\v VIDEO_FORMAT_IMAGE_SIZE_112_80}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_120_90{\v VIDEO_FORMAT_IMAGE_SIZE_120_90}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_128_96{\v VIDEO_FORMAT_IMAGE_SIZE_128_96}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_144_112{\v VIDEO_FORMAT_IMAGE_SIZE_144_112}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_160_120{\v VIDEO_FORMAT_IMAGE_SIZE_160_120}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_160_128{\v VIDEO_FORMAT_IMAGE_SIZE_160_128}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_176_144{\v VIDEO_FORMAT_IMAGE_SIZE_176_144}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_192_160{\v VIDEO_FORMAT_IMAGE_SIZE_192_160}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_200_150{\v VIDEO_FORMAT_IMAGE_SIZE_200_150}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_208_176{\v VIDEO_FORMAT_IMAGE_SIZE_208_176}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_224_192{\v VIDEO_FORMAT_IMAGE_SIZE_224_192}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_240_180{\v VIDEO_FORMAT_IMAGE_SIZE_240_180}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_240_208{\v VIDEO_FORMAT_IMAGE_SIZE_240_208}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_256_224{\v VIDEO_FORMAT_IMAGE_SIZE_256_224}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_272_240{\v VIDEO_FORMAT_IMAGE_SIZE_272_240}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_280_210{\v VIDEO_FORMAT_IMAGE_SIZE_280_210}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_288_256{\v VIDEO_FORMAT_IMAGE_SIZE_288_256}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_304_272{\v VIDEO_FORMAT_IMAGE_SIZE_304_272}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_320_240{\v VIDEO_FORMAT_IMAGE_SIZE_320_240}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_320_288{\v VIDEO_FORMAT_IMAGE_SIZE_320_288}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_336_288{\v VIDEO_FORMAT_IMAGE_SIZE_336_288}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_352_288{\v VIDEO_FORMAT_IMAGE_SIZE_352_288}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_40_30{\v VIDEO_FORMAT_IMAGE_SIZE_40_30}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_640_480{\v VIDEO_FORMAT_IMAGE_SIZE_640_480}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_64_48{\v VIDEO_FORMAT_IMAGE_SIZE_64_48}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_80_60{\v VIDEO_FORMAT_IMAGE_SIZE_80_60}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IMAGE_SIZE_96_64{\v VIDEO_FORMAT_IMAGE_SIZE_96_64}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_INTELH261{\v VIDEO_FORMAT_INTELH261}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_INTELH263{\v VIDEO_FORMAT_INTELH263}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_IV32{\v VIDEO_FORMAT_IV32}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_MRLE{\v VIDEO_FORMAT_MRLE}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_MSH261{\v VIDEO_FORMAT_MSH261}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_MSH263{\v VIDEO_FORMAT_MSH263}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_MSVC{\v VIDEO_FORMAT_MSVC}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_16{\v VIDEO_FORMAT_NUM_COLORS_16}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_16777216{\v VIDEO_FORMAT_NUM_COLORS_16777216}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_256{\v VIDEO_FORMAT_NUM_COLORS_256}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_65536{\v VIDEO_FORMAT_NUM_COLORS_65536}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_I420{\v VIDEO_FORMAT_NUM_COLORS_I420}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_IYUV{\v VIDEO_FORMAT_NUM_COLORS_IYUV}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_M261{\v VIDEO_FORMAT_NUM_COLORS_M261}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_M263{\v VIDEO_FORMAT_NUM_COLORS_M263}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_UYVY{\v VIDEO_FORMAT_NUM_COLORS_UYVY}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_YUY2{\v VIDEO_FORMAT_NUM_COLORS_YUY2}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_COLORS_YVU9{\v VIDEO_FORMAT_NUM_COLORS_YVU9}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_NUM_IMAGE_SIZE{\v VIDEO_FORMAT_NUM_IMAGE_SIZE}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_UNKNOWN{\v VIDEO_FORMAT_UNKNOWN}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_VDEC{\v VIDEO_FORMAT_VDEC}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEO_FORMAT_YVU9{\v VIDEO_FORMAT_YVU9}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMCameraControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Get{\v CTAPIVCap__Get}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetRange{\v CTAPIVCap__GetRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Set{\v CTAPIVCap__Set}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMCameraControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMCrossbar methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMCrossbar structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVfwCaptureDialogs methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CVfWCapDev::HasDialog{\v CVfWCapDev__HasDialog}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CVfWCapDev::SendDriverMessage{\v CVfWCapDev__SendDriverMessage}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CVfWCapDev::ShowDialog{\v CVfWCapDev__ShowDialog}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVfwCaptureDialogs structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVideoControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCaps{\v CTAPIBasePin__GetCaps}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentActualFrameRate{\v CTAPIBasePin__GetCurrentActualFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetFrameRateList{\v CTAPIBasePin__GetFrameRateList}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxAvailableFrameRate{\v CTAPIBasePin__GetMaxAvailableFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMode{\v CTAPIBasePin__GetMode}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMode{\v CTAPIBasePin__SetMode}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetCaps{\v CTAPIVCap__GetCaps}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetCurrentActualFrameRate{\v CTAPIVCap__GetCurrentActualFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetFrameRateList{\v CTAPIVCap__GetFrameRateList}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetMaxAvailableFrameRate{\v CTAPIVCap__GetMaxAvailableFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetMode{\v CTAPIVCap__GetMode}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::SetMode{\v CTAPIVCap__SetMode}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVideoControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
VideoControlFlags{\v VideoControlFlags}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVideoProcAmp methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Get{\v CTAPIVCap__Get_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetRange{\v CTAPIVCap__GetRange_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::Set{\v CTAPIVCap__Set_1}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IAMVideoProcAmp structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IBitrateControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IBitrateControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ICPUControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentCPULoad{\v CTAPIBasePin__GetCurrentCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentProcessingTime{\v CTAPIBasePin__GetCurrentProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxCPULoad{\v CTAPIBasePin__GetMaxCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxCPULoadRange{\v CTAPIBasePin__GetMaxCPULoadRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxProcessingTime{\v CTAPIBasePin__GetMaxProcessingTime}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxProcessingTimeRange{\v CTAPIBasePin__GetMaxProcessingTimeRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxCPULoad{\v CTAPIBasePin__SetMaxCPULoad}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxProcessingTime{\v CTAPIBasePin__SetMaxProcessingTime}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ICPUControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IFrameRateControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetCurrentFrameRate{\v CTAPIBasePin__GetCurrentFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxFrameRate{\v CTAPIBasePin__GetMaxFrameRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::GetMaxFrameRateRange{\v CTAPIBasePin__GetMaxFrameRateRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIBasePin::SetMaxFrameRate{\v CTAPIBasePin__SetMaxFrameRate}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IFrameRateControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IH245EncoderCommand methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IH245EncoderCommand structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
VIDEOFASTUPDATEGOB_S{\v VIDEOFASTUPDATEGOB_S}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEOFASTUPDATEMB_S{\v VIDEOFASTUPDATEMB_S}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VIDEONOTDECODEDMBS_S{\v VIDEONOTDECODEDMBS_S}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IH245VideoCapability methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::FindIDByRange{\v CTAPIVCap__FindIDByRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetFormatTable{\v CTAPIVCap__GetFormatTable}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetH245VersionID{\v CTAPIVCap__GetH245VersionID}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetLocalFormat{\v CTAPIVCap__GetLocalFormat}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetNegotiatedLimitProperty{\v CTAPIVCap__GetNegotiatedLimitProperty}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::IntersectFormats{\v CTAPIVCap__IntersectFormats}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::ReleaseFormatTable{\v CTAPIVCap__ReleaseFormatTable}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::ReleaseNegotiatedCapability{\v CTAPIVCap__ReleaseNegotiatedCapability}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::SetIDBase{\v CTAPIVCap__SetIDBase}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IH245VideoCapability structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 INetworkStats methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::GetChannelErrors{\v CCapturePin__GetChannelErrors}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::GetChannelErrorsRange{\v CCapturePin__GetChannelErrorsRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::GetPacketLossRate{\v CCapturePin__GetPacketLossRate}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::GetPacketLossRateRange{\v CCapturePin__GetPacketLossRateRange}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::SetChannelErrors{\v CCapturePin__SetChannelErrors}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::SetPacketLossRate{\v CCapturePin__SetPacketLossRate}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 INetworkStats structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IProgressiveRefinement methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::doContinuousIndependentProgressions{\v CCapturePin__doContinuousIndependentProgressions}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::doContinuousProgressions{\v CCapturePin__doContinuousProgressions}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::doOneIndependentProgression{\v CCapturePin__doOneIndependentProgression}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::doOneProgression{\v CCapturePin__doOneProgression}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::progressiveRefinementAbortContinuous{\v CCapturePin__progressiveRefinementAbortContinuous}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CCapturePin::progressiveRefinementAbortOne{\v CCapturePin__progressiveRefinementAbortOne}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IProgressiveRefinement structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IRTPPDControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IRTPPDControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVideoDeviceControl methods\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetCurrentDevice{\v CTAPIVCap__GetCurrentDevice}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetDeviceInfo{\v CTAPIVCap__GetDeviceInfo}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::GetNumDevices{\v CTAPIVCap__GetNumDevices}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CTAPIVCap::SetCurrentDevice{\v CTAPIVCap__SetCurrentDevice}\par 

\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 IVideoDeviceControl structures and enums\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Modules\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\par 
\pard\plain \s93\sl240 \fs21\lang1033 
\pard\plain \s93\sl240 \fs21\lang1033 
BasePin.cpp{\v BasePin.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
BasePin.h{\v BasePin.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Bitrate.cpp{\v Bitrate.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CameraC.cpp{\v CameraC.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CameraCP.cpp{\v CameraCP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CameraCP.h{\v CameraCP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CameraCS.cpp{\v CameraCS.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Capture.cpp{\v Capture.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Capture.h{\v Capture.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CaptureP.cpp{\v CaptureP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CaptureP.h{\v CaptureP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Convert.cpp{\v Convert.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPUC.cpp{\v CPUC.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPUCP.cpp{\v CPUCP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
CPUCP.h{\v CPUCP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DevEnum.cpp{\v DevEnum.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DevEnum.h{\v DevEnum.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Device.cpp{\v Device.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DeviceP.cpp{\v DeviceP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DeviceV.cpp{\v DeviceV.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
DeviceW.cpp{\v DeviceW.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Formats.cpp{\v Formats.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Formats.h{\v Formats.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
FpsRate.cpp{\v FpsRate.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
H245VidC.cpp{\v H245VidC.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
H245VidE.cpp{\v H245VidE.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
KSEditor.cpp{\v KSEditor.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
KSEditor.h{\v KSEditor.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
NetStatP.cpp{\v NetStatP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
NetStatP.h{\v NetStatP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
NetStats.cpp{\v NetStats.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Overlay.cpp{\v Overlay.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Overlay.h{\v Overlay.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Precomp.h{\v Precomp.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Preview.cpp{\v Preview.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Preview.h{\v Preview.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
PreviewP.cpp{\v PreviewP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
PreviewP.h{\v PreviewP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProcAmp.cpp{\v ProcAmp.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProcAmpP.cpp{\v ProcAmpP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProcAmpP.h{\v ProcAmpP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProgRef.cpp{\v ProgRef.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProgRefP.cpp{\v ProgRefP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
ProgRefP.h{\v ProgRefP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
RtpPd.cpp{\v RtpPd.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
RtpPd.h{\v RtpPd.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
RtpPdP.cpp{\v RtpPdP.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
RtpPdP.h{\v RtpPdP.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
TAPIVCap.cpp{\v TAPIVCap.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
TAPIVCap.h{\v TAPIVCap.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Thunk.c{\v Thunk.c_1}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
Thunk.c{\v Thunk.c}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VfWDlgs.cpp{\v VfWDlgs.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
VidCtrl.cpp{\v VidCtrl.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
WDMDialg.cpp{\v WDMDialg.cpp}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
WDMDialg.h{\v WDMDialg.h}\par 

\pard\plain \s93\sl240 \fs21\lang1033 
WrkrThd.cpp{\v WrkrThd.cpp}\par 

\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module BasePin.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 class methods 
used to implement the TAPI base output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module BasePin.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CTAPIBasePin}
 class methods 
used to implement the TAPI base output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Bitrate.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BITRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 class methods 
used to implement the output pin bitrate control.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CameraC.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERAC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 
class methods used to implement the {\b IAMCameraControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This class does everything in software. When the same kind of 
services are supported in the capture device, use them.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CameraCP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCameraControlProperty}
 
class used to implement a property page to test the DShow interface 
{\b IAMCameraControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMCameraControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CameraCP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CCameraControlProperty}
 
class used to implement a property page to test the DShow interface 
{\b IAMCameraControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMCameraControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CameraCS.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 class methods 
used to implement the software-only camera control functions.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Capture.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCapturePin}
 class methods 
used to implement the video capture output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Capture.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CCapturePin}
 class methods 
used to implement the video capture output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CaptureP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source ile for the {\b CCaptureProperty}
 
class used to implement a property page to test the new TAPI internal 
interfaces {\b IBitrateControl}, {\b IFrameRateControl}, and dynamic 
format changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IBitrateControl}, 
{\b IFrameRateControl}, and dynamic format change implementation. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CaptureP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CCaptureProperty}
 
class used to implement a property page to test the new TAPI internal 
interfaces {\b IBitrateControl}, {\b IFrameRateControl}, and dynamic 
format changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IBitrateControl}, 
{\b IFrameRateControl}, and dynamic format change implementation. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Convert.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CPreviewPin}
 class methods 
used to implement the video capture and preview pin format conversion 
routines.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Merge the two ScaleDIB methods\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CPUC.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 class methods 
used to implement CPU control.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CPUCP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source ile for the {\b CCPUCProperty}
 
class used to implement a property page to test the new TAPI internal 
interface {\b ICPUControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Output Pins {\b ICPUControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module CPUCP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CCPUCProperty}
 
class used to implement a property page to test the new TAPI internal 
interfaces {\b ICPUControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Output Pins {\b ICPUControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module DevEnum.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 class methods 
used to implement the {\b IVideoDeviceControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Checked in code should always have the following line commented 
#define WDM_DEVICES_ONLY 1\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module DevEnum.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Our Devenum exports.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Device.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCapDev}
 
base class used to communicate with the capture device.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module DeviceP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CDeviceProperties}
 
class used to implement a property page to test the {\b IAMVfwCaptureDialogs} 
and {\b IVideoDeviceControl} interfaces.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IVideoDeviceControl} 
and {\b IAMVfwCaptureDialogs} implementations. This code is only compiled 
if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module DeviceV.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CVfWCapDev}
 
base class used to communicate with a VfW capture device.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module DeviceW.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CWDMCapDev}
 
base class used to communicate with a WDM capture device.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove this before checkin! 
#define DUMP_DRIVER_CHARACTERISTICS 1\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Formats.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 
class methods used to implement the video capture and preview output 
pin format manipulation methods. This includes the {\b IAMStreamConfig} 
interface methods.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Formats.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CCapturePin}
 and {\b CPreviewPin}
 
class methods used to implement the video capture and preview output 
pin format manipulations. This includes the {\b IAMStreamConfig} 
interface methods.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 That'a whole lot of static data. Do this dynamically whenever 
appropriate.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Switch to the new format definition when done with the decoder\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Document this structure\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Document this structure\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Document this structure\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Document this structure\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Why isn't this 33333?\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module FpsRate.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FPSRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIBasePin}
 and {\b CPreviewPin}
 
class methods used to implement the video capture and preview output 
pins frame rate control methods.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module H245VidC.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 class methods 
used to implement the {\b IH245VideoCapability} TAPI inteface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module H245VidE.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCapturePin}
 class methods 
used to implement the video capture output pin H.245 encoder command 
methods.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module KSEditor.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CKSPropertyEditor}
 
class used to implement behavior of a single property to be displayed 
in a property page.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the Ks interface handlers. This code is only 
compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module KSEditor.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CKSPropertyEditor}
 
class used to implement behavior of a single property to be displayed 
in a property page.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the Ks interface handlers. This code is only 
compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module NetStatP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CNetworkStatsProperty}
 
class used to implement a property page to test the new TAPI internal 
interface {\b INetworkStats}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b INetworkStats} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module NetStatP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CNetworkStatsProperty}
 
class used to implement a property page to test the new TAPI internal 
interface {\b INetworkStats}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b INetworkStats} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module NetStats.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCapturePin}
 class methods 
used to implement the video capture output pin network statistics 
methods.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Overlay.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b COverlayPin}
 class methods 
used to implement the video overlay pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Overlay.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b COverlayPin}
 class methods 
used to implement the video overlay output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Precomp.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PRECOMP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Master header file.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Preview.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CPreviewPin}
 class methods 
used to implement the video capture preview pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Preview.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CPreviewPin}
 class methods 
used to implement the video preview output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module PreviewP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CPreviewProperty}
 
class used to implement a property page to test the new TAPI internal 
interface {\b IFrameRateControl} and dynamic format changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Preview Pin {\b IFrameRateControl}, 
and dynamic format change implementation. This code is only compiled 
if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module PreviewP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CPreviewProperty}
 
class used to implement a property page to test the new TAPI internal 
interface {\b IFrameRateControl} and dynamic format changes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Preview Pin {\b IFrameRateControl}, 
and dynamic format change implementation. This code is only compiled 
if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProcAmp.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 
class methods used to implement the {\b IAMVideoProcAmp} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProcAmpP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CProcAmpProperty}
 
class used to implement a property page to test the DShow interface 
{\b IAMVideoProcAmp}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMVideoProcAmp} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProcAmpP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CProcAmpProperty}
 
class used to implement a property page to test the DShow interface 
{\b IAMVideoProcAmp}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMVideoProcAmp} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProgRef.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CCapturePin}
 class methods 
used to implement the video capture output pin progressive refinement 
methods.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Understand how to make this work on a still-pin\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProgRefP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CProgRefProperties}
 
class used to implement a property page to test the new TAPI internal 
interface {\b IProgressiveRefinement}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IProgressiveRefinement} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module ProgRefP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CProgRefProperties}
 
class used to implement a property page to test the new TAPI internal 
interface {\b IProgressiveRefinement}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IProgressiveRefinement} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module RtpPd.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CRtpPdPin}
 class methods 
used to implement the RTP packetization descriptor pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module RtpPd.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CRtpPdPin}
 class methods 
used to implement the RTP packetization descriptor output pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module RtpPdP.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CRtpPdProperty}
 
class used to implement a property page to test the new TAPI internal 
interfaces {\b IRTPPDControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI Rtp Pd Output Pins {\b IRTPPDControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module RtpPdP.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b CRtpPdProperty}
 
class used to implement a property page to test the new TAPI internal 
interfaces {\b IRTPPDControl}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI Rtp Pd Output Pins {\b IRTPPDControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module TAPIVCap.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b VCfWCapture}
 
class used to implement the TAPI VfW Capture Source filter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module TAPIVCap.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Header file for the {\b VCfWCapture}
 
class used to implement the TAPI VfW Capture Source filter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Thunk.c\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDEO.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the VfW video API.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module Thunk.c\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for thunking to 16-bit code without using 
the thunk compiler.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module VfWDlgs.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VFWDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CVfWCapDev}
 
class methods used to implement the {\b IAMVfwCaptureDialogs} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module VidCtrl.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 
class methods used to implement the {\b IAMVideoControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module WDMDialg.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for {\b CWDMDialog}
 class used to display 
video settings and camera controls dialog for WDM devices.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code is based on the VfW to WDM mapper code written by 
FelixA and E-zu Wu. The original code can be found on 
\\redrum\\slmro\\proj\\wdm10\\src\\image\\vfw\\win9x\\raytube.\par 

Documentation by George Shaw on kernel streaming can be found in 
\\popcorn\\razzle1\\src\\spec\\ks\\ks.doc.\par 

WDM streaming capture is discussed by Jay Borseth in 
\\blues\\public\\jaybo\\WDMVCap.doc.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module WDMDialg.h\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Include file for {\b CWDMDialog}
 class used to display 
video settings and camera controls dialog for WDM devices.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code is based on the VfW to WDM mapper code written by 
FelixA and E-zu Wu. The original code can be found on 
\\redrum\\slmro\\proj\\wdm10\\src\\image\\vfw\\win9x\\raytube.\par 

Documentation by George Shaw on kernel streaming can be found in 
\\popcorn\\razzle1\\src\\spec\\ks\\ks.doc.\par 

WDM streaming capture is discussed by Jay Borseth in 
\\blues\\public\\jaybo\\WDMVCap.doc.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 Module WrkrThd.cpp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Filename: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Description\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Source file for the {\b CTAPIVCap}
 class methods 
used to implement the video capture worker thread.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCameraControlProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class runs a property page to test 
the TAPI VfW Capture Filter {\b IAMCameraControl} implementation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::CCameraControlProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCameraControlProperties}{\b ::CCameraControlProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CCameraControlProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a Network Statistics 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::m_Controls[NUM_CAMERA_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCameraControlProperty * CCameraControlProperties::m_Controls[NUM_CAMERA_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of camera control properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMCameraControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCameraControlProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::m_pIAMCameraControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IAMCameraControl * CCameraControlProperties::m_pIAMCameraControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IAMCameraControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCameraControlProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCameraControlProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperties::~CCameraControlProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCameraControlProperties}{\b ::~CCameraControlProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for camera control property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCameraControlProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single camera control property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::CCameraControlProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCameraControlProperty}{\b ::CCameraControlProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , IAMCameraControl*} {\i pInterface}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for camera control property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
a pointer to the {\b IAMCameraControl} interface.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property progress bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInterface}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IAMCameraControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCameraControlProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IAMCameraControl * CCameraControlProperty::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IAMCameraControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMCameraControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCameraControlProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCameraControlProperty::~CCameraControlProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCameraControlProperty}{\b ::~CCameraControlProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for camera control property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapDev::CCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCapDev}{\b ::CCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the constructor 
for the {\b CCapDev}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapDev::GetFormatsFromRegistry\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapDev}{\b ::GetFormatsFromRegistry(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve from the registry the list of formats supported by the 
capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 If this is a QuickCam device you may have to use a hardcoded 
palette instead of the one provided by the device\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapDev::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapDev}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMVfWCaptureDialogs}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapDev::ProfileCaptureDevice\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapDev}{\b ::ProfileCaptureDevice(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the list of formats supported by the capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If there is no entry for the VfW capture device in the list 
maintained by the TAPI MSP Video Capture filter, the TAPI MSP Video 
Capture filter will first query the capture device for its current 
video capture format, and save this information in case the following 
steps result in a crash.\par 

Then, the TAPI MSP Video Capture filter applies a set of preferred 
formats on the capture device using SendDriverMessage with the 
DVM_FORMAT message. For each applied format, the TAPI MSP Video 
Capture filter will not only verify the return code of the 
SendDriverMessage, but also query back the current format to make 
sure the set format operation really succeeded. If the capture device 
fails one of the two previous steps, the TAPI MSP Video Capture 
filter will assume that the format is not supported. Once the TAPI 
MSP Video Capture filter is done with the entire list of preferred 
formats and no crash occurred, the list of video formats supported by 
the capture device is added to the list maintained by the TAPI MSP 
Video Capture filter.\par 

As soon as the enumeration process succeeds for one "small" (128x96 
or 160x120), one "medium" (176x144 or 160x120), one "large" (352x288 
or 320x240) and one "very large" size (704x576 or 640x480), the TAPI 
MSP Video Capture filter stops the enumeration process and adds the 
resulting list of formats to its database. The TAPI MSP Video Capture 
filter will test the previous sizes for I420, IYUV, YUY2, UYVY, YVU9, 
RGB16, RGB24, RGB8, and RGB4 formats, in this described order.\par 

The device will also be marked as a frame-grabbing device in the TAPI 
MSP Video Capture filter device database.\par 

If there is an entry for the VfW capture device in the list maintained 
by the TAPI MSP Video Capture filter, the TAPI MSP Video Capture 
filter first verifies if the information contained is a complete list 
of supported formats, or only a default format. The entry will only 
contain a default format if the capture device did not support any of 
the preferred formats, or a crash occurred during the enumeration process.\par 

If there is only a default format stored for the VfW capture device, 
the TAPI MSP Video Capture filter will build a list of media types that 
can be built from the default format using black-banding and/or cropping. 
If the default format is in a compressed format, the TAPI MSP Video 
Capture filter will try and locate and ICM driver that can do the 
decompression from the compressed format to RGB.\par 

If the device supports a list of formats from the preferred list of 
formats, the TAPI MSP Video Capture filter will use this list to 
advertise the capabilities of the capture device.\par 

In all cases (VfW and WDM capture devices, Videoconferencing 
Accelerators), the TAPI MSP Video Capture filter won't query the 
device for capabilities but always use the list of formats stored in 
its database for this capture device.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 VCMSTRM.cpp does some weird shit with the name - probably due to bogus device 
Repro this code\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 For now, get all the formats supported 
break;\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapDev::~CCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCapDev}{\b ::~CCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CCapDev}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCapturePin}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the video capture output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::CCapturePin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::CCapturePin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the 
constructorfor the {\b CCapturePin}
 object\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 With WDM, these numbers need to come from the device\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::CreateCapturePin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CCapturePin*} {\b CCapturePin}{\b ::CreateCapturePin(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , CCapturePin**} {\i ppCapturePin}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This helper 
function creates a video output pin for capture.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppCapturePin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that address of a pointer 
to a {\b CCapturePin}
 object to receive the a pointer to the newly 
created pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::doContinuousIndependentProgressions\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::doContinuousIndependentProgressions(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to 
begin an independent progressive refinement sequence several Intra 
pictures.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::doContinuousProgressions\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::doContinuousProgressions(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to 
begin producing progressive refinement sequences for several pictures.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::doOneIndependentProgression\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::doOneIndependentProgression(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to begin 
an independent progressive refinement sequence for one Intra picture.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::doOneProgression\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::doOneProgression(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to 
begin producing a progressive refinement sequence for one picture.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::GetChannelErrors\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::GetChannelErrors(}{\b CHANNELERRORS_S*} {\i pChannelErrors}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to supply to the network sink filter the error channel 
conditions an output pin is currently setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pChannelErrors}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
structure to receive error channel conditions.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::GetChannelErrorsRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::GetChannelErrorsRange(}{\b CHANNELERRORS_S*} {\i pMin}{\b , CHANNELERRORS_S*} {\i pMax}{\b , CHANNELERRORS_S*} {\i pSteppingDelta}{\b , CHANNELERRORS_S*} {\i pDefault}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default values 
for the channel error conditions an output pin may be setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum values of 
channel error conditions an output pin maybe setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum values of 
channel error conditions an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping 
delta values of channel error conditions an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default values 
of channel error conditions an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::GetPacketLossRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::GetPacketLossRate(}{\b LPDWORD} {\i pdwPacketLossRate}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to supply to the network sink filter the packet loss rate 
channel conditions an output pin is currently setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwPacketLossRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to 
receive the packet loss rate of the channel an audio output pin is 
currently setup for, in multiples of 10-6.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::GetPacketLossRateRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::GetPacketLossRateRange(}{\b LPDWORD} {\i pdwMin}{\b , LPDWORD} {\i pdwMax}{\b , LPDWORD} {\i pdwSteppingDelta}{\b , LPDWORD} {\i pdwDefault}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default values 
for the packet loss rate conditions an output pin may be setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum packet loss rate 
an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum packet loss rate 
an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping delta 
values of packet loss rate an output pin may be setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default packet loss 
rate an output pin is setup for.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::GetPages\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::GetPages(}{\b CAUUID*} {\i pPages}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method Fills a counted 
array of GUID values where each GUID specifies the CLSID of each 
property page that can be displayed in the property sheet for this 
object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocation failed\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPages}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a caller-allocated CAUUID 
structure that must be initialized and filled before returning. The 
pElems field in the CAUUID structure is allocated by the callee with 
CoTaskMemAlloc and freed by the caller with CoTaskMemFree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Make sure this is effectively freed at some point\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::m_pCaptureFilter\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CTAPIVCap* CCapturePin::m_pCaptureFilter}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reference to the 
parent capture filter.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Supports IPin. Never created by COM, so no CreateInstance or entry 
in global FactoryTemplate table. Only ever created by a {\b CTAPIVCap}
 
object and returned via the EnumPins interface\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMStreamConfig}, 
{\b IAMStreamControl}, {\b ICPUControl}, {\b IFrameRateControl}, 
{\b IBitrateControl}, {\b INetworkStats}, {\b IH245EncoderCommand} 
and {\b IProgressiveRefinement}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::progressiveRefinementAbortContinuous\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::progressiveRefinementAbortContinuous(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to 
terminate a progressive refinement sequence for all pictures.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::progressiveRefinementAbortOne\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::progressiveRefinementAbortOne(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to command the compressed still-image output pin to 
terminate a progressive refinement sequence for the current picture.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREF.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::SetChannelErrors\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::SetChannelErrors(}{\b CHANNELERRORS_S*} {\i pChannelErrors}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to inform the compressed output pin of the error channel 
conditions.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pChannelErrors}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the error channel 
conditions.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::SetPacketLossRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::SetPacketLossRate(}{\b DWORD} {\i dwPacketLossRate}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to inform an output pin of the channel packet loss rate.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_CONNECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Pin not connected yet\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwPacketLossRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the packet loss rate of the 
channel in multiples of 10-6.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::videoFastUpdateGOB\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::videoFastUpdateGOB(}{\b DWORD} {\i dwFirstGOB}{\b , DWORD} {\i dwNumberOfGOBs}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the compressed video output pin to 
perform a fast update of one or more GOBs.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFirstGOB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first GOB to be 
updated. This value is only valid between 0 and 17.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumberOfGOBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of GOBs to be 
updated. This value is only valid between 1 and 18.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::videoFastUpdateMB\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::videoFastUpdateMB(}{\b DWORD} {\i dwFirstGOB}{\b , DWORD} {\i dwFirstMB}{\b , DWORD} {\i dwNumberOfMBs}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the compressed video output pin to 
perform a fast update of one or more GOBs.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFirstGOB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first GOB to be 
updated and is only relative to H.263. This value is only valid 
between 0 and 255.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFirstMB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first MB to be 
updated and is only relative to H.261. This value is only valid 
between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumberOfMBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of MBs to be updated. 
This value is only valid between 1 and 8192.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::videoFastUpdatePicture\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::videoFastUpdatePicture(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the compressed video output pin to enter 
the fast-update picture mode at its earliest opportunity.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::videoNotDecodedMBs\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::videoNotDecodedMBs(}{\b DWORD} {\i dwFirstMB}{\b , DWORD} {\i dwNumberOfMBs}{\b , DWORD} {\i dwTemporalReference}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to indicate to the compressed video output pin that a 
set of MBs has been received with errors and that any MB in the 
specified set has been treated as not coded.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFirstMB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first MB 
treated as not coded. This value is only valid between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumberOfMBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of MBs treated as not 
coded. This value is only valid between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwTemporalReference}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the temporal reference of 
the picture containing not decoded MBs. This value is only valid 
between 0 and 255.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::videoSendSyncEveryGOB\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCapturePin}{\b ::videoSendSyncEveryGOB(}{\b BOOL} {\i fEnable}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the compressed video output pin to use 
sync for every GOB as defined in H.263.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fEnable}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If set to TRUE, specifies that the video 
output pin should use sync for every GOB; if set to FALSE, specifies 
that the video output pin should decide the frequency of GOB syncs on 
its own.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCapturePin::~CCapturePin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCapturePin}{\b ::~CCapturePin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CCapturePin}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTURE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCaptureProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interfaces {\b IBitrateControl} and 
{\b IFrameRateControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::CCaptureProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCaptureProperties}{\b ::CCaptureProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CCaptureProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a TAPI Capture Pin 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::InitialRangeScan\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::InitialRangeScan(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the list of supported formats on the pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::m_Controls[NUM_CAPTURE_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCaptureProperty* CCaptureProperties::m_Controls[NUM_CAPTURE_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of capture properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IBitrateControl}, 
{\b IFrameRateControl}, and dynamic format change implementation. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCaptureProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IFrameRateControl* CCaptureProperties::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IFrameRateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IBitrateControl* CCaptureProperties::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IBitrateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the current media format used by the pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnFormatChanged\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperties}{\b ::OnFormatChanged(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the format selected by the user.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCaptureProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCaptureProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperties::~CCaptureProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCaptureProperties}{\b ::~CCaptureProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for the capture pin property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCaptureProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single capture property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::CCaptureProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCaptureProperty}{\b ::CCaptureProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , IBitrateControl*} {\i pIBitrateControl}{\b , IFrameRateControl*} {\i pIFrameRateControl}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for bitrate and frame rate property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
pointers to the {\b IBitrateControl} and {\b IFrameRateControl} interfaces.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIBitrateControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IBitrateControl} interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIFrameRateControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IFrameRateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::GetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::GetAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCaptureProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::m_pIBitrateControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IBitrateControl* CCaptureProperty::m_pIBitrateControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IBitrateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::m_pIFrameRateControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IFrameRateControl* CCaptureProperty::m_pIFrameRateControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IFrameRateControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IBitrateControl}, 
{\b IFrameRateControl}, and dynamic format change implementation. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCaptureProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCaptureProperty::~CCaptureProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCaptureProperty}{\b ::~CCaptureProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for capture property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAPTUREP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCPUCProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interfaces {\b ICPUControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::CCPUCProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCPUCProperties}{\b ::CCPUCProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CCPUCProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a TAPI CPU Control 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::m_Controls[NUM_CPUC_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCPUCProperty* CCPUCProperties::m_Controls[NUM_CPUC_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of CPU control properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Output Pins {\b ICPUControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCPUCProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ICPUControl* CCPUCProperties::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b ICPUControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCPUCProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CCPUCProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperties::~CCPUCProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCPUCProperties}{\b ::~CCPUCProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for the capture pin property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CCPUCProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single CPU control property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::CCPUCProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCPUCProperty}{\b ::CCPUCProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , ICPUControl*} {\i pICPUControl}{\b , IFrameRateControl*} {\i pIFrameRateControl}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for bitrate and frame rate property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
pointers to the {\b ICPUControl} and {\b IFrameRateControl} interfaces.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pICPUControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b ICPUControl} interface.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIFrameRateControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IFrameRateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::GetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::GetAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CCPUCProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::m_pICPUControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ICPUControl* CCPUCProperty::m_pICPUControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b ICPUControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Output Pins {\b ICPUControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CCPUCProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CCPUCProperty::~CCPUCProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CCPUCProperty}{\b ::~CCPUCProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for CPU control property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUCP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::CDeviceProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CDeviceProperties}{\b ::CDeviceProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CDeviceProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a Capture Device 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CDeviceProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CDeviceProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CDeviceProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CDeviceProperties::~CDeviceProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CDeviceProperties}{\b ::~CDeviceProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for capture device property page. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CKSPropertyEditor}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements behavior of a single 
property to be displayed in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::CKSPropertyEditor\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CKSPropertyEditor}{\b ::CKSPropertyEditor(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for Ks property objects.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
progress bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::GetAutoHWnd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HWND} {\b CKSPropertyEditor}{\b ::GetAutoHWnd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Helper method to allow 
the property page code to access the auto window (private member) of 
a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the auto window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::GetEditHWnd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HWND} {\b CKSPropertyEditor}{\b ::GetEditHWnd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Helper method to allow 
the property page code to access the Target window (private member) of 
a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the Target window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::GetProgressHWnd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HWND} {\b CKSPropertyEditor}{\b ::GetProgressHWnd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Helper method to allow 
the property page code to access the progress bar window (private member) of 
a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the progress window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::GetTrackbarHWnd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HWND} {\b CKSPropertyEditor}{\b ::GetTrackbarHWnd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Helper method to allow 
the property page code to access the slide bar window (private member) of 
a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a handle to the slide bar window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::HasChanged\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CKSPropertyEditor}{\b ::HasChanged(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member tests for a 
change in value.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if value has changed.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::Init\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::Init(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This initializes the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 TRUE on success, FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_Active\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CKSPropertyEditor::m_Active}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE after all KS property  values have been initialized\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_CurrentValue\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_CurrentValue}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property current value\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_DefaultValue\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_DefaultValue}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property default value\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hDlg\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hDlg}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Parent dialog\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndDefault\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndDefault}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Default dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndEdit\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndEdit}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Target dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndMax\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndMax}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Maximum dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndMin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndMin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Minimum dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndProgress\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndProgress}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the progress bar\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndStep\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndStep}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the Stepping Delta dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_hWndTrackbar\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CKSPropertyEditor::m_hWndTrackbar}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle to the slide bar\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDDefaultControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDDefaultControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the Default dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDEditControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDEditControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the Target dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDLabel\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDLabel}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the property label\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDMaxControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDMaxControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the Maximum dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDMinControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDMinControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the Minimum dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDProgressControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDProgressControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the progress bar\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDProperty\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDProperty}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property ID\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDStepControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDStepControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the Stepping Delta dialog item\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_IDTrackbarControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ULONG CKSPropertyEditor::m_IDTrackbarControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the slide bar\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_Max\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_Max}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property maximum value\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_Min\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_Min}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property minimum value\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_OriginalValue\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_OriginalValue}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Backup of the original value\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::m_SteppingDelta\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b LONG CKSPropertyEditor::m_SteppingDelta}\par
\pard\plain \sa160\sl240 \fs21\lang1033 KS property stepping delta\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::OnApply\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CKSPropertyEditor}{\b ::OnApply(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member function is 
called by the framework when the user chooses the OK or the Apply Now 
button. When the framework calls this member function, changes made on 
all property pages in the property sheet are accepted, the property 
sheet retains focus.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::OnAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::OnAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Gets the status of the 
checkbox.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::OnDefault\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::OnDefault(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resets the position of the 
slide bar and updates the content of the Target windows after the user 
pressed the Default button.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if Active, FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::OnEdit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::OnEdit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reads the content of the 
Target window and updates the postion of the slider after the user 
has messed with the Target edit control.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::OnScroll\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::OnScroll(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reads the position of the 
slide bar and updates the content of the Target windows after the user 
has messed with the slide bar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if Active, FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::UpdateAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::UpdateAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Updates the auto checkbox\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::UpdateEditBox\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::UpdateEditBox(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Updates the content of 
the Target window after user has moved the slide bar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::UpdateProgress\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::UpdateProgress(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Updates the position of 
the progress bar.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::UpdateTrackbar\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CKSPropertyEditor}{\b ::UpdateTrackbar(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Updates the position of 
the slide bar after user has messed with the Target window.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CKSPropertyEditor::~CKSPropertyEditor\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CKSPropertyEditor}{\b ::~CKSPropertyEditor(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Destructor for this class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/KSEDITOR.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CNetworkStatsProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interface {\b INetworkStats}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::CNetworkStatsProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CNetworkStatsProperties}{\b ::CNetworkStatsProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CNetworkStatsProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a Network Statistics 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::m_Controls[NUM_NETWORKSTATS_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CNetworkStatsProperty * CNetworkStatsProperties::m_Controls[NUM_NETWORKSTATS_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of network statistics properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the {\b INetworkStats} Ks interface handler. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CNetworkStatsProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::m_pINetworkStats\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b INetworkStats * CNetworkStatsProperties::m_pINetworkStats}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b INetworkStats} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CNetworkStatsProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CNetworkStatsProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperties::~CNetworkStatsProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CNetworkStatsProperties}{\b ::~CNetworkStatsProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for network statistics property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CNetworkStatsProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single network statistics property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::CNetworkStatsProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CNetworkStatsProperty}{\b ::CNetworkStatsProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , INetworkStats*} {\i pInterface}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for network statistics property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
a pointer to the {\b INetworkStats} interface.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property progress bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInterface}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b INetworkStats} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::GetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::GetAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CNetworkStatsProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b INetworkStats * CNetworkStatsProperty::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b INetworkStats} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the {\b INetworkStats} Ks interface handler. This 
code is only compiled if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CNetworkStatsProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CNetworkStatsProperty::~CNetworkStatsProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CNetworkStatsProperty}{\b ::~CNetworkStatsProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for network statistics property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/NETSTATP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class COverlayPin}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the video overlay output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::Active\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::Active(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from stopped to 
either paused or running.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::ActivePause\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::ActivePause(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from running to 
paused mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::ActiveRun\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::ActiveRun(}{\b REFERENCE_TIME} {\i tStart}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from paused to 
running mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i tStart}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ???.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::CheckMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::CheckMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine if the pin can support a specific media type.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::COverlayPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::COverlayPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the 
constructorfor the {\b COverlayPin}
 object\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::CreateOverlayPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b COverlayPin*} {\b COverlayPin}{\b ::CreateOverlayPin(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , HRESULT *} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
helper function creates an output pin for overlay preview.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the preview pin.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the return error code.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::DecideAllocator\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::DecideAllocator(}{\b IMemInputPin*} {\i pPin}{\b , IMemAllocator**} {\i ppAlloc}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to negotiate the allocator to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the IPin interface 
of the connecting pin.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the negotiated 
IMemAllocator interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Validate iIndex too\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::DecideBufferSize\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::DecideBufferSize(}{\b IMemAllocator*} {\i pAlloc}{\b , ALLOCATOR_PROPERTIES*} {\i ppropInputRequest}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the number and size of buffers required for transfer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the allocator 
assigned to the transfer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppropInputRequest}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b ALLOCATOR_PROPERTIES} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Validate iIndex too\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::GetFormat\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::GetFormat(}{\b AM_MEDIA_TYPE**} {\i ppmt}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the current media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to an 
{\b AM_MEDIA_TYPE} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::GetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::GetMediaType(}{\b int} {\i iPosition}{\b , CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves one 
of the media types supported by the pin, which is used by enumerators.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_S_NO_MORE_ITEMS\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 End of the list of media types has been reached\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iPosition}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a position in the media type list.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type at 
the {\i iPosition} position in the list of supported media types.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Validate against the largest number of media types we support\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::GetNumberOfCapabilities\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::GetNumberOfCapabilities(}{\b int*} {\i piCount}{\b , int*} {\i piSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the number of stream capabilities structures.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i piCount}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an int to receive the 
number of {\b VIDEO_STREAM_CONFIG_CAPS} structures supported.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i piSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an int to receive the 
size of the {\b VIDEO_STREAM_CONFIG_CAPS} configuration structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::GetStreamCaps\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::GetStreamCaps(}{\b int} {\i iIndex}{\b , AM_MEDIA_TYPE**} {\i ppmt}{\b , LPBYTE} {\i pSCC}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve a video stream capability pair.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the index to the desired media type 
and capability pair.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to an 
{\b AM_MEDIA_TYPE} structure.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSCC}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
{\b VIDEO_STREAM_CONFIG_CAPS} configuration structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Validate iIndex too\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::Inactive\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::Inactive(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from either 
paused or running to stopped.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::m_pCaptureFilter\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CTAPIVCap* COverlayPin::m_pCaptureFilter}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reference to the 
parent capture filter.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Supports IPin. Never created by COM, so no CreateInstance or entry 
in global FactoryTemplate table. Only ever created by a {\b CTAPIVCap}
 
object and returned via the EnumPins interface\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMStreamConfig}, 
{\b IAMStreamControl}, {\b ICPUControl}, {\b IFrameRateControl}, 
{\b IBitrateControl}, {\b INetworkStats}, {\b IH245EncoderCommand} 
and {\b IProgressiveRefinement}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::Notify\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::Notify(}{\b IBaseFilter*} {\i pSelf}{\b , Quality} {\i q}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from paused to 
running mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSelf}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the filter that is 
sending the quality notification.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i q}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a Quality notification structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::SetFormat\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::SetFormat(}{\b AM_MEDIA_TYPE*} {\i pmt}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
set a specific media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an {\b AM_MEDIA_TYPE} 
structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::SetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b COverlayPin}{\b ::SetMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
set a specific media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 COverlayPin::~COverlayPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b COverlayPin}{\b ::~COverlayPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b COverlayPin}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/OVERLAY.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CPreviewPin}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the video preview output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::ApplySoftCamCtrl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewPin}{\b ::ApplySoftCamCtrl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method applies 
software-only camera control operators.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You'll need a function like this one for RGB16 and RGB8 
too. In RGB8, make sure you use the Indeo palette, like NM.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::CPreviewPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewPin}{\b ::CPreviewPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the 
constructor for the {\b CPreviewPin}
 object\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This should depend on the bitdepth of the display 
at the time of the creation of this pin. If we're in 16 
bit mode, then return the 16 bit mode formats. Before 
doing this, write all the necessary format conversion 
routines.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::CreatePreviewPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CPreviewPin*} {\b CPreviewPin}{\b ::CreatePreviewPin(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , CPreviewPin**} {\i ppPreviewPin}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This helper 
function creates a video output pin for preview.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppPreviewPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that address of a pointer 
to a {\b CPreviewPin}
 object to receive the a pointer to the newly 
created pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::GetPages\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewPin}{\b ::GetPages(}{\b CAUUID*} {\i pPages}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method Fills a counted 
array of GUID values where each GUID specifies the CLSID of each 
property page that can be displayed in the property sheet for this 
object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocation failed\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPages}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a caller-allocated CAUUID 
structure that must be initialized and filled before returning. The 
pElems field in the CAUUID structure is allocated by the callee with 
CoTaskMemAlloc and freed by the caller with CoTaskMemFree.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Make sure this is effectively freed at some point\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::IsSoftCamCtrlNeeded\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewPin}{\b ::IsSoftCamCtrlNeeded(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method verifies 
if a software-only camera controller is needed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You'll need a function like this one for RGB16 and RGB8 
too. In RGB8, make sure you use the Indeo palette, like NM.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::m_pCaptureFilter\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CTAPIVCap* CPreviewPin::m_pCaptureFilter}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reference to the 
parent capture filter.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Supports IPin. Never created by COM, so no CreateInstance or entry 
in global FactoryTemplate table. Only ever created by a {\b CTAPIVCap}
 
object and returned via the EnumPins interface\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewPin}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMStreamConfig}, 
{\b IAMStreamControl}, {\b ICPUControl}, {\b IFrameRateControl}, 
{\b IBitrateControl}, {\b INetworkStats}, {\b IH245EncoderCommand} 
and {\b IProgressiveRefinement}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewPin::~CPreviewPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CPreviewPin}{\b ::~CPreviewPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CPreviewPin}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CPreviewProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interfaces {\b IBitrateControl} and 
{\b IFrameRateControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::CPreviewProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CPreviewProperties}{\b ::CPreviewProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CPreviewProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a TAPI Preview Pin 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::InitialRangeScan\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::InitialRangeScan(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the list of supported formats on the pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::m_Controls[NUM_PREVIEW_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CPreviewProperty* CPreviewProperties::m_Controls[NUM_PREVIEW_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of capture properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Preview Pin {\b IFrameRateControl}, 
and dynamic format change implementation. This code is only compiled 
if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CPreviewProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IFrameRateControl* CPreviewProperties::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IFrameRateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the current media format used by the pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnFormatChanged\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperties}{\b ::OnFormatChanged(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the format selected by the user.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CPreviewProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CPreviewProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperties::~CPreviewProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CPreviewProperties}{\b ::~CPreviewProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for the preview pin property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CPreviewProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single preview property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::CPreviewProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CPreviewProperty}{\b ::CPreviewProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , IFrameRateControl*} {\i pIFrameRateControl}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for frame rate property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
pointers to the {\b IFrameRateControl} and {\b IVideoControl} interfaces.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIFrameRateControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IFrameRateControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::GetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::GetAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CPreviewProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::m_pIFrameRateControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IFrameRateControl* CPreviewProperty::m_pIFrameRateControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IFrameRateControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Preview Pin {\b IFrameRateControl}, 
and dynamic format change implementation. This code is only compiled 
if USE_PROPERTY_PAGES is defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CPreviewProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CPreviewProperty::~CPreviewProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CPreviewProperty}{\b ::~CPreviewProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for preview property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PREVIEWP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CProcAmpProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class runs a property page to test 
the TAPI VfW Capture Filter {\b IAMVideoProcAmp} implementation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::CProcAmpProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProcAmpProperties}{\b ::CProcAmpProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CProcAmpProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a Network Statistics 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::m_Controls[NUM_PROCAMP_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CProcAmpProperty * CProcAmpProperties::m_Controls[NUM_PROCAMP_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of video proc amp properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMVideoProcAmp} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CProcAmpProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::m_pIAMVideoProcAmp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IAMVideoProcAmp * CProcAmpProperties::m_pIAMVideoProcAmp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IAMVideoProcAmp} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CProcAmpProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CProcAmpProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperties::~CProcAmpProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProcAmpProperties}{\b ::~CProcAmpProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for the video proc amp control property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CProcAmpProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single video proc amp control property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::CProcAmpProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProcAmpProperty}{\b ::CProcAmpProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , IAMVideoProcAmp*} {\i pInterface}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for video proc amp control property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
a pointer to the {\b IAMVideoProcAmp} interface.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property progress bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pInterface}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IAMVideoProcAmp} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CProcAmpProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IAMVideoProcAmp * CProcAmpProperty::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IAMVideoProcAmp} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Filter {\b IAMVideoProcAmp} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProcAmpProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProcAmpProperty::~CProcAmpProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProcAmpProperty}{\b ::~CProcAmpProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for video proc amp control property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMPP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CProgRefProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interface {\b IProgressiveRefinement}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::CProgRefProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProgRefProperties}{\b ::CProgRefProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CProgRefProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a Progressive Refinement 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::m_pIProgRef\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IProgressiveRefinement* CProgRefProperties::m_pIProgRef}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IProgressiveRefinement} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI VfW Capture Pin {\b IProgressiveRefinement} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProgRefProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CProgRefProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CProgRefProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CProgRefProperties::~CProgRefProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CProgRefProperties}{\b ::~CProgRefProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for progressive refinement property page. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROGREFP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CRtpPdPin}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the RTP packetization descriptor 
output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::ActivePause\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::ActivePause(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from running to 
paused mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::ActiveRun\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::ActiveRun(}{\b REFERENCE_TIME} {\i tStart}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from paused to 
running mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i tStart}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ???.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::CapturePinActive\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::CapturePinActive(}{\b BOOL} {\i fActive}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
capture pin to let the RTPPD pin know that the capture pin is active.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fActive}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the status of the capture pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::CheckMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::CheckMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine if the pin can support a specific media type.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_INVALIDMEDIATYPE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 An invalid media type was specified\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::Commit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::Commit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
commit the memory for the specified buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns S_OK.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::CreateRtpPdPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CRtpPdPin*} {\b CRtpPdPin}{\b ::CreateRtpPdPin(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , CRtpPdPin**} {\i ppRtpPdPin}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This helper 
function creates an output pin for RTP packetization descriptors.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppRtpPdPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that address of a pointer 
to a {\b CRtpPdPin}
 object to receive the a pointer to the newly 
created pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::CRtpPdPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::CRtpPdPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the 
constructor for the {\b CRtpPdPin}
 object\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::DecideAllocator\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::DecideAllocator(}{\b IMemInputPin*} {\i pPin}{\b , IMemAllocator**} {\i ppAlloc}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to negotiate the allocator to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the IPin interface 
of the connecting pin.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the negotiated 
IMemAllocator interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::DecideBufferSize\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::DecideBufferSize(}{\b IMemAllocator*} {\i pAlloc}{\b , ALLOCATOR_PROPERTIES*} {\i ppropInputRequest}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the number and size of buffers required for transfer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the allocator 
assigned to the transfer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppropInputRequest}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b ALLOCATOR_PROPERTIES} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 We shouldn't need that many buffers and you probably need a different number 
of buffers if you are capturing in streaming mode of frame grabbing mode 
You also need to decouple this number from the number of video capture buffers: only 
if you need to ship the video capture buffer downstream (possible on the preview pin) 
should you make those number equal.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Use a constant instead\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::Decommit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::Decommit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the memory for the specified buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns S_OK.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::Flush\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CRtpPdPin}{\b ::Flush(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Called when stopping. Flush any 
buffers that may be still downstream.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns NOERROR\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetBuffer(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve a container for a sample.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns E_FAIL.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetMaxRTPPacketSize\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetMaxRTPPacketSize(}{\b LPDWORD} {\i pdwMaxRTPPacketSize}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
supply to the network sink filter the maximum RTP packet size (in bytes) 
described by the list of packetization descriptors.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMaxRTPPacketSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to 
receive the maximum RTP packet size (in bytes) described by the list of 
packetization descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetMaxRTPPacketSizeRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetMaxRTPPacketSizeRange(}{\b LPDWORD} {\i pdwMin}{\b , LPDWORD} {\i pdwMax}{\b , LPDWORD} {\i pdwSteppingDelta}{\b , LPDWORD} {\i pdwDefault}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to supply to the network sink filter the minimum, maximum, and 
default values for the RTP packet size (in bytes) described by the list 
of packetization descriptors.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum RTP packet size (in 
bytes) described by the list of packetization descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum RTP packet size (in 
bytes) described by the list of packetization descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping delta in 
RTP packet size (in bytes) described by the list of packetization 
descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default RTP packet size 
(in bytes) described by the list of packetization descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Use const defines instead\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetMediaType(}{\b int} {\i iPosition}{\b , CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves one 
of the media types supported by the pin, which is used by enumerators.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_S_NO_MORE_ITEMS\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 End of the list of media types has been reached\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iPosition}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a position in the media type list.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type at 
the {\i iPosition} position in the list of supported media types.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetPages\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetPages(}{\b CAUUID*} {\i pPages}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method Fills a counted 
array of GUID values where each GUID specifies the CLSID of each 
property page that can be displayed in the property sheet for this 
object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocation failed\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPages}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a caller-allocated CAUUID 
structure that must be initialized and filled before returning. The 
pElems field in the CAUUID structure is allocated by the callee with 
CoTaskMemAlloc and freed by the caller with CoTaskMemFree.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::GetProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::GetProperties(}{\b ALLOCATOR_PROPERTIES*} {\i pProps}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the properties being used on this allocator.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pProps}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
requested allocator properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::m_pCaptureFilter\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CTAPIVCap* CRtpPdPin::m_pCaptureFilter}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Reference to the 
parent capture filter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IRTPPDControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::Reconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::Reconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
reconnect a pin to a downstream pin with a new format.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::ReleaseBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::ReleaseBuffer(}{\b IMediaSample*} {\i pSample}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the {\b CMediaSample}
 object. The final call to Release() on 
{\b IMediaSample} will call this method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSample}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the buffer to 
release.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::SendFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::SendFrame(}{\b CFrameSample} {\i pSample}{\b , CRtpPdSample} {\i pRSample}{\b , BOOL} {\i bDiscon}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
send a a media sample downstream.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_FALSE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the pin is off (IAMStreamControl)\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSample}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the video media 
sample associated to the current Rtp Pd media sample.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRSample}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media sample 
to send downstream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bDiscon}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if this is the first frame we ever 
sent downstream.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do the real work right here!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This is probably not representative of what the encoder has 
generated, but who cares?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do the real work right here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::SetMaxRTPPacketSize\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::SetMaxRTPPacketSize(}{\b DWORD} {\i dwMaxRTPPacketSize}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
dynamically adjust the maximum RTP packet size (in bytes) to be 
described by the list of packetization descriptor. Typically, this 
number is just below the MTU size of the network.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMaxRTPPacketSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the maximum RTP packet size 
(in bytes) to be described by the list of packetization descriptors.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::SetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::SetMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
set a specific media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::SetProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdPin}{\b ::SetProperties(}{\b ALLOCATOR_PROPERTIES*} {\i pRequest}{\b , ALLOCATOR_PROPERTIES*} {\i pActual}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
specify the size, number, and alignment of blocks.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRequest}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
requested allocator properties.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pActual}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
allocator properties actually set.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdPin::~CRtpPdPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CRtpPdPin}{\b ::~CRtpPdPin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CRtpPdPin}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CRtpPdProperties}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements a property page 
to test the new TAPI internal interfaces {\b IRTPPDControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CRtpPdProperties}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of a TAPI Rtp Pd Control 
Property Page. It is referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::CRtpPdProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CRtpPdProperties}{\b ::CRtpPdProperties(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for the property page object. It simply 
calls the constructor of the property page base class.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::m_Controls[NUM_RTPPD_CONTROLS]\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CRtpPdProperty* CRtpPdProperties::m_Controls[NUM_RTPPD_CONTROLS]}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Array 
of Rtp Pd control properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI Rtp Pd Output Pins {\b IRTPPDControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CRtpPdProperties::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::m_pInterface\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IRTPPDControl* CRtpPdProperties::m_pInterface}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IRTPPDControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnActivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperties}{\b ::OnActivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is activated.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnApplyChanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperties}{\b ::OnApplyChanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the user applies changes to the property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnConnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperties}{\b ::OnConnect(}{\b LPUNKNOWN} {\i pUnknown}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is connected to the filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnknown}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnDeactivate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperties}{\b ::OnDeactivate(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is dismissed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnDisconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperties}{\b ::OnDisconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when the property page is disconnected from the owning 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::OnReceiveMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CRtpPdProperties}{\b ::OnReceiveMessage(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called when a message is sent to the property page dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 By default, returns the value returned by the Win32 DefWindowProc function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::SetDirty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CRtpPdProperties}{\b ::SetDirty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method notifies the property page site of changes.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperties::~CRtpPdProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CRtpPdProperties}{\b ::~CRtpPdProperties(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for the capture pin property page. It 
simply calls the base class destructor after deleting all the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CRtpPdProperty}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements handling of a 
single Rtp Pd control property in a property page.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::CanAutoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::CanAutoControl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the automatic control capabilities for a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::CRtpPdProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CRtpPdProperty}{\b ::CRtpPdProperty(}{\b HWND} {\i hDlg}{\b , ULONG} {\i IDLabel}{\b , ULONG} {\i IDMinControl}{\b , ULONG} {\i IDMaxControl}{\b , ULONG} {\i IDDefaultControl}{\b , ULONG} {\i IDStepControl}{\b , ULONG} {\i IDEditControl}{\b , ULONG} {\i IDTrackbarControl}{\b , ULONG} {\i IDProgressControl}{\b , ULONG} {\i IDProperty}{\b , IRTPPDControl*} {\i pIRTPPDControl}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the constructor for Rtp Pd property objects. It 
calls the base class constructor, calls InitCommonControlsEx, and saves 
a pointer to the {\b IRTPPDControl} interface.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the parent property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDLabel}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMinControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Minimum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDMaxControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Maximum value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDDefaultControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Default value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDStepControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the Stepping Delta value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDEditControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property edit control where the value of the property appears.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDTrackbarControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProgressControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a label ID for the associated 
property slide bar.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i IDProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the Ks property.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIRTPPDControl}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
{\b IRTPPDControl} interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::GetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::GetAuto(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
retrieves the current automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if automatic control is supported, FALSE 
otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::GetRange(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves 
the range information of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::GetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::GetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method queries for 
the value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::m_NumProperties\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CRtpPdProperty::m_NumProperties}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Keeps 
track of the number of properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::m_pIRTPPDControl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b IRTPPDControl* CRtpPdProperty::m_pIRTPPDControl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer 
to the {\b IRTPPDControl} interface.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This code tests the TAPI Rtp Pd Output Pins {\b IRTPPDControl} 
implementation. This code is only compiled if USE_PROPERTY_PAGES is 
defined.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::SetAuto\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::SetAuto(}{\b BOOL} {\i fAuto}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
sets the automatic control mode of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fAuto}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the automatic control mode.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::SetValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CRtpPdProperty}{\b ::SetValue(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method sets the 
value of a property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CRtpPdProperty::~CRtpPdProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CRtpPdProperty}{\b ::~CRtpPdProperty(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the destructor for Rtp Pd control property objects. It 
simply calls the base class destructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/RTPPDP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CTAPIBasePin}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the TAPI base output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Active\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::Active(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from stopped to 
either paused or running.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ActivePause\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ActivePause(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from running to 
paused mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ActiveRun\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ActiveRun(}{\b REFERENCE_TIME} {\i tStart}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from paused to 
running mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i tStart}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Who cares.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::CheckMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::CheckMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine if the pin can support a specific media type.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_INVALIDMEDIATYPE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 An invalid media type was specified\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::CloseConverter\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::CloseConverter(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method closes a 
format converter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns NOERROR.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::CloseConverter\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::CloseConverter(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method closes a 
format converter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns NOERROR.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::CloseSoftCamCtrl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::CloseSoftCamCtrl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method closes a 
software-only camera controller.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Commit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::Commit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
commit the memory for the specified buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns S_OK.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ConvertFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ConvertFrame(}{\b PBYTE} {\i pbyInput}{\b , DWORD} {\i dwInputSize}{\b , PBYTE} {\i pbyOutput}{\b , PDWORD} {\i pdwOutputSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method converts 
a bitmap from one format to another, or scale a bitmap.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbyInput}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the input buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwInputSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Size of the input buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbyOutput}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the output buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwOutputSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a DWORD to receive the size 
of the converted data.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Verify error management\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::CTAPIBasePin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::CTAPIBasePin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the 
constructorfor the {\b CTAPIBasePin}
 object\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This may be fine for VfW devices but not with WDM devices 
You need to build those defaults from the video datarange 
structures returned by the WDM capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This may be fine for VfW devices but not with WDM devices. 
WDM devices may support this in hardware. You need to query 
the device to know if it supports this feature. If it doesn't 
you can still provide a software only implementation for it.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::DecideAllocator\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::DecideAllocator(}{\b IMemInputPin*} {\i pPin}{\b , IMemAllocator**} {\i ppAlloc}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to negotiate the allocator to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the IPin interface 
of the connecting pin.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the negotiated 
IMemAllocator interface.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::DecideBufferSize\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::DecideBufferSize(}{\b IMemAllocator*} {\i pAlloc}{\b , ALLOCATOR_PROPERTIES*} {\i ppropInputRequest}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the number and size of buffers required for transfer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAlloc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the allocator 
assigned to the transfer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppropInputRequest}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b ALLOCATOR_PROPERTIES} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 We shouldn't need that many compressed buffers and you probably need a different number 
of buffers if you are capturing in streaming mode of frame grabbing mode 
You also need to decouple this number from the number of video capture buffers: only 
if you need to ship the video capture buffer downstream (possible on the preview pin) 
should you make those number equal.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Decommit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::Decommit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the memory for the specified buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns S_OK.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Flush\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CTAPIBasePin}{\b ::Flush(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Called when stopping. Flush any 
buffers that may be still downstream.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns NOERROR\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetBuffer(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve a container for a sample.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns E_FAIL.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCaps\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCaps(}{\b long*} {\i pCapsFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the capabilities of the TAPI MSP Video Capture filter capture pin regarding 
flipping pictures and external triggers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCapsFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve a value representing a 
combination of the flags from the {\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCurrentActualFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCurrentActualFrameRate(}{\b LONGLONG*} {\i ActualFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the actual frame rate, expressed as a frame duration 
in 100 ns units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ActualFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the frame rate in frame 
duration in 100 nS units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCurrentBitrate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCurrentBitrate(}{\b LPDWORD} {\i pdwCurrentBitrate}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the current bandwidth transmission used by 
the output pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BITRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwCurrentBitrate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the current bandwidth 
transmission of an output pin, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCurrentCPULoad\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCurrentCPULoad(}{\b DWORD*} {\i pdwCurrentCPULoad}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the current encoding algorithm CPU load.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwCurrentCPULoad}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the current encoding 
algorithm CPU load, in percentage units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCurrentFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCurrentFrameRate(}{\b REFERENCE_TIME*} {\i pAvgTimePerFrame}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the video frame's average display time an 
output pin is currently running at.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FPSRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAvgTimePerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to receive the current 
video frame's average display time of an output pin, in 100-nanosecond 
units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetCurrentProcessingTime\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetCurrentProcessingTime(}{\b REFERENCE_TIME*} {\i pCurrentProcessingTime}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the current encoding time per frame, in 
100-nanosecond units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCurrentProcessingTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to receive the maximum 
encoding time per frame the compressed video output pin is currently 
setup for, in 100-nanosecond units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetFormat\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetFormat(}{\b AM_MEDIA_TYPE**} {\i ppmt}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the current media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to an 
{\b AM_MEDIA_TYPE} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Note that we return the output type, not the format at which 
we are capturing. Only the filter really cares about how the data is 
being captured.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetFrameRateList\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetFrameRateList(}{\b long} {\i iIndex}{\b , SIZE} {\i Dimensions}{\b , long*} {\i ListSize}{\b , LONGLONG**} {\i MaxAvailableFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the list of available frame rates.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the index of the format to query 
for frame rates. This index corresponds to the order in which formats 
are enumerated by IAMStreamConfig::GetStreamCaps. The value must range 
between 0 and the number of supported {\b VIDEO_STREAM_CONFIG_CAPS} 
structures returned by IAMStreamConfig::GetNumberOfCapabilities.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Dimensions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the frame's image size (width 
and height) in pixels.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ListSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the number of elements in the list 
of frame rates.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxAvailableFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to an array of frame 
rates in 100 ns units. Can be NULL if only {\i ListSize} is wanted.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxAvailableFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxAvailableFrameRate(}{\b long} {\i iIndex}{\b , SIZE} {\i Dimensions}{\b , LONGLONG*} {\i MaxAvailableFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the maximum frame rate currently available, based on 
bus bandwidth usage for connections, such as USB (Universal Serial Bus) 
and IEEE 1394, where the maximum frame rate may be limited due to 
bandwidth availability.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the index of the format to query 
for frame rates. This index corresponds to the order in which formats 
are enumerated by IAMStreamConfig::GetStreamCaps. The value must range 
between 0 and the number of supported {\b VIDEO_STREAM_CONFIG_CAPS} 
structures returned by IAMStreamConfig::GetNumberOfCapabilities.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Dimensions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the frame's image size (width 
and height) in pixels.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxAvailableFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the maximum 
available frame rate in frame duration in 100 nS units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxBitrate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxBitrate(}{\b LPDWORD} {\i pdwMaxBitrate}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the upper limit in bandwidth transmission 
the output pin is currently setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BITRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMaxBitrate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to receive the limit in bandwidth 
transmission or an output pin, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxBitrateRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxBitrateRange(}{\b LPDWORD} {\i pdwMin}{\b , LPDWORD} {\i pdwMax}{\b , LPDWORD} {\i pdwSteppingDelta}{\b , LPDWORD} {\i pdwDefault}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default 
values for the upper limit in bandwidth transmission the an output pin 
may be setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BITRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum limit in bandwidth 
transmission an output pin maybe setup for, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum limit in bandwidth 
transmission an output pin maybe setup for, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the the stepping 
delta in bandwidth transmission an output pin maybe setup for, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default limit in bandwidth 
transmission an output pin maybe setup for, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxCPULoad\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxCPULoad(}{\b DWORD*} {\i pdwMaxCPULoad}{\b , REFERENCE_TIME} {\i MaxProcessingTime}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the maximum encoding algorithm CPU load the 
compressed video output pin is currently setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMaxCPULoad}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum encoding 
algorithm CPU load the compressed video output pin is currently setup 
for, in percentage units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxProcessingTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies an hypothetical 
maximum encoding time per frame, in 100-nanosecond units. If this 
parameter is set to -1, this method shall use the value of the maximum 
encoding time per frame the compressed video output pin is currently 
setup for.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxCPULoadRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxCPULoadRange(}{\b DWORD*} {\i pdwMin}{\b , DWORD*} {\i pdwMax}{\b , DWORD*} {\i pdwSteppingDelta}{\b , DWORD*} {\i pdwDefault}{\b , REFERENCE_TIME} {\i MaxProcessingTime}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default 
values for the maximum CPU load the compressed video output pin may be 
setup for, in percentage.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum value of encoding 
algorithm CPU load the compressed video output pin may be setup for, 
in percentage units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum value of encoding 
algorithm CPU load the compressed video output pin may be setup for, in 
percentage units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping delta of 
encoding algorithm CPU load the compressed video output pin may be 
setup for, in percentage units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default value of encoding 
algorithm CPU load the compressed video output pin is setup for, in 
percentage units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxProcessingTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies an hypothetical 
maximum encoding time per frame, in 100-nanosecond units. If this 
parameter is set to -1, this method shall use the value of the maximum 
encoding time per frame the compressed video output pin is currently 
setup for.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxFrameRate(}{\b REFERENCE_TIME*} {\i pAvgTimePerFrame}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the maximum video frame's average display time an 
output pin is currently setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FPSRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAvgTimePerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to receive the maximum 
video frame's average display time of an output pin, in 100-nanosecond 
units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxFrameRateRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxFrameRateRange(}{\b REFERENCE_TIME*} {\i pMin}{\b , REFERENCE_TIME*} {\i pMax}{\b , REFERENCE_TIME*} {\i pSteppingDelta}{\b , REFERENCE_TIME*} {\i pDefault}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default 
values of the video frame's average display time an output pin 
may be setup for.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FPSRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum video 
frame's average display time an output pin may be setup for, in 
100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum video 
frame's average display time an output pin may be setup for, in 
100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping 
delta in video frame's average display time an output pin may be setup 
for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default video 
frame's average display time of an output pin, in 100-nanosecond units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxProcessingTime\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxProcessingTime(}{\b REFERENCE_TIME*} {\i pMaxProcessingTime}{\b , DWORD} {\i dwMaxCPULoad}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve the maximum encoding time per frame the 
compressed video output pin is currently setup for, in 100-nanosecond 
units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMaxProcessingTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to receive the maximum 
encoding time per frame the compressed video output pin is currently 
setup for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMaxCPULoad}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies an hypothetical CPU load, in 
percentage units. If this parameter is set to -1UL, this method shall 
use the value of the CPU load  the compressed video output pin is 
currently setup for.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMaxProcessingTimeRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMaxProcessingTimeRange(}{\b REFERENCE_TIME*} {\i pMin}{\b , REFERENCE_TIME*} {\i pMax}{\b , REFERENCE_TIME*} {\i pSteppingDelta}{\b , REFERENCE_TIME*} {\i pDefault}{\b , DWORD} {\i dwMaxCPULoad}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to retrieve support, minimum, maximum, and default 
values for the maximum encoding time per frame the compressed video 
output pin may be setup for, in 100-nanosecond units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum value of 
encoding time per frame the compressed video output pin may be setup 
for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum value of 
encoding time per frame the compressed video output pin may be setup 
for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping 
delta of encoding time per frame the compressed video output pin may 
be setup for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default value 
of encoding time per frame the compressed video output pin is setup 
for, in 100-nanosecond units.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMaxCPULoad}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies an hypothetical CPU load, in 
percentage units. If this parameter is set to -1UL, this method shall 
use the value of the CPU load  the compressed video output pin is 
currently setup for.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMediaType(}{\b int} {\i iPosition}{\b , CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method retrieves one 
of the media types supported by the pin, which is used by enumerators.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_S_NO_MORE_ITEMS\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 End of the list of media types has been reached\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iPosition}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a position in the media type list.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type at 
the {\i iPosition} position in the list of supported media types.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetMode\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetMode(}{\b long} {\i Mode}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the video control mode of operation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Mode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a value representing a combination of the 
flags from the {\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetNumberOfCapabilities\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetNumberOfCapabilities(}{\b int*} {\i piCount}{\b , int*} {\i piSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the number of stream capabilities structures.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i piCount}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an int to receive the 
number of {\b VIDEO_STREAM_CONFIG_CAPS} structures supported.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i piSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an int to receive the 
size of the {\b VIDEO_STREAM_CONFIG_CAPS} configuration structure.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetProperties(}{\b ALLOCATOR_PROPERTIES*} {\i pProps}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the properties being used on this allocator.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pProps}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
requested allocator properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::GetStreamCaps\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::GetStreamCaps(}{\b int} {\i iIndex}{\b , AM_MEDIA_TYPE**} {\i ppmt}{\b , LPBYTE} {\i pSCC}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve a video stream capability pair.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the index to the desired media type 
and capability pair.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to an 
{\b AM_MEDIA_TYPE} structure.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSCC}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
{\b VIDEO_STREAM_CONFIG_CAPS} configuration structure.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Inactive\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::Inactive(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is called by the 
{\b CBaseFilter}
 implementation when the state changes from either 
paused or running to stopped.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::IsSoftCamCtrlOpen\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CTAPIBasePin}{\b ::IsSoftCamCtrlOpen(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method checks if 
a software-only camera controller has already been opened.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if a software-only camera controller has already been opened\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_AvgTimePerFrameRangeDefault\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_AvgTimePerFrameRangeDefault}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Target 
frame rate default.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_AvgTimePerFrameRangeMax\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_AvgTimePerFrameRangeMax}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Maximum 
target frame rate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_AvgTimePerFrameRangeMin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_AvgTimePerFrameRangeMin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Minimum 
target frame rate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_AvgTimePerFrameRangeSteppingDelta\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_AvgTimePerFrameRangeSteppingDelta}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Target 
frame rate stepping delta.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_CurrentAvgTimePerFrame\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_CurrentAvgTimePerFrame}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Current 
frame rate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_CurrentProcessingTime\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_CurrentProcessingTime}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Current 
processing time.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwBitrateRangeDefault\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwBitrateRangeDefault}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Default target bitrate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwBitrateRangeMax\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwBitrateRangeMax}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Maximum target bitrate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwBitrateRangeMin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwBitrateRangeMin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Minimum target bitrate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwBitrateRangeSteppingDelta\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwBitrateRangeSteppingDelta}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Target 
bitrate stepping delta.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwConversionType\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwConversionType}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Specifies the format 
conversion operation necessary to go from the format of the captured 
video frames to the format of the data actually generated by the pin. 
It can be any combination of the following constants:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CONVERSIONTYPE_NONE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No conversion operation necessary\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CONVERSIONTYPE_ENCODE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies an encoding operation\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CONVERSIONTYPE_DECODE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies a decoding operation\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CONVERSIONTYPE_SCALER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies an image size change\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwCurrentBitrate\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwCurrentBitrate}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Current bitrate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwCurrentCPULoad\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwCurrentCPULoad}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Current CPU load.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwFrame\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwFrame}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Current frame number.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwLastIFrameTime\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwLastIFrameTime}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Remembers the last 
time we sent an I-frame downstream.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwLastTimestamp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwLastTimestamp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Timestamps of the last 
frame generated, normalized to 29.97Hz.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwMaxBitrate\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwMaxBitrate}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Target bitrate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwMaxCPULoad\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwMaxCPULoad}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Maximum CPU load.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwNumBytesDelivered\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwNumBytesDelivered}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Counts number of 
bytes delivered, reset every second or so.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_dwNumFramesDelivered\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CTAPIBasePin::m_dwNumFramesDelivered}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Counts number of 
frames delivered, reset every second or so.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fConvert\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fConvert}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE after an ICM converter 
has been open successfully.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fFlipHorizontal\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fFlipHorizontal}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE if image is 
to be flipped horizontally.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fFlipVertical\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fFlipVertical}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Affects the quality of 
en encoded video stream.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fFlipVertical\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fFlipVertical}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE if image is 
to be flipped vertically.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fPeriodicIFrames\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fPeriodicIFrames}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE to generate 
I-frame periodically.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fSoftCamCtrl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fSoftCamCtrl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE after a 
software-only camera controller has been opened.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do we really need m_dwNumFramesDelivered to be a member variable of this class?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do we really need m_dwNumBytesDelivered to be a member variable of this class?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do we really need this?\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_fTemporalCompress\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIBasePin::m_fTemporalCompress}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE when the 
encoder uses some form or prediction.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_hIC\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HIC CTAPIBasePin::m_hIC}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Handle to the ICM image converter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_MaxAvgTimePerFrame\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_MaxAvgTimePerFrame}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Target 
frame rate.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_MaxProcessingTime\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b REFERENCE_TIME CTAPIBasePin::m_MaxProcessingTime}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Maximum 
processing time.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_parms\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ALLOCATOR_PROPERTIES CTAPIBasePin::m_parms}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Out allocator 
properties.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Supports IPin. Never created by COM, so no CreateInstance or entry 
in global FactoryTemplate table. Only ever created by a {\b CTAPIVCap}
 
object and returned via the EnumPins interface\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_parms\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b ALLOCATOR_PROPERTIES CTAPIBasePin::m_parms}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Out allocator 
properties.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbiIn\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBITMAPINFOHEADER CTAPIBasePin::m_pbiIn}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the input 
format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbiInt\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBITMAPINFOHEADER CTAPIBasePin::m_pbiInt}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the intermediate 
format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbiOut\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBITMAPINFOHEADER CTAPIBasePin::m_pbiOut}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the output 
format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbiSCCIn\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBITMAPINFOHEADER CTAPIBasePin::m_pbiSCCIn}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the input 
format of a software-only camera controlled operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbiSCCOut\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBITMAPINFOHEADER CTAPIBasePin::m_pbiSCCOut}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the output 
format of a software-only camera controlled operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbyCamCtrl\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBYTE CTAPIBasePin::m_pbyCamCtrl}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Intermediate buffer used in 
a software-only camera controlled operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pbyOut\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PBYTE CTAPIBasePin::m_pbyOut}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the output buffer 
used in a conversion operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::m_pCaptureFilter\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CTAPIVCap* CTAPIBasePin::m_pCaptureFilter}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the 
filter that owns us.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a 
pointer to the specified interface if supported. The only interfaces 
explicitly supported being {\b IAMStreamConfig}, {\b IAMStreamControl}, 
{\b ICPUControl}, {\b IFrameRateControl} and {\b IBitrateControl}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::OpenConverter\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::OpenConverter(}{\b PBITMAPINFOHEADER} {\i pbiIn}{\b , PBITMAPINFOHEADER} {\i pbiOut}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method opens a format 
converter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbiIn}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the input format.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbiOut}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the output format.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Verify error management\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Use the new format definition after the decoder has been implemented\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Basd on the result of the previous call, re-allocate if necessary\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::OpenSoftCamCtrl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::OpenSoftCamCtrl(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method opens a 
software-only camera controller.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERACS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Verify error management\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Add software-only operators for RGB16, RGB8 and RGB4\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Find a way to go around this extra memory copy in the preview case\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Add software-only operators for RGB16, RGB8 and RGB4\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Find a way to go around this extra memory copy in the preview case\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Add software-only operators for RGB16, RGB8 and RGB4\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::Reconnect\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::Reconnect(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
reconnect a pin to a downstream pin with a new format.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ReleaseBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ReleaseBuffer(}{\b IMediaSample*} {\i pSample}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the {\b CMediaSample}
 object. The final call to Release() on 
{\b IMediaSample} will call this method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSample}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the buffer to 
release.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ScaleDIB\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ScaleDIB(}{\b PBITMAPINFOHEADER} {\i pbiSrc}{\b , PBYTE} {\i pbySrc}{\b , PBITMAPINFOHEADER} {\i pbiSrc}{\b , PBYTE} {\i pbyDst}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method a bitmap. For now, 
RGB24 only.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbiSrc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the input bitmap format.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbySrc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the input bitmap.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbiSrc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the output bitmap format.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbyDst}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the output bitmap.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You'll need a function like this one for RGB16 and RGB8 
too. In RGB8, make sure you use the Indeo palette.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::ScaleDIB\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::ScaleDIB(}{\b PBITMAPINFOHEADER} {\i pbi}{\b , PBYTE} {\i pbySrc}{\b , PBYTE} {\i pbyDst}{\b , LPRECT} {\i prcRect}{\b , BOOL} {\i fFlipHorizontal}{\b , BOOL} {\i fFlipVertical}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method scales/flips 
a bitmap rectangle. For now, RGB24 only.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CONVERT.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbi}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the bitmap format.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbySrc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the input bitmap.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbyDst}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the output bitmap.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i prcRect}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the relevant rectangle in the 
input bitmap.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fFlipHorizontal}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if the output bitmap 
is to be flipped horizontally.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fFlipVertical}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if the output bitmap 
is to be flipped vertically.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You'll need a function like this one for RGB16 and RGB8 
too. In RGB8, make sure you use the Indeo palette.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SendFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SendFrame(}{\b CFrameSample} {\i pSample}{\b , LPTHKVIDEOHDR} {\i ptvh}{\b , PDWORD} {\i pdwBytesUsed}{\b , BOOL} {\i bDiscon}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
send a a media sample downstream.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_FALSE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the pin is off (IAMStreamControl)\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pSample}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media sample 
to send downstream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ptvh}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the video header 
of the video capture buffer associated to this sample.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwBytesUsed}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to receive 
the size of the frame that has been delivered downstream.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bDiscon}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if this is the first frame we ever 
sent downstream.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 What you really want to do, if possible, is simply update the 
sample pointer to point to m_pbyCamCtrl instead of the video 
capture buffer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This is probably not representative of what the encoder has 
generated, but who cares?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some frame-grabbing specific timings here\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetFormat\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetFormat(}{\b AM_MEDIA_TYPE*} {\i pmt}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
set a specific media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pmt}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an {\b AM_MEDIA_TYPE} 
structure.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMaxBitrate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMaxBitrate(}{\b DWORD} {\i dwMaxBitrate}{\b , DWORD} {\i dwLayerId}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the output pin the upper limit in 
bandwidth transmission.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BITRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMaxBitrate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the new limit in bandwidth 
transmission to an output pin, in bits/s.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwLayerId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the ID of the encoding layer the 
call applies to. For standard audio and video encoders, this field is 
always set to 0. In the case of multi-layered encoders, this field 
shall be set to 0 for the base layer, 1 for the first enhancement 
layer, 2 for the next enhancement layer, etc\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMaxCPULoad\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMaxCPULoad(}{\b DWORD} {\i dwMaxCPULoad}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
specify to the compressed video output pin the maximum encoding 
algorithm CPU load.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMaxCPULoad}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the maximum encoding 
algorithm CPU load, in percentage units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMaxFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMaxFrameRate(}{\b REFERENCE_TIME} {\i AvgTimePerFrame}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the output pin the new video frame's 
average display time.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FPSRATE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i AvgTimePerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the new video 
frame's average display time to an output pin, in 100-nanosecond units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMaxProcessingTime\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMaxProcessingTime(}{\b REFERENCE_TIME} {\i MaxProcessingTime}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is used to specify to the compressed video output pin the 
maximum encoding time per frame, in 100-nanosecond units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CPUC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxProcessingTime}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the maximum 
encoding time per frame, in 100-nanosecond units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMediaType\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMediaType(}{\b CMediaType*} {\i pMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
set a specific media type on a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the media type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Beware if you are previewing at the same time!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetMode\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetMode(}{\b long} {\i Mode}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to set the 
video control mode of operation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Mode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify a combination of the flags from the 
{\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::SetProperties\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIBasePin}{\b ::SetProperties(}{\b ALLOCATOR_PROPERTIES*} {\i pRequest}{\b , ALLOCATOR_PROPERTIES*} {\i pActual}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
specify the size, number, and alignment of blocks.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRequest}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
requested allocator properties.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pActual}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the 
allocator properties actually set.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIBasePin::~CTAPIBasePin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CTAPIBasePin}{\b ::~CTAPIBasePin(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CTAPIBasePin}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CTAPIVCap}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the TAPI Video Capture Source 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CTAPIVCap}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the TAPI VfW Capture Source 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CTAPIVCap}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class implements the TAPI VfW Capture Source 
filter.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Capture\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Capture(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
run the capture loop. Executes while in the run state.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove this before checkin!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Hmmm, you're assuming always 6 buffers here... KABOOM!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Hmmm, you're assuming always 6 buffers here... KABOOM!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Isn't there a better way to return the buffer to the device?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Isn't there a better way to return the buffer to the device?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove all OutputDebugString\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove all OutputDebugString\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove all OutputDebugString\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove all OutputDebugString\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ChangeThdState\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CTAPIVCap}{\b ::ChangeThdState(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method changes the state of the 
capture worker thread.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns new thread state\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::CreateInstance\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CUnknown*} {\b CTAPIVCap}{\b ::CreateInstance(}{\b LPUNKNOWN} {\i pUnkOuter}{\b , HRESULT*} {\i pHr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is called by DShow to create an instance of the TAPI VfW Capture 
Source filter referred to in the global structure {\b g_Templates}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a pointer to the nondelegating CUnknown portion of the 
object, or NULL otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pUnkOuter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the outer unknown, if any.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pHr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put any error return.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Step through this code!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::CreatePins\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::CreatePins(}{\b DWORD} {\i dwMilliSecsTimeout}{\b , FILTER_STATE*} {\i State}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the current state of the filter. We don't send any data during 
PAUSE, so to avoid hanging renderers, we need to return VFW_S_CANT_CUE 
when paused.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMilliSecsTimeout}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the duration of the time-out, 
in milliseconds.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i State}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the name of the filter being added.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You should delete the created pins if one of the pins fails to be created!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::CreateThd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::CreateThd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method creates the 
capture worker thread.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE on success, FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::CTAPIVCap\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CTAPIVCap}{\b ::CTAPIVCap(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the constructor 
for the {\b CTAPIVCap}
 object. It only gets the OS type.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Use some const defines, please!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::DestroyThd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::DestroyThd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method waita for the 
worker thread to die before performing some cleanup.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::FindIDByRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::FindIDByRange(}{\b AM_MEDIA_TYPE*} {\i pAMMediaType}{\b , DWORD*} {\i pdwID}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
obtain the unique format ID of a capability that corresponds to an 
{\b AM_MEDIA_TYPE}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAMMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b AM_MEDIA_TYPE} structure that has been initialized indicate a 
specific format.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD output parameter 
that will contain the unique format ID.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Get\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Get(}{\b VideoProcAmpProperty} {\i Property}{\b , long*} {\i plValue}{\b , VideoProcAmpFlags*} {\i plFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve the 
value of a video quality setting.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the video 
quality setting to get the value of. Use a member of the 
{\b VideoProcAmpProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the current value of the 
video quality setting.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a member of the {\b VideoProcAmpFlags} 
enumerated type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Get\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Get(}{\b CameraControlProperty} {\i Property}{\b , long*} {\i plValue}{\b , long*} {\i plFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve the 
value of a camera control setting.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERAC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the camera 
control setting to get the value of. Use a member of the 
{\b CameraControlProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the current value of the 
camera control setting.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a member of the {\b CameraControlFlags} 
enumerated type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetCaps\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetCaps(}{\b IPin*} {\i pPin}{\b , long*} {\i pCapsFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the capabilities of the TAPI MSP Video Capture filter regarding 
flipping pictures and external triggers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the video output pin to query 
capabilities from.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCapsFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve a value representing a 
combination of the flags from the {\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetCurrentActualFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetCurrentActualFrameRate(}{\b IPin*} {\i pPin}{\b , LONGLONG*} {\i ActualFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the actual frame rate, expressed as a frame duration 
in 100 ns units.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the pin to retrieve the frame rate 
from.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ActualFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the frame rate in frame 
duration in 100 nS units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetCurrentDevice\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetCurrentDevice(}{\b PDWORD} {\i pdwDeviceIndex}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the index of the capture device currently used.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NO_CAPTURE_HARDWARE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No Capture hardware is available\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwDeviceIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to receive 
the index of the capture device currently used.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetDeviceInfo\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetDeviceInfo(}{\b DWORD} {\i dwDeviceIndex}{\b , PDEVICEINFO} {\i pDeviceInfo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve information about a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the device index of the capture 
device to return information about.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDeviceInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a {\b DEVICEINFO} 
structure to receive information about a capture device.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetFormatTable\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetFormatTable(}{\b IPin*} {\i pPin}{\b , H245VideoCapabilityTable*} {\i pTable}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
obtain {\b H245VideoCapabilityMap} structures for all formats and format 
options that the TAPI MSP Video Capture filter supports. The content of 
the capability information that the TAPI MSP Capability module obtains 
via this method is a two dimensional table that relates every supported 
transmit format to steady-state resource requirements of that format.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the video capture or 
still-image output pin of the capture device. The TAPI MSP Video 
Capture filter enumerates the list of formats supported by this pin to 
build its own video capability table.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTable}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b H245VideoCapabilityTable} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The memory allocated by {\b GetFormatTable} is released 
by calling {\b ReleaseFormatTable}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetFrameRateList\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetFrameRateList(}{\b IPin*} {\i pPin}{\b , long} {\i iIndex}{\b , SIZE} {\i Dimensions}{\b , long*} {\i ListSize}{\b , LONGLONG**} {\i MaxAvailableFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the list of available frame rates.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the pin to retrieve the frame rates 
from.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the index of the format to query 
for frame rates. This index corresponds to the order in which formats 
are enumerated by IAMStreamConfig::GetStreamCaps. The value must range 
between 0 and the number of supported {\b VIDEO_STREAM_CONFIG_CAPS} 
structures returned by IAMStreamConfig::GetNumberOfCapabilities.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Dimensions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the frame's image size (width 
and height) in pixels.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ListSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the number of elements in the list 
of frame rates.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxAvailableFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to an array of frame 
rates in 100 ns units. Can be NULL if only {\i ListSize} is wanted.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetH245VersionID\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetH245VersionID(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve a DWORD value that identifies the platform version that the 
TAPI MSP Video Capture filter was designed for. The platform version is 
defined as TAPI_H245_VERSION_ID.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Validate the H.245 version with Mike\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetLocalFormat\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetLocalFormat(}{\b H245VideoCapability*} {\i pRemoteCapability}{\b , HANDLE*} {\i phIntersectionCookie}{\b , AM_MEDIA_TYPE*} {\i pAMMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
obtain the local TAPI MSP Video Capture filter configuration 
parameters that are compatible with a remote capability.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRemoteCapability}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the H.245 
video format, including all parameters and options defined by H.245, of 
a remote video capability.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i phIntersectionCookie}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the dynamic instance of 
intersected capabilities. When the TAPI MSP Video Capture filter 
creates the intersection, it may allocate memory for the intersected 
capability parameters. The intersection cookie identifies this 
allocation. This is used to release internal allocations and also as an 
argument to the {\b GetNegotiatedLimitProperty} method.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAMMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b AM_MEDIA_TYPE} structure that has been initialized to regard 
negotiated options.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetNegotiatedLimitProperty}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetMaxAvailableFrameRate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetMaxAvailableFrameRate(}{\b IPin*} {\i pPin}{\b , long} {\i iIndex}{\b , SIZE} {\i Dimensions}{\b , LONGLONG*} {\i MaxAvailableFrameRate}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is 
used to retrieve the maximum frame rate currently available, based on 
bus bandwidth usage for connections, such as USB (Universal Serial Bus) 
and IEEE 1394, where the maximum frame rate may be limited due to 
bandwidth availability.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the pin to retrieve the frame rate 
from.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the index of the format to query 
for frame rates. This index corresponds to the order in which formats 
are enumerated by IAMStreamConfig::GetStreamCaps. The value must range 
between 0 and the number of supported {\b VIDEO_STREAM_CONFIG_CAPS} 
structures returned by IAMStreamConfig::GetNumberOfCapabilities.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Dimensions}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the frame's image size (width 
and height) in pixels.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i MaxAvailableFrameRate}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the maximum 
available frame rate in frame duration in 100 nS units.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetMode\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetMode(}{\b IPin*} {\i pPin}{\b , long} {\i Mode}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the video control mode of operation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the pin to get the video control 
mode from.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Mode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a value representing a combination of the 
flags from the {\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetNegotiatedLimitProperty\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetNegotiatedLimitProperty(}{\b HANDLE} {\i hIntersectionCookie}{\b , NegotiatedVideoLimit} {\i LimitProperty}{\b , DWORD*} {\i pdwValue}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
is used to obtain negotiated limits that were determined by either the 
{\b IntersectFormats} or {\b GetLocalFormat} 
method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hIntersectionCookie}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the dynamic instance of 
intersected capabilities.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i LimitProperty}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the limit 
property being retrieved.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to receive 
the value of the specified limit property.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IntersectFormats}, {\b GetLocalFormat}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Are you sure 0 is not a valid handle here?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetNumDevices\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetNumDevices(}{\b PDWORD} {\i pdwNumDevices}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the number of installed capture devices. This number includes 
only enabled devices.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwNumDevices}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to receive 
the number of installed capture devices.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetPages\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetPages(}{\b CAUUID*} {\i pPages}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method Fills a counted 
array of GUID values where each GUID specifies the CLSID of each 
property page that can be displayed in the property sheet for this 
object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Allocation failed\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPages}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a caller-allocated CAUUID 
structure that must be initialized and filled before returning. The 
pElems field in the CAUUID structure is allocated by the callee with 
CoTaskMemAlloc and freed by the caller with CoTaskMemFree.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetPin\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetPin(}{\b int} {\i n}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method returns a non-addrefed 
pointer to the {\b cBasePin}
 of a pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns NULL or a pointer to a {\b CBasePin}
 object.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i n}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetPinCount\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetPinCount(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method returns the pin 
count. There is typically a Capture Pin, a Preview pin, and sometimes 
an Overlay pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns the number of pins.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetRange(}{\b VideoProcAmpProperty} {\i Property}{\b , long*} {\i plMin}{\b , long*} {\i plMax}{\b , long*} {\i plSteppingDelta}{\b , long*} {\i plDefault}{\b , VideoProcAmpFlags*} {\i plCapsFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the minimum, maximum, and default values for specific video quality 
settings.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the video 
quality setting to determine the range of. Use a member of the 
{\b VideoProcAmpProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum value of the video 
quality setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum value of the video 
quality setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping delta of 
the video quality setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default value of the 
video quality setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plCapsFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the capabilities of the 
video quality setting. Pointer to a member of the 
{\b VideoProcAmpFlags} enumerated type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetRange\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetRange(}{\b CameraControlProperty} {\i Property}{\b , long*} {\i plMin}{\b , long*} {\i plMax}{\b , long*} {\i plSteppingDelta}{\b , long*} {\i plDefault}{\b , long*} {\i plCapsFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to retrieve 
the minimum, maximum, and default values for specific camera control 
settings.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERAC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the camera 
control setting to determine the range of. Use a member of the 
{\b CameraControlProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the minimum value of the camera 
control setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the maximum value of the camera 
control setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plSteppingDelta}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the stepping delta of 
the camera control setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plDefault}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the default value of the 
camera control setting range.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plCapsFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to retrieve the capabilities of the 
camera control setting. Pointer to a member of the 
{\b CameraControlFlags} enumerated type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::GetState\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::GetState(}{\b DWORD} {\i dwMilliSecsTimeout}{\b , FILTER_STATE*} {\i State}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the current state of the filter. We don't send any data during 
PAUSE, so to avoid hanging renderers, we need to return VFW_S_CANT_CUE 
when paused.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMilliSecsTimeout}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the duration of the time-out, 
in milliseconds.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i State}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the name of the filter being added.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::IntersectFormats\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::IntersectFormats(}{\b H245VideoCapability*} {\i pLocalCapability}{\b , H245VideoCapability*} {\i pRemoteCapability}{\b , HANDLE*} {\i phIntersectionCookie}{\b , H245VideoCapability*} {\i pIntersectedCapability}{\b , AM_MEDIA_TYPE*} {\i pAMMediaType}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
compare and intersect one local capability and one remote capability 
and to obtain configuration parameters.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pLocalCapability}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the H.245 video 
format, including all parameters and options defined by H.245, of a 
local video capability.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pRemoteCapability}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the H.245 
video format, including all parameters and options defined by H.245, of 
a remote video capability.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i phIntersectionCookie}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the dynamic instance of 
intersected capabilities. When the TAPI MSP Video Capture filter 
creates the intersection, it may allocate memory for the intersected 
capability parameters. The intersection cookie identifies this 
allocation. This is used to release internal allocations and also as an 
argument to the {\b GetNegotiatedLimitProperty} method.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pIntersectedCapability}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the H.245 
video format, of the resolved common local and remote capability 
options and limits.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pAMMediaType}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b AM_MEDIA_TYPE} structure that has been initialized to regard 
negotiated options.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetNegotiatedLimitProperty}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::JoinFilterGraph\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::JoinFilterGraph(}{\b IFilterGraph} {\i pGraph}{\b , LPCWSTR} {\i pName}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
inform a filter that it has joined a filter graph.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pGraph}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the filter graph to 
join.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pName}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the name of the filter being added.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 We don't validate input parameters as both pointers can be 
NULL when we leave the graph.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Why only this device but not all installed devices?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 The following delete may complain that m_user.pvi has been freed already 
investigate!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_fDialogUp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIVCap::m_fDialogUp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE if a VfW driver 
dialog box is up\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Describe and clean up other members\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Not all these need to be dynamic! Use constants whenever possibe. 
Camera control\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_fDialogUp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIVCap::m_fDialogUp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE if a VfW driver 
dialog box is up\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_fDialogUp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CTAPIVCap::m_fDialogUp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Set to TRUE if a VfW driver 
dialog box is up\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_lock\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCritSec CTAPIVCap::m_lock}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Critical section used for 
locking by the {\b CBaseFilter}
 base class.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_lock\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCritSec CTAPIVCap::m_lock}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Critical section used for 
locking by the {\b CBaseFilter}
 base class.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_lock\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCritSec CTAPIVCap::m_lock}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Critical section used for 
locking by the {\b CBaseFilter}
 base class.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pCapturePin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCapturePin CTAPIVCap::m_pCapturePin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the capture pin 
object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pCapturePin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCapturePin CTAPIVCap::m_pCapturePin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the capture pin 
object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pCapturePin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CCapturePin CTAPIVCap::m_pCapturePin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the capture pin 
object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pOverlayPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b COverlayPin CTAPIVCap::m_pOverlayPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the overlay 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pOverlayPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b COverlayPin CTAPIVCap::m_pOverlayPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the overlay 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pOverlayPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b COverlayPin CTAPIVCap::m_pOverlayPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the overlay 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pPreviewPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CPreviewPin CTAPIVCap::m_pPreviewPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the preview 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pPreviewPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CPreviewPin CTAPIVCap::m_pPreviewPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the preview 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pPreviewPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CPreviewPin CTAPIVCap::m_pPreviewPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the preview 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::m_pRtpPdPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CPreviewPin CTAPIVCap::m_pRtpPdPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the Rtp Pd 
pin object\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMVfwCaptureDialogs}, {\b IAMVideoProcAmp}, 
{\b IAMCameraControl}, {\b IH245VideoCapability}, {\b IPersistStream} and 
{\b IPersistPropertyBag}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Pause\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Pause(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method transitions the filter 
the filter to State_Paused state if it is not in this state already.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Actually, we want to be able and see the source dialog while running...\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::PauseThd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CTAPIVCap}{\b ::PauseThd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method puts the capture 
worker thread in a paused state and wait for it to get there.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Prepare\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CTAPIVCap}{\b ::Prepare(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to allocate 
resources in preparation for capture loop.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do some real error handling here\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Before you can do the following you need to decouple the samples 
from the capture buffers. This means using two different queues: one for 
the capture samples, and one for the capture buffers. This will also allow 
for a much smaller number of samples than capture buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do some real error handling here\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Before you can do the following you need to decouple the samples 
from the capture buffers. This means using two different queues: one for 
the capture samples, and one for the capture buffers. This will also allow 
for a much smaller number of samples than capture buffers.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do some real error handling here\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Before you can do the following you need to decouple the samples 
from the capture buffers. This means using two different queues: one for 
the preview samples, and one for the capture buffers. This will also allow 
for a much smaller number of samples than capture buffers.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ReleaseFormatTable\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::ReleaseFormatTable(}{\b H245VideoCapabilityTable*} {\i pTable}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
to release memory allocated by the {\b GetFormatTable} method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pTable}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to an 
{\b H245VideoCapabilityTable} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b GetFormatTable}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ReleaseFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::ReleaseFrame(}{\b LPTHKVIDEOHDR} {\i ptvh}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
return a buffer to the capture driver.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_FALSE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the pin is off (IAMStreamControl)\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ptvh}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ???.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove this before checkin!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ReleaseNegotiatedCapability\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::ReleaseNegotiatedCapability(}{\b HANDLE} {\i hIntersectionCookie}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
is used to release the TAPI MSP Video Capture filter internal memory 
allocated by either the {\b IntersectFormats} or 
{\b GetLocalFormat} method.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hIntersectionCookie}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the dynamic instance of 
intersected capabilities.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b IntersectFormats}, {\b GetLocalFormat}\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Are you sure 0 is not a valid handle here?\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Run\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Run(}{\b REFERENCE_TIME} {\i tStart}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method transitions the filter 
from paused to running state if it is not in this state already.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i tStart}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the reference time value 
corresponding to stream time 0.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::RunThd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::RunThd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method puts the worker 
thread into the run state. This call does not wait for the state 
transition to be complete before returning.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE on success, FALSE otherwise\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Set\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Set(}{\b CameraControlProperty} {\i Property}{\b , long} {\i lValue}{\b , long} {\i Flags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to set the value 
of a camera control setting.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/CAMERAC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the camera 
control setting to set the value of. Use a member of the 
{\b CameraControlProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the new value of the camera control 
setting.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Flags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A member of the {\b CameraControlFlags} enumerated 
type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Set\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Set(}{\b VideoProcAmpProperty} {\i Property}{\b , long} {\i lValue}{\b , VideoProcAmpFlags} {\i Flags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to set the value 
of a video quality setting.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/PROCAMP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_PROP_ID_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The specified property ID is not supported 
for the specified property set\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Property}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the video 
quality setting to set the value of. Use a member of the 
{\b VideoProcAmpProperty} enumerated type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the new value of the video quality 
setting.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Flags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 A member of the {\b VideoProcAmpFlags} enumerated 
type.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::SetCurrentDevice\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::SetCurrentDevice(}{\b DWORD} {\i dwDeviceIndex}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
specify the index of the capture device to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_STOPPED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Need to stop this filter first\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NO_CAPTURE_HARDWARE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No Capture hardware is available\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the index of the capture device 
to use.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::SetIDBase\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::SetIDBase(}{\b DWORD} {\i dwIDBase}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
control the sequential numbering range used to uniquely identify the 
TAPI MSP Video Capture filter capabilities.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDC.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwIDBase}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a DWORD value that indicates the 
beginning number in the sequence.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This dwIDBase value probably has a range. Figure it out and validate input param...\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Put some real code here!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::SetMode\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::SetMode(}{\b IPin*} {\i pPin}{\b , long} {\i Mode}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to set the 
video control mode of operation.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_NOTIMPL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Method is not supported\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify the pin to set the video control 
mode on.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i Mode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Used to specify a combination of the flags from the 
{\b VideoControlFlags} enumeration.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::SetSyncSource\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::SetSyncSource(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method identifies the 
reference clock to which the filter should synchronize activity.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\i pClock} parameter can be NULL, meaning that the filter 
should run as fast as possible at its current quality settings 
without any attempt to synchronize...\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Stop\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::Stop(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method transitions the filter 
the filter to State_Stopped state if it is not in this state already.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::StopThd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CTAPIVCap}{\b ::StopThd(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method puts the capture 
worker thread in a stopped state.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ThreadProc\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::ThreadProc(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Capture worker thread.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns 0.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 General strategy for thread synchronization: 
as much as possible we try to handle thread state transitions without 
trying to grab any critical sections. we use InterlockedExchange of a 
thread state variable and count on the fact that only Active and Inactive 
and the ThreadProc can change the thread state\par 

this works because: the caller of Active/Inactive is serialized so we 
will never try to make two state changes simultaneously. 
so state transitions boil down to a few simple possibilities:\par 

Not->Create   - Create() does this. effectively serializes Create 
so that the first thread does the work and subsequent 
threads fail.\par 

Create->Init  - worker does this when it starts up. worker will always 
proceed to Pause, this state exists only to make debugging 
easier. 
Init->Pause   - worker does this when done with initialization.\par 

Pause->Run    - user does  this via Run() 
Run->Pause    - user does this via Pause()\par 

Run->Stop     - user does this via Stop() 
Pause->Stop   - user does this via Stop()\par 

Stop->Destroy - another debugging state. worker sets destroy to indicate 
that it has noticed Stop request and is not shutting down 
thread always proceeds to Exit from 
Destroy->Exit - worker does this prior to dying.  this is a debug transition 
Exit->Not     - Destroy() does this after waiting for the worker to die.\par 

When Active returns, worker should always be in Pause or Run state 
When Inactive returns, worker should always be in Not state (worker does 
not exist)\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::ThreadProcInit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CTAPIVCap}{\b ::ThreadProcInit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Thread init stub.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns 0\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::Unprepare\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CTAPIVCap}{\b ::Unprepare(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
free resources used by the capture loop.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns NOERROR\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CTAPIVCap::~CTAPIVCap\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CTAPIVCap}{\b ::~CTAPIVCap(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CTAPIVCap}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::AddBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::AddBuffer(}{\b PVIDEOHDR} {\i pVHdr}{\b , DWORD} {\i cbVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
post a data buffer to a VfW capture device when video streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the structure pointed to by 
the {\i pVHdr} parameter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::AllocateBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::AllocateBuffer(}{\b LPTHKVIDEOHDR *} {\i pptvh}{\b , DWORD} {\i dwIndex}{\b , DWORD} {\i cbBuffer}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to allocate 
a data buffer when video streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pptvh}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to a 
THKVIDEOHDR structure to receive the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the positional index of the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbBuffer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::AllocateHeaders\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::AllocateHeaders(}{\b DWORD} {\i dwNumHdrs}{\b , DWORD} {\i cbHdr}{\b , LPVOID*} {\i ppaHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
video headers for data buffers used with a VfW capture device in streaming 
mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumHdrs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of video headers to allocate.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the video headers to allocate.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppaHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to receive 
the video headers allocated.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::ConnectToDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::ConnectToDriver(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
open a VfW capture device, get its format capibilities, and set a default 
format.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You may have to do some palette work here\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This should be adjusted on the available memory and the 
type of capture (streaming 4 buffs vs. frame grabbing 1 buff)\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::CreateVfWCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CVfWCapDev*} {\b CVfWCapDev}{\b ::CreateVfWCapDev(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , CCapDev**} {\i ppCapDev}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
helper function creates an object to interact with the VfW capture 
device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Out of memory\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppCapDev}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to the 
newly created {\b CVfWCapDev}
 object.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::CVfWCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CVfWCapDev}{\b ::CVfWCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the constructor 
for the {\b CVfWCapDev}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::DisconnectFromDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::DisconnectFromDriver(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::FreeBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::FreeBuffer(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
free a data buffer that was used with a VfW capture device in streaming 
mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::GetFormatFromDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::GetFormatFromDriver(}{\b VIDEOINFOHEADER **} {\i ppvi}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the VfW capture device format in use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppvi}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to 
a video info header structure to receive the video format description.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Verify the value for this fps\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::GrabFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::GrabFrame(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
grab a video frame from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a VIDEOHDR structure to 
receive the video frame.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::HasDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::HasDialog(}{\b int} {\i iDialog}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine if the specified dialog box exists in the driver.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VFWDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the driver contains the dialog box\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_FALSE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the driver doesn't contain the dialog box\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iDialog}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the desired dialog box. This is a member 
of the {\b VfwCaptureDialogs} enumerated data type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::InitializeStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::InitializeStreaming(}{\b DWORD} {\i usPerFrame}{\b , DWORD_PTR} {\i hEvtBufferDone}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
initialize a VfW capture device for streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i usPerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the frame rate to be used.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hEvtBufferDone}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the event to be 
signaled whenever a frame is available.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::IsBufferDone\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CVfWCapDev}{\b ::IsBufferDone(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
check the DONE status of a video streaming buffer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if the buffer is DONE, FALSE otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMVfWCaptureDialogs}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::ProfileCaptureDevice\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::ProfileCaptureDevice(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the list of formats supported by a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::SendDriverMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::SendDriverMessage(}{\b int} {\i iDialog}{\b , int} {\i uMsg}{\b , long} {\i dw1}{\b , long} {\i dw2}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
send a driver-specific message.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VFWDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iDialog}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the desired dialog box. This is a member 
of the {\b VfwCaptureDialogs} enumerated data type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uMsg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the message to send to the driver.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dw1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies message data.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dw2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies message data.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::SendFormatToDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::SendFormatToDriver(}{\b LONG} {\i biWidth}{\b , LONG} {\i biHeight}{\b , LONG} {\i biCompression}{\b , WORD} {\i biBitCount}{\b , REFERENCE_TIME} {\i AvgTimePerFrame}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
tell the VfW capture device what format to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biWidth}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the image width.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biHeight}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the image height.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biCompression}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the format type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biBitCount}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of bits per pixel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i AvgTimePerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the frame rate.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Fix units for fps\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Rename those variables - it's the format, not the number of colors...\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Copy the palette if there is one\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Do I need to set a palette too?  Do I care?\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::ShowDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::ShowDialog(}{\b int} {\i iDialog}{\b , HWND} {\i hwnd}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
displaay the specified dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VFWDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_STOPPED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The operation could not be performed because the filter is not stopped\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_CANNOT_CONNECT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No combination of intermediate filters could be found to make the connection\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iDialog}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the desired dialog box. This is a member 
of the {\b VfwCaptureDialogs} enumerated data type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the handle of the dialog box's parent 
window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::StartStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::StartStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
start streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::StopStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::StopStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
stop streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::TerminateStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CVfWCapDev}{\b ::TerminateStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
tell a VfW capture device to terminate streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CVfWCapDev::~CVfWCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CVfWCapDev}{\b ::~CVfWCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CVfWCapDev}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEV.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CWDMCapDev}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class provides access to the streaming class 
driver, through which we acess the video capture mini-driver properties 
using IOCtls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::AddBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::AddBuffer(}{\b PVIDEOHDR} {\i pVHdr}{\b , DWORD} {\i cbVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
post a data buffer to a VfW capture device when video streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the structure pointed to by 
the {\i pVHdr} parameter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::AllocateBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::AllocateBuffer(}{\b LPTHKVIDEOHDR *} {\i pptvh}{\b , DWORD} {\i dwIndex}{\b , DWORD} {\i cbBuffer}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to allocate 
a data buffer when video streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pptvh}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to a 
THKVIDEOHDR structure to receive the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the positional index of the video buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbBuffer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::AllocateHeaders\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::AllocateHeaders(}{\b DWORD} {\i dwNumHdrs}{\b , DWORD} {\i cbHdr}{\b , LPVOID*} {\i ppaHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
video headers for data buffers used with a WDM capture device in streaming 
mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumHdrs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of video headers to allocate.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the video headers to allocate.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppaHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to receive 
the video headers allocated.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove this before checkin!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::ConnectToDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::ConnectToDriver(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
open a WDM capture device, get its format capibilities, and set a default 
format.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Verify error management\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 You may have to do some palette work here\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 This should be adjusted on the available memory and the 
type of capture (streaming 4 buffs vs. frame grabbing 1 buff)\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::CreateDriverSupportedDataRanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CWDMCapDev}{\b ::CreateDriverSupportedDataRanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
builds the list of video data ranges supported by the capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the number of valid data ranges in the list.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::CreateWDMCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b CWDMCapDev*} {\b CWDMCapDev}{\b ::CreateWDMCapDev(}{\b CTAPIVCap*} {\i pCaptureFilter}{\b , CCapDev**} {\i ppCapDev}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
helper function creates an object to interact with the WDM capture 
device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_OUTOFMEMORY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Out of memory\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCaptureFilter}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the owner 
filter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppCapDev}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to the 
newly created {\b CWDMCapDev}
 object.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::CWDMCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CWDMCapDev}{\b ::CWDMCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the constructor 
for the {\b CWDMCapDev}
 object.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::DeQueueHeader\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b LPVIDEOHDR} {\b CWDMCapDev}{\b ::DeQueueHeader(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function dequeues a 
video buffer from the list of video buffers used for streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a valid pointer if successful, or NULL otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::DeviceIoControl\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::DeviceIoControl(}{\b HANDLE} {\i hFile}{\b , DWORD} {\i dwIoControlCode}{\b , LPVOID} {\i lpInBuffer}{\b , DWORD} {\i nInBufferSize}{\b , LPVOID} {\i lpOutBuffer}{\b , DWORD} {\i nOutBufferSize}{\b , LPDWORD} {\i lpBytesReturned}{\b , BOOL} {\i bOverlapped}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function wraps around 
::DeviceIOControl.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hFile}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Handle to the device that is to perform the 
operation.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwIoControlCode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the control code for the 
operation.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpInBuffer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a buffer that contains the data 
required to perform the operation.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i nInBufferSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size, in bytes, of the buffer 
pointed to by {\i lpInBuffer}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpOutBuffer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a buffer that receives the 
operation's output data.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i nOutBufferSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size, in bytes, of the 
buffer pointed to by {\i lpOutBuffer}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpBytesReturned}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a variable that receives the 
size, in bytes, of the data stored into the buffer pointed to by 
{\i lpOutBuffer}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i bOverlapped}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 If TRUE, the operation is performed 
asynchronously, if FALSE, the operation is synchronous.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::DisconnectFromDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::DisconnectFromDriver(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
release the capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::FindMatchDataRangeVideo\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::FindMatchDataRangeVideo(}{\b PBITMAPINFOHEADER} {\i pbiHdr}{\b , BOOL} {\i pfValidMatch}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method either 
finds a video data range compatible with the bitamp info header passed 
in, or the prefered video data range.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns a valid pointer to a {\b KS_DATARANGE_VIDEO} structure if 
successful, or a NULL pointer otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pbiHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Bitmap info header to match.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pfValidMatch}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if a match was found, FALSE 
otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 \\redrum\\slmro\\proj\\wdm10\\src\\dvd\\amovie\\proxy\\filter\\ksutil.cpp(207):KsGetMediaTypes(\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::FreeBuffer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::FreeBuffer(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
free a data buffer that was used with a VfW capture device in streaming 
mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetDefaultValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GetDefaultValue(}{\b GUID} {\i guidPropertySet}{\b , ULONG} {\i ulPropertyId}{\b , PLONG} {\i plDefValue}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function gets the 
default value of a video property of a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidPropertySet}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 GUID of the KS property set we are touching. It 
is either PROPSETID_VIDCAP_VIDEOPROCAMP or PROPSETID_VIDCAP_CAMERACONTROL.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulPropertyId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of the property we are touching. It is 
either KSPROPERTY_VIDEOPROCAMP_* or KSPROPERTY_CAMERACONTROL_*.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plDefValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a LONG to receive the default value.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetDriverDetails\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GetDriverDetails(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
dump the list of capabilities of a WDM capture device. This code should 
used in DEBUG mode only!\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nade\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetDriverSupportedDataRanges\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b CWDMCapDev}{\b ::GetDriverSupportedDataRanges(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method 
returns the list of video data ranges supported by the capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the number of valid data ranges in the list.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetFormatFromDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GetFormatFromDriver(}{\b VIDEOINFOHEADER **} {\i ppvi}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve the WDM capture device format in use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppvi}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a pointer to 
a video info header structure to receive the video format description.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetPropertyValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GetPropertyValue(}{\b GUID} {\i guidPropertySet}{\b , ULONG} {\i ulPropertyId}{\b , PLONG} {\i plValue}{\b , PULONG} {\i pulFlags}{\b , PULONG} {\i pulCapabilities}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function gets the 
current value of a video property of a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidPropertySet}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 GUID of the KS property set we are touching. It 
is either PROPSETID_VIDCAP_VIDEOPROCAMP or PROPSETID_VIDCAP_CAMERACONTROL.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulPropertyId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of the property we are touching. It is 
either KSPROPERTY_VIDEOPROCAMP_* or KSPROPERTY_CAMERACONTROL_*.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a LONG to receive the current value.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pulFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a ULONG to receive the current 
flags. We only care about KSPROPERTY_*_FLAGS_MANUAL or 
KSPROPERTY_*_FLAGS_AUTO.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pulCapabilities}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a ULONG to receive the 
capabilities. We only care about KSPROPERTY_*_FLAGS_MANUAL or 
KSPROPERTY_*_FLAGS_AUTO.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 Developer Notes\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 KSPROPERTY_VIDEOPROCAMP_S == KSPROPERTY_CAMERACONTROL_S.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GetRangeValues\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GetRangeValues(}{\b GUID} {\i guidPropertySet}{\b , ULONG} {\i ulPropertyId}{\b , PLONG} {\i plMin}{\b , PLONG} {\i plMax}{\b , PLONG} {\i plStep}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function gets the 
range values of a video property of a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidPropertySet}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 GUID of the KS property set we are touching. It 
is either PROPSETID_VIDCAP_VIDEOPROCAMP or PROPSETID_VIDCAP_CAMERACONTROL.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulPropertyId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of the property we are touching. It is 
either KSPROPERTY_VIDEOPROCAMP_* or KSPROPERTY_CAMERACONTROL_*.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a LONG to receive the minimum value.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plMax}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a LONG to receive the maximum value.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i plStep}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a LONG to receive the step value.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::GrabFrame\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::GrabFrame(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
grab a video frame from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a VIDEOHDR structure to 
receive the video frame.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::HasDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::HasDialog(}{\b int} {\i iDialog}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine if the specified dialog box exists in the driver.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_OK\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the driver contains the dialog box\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 S_FALSE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If the driver doesn't contain the dialog box\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iDialog}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the desired dialog box. This is a member 
of the {\b VfwCaptureDialogs} enumerated data type.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::InitializeStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::InitializeStreaming(}{\b DWORD} {\i usPerFrame}{\b , DWORD_PTR} {\i hEvtBufferDone}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
initialize a WDM capture device for streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i usPerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the frame rate to be used.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hEvtBufferDone}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the event to be 
signaled whenever a frame is available.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::IsBufferDone\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::IsBufferDone(}{\b PVIDEOHDR} {\i pVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
check the DONE status of a video streaming buffer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns TRUE if the buffer is DONE, FALSE otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
PVIDEOHDR structure identifying the video buffer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::m_dwDeviceID\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CWDMCapDev::m_dwDeviceID}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Capture device ID.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::m_hDriver\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HANDLE CWDMCapDev::m_hDriver}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member holds the driver 
file handle.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::m_pVideoDataRanges\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PVIDEO_DATA_RANGES CWDMCapDev::m_pVideoDataRanges}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member 
points to the video data range structure.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::NonDelegatingQueryInterface\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::NonDelegatingQueryInterface(}{\b REFIID} {\i riid}{\b , PVOID*} {\i ppv}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This 
method is the nondelegating interface query function. It returns a pointer 
to the specified interface if supported. The only interfaces explicitly 
supported being {\b IAMVfWCaptureDialogs}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i riid}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the identifier of the interface to return.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ppv}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the place in which to put the interface 
pointer.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::ProfileCaptureDevice\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::ProfileCaptureDevice(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the list of formats supported by a WDM capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::QueueHeader\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CWDMCapDev}{\b ::QueueHeader(}{\b LPVIDEOHDR} {\i lpVHdr}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function actually adds the 
video buffer to the list of video buffers used for streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to a {\b VIDEOHDR} structure describing 
a video buffer to add to the list of streaming buffers.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::QueueRead\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::QueueRead(}{\b DWORD} {\i dwIndex}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function queues a read 
operation on a video streaming pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Index of the video structure in read buffer.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Remove this before checkin!\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::SendFormatToDriver\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::SendFormatToDriver(}{\b LONG} {\i biWidth}{\b , LONG} {\i biHeight}{\b , LONG} {\i biCompression}{\b , WORD} {\i biBitCount}{\b , REFERENCE_TIME} {\i AvgTimePerFrame}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
tell the VfW capture device what format to use.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biWidth}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the image width.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biHeight}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the image height.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biCompression}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the format type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i biBitCount}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of bits per pixel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i AvgTimePerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the frame rate.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Fix units for fps\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Rename those variables - it's the format, not the number of colors...\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Copy the palette if there is one\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Allocate size for DATAPINCONNECT dynamically\par 
\pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Read this from somewhere\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::SetPropertyValue\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::SetPropertyValue(}{\b GUID} {\i guidPropertySet}{\b , ULONG} {\i ulPropertyId}{\b , LONG} {\i lValue}{\b , ULONG} {\i ulFlags}{\b , ULONG} {\i ulCapabilities}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function sets the 
current value of a video property of a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidPropertySet}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 GUID of the KS property set we are touching. It 
is either PROPSETID_VIDCAP_VIDEOPROCAMP or PROPSETID_VIDCAP_CAMERACONTROL.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulPropertyId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 ID of the property we are touching. It is 
either KSPROPERTY_VIDEOPROCAMP_* or KSPROPERTY_CAMERACONTROL_*.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lValue}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 New value.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 New flags. We only care about KSPROPERTY_*_FLAGS_MANUAL 
or KSPROPERTY_*_FLAGS_AUTO.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ulCapabilities}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 New capabilities. We only care about 
KSPROPERTY_*_FLAGS_MANUAL or KSPROPERTY_*_FLAGS_AUTO.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 Developer Notes\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 KSPROPERTY_VIDEOPROCAMP_S == KSPROPERTY_CAMERACONTROL_S.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::SetState\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::SetState(}{\b KSSTATE} {\i ksState}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function sets the state of the 
kernel streaming video pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE otherwise.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ksState}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 New state.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::ShowDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::ShowDialog(}{\b int} {\i iDialog}{\b , HWND} {\i hwnd}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
displaay the specified dialog box.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_UNEXPECTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Unrecoverable error\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NOT_STOPPED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The operation could not be performed because the filter is not stopped\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_CANNOT_CONNECT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No combination of intermediate filters could be found to make the connection\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i iDialog}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the desired dialog box. This is a member 
of the {\b VfwCaptureDialogs} enumerated data type.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hwnd}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the handle of the dialog box's parent 
window.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::Start\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::Start(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function puts the kernel streaming 
video pin in streaming mode.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::StartStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::StartStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
start streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::Stop\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMCapDev}{\b ::Stop(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function stops streaming on the 
kernel streaming video pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::StopStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::StopStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
stop streaming from a VfW capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::TerminateStreaming\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b CWDMCapDev}{\b ::TerminateStreaming(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
tell a WDM capture device to terminate streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMCapDev::~CWDMCapDev\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CWDMCapDev}{\b ::~CWDMCapDev(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is the destructor 
for the {\b CWDMCapDev}
 object. Closes the driver file handle and 
releases the video data range memory\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICEW.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Nada.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog Class\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b class CWDMDialog}\par 

\pard\plain \sa160\sl240 \fs21\lang1033 This class provides support for property 
pages to be displayed within a property sheet.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.H\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::BaseDlgProc\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b CWDMDialog}{\b ::BaseDlgProc(}{\b HWND} {\i hDlg}{\b , UINT} {\i uMessage}{\b , WPARAM} {\i wParam}{\b , LPARAM} {\i lParam}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function implements 
the dialog box procedure for the page of a property sheet.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Except in response to the WM_INITDIALOG message, the dialog box 
procedure returns nonzero if it processes the message, and zero if it 
does not.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDlg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Handle to dialog box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i uMessage}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Message sent to the dialog box.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wParam}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 First message parameter.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lParam}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Second message parameter.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::Create\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HPROPSHEETPAGE} {\b CWDMDialog}{\b ::Create(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function creates a new 
page for a property sheet.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the handle to the new property sheet if successful, or 
NULL otherwise.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::CWDMDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b CWDMDialog}{\b ::CWDMDialog(}{\b int} {\i DlgId}{\b , DWORD} {\i dwNumControls}{\b , GUID} {\i guidPropertySet}{\b , PPROPSLIDECONTROL} {\i pPC}{\b , PDWORD} {\i pdwHelp}{\b , CWDMPin *} {\i pCWDMPin}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Property page class constructor.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i DlgId}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Resource ID of the property page dialog.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwNumControls}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Number of controls to display in the page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i guidPropertySet}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 GUID of the KS property set we are showing in 
the property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pPC}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the list of slider controls 
to be displayed in the property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwHelp}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the list of help IDs to be displayed 
in the property page.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pCWDMPin}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the kernel streaming object 
we will query the property on.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::DoCommand\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b CWDMDialog}{\b ::DoCommand(}{\b WORD} {\i wCmdID}{\b , WORD} {\i hHow}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function handles WM_COMMAND. This 
is where a click on the Default button or one of the Auto checkboxes 
is handled\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Always returns 1.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wCmdID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Command ID.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hHow}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Notification code.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_bChanged\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CWDMDialog::m_bChanged}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member is set to TRUE after the 
page has been changed.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_bInit\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b BOOL CWDMDialog::m_bInit}\par
\pard\plain \sa160\sl240 \fs21\lang1033 This member is set to TRUE after the 
page has been initialized.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_DlgID\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b int CWDMDialog::m_DlgID}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Resource ID of the property page dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_dwNumControls\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b DWORD CWDMDialog::m_dwNumControls}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Number of controls to\\ 
display in the page.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_guidPropertySet\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b GUID CWDMDialog::m_guidPropertySet}\par
\pard\plain \sa160\sl240 \fs21\lang1033 GUID of the KS property 
we are showing in the property page.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_hDlg\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b HWND CWDMDialog::m_hDlg}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Window handle of the property page.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_pCWDMPin\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b CWDMPin * CWDMDialog::m_pCWDMPin}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the kernel 
streaming object we will query the property on.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_pdwHelp\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PDWORD CWDMDialog::m_pdwHelp}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the list of help IDs 
to be displayed in the property page.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::m_pPC\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b PPROPSLIDECONTROL CWDMDialog::m_pPC}\par
\pard\plain \sa160\sl240 \fs21\lang1033 Pointer to the list of 
slider controls to be displayed in the property page.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::QueryCancel\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b CWDMDialog}{\b ::QueryCancel(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function handles 
PSN_QUERYCANCEL by resetting the values of the controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Always returns 0.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CWDMDialog::SetActive\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b int} {\b CWDMDialog}{\b ::SetActive(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function handles 
PSN_SETACTIVE by intializing all the property page controls.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WDMDLGS.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Always returns 0.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetCapDeviceInfo\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetCapDeviceInfo(}{\b DWORD} {\i dwDeviceIndex}{\b , PDEVICEINFO} {\i pDeviceInfo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
retrieve information about a capture device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_FAIL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Failure\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_INVALIDARG\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Invalid argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VFW_E_NO_CAPTURE_HARDWARE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No Capture hardware is available\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceIndex}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the device index of the capture 
device to return information about.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pDeviceInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a {\b DEVICEINFO} 
structure to receive information about a capture device.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetNumCapDevices\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b HRESULT} {\b GetNumCapDevices(}{\b PDWORD} {\i pdwNumDevices}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This method is used to 
determine the number of installed capture devices. This number includes 
only enabled devices.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVENUM.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 This method returns an HRESULT value that depends on the 
implementation of the interface. HRESULT can include one of the 
following standard constants, or other values not listed:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 E_POINTER\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Null pointer argument\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 NOERROR\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 No error\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pdwNumDevices}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a DWORD to receive 
the number of installed capture devices.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 Developer Notes\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 MSDN references: 
DirectX 5, DirectX Media, DirectShow, Application Developer's Guide 
"Enumerate and Access Hardware Devices in DirectShow Applications"\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Could there be another bag property we could use to get version info for WDM devices?\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 GetProcOrd\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b FARPROC} {\b GetProcOrd(}{\b HINSTANCE} {\i hinstDll}{\b , UINT} {\i ord}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 GetProcAddress on a DLL by ordinal.\par 

Win95 does not let you GetProcAddress on KERNEL32 by ordinal, 
so we need to do it the evil way.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hinstDll}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The instance handle of the DLL we want to get the ordinal 
from.  The only DLL you need to use this function for is 
KERNEL32.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i ord}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 The ordinal you want to retrieve.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 OpenVxDHandle\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b OpenVxDHandle(}{\b HANDLE} {\i hEvent}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 On Win9x we have to convert the event 
handle we will be using as a callback into a VxD handle. Ssince the 
Win9x kernel does not publish this entry point we dynamically link to 
it.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/WRKRTHD.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns mapped event handle\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hEvent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a event handle.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 TemplateThunk\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b TemplateThunk(}{\b FARPROC} {\i fp}{\b , PCSTR} {\i pszSig}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Call down, passing all sorts of random parameters.\par 

Parameter signature is as follows:\par 

p = 0:32 pointer to convert to 16:16 pointer 
l = a 32-bit integer 
s = a 16-bit integer\par 

P = returns a pointer 
L = returns a 32-bit integer 
S = returns a 16-bit signed integer 
U = returns a 16-bit unsigned integer\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i fp}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 16:16 function to call.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i pszSig}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Function signature.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ThunkGetProcAddresses\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b ThunkGetProcAddresses(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Get all the necessary proc addresses.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ThunkInit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b ThunkInit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Initialize the various goo we need in KERNEL32.\par 

Returns FALSE if we cannot initialize the thunks. 
(For example, if the platform doesn't support flat thunks.)\par 

Note that you must never ever call this function more 
than once.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ThunkInit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b ThunkInit(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 GetProcAddress16 our brains out.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ThunkTerm\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void} {\b ThunkTerm(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 Free it.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoCapDriverDescAndVer\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoCapDriverDescAndVer(}{\b DWORD} {\i dwDeviceID}{\b , LPTSTR} {\i lpszDesc}{\b , UINT} {\i cbDesc}{\b , LPTSTR} {\i lpszVer}{\b , UINT} {\i cbVer}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function gets strings 
for the description and version of a video capture driver\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the index of which video driver to get 
information about.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpszDesc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a place to return the description\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbDesc}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the length of the description string\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpszVer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a place to return the version\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i cbVer}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the length of the version string\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use this function to get strings describing the driver and its version\par 

/***************************************************************************\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoClose\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoClose(}{\b HVIDEO} {\i hVideo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function closes the specified video 
device channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NONSPECIFIC\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 The driver failed to close the channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel. 
If this function is successful, the handle is invalid 
after this call.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If buffers have been sent with {\b videoStreamAddBuffer} and 
they haven't been returned to the application, 
the close operation fails. You can use {\b videoStreamReset} to mark all 
pending buffers as done.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoOpen} {\b videoStreamInit} {\b videoStreamFini} {\b videoStreamReset}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoConfigure\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoConfigure(}{\b HVIDEO} {\i hVideo}{\b , UINT} {\i msg}{\b , DWORD} {\i dwFlags}{\b , LPDWORD} {\i lpdwReturn}{\b , LPVOID} {\i lpData1}{\b , DWORD} {\i dwSize1}{\b , LPVOID} {\i lpData2}{\b , DWORD} {\i dwSize2}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function sets or retrieves 
the options for a configurable driver.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOTSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Function is not supported.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i msg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the option to set or retrieve. The 
following options are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DVM_PALETTE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates a palette is being sent to the driver 
or retrieved from the driver.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DVM_PALETTERGB555\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates an RGB555 palette is being 
sent to the driver.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DVM_FORMAT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates format information is being sent to 
the driver or retrieved from the driver.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies flags for configuring or 
interrogating the device driver. The following flags are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_SET\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates values are being sent to the driver.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_GET\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates values are being obtained from the driver.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_QUERY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Determines if the 
driver supports the option specified by {\i msg}. This flag 
should be combined with either the VIDEO_CONFIGURE_SET or 
VIDEO_CONFIGURE_GET flag. If this flag is 
set, the {\i lpData1}, {\i dwSize1}, {\i lpData2}, and {\i dwSize2} 
parameters are ignored.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_QUERYSIZE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Returns the size, in bytes, 
of the configuration option in {\i lpdwReturn}. This flag is only valid if 
the VIDEO_CONFIGURE_GET flag is also set.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_CURRENT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Requests the current value. 
This flag is valid only if  the VIDEO_CONFIGURE_GET flag is also set.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_NOMINAL\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Requests the nominal value. 
This flag is valid only if  the VIDEO_CONFIGURE_GET flag is also set.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_MIN\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Requests the minimum value. 
This flag is valid only if  the VIDEO_CONFIGURE_GET flag is also set.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_CONFIGURE_MAX\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Get the maximum value. 
This flag is valid only if  the VIDEO_CONFIGURE_GET flag is also set.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpdwReturn}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Points to a DWORD used for returning information 
from the driver.  If 
the VIDEO_CONFIGURE_QUERYSIZE flag is set, {\i lpdwReturn} is 
filled with the size of the configuration option.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpData1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to message specific data.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwSize1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size, in bytes, of the {\i lpData1} 
buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpData2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to message specific data.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwSize2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size, in bytes, of the {\i lpData2} 
buffer.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoOpen} {\b videoMessage}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoDialog\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoDialog(}{\b HVIDEO} {\i hVideo}{\b , HWND} {\i hWndParent}{\b , DWORD} {\i dwFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function displays a channel-specific 
dialog box used to set configuration parameters.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOTSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Function is not supported.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hWndParent}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the parent window handle.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies flags for the dialog box. The 
following flag is defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_DLG_QUERY\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If this flag is set, the driver immediately 
returns zero if it supplies a dialog box for the channel, 
or DV_ERR_NOTSUPPORTED if it does not.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Typically, each dialog box displayed by this 
function lets the user select options appropriate for the channel. 
For example, a VIDEO_IN channel dialog box lets the user select 
the image dimensions and bit depth.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoOpen} {\b videoConfigureStorage}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoFunc\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b void CALLBACK} {\b videoFunc(}{\b HVIDEO} {\i hVideo}{\b , DWORD} {\i wMsg}{\b , DWORD} {\i dwInstance}{\b , DWORD} {\i dwParam1}{\b , DWORD} {\i dwParam2}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 {\b videoFunc} is a placeholder for an 
application-supplied function name. The actual name must be exported by 
including it in an EXPORTS statement in the DLL's module-definition file. 
This is used only when a callback function is specified in 
{\b videoStreamInit}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel 
associated with the callback.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wMsg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the MM_DRVM_ messages. Messages indicate 
errors and when image data is available. For information on 
these messages, see {\b videoStreamInit}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwInstance}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the user instance 
data specified with {\b videoStreamInit}.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwParam1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a parameter for the message.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwParam2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a parameter for the message.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Because the callback is accessed at interrupt time, it must reside 
in a DLL and its code segment must be specified as FIXED in the 
module-definition file for the DLL. Any data the callback accesses 
must be in a FIXED data segment as well. The callback may not make any 
system calls except for {\b PostMessage}, {\b timeGetSystemTime}, 
{\b timeGetTime}, {\b timeSetEvent}, {\b timeKillEvent}, 
{\b midiOutShortMsg}, {\b midiOutLongMsg}, and {\b OutputDebugStr}.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoOpen} {\b videoStreamFini} {\b videoClose}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoGetChannelCaps\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoGetChannelCaps(}{\b HVIDEO} {\i hVideo}{\b , LPCHANNEL_CAPS} {\i lpChannelCaps}{\b , DWORD} {\i dwSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function retrieves a 
description of the capabilities of a channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function is successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Function is not supported.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpChannelCaps}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a far pointer to a 
{\b CHANNEL_CAPS} structure.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size, in bytes, of the 
{\b CHANNEL_CAPS} structure.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 The {\b CHANNEL_CAPS} structure returns the capability 
information. For example, capability information might 
include whether or not the channel can crop and scale images, 
or show overlay.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoGetNumDevs\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoGetNumDevs(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns the number of MSVIDEO 
devices installed.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDEO.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the number of MSVIDEO devices listed in the 
[drivers] (or [drivers32] for NT) section of the SYSTEM.INI file.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Because the indexes of the MSVIDEO devices in the SYSTEM.INI 
file can be non-contiguous, applications should not assume 
the indexes range between zero and the number of devices minus 
one.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoOpen}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoMessage\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoMessage(}{\b HVIDEO} {\i hVideo}{\b , UINT} {\i wMsg}{\b , DWORD} {\i dwP1}{\b , DWORD} {\i dwP2}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function sends messages to a 
video device channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns the message specific value returned from the driver.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i wMsg}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the message to send.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwP1}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the first parameter for the message.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwP2}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the second parameter for the message.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function is used for configuration messages such as 
DVM_SRC_RECT and DVM_DST_RECT, and 
device specific messages.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoConfigure}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoOpen\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoOpen(}{\b LPHVIDEO} {\i lphvideo}{\b , DWORD} {\i dwDeviceID}{\b , DWORD} {\i dwFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function opens a channel on the 
specified video device.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_BADDEVICEID\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the specified device ID is out of range.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_ALLOCATED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the specified resource is already allocated.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOMEM\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device is unable to allocate or lock memory.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lphvideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a far pointer to a buffer 
used to return an {\b HVIDEO} handle. The video capture driver 
uses this location to return 
a handle that uniquely identifies the opened video device channel. 
Use the returned handle to identify the device channel when 
calling other video functions.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the video device to open. 
The value of {\i dwDeviceID} varies from zero to one less 
than the number of video capture devices installed in the system.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies flags for opening the device. 
The following flags are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_EXTERNALIN\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies the channel is opened 
for external input. Typically, external input channels 
capture images into a frame buffer.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_EXTERNALOUT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies the channel is opened 
for external output. Typically, external output channels 
display images stored in a frame buffer on an auxilary monitor 
or overlay.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_IN\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies the channel is opened 
for video input. Video input channels transfer images 
from a frame buffer to system memory buffers.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 VIDEO_OUT\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specifies the channel is opened 
for video output. Video output channels transfer images 
from system memory buffers to a frame buffer.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 At a minimum, all capture drivers support a VIDEO_EXTERNALIN 
and a VIDEO_IN channel. 
Use {\b videoGetNumDevs} to determine the number of video 
devices present in the system.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoClose}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoRegGetDriverByIndex\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b videoRegGetDriverByIndex(}{\b DWORD} {\i dwDeviceID}{\b , LPDEVNODE} {\i lpDevnode}{\b , LPBOOL} {\i lpEnabled}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns information 
about a capture driver by index from the registry.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDEO.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns TRUE if successful, or FALSE if a driver was not found 
with the {\i dwDeviceID} index.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwDeviceID}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Identifies the video device to open. 
The value of {\i dwDeviceID} varies from zero to one less 
than the number of video capture devices installed in the system.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpDevnode}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a far pointer to a buffer 
used to return an {\b DEVNODE} handle.  For non Plug-and-Play devices, 
this return value will be NULL.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpEnabled}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a far pointer to a buffer 
used to return a {\b BOOL} flag.  If this value is TRUE, the driver is 
enabled, if FALSE, the corresponding device is disabled.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Because the indexes of the MSVIDEO devices in the SYSTEM.INI 
file can be non-contiguous, applications should not assume 
the indexes range between zero and the number of devices minus 
one.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoRegOpenMSVideoKey\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b BOOL} {\b videoRegOpenMSVideoKey(void}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function returns a key 
for the msvideo node in the registry. 
If the key does not exist it will be created, 
and the default entries made.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDEO.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns Key on success, else NULL.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamFini\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamFini(}{\b HVIDEO} {\i hVideo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function terminates streaming 
from the specified device channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device handle specified is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_STILLPLAYING\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates there are still buffers in the queue.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If there are buffers that have been sent with 
{\b videoStreamAddBuffer} that haven't been returned to the application, 
this operation will fail. Use {\b videoStreamReset} to return all 
pending buffers.\par 

Each call to {\b videoStreamInit} must be matched with a call to 
{\b videoStreamFini}.\par 

For VIDEO_EXTERNALIN channels, this function is used to 
halt capturing of data to the frame buffer.\par 

For VIDEO_EXTERNALOUT channels supporting overlay, 
this function is used to disable the overlay.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamInit}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamInit\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamInit(}{\b HVIDEO} {\i hVideo}{\b , DWORD} {\i dwMicroSecPerFrame}{\b , DWORD_PTR} {\i dwCallback}{\b , DWORD_PTR} {\i dwCallbackInstance}{\b , DWORD} {\i dwFlags}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function initializes a video 
device channel for streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_BADDEVICEID\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device ID specified in 
{\i hVideo} is not valid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_ALLOCATED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the resource specified is already allocated.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOMEM\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device is unable to allocate or lock memory.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwMicroSecPerFrame}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of microseconds 
between frames.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwCallback}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the address of a callback 
function or a handle to a window called during video 
streaming. The callback function or window processes 
messages related to the progress of streaming.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwCallbackInstance}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies user 
instance data passed to the callback function. This parameter is not 
used with window callbacks.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwFlags}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies flags for opening the device channel. 
The following flags are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CALLBACK_WINDOW\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If this flag is specified, {\i dwCallback} is 
a window handle.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 CALLBACK_FUNCTION\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 If this flag is specified, {\i dwCallback} is 
a callback procedure address.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If a window or function is chosen to receive callback information, the following 
messages are sent to it to indicate the 
progress of video input:\par 

MM_DRVM_OPEN is sent at the time of {\b videoStreamInit}\par 

MM_DRVM_CLOSE is sent at the time of {\b videoStreamFini}\par 

MM_DRVM_DATA is sent when a buffer of image data is available\par 

MM_DRVM_ERROR is sent when an error occurs\par 

Callback functions must reside in a DLL. 
You do not have to use {\b MakeProcInstance} to get 
a procedure-instance address for the callback function.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamPrepareHeader\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamPrepareHeader(}{\b HVIDEO} {\i hVideo}{\b , LPVIDEOHDR} {\i lpvideoHdr}{\b , DWORD} {\i dwSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function prepares a buffer 
for video streaming.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOMEM\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device is unable to allocate or lock memory.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video 
device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpvideoHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a 
{\b VIDEOHDR} structure identifying the buffer to be prepared.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the {\b VIDEOHDR} structure in bytes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 Use this function after {\b videoStreamInit} or 
after {\b videoStreamReset} to prepare the data buffers 
for streaming data.\par 

The {\b VIDEOHDR} data structure and the data block pointed to by its 
{\b lpData}
 member must be allocated with {\b GlobalAlloc} using the 
GMEM_MOVEABLE and GMEM_SHARE flags, and locked with {\b GlobalLock}. 
Preparing a header that has already been prepared will have no effect 
and the function will return zero. Typically, this function is used 
to ensure that the buffer will be available for use at interrupt time.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamUnprepareHeader}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamReset\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamReset(}{\b HVIDEO} {\i hVideo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function stops streaming 
on the specified video device channel and resets the current position 
to zero.  All pending buffers are marked as done and 
are returned to the application.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device handle specified is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOTSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device does not support this 
function.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamReset} {\b videoStreamStop} {\b videoStreamAddBuffer} {\b videoStreamClose} 
/***************************************************************************\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamStart\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamStart(}{\b HVIDEO} {\i hVideo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function starts streaming on the 
specified video device channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device handle specified is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOTSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device does not support this 
function.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamReset} {\b videoStreamStop} {\b videoStreamAddBuffer} {\b videoStreamClose} 
/***************************************************************************\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamStop\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamStop(}{\b HVIDEO} {\i hVideo}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function stops streaming on a video channel.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following error is defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the specified device handle is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_NOTSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device does not support this 
function.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video 
device channel.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 If there are any buffers in the queue, the current buffer will be 
marked as done (the {\b dwBytesRecorded}
 member in 
the {\b VIDEOHDR} header will contain the actual length of data), but any 
empty buffers in the queue will remain there. Calling this 
function when the channel is not started has no effect, and the 
function returns zero.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamStart} {\b videoStreamReset}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoStreamUnprepareHeader\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoStreamUnprepareHeader(}{\b HVIDEO} {\i hVideo}{\b , LPVIDEOHDR} {\i lpvideoHdr}{\b , DWORD} {\i dwSize}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function clears the 
preparation performed by {\b videoStreamPrepareHeader}.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device handle specified is invalid.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_STILLPLAYING\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the structure identified by {\i lpvideoHdr} 
is still in the queue.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video 
device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i lpvideoHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to a {\b VIDEOHDR} 
structure identifying the data buffer to be unprepared.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i dwSize}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the size of the {\b VIDEOHDR} structure in bytes.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This function is the complementary function to {\b videoStreamPrepareHeader}. 
You must call this function before freeing the data buffer with {\b GlobalFree}. 
After passing a buffer to the device driver with {\b videoStreamAddBuffer}, you 
must wait until the driver is finished with the buffer before calling 
{\b videoStreamUnprepareHeader}. Unpreparing a buffer that has not been 
prepared or has been already unprepared has no effect, 
and the function returns zero.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 See Also\par \pard\plain \sa160\sl240 \fs21\lang1033 {\b videoStreamPrepareHeader}\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 videoUpdate\par 
\pard \plain \sa160\sl240 \fs21\lang1033 {\b DWORD} {\b videoUpdate(}{\b HVIDEO} {\i hVideo}{\b , HWND} {\i hWnd}{\b , HDC} {\i hDC}{\b ) }\par
\pard\plain \sa160\sl240 \fs21\lang1033 This function directs a channel to 
repaint the display.  It applies only to VIDEO_EXTERNALOUT channels.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/THUNK.C\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Return Value\par \pard\plain \sa160\sl240 \fs21\lang1033 Returns zero if the function was successful. Otherwise, it returns 
an error number. The following errors are defined:\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_UNSUPPORTED\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Specified message is unsupported.\par 
\pard\plain \s53\li280\sl-240\keepn \f0\fs21\lang1033 DV_ERR_INVALHANDLE\par 
\pard\plain \s55\li560\sa80\sl-240 \f0\fs21\lang1033 Indicates the device handle specified is invalid.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Parameters\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hVideo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to the video device channel.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hWnd}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the handle of the window to be used 
by the channel for image display.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\i hDC}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a handle to a device context.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Comments\par \pard\plain \sa160\sl240 \fs21\lang1033 This message is normally sent 
whenever the client window receives a WM_MOVE, WM_SIZE, 
or WM_PAINT message.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CONVERSIONTYPE_DECODE constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000002 CONVERSIONTYPE_DECODE;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Specifies a decoding operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CONVERSIONTYPE_ENCODE constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000001 CONVERSIONTYPE_ENCODE;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Specifies an encoding operation.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CONVERSIONTYPE_NONE constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000000 CONVERSIONTYPE_NONE;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 No conversion operation necessary.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 CONVERSIONTYPE_SCALER constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000004 CONVERSIONTYPE_SCALER;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/BASEPIN.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Specifies an image size change.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DISPLAY_DLG_OFF constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000000 DISPLAY_DLG_OFF;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Disable display dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DISPLAY_DLG_ON constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000002 DISPLAY_DLG_ON;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Enable display dialog.\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 \cf6 To Do\par \pard\plain \sa160\sl240 \fs21\lang1033 \cf6 Use the two following keys or get rid of them\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FORMAT_DLG_OFF constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000000 FORMAT_DLG_OFF;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Disable video format dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 FORMAT_DLG_ON constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000001 FORMAT_DLG_ON;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Enable video format dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 NUM_4BIT_ENTRIES constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 16 NUM_4BIT_ENTRIES;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Number of entries in a 4bit palette.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 NUM_8BIT_ENTRIES constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 256 NUM_8BIT_ENTRIES;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Number of entries in an 8bit palette.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SOURCE_DLG_OFF constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000000 SOURCE_DLG_OFF;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Disable source dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 SOURCE_DLG_ON constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000002 SOURCE_DLG_ON;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Enable source dialog.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_BI_BITFIELDS constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const BI_BITFIELDS VIDEO_FORMAT_BI_BITFIELDS;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 RGB Bit Fields video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_BI_RGB constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const BI_RGB VIDEO_FORMAT_BI_RGB;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 RGB video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_BI_RLE4 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const BI_RLE4 VIDEO_FORMAT_BI_RLE4;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 RLE 4 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_BI_RLE8 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const BI_RLE8 VIDEO_FORMAT_BI_RLE8;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 RLE 8 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_CVID constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('c','v','i','d') VIDEO_FORMAT_CVID;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Cinepack video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_112_80 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000010 VIDEO_FORMAT_IMAGE_SIZE_112_80;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 112x80 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_120_90 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000020 VIDEO_FORMAT_IMAGE_SIZE_120_90;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 120x90 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_128_96 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000040 VIDEO_FORMAT_IMAGE_SIZE_128_96;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 128x96 (SQCIF) pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_144_112 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000080 VIDEO_FORMAT_IMAGE_SIZE_144_112;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 144x112 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_160_120 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000100 VIDEO_FORMAT_IMAGE_SIZE_160_120;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 160x120 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_160_128 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000200 VIDEO_FORMAT_IMAGE_SIZE_160_128;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 160x128 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_176_144 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000400 VIDEO_FORMAT_IMAGE_SIZE_176_144;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 176x144 (QCIF) pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_192_160 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000800 VIDEO_FORMAT_IMAGE_SIZE_192_160;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 192x160 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_200_150 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00001000 VIDEO_FORMAT_IMAGE_SIZE_200_150;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 200x150 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_208_176 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00002000 VIDEO_FORMAT_IMAGE_SIZE_208_176;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 208x176 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_224_192 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00004000 VIDEO_FORMAT_IMAGE_SIZE_224_192;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 224x192 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_240_180 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00008000 VIDEO_FORMAT_IMAGE_SIZE_240_180;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 240x180 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_240_208 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00010000 VIDEO_FORMAT_IMAGE_SIZE_240_208;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 240x208 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_256_224 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00020000 VIDEO_FORMAT_IMAGE_SIZE_256_224;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 256x224 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_272_240 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00040000 VIDEO_FORMAT_IMAGE_SIZE_272_240;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 272x240 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_280_210 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00080000 VIDEO_FORMAT_IMAGE_SIZE_280_210;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 280x210 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_288_256 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00100000 VIDEO_FORMAT_IMAGE_SIZE_288_256;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 288x256 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_304_272 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00200000 VIDEO_FORMAT_IMAGE_SIZE_304_272;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 304x272 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_320_240 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00400000 VIDEO_FORMAT_IMAGE_SIZE_320_240;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 320x240 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_320_288 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00800000 VIDEO_FORMAT_IMAGE_SIZE_320_288;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 320x288 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_336_288 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x01000000 VIDEO_FORMAT_IMAGE_SIZE_336_288;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 336x288 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_352_288 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x02000000 VIDEO_FORMAT_IMAGE_SIZE_352_288;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 352x288 (CIF) pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_40_30 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000001 VIDEO_FORMAT_IMAGE_SIZE_40_30;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 40x30 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_640_480 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x04000000 VIDEO_FORMAT_IMAGE_SIZE_640_480;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 640x480 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_64_48 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000002 VIDEO_FORMAT_IMAGE_SIZE_64_48;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 64x48 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_80_60 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000004 VIDEO_FORMAT_IMAGE_SIZE_80_60;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 80x60 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IMAGE_SIZE_96_64 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000008 VIDEO_FORMAT_IMAGE_SIZE_96_64;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 96x64 pixel frames.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_INTELH261 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('h','2','6','1') VIDEO_FORMAT_INTELH261;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Intel H.261 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_INTELH263 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('h','2','6','3') VIDEO_FORMAT_INTELH263;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Intel H.263 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_IV32 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('I','V','3','2') VIDEO_FORMAT_IV32;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Intel Indeo IV32 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_MRLE constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('M','R','L','E') VIDEO_FORMAT_MRLE;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Microsoft RLE video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_MSH261 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('M','2','6','1') VIDEO_FORMAT_MSH261;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Microsoft H.261 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_MSH263 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('M','2','6','3') VIDEO_FORMAT_MSH263;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Microsoft H.263 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_MSVC constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('M','S','V','C') VIDEO_FORMAT_MSVC;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Microsoft CRAM video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_16 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000001 VIDEO_FORMAT_NUM_COLORS_16;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 16 colors.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_16777216 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000008 VIDEO_FORMAT_NUM_COLORS_16777216;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 16777216 colors.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_256 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000002 VIDEO_FORMAT_NUM_COLORS_256;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 256 colors.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_65536 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000004 VIDEO_FORMAT_NUM_COLORS_65536;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses 65536 colors.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_I420 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000020 VIDEO_FORMAT_NUM_COLORS_I420;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the I420 compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_IYUV constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000040 VIDEO_FORMAT_NUM_COLORS_IYUV;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the IYUV compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_M261 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000200 VIDEO_FORMAT_NUM_COLORS_M261;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the M261 compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_M263 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000400 VIDEO_FORMAT_NUM_COLORS_M263;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the M263 compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_UYVY constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000100 VIDEO_FORMAT_NUM_COLORS_UYVY;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the UYVY compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_YUY2 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000080 VIDEO_FORMAT_NUM_COLORS_YUY2;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the YUY2 compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_COLORS_YVU9 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 0x00000010 VIDEO_FORMAT_NUM_COLORS_YVU9;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Video input device uses the YVU9 compressed format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_NUM_IMAGE_SIZE constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const 27 VIDEO_FORMAT_NUM_IMAGE_SIZE;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Number of video input sizes used by the device.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_UNKNOWN constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const WAVE_FORMAT_UNKNOWN VIDEO_FORMAT_UNKNOWN;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Constant for unknown video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_VDEC constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('V','D','E','C') VIDEO_FORMAT_VDEC;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Color QuickCam video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEO_FORMAT_YVU9 constant\par 
\pard\plain \sa160\sl240 \fs21\lang1033 {\b const MAKEFOURCC('Y','V','U','9') VIDEO_FORMAT_YVU9;}\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/FORMATS.H\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Intel Indeo YVU9 video format.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 BUFSTRUCT Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPVIDEOHDR lpVHdr;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BOOL fReady;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} BUFSTRUCT;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b BUFSTRUCT} structure holds the status of each 
video streaming buffer.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b lpVHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies a pointer to the video header of a 
video streaming buffer.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b fReady}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if the video buffer is available for 
video streaming, FALSE if is locked by the application or queued for 
an asynchronous read.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 DATAPINCONNECT Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab KSPIN_CONNECT Connect;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab KS_DATAFORMAT_VIDEOINFOHEADER Data;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} DATAPINCONNECT;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b DATAPINCONNECT} structure is used to 
connect to a streaming video pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Connect}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Describes how the connection is to be 
done.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Data}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Describes the video format 
of the video data streaming from a video pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 KS_HEADER_AND_INFO Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab KSSTREAM_HEADER StreamHeader;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab KS_FRAME_INFO FrameInfo;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} KS_HEADER_AND_INFO;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b KS_HEADER_AND_INFO} structure is used 
stream data from a video pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b StreamHeader}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Describes how the streaming is to be 
done.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b FrameInfo}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Describes the video format 
of the video data streaming from a video pin.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 ThdState\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum ThdState \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Not,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Create,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Init,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Pause,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Run,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Stop,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Destroy,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab TS_Exit\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b ThdState} enum is used to change and keep track of 
that capture worker thread state.\par
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/TAPIVCAP.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Not}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread hasn't been created yet.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Create}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread has been created.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Init}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread hasn't been initialized.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Pause}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread is in the Pause state.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Run}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread is in the Run state.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Stop}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread is in the Stop state.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Destroy}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread hasn't been destroyed.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b TS_Exit}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Worker thread hasn't been asked to exit.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VideoControlFlags\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 enum VideoControlFlags \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab VideoControlFlag_FlipHorizontal,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab VideoControlFlag_FlipVertical,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab VideoControlFlag_ExternalTriggerEnable,\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab VideoControlFlag_Trigger\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \};\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b VideoControlFlags} enum is used to describe 
video modes.\par
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/VIDCTRL.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b VideoControlFlag_FlipHorizontal}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that the camera control 
setting can be modified manually.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b VideoControlFlag_FlipVertical}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that the camera control 
setting can be modified automatically.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b VideoControlFlag_ExternalTriggerEnable}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that the camera 
control setting can be modified automatically.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b VideoControlFlag_Trigger}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies that the camera control setting 
can be modified automatically.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEOFASTUPDATEGOB_S Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFirstGOB;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwNumberOfGOBs;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} VIDEOFASTUPDATEGOB_S;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b VIDEOFASTUPDATEGOB_S} structure is 
used with the KSPROPERTY_H245VIDENCCOMMAND_VIDEOFASTUPDATEGOB property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFirstGOB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first GOB to be 
updated. This value is only valid between 0 and 17.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwNumberOfGOBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of GOBs to be 
updated. This value is only valid between 1 and 18.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEOFASTUPDATEMB_S Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFirstGOB;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFirstMB;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwNumberOfMBs;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} VIDEOFASTUPDATEMB_S;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b VIDEOFASTUPDATEMB_S} structure is 
used with the KSPROPERTY_H245VIDENCCOMMAND_VIDEOFASTUPDATEMB property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFirstGOB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first GOB to be 
updated and is only relative to H.263. This value is only valid between 
0 and 255.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFirstMB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first MB to be 
updated and is only relative to H.261. This value is only valid 
between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwNumberOfMBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of MBs to be 
updated. This value is only valid between 1 and 8192.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 VIDEONOTDECODEDMBS_S Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwFirstMB;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwNumberOfMBs;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab DWORD dwTemporalReference;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} VIDEONOTDECODEDMBS_S;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b VIDEONOTDECODEDMBS_S} structure is 
used with the KSPROPERTY_H245VIDENCINDICATION_VIDEONOTDECODEDMBS property.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/H245VIDE.CPP\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwFirstMB}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of the first MB treated 
as not coded. This value is only valid between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwNumberOfMBs}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the number of MBs treated as not 
coded. This value is only valid between 1 and 8192.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b dwTemporalReference}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Specifies the temporal reference of 
the picture containing not decoded MBs. This value is only valid 
between 0 and 255.\par 
\pard\plain \s57\li-1770\ri30\sb280\sa250\sl-120\keepn\brdrb\brdrs\brdrw15\brdrcf2 \fs8\cf8\lang1033 \par 
\pard\plain \s254\li-1800\sb200\sa80\sl-440\keepn \b\f0\fs40\lang1033 WDMVIDEOBUFF Structure\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 typedef struct \{\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab OVERLAPPED Overlap;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab BOOL fBlocking;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab KS_HEADER_AND_INFO SHGetImage;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \tab LPVIDEOHDR pVideoHdr;\par \pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \} WDMVIDEOBUFF;\par 
\pard\plain \s28\sl-220\tx380\tx760\tx1140\tx1520\tx1900\tx2280\tx2660\tx3040\tx3420\tx3800 \f19\fs16\lang1033 \par 

\pard\plain \sa160\sl240 \fs21\lang1033 The {\b WDMVIDEOBUFF} structure is used to queue 
asynchronous read on a video streaming pin.\par 
\pard\plain \sa160\sl240 \fs21\lang1033 Defined in: P:/W98GOLD/WDM10/CAPTURE/AMOVIE/TAPIVCAP.SLM/DEVICE.H\par 
\pard\plain \s46\sb20\sl-220\keepn\pvpara\phpg\posy0\absw1560\dxfrtext240\dfrmtxtx240\dfrmtxty240 \b\f2\fs21\lang1033 Members\par \pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b Overlap}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Structure used for overlapping IOs.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b fBlocking}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Set to TRUE if read is going to block.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b SHGetImage}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Video streaming structure used 
on the video pin to get video data.\par 
\pard\plain \s50\sl-240\keepn \f0\fs21\lang1033 {\b pVideoHdr}\par 
\pard\plain \s54\li280\sa80\sl-240 \f0\fs21\lang1033 Pointer to the video header for this WDM 
video buffer.\par 
}
