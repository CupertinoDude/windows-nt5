!include $(NTMAKEENV)\makefile.plt
!IFNDEF BUILDMSG
BUILDMSG=
!ENDIF

########## Path definition so we find 16 bit tools ##########
# Also works around stupid bug in RC 3.1 that doesn't allow rcpp.err to be
# in a directory that is greater than 128 chars down the path, even if
# rc 3.1 is running as an OS/2 app.

PATH    = $(BASEDIR)\tools\tools16;$(PATH)

.SUFFIXES:
.SUFFIXES: .c .obj .lst .exe .exc .exs .com .sal .cod .sil .inc .skl .cla .cl1 .ctl .asm .idx .msg

MAKE    =nmake
asm     =masm386
awarn   =-W1
aflags  =-Mx -t $(awarn) $(extasw)
ainc    =-Imessages\$(ALT_PROJECT) -I. -I$(SDK_INC_PATH)

DEST=$(ALT_PROJECT)\$(O)

all: $(DEST)\mscdexnt.exe
        -binplace -o $(ALT_PROJECT_TARGET) $(DEST)\mscdexnt.exe

clean: cleanup all

cleanup:
    cd $(DEST)
    if exist *.obj      del *.obj
    if exist *.exe      del *.exe
    if exist *.map      del *.map
    if exist *.sym      del *.sym
    if exist messages.inc del messages.inc
    cd ..\..\..


$(DEST)\mscdexnt.obj: mscdexnt.asm mscdexnt.inc messages\$(ALT_PROJECT)\messages.inc
        $(asm) $(ainc) $(aflags) mscdexnt,$(DEST)\mscdexnt;
$(DEST)\mscdexnt.exe: $(DEST)\mscdexnt.obj
    link16 /CP:1 $(DEST)\mscdexnt.obj, $(DEST)\mscdexnt;
