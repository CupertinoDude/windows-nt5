;#########################################################################
;##	ＤＥＬＡＹ　ルーチン					 	##
;##	　指定された時間だけ待つルーチン（単位ｍｓ）			##
;##									##
;##		基準となるＣＰＵクロック				##
;##			Ｖ３０：１０ＭＨZ (PC-9801UV21)			##
;##			２８６：１２ＭＨZ (PC-9801RX2)			##
;##			３８６：２０ＭＨZ (PC-98RL N-MODE)		##
;##			ＮＰＣ：３３ＭＨZ (PC-H98 Model70)		##
;##									##
;##	　注：現行機の場合、基準クロック以外では、多少誤差がでます	##
;##									##
;##	入力：ＣＸに　待ち時間（ｍｓ）をいれる。			##
;##	出力：なし							##
;##	破壊するレジスタ：ＣＸ、フラグ					##
;##									##
;##---------------------------------------------------------------------##
;##　　変更履歴								##
;##	DATE   |  Ver |							##
;##  --------------------------------------------------------------	##
;##    90-04-24 | 1.00 |	Original				##
;##									##
;#########################################################################

;----------------------	ＬＯＯＰ回数 --------------------------------------
_V30_DELAY_	EQU	550			;Ｖ３０　調整はここでやって
_286_DELAY_	EQU	1070			;２８６　ください
_386_DELAY_	EQU	1600			;３８６　
_DELAY_COUNT_	EQU	307			;ＮＰＣ
;--------------------------------------------------------------------------
;########################################################################
;#				データ部				#
;########################################################################
;;;;; _BIOS_FLAG1_	DB	0   ;[0:458H]の内容		(del 90.10.6)
;;;;; _BIOS_FLAG2_	DB	0   ;[0:480H]の内容		(del 90.10.6)
;;;;; _CPU_		DW	0   ;現行機の、ダミーループ回数	(del 90.10.6)
;;;;; _TIME_		DW	0   ;目標時間			(del 90.10.6)
;;;;; _MUKASI_	DW	0	    ;一つ前の時間		(del 90.10.6)

;************************************************************************
;*	タイムスタンパ：待ち時間制御に使用するダミーループおよび	*
;*			Ｉ／Ｏリカバリータイムの保証に使用する。	*
;*	ここでは、高分解能ＡＲＴＩＣポートを用いた。			*
;*		分解能：	３．２６　　	μｓ			*
;*		最大値：	１０６．８　	ｍｓ			*
;*		アドレス：	００５Ｃ	Ｈ（ワード）		*
;************************************************************************


_ARTIC_LOW_	EQU	005CH			;タイムスタンパＩ／Ｏ port

MSR_DELAY:
	PUSH	AX				;使用するレジスタを退避
	PUSH	BX				;使用するレジスタを退避
	PUSH	DX				;使用するレジスタを退避
	push	es				;		(90.10.6)
	PUSH	DS				;データセグメントレジスタを退避
	push	ds				;		(90.10.6)
	pop	es				;		(90.10.6)

;************************************************************************
;*	ＣＰＵのきりわけ						*
;*		−−−−−−−ＢＩＯＳＦＬＡＧを参照する		*
;************************************************************************

	mov	ax, 40h			; 			
	mov	ds, ax			; 			

;----------------ＮＰＣかどうかを判断------------------------------------

	MOV	AL,BYTE PTR DS:[58H]	    ;40:58の内容をALに入れる 
	MOV	BYTE PTR ES:_BIOS_FLAG1_,AL		

;----------------現行機のどのＣＰＵかを判断------------------------------
	MOV	AL,BYTE PTR DS:[80H]	    ;40:80の内容をALに入れる 
	MOV	BYTE PTR ES:_BIOS_FLAG2_,AL		

	MOV	AL,BYTE PTR DS:[5BH]	    ;40:5Bの内容をALに入れる (93.03.09)
	MOV	BYTE PTR ES:_BIOS_FLAG3_,AL	;(93.03.09)

	POP	DS				;データセグメントレジスタを復帰
						
	AND	BYTE PTR _BIOS_FLAG1_,80H	;第７ビット以外を０でマスクする
	JNZ	_NPC_				
	AND	BYTE PTR ES:_BIOS_FLAG3_,04H	;(93.03.09)
	JNZ	_NPC_				;(93.03.09)
						
	AND	BYTE PTR _BIOS_FLAG2_,03H	;第0,1ビット以外を0でマスクする
	JZ	_V30_				;第0,1ビットが｢00｣ならばＶ３０
						
	CMP	BYTE PTR _BIOS_FLAG2_,01H	;第0,1ビットが｢01｣ならば２８６
	JE	_I286_				

;########################################################################
;#				現行機の時				#
;########################################################################
						
_I386_:						;ＣＰＵは３８６
	MOV	WORD PTR _CPU_,_386_DELAY_	;386の時はCPU=_386_DELAY_にする
	JMP	short	_EXIT_CPU_			
						
_V30_:						;ＣＰＵはＶ３０
	MOV	WORD PTR _CPU_,_V30_DELAY_	;V30の時はCPU=_V30_DELAY_にする
	JMP	short	_EXIT_CPU_			
						
_I286_:						;ＣＰＵは２８６
	MOV	WORD PTR _CPU_,_286_DELAY_	;286の時はCPU=_286_DELAY_にする
						
_EXIT_CPU_:					
;---------------------------------------------- ここからの処理で、１ｍｓと
;						なるようにする
						;
	PUSH	CX				;カウンタの内容を退避
	MOV	CX,_CPU_			;ＣＸ＝＿ＣＰＵ＿
;                  ~~~~この値が機種ごとに変わる
_LOOP2_:					;
	LOOP	_LOOP2_				;CX=CX-1 : IF ( CX == 0 ) GOTO _LOOP2_
	POP	CX				;カウンタの内容を復帰
						;
;----------------------------------------------		
						
	LOOP	_EXIT_CPU_			;CX=CX-1 : IF ( CX == 0 ) GOTO LOOP1

	pop	es
	POP	DX				;退避したレジスタを復帰
	POP	BX				;退避したレジスタを復帰
	POP	AX				;退避したレジスタを復帰
						
	RET					;RETURN	
						
						
;########################################################################
;#				ＮＰＣの時				#
;########################################################################
_NPC_:						
						
	CALL	_NPC_DELAY_			;１ｍｓ消費ルーチン
						
	LOOP	_NPC_				;CX=CX-1 
;						: IF ( CX == 0 ) GOTO LOOP1

	pop	es				;(INS.91.1.14)
	POP	DX				;退避したレジスタを復帰
	POP	BX				;退避したレジスタを復帰
	POP	AX				;退避したレジスタを復帰


	RET					
						
_NPC_DELAY_:					
	PUSH	CX				
						
	MOV	DX,_ARTIC_LOW_			;ＡＲＴＩＣポートの内容を
						;ＤＸにいれる
	IN	AX,DX				;ＡＲＴＩＣポートからＡＸに
						;データを入れる
	MOV	BX,AX				;初期時間を保存
	MOV	CX,_DELAY_COUNT_		;設定時間をＣＸに入れる
	ADD	CX,BX				;目標時間設定
	MOV	_TIME_,CX			;目標時間をＣＡＫＥに格納
						
	JNC	_POPO_				
						
;******************************************************************************
;*	0			   7FFF					FFFF  *
;*	1========▲-----------------1-----------×==========○============1   *
;*		 ↑	      		        ↑	　  ↑                *
;*　　　　　　目標時間：ＣＡＫＥ         初期時間：ＢＸ　　現在時間：ＡＸ 　  *
;*                                                                            *
;*                                                                            *
;*               の時                                                         *
;*                                                                            *
;******************************************************************************
	MOV	_MUKASI_,BX			;初期時間を_MUKASI_に入れておく

_YOMU1_:
	IN	AX,DX				;現在時間をＡＸに入れる
	CMP	_MUKASI_,AX			;一つ前の時間と現在の時間を比較
						;　現在時間が、目標時間よりも
						;　大きいため、
						;  現在時間と一つ前の時間を
						;　比較する。
						;　現在時間が小さくなった場合
						;　タイムスタンパが０に戻った
						;　ことになる

	JA	_POPO_				;現在時刻の方が小さくなった！
	
	MOV	_MUKASI_,AX			;一つ前の時間を_MUKASI_に
;						 入れておく
	JMP	_YOMU1_				;ループ
;******************************************************************************
;*	0			   7FFF					FFFF  *
;*	1--------×============○====1=============▲---------------------1   *
;*		 ↑	       ↑		   ↑                         *
;*　　初期時間：ＢＸ　　　現在時間：ＡＸ　　　　目標時間：ＣＡＫＥ            *
;*                                                                            *
;*                                                                            *
;*               の時                                                         *
;*                                                                            *
;******************************************************************************

_POPO_:
	IN	AX,DX				;現在時間をＡＸに入れる
	CMP	_TIME_,AX			;目標時間までなったか？
	JA	_POPO_				;Ｎｏ：まだ目標時間ではない

	POP	CX
	RET					;END NPC_RTN


