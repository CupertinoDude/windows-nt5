typedef DWORD   HIMC;
typedef DWORD   HIMCC;
typedef DWORD   HKL;
typedef HKL    *LPHKL;
typedef UINT    WPARAM;
typedef LONG    LPARAM;
typedef LONG    LRESULT;

typedef struct tagCANDIDATELIST {
    DWORD dwSize;
    DWORD dwStyle;
    DWORD dwCount;
    DWORD dwSelection;
    DWORD dwPageStart;
    DWORD dwPageSize;
    DWORD dwOffset[1];
} CANDIDATELIST;
typedef CANDIDATELIST *LPCANDIDATELIST;

typedef struct tagRECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
} RECTL;

typedef struct tagCOMPOSITIONFORM {
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT  rcArea;
} COMPOSITIONFORM;
typedef COMPOSITIONFORM *LPCOMPOSITIONFORM;

typedef struct tagCOMPOSITIONFORM_32 {
    DWORD  dwStyle;
// not a good way should use POINT RECT for 32 bit size
    POINTL ptCurrentPos;
    RECTL  rcArea;
} COMPOSITIONFORM_32;
typedef COMPOSITIONFORM_32 *LPCOMPOSITIONFORM_32;

typedef struct tagCANDIDATEFORM {
    DWORD dwIndex;
    DWORD dwStyle;
// not a good way should use POINT RECT for 32 bit size
    POINT ptCurrentPos;
    RECT  rcArea;
} CANDIDATEFORM;
typedef CANDIDATEFORM *LPCANDIDATEFORM;

typedef struct tagCANDIDATEFORM_32 {
    DWORD  dwIndex;
    DWORD  dwStyle;
// not a good way should use POINT RECT for 32 bit size
    POINTL ptCurrentPos;
    RECTL  rcArea;
} CANDIDATEFORM_32;
typedef CANDIDATEFORM_32 *LPCANDIDATEFORM_32;

typedef struct _tagLOGFONT {
    int  lfHeight;
    int  lfWidth;
    int  lfEscapement;
    int  lfOrientation;
    int  lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    char lfFaceName[32];
} LOGFONT;
typedef LOGFONT *LPLOGFONT;

typedef struct _tagLOGFONT_32 {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    char lfFaceName[32];
} LOGFONT_32;
typedef LOGFONT_32 *LPLOGFONT_32;

typedef struct _tagIMELINK {
// it maybe have problem on other plateform
    WORD  pNext;
    WORD  pPrev;
    DWORD lpDispatchDDIs;
    WORD  hDispatchDDIs;
    short iRefCount;
    DWORD dwPrivateDataSize;
    DWORD dwProperty;
    DWORD fdwConversionCaps;
    DWORD fdwSentenceCaps;
    DWORD fdwUICaps;
    DWORD fdwSCSCaps;
    DWORD fdwSelectCaps;
    BYTE  szUIClass[16];
// it maybe have problem on other plateform
    WORD  hWnd;
    WORD  fLoadFlag;
    HKL   hKL;
    DWORD dwWinVersion;
    DWORD dwProdVersion;
    BYTE  szDescription[50];
    BYTE  szFile[80];
    BYTE  szOptions[30];
} IMELINK;
typedef IMELINK *LPIMELINK;

typedef struct _tagIMEDDIS {
    DWORD hInst;
    DWORD lpfnConfigure;
    DWORD pNextDDIs;
    DWORD pPrevDDIs;
    DWORD lpfnConversionList;
    DWORD lpfnDestroy;
    DWORD lpfnEnumRegisterWord;
    DWORD lpfnEscape;
    DWORD lpfnGetRegisterWordStyle;
    DWORD lpfnNotify;
    DWORD lpfnProcessKey;
    DWORD lpfnRegisterWord;
    DWORD lpfnSelect;
    DWORD lpfnSetActiveContext;
    DWORD lpfnSetCompositionString;
    DWORD lpfnToAsciiEx;
    DWORD lpfnUnregisterWord;
// it maybe have problem on other plateform
    WORD  pIMELink;
} IMEDDIS;
typedef IMEDDIS *LPIMEDDIS;

typedef struct _tagTHREADLINK {
// it maybe have problem on other plateform
    DWORD pListNext;
    DWORD pListPrev;
    DWORD pNextDDIs;
    DWORD pPrevDDIs;
    DWORD pNext;
    DWORD pPrev;
    DWORD pActiveDDIs;
    DWORD dwThreadID;
    HKL   hCurrKL;
    HKL   hPrevKL;
    HIMC  hDefIMC;
    HIMC  hSavIMC;
    HIMC  hFocusIMC;
// it maybe have problem on other plateform
    WORD  hFocusWnd;
    WORD  hDefIMEWnd;
    WORD  pIMELink;
    WORD  fApp;
    DWORD dwCompatFlags;
    DWORD fdwFlags;
} THREADLINK;
typedef THREADLINK *LPTHREADLINK;

typedef struct tagSTYLEBUFA {
    DWORD dwStyle;
    char  szDescription[32];
} STYLEBUFA;
typedef STYLEBUFA *LPSTYLEBUFA;

typedef struct tagGUIDELINE {
    DWORD dwSize;
    DWORD dwLevel;
    DWORD dwIndex;
    DWORD dwStrLen;
    DWORD dwStrOffset;
    DWORD dwPrivateSize;
    DWORD dwPrivateOffset;
} GUIDELINE;
typedef GUIDELINE *LPGUIDELINE;

