/* gditypes.thk -- GDI types.
 *
 * Type declarations used by gdithk.thk and gdifthk.thk.
 *
 */


typedef LPSTR   LPBITMAPINFO;             /* unchanged */
typedef LPSTR   LPBITMAPINFOHEADER;       /* unchanged */
typedef LPSTR   LPRGBQUAD;                /* unchanged */
typedef LPSTR   LPRECTL;                  /* unchanged */
typedef LPSTR   LPNTLOGBRUSH;             /* unchanged */
typedef LPSTR   LPXFORM;                  /* unchanged */
typedef LPSTR   LPENHMETAHEADER;          /* unchanged */
typedef LPSTR   LPLOGCOLORSPACE;          /* unchanged */
typedef LPSTR   LPFILENAME;               /* unchanged */


typedef struct tagLOGFONT
  {
    int       lfHeight;
    int       lfWidth;
    int       lfEscapement;
    int       lfOrientation;
    int       lfWeight;
    BYTE      lfItalic;
    BYTE      lfUnderline;
    BYTE      lfStrikeOut;
    BYTE      lfCharSet;
    BYTE      lfOutPrecision;
    BYTE      lfClipPrecision;
    BYTE      lfQuality;
    BYTE      lfPitchAndFamily;
    BYTE      lfFaceName[32];
  } LOGFONT;
typedef LOGFONT *LPLOGFONT;

/**********************************************/
typedef struct tagLOGPEN
  {
    UINT        lopnStyle;
    POINT       lopnWidth;
    DWORD       lopnColor;
  } LOGPEN;
typedef LOGPEN  *LPLOGPEN;


typedef struct tagLOGBRUSH {
    UINT    lpStyle;
    DWORD   lbColor;
    UINT    lbHatch;
} LOGBRUSH;
typedef LOGBRUSH   *PLOGBRUSH;


typedef struct tagPALETTEENTRY {
    BYTE    peRed;
    BYTE    peGreen;
    BYTE    peBlue;
    BYTE    peFlags;
} PALETTEENTRY;
typedef PALETTEENTRY *LPPALETTEENTRY;


typedef struct tagLOGPALETTE {
    WORD    palVersion;
    WORD    palNumEntries;
    PALETTEENTRY    palPalEntry[1];
} LOGPALETTE;
typedef LOGPALETTE *LPLOGPALETTE;

/**********************************************/
typedef struct tagTEXTMETRIC16 {
    int         tmHeight;
    int         tmAscent;
    int         tmDescent;
    int         tmInternalLeading;
    int         tmExternalLeading;
    int         tmAveCharWidth;
    int         tmMaxCharWidth;
    int         tmWeight;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmFirstChar;
    BYTE        tmLastChar;
    BYTE        tmDefaultChar;
    BYTE        tmBreakChar;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
    int         tmOverhang;
    int         tmDigitizedAspectX;
    int         tmDigitizedAspectY;
} TEXTMETRIC16;
typedef TEXTMETRIC16 *LPTEXTMETRIC16;


typedef struct tagTEXTMETRIC32 {
    LONG        tmHeight;
    LONG        tmAscent;
    LONG        tmDescent;
    LONG        tmInternalLeading;
    LONG        tmExternalLeading;
    LONG        tmAveCharWidth;
    LONG        tmMaxCharWidth;
    LONG        tmWeight;
    LONG        tmOverhang;
    LONG        tmDigitizedAspectX;
    LONG        tmDigitizedAspectY;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmFirstChar;
    BYTE        tmLastChar;
    BYTE        tmDefaultChar;
    BYTE        tmBreakChar;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
} TEXTMETRIC32;
typedef TEXTMETRIC32 *LPTEXTMETRIC32;


typedef struct tagSIZE {
    LONG        cx;
    LONG        cy;
} SIZE;
typedef SIZE *LPSIZE;


typedef struct tagMETAFILEPICT {
    INT         mm;
    INT         xExt;
    INT         yExt;
    HMF         hMF;
} METAFILEPICT;
typedef METAFILEPICT *LPMETAFILEPICT;



typedef struct tagDOCINFO16 {
    int cbSize;
    LPSTR lpszDocName;
    LPSTR lpszOutput;
    LPSTR lpszDatatype;
    DWORD fwType;
} DOCINFO16;
typedef DOCINFO16 *LPDOCINFO16;

typedef struct tagDOCINFO32 {
    int cbSize;
    LPSTR lpszDocName;
    LPSTR lpszOutput;
    LPSTR lpszDatatype;
    DWORD fwType;
} DOCINFO32;
typedef DOCINFO32 *LPDOCINFO32;


typedef struct tagGLYPHMETRICS16 {
    UINT        gmBlackBoxX;
    UINT        gmBlackBoxY;
    POINT       gmptGlyphOrigin;
    int         gmCellIncX;
    int         gmCellIncY;
} GLYPHMETRICS16;
typedef GLYPHMETRICS16 *LPGLYPHMETRICS16;

typedef struct tagGLYPHMETRICS32 {
    UINT        gmBlackBoxX;
    UINT        gmBlackBoxY;
    POINT       gmptGlyphOrigin;
    SHORT       gmCellIncX;
    SHORT       gmCellIncY;
} GLYPHMETRICS32;
typedef GLYPHMETRICS32 *LPGLYPHMETRICS32;


typedef struct _kp {
    WORD wFirst;
    WORD wSecond;
    int iKernAmount;
} KERNINGPAIR;
typedef KERNINGPAIR *LPKERNINGPAIR;


typedef struct _ABC {
     INT        abcA;
     UINT       abcB;
     INT        abcC;
} ABC;
typedef ABC *LPABC;

typedef struct _FONTSIGNATURE
{
    DWORD fsUsb[4];
    DWORD fsCsb[2];
} FONTSIGNATURE, *LPFONTSIGNATURE;

typedef struct _GCP_RESULTS
   {
    DWORD lStructSize structsize;
    LPSTR lpOutString;
    LPSTR lpOrder;
    LPSTR lpDx;
    LPSTR lpCaretPos; 
    LPSTR lpClass;
    LPSTR lpGlyphs;
    INT   nGlyphs;    
    INT   nMaxFit;
   } GCP_RESULTS, *LPGCP_RESULTS;
