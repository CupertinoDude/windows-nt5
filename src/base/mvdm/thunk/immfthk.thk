__foldwin32sstuff __foldwin32sstuff;
foldstyleinitialization = true;



enablemapdirect3216 = true;
flatthunks          = true;

#include "types.thk"
#include "ImmTypes.thk"

BOOL ImmGetDefaultIMEWnd(HWND)
{
}

HKL ImmInstallIMEA(LPSTR, LPSTR)
{
}

DWORD ImmGetProperty(HKL, DWORD)
{
}

BOOL ImmIsIME(HKL)
{
}

BOOL ImmGetHotKey(DWORD, LPUINT lpModifiers, LPUINT lpVKey, LPHKL lpTargetIME)
{
    lpModifiers = output;
    lpVKey = output;
    lpTargetIME = output;
}

BOOL ImmSetHotKey(DWORD, UINT, UINT, HKL)
{
}

BOOL ImmSimulateHotKey(HWND, DWORD)
{
}

HIMC ImmCreateContext()
{
}

BOOL ImmDestroyContext(HIMC)
{
}

HIMC ImmGetContext(HWND)
{
}

HIMC ImmReleaseContext(HWND, HIMC)
{
}

HIMC ImmAssociateContext(HWND, HIMC)
{
}

BOOL ImmAssociateContextEx(HWND, HIMC, DWORD)
{
}

BOOL ImmDisableIME(DWORD)
{
}

BOOL ImmSetConversionStatus(HIMC, DWORD, DWORD)
{
}

BOOL ImmSetOpenStatus(HIMC, BOOL)
{
}

BOOL ImmSetCompositionFontA(HIMC, LPLOGFONT_32)
{
    target = ImmSetCompositionFont32A;
}

BOOL ImmSetCompositionFontW(HIMC, LPLOGFONT_32)
{
    target = ImmSetCompositionFont32W;
}

BOOL ImmConfigureIMEA(HKL, HWND, DWORD, LPVOID)
{
    body=special;
}

BOOL ImmConfigureIMEW(HKL, HWND, DWORD, LPVOID)
{
    body=special;
}

DWORD ImmEscapeA(HKL, HIMC, UINT, LPVOID lpData)
{
    lpData = output;
}

DWORD ImmEscapeW(HKL, HIMC, UINT, LPVOID lpData)
{
    lpData = output;
}

DWORD ImmGetConversionListWorker(HKL, HIMC, LPSTR, LPCANDIDATELIST lpDest, DWORD, UINT, BOOL fAnsi)
{
    lpDest = output;
}

BOOL ImmNotifyIME(HIMC, DWORD, DWORD, DWORD)
{
}

BOOL ImmSetStatusWindowPos(HIMC, LPPOINTL lpptPos)
{
    target = ImmSetStatusWindowPos32;
}

BOOL ImmSetCompositionWindow(HIMC, LPCOMPOSITIONFORM_32 lpCompForm)
{
    target = ImmSetCompositionWindow32;
}

BOOL ImmSetCandidateWindow(HIMC, LPCANDIDATEFORM_32 lpCandForm)
{
    target = ImmSetCandidateWindow32;
}

BOOL ImmIsUIMessageA(HWND, UINT, WPARAM, DWORD)
{
}

BOOL ImmGenerateMessage(HIMC)
{
}

BOOL ImmRegisterWord32Worker(HKL, LPSTR, DWORD, LPSTR, BOOL)
{
}

BOOL ImmUnregisterWord32Worker(HKL, LPSTR, DWORD, LPSTR, BOOL)
{
}

UINT ImmGetRegisterWordStyle32Worker(HKL, UINT, LPSTYLEBUFA lpStyleBuf, BOOL)
{
    lpStyleBuf = output;
}

UINT ImmEnumRegisterWord32Worker(HKL, DWORD, LPSTR, DWORD, LPSTR, LPVOID lpData, BOOL)
{
    lpData = output;
}

DWORD ImmFindThreadLink(DWORD)
{
}

DWORD ImmGetIMELink(DWORD)
{
}

DWORD ImmGetAppIMECompatFlags(DWORD)
{
}
