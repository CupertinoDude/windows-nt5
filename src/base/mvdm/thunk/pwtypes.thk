typedef HANDLE          HREC;
typedef HANDLE          HPCM;
typedef HANDLE          HPENDATA;
typedef HANDLE          HGDIOBJ;
typedef HANDLE16        HREF;
typedef HANDLE          HINKSET;
typedef DWORD           HRC;
typedef DWORD           HRCRESULT;
typedef DWORD           HRECHOOK;
typedef DWORD           HWL;
typedef DWORD           SYV;
typedef DWORD           COLORREF;
typedef DWORD           ALC;
typedef DWORD           LPARAM;
typedef HANDLE          HFILE;
typedef UINT            HKP;
typedef INT             REC;
typedef DWORD           HTRG;
typedef UINT            WPARAM;

typedef HPENDATA        *LPHPENDATA;
typedef HINKSET                 *LPHINKSET;
typedef HRCRESULT       *LPHRCRESULT;
typedef HWL             *LPHWL;
typedef SYV             *LPSYV;
typedef ALC             *LPALC;
typedef HRGN            *LPHRGN;
typedef LPSTR           LPCSTR;
typedef LPVOID          LPOEM;

typedef struct tagRECTL
   {
   LONG left;
   LONG top;
   LONG right;
   LONG bottom;
   }
   RECTL;
typedef RECTL *LPRECTL;

typedef struct tagPENTIP
   {
   DWORD        cbSize structsize;
   BYTE         btype;      
   BYTE         bwidth; 
   BYTE         bheight;
   BYTE         bOpacity;
   COLORREF     rgb;    
   DWORD        dwFlags;
   DWORD        dwReserved;
   }
   PENTIP;
typedef PENTIP *LPPENTIP;

typedef struct tagOEMPENINFO     
   {
   UINT         wPdt;                                            
   UINT         wValueMax;                               
   UINT         wDistinct;                               
   }
   OEMPENINFO;
typedef OEMPENINFO *LPOEMPENINFO;

typedef struct tagPENINFO      
   {
   UINT         cxRawWidth;            
   UINT         cyRawHeight;           
   UINT         wDistinctWidth;        
   UINT         wDistinctHeight;       
   INT          nSamplingRate;         
   INT          nSamplingDist;         
   DWORD        lPdc;
   INT          cPens;
   INT          cbOemData;
   OEMPENINFO   rgoempeninfo1;
   OEMPENINFO   rgoempeninfo2;
   OEMPENINFO   rgoempeninfo3;
   OEMPENINFO   rgoempeninfo4;
   OEMPENINFO   rgoempeninfo5;
   OEMPENINFO   rgoempeninfo6;
   UINT         rgwReserved1;        
   UINT         rgwReserved2;        
   UINT         rgwReserved3;        
   UINT         rgwReserved4;        
   UINT         rgwReserved5;        
   UINT         rgwReserved6;        
   UINT         rgwReserved7;        
   UINT         fuOEM;                 
   }
   PENINFO;
typedef PENINFO *LPPENINFO;

typedef struct tagPENDATAHEADER
   {
   UINT         wVersion;              
   UINT         cbSizeUsed;            
   UINT         cStrokes;              
   UINT         cPnt;                  
   UINT         cPntStrokeMax;         
   RECT         rectBound;             
   UINT         wPndts;                
   INT          nInkWidth;             
   DWORD        rgbInk;        
   }
   PENDATAHEADER;
typedef PENDATAHEADER *LPPENDATAHEADER;
typedef PENDATAHEADER *LPPENDATA;

typedef struct tagSTROKEINFO     
   {
   UINT         cPnt;                            
   UINT         cbPnts;                                  
   UINT         wPdk;                            
   DWORD        dwTick;                                  
   }
   STROKEINFO;
typedef STROKEINFO *LPSTROKEINFO;

typedef struct tagPCMINFO
   {
   DWORD        cbSize structsize;
   DWORD        dwPcm;        
   RECT         rectBound;   
   RECT         rectExclude; 
   HRGN         hrgnBound;   
   HRGN         hrgnExclude; 
   DWORD        dwTimeout;   
   }
   PCMINFO;
typedef PCMINFO *LPPCMINFO;

typedef struct tagINKINGINFO    
   {
   DWORD        cbSize structsize;
   UINT         wFlags;                 
   PENTIP       tip;                            
   RECT         rectClip;      
   RECT         rectInkStop;   
   HRGN         hrgnClip;      
   HRGN         hrgnInkStop;   
   } 
   INKINGINFO;
typedef INKINGINFO *LPINKINGINFO;

typedef struct tagBOXRESULTS
   {
   UINT         indxBox;
   HINKSET      hinksetBox;
   SYV          rgSyv[1];
   }
   BOXRESULTS;
typedef BOXRESULTS *LPBOXRESULTS;

typedef struct tagGUIDE                  
   {
   INT          xOrigin;                                 
   INT          yOrigin;                                         
   INT          cxBox;                                           
   INT          cyBox;                                           
   INT          cxBase;                                          
   INT          cyBase;                                          
   INT          cHorzBox;                                        
   INT          cVertBox;                                        
   INT          cyMid;                                           
   }
   GUIDE;
typedef GUIDE *LPGUIDE;

typedef struct tagANIMATEINFO   
   {
   DWORD        cbSize structsize;
   UINT         uSpeedPct;                      
   UINT         uPeriodCB;                      
   UINT         fuFlags;                                
   LPARAM       lParam;                         
   DWORD        dwReserved;                     
   }
   ANIMATEINFO;
typedef ANIMATEINFO *LPANIMATEINFO;

typedef struct tagABSTIME
   {
   DWORD        sec;
   UINT         ms;
   }
   ABSTIME;
typedef ABSTIME *LPABSTIME;

typedef struct tagINTERVAL
   {
   ABSTIME      atBegin;  
   ABSTIME      atEnd;
   }
   INTERVAL;
typedef INTERVAL *LPINTERVAL;

typedef struct tagBOXLAYOUT      
   {
   INT          cyCusp;                                  
   INT          cyEndCusp;                                       
   UINT         style;                                   
   DWORD        dwReserved1;                     
   DWORD        dwReserved2;                     
   DWORD        dwReserved3;                     
   }
   BOXLAYOUT;
typedef BOXLAYOUT *LPBOXLAYOUT;

typedef struct tagBOXEDITINFO    
   {
   INT          cxBox;                                           
   INT          cyBox;                                           
   INT          cxBase;                                          
   INT          cyBase;                                          
   INT          cyMid;                                           
   BOXLAYOUT    boxlayout;                       
   UINT         wFlags;                                  
   BYTE         szFaceName[32];
   UINT         wFontHeight;                             
   UINT         rgwReserved1;        
   UINT         rgwReserved2;        
   UINT         rgwReserved3;        
   UINT         rgwReserved4;        
   UINT         rgwReserved5;        
   UINT         rgwReserved6;        
   UINT         rgwReserved7;        
   UINT         rgwReserved8;        
   }
   BOXEDITINFO;
typedef BOXEDITINFO *LPBOXEDITINFO;

typedef struct tagTARGET
   {
   DWORD        dwFlags;
   DWORD        idTarget;
   HTRG         htrgTarget;
   RECTL        rectBound;
   DWORD        dwExtraInfo;
   RECTL        rectBoundInk;
   RECTL        rectBoundLastInk;
   }
   TARGET;
typedef TARGET *LPTARGET;

typedef struct tagTARGINFO
   {
   DWORD        cbSize structsize;
   DWORD        dwFlags;
   HTRG         htrgOwner;
   WORD         cTargets;
   WORD         iTargetLast;
   TARGET       rgTarget[1];
   }
   TARGINFO;
typedef TARGINFO *LPTARGINFO;

typedef struct tagINPPARAMS
   {
   DWORD        cbSize structsize;
   DWORD        dwFlags;
   HPENDATA     hpndt;
   TARGET       tgt; // thunk compiler does not like the name "target" for this field
   }
   INPPARAMS;
typedef INPPARAMS *LPINPPARAMS;

typedef struct tagIMECOLORS
   {
   INT          cColors;
   INT          *lpnElem;
   COLORREF     *lprgbIme;
   }
   IMECOLORS;
typedef IMECOLORS *LPIMECOLORS;

typedef struct tagCTLINITBEDIT
   {
   DWORD        cbSize structsize;
   HWND         hwnd;
   INT          id;
   WORD         wSizeCategory;
   WORD         wFlags;
   DWORD        dwReserved;
   }
   CTLINITBEDIT;
typedef CTLINITBEDIT *LPCTLINITBEDIT;

typedef struct tagPENPACKET
   {
   UINT         wTabletX;
   UINT         wTabletY;
   UINT         wPDK;
   UINT         rgwOemData1;
   UINT         rgwOemData2;
   UINT         rgwOemData3;
   UINT         rgwOemData4;
   UINT         rgwOemData5;
   UINT         rgwOemData6;
   }
   PENPACKET;
typedef PENPACKET *LPPENPACKET;

typedef struct tagOEM_PENPACKET
   {
   UINT         wTabletX;
   UINT         wTabletY;
   UINT         wPDK;
   UINT         rgwOemData1;
   UINT         rgwOemData2;
   UINT         rgwOemData3;
   UINT         rgwOemData4;
   UINT         rgwOemData5;
   UINT         rgwOemData6;
   DWORD        dwTime;
   }
   OEM_PENPACKET;
typedef OEM_PENPACKET *LPOEM_PENPACKET;

typedef struct tagCALBSTRUCT
   {
   INT          wOffsetX;
   INT          wOffsetY;
   INT          wDistinctWidth;
   INT          wDistinctHeight;
   }
   CALBSTRUCT;
typedef CALBSTRUCT *LPCALBSTRUCT;

typedef struct tagCTLINITIEDIT
   {
   DWORD        cbSize structsize;
   HWND         hwnd;
   INT          id;
   WORD         ieb;
   WORD         iedo;
   WORD         iei;
   WORD         ien;
   WORD         ierec;
   WORD         ies;
   WORD         iesec;
   WORD         pdts;
   HPENDATA     hpndt;
   HGDIOBJ      hgdiobj;
   HPEN         hpenGrid;
   POINT        ptOrgGrid;
   WORD         wVGrid;
   WORD         wHGrid;
   DWORD        dwApp;
   DWORD        dwReserved;
   }
   CTLINITIEDIT;
typedef CTLINITIEDIT *LPCTLINITIEDIT;

typedef struct tagPDEVENT
   {
   DWORD        cbSize structsize;
   HWND         hwnd;
   UINT         wm;
   WPARAM       wParam;
   LPARAM       lParam;
   POINT        pt;
   BOOL         fPen;
   LONG         lExInfo;
   DWORD        dwReserved;
   }
   PDEVENT;
typedef PDEVENT *LPPDEVENT;

typedef struct tagSTRKFMT
   {
   DWORD        cbSize structsize;
   UINT         iesf;
   UINT         iStrk;
   PENTIP       tip;
   DWORD        dwUser;
   DWORD        dwReserved;
   }
   STRKFMT;
typedef STRKFMT *LPSTRKFMT;

/*
typedef BOOL (CALLBACK *HRCRESULTHOOKPROC) (HREC, HRC, UINT, UINT, UINT, LPVOID);
typedef BOOL (CALLBACK *LPFNRAWHOOK)(LPPENPACKET);
typedef BOOL (CALLBACK *ANIMATEPROC)(HPENDATA, UINT, UINT, UINT *, LPARAM);
*/


