__foldwin32sstuff __foldwin32sstuff;
foldstyleinitialization = true;


/*
 * USER message api thunks for Win32s
 */

enablemapdirect3216 = true;
flatthunks = false;         /* BUGBUG [KevinR] 01-Sep-1993 */

#include "types.thk"

typedef DWORD HHOOK;



 /*
 * This takes care of
 *      PostThreadMessageA (0)
 *      PostMessageA (1)
 */
LONG PostMessageThing32(UINT, HWND, UINT, DWORD, DWORD) =
LONG PostMessageThingA(UINT, HWND, UINT, DWORD, DWORD)
{body = special;}


/*
 * This takes care of
 *      GetMessageA
 *      PeekMessageA
 */
BOOL GetMessageThing32(BOOL fPeekM, DWORD lpmsg, HWND, UINT, UINT, DWORD) =
BOOL GetMessageThingA(BOOL fPeekM, DWORD lpmsg, HWND, UINT, UINT, DWORD)
{body= special;}


/*
 * This takes care of
 *      TranslateAccelerator
 *      TranslateMDISysAccel
 *      IsDialogMessage
 *      TranslateMessageA
 */
BOOL TranslateMessageThing(UINT, HWND, HANDLE, DWORD) =
BOOL TranslateMessageThing(UINT, HWND, HANDLE, DWORD)
{body = special;}



BOOL DispatchMessage32(DWORD pmsg, BOOL fMsg32) =
BOOL DispatchMessageA(DWORD pmsg, BOOL fMsg32 deleted)
{body = special;}



/*
 * This takes care of 
 *      SendMessageA
 *      DefWindowProcA
 *      DefMDIChildProcA
 *      DefFrameProcA
 *      DefDlgProcA
 */
LONG SendMessageThingA(UINT, HWND, HWND, UINT, DWORD, DWORD) =
LONG SendMessageThingA(UINT, HWND, HWND, UINT, DWORD, DWORD)
{body = special;}


LONG SendMessageTimeout32(HWND, UINT, WORD, LONG, WORD, UINT, WORD, LPDWORD) =
LONG SendMessageTimeoutA(HWND, UINT, DWORD, LONG, DWORD deleted, UINT, DWORD, LPDWORD)
{body = special;}


/*
 * SendNotifyMessage _is_ SendMessageCallback with NULL for lpCallback
 */
BOOL SendMessageCallback32(HWND, UINT, WORD, LONG, WORD wParamHi, FARPROC lpCallback, DWORD dwData) =
BOOL SendMessageCallbackA(HWND, UINT, DWORD, LONG, DWORD wParamHi deleted, FARPROC lpCallback, DWORD dwData) 
{body = special;}



LONG CallWindowProc32(DWORD pfnPrev, HWND hwnd, WORD message, WORD wParamLo, DWORD lParam, WORD wParamHi) =
LONG SlowCallWindowProcA(DWORD pfnPrev, HWND hwnd, DWORD message, DWORD wParam, DWORD lParam, DWORD wParamHi deleted)
{body = special;}

LONG CallNextHookEx(HHOOK hhk, INT nCode, WORD wParam, LONG lParam) =
LONG CallNextHookEx(HHOOK hhk, INT nCode, DWORD wParam, LONG lParam)
{body = special;}


LONG CallMsgFilter32(DWORD pmsg, WORD nCode, BOOL fMsg32) =
LONG CallMsgFilter(DWORD pmsg, DWORD nCode, BOOL fMsg32 deleted)
{body = special;}


LONG  BroadcastSystemMessage(DWORD, LPDWORD, UINT, WORD, LONG) = 
LONG  BroadcastSystemMessage(DWORD, LPDWORD, UINT, UINT, LONG)
{body = special;}       /* Need to map lParam if the BSF_LPARAMPOINTER is set */
