!if "$(PROCESSOR_ARCHITECTURE)"=="x86"
!if "$(LLP64)"=="1"
CPUDIR = ia64
!else
CPUDIR = intel
!endif
!elseif "$(PROCESSOR_ARCHITECTURE)"=="ALPHA"
!if "$(LLP64)"=="1"
CPUDIR = alpha64
!else
CPUDIR = alpha
!endif
!elseif "$(PROCESSOR_ARCHITECTURE)"=="MIPS"
CPUDIR = mips
!elseif "$(PROCESSOR_ARCHITECTURE)"=="PPC"
CPUDIR = ppc
!else
!error objects.mkf: unknown host CPU
!endif

!if "$(BLD_SYSCRT)" != "1"
DEFCPP_NAME=msvcprt
!else
! if "$(LLP64)" != "1"
DEFCPP_NAME=sysprt
! else
DEFCPP_NAME=msvcprt
! endif
!endif

D=$(CRT_BUILDDIR)\crt\src
E=$D\$(CPUDIR)
S=$(CRT_BUILDDIR)\crt\prebuild
T=$S\build\$(CPUDIR)

FILES_CPU_ALL =

FILES_CPU_DLL =

FILES_LIBCST	= $(FILES_CPU:*=*st_lib)

FILES_LIBCMT	= $(FILES_CPU:*=*mt_lib)

FILES_DLL	= $(FILES_CPU:*=*dll_lib) $(FILES_CPU_DLL:*=*dll_lib)

FILES_ALL = 

FILES_DLL_ALL =

FILES_DLL_RELEASE = \
	$(FILES_DLL_ALL) \
	$D\$(DEFCPP_NAME).def


FILES_DLL_DEBUG = \
	$(FILES_DLL_ALL)		\
	$D\$(DEFCPP_NAME)d.def


DIRS_ALL = $E


DIRS_LIBCST	= $E\*st_lib

DIRS_LIBCMT	= $E\*mt_lib

DIRS_DLL	= $E\*dll_lib

DIRS = $(DIRS_LIBCST) $(DIRS_LIBCMT) $(DIRS_DLL)



.SUFFIXES:
.SUFFIXES: .lib .obj

{$T\st_obj}.obj{$E\st_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E\st_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\st_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\xst_obj}.obj{$E\xst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\xst_obj}.lib{$E\xst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.obj{$E\zst_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zst_obj}.lib{$E\zst_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.obj{$E\mt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\mt_obj}.lib{$E\mt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\xmt_obj}.obj{$E\xmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\xmt_obj}.lib{$E\xmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.obj{$E\zmt_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zmt_obj}.lib{$E\zmt_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.obj{$E\dll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E\dll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\dll_obj}.lib{$E}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.obj{$E\zdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\zdll_obj}.lib{$E\zdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@

{$T\xdll_obj}.obj{$E\xdll_lib}.obj:
	@echo Copying $< to $@
	@copy $< $@

{$T\xdll_obj}.lib{$E\xdll_lib}.lib:
	@echo Copying $< to $@
	@copy $< $@


all: release debug

release: st mt dll

debug: xst xmt xdll

st: $(DIRS_ALL) $(DIRS_LIBCST:*=) $(FILES_ALL) $(FILES_LIBCST:*=)

mt: $(DIRS_ALL) $(DIRS_LIBCMT:*=) $(FILES_ALL) $(FILES_LIBCMT:*=)

dll: $(DIRS_ALL) $(DIRS_DLL:*=) $(FILES_ALL) $(FILES_DLL:*=) $(FILES_DLL_RELEASE)

xst: $(DIRS_ALL) $(DIRS_LIBCST:*=x) $(FILES_ALL) $(FILES_LIBCST:*=x)

xmt: $(DIRS_ALL) $(DIRS_LIBCMT:*=x) $(FILES_ALL) $(FILES_LIBCMT:*=x)

xdll: $(DIRS_ALL) $(DIRS_DLL:*=x) $(FILES_ALL) $(FILES_DLL:*=x) $(FILES_DLL_DEBUG)

$(DIRS_ALL) $(DIRS:*=) $(DIRS:*=x) $(DIRS:*=z) $(DIRS:*=b) $(DIRS:*=xb):
	@if not exist $@\NUL mkdire $@

$D\$(DEFCPP_NAME)d.def: $S\libw32\lib\$(DEFCPP_NAME)d.def
	@echo Copying $** to $@
	@copy $** $@

$D\$(DEFCPP_NAME).def: $S\libw32\lib\$(DEFCPP_NAME).def
	@echo Copying $** to $@
	@copy $** $@
