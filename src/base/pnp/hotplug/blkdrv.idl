// blockdriver.idl : IDL source for blockdriver.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (blockdriver.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(13F176D6-9B1D-477D-BD33-6FE75E960578),
		dual,
		helpstring("IBlockedDrivers Interface"),
		pointer_default(unique)
	]
	interface IBlockedDrivers : IDispatch
	{
		[id(1), helpstring("method BlockedDrivers")] HRESULT BlockedDrivers([out,retval] LPDISPATCH * pCollection);
	};
	[
		object,
		uuid(5FD0C0B2-0C30-43B2-A95B-2D7894ACD1C1),
		dual,
		helpstring("IDrivers Interface"),
		pointer_default(unique)
	]
	interface IDrivers : IDispatch
	{
        [propget, id(DISPID_NEWENUM)] HRESULT _NewEnum([out, retval] IUnknown** ppUnk);
		[id(DISPID_VALUE), helpstring("method Item")] HRESULT Item([in] long Index,[out, retval] LPDISPATCH * pVal);
		[propget, id(1), helpstring("property Count")] HRESULT Count([out, retval] long *pVal);
	};
	[
		object,
		uuid(08B6A002-8A41-4282-AE6C-7BE38158640C),
		dual,
		helpstring("IDriver Interface"),
		pointer_default(unique)
	]
	interface IDriver : IDispatch
	{
		[propget, id(1), helpstring("property Name")] HRESULT Name([out, retval] BSTR *pVal);
		[propget, id(2), helpstring("property Description")] HRESULT Description([out, retval] BSTR *pVal);
		[propget, id(3), helpstring("property Manufacturer")] HRESULT Manufacturer([out, retval] BSTR *pVal);
		[propget, id(4), helpstring("property HelpFile")] HRESULT HelpFile([out, retval] BSTR *pVal);
	};
	[
		object,
		uuid(16D32DAD-FBDA-44A4-A2C2-B196B4D9FB59),
		helpstring("IDriversEnum Interface"),
		pointer_default(unique)
	]
	interface IDriversEnum : IEnumVARIANT
	{
	};

[
	uuid(B842074C-8E12-4178-A6D8-7C0D7C87C43E),
	version(1.0),
	helpstring("blockdriver 1.0 Type Library")
]
library BLOCKDRIVERLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(783C030F-E948-487D-B35D-94FCF0F0C172),
		helpstring("BlockedDrivers Class")
	]
	coclass BlockedDrivers
	{
		[default] interface IBlockedDrivers;
	};
	[
		uuid(D1AE835C-9D92-492F-80B4-43356F75038C),
		helpstring("Drivers Class")
	]
	coclass Drivers
	{
		[default] interface IDrivers;
	};
	[
		uuid(B62314FC-1215-4AEC-BCCD-AE51609BA291),
		helpstring("Driver Class")
	]
	coclass Driver
	{
		[default] interface IDriver;
	};
};
