This document describes the functionality tested in each of the various 
OC Manager test scenario groups.

------------------------------------------------------------------------------

'octest 1' tests the following:

-- Skip Pages

The welcome page contains a checkbox that will enable the user to skip page 2. 
If the checkbox is left unchecked, page 2 will appear as normal. If the 
checkbox is checked, page 2 should be skipped when the user clicks the 'Next' 
and 'Back' buttons.


-- Change Mode

The modes page will allow the user to change the installation mode between 
the four mode choices: Minimal, Typical, Laptop, and Custom. The user may 
change the mode and click the 'Next' or 'Back' buttons. The new mode should 
be reflected on the new wizard page.


-- If all children are disabled, parent should be disabled

On the components selection page, unselect all children of a component and 
hit ok. The component should now be unselected.


-- If some but not all children are enabled, parent should be enabled but greyed

On the components selection page, select some children of a component and 
unselect others. Verify that the component is checked but the checkbox is 
greyed out. Change the selection configuration of the component's children. 
Leave only one child selected, etc., and verify that the component's checkbox 
is checked and greyed accordingly.


-- Force OC Manager to prompt for files

Run the test so that the copy files are not in the current directory or 
any system path directory. When OC Manager prepares to copy the files, 
it should prompt for the location of the files. Attempt to answer with 
invalid locations. Finally, direct OC Manager to the correct location. 
The files should be copied. This may also be attempted with the files 
scattered across multiple directories.


-- Check component dependencies

Some subcomponents depend upon other subcomponents. If one subcomponent is 
not selected, another subcomponent may not be selected without also 
selecting the first. If the first subcomponent is deselected, both 
subcomponents must be deselected. The following procedure will test this:

- Select master Unicode component so that it is checked and not greyed.

- Verify that Unicode component_2_1_1 is checked and not greyed

- Uncheck Unicode component_2_1_1 and verify that Unicode_2_1_2 also 
  becomes unselected.

- Select Unicode component_2_1_2 and verify that Unicode component_2_1_1 
  also becomes selected.

- Unselect Unicode component_2_1_2 and verify that Unicode component_2_1_1 
  is not affected.

- Click OK and verify that Unicode component_2_1 is greyed.

- If Unicode component_2_2 is checked, uncheck it.

- Verify that ANSI component_2 is not checked.

- Check ANSi component_2 and verify that Unicode component_2_2 is now checked.

- Uncheck ANSI component_2 and Unicode component_2_2.

- Verify that ANSI component_1 is not checked.

- Check ANSI component_1 and verify that ANSI component_2 and Unicode 
  component_2_2 are now checked.


-- If a component has multiple children and one or some of them refuse to 
   be selected, but others can be selected, verify that the component may 
   be selected.

- Select master ANSI component so that it is checked and not greyed. 

- Unselect all ANSI components.

- Select ANSI component_2.

- Select ANSI component_1_1.

- Select ANSI component_1_2.

- Verify that ANSI component_1 is checked but greyed.

- Verify that the master ANSI component is checked but greyed.


-- Verify that needs dependencies and components that refuse to be 
   selected work together.

- Make sure that ANSI component_1 and ANSI component_2 are both unchecked.

- Check ANSI component_1_1 and click OK.

- Verify that ANSI component_1 is checked and greyed.

- Verify that ANSI component_2 is now checked.


------------------------------------------------------------------------------

'octest 2' tests the following:

-- Nonexistent component INF

The oc2.inf file points to component INF files that do not exist. 
The OC Manager should respond with an error message. If the test is
running from the command line, it should exit. If the test is running
during system setup, this compoment should be skipped but setup should
continue.


------------------------------------------------------------------------------

'octest 3' tests the following:


------------------------------------------------------------------------------

'octest 4' tests the following:

-- Nonexistent components in PageAdd and PageReplace sections

The oc4.inf lists nonexistent components in the PageAdd and PageReplace
sections. OC Manager should pop up windows complaining about these 
invalid components, but it should continue to install the valid
component, unicomp.

Unicomp.inf also contains links to these nonexistent components and 
their nonexistent subcompoments.


------------------------------------------------------------------------------

'octest 5' tests the following:

-- Multiple compoments in same compoment INF file

There are two components, unicomp and ansicomp. Both share the same INF
file, comp.inf. This is not standard procedure. Each component is supposed
to have its own INF file. However, this procedure works in most instances,
although not in every way. 


------------------------------------------------------------------------------

'octest 6' tests the following:



