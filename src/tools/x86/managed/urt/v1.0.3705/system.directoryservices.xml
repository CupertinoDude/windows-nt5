<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.DirectoryServices</name>
  </assembly>
  <members>
    <member name="M:System.DirectoryServices.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.DirectoryServices.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.DirectoryServices.AuthenticationTypes">
      <summary>
        <para>Specifies the types of authentication used in <see cref="N:System.DirectoryServices" />.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.None">
      <summary>
        <para>Equates to <see langword="null" />.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <summary>
        <para>Requests secure authentication. When this flag is set,
      the WinNT provider uses NTLM to authenticate the client. Active Directory uses
      Kerberos, and possibly NTLM, to authenticate the client. When the user name and
      password are <see langword="null" />, ADSI binds to the object using the security context of the calling thread, which is either the security context of
      the user account under which the application is running or of the client
      user account that the calling thread is impersonating.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Encription">
      <summary>
        <para> Forces ADSI to use encryption for data that
      is being exchanged over the network.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <summary>
        <para> Attaches a cryptographic signature to
 the message that both identifies the sender and ensures that the message has not
 been modified in transit. Active Directory requires the Certificate Server be installed to support
 Secure Sockets Layer (SSL) encryption.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <summary>
        <para> For a WinNT provider, ADSI tries to connect to a primary domain controller (PDC)
      or a backup domain controller (BDC). For Active Directory, this flag indicates
      that a writable server is not required for a serverless binding.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <summary>
        <para> No authentication is performed. The providers may attempt to bind a client as an
 anonymous user to the targeted object. The WinNT provider does not support this
 flag. Active Directory establishes a connection between the client and the
 targeted object, but does not perform any authentication. Setting this flag
 amounts to requesting an unsecured binding, which means "Everyone" as the
 security context.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <summary>
        <para> ADSI does not attempt to query the Active Directory objectClass property and
      thus only exposes the base interfaces supported by all ADSI objects instead of
      the full object support. A user can use this option to boost the performance in
      a series of object manipulations that involve only methods of the base interfaces.
      However, ADSI does not verify if any of the request objects actually exist
      on the server. For more information, see "Fast Binding Options for Batch Write/Modify
      Operations" in the Active Directory Programmer's Guide.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <summary>
        <para>Verifies data integrity to ensure that the data received is
      the same as the data sent. The <see langword="Secure" />
      flag must also
      be set to use signing.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <summary>
        <para>Encrypts data using Kerberos. The
 <see langword="Secure" /> flag must also be set
 to use sealing.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <summary>
        <para> Enables Active Directory Services
      Interface (ADSI) to delegate the user's security context,
      which is necessary for moving objects across domains.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <summary>
        <para> If your ADsPath includes a
      server name, specify this flag when using the LDAP provider. Do not use this flag for paths
      that include a domain name or for serverless paths. Specifying a server name without also specifying
      this flag results in unnecessary network traffic.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)">
      <summary>
     Constructs a new sys description.
 </summary>
      <param name="description">
     description text.
 </param>
    </member>
    <member name="P:System.DirectoryServices.DSDescriptionAttribute.Description">
      <summary>
     Retrieves the description text.
 </summary>
      <returns>
     description
 </returns>
    </member>
    <member name="T:System.DirectoryServices.DirectoryEntries">
      <summary>
        <para>Contains the children (child entries) of an entry in Active Directory.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <summary>
        <para>Creates a request to create a new entry in the container.</para>
      </summary>
      <param name="name">The name of the new entry.</param>
      <param name=" schemaClassName">The name of the schema used for this new entry.</param>
      <returns>
        <para>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> that represents the new entry.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <summary>
        <para>Returns the child with the specified name.</para>
      </summary>
      <param name="name">The name of the child you are looking for.</param>
      <returns>
        <para>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> that represents the child that was found.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <summary>
        <para>Returns the child with the specified name and of the specified type.</para>
      </summary>
      <param name="name">The name of the child you are looking for.</param>
      <param name="schemaClassName">The type of the child you are looking for.</param>
      <returns>
        <para>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> that represents the child you found.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <summary>
        <para>Deletes a child <see cref="T:System.DirectoryServices.DirectoryEntry" /> from this collection.</para>
      </summary>
      <param name="entry">The <see cref="T:System.DirectoryServices.DirectoryEntry" /> to delete.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <summary>
        <para>Gets the schemas that specify which children are contained in the collection.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.ChildEnumerator.MoveNext">
      <summary>
        <para>Advances
       the enumerator to the next element of the collection
       and returns a Boolean value indicating whether a valid element is available.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the enumerator was successfully advanced to the next 
    element; <see langword="false" /> if
    the enumerator has passed the end of the collection.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.ChildEnumerator.Reset">
      <summary>
        <para>Resets the enumerator back to its initial position before the first element in the collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntries.ChildEnumerator.Current">
      <summary>
        <para>Gets the current element in the collection.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryEntry">
      <summary>
        <para> Encapsulates a node or object in the Active Directory
      hierarchy.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <summary>
        <para>       Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class that binds this instance to the
   node in Active Directory located at the specified path.</para>
      </summary>
      <param name="path">The path at which to bind the <see cref="T:System.DirectoryServices.DirectoryEntry" /> to the directory. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" />, <see cref="P:System.DirectoryServices.DirectoryEntry.Username" />, and <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> properties are set to the specified
   values.</para>
      </summary>
      <param name="path">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry" />. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</param>
      <param name="username">The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</param>
      <param name="password">The password to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" />, <see cref="P:System.DirectoryServices.DirectoryEntry.Username" />, <see cref="P:System.DirectoryServices.DirectoryEntry.Password" />, and <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> properties are set to the specified
   values.</para>
      </summary>
      <param name="path">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry" />. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</param>
      <param name="username">The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</param>
      <param name="password">The password to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> property is initialized to this value.</param>
      <param name="authenticationType">One of the <see cref="T:System.DirectoryServices.AuthenticationTypes" /> values. The <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" />
class that binds to the specified native Active Directory object.</para>
      </summary>
      <param name="adsObject">The native Active Directory object to bind to.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Close">
      <summary>
        <para>Closes the <see cref="T:System.DirectoryServices.DirectoryEntry" />
and releases any system resources associated with this component.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <summary>
        <para>Saves any changes
      to the entry in the Active Directory store.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <summary>
        <para> Creates a copy of this entry as a child of the specified parent.</para>
      </summary>
      <param name="newParent">The parent <see cref="T:System.DirectoryServices.DirectoryEntry" />.</param>
      <returns>
        <para>A copy of this entry as a child of the specified parent.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>
        <para> Creates a copy of this entry, as a child of the specified
      parent, with the specified new name.</para>
      </summary>
      <param name="newParent">The parent <see cref="T:System.DirectoryServices.DirectoryEntry" />.</param>
      <param name="newName">The name of the copy of this entry.</param>
      <returns>
        <para>A
      renamed copy of this entry as a child of the specified parent.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <summary>
        <para>Deletes this entry and its entire subtree from the
      Active Directory hierarchy.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <summary>
        <para>Disposes of the resources (other than memory) used by the
   <see cref="T:System.DirectoryServices.DirectoryEntry" />. </para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <summary>
        <para>Searches the directory store at the specified
      path to see whether an entry exists.</para>
      </summary>
      <param name="path">The path at which to search the directory store.</param>
      <returns>
        <para>
          <see langword="true" /> if an entry exists
   in the directory store at the specified path; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <summary>
        <para>Calls
      a method on the native Active Directory.</para>
      </summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="args">An array of type <see cref="T:System.Object" /> that contains the arguments of the method to invoke.</param>
      <returns>
        <para>The return value of the invoked
      method.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <summary>
        <para>Moves this entry to the specified parent.</para>
      </summary>
      <param name="newParent">The parent to which you want to move this entry.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>
        <para>Moves this entry to the specified parent
      and changes its name to the value of the <paramref name="newName" /> parameter.</para>
      </summary>
      <param name="newParent">The parent to which you want to move this entry.</param>
      <param name="newName">The new name of this entry.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <summary>
        <para>Loads the property values for this directory entry into
      the property cache.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <summary>
        <para>Loads the values of the specified properties into the
      property cache.</para>
      </summary>
      <param name="propertyNames">An array of the specified properties.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <summary>
        <para>Changes the name of this entry.</para>
      </summary>
      <param name="newName">The new name of the entry.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <summary>
        <para>Gets or sets the type of authentication to use.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Children">
      <summary>
        <para>Gets a <see cref="T:System.DirectoryServices.DirectoryEntries" />
containing the child entries of this node in the Active
Directory hierarchy.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Guid">
      <summary>
        <para> Gets the globally unique identifier (GUID) of the <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Name">
      <summary>
        <para> Gets the name of the object as named with the
      underlying directory service.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <summary>
        <para> Gets the globally unique identifier of the <see cref="T:System.DirectoryServices.DirectoryEntry" />,
   as returned from the provider.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <summary>
        <para> Gets the native Active Directory Service Interfaces (ADSI) object.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Parent">
      <summary>
        <para>
      Gets this entry's parent in the Active Directory hierarchy.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Password">
      <summary>
        <para> Gets or sets the password to use when authenticating the client.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Path">
      <summary>
        <para> Gets or sets the path for this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Properties">
      <summary>
        <para> Gets a <see cref="T:System.DirectoryServices.PropertyCollection" />
of properties set on this object.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <summary>
        <para> Gets the name of the schema used for this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <summary>
        <para> Gets the <see cref="T:System.DirectoryServices.DirectoryEntry" /> that holds schema information for
   this entry. An entry's schema determines a list of its mandatory and optional property names.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <summary>
        <para> Gets or sets a value indicating whether the cache should be committed after each
      operation.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Username">
      <summary>
        <para> Gets or sets the user name to use when authenticating the client.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectorySearcher">
      <summary>
        <para> Performs queries against Active Directory.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />,
<see cref="P:System.DirectoryServices.DirectorySearcher.Filter" />, <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to the default values.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with
<see cref="P:System.DirectoryServices.DirectorySearcher.Filter" />, <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to the
   default values. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> is set to the specified value.</para>
      </summary>
      <param name="searchRoot">The node in the Active Directory hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with
<see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to the
   default values. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> and <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> are set to the specified values.</para>
      </summary>
      <param name="searchRoot">The node in the Active Directory hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> property is initialized to this value.</param>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with
<see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to its
   default value. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />, <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> are set to the specified values.</para>
      </summary>
      <param name="searchRoot">The node in the Active Directory hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> property is initialized to this value.</param>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
      <param name=" propertiesToLoad">The set of properties retrieved during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />,
<see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to the
   default values. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> is set to the specified value.</para>
      </summary>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> set to the
default values. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> and <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> are set to the specified values.</para>
      </summary>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
      <param name=" propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> set to its
   default value. <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" />, <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> are set to the specified values.</para>
      </summary>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
      <param name=" propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property is initialized to this value.</param>
      <param name=" scope">The scope of the search that is observed by the server. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher" /> class with the <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />, <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" />, <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />, and <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> properties set to the specified
   values.</para>
      </summary>
      <param name="searchRoot">The node in the Active Directory hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> property is initialized to this value.</param>
      <param name=" filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> property is initialized to this value.</param>
      <param name=" propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property is initialized to this value.</param>
      <param name=" scope">The scope of the search that is observed by the server. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <summary>
        <para> Executes the search and returns only the first entry found.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.DirectoryServices.SearchResult" /> that is the first entry 
    found during the search.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <summary>
        <para> Executes the search and returns a collection of the entries that are found.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.DirectoryServices.SearchResultCollection" /> collection of nodes from
   Active Directory.</para>
      </returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <summary>
        <para> Gets or sets a value indicating whether the result is cached on the
      client computer.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <summary>
        <para> Gets or sets the maximum amount of time that the client waits for
      the server to return results. If the server does not respond within this time,
      the search is aborted and no results are returned.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <summary>
        <para> Gets or sets a value indicating whether the search retrieves only the
      names of attributes to which values have been assigned.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Filter">
      <summary>
        <para> Gets or sets the Lightweight Directory Access Protocol (LDAP) format filter
      string.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <summary>
        <para> Gets or sets the page size in a paged search.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <summary>
        <para> Gets the set of properties retrieved
      during the search.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <summary>
        <para> Gets or sets how referrals are chased.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <summary>
        <para> Gets or sets the scope of the search that is observed by the server.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <summary>
        <para> Gets or sets the time limit the server should observe
      to search an individual page of results (as opposed to
      the time limit for the entire search).</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <summary>
        <para> Gets or sets the maximum amount of time the server spends searching. If
      the time limit is reached, only entries found up to that point are returned.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <summary>
        <para> Gets or sets the maximum number of objects
      the server returns in a search.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <summary>
        <para> Gets or sets the node in the Active
      Directory hierarchy where the search starts.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Sort">
      <summary>
        <para> Gets the property on which the results are
      sorted.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesPermission">
      <summary>
        <para>Allows control of code access security permissions for <see cref="N:System.DirectoryServices" />.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> class with 
   the specified permission state.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> class with 
   the specified access levels and path to an Active Directory node.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.DirectoryServices.DirectoryServicesPermissionAccess" /> values.</param>
      <param name=" path">The path of the Active Directory node to which the permissions apply.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> class with the
   specified permission access level entries.</para>
      </summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> objects. The <see cref="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" /> property is set to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
      <summary>
        <para> Gets the collection of permission entries for this permission.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesPermissionAccess">
      <summary>
        <para>Defines access levels used by <see cref="N:System.DirectoryServices" /> 
permission classes.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None">
      <summary>
        <para>There are no permissions.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse">
      <summary>
        <para>Reading the Active Directory tree is allowed.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write">
      <summary>
        <para>Reading, writing, deleting, changing, and adding to the Active Directory tree are allowed.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <summary>
        <para>Allows declarative <see cref="N:System.DirectoryServices" /> permission checks.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
      <summary>
        <para>Creates the permissions based on the attribute's specifications.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</para>
      </returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path">
      <summary>
        <para>Gets or sets a path to an Active Directory node to 
      which the permissions apply.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess">
      <summary>
        <para>Gets or sets the access levels used in creating permissions.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <summary>
        <para>Defines the smallest unit of a code access security permission set for
   <see cref="N:System.DirectoryServices" />.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> class.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.DirectoryServices.DirectoryServicesPermissionAccess" /> values.</param>
      <param name=" path">The path of the Active Directory node to which the permissions apply.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
      <summary>
        <para> Gets a path to an Active Directory node to 
      which the permissions apply.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess">
      <summary>
        <para> Gets the access levels used in creating permissions.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <summary>
        <para>Contains a strongly typed collection of <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <summary>
        <para>Adds a specified <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> to this collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> object to add.</param>
      <returns>
        <para>The zero-based index of the added <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> object.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <summary>
        <para>Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> objects that contains the permission entries to add.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
      <summary>
        <para> Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" /> that contains the permission entries to add.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <summary>
        <para>Determines whether this collection contains a specified
   <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> object.</para>
      </summary>
      <param name="value">The <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> object to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> object belongs to this collection;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
      <summary>
        <para>Copies the permission entries from this collection to an
      array, starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.DirectoryServices.DirectoryServicesPermissionEntry" /> that receives this collection's permission entries.</param>
      <param name=" index"> The zero-based index at which to begin copying the permission entries.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <summary>
        <para>Determines the index of a specified permission entry in this collection.</para>
      </summary>
      <param name="value">The permission entry for which to search.</param>
      <returns>
        <para>The zero-based index of the specified permission
      entry, or -1 if the permission entry is not found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <summary>
        <para>Inserts a permission entry into this collection at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection at which to insert the permission entry.</param>
      <param name=" value">The permission entry to insert into this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <summary>
        <para>Removes a specified permission entry from this collection.</para>
      </summary>
      <param name="value">The permission entry to remove.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the object at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="T:System.DirectoryServices.PropertyCollection">
      <summary>
        <para>Contains the properties of a <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <summary>
        <para> Determines whether the specified property is in this collection.</para>
      </summary>
      <param name="propertyName">The name of the property to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified property is in the collection;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <summary>
        <para>Copies the properties from this collection to an array, starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.DirectoryServices.PropertyValueCollection" /> that contains this collection's properties.</param>
      <param name="index">The zero-based array index at which to begin copying the properties.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that you can use to iterate through this collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IDictionaryEnumerator" /> that you can use to iterate through this collection.</para>
      </returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <summary>
        <para> Gets the specified property.</para>
      </summary>
      <param name="propertyName">The name of the property to retrieve.</param>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Count">
      <summary>
        <para> Gets the number of properties in this collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <summary>
        <para>Gets the names of the properties in this collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Values">
      <summary>
        <para>Gets the values of the properties in this collection.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.PropertyEnumerator.Dispose">
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.PropertyEnumerator.Dispose(System.Boolean)">
    </member>
    <member name="T:System.DirectoryServices.PropertyValueCollection">
      <summary>
        <para>Contains the values of a <see cref="T:System.DirectoryServices.DirectoryEntry" /> 
property.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <summary>
        <para> Appends a property value to this collection.</para>
      </summary>
      <param name="value">The property value to add.</param>
      <returns>
        <para>The zero-based index of the property value that was added.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <summary>
        <para> Appends a set of property values to this collection.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.Object" /> that contains the property values to add.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <summary>
        <para> Appends a set of property values to this collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.DirectoryServices.PropertyValueCollection" /> that contains the property values to add.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether a specified property value is in this collection.</para>
      </summary>
      <param name="value">The property value to search for.</param>
      <returns>
        <para>
          <see langword="true" /> if the property value is in the collection; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <summary>
        <para>Copies the properties from this collection to an array,
      starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Object" /> that receives the collection's property values.</param>
      <param name="index">The zero-based index at which to begin copying the property values.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <summary>
        <para>Retrieves the index of a specified property value in this collection.</para>
      </summary>
      <param name="value">The property value to find.</param>
      <returns>
        <para>The zero-based index of the specified property value. If 
      the object is not found, the return value is -1.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a property value into this collection at a specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the property value.</param>
      <param name=" value">The property value to insert.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <summary>
        <para>Removes a specified property value from this collection.</para>
      </summary>
      <param name="value">The property value to remove.</param>
    </member>
    <member name="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the property value that is located at a specified index of this collection.</para>
      </summary>
      <param name="index">The zero-based index of the property value.</param>
    </member>
    <member name="P:System.DirectoryServices.PropertyValueCollection.Value">
      <summary>
        <para> Gets or sets the values of the collection.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.ReferralChasingOption">
      <summary>
        <para>Specifies if and how referral chasing is pursued.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.None">
      <summary>
        <para> Never chase the referred-to server. Setting this option
      prevents a client from contacting other servers in a referral process.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <summary>
        <para>Chase only subordinate referrals which are a subordinate naming context in a 
       directory tree. The ADSI LDAP provider always turns off this flag for paged
       searches.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.External">
      <summary>
        <para>Chase external referrals.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.All">
      <summary>
        <para>Chase referrals of either the subordinate or external type.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.ResultPropertyCollection">
      <summary>
        <para>Contains the properties of a <see cref="T:System.DirectoryServices.SearchResult" /> instance.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <summary>
        <para>Determines whether the property that has the specified name belongs to this collection.</para>
      </summary>
      <param name="propertyName">The name of the property to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified property belongs to this collection;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <summary>
        <para> Copies the properties from this collection to an array,
      starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.DirectoryServices.ResultPropertyValueCollection" /> that receives this collection's properties.</param>
      <param name=" index">The zero-based array index at which to begin copying the properties.</param>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <summary>
        <para>Gets the property from this collection that has the specified name.</para>
      </summary>
      <param name="name">The name of the property to retrieve.</param>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <summary>
        <para>Get the names of the properties in this collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <summary>
        <para>Gets the values of the properties in this collection.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.ResultPropertyValueCollection">
      <summary>
        <para>Contains the values of a <see cref="T:System.DirectoryServices.SearchResult" /> property.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether a specified property value is in this collection.</para>
      </summary>
      <param name="value">The property value to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
   property value belongs to this collection; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <summary>
        <para>Retrieves the index of a specified property value in this collection.</para>
      </summary>
      <param name="value">The property value to find.</param>
      <returns>
        <para>The zero-based index of the specified property value. If 
      the object is not found, the return value is -1.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <summary>
        <para>Copies the property values from this collection to an
      array, starting at a particular index of the array.</para>
      </summary>
      <param name="values">An array of type <see cref="T:System.Object" /> that receives this collection's property values.</param>
      <param name=" index">The zero-based array index at which to begin copying the property values.</param>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <summary>
        <para>Gets the property value that is located at a specified index.</para>
      </summary>
      <param name="index">The zero-based index of the property value to retrieve.</param>
    </member>
    <member name="T:System.DirectoryServices.SchemaNameCollection">
      <summary>
        <para>Contains a list of the schema names that the <see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /> property of a <see cref="T:System.DirectoryServices.DirectoryEntries" /> object can use.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <summary>
        <para> Appends a specified schema name to this
      collection.
      </para>
      </summary>
      <param name="value">The schema name to add to this collection. </param>
      <returns>
        <para>The zero-based index of the added schema name.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <summary>
        <para> Appends a set of specified schema names to this collection.
      </para>
      </summary>
      <param name="value">An array of type <see cref="T:System.String" /> that contains the schema names to add. </param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <summary>
        <para>Appends a set of specified schema names to this collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.DirectoryServices.SchemaNameCollection" /> that contains the schema names to add.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <summary>
        <para> Removes all objects from this collection.
      </para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <summary>
        <para> Determines whether this collection contains a specified schema name.
      </para>
      </summary>
      <param name="value"> The schema name to search for. </param>
      <returns>
        <para>
          <see langword="true" /> if the schema name was found in this
   collection; otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <para>Copies the schema names from this collection to an array,
      starting at a particular index of the array.</para>
      </summary>
      <param name="stringArray">An array of type <see cref="T:System.String" /> that receives this collection's schema names.</param>
      <param name=" index">The zero-based array index at which to begin copying the schema names.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that you can use to iterate
      through ths collection.</para>
      </summary>
      <returns>
        <para> An enumerator that you can used to iterate through this collection.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <summary>
        <para> Determines the index of a specified schema name in this collection.
      </para>
      </summary>
      <param name="value"> The schema name to search for. </param>
      <returns>
        <para> The zero-based index of the specified schema 
      name, or -1 if the schema name was not found in
      the collection.
      </para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <summary>
        <para>Inserts a schema name into this collection at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection at which to insert the schema name.</param>
      <param name="value">The schema name to insert into this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <summary>
        <para>Removes a specified schema name from this collection.</para>
      </summary>
      <param name="value"> The schema name to remove.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the schema name
      that is at a specified index from this collection.</para>
      </summary>
      <param name="index">The zero-based index of the schema name to remove.</param>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the object that
      exists at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.Count">
      <summary>
        <para> Gets the number of objects in this collection.
      </para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.SearchResult">
      <summary>
        <para>Encapsulates a node in the Active Directory hierarchy
      that is returned during a search through <see cref="T:System.DirectoryServices.DirectorySearcher" />.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <summary>
        <para>Retrieves the <see cref="T:System.DirectoryServices.DirectoryEntry" /> that corresponds to the <see cref="T:System.DirectoryServices.SearchResult" />, from the Active Directory
   hierarchy.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> that corresponds to the <see cref="T:System.DirectoryServices.SearchResult" />.</para>
      </returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResult.Path">
      <summary>
        <para> Gets the path for this <see cref="T:System.DirectoryServices.SearchResult" />.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.SearchResult.Properties">
      <summary>
        <para>Gets a <see cref="T:System.DirectoryServices.ResultPropertyCollection" />
of properties set on this object.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.SearchResultCollection">
      <summary>
        <para> Contains the <see cref="T:System.DirectoryServices.SearchResult" /> instances that the Active 
   Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher" /> query.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <summary>
        <para> Releases all resources used by the
      <see cref="T:System.DirectoryServices.SearchResultCollection" />. </para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> and optionally releases the managed resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that you can use to iterate
      through this collection.</para>
      </summary>
      <returns>
        <para>An enumerator that you can use to iterate through this collection.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <summary>
        <para>Determines if a specified <see cref="T:System.DirectoryServices.SearchResult" /> object is in this collection.</para>
      </summary>
      <param name="result">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
<see cref="T:System.DirectoryServices.SearchResult" /> object is in the collection;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <summary>
        <para>Copies the <see cref="T:System.DirectoryServices.SearchResult" /> objects from this collection to an array,
   starting at a particular index of the array.</para>
      </summary>
      <param name="results">An array of type <see cref="T:System.DirectoryServices.SearchResult" /> that receives this collection's objects.</param>
      <param name=" index"> The zero-based array index at which to begin copying the objects.</param>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <summary>
        <para>Retrieves the index of a specified <see cref="T:System.DirectoryServices.SearchResult" /> object in this collection.</para>
      </summary>
      <param name="result">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</param>
      <returns>
        <para>The zero-based index of the specified <see cref="T:System.DirectoryServices.SearchResult" /> object. If the object is not found, 
   the return value is -1.</para>
      </returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at a 
   specified index in this collection.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult" /> object to retrieve.</param>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Handle">
      <summary>
        <para>Gets the handle returned by 
   <see langword="IDirectorySearch::ExecuteSearch" /> 
   , which was called by <see cref="T:System.DirectoryServices.DirectorySearcher" />
   that created this collection.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <summary>
        <para> 
      Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" />
      properties that were specified before the
      search was executed.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext">
      <summary>
        <para>Advances
       the enumerator to the next element of the collection
       and returns a Boolean value indicating whether a valid element is available.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the enumerator was successfully advanced to the next 
    element; <see langword="false" /> if
    the enumerator has passed the end of the collection.</para>
      </returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset">
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current">
    </member>
    <member name="T:System.DirectoryServices.SearchScope">
      <summary>
        <para>Specifies the possible scopes for a directory search.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Base">
      <summary>
        <para>Limits the search to the base object. The result contains one object at most. </para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.OneLevel">
      <summary>
        <para> Searches the immediate child objects of the base object, excluding the base object.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Subtree">
      <summary>
        <para> Searches the whole subtree, including the base object and all its child
      objects.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.SortDirection">
      <summary>
        <para>Specifies how to sort the results of an Active Directory query.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Ascending">
      <summary>
        <para>Sort from smallest to largest. For example, A to Z.</para>
      </summary>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Descending">
      <summary>
        <para>Sort from largest to smallest. For example, Z to A.</para>
      </summary>
    </member>
    <member name="T:System.DirectoryServices.SortOption">
      <summary>
        <para>Specifies how to sort the results of a search.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.SortOption" /> class.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.SortOption" /> class, which contains the specified property name
   and specified sort direction.</para>
      </summary>
      <param name="propertyName"> The name of the property to sort by. The <see cref="P:System.DirectoryServices.SortOption.PropertyName" /> property is set to this value.</param>
      <param name=" direction">One of the <see cref="T:System.DirectoryServices.SortDirection" /> values. The <see cref="P:System.DirectoryServices.SortOption.Direction" /> property is set to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.SortOption.PropertyName">
      <summary>
        <para> Gets or sets the name of the property to sort by.</para>
      </summary>
    </member>
    <member name="P:System.DirectoryServices.SortOption.Direction">
      <summary>
        <para>Gets or sets the direction by which to sort the results 
      of a query.</para>
      </summary>
    </member>
    <member name="M:System.DirectoryServices.Interop.SafeNativeMethods.EnumVariant.GetNext">
    </member>
    <member name="M:System.DirectoryServices.Interop.SafeNativeMethods.EnumVariant.GetValue">
    </member>
    <member name="M:System.DirectoryServices.Interop.SafeNativeMethods.EnumVariant.Reset">
    </member>
  </members>
</doc>