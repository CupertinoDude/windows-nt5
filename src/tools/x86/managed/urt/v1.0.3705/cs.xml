<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cs</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Tools.Cs">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.Cs.Main(System.String[])">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.Cs.#ctor">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendMethodReturnType(System.Text.StringBuilder,System.Reflection.MethodInfo,Microsoft.Tools.TypeNames)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                retrieve the return type of the method.  note that we can only do so
                on a normal method, not on a ctor.  to detect the difference, we check
                that the parameter is an instanceof MethodInfo.
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendMethodModifiers(System.Text.StringBuilder,System.Reflection.MethodInfo)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                getModifiers returns a string representing the modifiers on a method.
                The method only applies to an actual method, not a constructor.  It
                determines the difference by testing instanceof MethodInfo.
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendClassModifiers(System.Text.StringBuilder,System.Type)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                Get the modifiers for the class (public, final, abstract).
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldModifiers(System.Text.StringBuilder,System.Reflection.FieldInfo)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                retrieves the modifiers on the field (final, static).
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldType(System.Text.StringBuilder,System.Reflection.FieldInfo,Microsoft.Tools.TypeNames)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                retrieves the type of the field, checking for an array type
            </devdoc>
        </member>
        <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldVisibility(System.Text.StringBuilder,System.Reflection.FieldInfo)">
            <!-- Badly formed XML file "doc\cs.uex" cannot be included -->
            <devdoc>
                getVisibility retrieves the visibility of the field (public, etc.).
            </devdoc>
        </member>
    </members>
</doc>
