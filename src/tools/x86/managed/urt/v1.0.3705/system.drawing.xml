<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing</name>
  </assembly>
  <members>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines whether changing a value on this object should require a call to the <see langword="CreateInstance" /> method to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="CreateInstance" /> object should be called when a change is made to one or more properties of this object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Rectangle" /> structures differ in location or size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if any of the <see langword="X" />, <see langword="Y" />, <see langword="Width" />, or <see langword="Height" /> properties of the two <see cref="T:System.Drawing.Rectangle" /> structures are unequal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>
        <para>Specifies types of metafiles. The <see langword="MetafileHeader.Type" /> property returns a member of this enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the NoOp correction value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). During rendering, no color adjustment is performed while NoOp is set.</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Returns an <see cref="T:System.Drawing.Image" /> object with the specified file name from the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies the assembly in which to look for the resource.
      </param>
      <param name="imageName">
        The file name of the image for which to look.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method gets.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>
        <para>
       German legal fanfold
       (8.5 in. by 13 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>
        <para>
       B4 envelope (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>
        <para>Specifies the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration member used to replace characters in text drawn with this <see cref="T:System.Drawing.StringFormat" /> object. Characters are replaced when the font used to draw text does not support those characters.</para>
      </summary>
      <param name="language">
        An integer value specifying the language of the text.
      </param>
      <param name="substitute">
        An element of the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration that specifies how digits are displayed.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Icon" /> object to a GDI+ <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Bitmap" /> object representing the converted <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>
        <para>Gets or sets the y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>
        <para>Gets a Boolean value that indicates whether this <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>
        <para>Specifies a bitmap texture fill.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>
        <para>
       A4 plus paper
       (210 mm by 330 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.IsEmpty">
      <summary>
        <para>Tests whether all numeric properties of this <see cref="T:System.Drawing.RectangleF" /> have values of zero.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>
        <para>
       Note paper (8.5 in.
       by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="henhmetafile">
        The handle to the enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is returned.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Aqua">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>
        <para>Gets the color of spaces between the hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>
        <para>Encapsulates text layout information (such as alignment and line spacing), display manipulations (such as ellipsis insertion and national digit substitution) and OpenType features. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>
        <para> Manually fed envelope.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
      <param name="offset">
        The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.
      </param>
      <param name="numberOfSegments">
        The number of segments used to draw the curve. A segment can be thought of as a line connecting two points.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> class with the specified number of colors and positions.</para>
      </summary>
      <param name="count">
        The number of colors and positions in this <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.BeginContainer" /><see langword="_Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Pink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> object that specifies positions and factors that define a custom falloff for the gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintController" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Remove(System.IntPtr)">
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Icon">
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the output channel selection for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the output channel selection cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the format of the string.
      </param>
      <param name="width">
        Maximum width of the string in pixels.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillEllipse" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>
        <para>Specifies the unit of measure for the given data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Imaging.Encoder" /> object associated with this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates the globally unique identifier (GUID) that specifies the category (for example Quality, ColorDepth, or Compression) of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>
        <para>Gets a bounding rectangle in the specified units for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="pageUnit">
        A member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units for the rectangle.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for this <see cref="T:System.Drawing.Image" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>
        <para> Gets the default page settings for this printer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>
        <para>Specifies a triangular line cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Subtracts the width and height of one <see cref="T:System.Drawing.SizeF" /> structure from the width and height of another <see cref="T:System.Drawing.SizeF" /> structure.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> on the left side of the subtraction operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> on the right side of the subtraction operator.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.SizeF" /> that is the result of the subtraction operation.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>
        <para>Specifies how a texture or gradient is tiled when it is larger than the area being filled.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>
        <para>Gets or sets the position in the string of the first character of this <see cref="T:System.Drawing.CharacterRange" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>
        <para>Gets the em-size of this <see cref="T:System.Drawing.Font" /> object in design units.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawString" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>
        <para>Specifies no rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>
        <para>Gets or sets the width of the arrow cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>
        <para>Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>
        <para>
       Japanese You #4 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.op_Equality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Tests whether two specified <see cref="T:System.Drawing.Color" /> structures are equivalent.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Color" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Color" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Color" /> structures are equal; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>
        <para> Provides full access to all printers.
 </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object containing the name of the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is retrieved.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>
        <para> Gets a value
      indicating whether the permission is unrestricted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if permission is unrestricted;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>
        <para>
       People's Republic of
       China #2 rotated envelope
       (176 mm by
       102 mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>
        <para>Returns the distance between two consecutive lines of text for this <see cref="T:System.Drawing.FontFamily" /> object that uses the specified <see cref="T:System.Drawing.FontStyle" /> enumeration .</para>
      </summary>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to apply.
      </param>
      <returns>
        <para>The distance between two consecutive lines of text.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.SizeF" /> structures are equal.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> structure on the left side of the equality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> structure on the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
      Converts the given object to the converter's native type.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
      Culture to use to perform the conversion
 </param>
      <param name="value">
      The object to convert.
 </param>
      <returns>
      The converted object.  This will throw an excetpion if the converson
      could not be performed.
 </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.GDI">
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>
        <para>Returns a Boolean value indicating whether the specified image contains time-based frames.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified image contains time-based frames; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>
        <para>Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>
        <para>Specifies a generic <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="emfType">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>
        <para>Specifies the unit of measurement for the rectangle used to size and position a metafile. This is specified during the creation of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>
        <para>
       Letter small paper (8.5 in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> structure to a <see cref="T:System.Drawing.Rectangle" /> structure by rounding the <see cref="T:System.Drawing.RectangleF" /> values to the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> structure to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>
        <para>This method either rotates, flips, or rotates and flips the <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="rotateFlipType">
        A <see langword="RotateFlipType" /> enumeration member that specifies the type of rotation and flip to apply to the image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>
        <para>Specifies a circular cap that rounds off both ends of each dash. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into a sequence of connected line segments.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.
      </param>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>
        <para>Tests whether this <see cref="T:System.Drawing.Region" /> object has an infinite interior on the specified drawing surface.</para>
      </summary>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a drawing surface.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the interior of this <see cref="T:System.Drawing.Region" /> object is infinite when the transformation associated with <paramref name="g" /> is applied; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>
        <para>Gets the Graphics Interchange Format (GIF) image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>
        <para>Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightSlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Size.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>
        <para>GDI+ uses image encoders to convert the images stored in <see cref="T:System.Drawing.Bitmap" /> objects to various file formats. Image encoders are built into GDI+ for the BMP, JPEG, GIF, TIFF, and PNG formats. And encoder is invoked when you call the <see langword="Save" /> or <see langword="SaveAdd" /> method of a <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>
        <para>Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <returns>
        <para>Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>
        <para>A3 rotated
       paper (420 mm by 297 mm).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>
        <para>Specifies how the source colors are combined with the background colors.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>
        <para>Specifies no antialiasing.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>
        <para>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a fraction, the first integer being the numerator and the second integer being the denominator.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawClosedCurve" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleF" /> class with the specified location and size.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="width">
        The width of the rectangle.
      </param>
      <param name="height">
        The height of the rectangle.
      </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>
        <para> Gets the paper sizes that are supported by this printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>
        <para>Clears the NoOp setting for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>
        <para>Gets or sets the element at the 1st row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>
        <para>Specifies the margins of a printed page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>
        <para>Gets a globally unique identifier (GUID) that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Kernel">
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>
        <para> Gets or sets the name of the type of paper.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Peru">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>
        <para>Makes the specified color transparent for this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <param name="transparentColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color to make transparent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>
        <para>Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object and test the types of shapes contained in each subpath. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>
        <para>The pixel data is grayscale.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type. </para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>
        <para>Gets a value that specifies how to interpret the color information in the array of colors.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintEventArgs" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation to the local geometric transform in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>
        <para>
       Tabloid extra paper
       (11.69 in. by 18 in.). This
       value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>
        <para>See <see langword="Graphics.TextRenderingHint" />.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemColors" /> class is a <see cref="T:System.Drawing.Color" /> structure that is the color of a Windows display element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>
        <para>
       People's Republic of
       China #3 envelope (125 mm
       by 176
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Returns a third <see cref="T:System.Drawing.Rectangle" /> structure that represents the intersection of two other <see cref="T:System.Drawing.Rectangle" /> structures. If there is no intersection, null is returned.</para>
      </summary>
      <param name="a">
        A rectangle to intersect.
      </param>
      <param name="b">
        A rectangle to intersect.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> that represents the intersection of <paramref name="a" /> and <paramref name="b" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>
        <para>Specifies a gradient from top to bottom.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Offset(System.Drawing.Point)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="pos">
        Amount to offset the location.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>
        <para>Specifies a hatch that has the appearance of divots.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangular bounds of the ellipse from which the arc is taken.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>
        <para>Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> object is empty.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.Equals(System.Object)">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.PointF" /> contains the same coordinates as the specified <see langword="Object" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.PointF" /> and has  the same coordinates as this <see cref="T:System.Drawing.Point" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>
        <para>Specifies that the image is to be rotated clockwise 270 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Turquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>
        <para>Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.Add(System.IntPtr,System.Int32)">
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>
        <para>A pattern of lines on a diagonal from upper right to lower left.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object that represents the area to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>
        <para> Gets or sets the page settings for the page to be printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="linearGradientMode">
        A <see langword="LinearGradientMode" /> enumeration that specifies the orientation of the gradient.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transform.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies in which order to multiply the two matrices.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>
        <para>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="angle">
        Angle of rotation in degrees.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts in the specified order.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transform in the x-axis direction.
      </param>
      <param name="sy">
        The amount by which to scale the transform in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>
        <para>Two clipping regions are combined by taking their intersection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Chocolate">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Moccasin">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="component">
        The toolbox component with which this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object is associated.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>
        <para>Occurs before and while components are created.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.Point" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>
        <para>Specifies high quality bicubic interpolation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>
        <para>Specifies an arrow-shaped anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>
        <para>Returns a Windows handle to this <see cref="T:System.Drawing.Region" /> object in the specified graphics context.</para>
      </summary>
      <param name="g">
        The <see cref="T:System.Drawing.Graphics" /> object on which this <see cref="T:System.Drawing.Region" /> object is drawn.
      </param>
      <returns>
        <para>A Windows handle to this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>When overridden in a derived class, begins the control 
       sequence that determines when and how to print a page of a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> object that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>
        <para>
       #10 envelope
       (4.125 in. by 9.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="x1">
        x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        x-coordinate of the first control point of the curve.
      </param>
      <param name="y2">
        y-coordinate of the first control point of the curve.
      </param>
      <param name="x3">
        x-coordinate of the second control point of the curve.
      </param>
      <param name="y3">
        y-coordinate of the second control point of the curve.
      </param>
      <param name="x4">
        x-coordinate of the ending point of the curve.
      </param>
      <param name="y4">
        y-coordinate of the ending point of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>
    Specifies a line segment.
 </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>
    Cleans up resources allocated for this
 <see cref="T:System.Drawing.Drawing2D.Matrix" />.
 </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>
        <para>Specifies a hatch that has the appearance of horizontally layered bricks.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>
        <para>Standard paper (12 in. by 11 in.). Requires Windows 98,
       Windows
       NT 4.0, or later.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to another type. The most common type conversion is to and from a string type. The default implementation calls the <see langword="ToString" /> method of the object if the object is valid and if the destination type is string. </para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture used to represent the object.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The data type to convert the object to.
      </param>
      <returns>
        <para>The converted object. If this method cannot convert the specified object to the destination type, it throws a <see langword="NotSupportedException" /> exception.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>
        <para> Gets or sets a value indicating whether an additional page should
       be printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged">
      <summary>
        <para>Notifies the <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> implementation 
   that the global list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects has been modified.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>
        <para> Gets or sets a value indicating whether the print job should be canceled.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LavenderBlush">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>
        <para>Gets the specified property item from this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="propid">
        The ID of the property item to get.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.PropertyItem" /> object this method gets.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.RoyalBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the converter's native type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will pass an exception if the conversion cannot be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>
        <para>Specifies that all graphics operations on the stack are executed as soon as possible. This synchronizes the graphics state.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.NavajoWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>
        <para>Specifies that the image is to be rotated clockwise 90 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>
        <para>Gets or sets the existing <see cref="T:System.Drawing.Color" /> structure to be converted.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkMagenta">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>
        <para>Gets or sets the color of this <see cref="T:System.Drawing.SolidBrush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>
        <para>Sets the bi-level mapping threshold for all appropriate GDI+ objects (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="threshold">
        A threshold value between 0.0 and 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an instance of this type given a set of property values for the object. This is useful for objects that are immutable but still want to provide changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from GetProperties.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>
        <para>Adds an additional outline to the path.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="value">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="value" /> is both a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSteelBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's background.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RectangleF.Empty">
      <summary>
        <para>Represents an instance of the <see cref="T:System.Drawing.RectangleF" /> class with its members uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>
        <para> Gets or sets the printer that
      prints the document.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>
        <para>Specifies a printer's point (1/72 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Location">
      <summary>
        <para>Gets or sets the coordinates of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>
        <para>Returns a human-readable string representation of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>
        <para>Specifies that all color values (including gray shades) are adjusted by the same color-adjustment matrix.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>
        <para>
       Japanese rotated Kaku #3 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>
        <para>Automatically fed paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.GreenYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>
        <para>Creates an XML encoding of the security object and its current
       state.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state
       information.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>
        <para>Color adjustment information for text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but is ignored.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>
        <para>Specifies no trimming.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Indicates whether this converter can convert an object in the specified source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>
        <para>The pixel data contains alpha information.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Compares two <see cref="T:System.Drawing.Point" /> objects. The result specifies whether the values of the <see langword="X" /> and <see langword="Y" /> properties of the two <see cref="T:System.Drawing.Point" /> objects are equal.</para>
      </summary>
      <param name="left">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <param name="right">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the <see langword="X" /> and <see langword="Y" /> values of <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>
        <para>Gets a toolbox item from the specified object that 
      represents a toolbox item in serialized form.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <returns>
        <para>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from the serialized object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>
        <para>Indicates that the codec supports encoding (saving). </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>
        <para>Specifies that each value in the array is an 8-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>
        <para>Returns a handle to this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>A Windows handle to this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>
        <para>A collection of font families built from font files that are provided by the client application. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>
        <para>Adds a sequence of connected cubic Bézier curves to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style <see langword="BackwardDiagonal" />, and are triple its width, but are not antialiased.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.RectangleF" /> structure with the intersection of itself and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The rectangle to intersect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>
        <para>
       US standard
       fanfold (14.875 in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>
        <para>Specifies a hatch that has the appearance of a woven material.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="width">
        The width of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="height">
        The height of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Transparent">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>
        <para>Identifies a record that marks the last EMF+ record of a metafile.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>
        <para>Gets attribute flags for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object with its original size at the location specified by a <see cref="T:System.Drawing.Point" /> structure.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawPie" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>
        <para>Specifies print preview information for
       a single page. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>
        <para>The pixel data is scalable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>
        <para>Provides printing programmatically to the default
      printer, along with safe printing through a less restricted dialog box.
   <see langword="DefaultPrinting" /> is a subset of
   <see langword="AllPrinting" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SpringGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Black">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>
        <para>Specifies nearest-neighbor interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>
        <para>Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>
        <para>Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>
        <para>Creates an instance of the specified type.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current document. This can be <see langword="null" />.</param>
      <param name=" assemblyName">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly that contains the type to load. This can be <see langword="null" />.</param>
      <param name=" typeName">The name of the type to create an instance of.</param>
      <param name=" reference">A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.</param>
      <returns>
        <para>An instance of the specified type, if it could be located.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>
        <para>Gets the caps used to start and end lines that make up this custom cap.</para>
      </summary>
      <param name="startCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.
      </param>
      <param name="endCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.
      </param>
    </member>
    <member name="M:System.Drawing.Color.GetHue">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) hue value, in degrees, for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The hue, in degrees, of this <see cref="T:System.Drawing.Color" /> structure. The hue is measured in degrees, ranging from 0.0 through 360.0, in HSB color space.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PaperSize" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSize" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>
        <para>Specifies that a multiple-frame file or stream should be closed. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.Graphics" /> object that contains printer information that
   is useful when creating a <see cref="T:System.Drawing.Printing.PrintDocument" />, for example, the
<see langword="TextMetric" /> objects for the printer.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> object that contains information from a printer.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>
        <para>Specifies dashed vertical lines.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>
        <para>The new operation is applied after the old operation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkMagenta">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>
        <para>Specifies whether smoothing (antialiasing) is applied to lines and curves.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.PointConverter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image, wrap mode, and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <para>Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>
        <para>Gets or sets the version number of the codec.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>
        <para>Gets the starting index and the ending index of the next group of data points that all have the same type.</para>
      </summary>
      <param name="pathType">
        [out] Receives the point type shared by all points in the group. Possible types can be retrieved from the <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration.
      </param>
      <param name="startIndex">
        [out] Receives the starting index of the group of points.
      </param>
      <param name="endIndex">
        [out] Receives the ending index of the group of points.
      </param>
      <returns>
        <para>This method returns the number of data points in the group. If there are no more groups in the path, this method returns 0.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>
        <para>Gets or sets the center point of the path gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveBorder">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the active window's border.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.SetClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>
        <para>Gets or sets the positions along a gradient line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>
        <para>Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is <see langword="null" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <para>Copies the collection elements to the specified array at
      the specified index.</para>
      </summary>
      <param name="array">The array to copy to.</param>
      <param name=" index">The index of the destination array at which to begin copying.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event. It is called
   when the last page of the document has
   printed.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>
        <para>Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>
        <para>Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>
        <para>Specifies which GDI+ objects use color adjustment information.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.RegisterType(System.String,System.Int32,System.Int32)">
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws a rectangle specified by a coordinate pair, a width, and a height.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the rectangle.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="width">
        Width of the rectangle to draw.
      </param>
      <param name="height">
        Height of the rectangle to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of the active window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a geometric transform to apply to the path.
      </param>
      <param name="warpMode">
        A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Chocolate">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.StringFormat" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>
        <para>Selects the frame specified by the dimension and index.</para>
      </summary>
      <param name="dimension">
        A <see cref="T:System.Drawing.Imaging.FrameDimension" /> object that specifies the identity of the dimension type.
      </param>
      <param name="frameIndex">
        The index of the active frame.
      </param>
      <returns>
        <para>The index of the active frame.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>
        <para>By default the boundary rectangle returned by the <see cref="M:System.Drawing.Graphics.MeasureString" /> method excludes the space at the end of each line. Set this flag to include that space in measurement.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to another type. The most common type conversion is to and from a string type.</para>
      </summary>
      <param name="** 'Parameters' TEXT MISSING OR MIS-FORMATTED **">
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>
        <para>Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:100.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> object that defines a multicolor linear gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Green">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines whether  changing a value on this object should require a call to the <see langword="CreateInstance" /> method to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="CreateInstance" /> object should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>
        <para>Closes the current graphics container and restores the state of this <see cref="T:System.Drawing.Graphics" /> object to the state saved by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> method.</para>
      </summary>
      <param name="container">
        <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the container this method restores.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.OldLace">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>An interger value that specifies the hash code for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>
        <para>Specifies a 90-degree rotation without flipping.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>
        <para>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Window">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Bottom">
      <summary>
        <para>Gets the y-coordinate of the bottom edge of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>
        <para>Specifies the methods available for use with a metafile to read and write graphic commands. The members of this enumeration come in three groups: </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumTurquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Width">
      <summary>
        <para>Gets or sets the width of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.MultiplyTransform" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount. This method prepends the rotation to the transformation.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>
        <para>Specifies a hatch that has the appearance of spheres laid adjacent to one another.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>
        <para>Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>
        <para>Specifies a WMF (Windows Metafile) file. Such a file contains only GDI records.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transformation for the image associated with this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Indicates whether this object supports properties. By default, this is <see langword="False" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="GetProperties" /> method should be called to find the properties of this object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>
        <para>Adds a series of rectangles to this path.</para>
      </summary>
      <param name="rects">
        An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object is italic.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system hand icon (WIN32: IDI_HAND).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>
        <para>Tests whether this <see cref="T:System.Drawing.Region" /> object has an empty interior on the specified drawing surface.</para>
      </summary>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a drawing surface.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the interior of this <see cref="T:System.Drawing.Region" /> object is empty when the transformation associated with <paramref name="g" /> is applied; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>
        <para>Advances the frame in the specified image. The new frame is drawn the next time the image is rendered. This method applies only to images with time-based frames.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object for which to update frames.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>
        <para>Specifies a square line cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
      <summary>
        <para>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an HTML string color representation.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure to translate.
      </param>
      <returns>
        <para>The string that represents the HTML color.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>
        <para>Do not display the hot-key prefix.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines whether this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="GetProperties" /> object should be called to find the properties of this object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>
        <para>Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:100.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>
        <para>Specifies that each character is drawn using its glyph bitmap. Hinting is not used.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object with its original size at the specified location.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>
        <para> Gets or sets the right margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Height">
      <summary>
        <para>Gets or sets the height of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>
        <para>Gets a hash code for this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the NoOp setting for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the NoOp setting cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. Also, a string<see langword=" " />that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object can be added.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>
        <para>Represents the state of a <see cref="T:System.Drawing.Graphics" /> object. This object is returned by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> methods. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Prepends the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Fuchsia">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>
        <para>Indicates whether the specified <see cref="T:System.Drawing.FontStyle" /> enumeration is available.</para>
      </summary>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified <see cref="T:System.Drawing.FontStyle" /> is available; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Draws a Bézier spline defined by four <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        <see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        <see cref="T:System.Drawing.PointF" /> structure that represents the ending point of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Honeydew">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.GetHashCode">
      <summary>
        <para>Gets the hash code for this <see cref="T:System.Drawing.RectangleF" /> structure. For information about the use of hash codes, see <see langword="Object.GetHashCode" />.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.RectangleF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Blend" /> class with the specified number of factors and positions.</para>
      </summary>
      <param name="count">
        The number of elements in the <see langword="Factors" /> and <see langword="Positions" /> arrays.
      </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>
        <para> Gets or sets the maximum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected
   in a <see cref="T:System.Windows.Forms.PrintDialog" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>
        <para> Gets or
       sets the width of the paper, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>
        <para>Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:100.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.ToolTip">
      <summary>
        <para> Gets or sets the
       tool tip to display for this item.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>
        <para>Italic text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HighlightText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>
        <para>Specifies that colors are adjusted but gray shades are not adjusted. A gray shade is any color that has the same value for its red, green, and blue components.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Sienna">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)">
      <summary>
        <para>Subtracts the width and height of one <see cref="T:System.Drawing.Size" /> structure from the width and height of another <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.Size" /> structure on the left side of the subtraction operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.Size" /> structure on the right side of the subtraction operator.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Size" /> structure that is the result of the subtraction operation.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>
        <para>Specifies the style of dashed lines drawn with a <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIHandler">
      <summary>
        <para>Represents the method that adds a delegate to an implementation of <see cref="T:System.Drawing.Design.IPropertyValueUIService" />.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to obtain context information. </para>
      </param>
      <param name="propDesc">The property that is being queried.</param>
      <param name="valueUIItemList">A list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects containing the UI items associated with the property.</param>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>
        <para>The default unit (0.01 in.).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>
        <para>Gets the WMF header file for the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary>
        <para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item
      matches the specified attributes.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name=" filterAttributes">An <see cref="T:System.Collections.ICollection" /> that contains the attributes to test the serialized object for.</param>
      <returns>
        <para>
          <see langword="true" /> if the object matches the specified attributes;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumAquamarine">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>
        <para>Adds a rectangle to this path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to add.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>
        <para>
       #12 envelope (4.75
       in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkSalmon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>
        <para>Represents a series of connected lines and curves. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>
        <para>Clears all markers from this path.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>
        <para>Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:100.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>
        <para>
       A5 extra paper
       (174 mm by 235 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.RosyBrown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Violet">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>
        <para>Specifies a user-defined substitution scheme.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object from the specified existing <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="format">
        The <see cref="T:System.Drawing.StringFormat" /> object from which to initialize the new <see cref="T:System.Drawing.StringFormat" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>
        <para>
       People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>
        <para>Adds a rectangle to this path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to add.
      </param>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Adds a frame to the file or stream specified in a previous call to the <see langword="Save" /> method. </para>
      </summary>
      <param name="image">
        An <see cref="T:System.Drawing.Image" /> object that contains the frame to add.
      </param>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object that holds parameters required by the image encoder that is used by the save-add operation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawImage" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.PointF" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Text.HotkeyPrefix" /> object for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawCurve" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkCyan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one unsigned 8-bit integer. Sets the <see langword="ValueType" /> property to ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An 8-bit unsigned integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DeepSkyBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="type">
        The <see langword="Type" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>
    C3 envelope (324 mm by 458 mm).
 </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>
        <para>Specifies the default mode.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
      <summary>
        <para>Translates the specified <see cref="T:System.Drawing.Color" /> structure to a Windows color.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure to translate.
      </param>
      <returns>
        <para>The Windows color value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.SlateBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary>
        <para>Sets the current application's cursor to a cursor that represents the
      currently selected tool.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the cursor is set by the
   currently selected tool, <see langword="false" />
   if there is no tool selected and the cursor is set
   to the standard windows cursor.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Ivory">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>
        <para>The pixel format is 16 bits per pixel. The color information specifies 32,768 shades of color, of which 5 bits are red, 5 bits are green, 5 bits are blue, and 1 bit is alpha.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Blend" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawEllipse" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event. It is called
   immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from the specified data.</para>
      </summary>
      <param name="rgnData">
        A <see cref="T:System.Drawing.Drawing2D.RegionData" /> object that defines the interior of the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>
        <para>Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Brush" /> object from the specified <see cref="T:System.Drawing.Color" /> color.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure from which to create the <see cref="T:System.Drawing.Brush" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Brush" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
        <para>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve. </para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
      <param name="scale">
        A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.
      </param>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>
        <para>Animates an image that has time-based frames.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Adds a frame to the file or stream specified in a previous call to the <see langword="Save" /> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.</para>
      </summary>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object that holds parameters required by the image encoder that is used by the save-add operation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>
        <para> Copies relevant information to the <see cref="T:System.Drawing.Printing.PageSettings" /> from the specified DEVMODE structure.</para>
      </summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure.</param>
    </member>
    <member name="F:System.Drawing.KnownColor.Tomato">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>
        <para>The printer's default input bin.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>
        <para>
       #14 envelope (5 in. by 11.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns a value that indicates whether the pixel format is extended.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="pixfmt" /> parameter is extended; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>
        <para>Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">
      <summary>
        <para> Indicates whether this editor supports painting a
      representation of an object's value.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> is implemented;
otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>
        <para>Creates and returns an identical copy of the current permission
       object.</para>
      </summary>
      <returns>
        <para>A copy of the current permission object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>
        <para>Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Region" /> object on the drawing surface of a <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="g">
        The <see cref="T:System.Drawing.Graphics" /> object on which this <see cref="T:System.Drawing.Region" /> object is drawn.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.Region" /> object on the specified drawing surface.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="component">
        The toolbox component with which this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object is associated.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.PaleGoldenrod">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>
        <para>Two clipping regions are combined by taking only the areas enclosed by one or the other region, but not both.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>
        <para> Gets or sets the minimum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be
   selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>
        <para>Clears the color-key values for all the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkCyan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the output color channels for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration, using the color-profile file specified in the string.</para>
      </summary>
      <param name="colorProfileFilename">
        Contains the name of the color-profile file.
      </param>
      <param name="type">
        Specifies the type of GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that can be color adjusted.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Rectangle" /> structure with the specified edge locations.</para>
      </summary>
      <param name="left">
        The x-coordinate of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.
      </param>
      <param name="top">
        The y-coordinate of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.
      </param>
      <param name="right">
        The x-coordinate of the lower-right corner of this <see cref="T:System.Drawing.Rectangle" /> structure.
      </param>
      <param name="bottom">
        The y-coordinate of the lower-right corner of this <see cref="T:System.Drawing.Rectangle" /> structure.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.Rectangle" /> that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size, pixel format, and pixel data.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="stride">
        The memory size of a row in the stream of pixel data.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="scan0">
        The address of a stream of pixel data.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>
        <para>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.SteelBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Size">
      <summary>
        <para>Represents the size of a rectangular region with an ordered pair of width and height.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>
        <para>
       E paper (34
       in. by 44 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>
        <para>Specifies that pixels are offset by -.5 units, both horizontally and vertically, for high speed antialiasing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>
        <para>Gets the time dimension.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>
        <para>Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>
        <para>
       People's Republic of
       China 32K rotated paper (97 mm by 151
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <para>ImageConverter is a class that can be used to convert <see cref="T:System.Drawing.Image" /> objects from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SizeConverter">
      <summary>
        <para>The <see cref="T:System.Drawing.SizeConverter" /> class is used to convert from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Size.IsEmpty">
      <summary>
        <para>Tests whether this <see cref="T:System.Drawing.Size" /> has zero width and height.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Explicit(System.Drawing.Size)~System.Drawing.Point">
      <summary>
    Converts the specified <see cref="T:System.Drawing.Size" /> to a
 <see cref="T:System.Drawing.Point" />.
 </summary>
      <param name="size">
    The <see cref="T:System.Drawing.Size" /> to convert.
 </param>
    </member>
    <member name="F:System.Drawing.KnownColor.GreenYellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>
        <para>
       People's Republic of China #10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Control">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)">
      <summary>
        <para>Determines if this rectangle intersects with <paramref name="rect" />.</para>
      </summary>
      <param name="rect">
        The rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if there is any intersection.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>
        <para>Specifies the nature of the records that are placed in an Enhanced Metafile (EMF) file. This enumeration is used by several constructors in the <see cref="T:System.Drawing.Imaging.Metafile" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>
        <para>Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</para>
      </summary>
      <param name="intention">
        Member of the <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.KnownColor">
      <summary>
        <para>Specifies the known system colors.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>
        <para>Creates components from each type contained in this toolbox
      item.</para>
      </summary>
      <returns>
        <para>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>
        <para>
       JIS B6 paper
       (128 mm by 182 mm).
       Requires Windows 98,
       Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>
        <para>Specifies high quality bilinear interpolation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Point">
      <summary>
        <para>Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified GDI <see langword="LOGFONT" /> structure.</para>
      </summary>
      <param name="lf">
        An <see langword="Object" /> object that represents the GDI <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="hdc">
        A handle to a device context that contains additional information about the <paramref name="lf" /> structure.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>
        <para>Indicates that the codec is built into GDI+. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Firebrick">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> object within the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> object to draw.
      </param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image on the display surface. The image contained in the <paramref name="icon" /> parameter is scaled to the dimensions of this rectangular area.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>
        <para>Draws an ellipse defined by a bounding <see cref="T:System.Drawing.RectangleF" />.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>
        <para>Specifies the order for matrix transform operations.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> object that specifies positions and factors that define a custom falloff for the gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Adds the specified <see cref="T:System.Drawing.Design.ToolboxItem" /> to the toolbox.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>
        <para>See <see langword="Graphics.CompositingMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>
        <para>Specifies a beveled join.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>
        <para>The magenta color channel.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.WindowFrame">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>
        <para>Increases or decreases the size of a logical palette based on the specified value.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Silver">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>
        <para>Specifies a range of character positions within a string.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveBorder">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and three integers that specify the number of values, the data type of the values, and a pointer to the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="NumberOfValues">
        An integer that specifies the number of values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see langword="NumberOfValues" /> property is set to this value.
      </param>
      <param name="Type">
        A member of the <see langword="EncoderParameterValueType" /> enumeration that specifies the data type of the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see langword="Type" /> property and the <see langword="ValueType" /> property are set to this value.
      </param>
      <param name="Value">
        A pointer to an array of values of the type specified by the <paramref name="Type" /> parameter. The <see langword="ValuePointer" /> property is set to this address.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Brown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.</para>
      </summary>
      <param name="a">
        A rectangle to union.
      </param>
      <param name="b">
        A rectangle to union.
      </param>
      <returns>
        <para>A third <see cref="T:System.Drawing.RectangleF" /> structure that contains both of the two rectangles that form the union.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>
        <para>Creates a GDI <see langword="LOGFONT" /> structure from this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="logFont">
        An <see langword="object" /> that represents the <see langword="LOGFONT" /> structure that this method creates.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the color-adjust matrix.</para>
      </summary>
      <param name="type">
        A <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration member that specifies the GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that use the color-adjust information.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>
        <para>The yellow color channel.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>
        <para>Gets or sets a two dimensional array of bytes that can be used as a filter.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the active window's border.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>
        <para>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the shear transformation.</para>
      </summary>
      <param name="shearX">
        The horizontal shear factor.
      </param>
      <param name="shearY">
        The vertical shear factor.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>
        <para>Rewinds this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object to the beginning of its associated path.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Retrieves a collection containing a set of standard values
      for the data type this validator is designed for.  This
      will return null if the data type does not support a
      standard set of values.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <returns>
      A collection containing a standard set of valid values,
      or null.  The default implementation always returns null.
 </returns>
    </member>
    <member name="P:System.Drawing.Color.BlanchedAlmond">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>
        <para>Specifies the alternate fill mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>
        <para>Tiles the gradient or texture.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows placeable metafile format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows placeable metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>
        <para>
       People's Republic of
       China 32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>
        <para>The minimum value for this enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>
        <para>Clears the entire drawing surface and fills it with the specified background color.</para>
      </summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> structure that represents the background color of the drawing surface.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Khaki">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Equality(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Compares two <see cref="T:System.Drawing.PointF" /> structures. The result specifies whether the values of the <see langword="X" /> and <see langword="Y" /> properties of the two <see cref="T:System.Drawing.PointF" /> objects are equal.</para>
      </summary>
      <param name="left">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <param name="right">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <returns>
        <para>Returns <see langword="true" /> if the <see langword="X" /> and <see langword="Y" /> values of the left and right <see cref="T:System.Drawing.PointF" /> objects are equal; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.HotPink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SizeF.Height">
      <summary>
        <para>Gets or sets the vertical component of this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Rectangle.Right">
      <summary>
        <para>Gets the x-coordinate of the right edge of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>
        <para>
       A4 small paper
       (210 mm by 297 mm).
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>
        <para>Represents a collection of categories.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>
        <para>Specifies that the format is 16 bits per pixel; 5 bits each are used for the red, green, and blue components. The remaining bit is not used. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>
        <para>Gets or sets the height of the arrow cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>
        <para>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> object and opens and uses a new graphics container.</para>
      </summary>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the state of this <see cref="T:System.Drawing.Graphics" /> object at the time of the method call.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>
        <para>Specifies forward diagonal and backward diagonal lines that cross. The lines are antialiased.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.
      </param>
      <param name="order">
        The order in which to perform the multiplication operation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>
        <para>Gets the logical horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>
        <para>Adds a series of rectangles to this path.</para>
      </summary>
      <param name="rects">
        An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>
        <para>Specifies the types of color maps.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>
        <para>Specifies a metafile format that is not recognized in GDI+.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LemonChiffon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>
        <para>Specifies no rotation and no flipping.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>
        <para>Bold text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>
        <para>
       A tractor feed.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</para>
      </summary>
      <param name="fillPath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.
      </param>
      <param name="strokePath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.
      </param>
      <param name="baseCap">
        The LineCap from which to create the custom cap.
      </param>
      <param name="baseInset">
        The distance between the cap and the line.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>
        <para>High speed, low quality.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.Point" /> by a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> to translate.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to add to the coordinates of <paramref name="pt" />.
      </param>
      <returns>
        <para>The translated <see cref="T:System.Drawing.Point" /> structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para> Completes the control sequence that determines when and how 
       to print a page of a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document.</param>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.PointF" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>
        <para>Sets the output color channels for all GDI+ objects (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) using the color-profile file specified in the string.</para>
      </summary>
      <param name="colorProfileFilename">
        Contains the name of the color-profile file.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> event that occurs
   when components are added to the toolbox.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the rectangle that defines the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amounts in the specified order.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transformation in the x direction.
      </param>
      <param name="sy">
        The amount by which to scale the transformation in the y direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.White">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
        <para>Creates a gradient falloff based on a bell-shaped curve.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).
      </param>
      <param name="scale">
        A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>
        <para>No pixel format is specified.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para> Completes the control
      sequence that determines when and how to preview a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to preview the print document.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the transformation to apply.
      </param>
    </member>
    <member name="P:System.Drawing.Color.PowderBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>
        <para>Specifies that the image is to be flipped horizontally (about the vertical axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>
        <para>Removes the specified property item from this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="propid">
        The ID of the property item to remove.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structuret to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>
        <para>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling. The wrap mode is used by the various <see cref="T:System.Drawing.Brush" /> classes where fills are used to fill a shape.</para>
      </summary>
      <param name="mode">
        Specifies the wrap mode, using a value from the <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration.
      </param>
      <param name="color">
        Address of a <see cref="T:System.Drawing.Color" /> object. The default is <see cref="T:System.Drawing.Color" />().
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>
        <para>Specifies horizontal lines that are spaced 50 percent closer together than <see langword="Horizontal" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>
        <para>Resets the world transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object to the identity matrix.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSize" /> class.
   </para>
      </summary>
      <param name="name">The name of the paper. </param>
      <param name="width">The width of the paper, in hundredths of an inch. </param>
      <param name="height">The height of the paper, in hundredths of an inch. </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>
        <para>Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>
        <para>Gets a generic default <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>
        <para>Represents an adjustable arrow-shaped line cap. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Size" /> structures are equal.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.Size" /> structure on the left side of the equality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.Size" /> structure on the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>
        <para>Specifies a line consisting of a repeating pattern of dash-dot.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.OldLace">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.#ctor">
      <summary>
        <para>Initializes
       a new instance of the <see cref="T:System.Drawing.Design.UITypeEditor" /> class.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemPens" /> class is a <see cref="T:System.Drawing.Pen" /> object that is the color of a Windows display element  and that is a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> from a Windows handle to an icon.</para>
      </summary>
      <param name="hicon">
        A handle to an icon.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Yellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>
        <para>
       Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 32-bit integers. The pair of integers represents a fraction, the first integer being the numerator, and the second integer being the denominator. Sets the <see langword="ValueType" /> property to ValueTypeRational, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator">
        A 32-bit integer that represents the numerator of a fraction. Must be nonnegative.
      </param>
      <param name="denominator">
        A 32-bit integer that represents the denominator of a fraction. Must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>
        <para>Specifies low quality, high speed rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>
        <para>
       A6 paper (105
       mm by 148 mm). Requires
       Windows 98,
       Windows
       NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>
        <para>
       A2 paper
       (420
       mm by 594 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>
        <para>Gets an array of GUIDs that represent the dimensions of frames within this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>
        <para>Specifies a perspective warp.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>
        <para>Creates a Windows HBITMAP from this <see cref="T:System.Drawing.Bitmap" /> object. You must de-allocate HBITMAP with <see langword="Windows.DeleteObject(handle)" />. If the image uses transparency, the background is filled with the specified background color.</para>
      </summary>
      <param name="background">
        A <see cref="T:System.Drawing.Color" /> structure that represents the background color of this <see cref="T:System.Drawing.Bitmap" />.
      </param>
      <returns>
        <para>The handle to the Windows HBITMAP object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object by prepending it to the object's transformation matrix.</para>
      </summary>
      <param name="sx">
        Scale factor in the x direction.
      </param>
      <param name="sy">
        Scale factor in the y direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>
        <para>Marks the start of a multiple-format section.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)">
      <summary>
        <para>Adds the width and height of one <see cref="T:System.Drawing.Size" /> structure to the width and height of another <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <param name="sz1">
        The first <see cref="T:System.Drawing.Size" /> to add.
      </param>
      <param name="sz2">
        The second <see cref="T:System.Drawing.Size" /> to add.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Size" /> structure that is the result of the addition operation.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>
        <para>Adds a new toolbox item creator.</para>
      </summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format this creator responds to. If a creator responds to more than one format, call <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)" /> more than once. It is an error to add more than one creator for the same format.</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>
        <para>Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="startCap">
        A <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="endCap">
        A <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="dashCap">
        A <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is to be multiplied.
      </param>
      <param name="order">
        The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that represents the order of the multiplication.
      </param>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowFrame">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a window frame.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of text in a 3-D element.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>
        <para>See <see langword="Graphics.ResetTransform" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>
        <para>Specifies high speed, low quality rendering.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>
        <para>
       Letter plus paper
       (8.5 in. by 12.69 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>
        <para>
       JIS B5 rotated
       paper (257 mm by 182
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>
        <para>Specifies a square anchor line cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>
        <para> 
       Gets the page settings for the current page.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>
        <para>
       Letter transverse paper
       (8.275 in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Left">
      <summary>
        <para>Gets the x-coordinate of the left edge of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Gets the color-adjusted palette.</para>
      </summary>
      <param name="palette">
        Pointer to the color-adjusted palette.
      </param>
      <param name="type">
        GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjustment information. The default is <see langword="ColorAdjustType.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>
        <para>Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.IsSystemColor">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is a system color. A system color is a color that is used in a windows display element. System colors are represented by elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Goldenrod">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>
        <para>Gets or sets the pixel height of the <see cref="T:System.Drawing.Bitmap" /> object. Also sometimes referred to as the number of scan lines.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>
        <para>Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>
        <para>Specifies that the existing region is replaced by the result of the existing region being removed from the new region. Said differently, the existing region is excluded from the new region.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a geometric transform to apply to the path.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Graphics">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Graphics" /> object with which painting should be done.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Saves the state of this toolbox item to
      the specified serialization information.</para>
      </summary>
      <param name="info">The serialization information object to save to.</param>
      <param name="context">The streaming context.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>
        <para>Specifies that each value in the array is a set of four, 32-bit unsigned integers. The first two integers represent one fraction, and the second two integers represent a second fraction. The two fractions represent a range of rational numbers. The first fraction is the smallest rational number in the range, and the second fraction is the largest rational number in the range. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>
        <para>Specifies the format of the color data for each pixel in the image.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>
        <para>Gets or sets the method to be used for digit substitution.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines if this converter can convert an object in the given source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>
        <para>Gets or sets a string that contains the name of the codec.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>
        <para>Gets the resolution dimension.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class.</para>
      </summary>
      <param name="settings">A <see cref="T:System.Drawing.Printing.PrinterSettings" /> object that specifies the settings for a printer.</param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Rectangle" /> structure that bounds the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>
        <para>Gets or sets the new <see cref="T:System.Drawing.Color" /> structure to which to convert.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of an inactive window's border.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.ToString">
      <summary>
        <para>Creates a human-readable string that represents this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.SizeF" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>When overridden in a derived class, completes the 
       control sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>
        <para>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to a specified array of points.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>
        <para>
       Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned on the outside
       of the line being drawn.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Offset(System.Int32,System.Int32)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="x">
        The horizontal offset.
      </param>
      <param name="y">
        The vertical offset.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.SeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>
        <para>Gets or sets the x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Yellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary>
        <para>Gets or sets an instance of the <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that made the request
   to create toolbox components.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>
        <para>
       A3 transverse paper
       (297 mm by 420 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>
        <para>The maximum value for this enumeration.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>
        <para>
       Japanese rotated Chou #3 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>
        <para>Specifies that the array of values is a null-terminated ASCII character string. Note that the <see langword="NumberOfValues" /> data member of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object indicates the length of the character string including the NULL terminator.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PaleGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>
        <para>Base class for installed and private font collections. Provides a method to get a list of the font families contained in the collection. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Chartreuse">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </summary>
      <returns>
        <para>Returns an <see langword="int" /> value that is the hash code of this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>
        <para>Not used in GDI+ version 1.0. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text in an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Explicit(System.Drawing.Point)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Point" /> to a <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="p">
        The <see cref="T:System.Drawing.Point" /> to convert.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> object without scaling the image.</para>
      </summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> object to draw.
      </param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image. The image is not scaled to fit this rectangle, but retains its original size. If the image is larger than the rectangle, it is clipped to fit inside it.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amounts. This method prepends the scaling matrix to the transformation.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transformation in the x direction.
      </param>
      <param name="sy">
        The amount by which to scale the transformation in the y direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>
        <para>Specifies an angled miter join.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Single,System.Single)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point  defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:System.Drawing.RectangleF" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>
        <para>Adds a polygon to this path.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>
        <para>Specifies that text is vertical.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>
        <para>When you call the <see langword="Save" /> or <see langword="SaveAdd" /> method of an <see cref="T:System.Drawing.Image" /> object, you can pass parameters to the image encoder by passing an <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object to the <see langword="Save" /> or <see langword="SaveAdd" /> method. An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object contains an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects. Each <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object has an array of values and an <see cref="T:System.Drawing.Imaging.Encoder" /> property that specifies the parameter category. The <see langword="EncoderValue" /> enumeration provides names for some of the values that can be passed to the JPEG and TIFF image encoders.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InfoText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text of a ToolTip.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>
        <para>Adds a comment to the current <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="data">
        Array of bytes that contains the comment.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>
        <para>Returns the thumbnail for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="thumbWidth">
        The width, in pixels, of the requested thumbnail image.
      </param>
      <param name="thumbHeight">
        The height, in pixels, of the requested thumbnail image.
      </param>
      <param name="callback">
        A <see langword="GetThumbnailImageAbort" /> delegate. The <see langword="GetThumbnailImage" /> method calls the delegate to give you the opportunity to abort the thumbnail creation process.
      </param>
      <param name="callbackData">
        Must be IntPtr.Zero.
      </param>
      <returns>
        <para>An <see cref="T:System.Drawing.Image" /> object that represents the thumbnail.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Menu">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>
        <para>
       Small-format paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</para>
      </summary>
      <param name="m11">
        The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="m12">
        The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="m21">
        The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="m22">
        The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="dx">
        The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="dy">
        The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.ForestGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>
        <para>Specifies a solid line.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see langword="WmfPlaceableFileHeader" /> object. Also, <paramref name="deleteWmf" /> can be used to delete the handle when the metafile is deleted.</para>
      </summary>
      <param name="hmetafile">
        A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />.
      </param>
      <param name="wmfHeader">
        A <see langword="WmfPlaceableFileHeader" /> object.
      </param>
      <param name="deleteWmf">
        Set to <see langword="true" /> to delete the handle to the new <see cref="T:System.Drawing.Imaging.Metafile" /> object when the <see cref="T:System.Drawing.Imaging.Metafile" /> object is deleted; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIItem">
      <summary>
        <para> Provides information about the property value UI, including the invoke
      handler, tool tip, and the icon for a property displayed on the properties
      window.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>
        <para>Gets or sets a string that describes the codec's file format.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from a specified resource.</para>
      </summary>
      <param name="type">
        The class used to extract the resource.
      </param>
      <param name="resource">
        The name of the resource.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>
        <para> Gets or sets page settings
      that are
      used
      as defaults for all pages to be printed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>
        <para>Provides printing only from a restricted dialog box. 
 <see langword="SafePrinting" /> is a subset of 
 <see langword="DefaultPrinting" /> .</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LawnGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>
        <para>Specifies the attributes of a bitmap image. The <see cref="T:System.Drawing.Imaging.BitmapData" /> class is used by the <see langword="LockBits" /> and <see langword="UnlockBits" /> methods of the <see cref="T:System.Drawing.Bitmap" /> class. Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>
        <para>Specifies 1/300 of an inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>
        <para>Clears the output channel selection and color-profile file for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the application workspace. The application workspace is the area in a multiple-document view that is not being occupied by documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkOrchid">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Point" /> to a human readable string.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Point" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>
        <para>Moves the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object to the next subpath in the path. The start index and end index of the next subpath are contained in the [out] parameters.</para>
      </summary>
      <param name="startIndex">
        [out] Receives the starting index of the next subpath.
      </param>
      <param name="endIndex">
        [out] Receives the ending index of the next subpath.
      </param>
      <param name="isClosed">
        [out] Indicates whether the subpath is closed.
      </param>
      <returns>
        <para>The number of subpaths in the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>
        <para>Specifies that the image is stored using a YCCK color space.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Gainsboro">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>
        <para>
       A3 extra transverse
       paper (322 mm by 445 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.HotTrack">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color used to designate a hot-tracked item. Single-clicking a hot-tracked item executes the item.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Rectangle">
      <summary>
        <para>Stores the location and size of a rectangular region. For more advanced region functions, use a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>
        <para>Specifies a color map for a <see cref="T:System.Drawing.Brush" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <para>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> object at the specified coordinates.</para>
      </summary>
      <param name="icon">
        <see cref="T:System.Drawing.Icon" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the desktop.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>
        <para> Creates a permission that combines the permission
      object and the target permission object.</para>
      </summary>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <returns>
        <para>A new permission object that represents the union of the current permission
      object and the specified permission object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle. Also, <paramref name="deleteEmf" /> can be used to delete the handle when the metafile is deleted.</para>
      </summary>
      <param name="henhmetafile">
        A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />.
      </param>
      <param name="deleteEmf">
        Set to <see langword="true" /> to delete the handle to the new <see cref="T:System.Drawing.Imaging.Metafile" /> when the <see cref="T:System.Drawing.Imaging.Metafile" /> is deleted; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>
        <para>Indicates that a decoder has blocking behavior during the decoding process. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>
        <para>Specifies a line consisting of dashes.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>
        <para>Initializes this <see cref="T:System.Drawing.Region" /> object to an infinite interior.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.ToString">
      <summary>
        <para>Converts the attributes of this <see cref="T:System.Drawing.Rectangle" /> to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that contains the position, width, and height of this <see cref="T:System.Drawing.Rectangle" /> structure ¾ for example, {X=20, Y=20, Width=100, Height=50}</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> class.</para>
      </summary>
      <param name="components">The components to include in the toolbox.</param>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IsNamedColor">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is a pre-defined color. Pre-defined colors are represented by the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Bisque">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>
        <para>
       Single-sided printing.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MintCream">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Violet">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PeachPuff">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>
        <para>Gets or sets an array of custom dashes and spaces.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>
    Cleans up Windows resources for this
 <see cref="T:System.Drawing.StringFormat" />.
 </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>
        <para>
       Large-format paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified file.</para>
      </summary>
      <param name="filename">
        The name of the bitmap file.
      </param>
      <param name="useIcm">
        Set to <see langword="true" /> to use color correction for this <see cref="T:System.Drawing.Bitmap" /> object; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>
        <para>Specifies that the existing region is replaced by the result of the new region being removed from the existing region. Said differently, the new region is excluded from the existing region.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.
      </param>
      <param name="fillMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Size" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Size" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Size" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>
        <para>Contains the graphical data that makes up a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Tan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> object defined with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration.</para>
      </summary>
      <param name="rect">
        Defines the portion of this <see cref="T:System.Drawing.Bitmap" /> object to copy.
      </param>
      <param name="format">
        Specifies the <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the destination <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>
        <para>Not used in GDI+ version 1.0. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>
        <para>
       Letter extra transverse
       paper (9.275 in. by 12
       in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>
        <para>Returns the cell ascent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> object of the specified style. For information about font metrics, see <see langword="Obtaining Font Metrics" />.</para>
      </summary>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that contains style information for the font.
      </param>
      <returns>
        <para>The cell ascent for this <see cref="T:System.Drawing.FontFamily" /> object that uses the specified <see cref="T:System.Drawing.FontStyle" /> enumeration .</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>
        <para>Specifies a 180-degree rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>
        <para>Manually fed paper.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>
        <para> Prevents access to printers.
   <see langword="NoPrinting" /> is a subset of <see langword="SafePrinting" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>
        <para>A default color map.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Beige">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>
        <para>Clears the color remap table for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>
        <para>See <see langword="Graphics.SmoothingMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>
        <para>Specifies a custom line cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object this method creates, cast as an <see langword="object" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>
        <para>Returns a hash code.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>
        <para>See <see cref="M:System.Drawing.GraphicsEndContainer" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>
        <para>Specifies that all the records in the metafile are EMF+ records, which can be displayed by GDI+ but not by GDI.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.SolidBrush" /> object of the specified color.</para>
      </summary>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that represents the color of this brush.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>
        <para>Two clipping regions are combined by taking the union of both.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws a line connecting the two points specified by coordinate pairs.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="x1">
        x-coordinate of the first point.
      </param>
      <param name="y1">
        y-coordinate of the first point.
      </param>
      <param name="x2">
        x-coordinate of the second point.
      </param>
      <param name="y2">
        y-coordinate of the second point.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for <paramref name="image" />.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>
        <para> Gets or sets the top margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>Begins the control sequence that determines when and how to print a page in a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" qualify="true" /> property of this parameter will be <see langword="null" />. The value returned from the <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> method will be used to set this property.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> object that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>
        <para>
       Low resolution.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Encoder" /> class from the specified globally unique identifier (GUID). The GUID specifies an image encoder parameter category.</para>
      </summary>
      <param name="guid">
        A globally unique identifier that identifies an image encoder parameter category.
      </param>
    </member>
    <member name="M:System.Drawing.Rectangle.GetHashCode">
      <summary>
        <para>Returns the hash code for this <see cref="T:System.Drawing.Rectangle" /> structure. For information about the use of hash codes, see <see langword="Object.GetHashCode" />.</para>
      </summary>
      <returns>
        <para>An integer that represents the hashcode for this rectangle.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with this <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Drawing.SizeF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class from the specified existing <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <param name="size">
        The <see cref="T:System.Drawing.SizeF" />from which to create the new <see cref="T:System.Drawing.SizeF" />.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string can be supplied to name the file.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="emfType">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 64-bit integers. The pair of integers represents a range of integers, the first integer being the smallest number in the range, and the second integer being the largest number in the range. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeLongRange" />, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="rangebegin">
        A 64-bit integer that represents the smallest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="rangeend">
        A 64-bit integer that represents the largest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>
        <para>
       People's Republic of
       China #8 envelope (120 mm
       by 309
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>
        <para> Gets the horizontal printer resolution,
       in dots per inch.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>
        <para>Gets the vertical resolution of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>
        <para>Gets the horizontal resolution of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>
        <para> Gets or sets the printer settings associated
 with the page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of a menu's background.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns the color depth (number of bits per pixel) of the specified pixel format.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration member specifying the format for which to find the size.
      </param>
      <returns>
        <para>The color depth of the specified pixel format.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>
        <para>Specifies the display and layout information for text strings.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object can be added.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>
        <para>Copies the relevant information out of the given handle and
      into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</para>
      </summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure.</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>
        <para>See <see langword="Graphics.Clear" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
    Specifies the starting point of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
 </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>
    Specifies a default Bezier curve.
 </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path.
      </param>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>
        <para>Specifies the device unit as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>
        <para>Creates a GDI+ <see cref="T:System.Drawing.Icon" /> object from the specified Windows handle to an icon (HICON).</para>
      </summary>
      <param name="handle">
        A Windows handle to an icon.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Icon" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>
        <para>Specifies how pixels are offset during rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkViolet">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>
        <para>Standard paper sources.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of selected items. This includes selected menu items as well as selected text. For example, the brush may be the color used for the background of selected items in a list box.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>
        <para>See Graphics.<see langword="TransformPoints" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Chartreuse">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>
        <para>Captures the pages of a document as a series of images.</para>
      </summary>
      <returns>
        <para>An array of type <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> that contains the pages of a <see cref="T:System.Drawing.Printing.PrintDocument" /> as a series of images.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Menu">
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>
        <para>Gets or sets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Selects the specified toolbox item.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>
    Specifies a path marker.
 </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>
        <para>Specifies the alignment of a <see cref="T:System.Drawing.Pen" /> object in relation to the theoretical, zero-width line.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>
        <para>Specifies an array of <see cref="T:System.Drawing.CharacterRange" /> structures that represent the ranges of characters measured by a call to the <see langword="Graphics.MeasureCharacterRanges" /> method.</para>
      </summary>
      <param name="ranges">
        An array of <see cref="T:System.Drawing.CharacterRange" /> structures that specifies the ranges of characters measured by a call to the <see langword="Graphics.MeasureCharacterRanges" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>
        <para>Clears the threshold value for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts in the specified order.</para>
      </summary>
      <param name="sx">
        The transform scale factor in the x-axis direction.
      </param>
      <param name="sy">
        The transform scale factor in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>
        <para>See <see langword="Graphics.Save" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.SetClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>
        <para>Pens for all the standard colors. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.X">
      <summary>
        <para>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Y">
      <summary>
        <para>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>
        <para>Specifies that the stack of all graphics operations is flushed immediately.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines whether  this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="GetProperties" /> object should be called to find the properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>
        <para>Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:100.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>
        <para>Gets the Windows handle for this <see cref="T:System.Drawing.Icon" /> object. This is not a copy of the handle; do not free it.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Color">
      <summary>
        <para>Represents an ARGB color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>
        <para>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into the two specified arrays.</para>
      </summary>
      <param name="points">
        Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.
      </param>
      <param name="types">
        Upon return, contains an array of bytes that represents the types of points in the path.
      </param>
      <param name="startIndex">
        Specifies the starting index of the arrays.
      </param>
      <param name="endIndex">
        Specifies the ending index of the arrays.
      </param>
      <returns>
        <para>The number of points copied.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSalmon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleVioletRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures  that define the spline.
      </param>
      <param name="offset">
        Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.
      </param>
      <param name="numberOfSegments">
        Number of segments after the starting point to include in the curve.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGoldenrod">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>
      Creates a new font name converter.
 </summary>
    </member>
    <member name="P:System.Drawing.Color.MintCream">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>
        <para>
       A3 extra paper
       (322 mm by 445 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event. It is
   called before a page
   prints.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>
        <para> Gets the names of all printers installed on the computer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>
        <para>Gets a collection of toolbox items from the toolbox that match the specified category.</para>
      </summary>
      <param name="category">The toolbox item category to retrieve all the toolbox items from.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items
   that are associated with the specified category.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
        <para>Adds the specified toolbox item to the toolbox in the specified category.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture used to represent the font.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This method will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Int32,System.Int32)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point  defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>
        <para>
       A5 rotated paper
       (210 mm by 148 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.BlueViolet">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the color remap table for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the color remap table cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.WhiteSmoke">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Height">
      <summary>
        <para>Gets or sets the height of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Rectangle" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Rectangle" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Purple">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>
        <para>Specifies a line consisting of a repeating pattern of dash-dot-dot.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</para>
      </summary>
      <param name="original">
        The icon to load the different size from.
      </param>
      <param name="width">
        The width of the new icon.
      </param>
      <param name="height">
        The height of the new icon.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>
        <para>Gets the Joint Photographic Experts Group (JPEG) image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>
        <para>Gets the enhanced Windows metafile image format (EMF).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.FrameDimension" /> class using the specified <see langword="Guid" /> structure.</para>
      </summary>
      <param name="guid">
        A <see langword="Guid" /> structure that contains a GUID  for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the specified destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> that specifies the context for this type conversion.
      </param>
      <param name="destinationType">
        The <see langword="Type" /> that represents the type to which you want to convert this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLightLight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object to intersect with the current region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image.</para>
      </summary>
      <param name="bitmap">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>
        <para>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="destSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.
      </param>
      <param name="srcSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.
      </param>
      <param name="pts">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension. The drawing begins offset from the beginning of the array.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="offset">
        Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.
      </param>
      <param name="numberOfSegments">
        Number of segments after the starting point to include in the curve.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transform.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of the rotation.
      </param>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the center of the rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the rotation is applied.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>
        <para>
       People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the bi-level mapping threshold for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <paramref name="type" /> parameter.</para>
      </summary>
      <param name="threshold">
        A threshold value between 0.0 and 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ object (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>
        <para>Gets the last point in the <see langword="PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.PointF" /> structure that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>
        <para>Specifies the system to use when evaluating coordinates.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>
        <para>
       JIS B4 rotated
       paper (364 mm by 257
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>
        <para>Specifies the CCITT3 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>
        <para>Specifies the CCITT4 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Loads the state of this toolbox item 
      from the stream.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to load from.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the stream characteristics.</param>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Point.Empty">
      <summary>
        <para>Represents a null <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>
        <para>Specifies no pixel offset.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>
        <para>Specifies a hatch fill.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.YellowGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>
        <para>The unit of measurement is 1 inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>
        <para>
       Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned to the right of
       the line being drawn.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.OliveDrab">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>
        <para>The pixel format is undefined.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CadetBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>
        <para>Specifies that each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>
        <para>Gets the W3C Portable Network Graphics (PNG) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>
        <para>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a range of numbers.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>
        <para>Sets tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="firstTabOffset">
        The number of spaces between the beginning of a line of text and the first tab stop.
      </param>
      <param name="tabStops">
        An array of distances (in number of spaces) between tab stops.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>
        <para>This callback is used with <see cref="T:Sytsem.Drawing.Graphics.EnumerateMetafileProc" /> to play a record of metafile data.</para>
      </summary>
      <param name="recordType">
      Member of the <see cref="T:System.Drawing.EmfPlusRecordType" /> enumeration that specifies the type of metafile record.
   </param>
      <param name="flags">
      Set of flags that specify attributes of the record.
   </param>
      <param name="dataSize">
      Number of bytes in the record data.
   </param>
      <param name="recordData">
      Array of bytes that contains the record data.
   </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="width">
        The width of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="height">
        The height of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an object of this type by using a specified set of property values for the object. This is useful for creating nonchangeable objects that have changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <see langword="GetProperties" /> object.
      </param>
      <returns>
        <para>The newly created object, or null if the object could not be created. The default implementation returns null.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para> Returns whether changing a value on this
 object requires a call to <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a
 new value, using the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
        <para>
          <see langword="true" /> if changing a property on this
 object requires a call to <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new
 value; otherwise, <see langword="false" />. This method always returns
<see langword="true" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.WhiteSmoke">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lavender">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.PointConverter">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Point" /> object from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>
        <para>Returns the number of frames of the specified dimension.</para>
      </summary>
      <param name="dimension">
        A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.
      </param>
      <returns>
        <para>The number of frames in the specified dimension.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>
        <para>Normal text.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IsKnownColor">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is a pre-defined color. Pre-defined colors are represented by the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Ivory">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>
        <para>Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>
        <para>Encapsulates an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
      <param name="fillMode">
        A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>
        <para>Allows declarative printing permission checks.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkOrange">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>
        <para>
       Statement paper (5.5
       in. by 8.5 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PapayaWhip">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>
    Specifies a cubic Bezier curve.
 </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item can
      be used by the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to test for support for the <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified object is compatible with the
   specified designer host; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Turquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>
        <para>
       Ledger paper (17
       in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>
        <para>Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Bounds">
      <summary>
        <para>Gets or sets the rectangle that indicates the area in which the painting should be done.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.String" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.String" /> to get.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Graphics" /> used to paint the
    page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file, in the specified format, and with the specified codec parameters.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoder">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" />  object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" />  object to use for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>
        <para>
       DL envelope
       (110 mm by 220 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>
        <para>
       The printer's default duplex setting.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.</para>
      </summary>
      <param name="red">
        The red component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="green">
        The green component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="blue">
        The blue component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>
        <para>See <see langword="Graphics.ResetClip" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>
        <para> Gets the number of different paper sizes in the collection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>
        <para>Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right layout, the far position is right. In a right-to-left layout, the far position is left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</para>
      </summary>
      <param name="point1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.
      </param>
      <param name="point2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>
        <para>Gets the page dimension.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>
        <para>
       Italy envelope (110 mm by 230 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>
        <para>Underlined text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>
        <para>Specifies flags that are passed to the flags parameter of the <see langword="Bitmap.LockBits" /> method. The <see langword="LockBits" /> method locks a portion of an image so that you can read or write the pixel data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>
        <para>Gets the number of elements in the <see langword="PathPoints" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.AliceBlue">
      <summary>
        <para>Gets a sytem-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Compares two <see cref="T:System.Drawing.Point" /> objects. The result specifies whether the values of the <see langword="X" /> or <see langword="Y" /> properties of the two <see cref="T:System.Drawing.Point" /> objects are unequal.</para>
      </summary>
      <param name="left">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <param name="right">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the values of either the <see langword="X" /> properties or the <see langword="Y" /> properties of <paramref name="left" /> and <paramref name="right" /> differ; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>
        <para>Specifies the quality level to use during compositing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a window.</para>
      </summary>
      <param name="hwnd">
        Handle to a window.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified window handle.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
        <para>Creates a gradient with a center color and a linear falloff to one surrounding color.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four, 32-bit integers. The four integers represent a range of fractions. The first two integers represent the smallest fraction in the range, and the remaining two integers represent the largest fraction in the range. Sets the <see langword="ValueType" /> property to ValueTypeRationalRange, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator1">
        A 32-bit integer that represents the numerator of the smallest fraction in the range. Must be nonnegative.
      </param>
      <param name="denominator1">
        A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative.
      </param>
      <param name="numerator2">
        A 32-bit integer that represents the numerator of the largest fraction in the range. Must be nonnegative.
      </param>
      <param name="denominator2">
        A 32-bit integer that represents the denominator of the largest fraction in the range. Must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>
        <para>
       A4 rotated paper
       (297 mm by 210 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.Finalize">
      <summary>
      We need to know when we're finalized.
 </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
        <para>Creates and returns an inflated copy of the specified <see cref="T:System.Drawing.Rectangle" /> structure. The copy is inflated by the specified amount. The original <see cref="T:System.Drawing.Rectangle" /> structure remains unmodified.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> with which to start. This rectangle is not modified.
      </param>
      <param name="x">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> horizontally.
      </param>
      <param name="y">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> vertically.
      </param>
      <returns>
        <para>The inflated <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>
        <para>Specifies a hatch that has the appearance of a trellis.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>Begins the control sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> object and opens and uses a new graphics container with the specified scale transformation.</para>
      </summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the container.
      </param>
      <param name="srcrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the container.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the state of this <see cref="T:System.Drawing.Graphics" /> object at the time of the method call.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the polygon.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>
        <para>Specifies the types of images and colors that will be affected by the color and grayscale adjustment settings of an <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of text in a 3-D element.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>
        <para>Gamma correction is used.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>
        <para>Creates a GDI+ <see langword="LOGFONT" /> structure from this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="logFont">
        An <see langword="Object" /> object that represents the <see langword="LOGFONT" /> structure that this method creates.
      </param>
      <param name="graphics">
        A <see cref="T:System.Drawing.Graphics" /> object that provides additional information for the <see langword="LOGFONT" /> structure.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions. This method prepends the translation to the transformation.</para>
      </summary>
      <param name="dx">
        The dimension by which to translate the transformation in the x direction.
      </param>
      <param name="dy">
        The dimension by which to translate the transformation in the y direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, from a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>
        <para>Identifies a record that is the EMF+ header.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>
        <para>Specifies dashed horizontal lines.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>
        <para>Specifies alignment of content on the drawing surface.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>
        <para>See <see langword="Graphics.DrawPath" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>
        <para>
       People's Republic of
       China #4 envelope (110 mm
       by 208
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>
        <para>
       People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>
        <para>
       People's Republic
       of China #7 envelope (160 mm
       by 230
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Goldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Thistle">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditorEditStyle">
      <summary>
        <para>Specifies identifiers that indicate the value editing style of
      a <see cref="T:System.Drawing.Design.UITypeEditor" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>
        <para>A generic Serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemIcons" /> class is an <see cref="T:System.Drawing.Icon" /> object for Windows system-wide icons. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string can be provided to name the file.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="desc">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>
        <para>Defines an object used to draw lines and curves. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format or the Windows enhanced metafile plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format or the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Peru">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>
        <para>The pixel format is 16 bits per pixel. The color information specifies 65536 shades of gray. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightPink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.ToSize">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.SizeF" /> to a <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Size" /> sturcture.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>
        <para>Gets the horizontal resolution, in pixels-per-inch, of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a 32-bit signed integer from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" />type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para> A 32-bit signed integer that represents the converted 
    <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>
        <para>Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumOrchid">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SeaShell">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>
        <para>Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Snow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>
        <para>Gets a byte value that specifies the GDI character set that this <see cref="T:System.Drawing.Font" /> object uses. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>
        <para>Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 64-bit integers. The two arrays represent an array integer ranges. Sets the <see langword="ValueType" /> property to ValueTypeLongRange, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="rangebegin" /> array, which must be the same as the number of elements in the <paramref name="rangeend" /> array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="rangebegin">
        An array of 64-bit integers that specifies the minimum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="rangeend">
        An array of 64-bit integers that specifies the maximum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object. A maximum value of a given index is paired with the minimum value of the same index.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOliveGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCyan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Lime">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>
        <para>Specifies a 270-degree rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumAquamarine">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>
        <para>
       Japanese double postcard
       (200 mm by 148
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>
        <para>Gets or sets the world transformation for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Indigo">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the rectangle.
      </param>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.Point" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>
        <para>Specifies a 180-degree rotation without flipping.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>
        <para>
       A5 transverse paper
       (148 mm by 210
       mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDark">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Design.ToolboxItem" /> at the specified index.</para>
      </summary>
      <param name="index">The index of the object to get or set.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.SizeF" /> structures are different.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> structure on the left of the inequality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> structure on the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; <see langword="false" /> if <paramref name="sz1" /> and <paramref name="sz2" /> are equal.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>
        <para>
       Japanese postcard (100 mm by 148 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>
        <para> Gets or sets the bottom margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para> Completes the control sequence that determines when and how
      to preview a page in a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document.</param>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.RectangleF" /> by the specified amount.</para>
      </summary>
      <param name="size">
        The amount to inflate this rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>
        <para>Gets or sets the origin of the drawing surface relative to the display surface.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>
        <para>Specifies that text is right to left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>
        <para>Makes the default transparent color transparent for this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>
        <para>Gets a value indicating whether the printer
      supports double-sided printing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>
        <para>The pixel data is read-only.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns a value that indicates whether the pixel format for this <see cref="T:System.Drawing.Image" /> object contains alpha information.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="pixfmt" /> parameter contains alpha information; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PapayaWhip">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text of selected items. For example, the <see cref="T:System.Drawing.Color" /> structure may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromName(System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified name of a pre-defined color.</para>
      </summary>
      <param name="name">
        A string that is the name of a pre-defined color. Valid names are the same as the names of the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="angle">
        Angle of rotation in degrees.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets the collection of toolbox items that are associated
      with the specified designer host and category from the toolbox.</para>
      </summary>
      <param name="category">The toolbox item category to retrieve the toolbox items from.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items
   that are associated with the specified category and designer host.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>
        <para>Plays an EMF+ file.</para>
      </summary>
      <param name="recordType">
        An <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> enumeration that specifies the type of metafile record being played.
      </param>
      <param name="flags">
        A value that specifies additional information about the metafile.
      </param>
      <param name="dataSize">
        The size of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="data">
        An array of values containing the <see cref="T:System.Drawing.Imaging.Metafile" /> object instructions.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Blue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>
        <para>Specifies a linear gradient fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>
        <para> Gets or sets an array containing the components to add to the toolbox.
      </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>
        <para>Specifies that coordinates are in the device coordinate context. On a computer screen the device coordinates are usually measured in pixels.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Cyan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transform by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class from the specified dimensions.</para>
      </summary>
      <param name="width">
        The width component of the new <see cref="T:System.Drawing.Size" />.
      </param>
      <param name="height">
        The height component of the new <see cref="T:System.Drawing.Size" />.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>
        <para>
       The selected pages are printed.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.IPropertyValueUIService">
      <summary>
        <para> Provides an interface that allows management of the property list of the Properties
      window.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>
        <para>Encapsulates the data that makes up a <see cref="T:System.Drawing.Region" /> object. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AliceBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Silver">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>
        <para> Gets the paper source trays that are available on the printer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>
        <para>Causes control characters such as the left-to-right mark to be shown in the output with a representative glyph.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>
        <para>Specifies that each character is drawn using its antialiased glyph bitmap without hinting. Better quality due to antialiasing. Stem width differences may be noticeable because hinting is turned off.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="width">
        Width of the rectangle to test for visibility.
      </param>
      <param name="height">
        Height of the rectangle to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>
        <para>Gets or sets the format of the pixel information in the <see cref="T:System.Drawing.Bitmap" />object that returned this <see cref="T:System.Drawing.Imaging.BitmapData" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Azure">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>
        <para> Gets or sets the page number of the first page to print.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AntiqueWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>
        <para> Gets the vertical printer resolution,
       in dots per inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>
        <para>Specifies that each value in the array is a 16-bit, unsigned integer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>
        <para>Specifies a flat line cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>
        <para>Specifies that dots per inch information is stored in the image. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Pink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.TextureBrush" /> class is a <see cref="T:System.Drawing.Brush" /> object that uses an image to fill the interior of a shape. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>
        <para>Specifies how different clipping regions can be combined.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>
        <para>Creates a copy of this <see cref="T:System.Drawing.Printing.PageSettings" /> object.</para>
      </summary>
      <returns>
        <para>A copy of this object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <param name="arguments">
        An optional array of arguments to use when doing the conversion. The number and content of these arguments is dependent on the implementer of the value formatter.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transform to apply to the path before widening.
      </param>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.FontFamily" /> object to a human-readable string representation.</para>
      </summary>
      <returns>
        <para>The string that represents this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>
        <para>Returns a Windows handle to an enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <returns>
        <para>A Windows handle to this enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>
        <para>Clones the <see cref="T:System.Drawing.Icon" /> object, creating a duplicate image.</para>
      </summary>
      <returns>
        <para>An object that can be cast to an <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property of this <see cref="T:System.Drawing.TextureBrush" /> object to identity.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Determines whether the current permission object is a subset of
 the specified permission.</para>
      </summary>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
      <returns>
        <para>
          <see langword="true" /> if the current permission object
 is a subset of <paramref name="target" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Red">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>
        <para> Refreshes the state of the toolbox items.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>
        <para>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Ceiling(System.Drawing.PointF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by rounding the values of the <see cref="T:System.Drawing.PointF" /> object to the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> object and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that multiplies the world transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the fill properties of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Point" /> class from a <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the coordinates for the new <see cref="T:System.Drawing.Point" />.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>
   Initializes the current <see cref="T:System.Drawing.Design.ToolboxItem" /> with the specified type.
</summary>
      <param name="type">The Type to initialize this <see cref="T:System.Drawing.Design.ToolboxItem" /> with.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>
        <para>Specifies default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Beige">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Adds the specified project-linked toolbox item to the toolbox in the specified category.</para>
      </summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="F:System.Drawing.KnownColor.OrangeRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>
        <para>Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object to the next marker in the path and returns the start and stop indexes by way of the out parameters.</para>
      </summary>
      <param name="startIndex">
        [out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.
      </param>
      <param name="endIndex">
        [out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <paramref name="startIndex" /> points.
      </param>
      <returns>
        <para>The number of points between this marker and the next.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>
        <para>Specifies a device pixel as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>
        <para>Gets the width and height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>
        <para>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the point to test for visibility.
      </param>
      <param name="y">
        y coordinate of the point to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with 1-inch margins.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>
        <para>Returns the height of this <see cref="T:System.Drawing.Font" /> object when drawn by the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="graphics">
        A <see cref="T:System.Drawing.Graphics" /> object that represents the graphics context in which to measure this <see cref="T:System.Drawing.Font" /> object.
      </param>
      <returns>
        <para>The height, in the specified graphics context, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>
        <para>Specifies the different patterns available for <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> objects.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>
        <para> Provides a base implementation of a toolbox item.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>
        <para>Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSlateBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Fuchsia">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>
        <para>Gets style information for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>
        <para>Specifies the type of color data in the system palette. The data can be color data with alpha, grayscale data only, or halftone data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain one <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillPie" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Size)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.Rectangle" /> by the specified amount.</para>
      </summary>
      <param name="size">
        The amount to inflate this rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.WindowText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not return any properties. A simple implementation of this method can just call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>
        <para>Specifies the format of the image. Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>
        <para>Specifies a 270-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Plum">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</para>
      </summary>
      <param name="sx">
        The factor by which to scale the transformation in the x-axis direction.
      </param>
      <param name="sy">
        The factor by which to scale the transformation in the y-axis direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Collected">
    </member>
    <member name="P:System.Drawing.Color.LightSkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>
        <para>
       A printer-specific paper source.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets a collection that contains a set of standard values for the data type this validator is designed for. Returns <see langword="null" /> if the data type does not support a standard set of values.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <returns>
        <para>A collection that contains a standard set of valid values, or <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object from the specified generic font family.</para>
      </summary>
      <param name="genericFamily">
        The <see cref="T:System.Drawing.Text.GenericFontFamilies" /> enumeration from which to create the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures .</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Size">
      <summary>
        <para>Gets or sets the size of this <see cref="T:System.Drawing.Rectangle" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>
        <para>
       Japanese Chou #4 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Point)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> to test.
      </param>
      <returns>
        <para>This method returns<see langword=" true" /> if the point represented by <paramref name="pt" /> is contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from a resource in the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies where to find the image from which to construct the new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width, height, and fill property. Whether or not an arrow end cap is filled depends on the argument passed to the <paramref name="isFilled" /> parameter.</para>
      </summary>
      <param name="width">
        The width of the arrow.
      </param>
      <param name="height">
        The height of the arrow.
      </param>
      <param name="isFilled">
        <see langword="true" /> to fill the arrow cap; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>
        <para>Specifies that the image is to be rotated 180 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line segments.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>
        <para>Specifies two modes for color component values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> object and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="matrix">
        4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that multiplies the world transformation.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the render method parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Round(System.Drawing.PointF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by rounding the <see cref="T:System.Drawing.Point" /> object values to the nearest integer.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Accelerator">
    </member>
    <member name="P:System.Drawing.Color.SeaShell">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>
        <para>Specifies horizontal lines that are composed of tildes.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>
        <para>Specifies horizontal and vertical lines that cross.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SaddleBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>
        <para>Gets the Windows metafile (WMF) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.None">
      <summary>
        <para> Provides no interactive user interface (UI) component.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>
        <para>
       The middle bin of a printer.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>
        <para>Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>
        <para>
       A paper cassette.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Updates the brush's transformation matrix with the product of the brush's transformation matrix  multiplied by another matrix.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that will be multiplied by the brush's current transformation matrix.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies in which order to multiply the two matrices.
      </param>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of a window frame.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the remap table as specified by the <see cref="T:System.Drawing.Imaging.ColorMap" /> object for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration.</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>
        <para>Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>
        <para>Specifies the LZW compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the Compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with curves that enclose the area that is filled when this path is drawn by the specified pen.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transform to apply to the path before widening.
      </param>
      <param name="flatness">
        A value that specifies the flatness for curves.
      </param>
    </member>
    <member name="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if changing a value on this object should require a call to <see langword="CreateInstance" /> to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="CreateInstance" /> method should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system asterisk icon (WIN32: IDI_ASTERISK).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>
        <para>Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</para>
      </summary>
      <param name="angle">
        The angle (extent) of the rotation.
      </param>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the center of the rotation.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SizeF.Width">
      <summary>
        <para>Gets or sets the horizontal component of this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>
        <para>Returns the cell descent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> object of the specified style. For information about font metrics, see <see langword="Obtaining Font Metrics" />.</para>
      </summary>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that contains style information for the font.
      </param>
      <returns>
        <para>The cell descent metric for this <see cref="T:System.Drawing.FontFamily" /> object that uses the specified <see cref="T:System.Drawing.FontStyle" /> enumeration .</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>
        <para>Gets or sets a value indicating the presence of a placeable metafile header.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSkyBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified data stream, using embedded color management information in that stream.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="useEmbeddedColorManagement">
        Set to <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>
        <para>Specifies the millimeter as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.RoyalBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.StringTrimming" /> enumeration for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>
        <para>Specifies bilinear interpolation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.
      </param>
      <param name="plgpts">
        An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> structures that represents the types of data in the corresponding elements of the <see langword="Points" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a geometric transform to apply to the path.
      </param>
      <param name="warpMode">
        A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.
      </param>
      <param name="flatness">
        A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.
      </param>
    </member>
    <member name="P:System.Drawing.Color.LightSteelBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>
        <para>Specifies the type of warp transformation applied in a <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp" /> method.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if changing a value on this object should require a call to <see langword="CreateInstance" /> to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="CreateInstance" /> should be called when a change is made to one or more properties of this object; otherwise, false.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Cornsilk">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DodgerBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
 event.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SRDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see langword="WmfPlaceableFileHeader" /> object.</para>
      </summary>
      <param name="hmetafile">
        A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="wmfHeader">
        A <see langword="WmfPlaceableFileHeader" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Orchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Gray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
        <para> Paints a representation of the value of an
      object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> that indicates what to paint and where to paint it.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>
        <para>
       Japanese rotated postcard
       (148 mm by 100
       mm). Requires Windows
       98,
       Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDarkDark">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transformation by the specified factors in the specified order.</para>
      </summary>
      <param name="sx">
        The factor by which to scale the transformation in the x-axis direction.
      </param>
      <param name="sy">
        The factor by which to scale the transformation in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>
        <para>Adds a polygon to this path.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>
        <para>Gets or sets the property value.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>
        <para> Specifies the type of printing that code is allowed to do.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from a handle to the specified existing GDI region.</para>
      </summary>
      <param name="hrgn">
        A handle to an existing <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Size">
      <summary>
        <para>Gets or sets the size of this <see cref="T:System.Drawing.RectangleF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Width">
      <summary>
        <para>Gets or sets the width of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>
        <para>Standard paper (10 in. by 14 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>
        <para>
       People's Republic of
       China #10 envelope (324 mm
       by 458
       mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Name">
      <summary>
        <para>Gets the name of this <see langword="Color " />Name. This will either return the user-defined name of the color, if the color was created from a name, or the name of the known color. For custom colors, the RGB value will be returned.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>
        <para>Gets the types of the corresponding points in the <see langword="PathPoints" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="layoutRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the text.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>
        <para>Specifies the world unit as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</para>
      </summary>
      <param name="fillPath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.
      </param>
      <param name="strokePath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.
      </param>
      <param name="baseCap">
        The LineCap from which to create the custom cap.
      </param>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>
        <para>Display the hot-key prefix.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetProperties" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.X">
      <summary>
        <para>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Y">
      <summary>
        <para>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line segments.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object with the specified <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <param name="mode">
        A <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration member that specifies whether to adjust colors for grayscale, colors, or both grayscale and colors.
      </param>
      <param name="type">
        A <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration member that specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />,  and so on) that use the color-adjust information.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class with
   serialized data.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>
        <para>Gets or sets the type of printing allowed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>
        <para>Empties the <see langword="PathPoints" /> and <see langword="PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see langword="Alternate" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>
        <para>Specifies horizontal lines that are composed of zigzags.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
        <para>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>
        <para>Gets a globally unique identifier (GUID) that identifies an image encoder parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the compression parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Size.Empty">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCoral">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>
        <para>Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to have the elements of the identity matrix.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>
        <para>Gets or sets an array of blend positions for the gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is the identity matrix.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.CharacterRange" /> structure, specifying a range of character positions within a string.</para>
      </summary>
      <param name="First">
        The position of the first character in the range. For example, if <paramref name="First" /> is set to 0, then the first position of the range is position 0 in the string.
      </param>
      <param name="Length">
        The number of positions in the range.
      </param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>
        <para>Starts the document's printing process.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="shearX">
        The horizontal shear factor.
      </param>
      <param name="shearY">
        The vertical shear factor.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the shear is applied.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, and a height and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Find">
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>
        <para>Indicates whether the <see cref="T:System.Drawing.Design.ToolboxItem" /> is currently locked.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>
        <para>Gets or set a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="fillMode">
        The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Magenta">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.
      </param>
      <param name="plgpts">
        An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left coners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>
        <para>The new operation is applied before the old operation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>
        <para>Specifies the available cap styles with which a <see cref="T:System.Drawing.Pen" /> object can end a line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>
        <para>Specifies no rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>
        <para>Specifies no rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.PointF" /> by the negetive of a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <returns>
        <para>Returns the translated <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration.</para>
      </summary>
      <param name="options">
        The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>
        <para>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>
        <para> Gets the size of the printed page, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard placed diagonally.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.SetClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>
        <para>Returns the height, in pixels, of this <see cref="T:System.Drawing.Font" /> object when drawn to a device with the specified vertical resolution.</para>
      </summary>
      <param name="dpi">
        The vertical resolution, in dots per inch, used to calculate the height of the font.
      </param>
      <returns>
        <para>The height, in pixels, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointF.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.PointF" /> object.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.PointF" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>
        <para>Gets or sets the ID of the property.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>
        <para>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to a specified array of points.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="M:System.Drawing.RectangleConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>
        <para>Encapsulates a <see cref="T:System.Drawing.Brush" /> object with a linear gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>
        <para>
       A5 paper (148
       mm by 210
       mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Magenta">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Add(System.IntPtr)">
    </member>
    <member name="T:System.Drawing.SizeF">
      <summary>
        <para>Represents the size of a rectangular region with an ordered pair of width and height.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>
        <para>Encapsulates a GDI+ drawing surface. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object with its original size at the location specified by a coordinate pair.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.Region" /> object that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)~System.Drawing.SizeF">
      <summary>
    Converts the specified <see cref="T:System.Drawing.Size" /> to a
 <see cref="T:System.Drawing.SizeF" />.
 </summary>
      <param name="p">
    The Size to convert.
 </param>
      <returns>
    The <see cref="T:System.Drawing.SizeF" /> conversion of <paramref name="p" />.
 </returns>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>
        <para>Encapsulates a metadata property to be included in an image file. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>
        <para>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>
        <para>Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style <see langword="Cross" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>
        <para>Gets or sets the maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>
        <para>Specifies that the image is stored using a YCBCR color space. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>
        <para>Gets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.ToPointF">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.SizeF" /> to a <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.
      </param>
    </member>
    <member name="M:System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF">
      <summary>
        <para>
       Creates a <see cref="T:System.Drawing.PointF" /> with the coordinates of the specified
    <see cref="T:System.Drawing.Point" /> 
    .
 </para>
      </summary>
      <param name="p">
    A <see cref="T:System.Drawing.Point" /> that specifies the coordinates for the new <see cref="T:System.Drawing.PointF" /> .
 </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.RectangleF" /> structure that represents the intersection of two rectangles. If there is no intersection, null is returned.</para>
      </summary>
      <param name="a">
        A rectangle to intersect.
      </param>
      <param name="b">
        A rectangle to intersect.
      </param>
      <returns>
        <para>A third <see cref="T:System.Drawing.RectangleF" /> structure the size of which represents the overlapped area of the two specified rectangles.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>
        <para>Gets or sets an array of blend factors for the gradient.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>
        <para>
       The lower bin of a printer.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is invertible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Transforms this <see cref="T:System.Drawing.Region" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para> Returns whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to which you want to convert.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
   <see langword="false" />. </para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>
        <para>Specifies a line consisting of dots.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    </member>
    <member name="M:System.Drawing.Color.GetSaturation">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) saturation value for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The saturation of this <see cref="T:System.Drawing.Color" /> structure. The saturation ranges from 0.0 through 1.0, where 0.0 is grayscale and 1.0 is the most saturated.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
      <param name="gdiVerticalFont">
        A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font.
      </param>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>
        <para>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects available for the specified graphics context.</para>
      </summary>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object from which to return <see cref="T:System.Drawing.FontFamily" /> objects.
      </param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.FontFamily" /> objects available for the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkKhaki">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object using the specified order.</para>
      </summary>
      <param name="scaleX">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.
      </param>
      <param name="scaleY">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Implicit(System.Drawing.Point)">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Drawing.Point" /> to a <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
      <param name="p">
        The <see cref="T:System.Drawing.Point" /> to convert.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>
        <para>Specifies how the interior of a closed path is filled.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>
        <para>Specifies that the format is 16 bits per pixel; 5 bits are used for the red component, 6 bits are used for the green component, and 5 bits are used for the blue component. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>
        <para>Sets the caps used to start and end lines that make up this custom cap.</para>
      </summary>
      <param name="startCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.
      </param>
      <param name="endCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>
        <para>Standard paper (10 in. by 11 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Crimson">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from the specified file name.</para>
      </summary>
      <param name="imageFile">
        The file name for a 16 by 16 bitmap for the component.
      </param>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>
        <para>Specifies the direction of an image's rotation and the axis used to flip the image.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see langword="HatchStyle" /> enumeration, foreground color, and background color.</para>
      </summary>
      <param name="hatchstyle">
        The <see langword="HatchStyle" /> enumeration that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="foreColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="backColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of spaces between the lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>
        <para>Gets the size of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>
        <para>Provides flags for use with codecs.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style <see langword="ForwardDiagonal" />, and are triple its width, but are not antialiased.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</para>
      </summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</param>
      <param name="descriptor">The property associated with the icon that was double-clicked.</param>
      <param name="invokedItem">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</param>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.FontConverter">
      <summary>
        <para>Converts <see cref="T:System.Drawing.Font" /> objects from one data type to another. Access the <see cref="T:System.Drawing.FontConverter" /> class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>
        <para>Specifies that all EMF+ records in the metafile are associated with an alternate EMF record. Metafiles of type <see langword="EmfTypeEmfPlusDual" /> can be displayed by GDI or by GDI+.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Icon" /> object from which to load the newly sized icon.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.Size" /> structure that specifies the height and width of the new <see cref="T:System.Drawing.Icon" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>
        <para>Gets the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Salmon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.Reset">
      <summary>
        <para>Resets the UI item.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>
        <para>Defines a 5x5 matrix that contains the coordinates for the RGBA space. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color matrix. Not inheritable.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>
        <para>Reserved. Do not use.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>
        <para> Gets or sets the document name to display (for example, in a
      print status dialog box or printer queue) while printing the
      document.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>
        <para>Specifies individual channels in the CMYK (cyan, magenta, yellow, black) color space. This enumeration is used by the <see cref="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGoldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>
        <para> Gets the angle, in degrees, that the portrait orientation is rotated
      to produce the landscape orientation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemBrushes" /> class is a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of a Windows display element.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>
        <para> Copies the relevant information from the
   <see cref="T:System.Drawing.Printing.PageSettings" /> to the specified DEVMODE structure.</para>
      </summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure.</param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Ceiling(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by rounding the values of the <see cref="T:System.Drawing.Size" /> structureto the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 64-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeLong (32-bit), and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 64-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</para>
      </summary>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>
        <para>Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.Font" /> object and is identical to this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Drawing.Font" /> object and is identical to this <see cref="T:System.Drawing.Font" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> class.</para>
      </summary>
      <param name="uiItemImage">The icon to display. The image must must be 8 x 8 pixels.</param>
      <param name="handler">The handler to raise when the image is double-clicked.</param>
      <param name="tooltip">The <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> to display for the property that this <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> is associated with.</param>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>
        <para>Gets a generic monospace <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>
        <para>Gets a generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized.
      </param>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>
        <para>Gets or sets the handle of the metafile in memory.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>
        <para> Gets or sets the code's level of printing access.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Locks a <see cref="T:System.Drawing.Bitmap" /> object into system memory.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure specifying the portion of the <see cref="T:System.Drawing.Bitmap" /> to lock.
      </param>
      <param name="flags">
        An <see cref="T:System.Drawing.Imaging.ImageLockMode" /> enumeration specifying access level (read and write) for the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration specifying the data format of this <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Imaging.BitmapData" /> object containing information about this lock operation.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a value indicating whether the specified object is 
      a serialized toolbox item, using the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object to inspect.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is making this request.</param>
      <returns>
        <para>
          <see langword="true" /> if the object contains a
   toolbox item object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports a standard set of values that can be chosen from a list.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetStandardValues" /> must be called to find a common set of values the object supports; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>
        <para>Specifies that each value in the array is a 32-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlueViolet">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Sets a color-adjust matrix for image colors and a separate grayscale-adjust matrix for grayscale values.</para>
      </summary>
      <param name="newColorMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image grayscales from one color space to another.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>
        <para>The number of types specified.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>
        <para>Sets the wrap mode, color, and clamp.</para>
      </summary>
      <param name="mode">
        Specifies the wrap mode.
      </param>
      <param name="color">
        Address of a <see cref="T:System.Drawing.Color" /> structure. The default is <see cref="T:System.Drawing.Color" />().
      </param>
      <param name="clamp">
        Specifies whether to clamp the color at the image boundaries. If clamp is <see langword="true" />, clamp to the image boundary. Otherwise, there is no clamping.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>
        <para>Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice the width of <see langword="HatchStyleHorizontal" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image encoders built in to GDI+.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image encoders.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>
        <para>The unit of measurement is 1 pixel.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF">
      <summary>
    Converts the specified <see cref="T:System.Drawing.Rectangle" /> to a
 <see cref="T:System.Drawing.RectangleF" />.
 </summary>
      <param name="r">
    The <see cref="T:System.Drawing.Rectangle" /> to convert.
 </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Creates components from each type contained in this toolbox
      item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to host the toolbox item.</param>
      <returns>
        <para>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>
        <para>The pixel data uses a CMYK color space.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>When overridden in a derived class, begins the control sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>
        <para>Specifies that each character is drawn using its antialiased glyph bitmap with hinting. Much better quality due to antialiasing, but at a higher performance cost.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified data stream.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.GetHandleCount">
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>
        <para>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> object by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object horizontally.
      </param>
      <param name="dy">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the outlines of the rectangles.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>
        <para>Specifies that coordinates are in the world coordinate context. World coordinates are used in a nonphysical environment, such as a modeling environment.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>
        <para>Gets an array of the property IDs stored in this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>
        <para>
       C65 envelope (114
       mm by 229 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Navy">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.BitmapData" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>
        <para>Gets the width of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>
        <para>Indicates that the codec supports raster images (bitmaps). </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>
        <para>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <see langword="ImageCodecFlags" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.FloralWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>
        <para>Specifies that a frame is to be added to the page dimension of an image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.PointF" /> to a human readable string.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified file using embedded color management information in that file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="useEmbeddedColorManagement">
        Set to <see langword="true" /> to use color management information embedded in the image file; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>
        <para>Gets or sets the size, in bytes, of the header file.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>
        <para> Creates a copy of this <see cref="T:System.Drawing.Printing.PrinterSettings" /> object.</para>
      </summary>
      <returns>
        <para> A copy of this object.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>
        <para>Specifies style information applied to text.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>
        <para> Gets all the resolutions that are supported by this printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.ToString">
      <summary>
        <para>Creates a human-readable string that represents this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Size" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object are tiled.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <returns>
        <para>An <see langword="Object" /> object that can be cast to a <see cref="T:System.Drawing.Pen" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system warning icon (WIN32: IDI_WARNING).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
      <param name="fillMode">
        A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>
        <para>Grayscale data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.NeedCollection">
    </member>
    <member name="F:System.Drawing.KnownColor.Green">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Drawing.Design.ToolboxItem" />, if it exists in the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItem" /> to get the index of in the collection.</param>
      <returns>
        <para>The index of the specified <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>
        <para>You can use an <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object to pass an array of values to an image encoder. You can also use an <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object to receive a list of possible values supported by a particular parameter of a particular image encoder.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>
        <para>Specifies how to trim characters from a string that does not completely fit into a layout shape.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string  specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>
        <para>See <see langword="Graphics.CompositingQuality" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> class.</para>
      </summary>
      <param name="array">
        <para>An array of type <see cref="T:System.Drawing.Printing.PaperSize" />.</para>
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawImage" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system information icon (WIN32: IDI_INFORMATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>
        <para>Gets or sets the gamma correction value for rendering text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>
        <para>Specifies the winding fill mode.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>
        <para>Gets the width and height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>
        <para>Specifies a mask used to check whether a line cap is an anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>
        <para>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> object by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object horizontally.
      </param>
      <param name="dy">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>
    C6 envelope (114 mm by 162 mm).
 </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>
        <para>Converts each curve in this path into a sequence of connected line segments.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>
        <para>Advances the frame in all images currently being animated. The new frame is drawn the next time the image is rendered.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>
        <para>Specifies a gradient from upper left to lower right.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>
        <para>Specifies a character string, a location, and formatting information.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Gets the collection of toolbox items that are associated 
      with the specified designer host from the toolbox.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items 
   that are associated with the specified designer host.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>
        <para>Indicates that the codec supports decoding (reading). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.SeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>
        <para>Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object a clockwise rotation, around the origin and by the specified angle.</para>
      </summary>
      <param name="angle">
        The angle of the rotation.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>
        <para>Gets a memory bitmap image format.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that represents the path to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Brown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DeepSkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>
        <para>High quality, low speed compositing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawRectangles" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.AppWorkspace">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>
        <para>Provides properties that get the frame dimensions of an image. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Creates and returns an inflated copy of the specified <see cref="T:System.Drawing.RectangleF" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> to be copied. This rectangle is not modified.
      </param>
      <param name="x">
        The amount to inflate the copy of the rectangle horizontally.
      </param>
      <param name="y">
        The amount to inflate the copy of the rectangle vertically.
      </param>
      <returns>
        <para>The inflated <see cref="T:System.Drawing.RectangleF" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>
        <para>Gets the format of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>
        <para>Encapsulates a custom user-defined line cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>
        <para>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into the two specified arrays.</para>
      </summary>
      <param name="points">
        Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.
      </param>
      <param name="types">
        Upon return, contains an array of bytes that represents the types of points in the path.
      </param>
      <returns>
        <para>The number of points copied.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an <see cref="T:System.Object" /> given a set
 of property values for the object.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> representing
 the specified <see cref="T:System.Collections.IDictionary" />; or <see langword="null" /> if the object cannot be created.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the background of selected items. This includes selected menu items as well as selected text. For example, the pen may be the color used for the background of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>
        <para>Copies the collection to the specified array beginning 
      with the specified destination index.</para>
      </summary>
      <param name="array">The array to copy to.</param>
      <param name=" index">The index to begin copying to.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="width">
        Width of the rectangle to fill.
      </param>
      <param name="height">
        Height of the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Size.Height">
      <summary>
        <para>Gets or sets the vertical component of this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>
        <para>Specifies an Enhanced Metafile (EMF) file. Such a file contains only GDI records.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>
        <para> Gets or sets the number of copies of the document to print.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>
        <para> Provides access to the toolbox in the development environment.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect " />parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of selected items. This includes selected menu items as well as selected text. For example, the <see cref="T:System.Drawing.Color" /> structure may be the color used for the background of selected items in a list box.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>
        <para>Specifies world units as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleF" /> class with the specified location and size.</para>
      </summary>
      <param name="location">
        A <see cref="T:System.Drawing.PointF" /> that represents the upper-left corner of the rectangular region.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.SizeF" /> that represents the width and height of the rectangular region.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>
        <para>Specifies whether commands in the graphics stack are terminated (flushed) immediately or executed as soon as possible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see langword="Width" /> properties.</para>
      </summary>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="width">
        A value indicating the width of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="type">
        The <see langword="Type" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>
        <para>Specifies a millimeter as the unit of measure</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Tomato">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>
        <para>Gets the Exchangeable Image File (Exif) format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>
        <para> Gets or
       sets the height of the paper, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the line.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the line.
      </param>
      <param name="x2">
        The x-coordinate of the endpoint of the line.
      </param>
      <param name="y2">
        The y-coordinate of the endpoint of the line.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>
        <para>Specifies a user-defined custom dash style.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Olive">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>
        <para>
       People's Republic
       of China #8 rotated
       envelope (309 mm
       by 120
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>
        <para>Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> object is empty.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>
        <para> Gets or sets the number of the last page to print.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged">
      <summary>
        <para>Occurs when the list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects is modified.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
        <para>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).
      </param>
      <param name="scale">
        A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)
      </param>
    </member>
    <member name="F:System.Drawing.PointF.Empty">
      <summary>
        <para>Represents a new instance of the <see cref="T:System.Drawing.PointF" /> class with member data left uninitialized.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> object defined by <see cref="T:System.Drawing.Rectangle" /> structure and with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration.</para>
      </summary>
      <param name="rect">
        Defines the portion of this <see cref="T:System.Drawing.Bitmap" /> object to copy. Coordinates are relative to this <see cref="T:System.Drawing.Bitmap" />.
      </param>
      <param name="format">
        Specifies the <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the destination <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is to be multiplied.
      </param>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <para>
          <see cref="T:System.Drawing.ImageFormatConverter" /> is a class that can be used to convert colors from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Black">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>
        <para>Invalid quality.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Round(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by rounding the values of the <see cref="T:System.Drawing.Size" /> structure to the nearest integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointF.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.PointF" /> class with the specified coordinates.</para>
      </summary>
      <param name="x">
        The horizontal position of the point.
      </param>
      <param name="y">
        The vertical position of the point.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>
        <para>Gets the horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>
        <para>Gets the vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>
        <para>
       People's Republic of
       China 16K paper (146 mm
       by 215
       mm). Requires Windows
       98, Windows NT 4.0,
       or later.
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>
        <para>Specifies a solid fill.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 8-bit value. Sets the <see langword="ValueType" /> property to ValueTypeUndefined or ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A byte that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="undefined">
        If <see langword="true" />, the <see langword="ValueType" /> property is set to ValueTypeUndefined; otherwise, the <see langword="ValueType" /> property is set to ValueTypeByte.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.EMF">
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Text.PrivateFontCollection" /> class. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>
        <para>Represents a Windows icon, which is a small bitmap image used to represent an object. Icons can be thought of as transparent bitmaps, although their size is determined by the system.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>
        <para> Gets or sets a value indicating whether the printed document is collated.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Drawing.PointF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class from the specified <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> from which to initialize this <see cref="T:System.Drawing.SizeF" />.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Aquamarine">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Wheat">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>
        <para>Specifies that a portion of the image is locked for reading.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>
        <para>Clamps the texture or gradient to the object boundary.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>
        <para>The number of types specified.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> class using the specified collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> to fill the new collection with.</param>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>
        <para>Translates colors to and from GDI+ <see cref="T:System.Drawing.Color" /> structures. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveBorder">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string can be provided to name the file.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>
        <para>Contains information about how image colors are manipulated during rendering. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>
        <para>Indicates that an encoder requires a seekable output stream. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>
        <para>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>
        <para>Gets or sets the version number of the header format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> object that encapsulates arrays of points (<paramref name="points" /> ) and types (<paramref name="types" /> ) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>
        <para>Standard paper (11 in. by 17 in.).
       </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>
        <para>Gets the number of points in the path.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified Windows handle.</para>
      </summary>
      <param name="hfont">
        A Windows handle to a GDI font.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>
        <para>Specifies dashed diagonal lines, that slant to the right from top points to bottom points.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Creates and returns a permission that is the intersection of the current
      permission object and a target permission object.</para>
      </summary>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <returns>
        <para> A new permission object that represents the intersection of
      the current object and the specified target. This object is <see langword="null" /> if
      the intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="width">
        Width of the rectangle to test for visibility.
      </param>
      <param name="height">
        Height of the rectangle to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the scan method parameter category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SandyBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DodgerBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>
        <para>Specifies that the array of values is an array of bytes that has no data type defined.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="width">
        Width of the rectangle to fill.
      </param>
      <param name="height">
        Height of the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Appends a line segment to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the line.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the line.
      </param>
      <param name="x2">
        The x-coordinate of the endpoint of the line.
      </param>
      <param name="y2">
        The y-coordinate of the endpoint of the line.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumPurple">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>
        <para>An abstract base class that provides functionality for <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Icon" /> and <see cref="T:System.Drawing.Imaging.Metafile" /> descended classes.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>
        <para>Specifies the last frame in a multiple-frame image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>
        <para>Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>
        <para>
       A4 extra
       paper
       (236 mm by 322 mm). This value is specific to the PostScript driver and is used only
       by Linotronic printers to help save paper.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Top">
      <summary>
        <para>Gets the y-coordinate of the top edge of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>
        <para>Defines a brush of a single color. Brushes are used to fill graphics shapes, such as rectangles, ellipses, pies, polygons, and paths. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 32-bit integers. The two arrays represent an array of fractions. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeRational" />, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="numerator" /> array, which must be the same as the number of elements in the <paramref name="denominator" /> array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator">
        An array of 32-bit integers that specifies the numerators of the fractions. The integers in the array must be nonnegative.
      </param>
      <param name="denominator">
        An array of 32-bit integers that specifies the denominators of the fractions. The integers in the array must be nonnegative. A denominator of a given index is paired with the numerator of the same index.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets a value indicating whether the specified tool is supported by the current
      designer.</para>
      </summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
      <returns>
        <para>
          <see langword="true" /> if the tool
   is supported by the toolbox and can be
   enabled; <see langword="false" /> if the document designer does not know how
   to use the tool.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Drawing.Color)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified <see cref="T:System.Drawing.Color" /> structure, but with the new specified alpha value. Although this method allows a 32-bit value to be passed for the alpha value, the value is limited to 8 bits.</para>
      </summary>
      <param name="alpha">
        The alpha value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="baseColor">
        The <see cref="T:System.Drawing.Color" /> structure from which to create the new <see cref="T:System.Drawing.Color" /> structure.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.R">
      <summary>
        <para>Gets the red component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />or
<see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> object and <see langword="Width" />.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="width">
        The width of the new <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MidnightBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.Remove(System.IntPtr,System.Int32)">
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)">
      <summary>
        <para>Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangular region  represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>
        <para>Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>
        <para> The pages between <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> and
 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
 are
 printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>
        <para>Gets a human-readable string that describes the <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
      <returns>
        <para>A string that describes the <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>
        <para>Copies the relevant information out of the given handle and
      into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</para>
      </summary>
      <param name="hdevnames">The handle to a Win32 DEVNAMES structure.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event.</para>
      </summary>
      <param name="args">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="hmetafile">
        The handle to the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which to return a header.
      </param>
      <param name="wmfHeader">
        A <see langword="WmfPlaceableFileHeader" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PowderBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>
        <para> Gets the rectangular area that represents the portion of the page inside the margins.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GhostWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>
        <para> Gets or sets the printer setting for double-sided printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>
        <para>Returns the height of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>The height, in font design units, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>
        <para>Specifies the default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
        <para>Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into a sequence of connected line segments.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.
      </param>
      <param name="flatness">
        Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation.
      </param>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Rectangle" /> class with the specified location and size.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="width">
        The width of the rectangle.
      </param>
      <param name="height">
        The height of the rectangle.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Transparent">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DeepPink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>
        <para>
       Japanese You #4 rotated envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        The x-coordinate of the first control point for the curve.
      </param>
      <param name="y2">
        The y-coordinate of the first control point for the curve.
      </param>
      <param name="x3">
        The x-coordinate of the second control point for the curve.
      </param>
      <param name="y3">
        The y-coordinate of the second control point for the curve.
      </param>
      <param name="x4">
        The x-coordinate of the endpoint of the curve.
      </param>
      <param name="y4">
        The y-coordinate of the endpoint of the curve.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.Point" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Color" /> structure to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that is the name of the color of this <see cref="T:System.Drawing.Color" /> structure, if the <see cref="T:System.Drawing.Color" /> structure is created from a pre-defined color by using either the <see langword="FromName" /> method or the <see langword="FromKnownColor" /> method; otherwise, a string that consists of the ARGB component names and their values.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>
        <para>Specifies hatch style <see langword="Horizonal" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the point to test for visibility.
      </param>
      <param name="y">
        y coordinate of the point to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>
        <para>The pixel data is partially scalable, but there are some limitations.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not return any properties. A simple implementation of this method can just call <see langword="TypeDescriptor.GetProperties" /> for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that are exposed for this data type. If no properties are exposed, this method might return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>
        <para>Reserved. Do not use.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>
        <para>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an OLE color.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure to translate.
      </param>
      <returns>
        <para>The OLE color value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.PeachPuff">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>
        <para>No hot-key prefix.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the chrominance table parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Teal">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>
        <para>Classes derived from this abstract base class define objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="desc">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.PaintValueEventArgs.#ctor(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> class using the specified values.</para>
      </summary>
      <param name="context">The context in which the value appears.</param>
      <param name="value">The value to paint.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> object with which drawing is to be done.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which drawing is to be done.</param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>
        <para>
       Letter extra paper
       (9.275 in. by
       12 in.). This value is specific to the PostScript driver and is used only
       by Linotronic printers in order to conserve paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>
        <para>
       People's Republic of
       China 32K big paper (97
       mm by
       151 mm). Requires Windows 98, Windows
       NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>
        <para>The pixel data can be cached for faster access.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>
        <para>
       German standard fanfold
       (8.5 in. by 12 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>
        <para> Gets the type of paper.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a ToolTip.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Dual enhanced metafile format. This format supports both the enhanced and the enhanced plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Dual enhanced metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Equals(System.Object)">
      <summary>
        <para>Tests whether <paramref name="obj" /> is a <see cref="T:System.Drawing.RectangleF" /> with the same location and size of this <see cref="T:System.Drawing.RectangleF" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.RectangleF" /> and its <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties are equal to the  corresponding properties of this <see cref="T:System.Drawing.RectangleF" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>
        <para>The pixel format contains premultiplied alpha values.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>
        <para>Specifies substitution digits that correspond with the official national language of the user's locale.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>
        <para>Specifies that the pixel size is stored in the image. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>
        <para>Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned on the inside of the theoretical line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Plum">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a double-precision floating point number from 
       one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A double-precision floating point number that represents the converted 
    <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a character string. The string is converted to a null-terminated ASCII string before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeAscii" />, and sets the <see langword="NumberOfValues" /> property to the length of the ASCII string including the NULL terminator.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A <see langword="String" /> that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.RectangleF.Top">
      <summary>
        <para>Gets the y-coordinate of the top edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>
        <para>Creates a handle to a DEVNAMES structure that corresponds to the printer
      settings.</para>
      </summary>
      <returns>
        <para>A handle to a DEVNAMES structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system error icon (WIN32: IDI_ERROR).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>
        <para>Occurs when the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and
   before the first page
   of
   the document prints.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>
        <para>Specifies horizontal and vertical lines, each of which is composed of dots, that cross.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Determines if this object supports a standard set of values
      that can be picked from a list.
 </summary>
      <param name="context">
      A type descriptor through which additional context may be provided.
 </param>
      <returns>
      Returns true if GetStandardValues should be called to find
      a common set of values the object supports.
 </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DimGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>
        <para>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>
        <para>One clipping region is replaced by another.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions for a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will pass an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Adds the specified project-linked toolbox item
      to the toolbox.</para>
      </summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Info">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ColorConverter">
      <summary>
        <para>Converts colors from one data type to another. Access this class through the TypeDescriptor.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>
        <para>Restores the state of this <see cref="T:System.Drawing.Graphics" /> object to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object.</para>
      </summary>
      <param name="gstate">
        <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>
        <para>
       Letter rotated paper (11
       in. by
       8.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
        <para>Edits the specified object's value using the editor style
      indicated by <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>
        <para>The new value of the object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
        <para>Creates a gradient with a center color and a linear falloff to each surrounding color.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
      <param name="scale">
        A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.
      </param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>
        <para>See <see langword="Graphics.FillRegion" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)">
      <summary>
        <para>Edits the value of the specified object using the editor style
      indicated by <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</para>
      </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>
        <para>The new value of the object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>
        <para>Specifies that the image is to be flipped vertically (about the horizontal axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.Equals(System.Object)">
      <summary>
        <para>Tests to see whether the specified object is a <see cref="T:System.Drawing.SizeF" /> with the same dimensions as this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.SizeF" /> and has the same width and height as this <see cref="T:System.Drawing.SizeF" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>
        <para>Defines a blend pattern for a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of <see langword="ForwardDiagonal" />. This hatch pattern is not antialiased. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler">
      <summary>
        <para> Gets or sets the handler that is raised when a user double-clicks this item.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream from which to load the <see cref="T:System.Drawing.Icon" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Size" /> structures are different.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.Size" /> structure on the left of the inequality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.Size" /> structure on the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; <see langword="false" /> if <paramref name="sz1" /> and <paramref name="sz2" /> are equal.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> and
 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> events.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>
        <para> Gets the paper source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>
        <para>Specifies
      the size of a piece of paper.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a line connecting the two points specified by coordinate pairs.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="x1">
        x-coordinate of the first point.
      </param>
      <param name="y1">
        y-coordinate of the first point.
      </param>
      <param name="x2">
        x-coordinate of the second point.
      </param>
      <param name="y2">
        y-coordinate of the second point.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>
        <para>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> object by specified amounts in the horizontal and vertical directions.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.RectangleF">
      <summary>
        <para>Stores the location and size of a rectangular region. For more advanced region functions, use a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>
        <para>Gets the color of hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>
        <para> Gets the image of the printed page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="linearGradientMode">
        A <see langword="LinearGradientMode" /> enumeration that specifies the orientation of the gradient.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions for a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>
        <para>Gets or sets the name of the assembly that the type of 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> belongs to.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>
        <para>Gets or sets the number of units between the outline of the arrow cap and the fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one, 16-bit integer. Sets the <see langword="ValueType" /> property to ValueTypeShort, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A 16-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawArc" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it. The <see langword="NextMarker" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied.
      </param>
      <returns>
        <para>The number of points between this marker and the next.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>
        <para>Gets the names of all the tool categories currently on the toolbox.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>
        <para>Disables fallback to alternate fonts for characters not supported in the requested font. Any missing characters are displayed with the fonts missing glyph, usually an open square.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>
        <para>
       SuperA/SuperA/A4 paper (227
       mm by 356 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, bounding rectangle, and image attributes.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
      <param name="imageAttr">
        An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Indigo">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>
        <para>Gets the hash code for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.SteelBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>
        <para>A pattern of vertical lines.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>
        <para>Specifies substitution digits that correspond with the user's native script or language, which may be different from the official national language of the user's locale.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>
        <para>Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object, if it is invertible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>
        <para>Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> object to an infinite region.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageFormat" /> class using the specified <see langword="Guid" /> structure.</para>
      </summary>
      <param name="guid">
        The <see langword="Guid" /> structure that specifies a particular image format.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>
        <para>Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> structure for which to find a match.
      </param>
      <returns>
        <para>The method returns a <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>
        <para>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.Modal">
      <summary>
        <para> Displays a <see langword="..." /> button to start a modal dialog.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the curve.
      </param>
    </member>
    <member name="P:System.Drawing.Color.BurlyWood">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of a ToolTip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the color depth parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Orange">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumVioletRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>
        <para>
       Medium resolution.
       
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Highlight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions used by a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaptionText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Point.IsEmpty">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Point" /> is empty.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</para>
      </summary>
      <param name="sx">
        The transform scale factor in the x-axis direction.
      </param>
      <param name="sy">
        The transform scale factor in the y-axis direction.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>
        <para>Specifies no compression. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, wrap mode, and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawLines" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>
        <para>
       Double-sided, vertical printing.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image decoders built in to GDI+.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image decoders.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)">
      <summary>
        <para>Determines if this rectangle intersects with <paramref name="rect" />.</para>
      </summary>
      <param name="rect">
        The rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if there is any intersection.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>
        <para>Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>
        <para>Specifies hatch style <see langword="SolidDiamond" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>
        <para> Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>
        <para>Specifies no anchor.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>
        <para>Specifies a gradient from upper right to lower left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.#ctor(System.String,System.Int32,System.Int32)">
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>
        <para>The pixel data uses an RGB color space.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object are tiled.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.RotateTransform" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Single,System.Single)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="x">
        The amount to offset the location horizontally.
      </param>
      <param name="y">
        The amount to offset the location vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Point" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="P:System.Drawing.Color.MediumSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>
        <para>Specifies a hatch that has the appearance of a plaid material.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>
        <para>Returns the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <param name="language">
        The language in which the name is returned.
      </param>
      <returns>
        <para>A <see langword="String" /> object that represents the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" /> object. It creates a <see cref="T:System.Drawing.FontFamily" /> object, gets the name of that font family, and then draws the name to the screen as text.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>
        <para> Represents
      the resolution supported by a printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration and language.</para>
      </summary>
      <param name="options">
        The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.
      </param>
      <param name="language">
        A value that indicates the language of the text.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightYellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.AntiqueWhite">
      <summary>
        <para>Gets a system-defined color .</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>
        <para>Specifies that when a color is rendered, it overwrites the background color. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="offset">
        The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.
      </param>
      <param name="numberOfSegments">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a device context.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>
        <para>Translates an OLE color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="oleColor">
        The OLE color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated OLE color.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Bitmap" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>
        <para> Provides an interface that allows testing of the toolbox for toolbox item
      support capabilities and selecting the current tool.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and format.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the new <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>
        <para> Gets the name of the paper source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>
        <para> Gets the rectangular area that represents the total area of the page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>
        <para>An array of characters that contains the data that makes up a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>
        <para>Gets or sets a <see langword="Guid" /> structure that contains a GUID that identifies the codec's format.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from the specified Windows resource.</para>
      </summary>
      <param name="hinstance">
        A handle to an instance of the executable file that contains the resource.
      </param>
      <param name="bitmapName">
        A string containing the name of the resource bitmap.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Bitmap">
      <summary>
        <para>Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. A <see cref="T:System.Drawing.Bitmap" /> object is an object used to work with images defined by pixel data. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>
        <para>Gets or sets the name of the currently selected tool category from the toolbox.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>
        <para>Marks an object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines if this converter can convert an object in the given source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptor" /> object that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.
      </param>
      <param name="sourceType">
        The type from which you want to convert.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a scroll bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Equals(System.Object)">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Point" /> contains the same coordinates as the specified <see langword="Object" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Point" /> and has  the same coordinates as this <see cref="T:System.Drawing.Point" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 50 percent closer together than <see langword="Vertical" /> and are twice its width.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>
        <para>Specifies a 270-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>
        <para>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>
        <para>Specifies a path gradient fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of a scroll bar.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>
        <para> Represents the
      method that will handle the ToolboxItemCreatorCallback event.</para>
      </summary>
      <param name="serializedObject">The object which represents the serialized <see cref="T:System.Drawing.Design.ToolboxItem" /> to create.</param>
      <param name=" format">The clipboard format name for the <see cref="T:System.Drawing.Design.ToolboxItem" /> .</param>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object supports only the Windows enhanced metafile plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object supports only the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>
        <para>Specifies a diamond anchor cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>
        <para>Unlocks this <see cref="T:System.Drawing.Bitmap" /> from system memory.</para>
      </summary>
      <param name="bitmapdata">
        A <see cref="T:System.Drawing.Imaging.BitmapData" /> object specifying information about the lock operation.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>
        <para>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> object by specified amounts in the horizontal and vertical directions.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.</para>
      </summary>
      <param name="alpha">
        The alpha component. Valid values are 0 through 255.
      </param>
      <param name="red">
        The red component. Valid values are 0 through 255.
      </param>
      <param name="green">
        The green component. Valid values are 0 through 255.
      </param>
      <param name="blue">
        The blue component. Valid values are 0 through 255.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Specifies the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling. The wrap mode is used by the various <see cref="T:System.Drawing.Brush" /> classes where fills are used to fill a shape.</para>
      </summary>
      <param name="mode">
        Specifies the wrap mode, using a value from the <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>
        <para>
       A4 transverse paper
       (210 mm by 297 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>
        <para>Specifies 1/75 inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>
        <para>
       People's Republic of
       China #3 rotated envelope
       (176 mm by
       125 mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle (extent)of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.FontFamily" /> object associated with this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>
        <para>Gets the width of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPageInfo" />
       class.
    </para>
      </summary>
      <param name="image">
    The image of the printed page.
 </param>
      <param name="physicalSize">
    The size of the printed page, in hundredths of an inch.
 </param>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from a handle to a GDI bitmap.</para>
      </summary>
      <param name="hbitmap">
        The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of a menu's text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>
        <para>
       Executive paper (7.25
       in. by 10.5
       in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Navy">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>
        <para>Clears the gamma value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>
        <para>A generic Monospace <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>
        <para>Provides support for Object's ToString method.</para>
      </summary>
      <returns>
        <para>A string representation of the current object's value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Desktop">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the specified value.</para>
      </summary>
      <param name="value">The category name to retrieve the index of in the collection.</param>
      <returns>
        <para>The index in the collection, or <see langword="null" /> if the string does
   not exist in the collection.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>
        <para>Specifies the RLE compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using
   the default printer.
   </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>
        <para>
       Gets or sets the value of the specified element of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.
    </para>
      </summary>
      <param name=" row">
    The row of the element.
 </param>
      <param name=" column">
    The column of the element.
 </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>
        <para>Indicates that the codec supports vector images (metafiles). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified path.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the area filled by this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>
        <para>Specifies that the pixel data has alpha values other than 0 (transparent) and 255 (opaque). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.Rectangle" /> by the specified amount.</para>
      </summary>
      <param name="width">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> horizontally.
      </param>
      <param name="height">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>
        <para>Gets a generic serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>
        <para>
       All pages are printed.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>
        <para>See <see langword="Graphics.AddMetafileComment" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.Image">
      <summary>
        <para> Gets or sets the 8
      x 8 pixel image that will be drawn on the Properties window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Color.Empty">
      <summary>
        <para>Represents a null color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.YellowGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LavenderBlush">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>
        <para>Gets a value indicating whether the specified object is 
      a serialized toolbox item.</para>
      </summary>
      <param name="serializedObject">The object to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if the object contains a
   toolbox item object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with 
   the level of printing access specified.</para>
      </summary>
      <param name="printingLevel">One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</param>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>
        <para>Gets a generic sans serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Region" /> object that limits the drawing region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>
        <para>
       ISO B5 extra
       paper (201 mm by 276 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>
        <para>See <see langword="Graphics.PixelOffsetMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.PointF" /> by a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> to translate.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to add to the coordinates of <paramref name="pt" />.
      </param>
      <returns>
        <para>Returns the translated <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Gainsboro">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified combining operation of the current clip region and the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> object that specifies the clip region to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 75 percent closer together than hatch style <see langword="Vertical" /> (or 25 percent closer together than <see langword="LightVertical" />).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified array of names.</para>
      </summary>
      <param name="value">An array of strings that contains the names of the categories to initialize the collection values to.</param>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows metafile format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object, using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Crimson">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Adds the width and height of one <see cref="T:System.Drawing.SizeF" /> structure to the width and height of another <see cref="T:System.Drawing.SizeF" /> structure.</para>
      </summary>
      <param name="sz1">
        The first <see cref="T:System.Drawing.SizeF" /> to add.
      </param>
      <param name="sz2">
        The second <see cref="T:System.Drawing.SizeF" /> to add.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Size" /> structure that is the result of the addition operation.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>
        <para>
       #9 envelope (3.875
       in. by 8.875 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>
        <para>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to a <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
        <para>Sets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the pixel to set.
      </param>
      <param name="y">
        The y-coordinate of the pixel to set.
      </param>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that represents the color to assign to the specified pixel.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>
        <para> Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates the
   default printer, except when the user explicitly sets <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
   .</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleTurquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>
        <para>Gets the pixel format for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>
        <para>Encapsulates a <see cref="T:System.Drawing.Brush" /> object that fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with a gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.CornflowerBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>
        <para>Gets or sets the type of the property.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>
        <para>See Graphics.<see langword="TransformPoints" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="x">
        x coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
        <para>Paints a representation of the value of the specified object to the specified
      canvas.</para>
      </summary>
      <param name="value">The object whose value this type editor will display.</param>
      <param name="canvas">A drawing canvas on which to paint the representation of the object's value.</param>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> within whose boundaries to paint the value. </param>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditor">
      <summary>
        <para> Provides a base class that can be used to design
      value editors that can provide a user interface for representing and
      editing the values of objects of the supported data type(s).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>
        <para>
       Japanese rotated double
       postcard (148 mm by
       200 mm). Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>
        <para>Defines a placeable metafile. Not inheritable. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>
        <para>Gets the name of this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>
        <para>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="offsetX">
        The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="offsetY">
        The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a device context and handle to a device.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <param name="hdevice">
        Handle to a device.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context and device.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>
        <para>See Graphics.<see langword="TransformPoints" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>
        <para>Gets the category name at the specified index.</para>
      </summary>
      <param name="index">The index of the collection element to access.</param>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>
        <para>The unit of measurement is 0.01 millimeter. Provided for compatibility with GDI.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
        <para>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para> Begins the control sequence
      that determines when and how to preview a page in a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" qualify="true" /> property of this parameter will be <see langword="null" />. The value returned from this method will be used to set this property.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>
        <para>Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to the specified array of points.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>
        <para> Specifies a series of conversion methods that are useful when
       interoperating with the Win32 printing Application Program Interface (API).
       This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>
        <para>Specifies that the format is 8 bits per pixel, indexed. The color table therefore has 256 colors in it.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Teal">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
        <para>Sets the remap table for converting <see cref="T:System.Drawing.Brush" /> colors. The remap table maps existing colors in a brush to new colors.</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color in the brush and the color to which it will be mapped.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>
        <para>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>
        <para>
       Custom resolution.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>
        <para>Specifies a bilinear warp.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the application workspace. The application workspace is the area in a multiple-document view that is not being occupied by documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>
       Compares two <see cref="T:System.Drawing.PointF" /> objects. The result specifies whether the values
       of the <see cref="P:System.Drawing.PointF.X" /> or <see cref="P:System.Drawing.PointF.Y" /> properties of the two
    <see cref="T:System.Drawing.PointF" /> 
    objects are unequal.
 </para>
      </summary>
      <param name=" left">
    A <see cref="T:System.Drawing.PointF" /> to compare.
 </param>
      <param name=" right">
    A <see cref="T:System.Drawing.PointF" /> to compare.
 </param>
      <returns>
        <see langword="true" /> if the values of 
    either the X properties or the Y properties of left and right differ; otherwise,
 <see langword="false" />.
 </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Aquamarine">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>
        <para>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the desktop.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>
        <para>Specifies the paper tray from which the printer gets paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>
        <para>
       B4 paper (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>
        <para>
       B5 paper (176
       mm by 250 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>
        <para>Gets or sets the width of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>
        <para>Specifies that text is aligned in the center of the layout rectangle.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>
        <para>
       The paper size is defined by the user.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Point.Y">
      <summary>
        <para>Gets or sets the y-coordinate of this <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Point.X">
      <summary>
        <para>Gets or sets the x-coordinate of this <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Gets the currently selected toolbox item if it is available
      to all designers, or if it supports the specified designer.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that the selected tool must be associated with for it to be returned.</param>
      <returns>
        <para> The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.MistyRose">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PaleVioletRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of text in a 3-D element.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.White">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>
        <para>Initializes
      a new instance of the <see cref="T:System.Drawing.Design.ToolboxItem" /> class
      using the specified type and display name.</para>
      </summary>
      <param name="toolType">The type of tool for this toolbox item.</param>
      <param name="">The name to display on the toolbox for this tool.</param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>
        <para>Gets the size, in bytes, of the enhanced metafile plus header file.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Region" /> object is identical to this <see cref="T:System.Drawing.Region" /> object on the specified drawing surface.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a drawing surface.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the interior of region is identical to the interior of this region when the transformation associated with the <paramref name="g" /> parameter is applied; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <para> A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that
   indicates the style of editor used by <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this
   method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>
        <para>Gets the tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="firstTabOffset">
        The number of spaces between the beginning of a text line and the first tab stop.
      </param>
      <returns>
        <para>An array of distances (in number of spaces) between tab stops.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Snow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>
        <para>
       SuperB/SuperB/A3 paper (305
       mm by 487 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the given value object to
       the specified destination type using the specified context and arguments.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name=" culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to which to convert the value.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> that represents 
    the converted value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>
        <para>Gets or sets the checksum value for the previous ten <see langword="WORD" />s in the header.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>
        <para>
       B6 envelope (176
       mm by 125 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumSlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.Point" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>
        <para>
       B5 envelope (176
       mm by 250 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.IsEmpty">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.PointF" /> is empty.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>
        <para>Reverses the texture or gradient vertically and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Removes the specified toolbox item from the toolbox.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>
        <para> Gets the entire collection of toolbox items 
      from the toolbox.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CornflowerBlue">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
        <para>Sets the remap table as specified in <see langword="ColorMap[]" /> for all GDI+ objects (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Round(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> to a <see cref="T:System.Drawing.Rectangle" /> by rounding the <see cref="T:System.Drawing.RectangleF" /> values to the nearest integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MenuText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Context">
      <summary>
        <para>Gets or sets the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object
   to be used to gain additional information about the context this value appears in.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MidnightBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Purple">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.ToArgb">
      <summary>
        <para>Gets the 32-bit ARGB value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The 32-bit ARGB value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Gold">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Gets the set of properties for this type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        The value of the object to get the properties for.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this can return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>
        <para> The
       printer's large-capacity bin.
       </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>
        <para>Provides a <see cref="T:System.Drawing.Printing.MarginsConverter" /> for <see cref="T:System.Drawing.Printing.Margins" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>
        <para>Assume linear values.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>
        <para>Gets the hatch style of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>
        <para>Specifies a 90-degree rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>
        <para>Gets the bitmap image format (BMP).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>
        <para>Copies the color data for a rectangle of pixels in a DIB to the specified destination rectangle.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text of selected items. This includes selected menu items as well as selected text. For example, the pen may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>
        <para>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.CadetBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>
        <para>Gets the size, in points, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Size.Width">
      <summary>
        <para>Gets or sets the horizontal component of this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 16-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeShort, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 16-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object are filled.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>
        <para>A pattern of horizontal lines.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlanchedAlmond">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of an inactive window's border.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>
        <para>
       C5 envelope
       (162 mm by 229 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SizeF.Empty">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>
        <para>
       People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream and with the specified width and height.</para>
      </summary>
      <param name="stream">
        The data stream from which to load the icon.
      </param>
      <param name="width">
        The width of the icon.
      </param>
      <param name="height">
        The height of the icon.
      </param>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>
        <para>Specifies a printer's em size of 32 as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the low color value and the high color value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="colorLow">
        The low color value.
      </param>
      <param name="colorHigh">
        The high color value.
      </param>
      <param name="type">
        A <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to another type. The most common types to convert are to and from a string object. </para>
      </summary>
      <param name="context">
        A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may also return null.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture to represent the Color.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object. If this method cannot convert to the destination type, it throws a <see langword="NotSupportedException" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>
        <para>A generic Sans Serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>
        <para>Specifies that no part of any glyph overhangs the bounding rectangle. By default some glyphs overhang the rectangle slightly where necessary to appear at the edge visually. For example when an italic lowercase letter f in a font such as Garamond is aligned at the far left of a rectangle, the lower part of the f will reach slightly further left than the left edge of the rectangle. Setting this flag will ensure no painting outside the rectangle but will cause the aligned edges of adjacent lines of text to appear uneven.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumPurple">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>
        <para>
       Japanese rotated Kaku #2 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>
        <para>Specifies a 270-degree rotation without flipping.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetProperties" /> should be called to find the properties of this object; otherwise, false.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>
        <para>Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>
        <para>Specifies a smooth, rounded join.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>
        <para>Gets or sets the fully qualified name of the type that 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> will create.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGoldenrodYellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>
        <para>Specifies that the pixel format is 1 bit per pixel and that it uses indexed color. The color table therefore has two colors in it.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>
        <para>Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>
        <para>See <see langword="Graphics.Restore" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>
        <para>Contains information about a windows-format (WMF) metafile.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.Rectangle" /> with the intersection of itself and the specified <see cref="T:System.Drawing.Rectangle" />.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> with which to intersect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.PointF)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point represented by the <paramref name="pt" /> parameter is contained within this <see cref="T:System.Drawing.RectangleF" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaption">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Wheat">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>
        <para> One-tenth of a millimeter
       (0.1 mm).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>
        <para>Specifies that the format is 48 bits per pixel; 16 bits each are used for the red, green, and blue components. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points through which the path is constructed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Pen" /> objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PaleTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangular bounds of the ellipse from which the arc is taken.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</para>
      </summary>
      <param name="angle">
        The angle (extent) of rotation.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="width">
        Maximum width of the string.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>
        <para>
       D paper (22
       in. by 34 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>
        <para>Displays a multiple-frame image as an animation.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to animate.
      </param>
      <param name="onFrameChangedHandler">
        An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>
        <para>
       Quarto paper (215
       mm by 275 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>
        <para>Gets a <see langword="Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>
        <para>Gets the vertical resolution, in pixels-per-inch, of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.PaintValueEventArgs">
      <summary>
        <para> Provides data for the <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
event.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Truncate(System.Drawing.PointF)">
      <summary>
        <para>Convets the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by truncating the values of the <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that represents the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Point" /> class with the specified coordinates.</para>
      </summary>
      <param name="x">
        The horizontal position of the point.
      </param>
      <param name="y">
        The vertical position of the point.
      </param>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>
        <para>Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Sienna">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>
        <para>Gets the array of <see cref="T:System.Drawing.FontFamily" /> objects associated with this <see cref="T:System.Drawing.Text.FontCollection" /> object. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.RectangleConverter">
      <summary>
        <para>Converts rectangles from one data type to another. Access this class through the TypeDescriptor.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>
        <para>Represents the fonts installed on the system. This class cannot be inherited. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para> Returns whether this converter can convert an object of the specified source type to the native
 type of the converter using the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type from which you want to convert.</param>
      <returns>
        <para>
          <see langword="true " />if an object can perform the
 conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Cursor">
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>
        <para>Specifies an EMF+ Dual file. Such a file contains GDI+ records along with alternative GDI records and can be displayed by using either GDI or GDI+. Displaying the records using GDI may cause some quality degradation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>
        <para>Gets or sets the pixel width of the <see cref="T:System.Drawing.Bitmap" /> object. This can also be thought of as the number of pixels in one scan line.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>
        <para>Gets a bounding rectangle for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of unsigned 8-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 8-bit unsigned integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.LightGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>
        <para>Gets or sets the element at the 2nd row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>
        <para>Gets or sets the element at the 2nd row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>
        <para>Gets or sets the element at the 2nd row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>
        <para>Gets or sets the element at the 2nd row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>
        <para>Gets or sets the element at the 2nd row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Location">
      <summary>
        <para>Gets or sets the coordinates of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</para>
      </summary>
      <param name="fillPath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.
      </param>
      <param name="strokePath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>
        <para>Adds a sequence of connected cubic Bézier curves to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.
      </param>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>
        <para>Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show. By default all text and glyph parts reaching outside the formatting rectangle are clipped. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>
        <para>Gets or sets an array of colors.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>
        <para>Specifies the document unit (1/300 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>
        <para>Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>
        <para>Translates an HTML color representation to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="htmlColor">
        The string representation of the Html color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated HTML color.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with the specified left, right, top, and bottom
    margins.</para>
      </summary>
      <param name="left">The left margin, in hundredths of an inch.</param>
      <param name="right">The right margin, in hundredths of an inch.</param>
      <param name="top">The top margin, in hundredths of an inch.</param>
      <param name="bottom">The bottom margin, in hundredths of an inch.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified file name.</para>
      </summary>
      <param name="fileName">
        The file to load the <see cref="T:System.Drawing.Icon" /> object from.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four arrays of 32-bit integers. The four arrays represent an array rational ranges. A rational range is the set of all fractions from a minimum fractional value through a maximum fractional value. Sets the <see langword="ValueType" /> property to ValueTypeRationalRange, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="numerator1" /> array, which must be the same as the number of elements in the other three arrays.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator1">
        An array of 32-bit integers that specifies the numerators of the minimum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="denominator1">
        An array of 32-bit integers that specifies the denominators of the minimum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="numerator2">
        An array of 32-bit integers that specifies the numerators of the maximum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="denominator2">
        An array of 32-bit integers that specifies the denominators of the maximum values for the ranges. The integers in the array must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>
        <para>Reverses the texture or gradient horizontally and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>
        <para>Specifies a print controller that sends information to a printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>
        <para>Releases a device context handle obtained by a previous call to the <see langword="GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="hdc">
        Handle to a device context obtained by a previous call to the <see langword="GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>
        <para> Gets a value indicating whether the printer is a plotter.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
        <para>Removes the specified toolbox item from the toolbox.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <param name=" category">The toolbox item category to remove the <see cref="T:System.Drawing.Design.ToolboxItem" /> from.</param>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>
        <para>Specifies settings
      that apply to a single, printed page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>
        <para>Gets a handle to the current Windows halftone palette.</para>
      </summary>
      <returns>
        <para>Internal pointer that specifies the handle to the palette.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>
        <para>Specifies the printer's duplex setting.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Reconstructs a security object with a specified state from an XML
       encoding.</para>
      </summary>
      <param name="esd">The XML encoding to use to reconstruct the security object.</param>
      <returns>
        <para>None.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.RectangleF" /> structures differ in location or size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if any of the <see langword="X" />, <see langword="Y" />, <see langword="Width" />, or <see langword="Height" /> properties of the two <see cref="T:System.Drawing.Rectangle" /> structures are unequal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Removes a previously added toolbox creator of the 
      specified data format that is associated with the specified designer host.</para>
      </summary>
      <param name="format">The data format of the creator to remove. </param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the creator to remove. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>
        <para> Creates the permission based on the requested
      access levels, which are set through the <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> property on the attribute.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> object that defines a multicolor linear gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that specify the attributes of the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Maroon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>
        <para> Gets or sets the page's paper source (for example, the printer's upper tray).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>
        <para>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>
        <para>Gets or sets the element at the 0th row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>
        <para>Gets or sets the element at the 0th row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>
        <para>Gets or sets the element at the 0th row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>
        <para>Gets or sets the element at the 0th row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>
        <para>Default name is <see langword="null" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transformation by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>
        <para>Gets or sets the element at the 0th row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>
        <para>Specifies high quality interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Cornsilk">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to exclude the area specified by a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object that specifies the region to exclude from the clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>
        <para>Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than <see langword="SmallConfetti" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>
        <para>See <see langword="Graphics.InterpolationMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>
        <para>Specifies a WMF (Windows Metafile) file that has a placeable metafile header in front of it.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>
        <para>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Truncate(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by truncating the values of the <see cref="T:System.Drawing.Size" /> structure to the next lower integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>
        <para>Creates an exact copy if this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Region" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
      <param name="gdiVerticalFont">
        A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structuresthat represents the points that define the curve.
      </param>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para> Indicates whether the specified context supports painting a representation of an object's value
      within the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <para>
          <see langword="true" />
if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> is implemented; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text of a ToolTip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>
        <para>Gets or sets the element at the 3rd row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>
        <para>Gets or sets the element at the 3rd row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>
        <para>Gets or sets the element at the 3rd row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>
        <para>Gets or sets the element at the 3rd row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>
        <para>Gets or sets the element at the 3rd row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para> Completes the control 
       sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Text.FontCollection" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Gold">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>
        <para>Gets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" />.</para>
      </summary>
      <param name="x">
        The x-coordinate of the pixel to retrieve.
      </param>
      <param name="y">
        The y-coordinate of the pixel to retrieve.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Color" /> structure that represents the color of the specified pixel.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LawnGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>
        <para>Specifies that coordinates are in the page coordinate context. Their units are defined by the <see langword="Graphics.PageUnit" /> property, and must be one of the elements of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>
        <para>
       Monarch envelope (3.875
       in. by 7.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="newSize">
        The <see cref="T:System.Drawing.Size" /> structure that represent the size of the new <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in pixels, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
        <para>Removes the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> from 
    the property value UI service.</para>
      </summary>
      <param name="newHandler">The handler to remove.</param>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transform in the x-axis direction.
      </param>
      <param name="sy">
        The amount by which to scale the transform in the y-axis direction.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the color-key values for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). </para>
      </summary>
      <param name="type">
        Specifies the GDI+ object (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that is to have the color key information cleared.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.HDC">
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>
        <para>Specifies an EMF+ file. Such a file contains only GDI+ records and must be displayed by using GDI+. Displaying the records using GDI may cause unpredictable results.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>
        <para> Indicates whether the specified category is contained
      in the collection.</para>
      </summary>
      <param name="value">The string to check for in the collection.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified category is contained in the
   collection; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>
        <para>
       Retrieves a duplicate of this object, member by member.
    </para>
      </summary>
      <returns>
        <para>
       A duplicate of this object.
    </para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>
        <para>
       People's Republic of
       China 32K paper (97 mm
       by 151
       mm). Requires Windows 98, Windows
       NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>
        <para>Represents the internal data of a graphics container. This class is used when saving the state of a <see cref="T:System.Drawing.Graphics" /> object using the <see langword="BeginContainer" /> and <see langword="EndContainer" /> methods. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.NavajoWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>
        <para>Gets or sets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object containing the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is retrieved.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>
        <para>Specifies the type of fill a <see cref="T:System.Drawing.Pen" /> object uses to fill lines.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>
        <para>Sets the NoOp correction value for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on. During rendering, no color adjustment is performed while NoOp is set.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the path.
      </param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>
        <para>Gets or sets the element at the 1st row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>
        <para>Gets or sets the element at the 1st row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>
        <para>Gets or sets the element at the 1st row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>
        <para>Gets or sets the element at the 1st row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Returns a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type to which you want to convert.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the opertation; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>
        <para>Specifies that the <see cref="T:System.Drawing.Pen" /> object is centered over the theoretical line.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>
        <para>Brushes for all the standard colors. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified <see langword="Stream" /> object in the specified format.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> class for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>
        <para>Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>
        <para>Sets the specified property item to the specified value.</para>
      </summary>
      <param name="propitem">
        The ID of the property item to set.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Value">
      <summary>
        <para>Gets or sets the value to paint.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrange">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontConverter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>
        <para>Specifies that all the records in the metafile are EMF records, which can be displayed by GDI or GDI+.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified file name.</para>
      </summary>
      <param name="filename">
        A <see langword="String" /> object that represents the file name from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>
        <para>Specifies an inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>
        <para>Alpha data.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Rectangle" /> structure that contains the union of two R<see langword="ectangle" /> structures.</para>
      </summary>
      <param name="a">
        A rectangle to union.
      </param>
      <param name="b">
        A rectangle to union.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> structure that bounds the union of the two <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkViolet">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>
        <para>Gets or sets a string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>
        <para>Gets or sets the limit of the thickness of the join on a mitered corner.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>
        <para>Gets or sets the element at the 4th row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified pre-defined color.</para>
      </summary>
      <param name="color">
        An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>
        <para>Gets or sets the element at the 4th row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>
        <para>Gets or sets the element at the 4th row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>
        <para>Gets or sets the element at the 4th row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>
        <para>Gets or sets the element at the 4th row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGoldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>
        <para>Creates an exact copy of this path.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Moccasin">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawBeziers" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Selects the specified tool.</para>
      </summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>
        <para>Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object contains a curve.</para>
      </summary>
      <returns>
        <para>This method returns <see langword="true" /> if the current subpath contains a curve; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>
        <para>Gets or sets an array of colors that correspond to the points in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object fills.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>
        <para>Gets or sets the focus point for the gradient falloff.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the output channel selection and color-profile file for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the output channel selection and color-profile file cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
        <para>Adds the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" />
to this service.</para>
      </summary>
      <param name="newHandler">The property value UI handler to add.</param>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of dimmed text. Items in a list that are disabled are displayed in dimmed text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>
        <para>When overridden in a derived class, creates an exact copy of this <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
      <returns>
        <para>The new <see cref="T:System.Drawing.Brush" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>
        <para>The unit of measurement is 1/300 of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Coral">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>
        <para>
       Folio paper (8.5
       in. by 13 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream used to load the image.
      </param>
      <param name="useIcm">
        Set to <see langword="true" /> to use color correction for this <see cref="T:System.Drawing.Bitmap" /> object; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, and a height and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSalmon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>
        <para>Specifies the inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.IsEmpty">
      <summary>
        <para>Tests whether all numeric properties of this <see cref="T:System.Drawing.Rectangle" /> have values of zero.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>
        <para>
       This element specifies to leave the color
       channel unchanged from the last selected channel.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumOrchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>
        <para>Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.RectangleF" /> structure with upper-left corner and lower-right corner at the specified locations.</para>
      </summary>
      <param name="left">
        The x-coordinate of the upper-left corner of the rectangular region.
      </param>
      <param name="top">
        The y-coordinate of the upper-left corner of the rectangular region.
      </param>
      <param name="right">
        The x-coordinate of the lower-right corner of the rectangular region.
      </param>
      <param name="bottom">
        The y-coordinate of the lower-right corner of the rectangular region.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.RectangleF" /> that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Drawing.PointF)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="pos">
        The amount to offset the location.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines if this converter can convert an object in the given source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object specifies a horizontal line through the font.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>
        <para>Specifies the type of graphic shape to use on both ends of each dash in a dashed line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>
        <para>Gets or sets an array values that specify a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>
        <para> Gets or sets
      the
      page numbers that the user has specified to be printed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>
        <para>Standard paper (9 in. by 11
       in.).
       </para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from a resource with the specified name in the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies where to find the image from which to construct the new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="name">
        The name of the image from which to construct the new <see langword="ToolboxBitmapAttributev" />.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSalmon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>
        <para>Specifies a triangular cap that points both ends of each dash.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.GhostWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>
        <para>Occurs immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>
        <para>The pixel data contains color-indexed values, which means the values are an index to colors in the system color table, as opposed to individual color values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> event.</para>
      </summary>
      <param name="args">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the line.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the line.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property to identity.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SpringGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>
        <para>Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Bisque">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>
        <para>Specifies low quality interpolation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.Drawing2D.RegionData" /> object that represents the information that describes this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Drawing2D.RegionData" /> object that represents the information that describes this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>
        <para>Returns information about the parameters supported by the specified image encoder.</para>
      </summary>
      <param name="encoder">
        A GUID that specifies the image encoder.
      </param>
      <returns>
        <para>An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object that contains an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects. Each <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object contains information about one of he parameters supported by the specified image encoder.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>
        <para>Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> object to identity.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.TranslateClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LimeGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text of selected items. This includes selected menu items as well as selected text. For example, the brush may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>
        <para>
       An envelope.
       
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of dimmed text. Items in a list that are disabled are displayed in dimmed text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified <see langword="Stream" /> object in the specified format.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoder">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object to use for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object in the specified <see cref="T:System.Drawing.Text.FontCollection" /> object with the specified name.</para>
      </summary>
      <param name="name">
        A <see langword="String" /> object that represents the name of the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
      <param name="fontCollection">
        The <see cref="T:System.Drawing.Text.FontCollection" /> object that contains this <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="sx">
        Scale factor in the x direction.
      </param>
      <param name="sy">
        Scale factor in the y direction.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>
        <para>Specifies the quality of text rendering.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>
        <para>Disables wrapping of text between lines when formatting within a rectangle. This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>
        <para> Gets or sets the print controller
      that guides the printing process.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ScrollBar">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>
        <para>Sets the gamma value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="gamma">
        Specifies the gamma correction value. Typical values for Gamma run from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful under some circumstances.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>
        <para>Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>
        <para>
       Letter paper (8.5 in.
       by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>
        <para>Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>
        <para> Gets or sets the display name for this toolbox item.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>
        <para>Gets or sets a bitmap that will represent 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> in the toolbox.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>
        <para>Gets or sets the color palette used for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>
        <para>Gets or sets a <see langword="Guid" /> structure that contains a GUID that identifies a specific codec.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Lavender">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object this class creates, cast as an object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>
        <para>Specifies that when a color is rendered, it is blended with the background color. The blend is determined by the alpha component of the color being rendered. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Orchid">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>
        <para>Returns a hash code value that represents this object.</para>
      </summary>
      <returns>
        <para>Returns a hash code that represents this object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>
        <para>Gets or sets the size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Rectangle" /> class with the specified location and size.</para>
      </summary>
      <param name="location">
        A <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the rectangular region.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.Size" /> that represents the width and height of the rectangular region.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>
        <para>
       People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property to identity.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Right">
      <summary>
        <para>Gets the x-coordinate of the right edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaption">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Red">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Coral">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Sets the low color value and the high color value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="colorLow">
        The low color value.
      </param>
      <param name="colorHigh">
        The high color value.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>
        <para>Gets or sets the color at the center of the path gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from a handle to a GDI bitmap and a handle to a GDI palette.</para>
      </summary>
      <param name="hbitmap">
        The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="hpalette">
        A handle to a GDI palette used to define the bitmap colors if the bitmap specified in the <paramref name="hBitmap" /> parameter is not a device-independent bitmap (DIB).
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>
        <para>Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the scale vector.</para>
      </summary>
      <param name="scaleX">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.
      </param>
      <param name="scaleY">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Imaging.PropertyItem" /> objects that describe this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Rectangle.Empty">
      <summary>
        <para>Represents a <see cref="T:System.Drawing.Rectangle" /> structure with its properties left uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hwnd">
        Handle to a window.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified window handle.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>
        <para>Sets the output color channels, as specified by the <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> enumeration, for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="flags">
        Specifies which color channels will be used. Individual channels can be set or they can be combined using the Boolean <see langword="OR" /> operator.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>
        <para>Specifies the attributes of the pixel data contained in an <see cref="T:System.Drawing.Image" /> object. The <see langword="Image.Flags" /> property returns a member of this enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.Y">
      <summary>
        <para>Gets the y-coordinate of this <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.X">
      <summary>
        <para>Gets the x-coordinate of this <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.Size" /> to a <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <param name="p">
        The <see cref="T:System.Drawing.Size" /> to convert.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>
        <para>Specifies a round line cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image and wrap mode.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the given object to the converter's native type.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptor" /> object that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture to represent the Color.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This method will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>
        <para>The pixel data contains alpha values that are not premultiplied.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>
        <para>Gets or sets the starting and ending colors of the gradient.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>
        <para>Specifies a hatch that has the appearance of diagonally-layered shingles that slant to the right from top points to bottom points.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets a serializable object that represents the specified 
      toolbox item.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to serialize.</param>
      <returns>
        <para>An object that represents the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>
        <para> Gets or sets the paper size for the page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SRDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>
        <para>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>
        <para>Standard paper (15 in. by 11 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>
        <para>Specifies to disable substitutions.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>
        <para>This method clears the <see cref="T:System.Drawing.Brush" /> object color-remap table.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>
        <para> 
       Specifies the part of the document to print.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>
        <para>Saves the current state of this <see cref="T:System.Drawing.Graphics" /> object and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object.</para>
      </summary>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object that represents the saved state of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.RectangleF.Left">
      <summary>
        <para>Gets the x-coordinate of the left edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>
        <para>Gets or sets the language that corresponds with the substitution digits.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LemonChiffon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>
        <para>
       A6
       rotated paper
       (148 mm by 105 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Adds a new toolbox
      item creator.</para>
      </summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format this creator responds to. If a creator responds to more than one format, call <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)" /> more than once. It is an error to add more than one creator for the same format.</param>
      <param name="host">The designer host to associate with the creator. If this parameter is set to <see langword="null" /> , this creator will be available to all designers. If a designer host is supplied, the creator will only be available to designers using the specified host.</param>
    </member>
    <member name="M:System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size">
      <summary>
        <para>
       Creates a <see cref="T:System.Drawing.Size" /> with the coordinates of the specified <see cref="T:System.Drawing.Point" /> .
    </para>
      </summary>
      <param name="p">
    A <see cref="T:System.Drawing.Point" /> that specifies the coordinates for the new <see cref="T:System.Drawing.Size" />.
 </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> class using the specified array of toolbox items.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.Drawing.Design.ToolboxItem" /> containing the toolbox items to fill the collection with.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        A <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the curve.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
        <para>Sets color-adjust matrices for image colors or grayscale, or both, depending on the argument passed for the flags parameter.</para>
      </summary>
      <param name="newColorMatrix">
        Contains the address of a 5x5 color matrix of type <see cref="T:System.Drawing.Imaging.ColorMatrix" />. The matrix is used to transform the image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        Contains the address of a 5x5 grayscale matrix of type <see cref="T:System.Drawing.Imaging.ColorMatrix" />. The matrix is used to transform the image grayscales from one color space to another.
      </param>
      <param name="flags">
        Value that specifies whether color values or grayscale values, or both, are to be modified using the matrices. The default is <see langword="ColorMatrixFlag.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>
        <para>Throws an exception if the <see cref="T:System.Drawing.Design.ToolboxItem" /> is currently locked.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.IndianRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>
        <para>See <see langword="Graphics.FillPath" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>
        <para>Legal extra
       paper (9.275 in.
       by 15 in.). This value is specific to the PostScript driver and is used
       only by Linotronic printers in order to conserve paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>
        <para>Gets or sets the number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        The x-coordinate of the first control point for the curve.
      </param>
      <param name="y2">
        The y-coordinate of the first control point for the curve.
      </param>
      <param name="x3">
        The x-coordinate of the second control point for the curve.
      </param>
      <param name="y3">
        The y-coordinate of the second control point for the curve.
      </param>
      <param name="x4">
        The x-coordinate of the endpoint of the curve.
      </param>
      <param name="y4">
        The y-coordinate of the endpoint of the curve.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>
        <para> Specifies information about how a document is printed, including the
      printer that prints it.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.
      </param>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Retrieves a collection containing a set of standard values for the data type for which this validator is designed. This will return null if the data type does not support a standard set of values.</para>
      </summary>
      <param name="context">
        A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may also return null.
      </param>
      <returns>
        <para>A collection containing null or a standard set of valid values. The default implementation always returns null.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>
        <para>Text with a line through the middle.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that will be multiplied by the brush's current transformation matrix.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ColorConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>
        <para>Used internally.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>
        <para>Terminates a running animation.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to stop animating.
      </param>
      <param name="onFrameChangedHandler">
        An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>
        <para>Gets a rectangular region that defines the starting and ending points of the gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Linen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color used to designate a hot-tracked item. Single-clicking a hot-tracked item executes the item.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkKhaki">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>
    Specifies the ending point of a subpath.
 </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>
        <para>Specifies the overall quality when rendering GDI+ objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>
        <para>Gets or sets the color of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>
        <para>Clears the output channel selection for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Rectangle" /> structures have equal location and size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Rectangle" /> structures have equal <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> class.</para>
      </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the item.</param>
      <param name="marginBounds">The area between the margins.</param>
      <param name="pageBounds">The total area of the paper.</param>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> for the page.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>
    Specifies a mask point.
 </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>
        <para>Specifies a 90-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>
        <para>Specifies a 90-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DimGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>
        <para>Specifies a square cap that squares off both ends of each dash. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightGoldenrodYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumSpringGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Tan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>
        <para>
       ISO B4 (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PrinterResolution" />.</param>
    </member>
    <member name="P:System.Drawing.Color.Orange">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>
        <para>Gets or sets the geometric transformation for this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>
        <para>Specifies that the buffer used for reading or writing pixel data is allocated by the user. If this flag is set, the <paramref name="flags" /> parameter of the <see langword="Bitmap.LockBits" /> method serves as an input parameter (and possibly as an output parameter). If this flag is cleared, then the <paramref name="flags" /> parameter serves only as an output parameter.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>
        <para>Specifies several of the units of measure that
       the Win32 Application Programming Interface (API) uses for printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the gamma value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="gamma">
        Specifies the gamma correction value. Typical values for Gamma run from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful under some circumstances.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>
        <para>Gets the version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>
        <para>
       Tabloid paper (11
       in. by 17 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>
        <para>The unit of measurement is 1 printer's point.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Color" /> structures.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>
        <para>Specifies dashed diagonal lines, that slant to the left from top points to bottom points.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GrayText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an object of this type by using a specified set of property values for the object. This is useful for creating nonchangeable objects that have changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <see langword="GetProperties" /> object.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Blue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, bounding rectangle, and image attributes.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
      <param name="imageAttr">
        An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object with its original size at the specified location.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>
        <para> Gets or sets the margins for this page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IndianRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>
        <para>Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the translation vector.</para>
      </summary>
      <param name="offsetX">
        The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="offsetY">
        The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillClosedCurve" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="P:System.Drawing.Color.DarkOliveGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Printing.Margins" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Printing.Margins" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMap" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Cyan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>
        <para>Gets or sets the filter for this <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified existing <see cref="T:System.Drawing.Font" /> object and <see cref="T:System.Drawing.FontStyle" /> enumeration.</para>
      </summary>
      <param name="prototype">
        The existing <see cref="T:System.Drawing.Font" /> object from which to create the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="newStyle">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to apply to the new <see cref="T:System.Drawing.Font" /> object. Multiple values of the <see cref="T:System.Drawing.FontStyle" /> enumeration can be combined with the <see langword="OR" /> operator.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>
        <para>Specifies a gradient from left to right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="angle">
        The angle (extent) of the rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>
        <para>Specifies a hatch that has the appearance of confetti.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>
        <para>Gets the size of the page, taking into account the page orientation specified by the
   <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> property.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Offset(System.Int32,System.Int32)">
      <summary>
        <para>Translates this <see cref="T:System.Drawing.Point" /> by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset the x-coordinate.
      </param>
      <param name="dy">
        The amount to offset the y-coordinate.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Size.Equals(System.Object)">
      <summary>
        <para>Tests to see whether the specified object is a <see cref="T:System.Drawing.Size" /> with the same dimensions as this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Size" /> and has the same width and height as this <see cref="T:System.Drawing.Size" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>
        <para>Specifies the units of measure for a text string.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSpringGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from a 32-bit ARGB value.</para>
      </summary>
      <param name="argb">
        A value specifying the 32-bit ARGB value.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures. The drawing begins offset from the beginning of the array.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="offset">
        Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.
      </param>
      <param name="numberOfSegments">
        Number of segments after the starting point to include in the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object with the specified name.</para>
      </summary>
      <param name="name">
        The name of the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> class.</para>
      </summary>
      <param name="host">The designer host that is making the request.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of bytes. Sets the <see langword="ValueType" /> property to ValueTypeUndefined or ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of bytes that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="undefined">
        If <see langword="true" />, the <see langword="ValueType" /> property is set to ValueTypeUndefined; otherwise, the <see langword="ValueType" /> property is set to ValueTypeByte.
      </param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and with the resolution of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="g">
        The <see cref="T:System.Drawing.Graphics" /> object that specifies the resolution for the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkTurquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="type">
        The <see langword="Type" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="imgName">
        The name of the image file to look for.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than <see langword="BackwardDiagonal" />, but they are not antialiased.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillPolygon" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>
        <para>Specifies a round anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified Windows handle to a device context.</para>
      </summary>
      <param name="hdc">
        A handle to a device context.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the save flag parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, from a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can be added as well.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> to a <see cref="T:System.Drawing.Rectangle" /> by truncating the <see cref="T:System.Drawing.RectangleF" /> values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>
        <para>Creates a Windows HBITMAP from this <see cref="T:System.Drawing.Bitmap" /> object. You must de-allocate HBITMAP with <see langword="Windows.DeleteObject(handle)" />.</para>
      </summary>
      <returns>
        <para>The handle to the Windows HBITMAP object that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>
        <para>Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>
        <para> Gets or sets the printer resolution for the page.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>
        <para>Specifies a 180-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>
        <para>Specifies a 180-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>
        <para>Specifies that text is trimmed to the nearest word.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>
        <para> Gets or sets the name of the printer to use.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>
        <para>Specifies a printer's point (1/72 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Explicit(System.Drawing.Size)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.Size" /> to a <see cref="T:System.Drawing.Point" />.</para>
      </summary>
      <param name="size">
        The <see cref="T:System.Drawing.Size" /> to convert.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object is underlined.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>
        <para>
       Japanese Chou #3 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>
        <para>Gets a hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle">
      <summary>
        <para>Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <returns>
        <para> A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration 
   value that indicates the style of editor used by the current <see cref="T:System.Drawing.Design.UITypeEditor" />. By default, this method will return
<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> .</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>
        <para>Gets or sets whether the arrow cap is filled.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>
        <para>Objects in the <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> class define the images associated with a specified component. The component can offer a small and large image (large is optional).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>
        <para>Halftone data.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MistyRose">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.ScaleTransform" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.SandyBrown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>
        <para>
       Japanese rotated Chou #4 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the output color channels, as specified by the <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> enumeration, for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration.</para>
      </summary>
      <param name="flags">
        Specifies which color channels will be used. Individual channels can be set or the flags can be combined for all channels using the Boolean <see langword="OR" /> operator.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color channel information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified GDI <see langword="LOGFONT" /> structure.</para>
      </summary>
      <param name="lf">
        An <see langword="Object" /> object that represents the GDI <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>
        <para> Gets the
       number of available printer resolutions in the collection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>
        <para>Specifies that the format is 24 bits per pixel; 8 bits each are used for the red, green, and blue components. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the gamma value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the gamma value cleared. If not supplied, the value defaults to <see langword="ColorAdjustType.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para> Begins the control sequence that determines when and how to preview a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotTrack">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.BurlyWood">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>
        <para>Gets the points in the path. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="layoutRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the text.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>
        <para>
       People's Republic of
       China #1 envelope (102 mm
       by 165
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>
        <para>
       People's Republic of
       China #2 envelope (102 mm
       by 176
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightCyan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>
        <para>Specifies the type of display for hot-key prefixes that relate to text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>
        <para>Returns a value that indicates whether the specified object is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
      <param name="o">
        The object to test.
      </param>
      <returns>
        <para>Returns <see langword="true" /> if <paramref name="o" /> is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object; otherwise, returns <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
      Determines if this converter can convert an object in the given source
      type to the native type of the converter.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="sourceType">
      The type you wish to convert from.
 </param>
      <returns>
      True if this object can perform the conversion.
 </returns>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Drawing.Point)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class from the specified <see cref="T:System.Drawing.Point" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> from which to initialize this <see cref="T:System.Drawing.Size" />.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>
        <para>
       People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>
        <para>Marks the end of a multiple-format section.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The dimension by which to translate the transformation in the x direction.
      </param>
      <param name="dy">
        The dimension by which to translate the transformation in the y direction.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.StringFormat" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string representation of this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>
    C paper (17 in. by 22 in.).
 </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>
        <para>Gets or sets the line alignment.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>
        <para>Gets or sets a value indicating whether the printing output is sent
      to a file instead of a port.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>
        <para> Gets
      a value indicating whether this printer supports color printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Indicates whether the collection contains the specified 
   <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItem" /> to search the collection for.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the 
   specified object; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>
        <para>Specifies the standard paper sizes.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.SolidBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.SolidBrush" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the converter's native type.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name=" culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> that
 represents the converted value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>
        <para>Gets or sets the distance between the cap and the line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DeepPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>
        <para> Gets or sets the left margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InfoText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>
        <para> Defines a reusable object that sends output to a
      printer.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lime">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets color-adjust matrices for image colors or grayscale, or both, depending on the argument passed for the flags parameter. The type of GDI+ object on which the color adjustment is to be made, is specified in the <paramref name="type" /> parameter.</para>
      </summary>
      <param name="newColorMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image grayscales from one color space to another.
      </param>
      <param name="mode">
        Value that specifies whether color values or grayscale values, or both, are to be modified using the matrices. The default is <see langword="ColorMatrixFlag.Default" />.
      </param>
      <param name="type">
        GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjustment information. The default is <see langword="ColorAdjustType.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>
        <para>Color adjustment information that is used by all GDI+ objects that do not have their own color adjustment information.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.OrangeRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from a resource in the specified assembly.</para>
      </summary>
      <param name="type">
        A <see langword="Type" /> object that specifies the assembly in which to look for the resource.
      </param>
      <param name="resource">
        The resource name to load.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points  specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.
      </param>
      <param name="fillMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the given object to a <see cref="T:System.Drawing.Rectangle" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>
        <para>Specifies that a portion of the image is locked for writing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Azure">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>
        <para>** DESCRIPTION PARA MISSING **</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.String" />.</param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>
        <para>
       People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillRectangles" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Brush" /> object that determines attributes of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Pen" /> object from the specified <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure for the new <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Pen" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>
        <para>Specifies that the format is 4 bits per pixel, indexed. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>
        <para>Specifies a print controller that displays a document on
      a screen as a series of images.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>
        <para>Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system exclamation icon (WIN32: IDI_EXCLAMATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>
        <para> Gets or sets a value indicating whether the page should be printed in color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaptionText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>
        <para>Specifies high speed, low quality rendering.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object and drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.
      </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order in which to multiply the two matrices.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>
        <para>Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>
        <para>Specifies that each character is drawn using its glyph CT bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>
        <para>Represents a collection of toolbox items.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transformation by the specified angle in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>
        <para>
       #11 envelope (4.5
       in. by 10.375 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>
        <para>Gets the logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LimeGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Equals(System.Object)">
      <summary>
        <para>Tests whether <paramref name="obj" /> is a <see cref="T:System.Drawing.Rectangle" /> structure with the same location and size of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Rectangle" /> structure and its <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties are equal to the  corresponding properties of this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>
        <para>Initializes a new instance of the <see langword="WmfPlaceableFileHeader" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.Equals(System.Object)">
      <summary>
        <para>Tests whether the specified object is a <see cref="T:System.Drawing.Color" /> structure and is equivalent to this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Color" /> structure equivalent to this <see cref="T:System.Drawing.Color" /> structure; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>
        <para>
       People's Republic of
       China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>
        <para>
       Specifies that the corresponding segment is dashed.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.ForestGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>
        <para>
       Japanese Kaku #2 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>
        <para>Gets the next figure (subpath) from this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object's associated path.</para>
      </summary>
      <param name="path">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.
      </param>
      <param name="isClosed">
        [out] Indicates whether the current subpath is closed. It is <see langword="true" /> if the if the figure is closed, otherwise it is <see langword="false" />.
      </param>
      <returns>
        <para>The number of data points in the retrieved figure (subpath). If there are no more figures to retrieve, zero is returned.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.SkyBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 50 percent closer together than <see langword="Vertical" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>
        <para>Specifies a printer resolution.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>
        <para>Gets or sets the y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Indicates whether this object supports a standard set of values that can be picked from a list.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="GetStandardValues" /> method should be called to find a common set of values the object supports.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>
        <para>
       C4 envelope (229
       mm by 324 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class using the elements in the specified matrix <paramref name="newColorMatrix" />.</para>
      </summary>
      <param name="newColorMatrix">
        The values of the elements for the new <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>
        <para>Specifies that each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font smoothing settings the user has selected for the system.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>
        <para>The unit of measurement is 1 millimeter.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using
   a specified printer.</para>
      </summary>
      <param name="printerSettings">The <see cref="T:System.Drawing.Printing.PrinterSettings" /> that describes the printer to use.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 64-bit integer. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeLong" /> (32 bits), and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A 64-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.ToString">
      <summary>
        <para>Converts the <see langword="Location" /> and <see cref="T:System.Drawing.Size" /> of this <see cref="T:System.Drawing.RectangleF" /> to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that contains the position, width, and height of this <see cref="T:System.Drawing.RectangleF" /> structure¾for example, "{X=20, Y=20, Width=100, Height=50}".</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PaperSource" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSource" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the polygon.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> object from which to take the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown">
      <summary>
        <para> Displays a down arrow button and the
      user interface will be hosted in a drop-down
      dialog.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Single,System.Single)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.RectangleF" /> structure by the specified amount.</para>
      </summary>
      <param name="x">
        The amount to inflate this <see cref="T:System.Drawing.RectangleF" /> structure horizontally.
      </param>
      <param name="y">
        The amount to inflate this <see cref="T:System.Drawing.RectangleF" /> structure vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>
        <para>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>
        <para>Specifies a pixel as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the Point class using coordinates specified by an integer value.</para>
      </summary>
      <param name="dw">
        A 32-bit integer that specifies the coordinates for the new <see cref="T:System.Drawing.Point" />.
      </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)">
      <summary>
        <para>Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this <see cref="T:System.Drawing.RectangleF" />; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>
        <para>Specifies the direction of a linear gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>
        <para> Gets the number of different paper sources in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Firebrick">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <para>Specifies how data is interpolated between endpoints.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>
        <para>The integer values supplied are 32-bit values.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>
        <para>A pattern of lines on a diagonal from upper left to lower right.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string representing this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>
        <para>
       Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned to the left of
       the line being drawn.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but ignored.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.op_Inequality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Tests whether two specified <see cref="T:System.Drawing.Color" /> structures are different.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Color" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Color" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Color" /> structures are different; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>
        <para> One-hundredth of a millimeter
       (0.01 mm).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>
        <para> Creates a handle to a DEVMODE structure that corresponds to the printer settings.</para>
      </summary>
      <returns>
        <para>A handle to a DEVMODE structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>
        <para>Contains attributes of an associated <see cref="T:System.Drawing.Imaging.Metafile" /> object. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="origin">
        A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <param name="charactersFitted">
        Number of characters in the string.
      </param>
      <param name="linesFilled">
        Number of text lines in the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in pixels, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ImageFormatConverter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathData" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>
        <para>Removes a previously added toolbox creator of the specified data format.</para>
      </summary>
      <param name="format">The data format of the creator to remove. </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>
        <para> Gets the number of strings in the collection.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object within the specified layout area.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>
        <para>Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>
        <para>Translates a Windows color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="win32Color">
        The Windows color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated Windows color.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>
        <para>Gets or sets text alignment information.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the default application icon (WIN32: IDI_APPLICATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>
        <para>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>
        <para>Gets or sets the stride width (also called scan width) of the <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>
        <para>Adds a font from the specified file to this <see cref="T:System.Drawing.Text.PrivateFontCollection" /> object. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
      <param name="filename">
        A <see langword="String" /> containing the file name of the font to add.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>
        <para>Defines a graphic metafile. A metafile contains records that describe a sequence of graphics operations that can be recorded (constructed) and played back (displayed). Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Olive">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.GetBrightness">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) brightness value for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The brightness of this <see cref="T:System.Drawing.Color" /> structure. The brightness ranges from 0.0 through 1.0, where 0.0 represents black and 1.0 represents white.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.Point" /> by the negative of a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> to translate.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to subtract from the coordinates of <paramref name="pt" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>
        <para>Indicates invalid data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>
        <para>Gets the Tag Image File Format (TIFF) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>
        <para>Default quality.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width and height. The arrow end caps created with this constructor are always filled.</para>
      </summary>
      <param name="width">
        The width of the arrow.
      </param>
      <param name="height">
        The height of the arrow.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Brush" /> objects.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>
        <para>Defines a map for converting colors. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color-remap table, which is an array of <see cref="T:System.Drawing.Imaging.ColorMap" /> structures. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with either fully restricted
   or unrestricted access, as specified.</para>
      </summary>
      <param name="state">
        <para>One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </para>
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>
        <para>Gets or sets the x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream used to load the image.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>
        <para>Specifies that the image has more than one frame (page). Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>
        <para>Sets the resolution for this <see cref="T:System.Drawing.Bitmap" />.</para>
      </summary>
      <param name="xDpi">
        The horizontal resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.
      </param>
      <param name="yDpi">
        The vertical resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>
        <para> Creates a handle to a DEVMODE structure that corresponds
      to the printer and the page settings specified through the <paramref name="pageSettings" />
      parameter.</para>
      </summary>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> object that the DEVMODE structure's handle corresponds to.</param>
      <returns>
        <para>A handle to a DEVMODE structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>
        <para>Gets the Windows icon image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than <see langword="BackwardDiagonal" />, and are twice its width, but the lines are not antialiased.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IsEmpty">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Linen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>
        <para>Occurs when the
      last page of the document has printed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>
        <para>
       JIS B6
       rotated paper (182 mm by 128
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the Windows logo icon (WIN32: IDI_WINLOGO).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.TextureBrush" /> object this method creates, cast as an <see langword="Object" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>
        <para>Adds a font contained in system memory to this <see cref="T:System.Drawing.Text.PrivateFontCollection" /> object.</para>
      </summary>
      <param name="memory">
        The memory address of the font to add.
      </param>
      <param name="length">
        The memory length of the font to add.
      </param>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents a geometric transformation to apply to the region.
      </param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintDocument" />
class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>
        <para>
       JIS B5 transverse
       paper (182 mm by 257 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>
        <para>Locks the <see cref="T:System.Drawing.Design.ToolboxItem" />, preventing changes to 
   its properties and setting it to read-only.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>
        <para>
       A4 paper (210
       mm by 297
       mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>
        <para>There is no format information.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>
        <para>
       A3 paper
       (297 mm by 420 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain the specified number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
      <param name="count">
        An integer that specifies the number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects that the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object can contain.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>
        <para>Initializes
      a new instance of the <see cref="T:System.Drawing.Design.ToolboxItem" /> class
      using the specified type.</para>
      </summary>
      <param name="">The type of tool for this toolbox item.</param>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>
        <para>Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>
        <para>
       Draft-quality resolution.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is device dependent.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is device dependent; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>
        <para>Gets the number of subpaths in the path.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.G">
      <summary>
        <para>Gets the green component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.B">
      <summary>
        <para>Gets the blue component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>
        <para>
       People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.A">
      <summary>
        <para>Gets the alpha component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>
        <para>See <see langword="Graphics.GetHdc" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object to combine.
      </param>
      <param name="combineMode">
        Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>
        <para>The black color channel.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>
        <para>Specifies that a portion of the image is locked for reading or writing.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>
        <para>Initializes a new instance of the <see langword="MetaHeader" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>
        <para>The cyan color channel.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>
        <para>Gets the face name of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the red, green, and blue components. The remaining 8 bits are not used. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>
        <para>
       Invite envelope (220
       mm by 220 mm).
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>
        <para>Specifies the type of point in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the rectangle that defines the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the threshold value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the threshold value cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of the active window's title bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.RosyBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Honeydew">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>
        <para>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Bottom">
      <summary>
        <para>Gets the y-coordinate of the bottom edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</para>
      </summary>
      <param name="point1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.
      </param>
      <param name="point2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSource" />.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>
        <para>Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns a value that indicates whether the pixel format is canonical.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="pixfmt" /> parameter is canonical; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.SizeConverter" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>
        <para>Specifies the alignment of a text string relative to its layout rectangle.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the luminance table parameter category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>
        <para>Gets the unit of measure for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumVioletRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>
        <para>Specifies the hatch style <see langword="Cross" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.ToKnownColor">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.KnownColor" /> value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration, if the <see cref="T:System.Drawing.Color" /> structure is created from a pre-defined color by using either the <see langword="FromName" /> method or the <see langword="FromKnownColor" /> method; otherwise, zero.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF)~System.Drawing.PointF">
      <summary>
        <para>
       Converts the specified <see cref="T:System.Drawing.SizeF" /> to a
    <see cref="T:System.Drawing.PointF" />.
    </para>
      </summary>
      <param name="size">
    The <see cref="T:System.Drawing.SizeF" /> to convert.
 </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>When overridden in a derived class, completes the control sequence that determines when and 
       how to print a page of a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Point" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Point" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.PointF">
      <summary>
        <para>Represents an ordered pair of floating point x- and y-coordinates that defines a point in a two-dimensional plane.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class from the specified dimensions.</para>
      </summary>
      <param name="width">
        The width component of the new <see cref="T:System.Drawing.SizeF" />.
      </param>
      <param name="height">
        The height component of the new <see cref="T:System.Drawing.SizeF" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> event.
   It is called after the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and
   before the first page of the document
   prints.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>
        <para>Occurs when the output to print for the current page is needed. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>
        <para>Gets or sets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.FontFamily" /> object and is identical to this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is both a <see cref="T:System.Drawing.FontFamily" /> object and is identical to this <see cref="T:System.Drawing.FontFamily" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>
        <para>Returns the handle to an icon.</para>
      </summary>
      <returns>
        <para>A Windows handle to an icon.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see langword="HatchStyle" /> enumeration and foreground color.</para>
      </summary>
      <param name="hatchstyle">
        The <see langword="HatchStyle" /> enumeration that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="foreColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>
        <para>Marks a multiple-format section.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>
        <para>Gets the currently selected toolbox item.</para>
      </summary>
      <returns>
        <para> The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <para>The <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration specifies how to substitute digits in a string according to a user's locale or language.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Creates components from each type contained in this toolbox
      item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to use when creating the components.</param>
      <returns>
        <para>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>
        <para>Specifies bicubic interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>
        <para>
       Double-sided, horizontal printing.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event that occurs
   when components are added to the toolbox.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>
        <para>Notifies the toolbox service that the selected tool has been used.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>
        <para>Only entire lines are laid out in the formatting rectangle. By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first. Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height. To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>
        <para>
       6 3/4 envelope
       (3.625 in. by 6.5 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the quality parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.RectangleF" /> structures have equal location and size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two specified <see cref="T:System.Drawing.RectangleF" /> structures have equal <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>
        <para>Controls how a document is printed.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>
        <para>Represents
       the
       exception that is thrown when trying to access a printer using invalid printer settings.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>
        <para> One-thousandth of an inch
       (0.001 in.).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>
        <para>Returns a value that indicates whether the specified object is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </summary>
      <param name="o">
        The object to test.
      </param>
      <returns>
        <para>Returns <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.CategoryNameCollection" /> that contains the names to initialize the collection values to.</param>
    </member>
    <member name="P:System.Drawing.Color.LightBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>
        <para> The upper bin of a printer (or, if the printer only has one bin, that bin).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> class.</para>
      </summary>
      <param name="pageSettings">The page settings for the page to be printed.</param>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Window">
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a rectangle specified by a coordinate pair, a width, and a height.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the rectangle.
      </param>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="width">
        The width of the rectangle to draw.
      </param>
      <param name="height">
        The height of the rectangle to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>
        <para> Gets the printer resolution.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
      <param name="isAngleScaleable">
        Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>
        <para>Specifies antialiased rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>
        <para>Gets or sets the number of twips per inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.BeginContainer" /><see langword="_Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>
        <para> Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
property designates a valid printer.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object is bold.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>
        <para>See <see langword="Graphics.RenderingOrigin" />.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>
        <para> Controls access to printers. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PrinterResolution" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>
        <para>
       High resolution.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> object and opens and uses a new graphics container with the specified scale transformation.</para>
      </summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the new graphics container.
      </param>
      <param name="srcrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the new graphics container.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the state of this <see cref="T:System.Drawing.Graphics" /> object at the time of the method call.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a toolbox item from the specified object that 
      represents a toolbox item in serialized
      form, using the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to associate with this <see cref="T:System.Drawing.Design.ToolboxItem" />. </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>
        <para>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="destSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.
      </param>
      <param name="srcSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.
      </param>
      <param name="pts">
        Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified file.</para>
      </summary>
      <param name="filename">
        The name of the bitmap file.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Maroon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>
        <para>Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>
        <para>Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to this path.</para>
      </summary>
      <param name="addingPath">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.
      </param>
      <param name="connect">
        A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path. A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>
        <para>Gets or sets the length of the property.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>
        <para>Equivalent to the Invalid element of the <see cref="T:System.Drawing.Drawing2D.QualityMode" /> enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Text.InstalledFontCollection" /> class. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>
        <para>See <see langword="Graphics.TextContrast" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>
        <para>Gets the height, in font design units, of the em square for the specified style. For information about font metrics, see <see langword="Obtaining Font Metrics" />.</para>
      </summary>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration for which to get the em height.
      </param>
      <returns>
        <para>The height of the em square.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Thistle">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>
        <para>Specifies horizontal lines that are spaced 75 percent closer together than hatch style <see langword="Horizontal" /> (or 25 percent closer together than <see langword="LightHorizontal" />).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="origin">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point where the text starts.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Gray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Determines if the list of standard values returned from
      GetStandardValues is an exclusive list.  If the list
      is exclusive, then no other values are valid, such as
      in an enum data type.  If the list is not exclusive,
      then there are other valid values besides the list of
      standard values GetStandardValues provides.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <returns>
      True if the collection returned from GetStandardValues
      is an exhaustive list of possible values, or false if
      other values are possible.  The default for this method
      always returns false;
 </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>
        <para> Gets the maximum number of copies that the printer allows you to print at a time.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object with the specified <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <param name="flags">
        A <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration member that specifies whether to adjust colors for grayscale, colors, or both grayscale and colors.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>
        <para>The integer values supplied are 64-bit values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>
        <para>Reverses the order of points in the <see langword="PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Salmon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
      <param name="isAngleScaleable">
        Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, and A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>
        <para>The maximum value for this enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the line.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the line.
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>
        <para>Gets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the transformation parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object can be added.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that  is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>
        <para>Occurs when components are created.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>
        <para>Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates a globally unique identifier (GUID) that identifies the category of an image encoder parameter.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Icon" /> object to the specified output <see langword="Stream" /> object.</para>
      </summary>
      <param name="outputStream">
        The <see langword="Stream" /> object to save to. This can be a file, data object, or other <see langword="Stream" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>
        <para>Gets or sets a value indicating whether to use anti-aliasing when displaying
      the print preview.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Aqua">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the outlines of the rectangles.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
        <para>Creates a gradient falloff based on a bell-shaped curve.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).
      </param>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified
   context and property descriptor characteristics.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name=" propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that indicates the property to match with the properties to return.</param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>
        <para>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <para>The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> class provides the necessary storage members and methods to retrieve all pertinent information about the installed image codecs. Not inheritable. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>
        <para>
       People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SizeF.IsEmpty">
      <summary>
        <para>Gets a value indicating  whether this <see cref="T:System.Drawing.SizeF" /> has zero width and height.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>
        <para>Clears the color-adjust matrix to all zeroes.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>
        <para>Specifies the default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SaddleBrown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system question icon (WIN32: IDI_QUESTION).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>
        <para>
       Legal paper (8.5 in.
       by 14
       in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.FloralWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>
        <para>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Khaki">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>
        <para>Initializes this <see cref="T:System.Drawing.Region" /> object to an empty interior.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.OliveDrab">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file in the specified format.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an instance of this type given a set of property values for the object. This is useful for objects that are immutable but still want to provide changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from a call to the <see langword="GetProperties" /> method.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.LightCoral">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of <see langword="SmallCheckerBoard" />.</para>
      </summary>
    </member>
  </members>
</doc>