<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Runtime.Remoting</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Remoting.Channels.CommonTransportKeys">
      <summary>
        <para>The transport keys associated with common values used by the channels.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.IPAddress">
      <summary>
        <para>The transport key associated with the IP address from which an incoming request arrived.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.ConnectionId">
      <summary>
        <para>The transport key associated with a unique ID given to each incoming socket connection.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.RequestUri">
      <summary>
        <para>The transport key associated with the URI that made the request.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SocketHandler.ReadToByte(System.Byte,System.Runtime.Remoting.Channels.ValidateByteDelegate)">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpChannel">
      <summary>
        <para>Provides an implementation for a sender-receiver channel
      that uses the HTTP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class, activating the
   client and server channels with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class, activating the
   underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> on the specified port.</para>
      </summary>
      <param name="port">The port on which to activate the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class with the given
   channel properties and specified <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">The channel properties with which the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> should be initialized.</param>
      <param name="clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> that creates the client channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> through which remoting messages flow through.</param>
      <param name="serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> that creates server channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> through which remoting messages flow through.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel URI
      and the remote well known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URI of the remote well known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array of all the
      URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.
      </para>
      </summary>
      <param name="objectURI">The URI of the object for which URL's are required. </param>
      <returns>
        <para>An array of the URLs for an object with the specified
      URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
      current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.AddHookChannelUri(System.String)">
      <summary>
        <para>Adds a URI on which the channel hook should listen.</para>
      </summary>
      <param name="channelUri">The channel URI on which the channel hook is listening.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelData">
      <summary>
        <para> Gets the channel-specific data.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelScheme">
      <summary>
        <para>Gets the type of listener to hook into (for example "http").</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.WantsToListen">
      <summary>
        <para>Gets a Boolean value indicating whether the current
      instance wants to be hooked into the
      outside listener service. </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelSinkChain">
      <summary>
        <para>Gets the channel sink chain that the current channel is using.
      </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of the channel
   properties associated with the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key">The key with which the requested property is associated.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys with which
 the channel properties are associated.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel">
      <summary>
        <para>Provides an implementation for a client channel that
      uses the HTTP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class 
   with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class
 with the specified channel name and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />.</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> .</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class with the specified
   channel properties and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url"> The URL from which to extract the URI of the remote well-known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel, or <see langword="null " />if the specified URL is not an HTTP URL.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key"> The key the requested property is associated with.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys that the
   channel properties are associated with.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel">
      <summary>
        <para>Provides an implementation for a server channel that uses the HTTP protocol
      to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class at the specified port.</para>
      </summary>
      <param name="port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the given name
 at the specified port.</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class at the specified
   port with the given name and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name="port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the specified
   channel properties and the provided <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URIs.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The channel URI.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri">
      <summary>
        <para>Returns the URI of the current channel.</para>
      </summary>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array
      of all the URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.
      </para>
      </summary>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
      <returns>
        <para> An array of the URLs for an object
      with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
      current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)">
      <summary>
        <para>Adds a URI on which the channel hook must listen.</para>
      </summary>
      <param name="channelUri">A URI on which the channel hook must listen.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority">
      <summary>
        <para>Gets the priority of the channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData">
      <summary>
        <para>
      Gets the channel specific data.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme">
      <summary>
 Gets the type of listener to hook into (for example "http").
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen">
      <summary>
        <para>Gets a Boolean value indicating whether <see cref="T:System.Runtime.Remoting.Channels.IChannelReceiverHook" /> wants to be hooked into the
   outside listener service. </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain">
      <summary>
        <para>Gets the channel sink chain that the current channel is using.
      </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key"> The key the requested property is associated with.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys the
   channel properties are associated with.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)">
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel">
      <summary>
        <para>Provides an implementation for a sender-receiver channel
      that uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a
   client channel, and not a server channel.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating a server
   channel at the specified port.</para>
      </summary>
      <param name="port">The port number at which to activate the TCP server channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the provided
   channel properties, a <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> and
   a <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties which hold the configuration information for the current channel.</param>
      <param name=" clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> that creates the client channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> through which remoting messages flow through.</param>
      <param name=" serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> that creates server channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> through which remoting messages flow through.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel URI
      and the remote well known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URI of the remote well known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink, that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array
      of all the URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </summary>
      <param name="objectURI">The URI of the object for which URLs are required. </param>
      <returns>
        <para> An array of the URLs for an object
      with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Optional initialization information.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
 current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Optional state information for the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData">
      <summary>
        <para> Gets the channel-specific data.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel">
      <summary>
        <para>Provides an implementation for a client channel that
      uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the provided
   name and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> .</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified
   channel properties and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URIs.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The channel URI.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink, that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
      <summary>
        <para>Provides an implementation for a server channel that
      uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class at the specified port.</para>
      </summary>
      <param name="port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class
   with the given name at the specified port.</para>
      </summary>
      <param name="name">The name of the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class at the specified
   port with the given name and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified
   channel properties and the provided <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url"> The URL from which to extract the URI of the remote well-known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri">
      <summary>
        <para>Returns the URI of the current channel.</para>
      </summary>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array of all the
      URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </summary>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
      <returns>
        <para>An array of the URLs for an object with the specified
      URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)">
      <summary>
        <para>
      Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Optional ininitialization information.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
 current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Optional state information for the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData">
      <summary>
        <para>
      Gets the channel specific data.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for the binary client
      formatter sink provider.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with the given
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />.</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> objects containing provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>
        <para> Creates
      a sink chain.
      </para>
      </summary>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">
        <para>A channel data object describing a channel on the remote server. </para>
      </param>
      <returns>
        <para> The first sink of the newly formed channel sink chain,
      or <see langword="null" /> indicating that this provider will not or cannot provide a connection for this endpoint.
      </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in 
   the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink">
      <summary>
        <para> Provides the implementation for a client formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" /> class.</para>
      </summary>
      <param name="nextSink">The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>
        <para>Synchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <returns>
        <para>The response to the processed message.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>
        <para>Asynchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name=" replySink">The sink that will receive the reply to the provided message.</param>
      <returns>
        <para>An <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to
   control the asynchronous message after it has been dispatched.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
      <param name="requestStream">The stream headed toward the transport sink.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> coming back from the transport sink. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a method call on the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name=" msg">The message to process.</param>
      <param name=" headers">The headers to add to the outgoing message heading to the server.</param>
      <param name=" stream">The stream headed toward the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a response to a method call on the
      current sink.</para>
      </summary>
      <param name="sinkStack">A stack of sinks that called the current sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" headers">The headers retrieved from the server response stream.</param>
      <param name=" stream">The stream coming back from the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which
   the provided message is to be serialized.</para>
      </summary>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> containing details about the method call.</param>
      <param name="headers">The headers to add to the outgoing message heading to the server.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
   message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for the server formatter channel
      sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with the provided
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
      <param name="providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="channelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
 </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
 newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
      <summary>
        <para> Provides the implementation for a server formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</para>
      </summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> .</param>
      <param name=" nextSink">The next sink in the channel sink chain.</param>
      <param name=" receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para> Requests processing of the response from a method call
      sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg"> The response message to serialize. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Http">
      <summary>
        <para> Indicates that the current formatter sink is using the HTTP
 protocol, and therefore requires special processing.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Other">
      <summary>
        <para>Indicates that a protocol other than HTTP is used with
 the current formatter sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for a client
      formatter sink provider.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with the given
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>
        <para> Creates
      a sink chain.
      </para>
      </summary>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">
        <para>A channel data object describing a channel on the remote server. </para>
      </param>
      <returns>
        <para> The first sink of the newly formed channel sink chain,
      or <see langword="null" /> indicating that this provider will not or cannot provide a connection for this endpoint.
      </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in
   the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink">
      <summary>
        <para> Provides the implementation for a client formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink" /> class.</para>
      </summary>
      <param name="nextSink">The next sink in the channel sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>
        <para>Synchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <returns>
        <para>The response to the processed message.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>
        <para>Asynchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name=" replySink">The sink that will receive the reply to the provided message.</param>
      <returns>
        <para>An <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to
   control the asynchronous message after it has been dispatched.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
      <param name="requestStream">The stream headed toward the transport sink.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> coming back from the transport sink. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a method call on the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name=" msg">The message to process.</param>
      <param name=" headers">The headers to add to the outgoing message heading to the server.</param>
      <param name=" stream">The stream headed to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a response to a method call on the
      current sink.</para>
      </summary>
      <param name="sinkStack">A stack of sinks that called the current sink.</param>
      <param name=" state">The state associated with the current sink.</param>
      <param name=" headers">The headers retrieved from the server response stream.</param>
      <param name=" stream">The stream coming back from the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which
 the provided message is to be serialized.</para>
      </summary>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> containing details about the method call.</param>
      <param name="headers">The headers to add to the outgoing message heading to the server.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
 current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for a server formatter channel
      sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with the provided
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
      <param name="providerData">An <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="channelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
 </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
 newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink">
      <summary>
        <para> Provides the implementation for a server formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" /> class.</para>
      </summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> .</param>
      <param name=" nextSink">The next sink in the channel sink chain.</param>
      <param name=" receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">The stack of sinks that transports the message.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading back to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests processing from the current sink of the response from a method call
 sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg">The response message that is to be serialized. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
 current channel sink.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Http">
      <summary>
        <para> Indicates that the current formatter sink is using the HTTP
 protocol, and therefore requires special processing.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Other">
      <summary>
        <para>Indicates that a protocol other than HTTP is used with
 the current formatter sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.MetaData">
      <summary>
        <para>Provides methods that allow you to work with XML schema.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>
        <para>Converts the specified object types to XML schema, and writes it to a file
      specified by name.</para>
      </summary>
      <param name="types">The object types to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" path">The path of the XML file.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>
        <para> Converts the specified object types to XML schema, and writes it to
      a specified stream.</para>
      </summary>
      <param name="types">The object types to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>
        <para>Converts the specified service types to XML schema, and writes it to a file
      specified by name.</para>
      </summary>
      <param name="types">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" path">The path of the XML file.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>
        <para> Converts the specified service types to XML schema, and writes it to
      a specified stream.</para>
      </summary>
      <param name="serviceTypes">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)">
      <summary>
        <para>Downloads the XML schema from a URL, and writes it to the specified stream.</para>
      </summary>
      <param name="url"> The URL where the XML schema is located.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)">
      <summary>
        <para> Downloads the XML schema from a URL, and writes it to the specified file.</para>
      </summary>
      <param name="url">The URL where the XML schema is located.</param>
      <param name=" path">The path of the file the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)">
      <summary>
        <para>Converts the specified schema definition into C# proxy source code for a
      remote object located at the specified URL and in the provided class
      namespace.</para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory">The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name=" outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
      <param name=" proxyUrl">The URL where the target remote object represented by the new proxy will be located.</param>
      <param name=" proxyNamespace">The namespace of the newly created proxy. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)">
      <summary>
        <para>Converts the specified schema definition into C# proxy
      source code for a remote object located at the specified URL.</para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory"> The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name="outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
      <param name=" proxyUrl">The URL where the target remote object represented by the new proxy will be located.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)">
      <summary>
        <para>Converts the specified schema definition into C# proxy source code. </para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory"> The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name=" outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)">
      <summary>
        <para>Compiles specified code source streams into a run-time assembly file.</para>
      </summary>
      <param name="outCodeStreamList">An <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</param>
      <param name=" assemblyPath">The location where the new run-time assembly is generated.</param>
      <param name=" strongNameFilename">The strong name to compile into the new run-time assembly. Can be <see cref="F:System.String.Empty" qualify="true" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)">
      <summary>
        <para> Compiles
      a specified code source file
      into a run-time assembly file.</para>
      </summary>
      <param name="codePath">The path to the file containing the source code.</param>
      <param name=" assemblyPath">The location where the new run-time assembly is generated.</param>
      <param name=" strongNameFilename">The strong name to compile into the new assembly. Can be <see cref="F:System.String.Empty" qualify="true" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)">
      <summary>
        <para>Saves the input stream to a file with the specified name.</para>
      </summary>
      <param name="inputStream">The stream to write to the specified file.</param>
      <param name=" path">The file the input stream is written to.</param>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.ServiceType">
      <summary>
        <para>Associates a well-known object type that is passed to the Web Services Description Language (WSDL) generator with a remote
      endpoint that can process messages sent to a method on the type.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" />class with the object
<see cref="T:System.Type" /> that is passed to the Web 
   Services Description Language (WSDL) generator.</para>
      </summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> class with the URL and
<see cref="T:System.Type" /> of an object that is passed 
   to the Web Services Description Language (WSDL) generator.</para>
      </summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator.</param>
      <param name=" url">The well-known endpoint that can process messages sent to a method on the object type specified in the <paramref name="type" /> parameter. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.ObjectType">
      <summary>
        <para> Gets the object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL)
   generator.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.Url">
      <summary>
        <para>Gets the URL of an object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL) generator.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider">
      <summary>
        <para>Provides the implementation for the server channel
      sink provider that creates <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
      instances.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with specified
   properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> .</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> instances to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="localChannelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
      </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
      newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink">
      <summary>
        <para>Provides the implementation for a server channel sink that generates Web Services Description
      Language (WSDL) dynamically on the server.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> class.</para>
      </summary>
      <param name="receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</param>
      <param name=" nextSink">The next sink in the sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">The headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests processing from the current sink of the response from a method call
      sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
   response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg">The response message to serialize. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
   response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSParserException">
      <summary>
        <para>The exception thrown if an error occurs during parsing of Web Services Description
      Language (WSDL).</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSGeneratorException">
      <summary>
        <para>The exception thrown if an error occurs during generation of Web Services Description
      Language (WSDL).</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlType">
      <summary>
        <para>Specifies the schema type used to describe services
      provided by an application.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Sdl">
      <summary>
        <para> Indicates that basic Services Description Language (SDL) is used to describe services
      provided by an application. This value is obsolete.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Wsdl">
      <summary>
        <para>Indicates that the Web Services Description Language
      (WSDL) is used to describe services provided by an application.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingClientProxy">
      <summary>
        <para>The abstract base class for proxies to well-known
      objects generated by the <see topic="pgrfsoapsudsutilitysoapsudsexe " title="Soapsuds tool" />.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.AllowAutoRedirect">
      <summary>
        <para> Gets or sets a value indicating whether the automatic handling of server redirects is enabled.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Cookies">
      <summary>
        <para> Gets the cookies received from the server that will be sent back on
      requests that match the cookie's path.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.EnableCookies">
      <summary>
   Gets or sets a value indicating whether the handling of
   cookies received from the server is enabled.
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.PreAuthenticate">
      <summary>
        <para> Gets or sets a value indicating whether preauthentication of requests is enabled.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Path">
      <summary>
        <para>Gets or sets the base URL to the server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Timeout">
      <summary>
        <para> Gets or sets the time-out in milliseconds to use for
      synchronous calls.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Url">
      <summary>
        <para>Gets or sets the base URL to the server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.UserAgent">
      <summary>
        <para>Gets or sets the user agent HTTP header for the request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Username">
      <summary>
        <para>Gets or sets the user name to send for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Password">
      <summary>
        <para>Gets or sets the password to use for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Domain">
      <summary>
        <para>Gets or sets the domain name to be used for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyName">
      <summary>
        <para>Gets or sets the name of the proxy server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyPort">
      <summary>
        <para>Gets or sets the port number of the proxy server to use for requests.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingService">
      <summary>
        <para>Provides the base implementation for the remoting XML Web
      services.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Application">
      <summary>
   Gets a reference to the application object for the
   current HTTP request.
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Context">
      <summary>
        <para>Gets the current HTTP-specific context used by the HTTP
      server to process Web requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Session">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpSessionState" /> for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Server">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current 
   request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.User">
      <summary>
        <para> Gets the security context of the user on whose
      behalf the code is running, including that user's identity and any roles they belong to.</para>
      </summary>
    </member>
  </members>
</doc>