<?xml version="1.0"?>
<doc>
  <assembly>
    <name>cscompmgd</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.ErrorLevel">
      <summary>
                Specifies the severity of a compiler diagnostic.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.None">
      <summary>
                An unknown severity.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.Warning">
      <summary>
                A warning or suggestive diagnostic.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.Error">
      <summary>
                An error diagnostic.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.ErrorLevel.FatalError">
      <summary>
                A noncontinuable error diagnostic.
            </summary>
    </member>
    <member name="T:Microsoft.CSharp.CompilerError">
      <summary>
                Represents an error or diagnostic message reported by the compiler.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceFile">
      <summary>
                Specifies the filename of the source text that caused the diagnostic, or an empty string ("").
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceLine">
      <summary>
                Specifies the line of the source text that caused the diagnostic (1 based), or 0 if there is no line information.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.SourceColumn">
      <summary>
                Specifies the column of the source text that caused the diagnostic (1 based), or 0 if there is no column information.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorNumber">
      <summary>
                Specifies the diagnostic number.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorMessage">
      <summary>
                Specifies the diagnostic message text.
            </summary>
    </member>
    <member name="F:Microsoft.CSharp.CompilerError.ErrorLevel">
      <summary>
                Specifies the severity of this diagnostic.
            </summary>
    </member>
    <member name="M:Microsoft.CSharp.CompilerError.ToString">
      <summary>
                Converts the diagnostic to a string of the following form:
                <code>
                    [filename(line,column):] AAAAA CSXXXX: message
                </code>
                Where AAAAA is either: "warning", "error", or "fatal error", and
                CSXXXX is the diagnotic number in decimal format.
                This is the same format seen at the command-line.
            </summary>
    </member>
    <member name="T:Microsoft.CSharp.Compiler">
      <summary>
                Managed wrapper for the C# compiler.
            </summary>
    </member>
    <member name="M:Microsoft.CSharp.Compiler.Compile(System.String[],System.String[],System.String,System.String[],System.Collections.IDictionary)">
      <summary>
                Compile the given C# sources to the specified target file.
            </summary>
      <param name="sourceTexts">
                An array of type <see langword="string" />, each with C# code.  Each string is the equivalent of a single source file.
                There must be at least one sourceText element.
            </param>
      <param name="sourceTextNames">
                An array of type <see langword="string" /> containing the filenames for each sourceText.  The filenames are used for
                compiler diagnostics and debug information.  This array is required, but
                can be locally overridden by use of the <see topic="vclrfLine" title="#line" /> directive.  This array must have
                the same number of elements as the <paramref name="sourceTexts" /> parameter.
            </param>
      <param name="target">
                The output filename.  This argument is required.
            </param>
      <param name="imports">
                An array of type <see langword="string" />, with files to reference.  This is the same as the <see topic="vcrefIIImportMetadataFromFileList" title="/reference (Import Metadata)" /> compiler option.
                This parameter can be <see langword="null" />.
            </param>
      <param name="options">
                A <see cref="T:System.Collections.IDictionary" /> of compiler options.
                The key is the short form of the compiler option.
                The value is the value desired for the option.
                This parameter can be <see langword="null" />.
                Note that not all of the <see topic="vcrefcompileroptions" title="C# Compiler Options" /> are recognized.
                Recognized options and values:
                <list type="table"><listheader><term>Key Name</term><description>Usage</description></listheader><item><term>addmodule</term><description><para>
                            List of modules to include in this assembly. The module names must be separated 
                            by the vertical bar or pipe character.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfAddmoduleImportMetadata" title="/addmodule (Import Metadata)" /></para></description></item><item><term>baseaddress</term><description><para>
                            Base address for libraries.
                            Value must be of type <see cref="T:System.UInt32" />.
                            </para><para>
                            See <see topic="vcgrfDllbaseSpecifyBaseAddressOfDLL" title="/baseaddress (Specify Base Address of DLL)" /></para></description></item><item><term>bugreport</term><description><para>
                            Produces bug report file.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcerrBugreportReportProblem" title="/bugreport (Report a Problem)" /></para></description></item><item><term>checked</term><description><para>
                            Set default expression evaluation to checked (or unchecked).
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vclrfCheckedCheckIntegerArthmetic" title="/checked (Check Integer Arithmetic)" /></para></description></item><item><term>d</term><description><para>
                            List of semicolon separated symbols to define.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcrefDPreprocessorDefinition" title="/define (Preprocessor Definition)" /></para></description></item><item><term>debug</term><description><para>
                            Emit debug information with output.
                            Value must be of type <see cref="T:System.Boolean" />.
                            Full or pdbonly cannot be specified.
                            </para><para>
                            See <see topic="vcrefDEmitDebuggingInformation" title="/debug (Emit Debugging Information)" /></para></description></item><item><term>doc</term><description><para>
                            Filename to put XML comments in.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcerrDocProcessDocumentationComments" title="/doc (Process Documentation Comments)" /></para></description></item><item><term>filealign</term><description><para>
                            PE section alignment size.
                            Value must be of type <see cref="T:System.UInt32" />.
                            </para><para>
                            See <see topic="vclrfFilealignSpecifySectionAlignment" title="/filealign (Specify Section Alignment)" /></para></description></item><item><term>incr</term><description><para>
                            Enable incremental rebuild.
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vcgrfIncrementalEnableIncrementalCompilation" title="/incremental (Enable Incremental Compilation)" /></para></description></item><item><term>lib</term><description><para>
                            Additional paths to search when locating modules and referenced assemblies.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfLibSpecifyAssemblyReferenceLocations" title="/lib (Specify Assembly Reference Locations)" /></para></description></item><item><term>linkres</term><description><para>
                            Link a managed resource to the assembly.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfLinkresourceLinkToCOMResource" title="/linkresource (Link to .NET Framework Resource)" /></para></description></item><item><term>m</term><description><para>
                            Type to search in for the Main method.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfMainSpecifyLocationOfMainFunction" title="/main (Specify Location of Main Method)" /></para></description></item><item><term>nostdlib</term><description><para>
                            Do not auto-reference mscorlib.dll.
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vcrefNostdlibDoNotImportStandardLibrary" title="/nostdlib (Do Not Import Standard Library)" /></para></description></item><item><term>nowarn</term><description><para>
                            List of semicolon separated warning numbers to not report.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcerrNowarnSuppressSpecifiedWarnings" title="/nowarn (Suppress Specified Warnings)" /></para></description></item><item><term>o</term><description><para>
                            Enable compiler optimizations.
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vcrefUEnabledisableOptimizations" title="/optimize (Enable/disable Optimizations)" /></para></description></item><item><term>r</term><description><para>
                            Referenced assemblies.
                            Value must be of type <see cref="T:System.String" />.
                            If more than one assembly is specified, the file name must be separated by the vertical bar or
                            pipe character.
                            </para><para>
                            See <see topic="vcrefIIImportMetadataFromFileList" title="/reference (Import Metadata)" /></para></description></item><item><term>res</term><description><para>
                            Embed a managed resource.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcrefResAttachResourceFileToOutput" title="/resource (Embed Resource File to Output)" /></para></description></item><item><term>target</term><description><para>
                            Output file target type, one of the following:
                            "library", "exe", "winexe", or "module".
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfTargetSpecifyOutputFileFormat" title="/target (Specify Output File Format)" /></para></description></item><item><term>unsafe</term><description><para>
                            Allow unsafe constructs.
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vclrfUnsafeEnableUnsafeMode" title="/unsafe (Enable Unsafe Mode)" /></para></description></item><item><term>w</term><description><para>
                            Warning level (0-4).
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcrefWWarningLevel" title="/warn (Specify Warning Level)" /></para></description></item><item><term>warnaserror</term><description><para>
                            Report warning diagnostics as errors.
                            Value must be of type <see cref="T:System.Boolean" />.
                            </para><para>
                            See <see topic="vcerrWarnAsError" title="/warnaserror (Treat Warnings as Errors)" /></para></description></item><item><term>win32icon</term><description><para>
                            Win32 icon for auto generated Win32 resource.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vcerrWin32iconImportIcoFile" title="/win32icon (Import a .ico File)" /></para></description></item><item><term>win32res</term><description><para>
                            Win32 resource file.
                            Value must be of type <see cref="T:System.String" />.
                            </para><para>
                            See <see topic="vclrfWin32resImportWin32ResourceFile" title="/win32res (Import a Win32 Resource File)" /></para></description></item></list></param>
      <returns>
                Returns diagnostice messages as an array of type <see cref="T:Microsoft.CSharp.CompilerError" />.  If the array is empty or all elements are warnings
                then the compilation succeeded.
            </returns>
    </member>
  </members>
</doc>