<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Data</name>
  </assembly>
  <members>
    <member name="M:System.Data.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Data.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>
        <para>Determines the action that occurs when the <see cref="M:System.Data.DataSet.AcceptChanges" /> or <see cref="M:System.Data.DataTable.RejectChanges" /> method is invoked on a <see cref="T:System.Data.DataTable" /> with a <see cref="T:System.Data.ForeignKeyConstraint" />
.</para>
      </summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>
        <para>
       No action occurs.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>
        <para>
       Changes are cascaded across the relationship.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.None">
      <summary>
        <para>None.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Sum">
      <summary>
        <para>Sum.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Mean">
      <summary>
        <para>Average value of the aggregate set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Min">
      <summary>
        <para>The minimum value of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Max">
      <summary>
        <para>The maximum value of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.First">
      <summary>
        <para>First element of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Count">
      <summary>
        <para>The count of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Var">
      <summary>
        <para>Variance.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.StDev">
      <summary>
        <para>Standard deviation.</para>
      </summary>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>
        <para>Provides the base functionality for creating collections.</para>
      </summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies all the elements of the current <see cref="T:System.Data.InternalDataCollectionBase" /> to a one-dimensional <see cref="T:System.Array" />, starting at
   the specified <see cref="T:System.Data.InternalDataCollectionBase" /> index.</para>
      </summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> to copy the current <see cref="T:System.Data.InternalDataCollectionBase" /> object's elements into.</param>
      <param name=" index">The destination <see cref="T:System.Array" /> index to start copying into.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</para>
      </returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>
        <para>Gets the total number of elements in a collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is
   read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is synchonized.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize the
      collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>
        <para>Gets the items of the collection as a list.</para>
      </summary>
    </member>
    <member name="M:System.Data.ColumnTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>
        <para> Provdes a description of the results of the query and its effect on
      the database.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>
        <para>The query may return multiple result sets. Execution of
      the query may effect the database state. <see langword="Default" /> sets
      no <see cref="T:System.Data.CommandBehavior" /> flags, so calling
   <see langword="ExecuteReader(CommandBehavior.Default)" /> is functionally
      equivalent to calling <see langword="ExecuteReader()" />
      .</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>
        <para> The query returns a single result set. Execution of the
      query may effect the database state.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>
        <para> The query returns column information only and does not effect the
      database state.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>
        <para> 
      The query
      returns column and primary key information. The query is executed without any locking
      on the selected rows.
      </para>
        <note type="note">
      When using KeyInfo[cref, System.Data.CommandBehavior], the SQL Server .NET Data Provider appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.
   </note>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>
        <para> The query is expected to return a single row. Execution
      of the query may effect the database state. Some .NET data providers may, but
      are not required to, use this information to optimize the performance of the
      command. When you specify <see cref="F:System.Data.CommandBehavior.SingleRow" /> with the <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> method of the <see cref="T:System.Data.OleDb.OleDbCommand" /> object, the OLE DB .NET Data Provider
      performs binding using the OLE DB <see langword="IRow" /> interface if it is
      available. Otherwise, it uses the <see langword="IRowset" />
      interface. If your SQL statement is
      expected to return only a single row, specifying <see cref="F:System.Data.CommandBehavior.SingleRow" />
      can also improve application performance.</para>
        <para>It is possible to specify <see langword="SingleRow" /> when
   executing queries that return multiple result sets. In that case, multiple
   result sets are still returned, but each result set has a single row.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>
        <para>Provides a way for the <see langword="DataReader" /> to handle rows
   that contain columns with large binary values. Rather than loading the
   entire row, <see langword="SequentialAccess" /> enables
   the <see langword="DataReader" /> to load
   data as a stream. You can then use the <see langword="GetBytes" /> or
<see langword="GetChars" />
method to specify a byte location to start the
read operation, and a limited buffer size for the data being returned.</para>
        <para>When you specify <see langword="SequentialAccess" />, you are not required to read 
from the columns in the order they are returned. However, once you have read
past a location in the returned stream of data, data at or before that location
can no longer be read from the <see langword="DataReader" />
. </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>
        <para>When the command is executed, the associated 
   <see langword="Connection " />object is closed when the associated 
   <see langword="DataReader " />object is closed.</para>
      </summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>
        <para>Specifies how a command string is interpreted.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>
        <para>
       A
       SQL text command.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>
        <para>
       The name of a stored procedure.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>
        <para>When the <see cref="T:System.Data.CommandType" /> property is set to <see cref="F:System.Data.CommandType.TableDirect" />, the <see cref="P:System.Data.IDbCommand.CommandText" /> 
property should be set to the name of the table
or tables to be accessed. The user may be required to use escape
character syntax or include qualifying characters if any of the tables named contain any special characters. All rows and columns of the named table or
tables will be returned when you call one of the Execute methods.</para>
        <para>In order to access multiple tables, use a comma delimited list, without 
   spaces or padding, containing the names of the tables to
   access. When the CommandText property names multiple tables, a
   join of the specified tables is returned</para>
      </summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>
        <para>Describes the current state of the connection to a data source.</para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>
        <para> The connection is closed.</para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>
        <para> The connection is open.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>
        <para> The connection object is connecting to the data source. (This value is reserved for
      future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>
        <para> The connection object is executing a command. (This value is
      reserved for future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>
        <para> The connection object is retrieving data. (This value is reserved for
      future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>
        <para> The connection to the data source is broken. This can occur only after the
      connection has been opened. A connection in this state may
      be closed and then re-opened. (This value is reserved for future
      versions of the product.)
      </para>
      </summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>
        <para>Represents a constraint that can be enforced on one or
 more <see cref="T:System.Data.DataColumn" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.Constraint.ConstraintName" />, if there is one, as a
 string.</para>
      </summary>
      <returns>
        <para>The string value of the <see cref="P:System.Data.Constraint.ConstraintName" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>
        <para>The name of a constraint in the <see cref="T:System.Data.ConstraintCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to which the constraint applies.</para>
      </summary>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>
        <para>Gets the collection of user-defined constraint properties.</para>
      </summary>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>
        <para>Represents a collection of constraints for a <see cref="T:System.Data.DataTable" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>
        <para> Adds
      the specified <see cref="T:System.Data.Constraint" /> object to the collection.</para>
      </summary>
      <param name="constraint">The <see langword="Constraint" /> to add.</param>
      <returns>
        <para>A new <see cref="T:System.Data.UniqueConstraint" /> or <see cref="T:System.Data.ForeignKeyConstraint" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the
   specified name, array of <see cref="T:System.Data.DataColumn" /> objects, and value
   indicating whether the columns are primary
   keys, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to which the constraint applies.</param>
      <param name="primaryKey">
        <see langword="true" /> if the columns are primary key columns; otherwise, <see langword="false" />.</param>
      <returns>
        <para>A new <see cref="T:System.Data.UniqueConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.UniqueConstraint" />with the specified
   name, <see cref="T:System.Data.DataColumn" />, and value indicating whether the column is a
   primary key, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="UniqueConstraint" />.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to which the constraint applies.</param>
      <param name="primaryKey">
        <see langword="true" /> if the column is a primary key column; otherwise, <see langword="false" />.</param>
      <returns>
        <para>A new <see langword="UniqueConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para> Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" /> with the
   specified name, parent column, and child column, and adds the constraint to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">The primary key, or parent, <see cref="T:System.Data.DataColumn" />. </param>
      <param name="foreignKeyColumn">The foreign key, or child, <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" />, with the specified arrays of parent columns and
   child columns, and adds the constraint to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the primary key, or parent, columns. </param>
      <param name="foreignKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the foreign key, or child, columns.</param>
      <returns>
        <para>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>
        <para> Copies the elements of the specified <see cref="T:System.Data.ConstraintCollection" />
array to the end of the collection.</para>
      </summary>
      <param name="constraints">An array of <see cref="T:System.Data.ConstraintCollection" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>
        <para>Indicates if a <see cref="T:System.Data.Constraint" /> can be removed.</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to be tested for removal from the collection.</param>
      <returns>
        <para>Generates an exception if the <see cref="T:System.Data.Constraint" /> cannot
   be removed from collection. Otherwise, <see langword="true " />if the <see cref="T:System.Data.Constraint" /> can be removed.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>
        <para>Clears the collection of any <see cref="T:System.Data.Constraint" />
objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>
        <para>Indicates whether the <see cref="T:System.Data.Constraint" /> object specified by name exists in the collection.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint.</param>
      <returns>
        <para>
          <see langword="true " />if the collection contains the
   specified constraint; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.Constraint" /> .</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to search for.</param>
      <returns>
        <para>The zero-based index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the <see cref="T:System.Data.Constraint" /> specified by name.</para>
      </summary>
      <param name="constraintName">The name of the <see cref="T:System.Data.Constraint" /> .</param>
      <returns>
        <para>The index of the <see cref="T:System.Data.Constraint" /> if it is
   in the collection; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.ConstraintCollection.CollectionChanged" /> event.</para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.Constraint" />
from the collection.</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the <see cref="T:System.Data.Constraint" /> object at the specified index from the
   collection.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>
        <para>Removes the <see cref="T:System.Data.Constraint" /> object specified by name from the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="P:System.Data.ConstraintCollection.List">
      <summary>
        <para>Gets the list of <see cref="T:System.Data.Constraint" /> objects contained by the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Constraint" />
from the collection at the specified index.</para>
      </summary>
      <param name="index">The index of the constraint to return.</param>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Constraint" /> from the collection with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint to return.</param>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>
        <para>Occurs whenever the <see cref="T:System.Data.ConstraintCollection" /> is changed as a result 
   of <see cref="T:System.Data.Constraint" /> objects being added or
   removed.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to convert to.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
      Converts the given object to another type.  The most common types to convert
      are to and from a string object.  The default implementation will make a call
      to ToString on the object if the object is valid and if the destination
      type is string.  If this cannot convert to the desitnation type, this will
      throw a NotSupportedException.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
     An optional culture info.  If not supplied the current culture is assumed.
 </param>
      <param name="value">
      The object to convert.
 </param>
      <param name="destinationType">
      The type to convert the object to.
 </param>
      <returns>
      The converted object.
 </returns>
    </member>
    <member name="M:System.Data.DataCategoryAttribute.#ctor(System.String)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.ComponentModel.CategoryAttribute" /> class.
    </para>
      </summary>
      <param name="category">
    The name of the category.
 </param>
    </member>
    <member name="M:System.Data.DataCategoryAttribute.GetLocalizedString(System.String)">
      <summary>
     This method is called the first time the category property
     is accessed.  It provides a way to lookup a localized string for
     the given category.  Classes may override this to add their
     own localized names to categories.  If a localized string is
     available for the given value, the method should return it.
     Otherwise, it should return null.
 </summary>
      <param name="value">
     The value of the string.
 </param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>
        <para>Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.DataColumn" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>
        <para>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class
    using the specified column name.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>
        <para>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class
    using the specified column name and data type.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>
        <para>Initializes a new instance
       of the <see cref="T:System.Data.DataColumn" /> class
       using the specified name, data type, and expression.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
      <param name="expr">The expression used to create this column. For more details, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class
   using
   the specified name, data type, expression, and value that determines whether the
   column is an attribute.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
      <param name="expr">The expression used to create this column. For more details, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
      <param name="type">One of the <see cref="T:System.Data.MappingType" /> values.</param>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>
        <para>Sends notification that the specified <see cref="T:System.Data.DataColumn" /> property is about to change.</para>
      </summary>
      <param name="name">The name of the property that is about to change.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</para>
      </summary>
      <returns>
        <para>The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set;
    otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" />
    property.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>
        <para>Gets or sets a value indicating whether null
      values are
      allowed in this column for rows belonging to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>
        <para>Gets or
      sets a value indicating whether the column automatically increments the value of the column for new
      rows added to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>
        <para>Gets
       or sets the starting value for a column that has its
    <see cref="P:System.Data.DataColumn.AutoIncrement" /> property 
       set to <see langword="true" />
       .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>
        <para>Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" />
 property set to <see langword="true" />
 .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>
        <para>Gets or sets
      the caption for the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>
        <para>Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>
        <para>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>
        <para>Gets or sets the type of
      data stored in the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>
        <para>Gets or sets the default value for the
      column when creating new rows.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>
        <para> Gets
      or sets the expresssion used to filter rows, calculate the values in a
      column, or create an aggregate column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>
        <para>Gets the collection of custom user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>
        <para>Gets or sets the maximum length of a text column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>
        <para>Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>
        <para>Gets the position of the column in the <see cref="T:System.Data.DataColumnCollection" />
collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>
        <para>Gets or sets a value
      indicating whether the column allows changes once a row has been added to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>
        <para>Gets or sets a value indicating whether the values in each row of the column must be unique.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataColumnChangeEventArgs" />
class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> of the column with the changing value. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> with the changing value. </param>
      <param name=" value">The new value. </param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>
        <para> Gets the <see cref="T:System.Data.DataColumn" /> with a changing value.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>
        <para> Gets the <see cref="T:System.Data.DataRow" /> of the column with a changing value.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>
        <para>Gets or sets the proposed new
      value for the column.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>
        <para>Represents the method that will handle the the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>
        <para>Represents a collection of <see cref="T:System.Data.DataColumn" />
objects for a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>
        <para>Creates and adds the specified <see cref="T:System.Data.DataColumn" /> object 
   to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to add.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataColumn" /> array to 
   the end of the collection.</para>
      </summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the specified name, type, and expression to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The name to use when creating the column.</param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</param>
      <param name="expression">The expression to assign to the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the
   specified name and type to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The <see cref="P:System.Data.DataColumn.ColumnName" /> to use when cretaing the column.</param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the specified name to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>
        <para> Checks whether
      a given column can be removed from the collection.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> in the collection.</param>
      <returns>
        <para>
          <see langword="true" />
if the column can be
removed; otherwise, <see langword="false" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>
        <para>
       Clears the collection of any columns.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>
        <para>Checks whether the collection contains a column with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to check for.</param>
      <returns>
        <para>
          <see langword="true " />if a column exists with this
   name; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>
        <para>Gets the index of
      a column specified by name.</para>
      </summary>
      <param name="column">The name of the column to return.</param>
      <returns>
        <para>The index of the column specified by
   <paramref name="column" />
   if it is found; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the column with the given name (the name is not case sensitive).</para>
      </summary>
      <param name="columnName">The name of the column to find.</param>
      <returns>
        <para>The zero-based index of the column with the specified name, or -1 if the column doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
    </para>
      </summary>
      <param name="ccevent">
    A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataColumn" /> object from the collection.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to remove.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the
      column at the specified index from the collection.</para>
      </summary>
      <param name="index">The index of the column to remove.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>
        <para>Removes the <see cref="T:System.Data.DataColumn" /> object with the specified name from the collection.</para>
      </summary>
      <param name="name">The name of the column to remove.</param>
    </member>
    <member name="P:System.Data.DataColumnCollection.List">
      <summary>
        <para>Gets a list of the <see cref="T:System.Data.DataColumnCollection" /> items.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataColumn" />
from the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the column to return.</param>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataColumn" /> from the collection with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to return.</param>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>
        <para>Occurs when the columns collection changes, either by adding or removing a column.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.Equals(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.GetHashCode">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.CanResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.GetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.ResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.SetValue(System.Object,System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.ShouldSerializeValue(System.Object)">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.Column">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.ComponentType">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.IsReadOnly">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.PropertyType">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.IsBrowsable">
    </member>
    <member name="T:System.Data.DataException">
      <summary>
        <para>Represents the exception that is thrown when errors are generated using ADO.NET
      components.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified serialization information 
   and context.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string and inner 
   exception.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
      <param name="innerException">A reference to an inner exception.</param>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>
        <para>Represents the exception that is thrown when attempting an action that violates a constraint.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the 
   specified serialization and stream context.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class. This is the 
   default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>
        <para> Represents the exception that is thrown when an action
      is attempted on a <see cref="T:System.Data.DataRow" />
      that has been deleted.</para>
      </summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>
        <para>Represents the exception that is thrown when a duplicate database object name
      is encountered during an add operation in a <see cref="T:System.Data.DataSet" /> -related object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with the 
   specified
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>
        <para> Represents the exception that is 
      thrown when when calling the <see cref="M:System.Data.DataRow.EndEdit" /> method within the
   <see cref="E:System.Data.DataTable.RowChanging" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>
        <para> Represents the exception that
      is thrown when incorrectly attempting to create or access a relation.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>
        <para>Represents the exception that is thrown when attempting to
      access a row in a table that has no primary key.</para>
      </summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with
 serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">A description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>
        <para>Represents the exception that is thrown when attempting to 
      insert a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is set to <see langword="false" />
      .</para>
      </summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>
        <para>Represents the exception that is thrown when attempting to 
      change the value of a read-only column.</para>
      </summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>
        <para>Represents the exception that is thrown when trying to perform an operation on a <see cref="T:System.Data.DataRow" /> that is not
   in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>
        <para>Represents the exception that is thrown when attempting to return a
      version of a <see cref="T:System.Data.DataRow" /> that has been deleted.</para>
      </summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn[],System.Int32[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.ColumnsEqual(System.Data.DataKey)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.RecordsEqual(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.ContainsColumn(System.Data.DataColumn)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.GetDebugString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.Columns">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.SortOrder">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.Table">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>
        <para>Represents a parent/child relationship between two
   <see cref="T:System.Data.DataTable" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name, and parent and child <see cref="T:System.Data.DataColumn" />
objects.</para>
      </summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" /> . If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, parent and
   child <see cref="T:System.Data.DataColumn" /> objects, and a value
   indicating whether to create constraints.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name=" createConstraints">A value indicating whether constraints are created. <see langword="true" />, if constraints are created, otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name
   and matched arrays of parent and child <see cref="T:System.Data.DataColumn" />
   objects.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, matched arrays of 
   parent and child <see cref="T:System.Data.DataColumn" />
   objects, and value indicating whether to create constraints.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="createConstraints">A value indicating whether to create constraints. <see langword="true" />, if constraints are created, otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>
        <para>This constructor is provided for design time support in 
      the Visual Studio .NET environment. Any <see cref="T:System.Data.DataRelation" /> object created by using this
      constructor must then be added to the collection via <see cref="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />.
      Tables and columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called
      prior to calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentTableName">
        <para>The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation.</para>
      </param>
      <param name="childTableName">
        <para>The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation.</para>
      </param>
      <param name="parentColumnNames">
        <para>An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation.</para>
      </param>
      <param name="childColumnNames">
        <para>An array of <see cref="T:System.Data.DataColumn" /> object namess in the child <see cref="T:System.Data.DataTable" /> of the relation.</para>
      </param>
      <param name="nested">A value indicating whether relationships are nested.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>
        <para>Ensures that the <see cref="T:System.Data.DataRelation" /> is a valid object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataRelation.RelationName" />, if one exists.</para>
      </summary>
      <returns>
        <para>The value of the <see cref="P:System.Data.DataRelation.RelationName" /> 
property.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>
        <para>Gets the child <see cref="T:System.Data.DataColumn" /> objectsof this relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>
        <para>Gets the child table of this relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>
        <para>Gets an array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of 
   this <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>
        <para>Gets the parent <see cref="T:System.Data.DataTable" /> of this <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>
        <para>Gets or sets the name used to retrieve
      a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>
        <para>Gets or sets a value indicating whether <see cref="T:System.Data.DataRelation" /> objects are nested.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>
        <para>Gets the <see cref="T:System.Data.UniqueConstraint" /> that ensures values in the parent column of a 
<see cref="T:System.Data.DataRelation" /> are unique.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>
        <para>Gets the <see cref="T:System.Data.ForeignKeyConstraint" /> for the relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>
        <para>Gets the collection that stores customized properties.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>
        <para>Represents the collection of <see cref="T:System.Data.DataRelation" />
objects for this<see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>
        <para> Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
      <param name="relation">The <see langword="DataRelation" /> to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataRelation" /> array to
   the end of the collection.</para>
      </summary>
      <param name="relations">The array of <see cref="T:System.Data.DataRelation" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Creates a <see cref="T:System.Data.DataRelation" /> with the
   specified name, and arrays of parent and child columns, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="DataRelation" /> to create.</param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</param>
      <param name="childColumns">An array of child <see langword="DataColumn" /> objects.</param>
      <returns>
        <para>The created <see langword="DataRelation" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, arrays of parent and child columns, and
   value specifying whether to create a constraint, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="DataRelation" /> to create.</param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</param>
      <param name="childColumns">An array of child <see langword="DataColumn" /> objects.</param>
      <param name="createConstraints">
        <see langword="true" /> to create a constraint; otherwise <see langword="false" /> .</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Creates a relation given the parameters and adds it to the collection. The name is
      defaulted. An ArgumentException is generated
      if this relation already belongs to this collection or belongs to another
      collection. An InvalidConstraintException is generated if the relation can't be created based on the
      parameters. The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="parentColumns">parent columns of relation.</param>
      <param name="childColumns">child columns of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>Creates a relation given the parameters and adds it to the collection.
      An ArgumentException is generated if this relation already belongs to
      this collection or belongs to another collection.
      A DuplicateNameException is generated if this collection already has a relation with the same
      name (case insensitive).
      An InvalidConstraintException is generated if the relation can't be created based on the parameters.
      The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation.</param>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para> Creates a relation given the parameters and adds it to the
      collection. An ArgumentException is generated if this relation already belongs
      to this collection or belongs to another
      collection. A DuplicateNameException is generated if this collection already has a relation with the
      same name (case
      insensitive). An InvalidConstraintException is generated if the relation can't be created based on the
      parameters. The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation.</param>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <param name="createConstraints">whether to create a constraints (default is <see langword="true" /> )</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>Creates a relation given the parameters and adds it to the collection. The name is defaulted.
      An ArgumentException is generated if
      this relation already belongs to this collection or belongs to another collection.
      An InvalidConstraintException is generated if the relation can't be created based on the parameters.
      The CollectionChanged event is fired if it succeeds.</para>
      </summary>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>
        <para>Performs verification on the table.</para>
      </summary>
      <param name="relation">The relation to check.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>
 Clears the collection of any relations.
 </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>
        <para> Verifies whether a <see cref="T:System.Data.DataRelation" /> with the given name (case insensitive) exists in the collection.</para>
      </summary>
      <param name="name">The name of the relation to find.</param>
      <returns>
        <para>
          <see langword="true" />, if a relation with the specified 
   name exists; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.DataRelation" /> object.</para>
      </summary>
      <param name="relation">The relation to search for.</param>
      <returns>
        <para>The 0-based index of the relation, or -1 if the relation
      isn't found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the <see cref="T:System.Data.DataRelation" /> specified by name.</para>
      </summary>
      <param name="relationName">The name of the relation to find.</param>
      <returns>
        <para>The zero-based index of the relation with the specified name, or
      -1 if the relation doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>
        <para>Gets the dataset for this collection.</para>
      </summary>
      <returns>
        <para>The dataSet.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>
        <para>Verifies whether the specified <see cref="T:System.Data.DataRelation" /> can be removed from the collection.</para>
      </summary>
      <param name="relation">The relation to perform the check against.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Data.DataRelation" /> can be removed; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>
        <para>Removes the specified relation from the collection.
      An ArgumentNullException is generated if this relation is null. An ArgumentException is generated
      if this relation doesn't belong to this collection.
      The CollectionChanged event is fired if it succeeds.</para>
        <para>Note that removing the relation does not remove any associated constraint 
      objects.</para>
      </summary>
      <param name="relation">The relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>
   
   Removes the relation at the specified index from the
   collection.
</summary>
      <param name="index"> The index of the relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>
        <para>Removes the relation with the specified name from the collection. An IndexOutOfRangeException is
      generated if this collection doesn't have a relation with that name
      The CollectionChanged event is fired if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>
        <para>Performs a verification on the specified <see cref="T:System.Data.DataRelation" /> object.</para>
      </summary>
      <param name="relation">The <see langword="DataRelation" /> object to verify.</param>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRelation" />object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index to find.</param>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRelation" /> object specified by name.</para>
      </summary>
      <param name="name">The name of the relation to find.</param>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>
        <para>Occurs when the collection has changed.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.Equals(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.GetHashCode">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.CanResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.GetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.ResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.SetValue(System.Object,System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.ShouldSerializeValue(System.Object)">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.Relation">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.ComponentType">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.IsReadOnly">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.PropertyType">
    </member>
    <member name="T:System.Data.DataRow">
      <summary>
        <para>Represents a row of data in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this row
      since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>
        <para>Begins an edit operation on a <see cref="T:System.Data.DataRow" />object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>
        <para>Cancels the current edit on the row.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>
        <para>Deletes the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>
        <para>Ends the edit occurring on the row.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>
        <para>Sets the error description for a column specified by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>
        <para>Sets
       the error description for a column specified by name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>
        <para>Sets the error description for a column specified as a <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to set the error description for.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>
        <para>Gets the error description for the column specified
       by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>
        <para>Gets the error description for a column, specified by name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>
        <para>Gets the error description of
       the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>
        <para> Clears the errors for the row, including the <see cref="P:System.Data.DataRow.RowError" /> 
 and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
 .</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>
        <para>Gets an array of columns that have errors.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>
        <para> Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name=" version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />. </param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>
        <para>Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the
   specified <see cref="T:System.Data.DataRelation" />
   .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" /> .</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" /> 
, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <param name=" version">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" />
using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />. </para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />. </para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" /> .</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>
        <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>
        <para>Gets a value indicating whether a specified version exists.</para>
      </summary>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
      <returns>
        <para>
          <see langword="true " />if the version exists; <see langword="otherwise" />, 
    false.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>
        <para>Gets
      a value indicating whether the column at the specified index contains a
      null value.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>
        <para>Gets a value indicating whether the named column contains a null value.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>
        <para>Gets a value indicating whether the specified <see cref="T:System.Data.DataColumn" />
contains a null value.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>
        <para>Gets a value indicating whether the specified <see cref="T:System.Data.DataColumn" /> and 
<see cref="T:System.Data.DataRowVersion" /> contains a null value.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>
        <para>Rejects all changes made to the row since <see cref="M:System.Data.DataRow.AcceptChanges" />
was last called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>
        <para> Sets the the value of the specified <see cref="T:System.Data.DataColumn" /> to a null value.
   </para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>
        <para>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" /> .</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>
        <para> Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> and
<see cref="T:System.Data.DataRelation" /> .
   </para>
      </summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" /> . </param>
      <param name="relation">The relation <see cref="T:System.Data.DataRelation" /> to use. </param>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>
        <para>Gets or sets the custom error description for a row.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>
        <para>Gets the current state of the row in regards to its
      relationship to the <see cref="T:System.Data.DataRowCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" />
 for which this row has a schema.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>
        <para>Gets or sets the data stored in the column specified by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>
        <para>Gets or sets the data stored in the column specified by
      name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>
        <para>Gets or sets
       the data stored in the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains the data.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the data stored
      in the column, specified by index and version of the data to retrieve.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the specified version of data stored in
      the named column.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the specified version of data stored in the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains information about the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>
        <para>Gets
       or sets all of the values for this row through an array.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in a columns collection.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>
        <para>Describes an action performed on a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>
        <para>The row has not changed.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>
        <para>
       The row was
       deleted from the table.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>
        <para>The row has changed.
       </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>
        <para> The most recent change to the row has been rolled back.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>
        <para> The changes to the row have been committed.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>
        <para>
       The row has been added to the table.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />, and <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> events.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.DataRowChangeEventArgs" /> class.
    </para>
      </summary>
      <param name="row">
    The <see cref="T:System.Data.DataRow" /> upon which an action is occuring.
 </param>
      <param name=" action">
    One of the <see cref="T:System.Data.DataRowAction" /> values.
 </param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>
        <para>Gets the row upon which an action has occurred.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>
        <para>Gets the action that has occurred on a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, and <see cref="E:System.Data.DataTable.RowDeleted" /> events of a
 <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>
        <para>Represents a collection of rows for a <see cref="T:System.Data.DataTable" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" /> object.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add.</param>
      <returns>
        <para>A new <see cref="T:System.Data.DataRow" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>
        <para>Inserts a new row into the collection at the specified
      location.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add.</param>
      <param name="pos">The location in the collection where you want to add the <see langword="DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>
        <para>Creates a row using specified values and adds it to the
   <see cref="T:System.Data.DataRowCollection" />.</para>
      </summary>
      <param name="values">The array of values that are used to create the new row.</param>
      <returns>
        <para>A new <see cref="T:System.Data.DataRow" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>
        <para>Gets
 the row specified by the primary key value.</para>
      </summary>
      <param name="key">The primary key value of the <see cref="T:System.Data.DataRow" /> to find.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> containing
 the primary key value specified; otherwise a null value if the primary key value
 does not exist in the <see cref="T:System.Data.DataRowCollection" />
 .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>
        <para>Gets the row containing the specified primary key values.</para>
      </summary>
      <param name="keys">An array of primary key values to find. The type of the array is Object.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects containing the primary key
 values specified; otherwise a null value if the primary key values do not exist
 in the <see cref="T:System.Data.DataRowCollection" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>
        <para>Clears the collection of all rows.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether the primary key of any row in the
      collection contains the specified value.</para>
      </summary>
      <param name="key">The value of the primary key to test for.</param>
      <returns>
        <para>
          <see langword="true " />if the
   collection contains a <see cref="T:System.Data.DataRow" />
   with the specified primary key value;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>
        <para>Gets a value indicating whether the primary key column(s) of any row in the collection contains the values specified in the object array.</para>
      </summary>
      <param name="keys">An array of primary key values to test for.</param>
      <returns>
        <para>
          <see langword="true " />if the <see cref="T:System.Data.DataRowCollection" /> contains a <see cref="T:System.Data.DataRow" /> with the specified
   key values; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataRow" /> from the collection.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to remove.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the row at the specified index from
      the collection.</para>
      </summary>
      <param name="index">The index of the row to remove.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>
        <para>Gets the row at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the row to return.</param>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>
        <para>Gets the state of a <see cref="T:System.Data.DataRow" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>
        <para>The row 
       has been created but is not part of any <see cref="T:System.Data.DataRowCollection" />. A <see cref="T:System.Data.DataRow" /> is in this state immediately
       after it has been created and before it is added to a collection, or if it has
       been removed from a collection. </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>
        <para>
       The row has not changed since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>
        <para>The row has been added to a <see cref="T:System.Data.DataRowCollection" />, 
    and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>
        <para>The row was deleted using the <see cref="M:System.Data.DataRow.Delete" /> 
 method of the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>
        <para>The row has been modified and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>
        <para>Describes the version of a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>
        <para>
       The row contains its original values.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>
        <para>
       The row contains current values.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>
        <para>
       The row contains a proposed value.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>
        <para>
       The row contains its default values.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>
        <para>Represents a customized view of a <see cref="T:System.Data.DataRow" /> exposed as a fully featured Windows Forms
   control.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>
        <para>Gets a value indicating whether the current <see cref="T:System.Data.DataRowView" /> is
    identical to the specified object.</para>
      </summary>
      <param name="other">An <see cref="T:System.Object" /> to be compared.</param>
      <returns>
        <para>
          <see langword="true" />, if <paramref name="object " />is a <see cref="T:System.Data.DataRowView" /> and it 
    returns the same row as the current <see cref="T:System.Data.DataRowView" />; otherwise,
 <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>
        <para>Returns the hash code of the <see cref="T:System.Data.DataRow" /> object.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code, one, which represents 
      Boolean <see langword="true" /> if the value of this instance is nonzero; otherwise, the
      integer, zero, which represents Boolean <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified the <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> object.</param>
      <returns>
        <para>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified the <see cref="T:System.Data.DataRelation" /> name.</para>
      </summary>
      <param name="relationName">A string containing the <see cref="T:System.Data.DataRelation" /> name.</param>
      <returns>
        <para>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>
        <para>Begins an edit procedure.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>
        <para>Cancels an edit procedure.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>
        <para>
       Ends an edit procedure.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>
        <para>Deletes a row.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataView" /> to which this row belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>
        <para>Gets or sets a value in a specified column.</para>
      </summary>
      <param name="ndx">The specified column.</param>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>
        <para>Gets or sets a value in a specified column.</para>
      </summary>
      <param name="property">String that contains the specified column.</param>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" />
 being viewed.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>
        <para>Gets the current version description of the <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>
        <para>Indicates whether a <see cref="T:System.Data.DataRowView" /> is new.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>
        <para> Indicates whether the row is in edit mode.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>
        <para>Represents an in-memory cache of data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.DataSet" />
class with the given name.</para>
      </summary>
      <param name="dataSetName">The name of the <see cref="T:System.Data.DataSet" /> .</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>
        <para>Gets a value indicating whether <see cref="P:System.Data.DataSet.Relations" /> property should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if the property value has been changed from its 
    default; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>
        <para>Gets a value indicating whether <see cref="P:System.Data.DataSet.Tables" /> property should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if the property value has been changed from its 
    default; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this <see cref="T:System.Data.DataSet" /> since it was loaded or the last
   time <see cref="M:System.Data.DataSet.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>
        <para>Clears the <see cref="T:System.Data.DataSet" /> of any data by removing all rows in all tables.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>
        <para>Copies the structure of the <see cref="T:System.Data.DataSet" />, including all <see cref="T:System.Data.DataTable" /> schemas, relations, and constraints. Does not copy any
   data.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataSet" /> with the same schema as the current <see cref="T:System.Data.DataSet" />, but none of the 
   data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>
        <para>Copies both the structure and data for this <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataSet" /> with the same structure (table schemas, relations,
    and constraints) and data as this <see cref="T:System.Data.DataSet" />
    .</para>
        <note type="note">
    If these classes have been
    subclassed, the copy will also be of the same subclasses.
 </note>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataSet" /> that contains all changes made to
    it since it was loaded or <see cref="M:System.Data.DataSet.AcceptChanges" />
    was last called.</para>
      </summary>
      <returns>
        <para>A copy of the changes from this <see cref="T:System.Data.DataSet" /> that can 
    have actions performed on it and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, or
 <see langword="null " /> 
 if none are found.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataSet" /> containing all changes made to it since it was last
   loaded, or since <see cref="M:System.Data.DataSet.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>A filtered copy of the <see cref="T:System.Data.DataSet" /> that can have actions performed
   on it, and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If
   no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns
<see langword="null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Retrieves <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> information for the implementation 
   of <see langword="IXmlSerializable" />.</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
      <returns>
        <para>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> information.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>
        <para>Returns the XML
      representation of the data stored in the <see cref="T:System.Data.DataSet" />
      .
      </para>
      </summary>
      <returns>
        <para>A string that is a representation of the data stored in the <see cref="T:System.Data.DataSet" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>
        <para>Returns
      the XSD schema for the XML representation of the data stored in the
   <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
      <returns>
        <para>String that is the XSD schema for the XML representation of the
      data stored in the <see cref="T:System.Data.DataSet" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new,
    deleted, or modified rows.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />, if the <see cref="T:System.Data.DataSet" /> has changes; otherwise, 
 <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new,
   deleted, or modified rows, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>
          <see langword="true" />, if the <see cref="T:System.Data.DataSet" /> has changes; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>
        <para>Infer the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read. </param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified file into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.Xml.XmlReader" /> into the <see cref="T:System.Data.DataSet" />
.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.IO.Stream" /> into the
<see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>
        <para>Reads the XML schema from the specified file into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read. </param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to using the specified 
 <see cref="T:System.IO.Stream" qualify="true" /> object.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a <see cref="T:System.IO.TextWriter" />
object.</para>
      </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to an <see cref="T:System.Xml.XmlWriter" />
object.</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a file.</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.Xml.XmlReader" qualify="true" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
      <returns>
        <para>An XML schema and data. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" qualify="true" />.</para>
      </summary>
      <param name="stream">An object that derives from <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" qualify="true" />.</para>
      </summary>
      <param name="reader">An object that derives from the <see cref="T:System.IO.TextReader" /> class.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>
        <para>Writes schema and data for the DataSet.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" qualify="true" /> and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" qualify="true" /> and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.IO.Stream" qualify="true" />
   .</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file. </param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" />
.</para>
      </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified <see cref="T:System.Xml.XmlWriter" />
.</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified file.</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>
        <para> Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.IO.Stream" qualify="true" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>
        <para> Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the 
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" qualify="true" /> object used to write the document.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>
        <para>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the 
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>
        <para>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> to the specified
   file using the specified <see cref="T:System.Data.XmlWriteMode" />. To write the
   schema, set the value for the <see langword="XMLWriteMode" /> parameter to
<paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> into a specified <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataSet" /> preserving changes according to
   the specified argument.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="preserveChanges">A value indicating whether changes made to the current <see cref="T:System.Data.DataSet" /> should be maintained. <see langword="true" />, if changes should be maintained; otherwise, <see langword="false" /> .</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataSet" /> preserving changes according to
   the specified argument, and handling an incompatible schema according to the
   specified argument.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="preserveChanges">A value indicating whether changes in the current (target) <see cref="T:System.Data.DataSet" /> should be maintained. <see langword="true" />, if changes should be maintained; otherwise, <see langword="false" /> .</param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>
        <para>Merges a <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> whose data and schema will be merged.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataTable" /> with a specified <see cref="T:System.Data.DataTable" /> preserving changes according to the
   specified argument, and handling an incompatible schema according to the specified argument.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <param name="preserveChanges">Whether changes in the current (target) <see cref="T:System.Data.DataSet" /> should be maintained.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with an array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </summary>
      <param name="rows">The array of <see cref="T:System.Data.DataRow" /> objects that will be merged into the <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with an array of <see cref="T:System.Data.DataRow" /> objects, preserving changes according to the 
    specified argument, and handling an incompatible schema according to the
    specified argument.</para>
      </summary>
      <param name="rows">The array of <see cref="T:System.Data.DataRow" /> objects to merge with.</param>
      <param name=" preserveChanges">
        <see langword="true" /> to preserve changes made to the <see cref="T:System.Data.DataSet" />; otherwise, <see langword="false" />.</param>
      <param name=" missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>
        <para>Occurs when when a <see cref="T:System.Data.DataTable" /> is being removed.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>
        <para>This method should be overriden by subclasses to restrict tables being removed.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>
        <para>Sends notification that the specified <see cref="T:System.Data.DataSet" /> property is about to change.</para>
      </summary>
      <param name="name">The name of the property that is about to change.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>
        <para>Rolls back all the changes made to the <see cref="T:System.Data.DataSet" /> since it was
   created, or since the last time <see cref="M:System.Data.DataSet.AcceptChanges" qualify="true" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>
        <para> Resets the <see cref="T:System.Data.DataSet" />
      to its original state. Subclasses should
      override <see cref="M:System.Data.DataSet.Reset" />to restore a <see cref="T:System.Data.DataSet" /> to its original state.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>
        <para>Reads XML serialization information for the implementation
      of <see langword="IXmlSerializable" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object.</param>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>
        <para>Retrieves an <see cref="T:System.Xml.Schema.XmlSchema" /> object for the implementation
   of <see langword="IXmlSerializable" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Xml.Schema.XmlSchema" /> object .</para>
      </returns>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>
        <para>Gets or sets a value indicating whether string
      comparisons within <see cref="T:System.Data.DataTable" />
      objects are
      case-sensitive.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>
        <para>Gets a custom view of the data contained by the <see cref="T:System.Data.DataSet" /> that allows filtering, searching, and
   navigating using a custom <see cref="T:System.Data.DataViewManager" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>
        <para>Gets or sets a value indicating whether constraint rules are followed when
      attempting any update operation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>
        <para>Gets or sets
      the name of the current <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>
        <para>Gets or sets the namespace of the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>
        <para>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>
        <para>Gets the collection of custom user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in any
      of the rows in any of the tables of this <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>
        <para>Gets or sets the locale information used to compare strings within the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>
        <para>Gets or sets an <see cref="T:System.ComponentModel.ISite" qualify="true" /> for the <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>
        <para> Get the collection of relations that link tables and
      allow navigation from parent tables to child tables.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>
        <para>Gets the collection of tables contained in the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>
        <para>Occurs when a target and source <see cref="T:System.Data.DataRow" /> have the 
    same primary key value, and <see cref="P:System.Data.DataSet.EnforceConstraints" /> is set to
    true.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>
        <para> Marks a property, event, or extender with a
      description. Visual designers can display this description when referencing
      the member.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSysDescriptionAttribute" /> class using the specified description string.</para>
      </summary>
      <param name="description">The description string. </param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>
        <para>Gets the text for the description.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>
        <para>Represents one table of in-memory data.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>
        <para>Intitalizes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table
    name.</para>
      </summary>
      <param name="tableName">The name to give the table. If <see langword="null" /> or an empty string, a default name will be given when added to the <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and 
   the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>
        <para>Clones the structure of the <see cref="T:System.Data.DataTable" />, 
   including all <see cref="T:System.Data.DataTable" /> schemas, relations, and constraints.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>
        <para>Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas, relations,
   and constraints) and data as this <see cref="T:System.Data.DataTable" />
   .</para>
        <note type="note">
   If these classes have been
   subclassed, the copy will also be of the same subclasses.
   
</note>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>
        <para> Clears the <see cref="T:System.Data.DataTable" />
of all data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>
        <para>Computes the given expression on the current rows that pass the filter criteria.</para>
      </summary>
      <param name="expression">The expression to compute.</param>
      <param name="filter">The filter to limit the rows that evaluate in the expression.</param>
      <returns>
        <para>An <see cref="T:System.Object" />, set to
    the result of the computation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to
   it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" />
   was last called.</para>
      </summary>
      <returns>
        <para>A copy of the changes from this <see cref="T:System.Data.DataTable" /> that can
   have actions performed on it and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, or
   <see langword="null " />
if none are found.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last
   loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed
   on it, and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If
   no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns
<see langword="null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>
        <para>Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" />
 objects that have errors.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>
        <para>Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</para>
      </summary>
      <param name="row">The <see langword="DataRow" />to be imported.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>
        <para>Creates a new <see cref="T:System.Data.DataRow" />
 with the same schema as the table.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> with the
    same schema as the <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>
        <para> Creates a new row from an existing row.
      </para>
      </summary>
      <param name="builder">A <see cref="T:System.Data.DataRowBuilder" /> object.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> subclass.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>
        <para>Gets the row type.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Type" /> of the row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.PropertyChanging" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>
        <para>Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is
    being removed.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.
 </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.
    </para>
      </summary>
      <param name="e">
    A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.
   </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.
 </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>
        <para>Rolls back all changes that have been made to the table
       since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>
        <para> Resets the <see cref="T:System.Data.DataTable" /> to its original state.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria in order of
    primary key (or lacking one, order of addition.)</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the the
    specified sort order.</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <param name="sort">A string specifying the column and sort direction.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects matching the filter
    expression.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the
    sort, that match the specified state.</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <param name="sort">A string specifying the column and sort direction.</param>
      <param name="recordStates">One of the <see cref="T:System.Data.DataViewRowState" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</para>
      </summary>
      <returns>
        <para>A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>
        <para>Turns off notifications, index maintenance, and constraints while loading data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>
        <para>Turns on notifications, index maintenance, and constraints after loading data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>
        <para>Finds and updates a specific row. If no matching
      row is found, a new row is created using the given values.</para>
      </summary>
      <param name="values">An array of values used to create the new row.</param>
      <param name="fAcceptChanges">
        <see langword="true" /> to accept changes; otherwise, <see langword="false" />.</param>
      <returns>
        <para>The new <see cref="T:System.Data.DataRow" />
.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>
        <para>Indicates whether string comparisons within the table are
       case-sensitive.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>
        <para>Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>
        <para>Gets the collection of columns that belong to this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>
        <para>Gets the collection of constraints maintained by this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataSet" /> that this table belongs to.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>
        <para>Gets a customized view of the table which may include a
       filtered view, or a cursor position.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>
        <para>Gets or sets the expression that will return a value used to represent this table
 in the user interface.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>
        <para>Gets the collection of customized user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in any of the rows in any of
       the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>
        <para>Gets or sets the locale information used to compare strings within the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>
        <para>Gets or sets the initial starting size for this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>
        <para>Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>
        <para>Gets or sets an array of columns that function as primary keys for the data
      table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>
        <para>Gets the collection of rows that belong to this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>
        <para>Gets or sets the name of the the <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>
        <para>Gets or sets the namespace for the XML represenation of the data stored in the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>
        <para>Gets or sets the namespace for the XML represenation of the data stored in the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>
        <para>Occurs when a value is being changed for the
      specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>
        <para>Occurs when after a value has been changed for the
      specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>
        <para> Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.
   </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>
        <para> Occurs when a <see cref="T:System.Data.DataRow" /> is changing.
   </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>
        <para>       Occurs before a row in the table is
      about to be deleted.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>
        <para>       Occurs after a row in the
      table has been deleted.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>
        <para>Gets or sets an <see cref="T:System.ComponentModel.ISite" qualify="true" /> for the <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>
        <para>Represents the collection of tables for the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>
        <para> Adds the specified <see langword="DataTable" />
to the collection.</para>
      </summary>
      <param name="table">The <see langword="DataTable" /> object to add. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataTable" /> array to
   the end of the collection.</para>
      </summary>
      <param name="tables">The array of <see cref="T:System.Data.DataTable" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>
        <para> Creates a <see cref="T:System.Data.DataTable" /> object with the specified name and adds it to the
   collection.
   </para>
      </summary>
      <param name="name">The name to give the created <see cref="T:System.Data.DataTable" />. </param>
      <returns>
        <para> The newly created <see cref="T:System.Data.DataTable" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>
        <para> Creates a new <see cref="T:System.Data.DataTable" /> object with a default name and adds it to
   the collection.
   </para>
      </summary>
      <returns>
        <para> The newly created <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>
        <para> Verifies if the specified <see cref="T:System.Data.DataTable" /> object can be removed from the collection.
   </para>
      </summary>
      <param name="table">The <see langword="DataTable" /> in the collection to perform the check against.</param>
      <returns>
        <para>
          <see langword="true " />if the table can be removed; otherwise,
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>
        <para> Clears the collection of all <see cref="T:System.Data.DataTable" /> objects.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>
        <para> Gets a value indicating whether a <see cref="T:System.Data.DataTable" /> object with the specified name exists in the collection.
   </para>
      </summary>
      <param name="name">The name of the <see langword="DataTable" /> to find. </param>
      <returns>
        <para>
          <see langword="true " />if the specified table exists;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.DataTable" /> object.</para>
      </summary>
      <param name="table">The <see langword="DataTable" /> to search for.</param>
      <returns>
        <para>The 0-based index of the table, or -1 if the table
      isn't found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index in the collection of the <see cref="T:System.Data.DataTable" /> 
object with the specified name.</para>
      </summary>
      <param name="tableName">The name of the <see langword="DataTable" /> object to look for.</param>
      <returns>
        <para>The zero-based index of the <see langword="DataTable" /> with the specified name, or
   -1 if the table doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
    </para>
      </summary>
      <param name="ccevent">
    A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataTable" /> object from the collection.
   </para>
      </summary>
      <param name="table">The <see langword="DataTable" /> to remove. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.DataTable" /> object at the specified index from the collection.
   </para>
      </summary>
      <param name="index">The index of the <see langword="DataTable" /> to remove. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the
   collection.
   </para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> object to remove. </param>
    </member>
    <member name="P:System.Data.DataTableCollection.List">
      <summary>
        <para>Gets all of the <see cref="T:System.Data.DataTable" /> objects
   in the collection as an array.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> object with the specified name (not case-sensitive).</para>
      </summary>
      <param name="name">The name of the <see langword="DataTable" /> to find.</param>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>
        <para> Occurs whenever the collection is changed.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>
        <para>Occurs when the collection is changing.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.CanResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.GetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.ResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.Table">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.ComponentType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.PropertyType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.DataView">
      <summary>
        <para>Represents a databindable, customized view of a <see cref="T:System.Data.DataTable" />
for sorting, filtering, searching, editing, and navigation.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the
   specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the
   specified <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" />, and <see cref="T:System.Data.DataViewRowState" />.</para>
      </summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">A <see cref="P:System.Data.DataView.RowFilter" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">A <see cref="P:System.Data.DataView.Sort" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">A <see cref="T:System.Data.DataViewRowState" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>
        <para>Adds a new row to the <see cref="T:System.Data.DataView" /> .</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataRowView" />
 .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>
        <para> Closes the <see cref="T:System.Data.DataView" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies items into
      an array. Only for Web Forms Interfaces.
      </para>
      </summary>
      <param name="array">array to copy into. </param>
      <param name="index">index to start at. </param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>
        <para>Deletes a row at the specified index.</para>
      </summary>
      <param name="index">The index of the row to delete.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>
        <para>Disposes of the resources (other than memory) used
      by the <see cref="T:System.Data.DataView" /> object.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>
        <para> Finds a row in the <see cref="T:System.Data.DataView" /> by the specified sort key
   value.
   </para>
      </summary>
      <param name="key">The object to search for.</param>
      <returns>
        <para> The index of the row in the <see cref="T:System.Data.DataView" /> containing the sort key value specified;
   otherwise a null value if the sort key value does not exist.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>
        <para> Finds an array of rows in the <see cref="T:System.Data.DataView" /> by the specified sort key values.
   </para>
      </summary>
      <param name="key">An array of values, typed as <see cref="T:System.Object" />. </param>
      <returns>
        <para> The array of row indexes in the <see cref="T:System.Data.DataView" /> containing the sort key values specified;
   otherwise a null value if the sort key values do not exist.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>
        <para>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key 
   value. </para>
      </summary>
      <param name="key">The column value, typed as <see cref="T:System.Object" />, to search for.</param>
      <returns>
        <para>An array of <see langword="DataRowView" /> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView" /> array. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>
        <para>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key 
   value. </para>
      </summary>
      <param name="key">An array of column values, typed as <see cref="T:System.Object" /> , to search for.</param>
      <returns>
        <para>An array of <see langword="DataRowView" /> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView" /> array. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>
        <para>Gets an enumerator for this <see cref="T:System.Data.DataView" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for navigating through
    the list.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>Occurs after a <see cref="T:System.Data.DataView" /> has been changed successfully.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>
       Raises the <see cref="E:System.Data.DataView.ListChanged" /> event.
    </para>
      </summary>
      <param name="e">
    A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>
        <para> Opens a <see cref="T:System.Data.DataView" />.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
      <param name="force">Reserved for internal use only.</param>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Occurs after a <see cref="T:System.Data.DataColumnCollection" /> has been changed successfully.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>
        <para>
       Sets or gets a value indicating whether deletes are
       allowed.
    </para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>
        <para>Gets or sets a value indicating whether to use the default sort.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>
        <para>Gets or sets a value indicating whether edits are allowed.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>
        <para>Gets or sets a value indicating whether the new rows can
       be added using the <see cref="M:System.Data.DataView.AddNew" />
       method.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>
        <para>Gets the number of records in the <see cref="T:System.Data.DataView" />
after <see cref="P:System.Data.DataView.RowFilter" /> and <see cref="P:System.Data.DataView.RowStateFilter" />
have been applied.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewManager" /> associated with this view .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>
        <para>Gets a value indicating whether the data source is currently open and
      projecting views of data on the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>
        <para>Gets or sets the expression used to filter which rows are viewed in the
    <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>
        <para>Gets or sets the row state filter used in the <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>
        <para>Gets
      or sets the sort column or columns, and sort order for the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>
        <para>Gets or sets the source <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>
        <para>Gets a row of data from a specified table.</para>
      </summary>
      <param name="recordIndex">The index of a record in the <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>
        <para> Occurs when the list managed by the <see cref="T:System.Data.DataView" /> changes.
   </para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>
        <para> Contains a default <see cref="T:System.Data.DataViewSettingCollection" /> for each
<see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> 
class for the specified <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
      <param name="dataSet">The name of the <see cref="T:System.Data.DataSet" /> to use.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>
        <para>Creates a <see cref="T:System.Data.DataView" /> for the specified <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
      <param name="table">The name of the <see cref="T:System.Data.DataTable" /> to use in the <see cref="T:System.Data.DataView" />. </param>
      <returns>
        <para>A <see cref="T:System.Data.DataView" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataViewManager.ListChanged" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises a <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> event when a
<see cref="T:System.Data.DataTable" />is added to or removed from the <see cref="T:System.Data.DataTableCollection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises a <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event when a
<see cref="T:System.Data.DataRelation" />is added to or removed from the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.DataSet" /> to use with the <see cref="T:System.Data.DataViewManager" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewSettingCollection" /> for each <see cref="T:System.Data.DataTable" /> in the <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>
        <para>Gets or sets a value used for code persistence.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>
        <para>Occurs a row is added to or deleted from a <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>
        <para>Describes the version of data in a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>
        <para>
       None.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>
        <para>An unchanged row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>
        <para>A new row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>
        <para>A deleted row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>
        <para>A current version, which is a modified version of original
       data (see <see langword="ModifiedOriginal" />
       ).</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>
        <para>The original version (although it has since been
       modified and is available as <see langword="ModifiedCurrent" />).</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>
        <para>Original rows including unchanged and
       deleted rows.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>
        <para>Current rows including unchanged, new, and modified rows.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>
        <para>Represents
      the default settings for ApplyDefaultSort, DataViewManager, RowFilter,
      RowStateFilter, Sort, and Table for DataViews created from the
   <see cref="T:System.Data.DataViewManager" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>
        <para>Gets or sets a value indicating whether to use the default sort.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewManager" /> that contains this <see cref="T:System.Data.DataViewSetting" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to
   which the <see cref="T:System.Data.DataViewSetting" />
   properties apply.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>
        <para>Gets or sets the filter to apply in the <see cref="T:System.Data.DataView" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>
        <para>Gets or sets a value indicating whether to display
      Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged,
      or no rows in the <see cref="T:System.Data.DataView" />
      . </para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>
        <para>Gets or sets a value indicating the sort to apply in the
   <see cref="T:System.Data.DataView" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>
        <para>Contains a read-only collection of <see cref="T:System.Data.DataViewSetting" /> objects
   for each <see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.DataViewSettingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="ar"> An <see cref="T:System.Array" /> to which to copy <see cref="T:System.Data.DataViewSettingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>
        <para>Gets an IEnumerator for the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>
        <para>Gets the specified <see cref="T:System.Data.DataTable" /> object 
   from the collection.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" />to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>
        <para>Gets the specified <see cref="T:System.Data.DataTable" /> from the collection.</para>
      </summary>
      <param name="tableName">The name of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> specified by its index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>
        <para> Gets the number of <see cref="T:System.Data.DataViewSetting" />
objects in the <see cref="T:System.Data.DataViewSettingCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataViewSettingCollection" /> is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether access to 
      the <see cref="T:System.Data.DataViewSettingCollection" /> is
      synchronized (thread-safe).</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to 
      the <see cref="T:System.Data.DataViewSettingCollection" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>
        <para> The exception that is thrown by the DataAdapter during the update operation if the number of rows affected equals zero. </para>
      </summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</para>
      </summary>
      <param name="message">The text string describing the details of the exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</para>
      </summary>
      <param name="message">The text string describing the details of the exception.</param>
      <param name="inner">A reference to an inner exception.</param>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>
        <para>Gets or sets the value of the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DbType">
      <summary>
        <para>Specifies the data type of a field, a property, or a
      <see langword="Parameter" />
   object of a .NET data provider.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>
        <para>A variable-length stream of non-Unicode characters 
      ranging between 1 and 8,000 characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>
        <para>A variable-length stream of binary data ranging between 1 and 8,000
      bytes.</para>
        <note type="note">
      ADO.NET cannot correctly infer the type if
      the byte array is larger than 8,000 bytes. Explicitly specify the <see cref="T:System.Data.DbType" />
      
      when working with
      byte arrays larger than 8,000 bytes.
      
      </note>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>
        <para>An 8-bit unsigned integer ranging in value from 0 to 255.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>
        <para>A simple type representing Boolean values of <see langword="true" /> 
or <see langword="false" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>
        <para>A currency value ranging from -2<superscript term="63" /> (or 
   -922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807)
   with an accuracy to a ten-thousandth of a currency unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>
        <para>Date and time data ranging in value from January 1, 1753 
      to December 31, 9999 to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>
        <para>A type representing a date and time value.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>
        <para>A simple type representing values ranging from 1.0 x 
      10<superscript term="-28" /> to approximately 7.9 x 10 <superscript term="28" /> with 28-29 significant digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>
        <para>A floating point type representing values ranging from 
      approximately 5.0 x 10<superscript term="-324" /> to 1.7 x 10 <superscript term="308" /> with a
      precision of 15-16 digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>
        <para>A globally unique identifier (or GUID).</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>
        <para>An integral type representing signed 16-bit integers 
      with values between -32768 and 32767.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>
        <para>An integral type representing signed 32-bit integers 
      with values between -2147483648 and 2147483647.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>
        <para>An integral type representing signed 64-bit integers 
      with values between -9223372036854775808 and 9223372036854775807.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>
        <para>A general type representing any reference or value type 
      not explicitly represented by another <see langword="DbType" /> value.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>
        <para>An integral type representing signed 8-bit integers with 
      values between -128 and 127.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>
        <para>A floating point type representing values ranging from 
      approximately 1.5 x 10<superscript term="-45" /> to 3.4 x 10 <superscript term="38" /> with a precision
      of 7 digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>
        <para> A type representing Unicode character strings.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>
        <para>Date and time data ranging in value from January 1, 1753 
      to December 31, 9999 to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>
        <para>An integral type representing unsigned 16-bit integers 
      with values between 0 and 65535.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>
        <para>An integral type representing unsigned 32-bit integers 
      with values between 0 and 4294967295.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>
        <para>An integral type representing unsigned 64-bit integers 
      with values between 0 and 18446744073709551615.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>
        <para> A fixed-length stream of non-Unicode characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>
        <para> A fixed-length stream of Unicode characters.</para>
      </summary>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event of 
   a <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.FillErrorEventArgs" /> class.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> being updated.</param>
      <param name="values">The values for the row being updated.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>
        <para>Gets or sets a value indicating whether to continue the fill 
      operation despite the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> being updated when the error occurred.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>
        <para>Gets the errors being handled.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>
        <para>Gets the values for the row being updated when the error occurred.</para>
      </summary>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.Data.FillErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>
        <para>Represents an action
      restriction enforced on a set of columns in a primary key/foreign key relationship when
      a value or row is either deleted or updated.</para>
      </summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified parent and
       child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="parentColumn">
    The parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumn">
    The child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name,
       parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name=" constraintName">
    The name of the constraint.
 </param>
      <param name="parentColumn">
    The parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumn">
    The child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified arrays
       of parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="parentColumns">
    An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumns">
    An array of child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name,
       and arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="constraintName">
    The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. If <see langword="null" /> or empty string, a default name will be given when added to the constraints collection.
 </param>
      <param name="parentColumns">
    An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumns">
    An array of child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>
        <para>This constructor is provided for design time support in the Visual Studio .NET environment. 
   <see cref="T:System.Data.ForeignKeyConstraint" /> objects created by using this constructor must then be added to the collection via
   <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tables and columns with the specified names must exist at the time the method is called, 
      or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called prior to calling this constructor, the tables and columns with the specified names
      must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="constraintName">The name of the constraint. </param>
      <param name="parentColumnNames">An array of the names of parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="childColumnNames">An array of the names of child <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="parentTableName">The names of the parent <see cref="T:System.Data.DataTable" /> that contains parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="acceptRejectRule">One of the <see cref="T:System.Data.AcceptRejectRule" /> values. Possible values include <see langword="None" />, <see langword="Cascade" />, and <see langword="Default" />.</param>
      <param name="deleteRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is deleted. The default is <see langword="Cascade" />. Possible values include: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" />, and <see langword="Default" />.</param>
      <param name="updateRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is updated. The default is <see langword="Cascade" />. Possible values include: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" />, and <see langword="Default" />.</param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>
        <para>Gets a value indicating whether the current <see cref="T:System.Data.ForeignKeyConstraint" /> is identical to the specified object.</para>
      </summary>
      <param name="key">The object to which this <see cref="T:System.Data.ForeignKeyConstraint" /> is compared. Two <see cref="T:System.Data.ForeignKeyConstraint" /> are equal if they constrain the same columns.</param>
      <returns>
        <para>
          <see langword="true" />, if the objects are identical; 
    otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>
        <para>Gets the hash code of this instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> object. </para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>
        <para>Gets the child columns of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>
        <para>Gets the child table of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>
        <para>Indicates the action that should take place across
      this constraint when <see cref="M:System.Data.DataTable.AcceptChanges" />
      is invoked.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>
        <para> Gets
      or sets the action that occurs across this constraint when a row is deleted.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>
        <para> The parent columns of this constraint.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>
        <para>Gets the parent table of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>
        <para>Gets or
      sets the action that occurs across this constraint on when a row is
      updated.</para>
      </summary>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>
        <para> Associates a data source column with a <see cref="T:System.Data.DataSet" /> column, and is implemented by the <see cref="T:System.Data.Common.DataColumnMapping" /> class, which is
   used in common by .NET data providers.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>
        <para>Gets or sets the name of the column within
 the <see cref="T:System.Data.DataSet" /> to map to.</para>
      </summary>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>
        <para>Gets or sets
      the name of the column within the data source to map from. The name is case-sensitive.</para>
      </summary>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>
        <para> Contains a collection of DataColumnMapping objects,
      and is implemented by the <see cref="T:System.Data.Common.DataColumnMappingCollection" />, which is used in common by
      .NET data
      providers.</para>
      </summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a ColumnMapping object to the ColumnMapping 
      collection using the source column and <see cref="T:System.Data.DataSet" /> column names.
      </para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column. </param>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column. </param>
      <returns>
        <para> The ColumnMapping object that was added to the collection.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contains
   a <see cref="T:System.Data.Common.DataColumnMapping" /> object
   with the specified source column name.</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column.</param>
      <returns>
        <para>
          <see langword="true" />
if a <see cref="T:System.Data.Common.DataColumnMapping" /> object with
the specified source column name exists, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>
        <para> Gets the ColumnMapping object with
      the specified <see cref="T:System.Data.DataSet" /> column name.</para>
      </summary>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column within the collection.</param>
      <returns>
        <para> The ColumnMapping object with the specified <see langword="DataSet" /> column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name. The name is
   case-sensitive.</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column.</param>
      <returns>
        <para>The zero-based location of the <see langword="DataColumnMapping" /> object with the
   specified source column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.IColumnMapping" /> object with the specified <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 
name from the
collection.
</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive <see langword="SourceColumn" /> name. </param>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets
      the <see cref="T:System.Data.IColumnMapping" /> object with the specified
   <see langword="SourceColumn" /> 
   name.</para>
      </summary>
      <param name="index">The <see langword="SourceColumn" /> name of the <see langword="IColumnMapping" /> object to find.</param>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>
        <para> Represents a parameter to a Command object, and
      optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns; and is implemented by .NET data providers
      that access data sources.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>
        <para> Gets or sets a value indicating whether
      the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.IDataParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column that is mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.IDataParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.IDataParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>
        <para>Collects all parameters relevant to a Command
      object
      and
      their mappings to <see cref="T:System.Data.DataSet" /> columns, and is
      implemented by .NET data providers that access data
      sources.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a
      parameter in the collection has the specified source table name.</para>
      </summary>
      <param name="parameterName"> The name of the parameter.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.IDataParameter" /> within the collection.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.IDataParameter" />
within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.IDataParameter" /> from the collection.
   </para>
      </summary>
      <param name="parameterName"> The name of the parameter. </param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>
        <para>Gets the parameter at the specified index.</para>
      </summary>
      <param name="parameterName"> The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>
        <para>Provides a means of reading one or more forward-only
      streams of result sets obtained by executing a command at a data source, and is
      implemented by .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>
        <para> Provides access
      to the column values within each row for a DataReader, and is implemented
      by .NET data providers that access relational databases.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>
        <para>Gets the name for the field to find.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The name of the field or the empty string (""), if there is no value to
       return.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the data type information for the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The data type information for the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" /> information corresponding to the type
    of <see cref="T:System.Object" />
    that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />
    .</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be
    returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>
        <para>
       Return the value of the specified field.
    </para>
      </summary>
      <param name="i">
    The index of the field to find.
 </param>
      <returns>
        <para>
       The <see cref="T:System.Object" /> which will contain the field value upon return.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>
        <para>Gets all the attribute fields in the collection for the current
      record.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>
        <para> Return the index of the named field.
      </para>
      </summary>
      <param name="name">The name of the field to find. </param>
      <returns>
        <para> The index of the named field.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>
        <para>Gets the 8-bit unsigned integer value of the specified column.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The 8-bit unsigned integer value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column offset into the buffer as
      an array, starting at the given buffer offset.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" fieldOffset">The index within the field from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" bufferoffset">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The number of bytes to read. </param>
      <returns>
        <para> The actual number of bytes read.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>
        <para>Gets the character value of the specified column.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The character value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" length">The number of bytes to read. </param>
      <param name=" bufferoffset">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" fieldoffset">The index within the row from which to begin the read operation. </param>
      <returns>
        <para> The actual number of characters read.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>
        <para>
       Returns the guid value of the specified field.
    </para>
      </summary>
      <param name="i">
    The index of the field to find.
 </param>
      <returns>
        <para>
       The guid value of the specified field.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>
        <para>Gets the 16-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 16-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>
        <para>Gets the 32-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 32-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>
        <para>Gets the 64-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 64-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>
        <para>Gets the single-precision floating point number of the specified
       field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The single-precision floating point number of the
       specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>
        <para>Gets the double-precision floating point number of the specified
       field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The double-precision floating point number of the
       specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>
        <para>Gets the string value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The string value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the fixed-position numeric value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The fixed-position numeric value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the date and time data value of the spcified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The date and time data value of the spcified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>
        <para>Gets an <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote
    structured data.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> to be used when the field points
    to more remote structured data.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>
        <para> Return whether the specified field is set to null.
      </para>
      </summary>
      <param name="i">The index of the field to find. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified field is set to null, otherwise
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>
        <para>Gets the number of columns in the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>
        <para>Gets the column located at the specified index.</para>
      </summary>
      <param name="i">The index of the column to get.</param>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>
        <para>Gets the column with the specified name.</para>
      </summary>
      <param name="name">The name of the column to find.</param>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.IDataReader" />0bject.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>
        <para> Advances the data reader to the next result, when reading the results of
      batch SQL statements.
      </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.IDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.IDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>
        <para>Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>
        <para>Gets a value indicating whether the data reader is
      closed.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>
        <para> Allows an object
      to implement a DataAdapter, and represents a set of methods and mapping action-related properties used to fill and
      refresh a <see cref="T:System.Data.DataSet" />
      and update a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data
   source.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the
   parameters set by the
   user.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>
        <para>Indicates or specifies whether unmapped
       source tables
       or columns are passed with their source names in order to be filtered or to raise an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>
        <para>Indicates or specifies whether missing source
       tables, columns, and their relationships are added to the data set schema, ignored, or cause an error to be raised.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>
        <para>Indicates how a source table is mapped to a data set table.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>
        <para>Represents
      an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>
        <para>Creates a prepared (or compiled) version of the command on the data
      source.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>
        <para>Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>
        <para> Creates a new instance of an
      <see cref="T:System.Data.IDbDataParameter" /> object. </para>
      </summary>
      <returns>
        <para>An <see langword="IDbDataParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>
        <para>Executes a SQL statement against the
      <see langword="Connection" /> object of an ADO.NET data provider, and returns the number of rows affected.
      </para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>
        <para>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" /> .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" />values.</param>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the
      first row in the resultset returned by the query. Extra columns or rows are
      ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the
<see cref="T:System.Data.IDbCommand" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction in which the
      <see langword="Command" /> object of an ADO.NET data provider
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>
        <para>Gets or sets the text command to run against the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>
        <para>Gets or sets the wait time before terminating
      the attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>
        <para>Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is
   interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.IDataParameterCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>
        <para>Gets or sets how command results are applied
      to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      method of a <see cref="T:System.Data.Common.DbDataAdapter" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>
        <para>Represents an open connection to a data source, and is implemented by
      .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>
        <para> Begins a database transaction.
      </para>
      </summary>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel" /> value.</para>
      </summary>
      <param name="il">One of the <see cref="T:System.Data.IsolationLevel" /> values.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>
        <para> Closes the
      connection to the database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open 
   <see langword="Connection" /> object.</para>
      </summary>
      <param name="databaseName">The name of the database to use in place of the current database.</param>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>
        <para>Creates and returns a Command object associated with the 
      connection.</para>
      </summary>
      <returns>
        <para>A Command object associated with the connection.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>
        <para> Opens a database connection with the settings 
      specified by the <see langword="ConnectionString" /> property of the
      provider-specific Connection object.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>
        <para> Gets or sets the string used to open a database.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>
        <para>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an
      error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>
        <para> Gets the name of the current database or the
      database to be used once a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>
        <para>Gets the current state of the connection.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>
        <para> Represents a set of command-related
      properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by
      .NET data providers
      that access relational databases.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets
      an SQL statement used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets an SQL statement used to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or
      sets an SQL statement used to update records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets an SQL statement for deleting records from the data set.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>
        <para>Used by the Visual Basic .NET Data Designers to represent 
      a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet" />
      columns.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>
        <para>Indicates the precision of numeric parameters.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>
        <para>Indicates the scale of numeric parameters.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>
        <para>The size of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>
        <para> Represents a transaction to be performed at
      a data source, and is implemented by .NET data providers that access relational
      databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>
        <para>Specifies the Connection object to associate with the transaction. </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>
        <para> Specifies the transaction locking behavior for the connection.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>
        <para>
       A different isolation level than the one specified is being used, but the
       level cannot be determined.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>
        <para>
       The pending changes from more highly isolated transactions cannot be
       overwritten.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>
        <para>
       A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>
        <para>
       Shared locks are held while the data is being read to avoid dirty reads, but
       the data can be changed before the end of the transaction, resulting in
       non-repeatable reads or phantom data.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>
        <para>
       Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>
        <para>
       A range lock is palced on the <see cref="T:System.Data.DataSet" />
       , preventing other users from updating or inserting rows into the dataset until the transaction is complete.
    </para>
      </summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>
        <para> Associates a source table with a table in a <see cref="T:System.Data.DataSet" />, and is implemented by the <see cref="T:System.Data.Common.DataTableMapping" /> class, which is
   used in common by .NET data providers.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>
        <para>Gets the derived <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the
<see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>
        <para>Gets or sets the case-insensitive name of the table within the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>
        <para>Gets or sets the case-sensitive name of the source
       table.</para>
      </summary>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>
        <para> Contains a collection of TableMapping objects, and is
      implemented by the <see cref="T:System.Data.Common.DataTableMappingCollection" />, which is used in common by .NET data
      providers.</para>
      </summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>
        <para>
       Adds a table mapping to the collection.
    </para>
      </summary>
      <param name="sourceTableName">
    The case-sensitive name of the source table.
 </param>
      <param name="dataSetTableName">
    The name of the <see cref="T:System.Data.DataSet" />table.
 </param>
      <returns>
        <para>
       A reference to the newly-mapped <see cref="T:System.Data.ITableMapping" /> object.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether the collection contains a table mapping
       with the specified source table name.</para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the source table.</param>
      <returns>
        <para>
          <see langword="true" /> if a table mapping with the 
    specified source table name exists, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>
        <para>Gets the TableMapping object with the 
      specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTableName">The name of the <see langword="DataSet" /> table within the collection.</param>
      <returns>
        <para>The DataMapping object with the specified 
   <see langword="DataSet" /> table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the source table.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.ITableMapping" /> object with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name from the
   collection.
   </para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the <see langword="SourceTable" /> . </param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets the instance of <see cref="T:System.Data.ITableMapping" /> with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name.</para>
      </summary>
      <param name="index">The <see langword="SourceTable" /> name of the <see cref="T:System.Data.ITableMapping" />.</param>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>
        <para>Specifies how a <see cref="T:System.Data.DataColumn" /> is mapped.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>
        <para>The column is mapped to an XML element.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>
        <para>The column is mapped to an XML attribute.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>
        <para>The column is mapped to an <see cref="T:System.Xml.XmlText" /> node.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>
        <para>The column is mapped to an internal structure.</para>
      </summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>
        <para>Occurs when a target and source <see langword="DataRow" /> have the 
   same primary key value, and the <see cref="P:System.Data.DataSet.EnforceConstraints" /> property is set to true.</para>
      </summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.MergeFailedEventArgs" /> class with 
   the <see cref="T:System.Data.DataTable" /> name and a description
   of the merge conflict.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> name.</param>
      <param name="conflict">A description of the merge conflict.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>
        <para>Returns the name of the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>
        <para>Returns a description of the merge conflict.</para>
      </summary>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.DataSet.MergeFailed" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>
        <para> Determines the action that occurs when a
       mapping is missing from a source table or a source
       column.</para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>
        <para>
       The source column or source table created and added
       to the <see cref="T:System.Data.DataSet" /> using its original
       name.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>
        <para>
       The column or table not having a mapping is ignored.
       Returns <see langword="null" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>
        <para>A <see cref="T:System.SystemException" /> is generated.</para>
      </summary>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>
        <para>
       Specifies
       the action to take when adding data to
       the <see cref="T:System.Data.DataSet" /> and the required <see cref="T:System.Data.DataTable" />
       or <see cref="T:System.Data.DataColumn" /> is
       missing.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>
        <para>
       Adds the necessary columns to complete the schema.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>
        <para>
       Ignores the extra columns.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>
        <para>A <see cref="T:System.SystemException" /> is generated.</para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>
        <para> Adds the necessary columns and primary key information 
      to complete the schema. For more information about how primary key information
      is added to a <see cref="T:System.Data.DataTable" />, see <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      .To function properly with the OLE DB .NET Data
      Provider, <see langword="AddWithKey " />requires that the native OLE DB
      provider obtains necessary primary key information by setting the
      DBPROP_UNIQUEROWS property, and then determines which columns are primary key
      columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an
      alternative, the user may explicitly set the primary key constraints on each
   <see cref="T:System.Data.DataTable" />. This ensures that
      incoming records that match existing records are updated instead of
      appended. When using <see langword="AddWithKey" />, the SQL Server .NET Data
      Provider appends a FOR BROWSE clause to the statement being executed. The user
      should be aware of potential side effects, such as interference with the use of
      SET FMTONLY ON statements. See SQL Server Books Online for more
      information.
      
   </para>
      </summary>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>
        <para> Specifies the type of a parameter within a query
      relative to the <see cref="T:System.Data.DataSet" />
      .
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>
        <para>
       The parameter
       is an input parameter.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>
        <para>
       The parameter
       is an output parameter.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>
        <para>
       The parameter is capable of both input and output.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>
        <para> The parameter represents a return value from an operation 
      such as a stored procedure, built-in function, or user-defined function.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.PropertyAttributes">
      <summary>
        <para>
       Specifies the attributes of a property.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.NotSupported">
      <summary>
        <para>
       The property is not supported by the provider.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Required">
      <summary>
        <para>
       The user must specify a value for this property before the data source is
       initialized.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Optional">
      <summary>
        <para>
       The user does not need to specify a value for this property before the data
       source is initialized.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Read">
      <summary>
        <para>
       The user can read the property.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Write">
      <summary>
        <para>
       The user can write to the property.
    </para>
      </summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>
        <para>Represents a collection of properties that can be added to <see cref="T:System.Data.DataColumn" />, 
 <see cref="T:System.Data.DataSet" />, 
    or <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.Range.Null">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Intersection(System.Data.Range,System.Data.Range)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Offset(System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Resize(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.ToString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Difference">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.IsNull">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Max">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Min">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.IFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.#ctor(System.Data.DataColumn[],System.Object[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.AddNew">
      <summary>
        <para>Adds a new row to the <see cref="T:System.Data.DataRowView" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.UpdateIndex(System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelationshipConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
   <see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.RelationshipConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the given object to another type. The most common types to convert
      are to and from a string object. The default implementation will make a call
      to ToString on the object if the object is valid and if the destination
      type is string. If this cannot convert to the desitnation type, this will
      throw a NotSupportedException.</para>
      </summary>
      <param name="context">A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be null, so you should always check. Also, properties on the context object may also return null. </param>
      <param name="culture">An optional culture info. If not supplied the current culture is assumed. </param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="T:System.Data.Rule">
      <summary>
        <para>Indicates the action that occurs when a <see cref="T:System.Data.ForeignKeyConstraint" />
 is enforced.</para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>
        <para> No action taken on related rows.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>
        <para> Delete or update related rows. This is the default.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>
        <para> Set values in related rows to <see langword="DBNull" /> .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>
        <para> Set values in related rows to the value contained in 
      the <see cref="P:System.Data.DataColumn.DefaultValue" /> property.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>
        <para> Specifies how to handle existing schema mappings when performing a 
   <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> operation.</para>
      </summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>
        <para>Ignore 
      any table mappings on the DataAdapter. Configure the <see cref="T:System.Data.DataSet" /> using the incoming
      schema without applying any transformations. </para>
      </summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>
        <para>Apply any existing table mappings to the incoming schema. Configure the 
   <see cref="T:System.Data.DataSet" /> with the transformed schema.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>
        <para> Specifies SQL Server data types.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <para>
          <see cref="T:System.Int64" />
        </para>
        <para>A 64-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para>A fixed-length stream of binary data ranging between 1 and 8,000 bytes.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <para>
          <see cref="T:System.Boolean" />
        </para>
        <para> An unsigned numeric value that can be 0, 1, or
 <see langword="null" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 
    characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Date and time data ranging in value from January 1, 1753 to December 31, 9999 
    to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para>A fixed precision and scale numeric
    value between -10<superscript term="38" /> -1 and 10<superscript term="38" />
    -1.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <para>
          <see cref="T:System.Double" />
        </para>
        <para>A floating point number within the range of -1.79E +308 through 1.79E 
    +308.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para> A variable-length stream of binary data ranging from 0
    to 2<superscript term="31 " />-1 (or 2,147,483,647) bytes.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <para>
          <see cref="T:System.Int32" />
        </para>
        <para>A 32-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para> A currency value ranging from -2<superscript term="63" /> (or
-922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807)
with an accuracy to a ten-thousandth of a currency
unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A fixed-length stream of Unicode characters ranging between 1 and 4,000 
    characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para> A variable-length stream of Unicode data with a maximum length
    of 2<superscript term="30" /> - 1 (or 1,073,741,823) characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A variable-length stream of Unicode characters ranging between 1 and 4,000 
    characters.</para>
        <note type="note">
    Implicit conversion fails if the string
    is greater than
    4,000 characters. Explicitly set the object when
    working with strings longer than 4,000
    characters.
 </note>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <para>
          <see cref="T:System.Single" />
        </para>
        <para>A floating point number within the range of -3.40E +38 through 3.40E +38.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <para>
          <see cref="T:System.Guid" />
        </para>
        <para>A globally unique identifier (or GUID).</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Date and time data ranging in value from January 1, 1900 to June 6, 2079 to 
    an accuracy of one minute.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <para>
          <see cref="T:System.Int16" />
        </para>
        <para>A 16-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para>A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy 
    to a ten-thousandth of a currency unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para> A variable-length stream of non-Unicode data with a
    maximum length of 2<superscript term="31 " />-1 (or 2,147,483,647) characters. </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Data and time data in the format yyyymmddhhmmss.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <para>
          <see cref="T:System.Byte" />
        </para>
        <para>An 8-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para>A variable-length stream of binary data ranging between 1 and 8,000 
    bytes.</para>
        <note type="note">
    Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly
    set the object when working with byte arrays larger than 8,000 bytes.
 </note>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A variable-length stream of non-Unicode characters ranging between 1 and 
    8,000 characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <para>
          <see cref="T:System.Object" />
        </para>
        <para>A special data type that can contain numeric, string, binary, or date data as 
    well as the SQL Server values Empty and Null, which is assumed if no other type
    is declared.</para>
      </summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>
        <para>Provides data for the state change event of a .NET data provider.</para>
      </summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.StateChangeEventArgs" /> class, when given the original
       state and the current state of the object.
    </para>
      </summary>
      <param name="originalState">
    One of the <see cref="T:System.Data.ConnectionState" /> values.
 </param>
      <param name=" currentState">
    One of the <see cref="T:System.Data.ConnectionState" /> values.
 </param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>
        <para> Gets the new state
      of the connection. The connection object
      will be in the new state already when the event is
      fired.</para>
      </summary>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>
        <para> Gets the original state of the
      connection.</para>
      </summary>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>
        <para> Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbConnection.StateChange" /> 
event.
</para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">The <see cref="T:System.Data.StateChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>
        <para> Specifies the type of SQL query to be used by the <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />,
<see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />, or
<see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> 
class.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>
        <para> A SQL query that is a SELECT statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>
        <para> A SQL query that is an INSERT statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>
        <para> A SQL query that is an UPDATE statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>
        <para> A SQL query that is a DELETE statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>
        <para>Represents a restriction on a set of columns in which all values must be unique.</para>
      </summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and
<see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and array
   of <see cref="T:System.Data.DataColumn" /> objects.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the given array of <see cref="T:System.Data.DataColumn" />
objects.</para>
      </summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>
        <para>This constructor is provided for design time support in the Visual Studio .NET environment. <see cref="T:System.Data.UniqueConstraint" /> 
objects created by using this constructor must then be added to the collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />.
Columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called
prior to calling this constructor, the columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columnNames">An array containing names of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class 
   with the specified name, the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class 
   with the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name, an array
   of <see cref="T:System.Data.DataColumn" /> objects to constrain,
   and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with an array
   of <see cref="T:System.Data.DataColumn" /> objects to constrain,
   and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>
        <para>Compares this constraint to a second to
      determine if both are identical.</para>
      </summary>
      <param name="key2">The object to which this <see cref="T:System.Data.UniqueConstraint" /> is compared.</param>
      <returns>
        <para>
          <see langword="true" />, if the contraints are equal;
   otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>
        <para>Gets the hash code of this instance of the <see cref="T:System.Data.UniqueConstraint" /> object. </para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>
        <para>Gets the array of columns that this constraint affects.</para>
      </summary>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>
        <para>Gets
       a value indicating whether or not the constraint is on a primary key.</para>
      </summary>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>
        <para>Gets the table to which this constraint belongs.</para>
      </summary>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>
        <para>
       Specifies how query command results are applied to the row being updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>
        <para> Any returned parameters or rows are ignored.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>
        <para>
       Output parameters are mapped to the changed row in the <see cref="T:System.Data.DataSet" />.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>
        <para> The data in the first returned row is mapped to the changed row in the
   <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>
        <para> Both the output parameters and the first returned row are mapped to the
      changed row in the <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>
        <para>Specifies the action to take with regard to the current and remaining
       rows during an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>
        <para>The <see cref="T:System.Data.Common.DataAdapter" /> is to continue proccessing rows.</para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>
        <para>
       The event handler reports that the update should be treated as an error.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>
        <para>
       The current row is not to be updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>
        <para>
       The
       current row and all remaining rows are not to be updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.None">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.Empty">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.TextOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.EltOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.Mixed">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>
        <para>Specifies how to read XML data and a relational
      schema into a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>
        <para>Default. Performs the most appropriate of these actions:</para>
        <para>If the
      data is a DiffGram, sets <paramref name="XmlReadMode " />to
   <see langword="DiffGram" />.</para>
        <para>-or-</para>
        <para>If
      the dataset already has a schema, or the document contains an in-line schema,
      sets <paramref name="XmlReadMode " />to
   <see langword="ReadSchema" /> .</para>
        <para>-or-</para>
        <para>If
      the dataset does not already have a schema and the document does not contain an
      in-line schema, sets <paramref name="XmlReadMode " />to
   <see langword="InferSchema" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>
        <para>Reads
      any inline schema and loads the data. If the <see cref="T:System.Data.DataSet" /> already contains schema,
      new tables may be added to the schema, but an exception is thrown if any tables
      in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>
        <para> Ignores
      any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" />
      schema.
      If any data does not match the
      existing schema, it is discarded (including data from differing namespaces
      defined for the <see cref="T:System.Data.DataSet" />). If the data is a DiffGram, <see langword="IgnoreSchema " />has the same functionality as <see langword="DiffGram" />
      .
      </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>
        <para>Ignores any inline schema, infers schema from the data and loads the data. If 
      the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding
      new tables or adding columns to existing tables. An exception is thrown if the
      inferred table already exists but with a different namespace, or if any of the
      inferred columns conflict with existing columns.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>
        <para>Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />. The semantics are
   identical
   to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation. As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.
   Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from
<see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 
as a
DiffGram.</para>
        <para> The target <see cref="T:System.Data.DataSet" /> must have the 
same schema as the <see cref="T:System.Data.DataSet" /> on which <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as DiffGram is
called. Otherwise the DiffGram merge operation fails, and an exception is
thrown.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>
        <para>Reads XML documents containing inline XDR schema 
      fragments, such as those generated by executing FOR XML schemas that include
      inline XDR schemaagainst an instance of SQL Server. When <see cref="T:System.Data.XmlReadMode" /> is set to
   <see langword="SqlXml" /> 
   
   , the default namespace is read as the inline schema.</para>
      </summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>
        <para>Specifies how to write XML data and a 
      relational schema from a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>
        <para> Default. Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data with the 
   relational structure as inline XSD schema. If the <see cref="T:System.Data.DataSet" /> has only a schema
   with no data, only the inline schema is written. If the <see cref="T:System.Data.DataSet" /> does not have a current
   schema, nothing is written.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>
        <para>Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data, 
   without an XSD schema. If no data is loaded into the <see cref="T:System.Data.DataSet" />, nothing is written.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>
        <para>Writes the entire <see cref="T:System.Data.DataSet" /> as a DiffGram, 
   including original and current values. To generate a DiffGram containing only changed values, call
<see cref="M:System.Data.DataSet.GetChanges" />, and then call <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram on the returned 
<see cref="T:System.Data.DataSet" /> 
.</para>
        <para> The DiffGram can be sent to an instance of SQL Server because 
   it is a subset of an UpdateGram.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>
        <para>Represents a set of data commands and a database connection that are used to
 fill the <see cref="T:System.Data.DataSet" />
 and update the data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DataAdapter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>
        <para>Determines whether one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist and they should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist; otherwise 
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>
        <para>Creates a copy of this instance of <see cref="T:System.Data.Common.DataAdapter" />.</para>
      </summary>
      <returns>
        <para>The cloned instance of <see cref="T:System.Data.Common.DataAdapter" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>
        <para>Creates a new <see cref="T:System.Data.Common.DataTableMappingCollection" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.Common.DataTableMappingCollection" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DataAdapter" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set
   by the user.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>
        <para>Gets or sets a value indicating whether <see cref="M:System.Data.DataRow.AcceptChanges" /> 
is called on a <see cref="T:System.Data.DataRow" /> after it is added to the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>
        <para> Gets or sets a value that specifies whether to generate
      an exception, or the row in error when an error is encountered during a row update.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>
        <para>Determines the 
      action to take when incoming data does not have a matching table or
      column.
			</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>
        <para>Determines the 
      action to take when existing <see cref="T:System.Data.DataSet" /> schema does not match incoming
      data.
			</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>
        <para>Gets a collection that provides the master mapping between
      a source table and a <see cref="T:System.Data.DataTable" />
      .</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>
        <para> Contains a generic column mapping for an object that
      inherits from <see cref="T:System.Data.Common.DataAdapter" />. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class. </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class with the specified source
   column name and <see cref="T:System.Data.DataSet" /> column name to map to.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive column name from a data source. </param>
      <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataColumn" /> from the given <see cref="T:System.Data.DataTable" /> using the <see cref="T:System.Data.MissingSchemaAction" /> and the <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" /> property.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to get the column from.</param>
      <param name="dataType">The <see cref="T:System.Type" /> of the data column.</param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>
        <para>
       Converts the current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name
       to a string.
    </para>
      </summary>
      <returns>
        <para>
       The current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name as a string.
    </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>
        <para>Gets or sets the name of the column within
 the <see cref="T:System.Data.DataSet" /> to map to.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>
        <para>Gets or sets the name of the column
      within the data source to map from. The name
      is
      case-sensitive.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>
        <para> Contains a collection of <see cref="T:System.Data.Common.DataColumnMapping" /> objects. This
   class cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>
        <para> Creates an empty <see cref="T:System.Data.Common.DataColumnMappingCollection" /> .
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection.
   </para>
      </summary>
      <param name="value">A <see langword="DataColumnMapping" /> object to add to the collection. </param>
      <returns>
        <para> The index of the <see langword="DataColumnMapping" /> object that was added to the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection when given a source column 
   name and a <see cref="T:System.Data.DataSet" /> column name.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column to map to. </param>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to map to. </param>
      <returns>
        <para> The <see langword="DataColumnMapping" /> object that was added to
   the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> array to the end of the collection.</para>
      </summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>
        <para> Removes all <see cref="T:System.Data.Common.DataColumnMapping" /> objects from the collection.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the given source column
   name exists in the collection.</para>
      </summary>
      <param name="value">The case-sensitive source column name of the <see cref="T:System.Data.Common.DataColumnMapping" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if collection
   contains a <see cref="T:System.Data.Common.DataColumnMapping" /> object
   with
   the specified source column name; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with
   the given <see cref="T:System.Object" />
   exists in the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   collection contains the specified
   <see cref="T:System.Data.Common.DataColumnMapping" /> object; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array"> An <see cref="T:System.Array" /> to which to copy <see cref="T:System.Data.Common.DataColumnMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with
    the specified <see cref="T:System.Data.DataSet" />
    column name.</para>
      </summary>
      <param name="value">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to find.</param>
      <returns>
        <para>The <see cref="T:System.Data.Common.DataColumnMapping" /> object with
    the specified <see cref="T:System.Data.DataSet" /> column
    name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the
collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified source column
   name.</para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified
   case-sensitive source column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the
   given <see cref="T:System.Data.DataSet" /> column
   name.</para>
      </summary>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the data set column to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the given 
<see langword="DataSet" /> 
column name, or -1 if the <see langword="DataColumnMapping" /> object does not exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.Common.DataColumnMapping" /> object into 
   the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" />object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataColumnMapping" />object. </param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataColumnMapping" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified index from the collection.
   </para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column
   name from the
   collection.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive source column name. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>
        <para> Removes the <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> from the
collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> for the specified
<see cref="T:System.Data.Common.DataColumnMappingCollection" /> 
, source column name, and <see cref="T:System.Data.MissingMappingAction" />.</para>
      </summary>
      <param name="columnMappings">the <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">The case-sensitive source column name to find.</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataColumnMapping" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.Common.DataColumnMapping" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or
 sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object at the specified
 index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to find.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or
       sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column
       name.</para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column.</param>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>
        <para>Contains a description of a mapped relationship between a source
      table and a <see cref="T:System.Data.DataTable" />
      . This class is used by a
   <see cref="T:System.Data.Common.DataAdapter" /> when
      populating a <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class with a
   source when given a source table name and a <see cref="T:System.Data.DataTable" /> name.
   </para>
      </summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable"> The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class when given a source table name, a
<see cref="T:System.Data.DataTable" /> 
name, and an array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects.</para>
      </summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable">The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
      <param name="columnMappings">An array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataColumn" /> from the specified <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Data.MissingMappingAction" /> value and the name of the <see cref="T:System.Data.DataColumn" /> .</para>
      </summary>
      <param name="sourceColumn">The name of the <see cref="T:System.Data.DataColumn" /> .</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>
        <para>Gets the current <see cref="T:System.Data.DataTable" /> for the specified <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Data.MissingSchemaAction" /> value.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> from which to get the <see cref="T:System.Data.DataTable" /> .</param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>
        <para> Converts the current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name to a string.
   </para>
      </summary>
      <returns>
        <para> The current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name, as a
   string.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the
<see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>
        <para>Gets or sets the table name from a
   <see cref="T:System.Data.DataSet" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>
        <para> Gets or sets the case-sensitive source table
      name
      from a data source.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>
        <para> A collection of <see cref="T:System.Data.Common.DataTableMapping" /> objects. This
   class cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> class. This new instance is empty, that is, it does not yet 
   contain any <see cref="T:System.Data.Common.DataTableMapping" /> objects.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>
        <para> Adds an <see cref="T:System.Object" /> that is a table mapping to the collection.
   </para>
      </summary>
      <param name="value">A <see langword="DataTableMapping" /> object to add to the collection. </param>
      <returns>
        <para> The index of the <see langword="DataTableMapping" /> object added to the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.Common.DataTableMapping" /> array to the end of the collection.</para>
      </summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataTableMapping" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataTableMapping" /> object to the collection when given a source table name
   and a <see cref="T:System.Data.DataSet" /> table name.
   </para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table to map from. </param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to map to. </param>
      <returns>
        <para> The <see cref="T:System.Data.Common.DataTableMapping" /> object that was added to the
   collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>
        <para> Removes all <see cref="T:System.Data.Common.DataTableMapping" /> objects from the collection.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table
   name exists in the collection.</para>
      </summary>
      <param name="value">The case-sensitive source table name containing the <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains
   a <see cref="T:System.Data.Common.DataTableMapping" /> object with this source table name; otherwise,
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether the given <see cref="T:System.Data.Common.DataTableMapping" />
 object exists in the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <para>
          <see langword="true" /> if this collection contains the
    specified <see cref="T:System.Data.Common.DataTableMapping" />; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy the <see cref="T:System.Data.Common.DataTableMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTable"> The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to find.</param>
      <returns>
        <para>The <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" /> object to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the
   specified source table name.</para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the
   specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see langword="DataSet" /> table to find.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the given <see cref="T:System.Data.DataSet" /> table name, or -1 if the <see cref="T:System.Data.Common.DataTableMapping" /> object does not exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.Common.DataTableMapping" /> object into
   the <see cref="T:System.Data.Common.DataTableMappingCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataTableMapping" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>
        <para>
       Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object located at the specified index from the collection.
    </para>
      </summary>
      <param name="index">
    The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to remove.
 </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>
        <para>
       Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table
       name from the
       collection.
    </para>
      </summary>
      <param name="sourceTable">
    The case-sensitive source table name to find.
 </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.Common.DataTableMapping" /> object from the
   collection.
   </para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.Common.DataTableMapping" /> object to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source table
   name and <see cref="T:System.Data.DataSet" />
   table name, using the given <see cref="T:System.Data.MissingMappingAction" />.</para>
      </summary>
      <param name="tableMappings">The <see cref="T:System.Data.Common.DataTableMappingCollection" /> collection to search.</param>
      <param name="sourceTable">The case-sensitive name of the mapped source table.</param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the mapped <see cref="T:System.Data.DataSet" /> table.</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataTableMapping" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.Common.DataTableMapping" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object at the
   specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to return.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object
    with the specified source table name.</para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table.</param>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>
        <para>Aids implementation
      of the <see cref="T:System.Data.IDbDataAdapter" /> interface. Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide
      strong typing, but inherit most of the functionality needed to
      fully implement a DataAdapter.</para>
      </summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>
        <para>The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbDataAdapter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> used to update the data source.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> that updates the data source.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement .</param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally 
   releases the managed resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>
        <para>Configures the schema of the
      specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para> A <see cref="T:System.Data.DataTable" />
that contains schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and
   configures the schema to match that in the data source based on the specified
<see cref="T:System.Data.SchemaType" />
.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</param>
      <returns>
        <para>A reference to a collection
      of <see cref="T:System.Data.DataTable" />
      objects that were added to the <see cref="T:System.Data.DataSet" />
      .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon
   the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />
   .</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</param>
      <param name="srcTable">The name of the source table to use for table mapping.</param>
      <returns>
        <para>A reference to a collection of <see cref="T:System.Data.DataTable" />
objects that were added to the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="srcTable">The name of the source table to use for table mapping.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on
   the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" />
   values.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those
   in the data source using the <see cref="T:System.Data.DataTable" /> name.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string and command behavior.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those
   in the data source using the <see cref="T:System.Data.DataTable" /> name, the specified SQL
   SELECT statement, and <see cref="T:System.Data.CommandBehavior" /> .</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" /> , and <see cref="T:System.Data.IDataReader" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="srcTable">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping. </param>
      <param name="dataReader">The name of the <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in
   the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" />
   names.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="dataReader">The name of the <see cref="T:System.Data.IDataReader" /> .</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set
   by the user.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.FillErrorEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para> Raises the <see langword="RowUpdated" /> event of a .NET data provider.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para> Raises the <see langword="RowUpdating" /> event of a .NET
   data provider.</para>
      </summary>
      <param name="value">An <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE
      statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" />
      objects.</para>
      </summary>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements
      for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" />
      name.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>
        <para>Calls the respective INSERT, UPDATE, or DELETE
      statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" />
      objects.</para>
      </summary>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</param>
      <param name="tableMapping">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="E:System.Data.Common.DbDataAdapter.FillError">
      <summary>
        <para>Returned when an error occurs during a fill operation.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>
        <para>Provides
      the capability for a .NET data provider to ensure that a user has a
      security level adequate for accessing data.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name="allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>
        <para>Creates and returns an identical copy of the current permission object.</para>
      </summary>
      <returns>
        <para>A copy of the current permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Returns a new permission object representing the intersection of
      the current permission object and the specified permission object.</para>
      </summary>
      <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object.</param>
      <returns>
        <para>A new permission object that represents the intersection
      of the current permission object and the specified permission object. This new
      permission object is a null reference (<see langword="Nothing" /> in Visual Basic) if the
      intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Returns a value indicating whether the current permission object
      is a subset of the specified permission object.</para>
      </summary>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
      <returns>
        <para>
          <see langword="True " />if the 
   current permission object is a
   subset of the specified permission object; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>
        <para>Returns a value indicating whether the permission can be 
      represented as unrestricted without any knowledge of the permission semantics.</para>
      </summary>
      <returns>
        <para>
          <see langword="True " />if the permission can be represented as 
   unrestricted.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>
        <para> Returns a new permission object that is the union of
      the current and specified permission objects.</para>
      </summary>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object.</param>
      <returns>
        <para>A new permission object that represents the union of the
      current permission object and the specified permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Reconstructs a security object with a specified state 
      from an XML encoding.</para>
      </summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>
        <para>Creates an XML encoding of the security object and its current state.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state information.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>
        <para>Gets a value indicating whether a blank password is allowed.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para> A <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>
        <para>Gets a value indicating whether a blank password is allowed.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>
        <para>
       Returns all the attribute fields in the collection for the current
       record.
    </para>
      </summary>
      <param name="values">
    An array of <see cref="T:System.Object" /> to copy the attribute fields into.
 </param>
      <returns>
        <para>
       The number of instances of <see cref="T:System.Object" /> in the array.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>
        <para>
       Returns the name of the specified column.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The name of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>
        <para>
       Returns the value at the specified column in its native format.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>
        <para>
       Returns the name of the back-end data type.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The name of the back-end data type.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>
        <para>
       Returns the <see cref="T:System.Type" />
       that is the data type of the object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The <see cref="T:System.Type" />
       that is the data type of the object.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>
        <para>
       Returns the column ordinal, given the name of the column.
    </para>
      </summary>
      <param name="name">
    The name of the column.
 </param>
      <returns>
        <para>
       The column ordinal.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a boolean.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
          <see langword="true" /> if the boolean is <see langword="true" />; otherwise, 
    <see langword="false" />.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a byte.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>
       Returns
       the value of the specified column as a byte array.
    </para>
      </summary>
      <param name="i">
    column ordinal.
 </param>
      <param name=" buffer">
    buffer to copy data into.
 </param>
      <param name=" length">
    max length to copy into the buffer.
 </param>
      <param name=" bufferIndex">
    point to start from within the buffer.
 </param>
      <param name=" dataIndex">
    point to start from within the source data.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a character.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>
       Returns
       the value of the specified column as a character array.
    </para>
      </summary>
      <param name="i">
    column ordinal.
 </param>
      <param name=" buffer">
    buffer to copy data into.
 </param>
      <param name=" length">
    max length to copy into the buffer.
 </param>
      <param name=" bufferIndex">
    point to start from within the buffer.
 </param>
      <param name=" dataIndex">
    point to start from within the source data.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>
        <para> Returns the GUID value of the specified field.
      </para>
      </summary>
      <param name="i">The index of the field to return. </param>
      <returns>
        <para> The guid value of the specified field.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 16-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 32-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 64-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a single-precision floating point number.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a double-precision floating point number.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a string.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as
       a <see cref="T:System.Decimal" />
       object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as
       a <see cref="T:System.DateTime" />
       object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>
        <para>
       Not currently supported.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>
        <para> Used to indicate non-existant values.
      </para>
      </summary>
      <param name="i">The column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the
   specified column is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>
        <para>
       Indicates the number of
       fields within the current record. This property is read-only.
    </para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>
        <para>
       Indicates the value at
       the specified column in its native format given the column ordinal. This
       property is read-only.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>
        <para>
       Indicates the value at
       the specified column in its native format given the column name. This
       property is read-only.
    </para>
      </summary>
      <param name="name">
    The column name.
 </param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified 
<see langword="DataReader" /> .</para>
      </summary>
      <param name="reader">The <see langword="DataReader" /> through which to iterate.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified 
<see langword="DataReader" />, and indicates whether to automatically close the 
<see langword="DataReader" /> after iterating through its data.</para>
      </summary>
      <param name="reader">The <see langword="DataReader" /> through which to iterate.</param>
      <param name=" closeReader">
        <see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>
        <para>Sets the enumerator to its initial position, which is before the first 
      element in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>
        <para> Gets the current element in the collection.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.CanResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.GetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.ResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.SetValue(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.ComponentType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.PropertyType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>
        <para> Provides data for the <see langword="RowUpdated" /> event of a .NET data provider.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">The type of SQL statement executed.</param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 
is called.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>
   Gets the type of SQL statement executed.
</summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>
        <para>Gets any errors generated by the .NET data provider when
 the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />
 was
 executed.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>
        <para>Gets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>
        <para> Provides the data for the <see langword="RowUpdating" /> event of a .NET data provider.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">The type of SQL statement to execute.</param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> operation.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>
        <para> Gets the type of SQL
      statement to execute.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>
        <para>Gets any errors generated by the .NET data provider when
 the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />
 executes.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>
        <para>Gets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> to send through the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor(System.String,System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor(System.String,System.Data.DataTable,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Bind(System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow[],System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.ToString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataExpression.Expression">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.#ctor(System.String,System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke(System.Data.DataRow)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsWhiteSpace(System.Char)">
      <summary>
     is the character a white space character?
     Consider using CharacterInfo().IsWhiteSpace(ch) (System.Globalization)
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsAlphaNumeric(System.Char)">
      <summary>
     is the character an alphanumeric?
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsHexChar(System.Char)">
      <summary>
     is the character an hex value
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsAlpha(System.Char)">
      <summary>
     is the character an alpha?
 </summary>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>
        <para>Represents the exception that is thrown when attempting to add 
      a <see cref="T:System.Data.DataColumn" /> containing an invalid
   <see cref="P:System.Data.DataColumn.Expression" /> to
      a <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the specified 
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>
        <para>Represents the exception that is thrown 
      when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> cannot be evaluated.</para>
      </summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class.
</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>
        <para>Represents the exception that is thrown when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> contains 
   a syntax error.</para>
      </summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the specified 
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommand">
      <summary>
        <para>Represents an SQL statement or stored procedure to execute against a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an
<see cref="T:System.Data.OleDb.OleDbConnection" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an
<see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</param>
      <param name="transaction">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Cancel">
      <summary>
        <para>Attempts to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.CreateParameter">
      <summary>
        <para>Creates
      a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object. </para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbCommand" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" />values.</param>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery">
      <summary>
        <para> Executes a SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows
   affected.</para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Prepare">
      <summary>
        <para>Creates a prepared (or compiled) version of the command on the data
      source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout">
      <summary>
        <para> Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandText">
      <summary>
        <para> Gets or
      sets the SQL statement or stored procedure to execute at the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandTimeout">
      <summary>
        <para> Gets or sets the wait time before
      terminating an attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandType">
      <summary>
        <para>Gets or sets a value indicating how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" />
used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible">
      <summary>
        <para> Gets or sets a value indicating whether the command object should be visible in
      a customized Windows Forms Designer control.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction
      in which the <see cref="T:System.Data.OleDb.OleDbCommand" />
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource">
      <summary>
        <para> Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used
   by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommandBuilder">
      <summary>
        <para>Provides a means of automatically generating
      single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
object.</para>
      </summary>
      <param name="adapter">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform inserts at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform updates at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the
      <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
   .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform deletions at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the
   <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
   .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.RefreshSchema">
      <summary>
        <para>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
      <summary>
        <para>Populates the specified <see cref="T:System.Data.OleDb.OleDbCommand" />
object's <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection with
parameter information for the stored procedure specified in the
<see cref="T:System.Data.OleDb.OleDbCommand" /> 
.</para>
      </summary>
      <param name="command">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> of this command.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
      <summary>
        <para> Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are
   automatically generated.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.QuotePrefix">
      <summary>
        <para> Gets or sets the beginning character or characters to use when specifying database object names,
      (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.QuoteSuffix">
      <summary>
        <para> Gets or sets the ending character or characters to use when specifying database object
      names, (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnection">
      <summary>
        <para>Represents an open connection to a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" />
class with the specified connection string.</para>
      </summary>
      <param name="connectionString">The connection used to open the database.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the current <see cref="T:System.Data.IsolationLevel" />
value.</para>
      </summary>
      <param name="isolationLevel">The transaction isolation level for this connection.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction">
      <summary>
        <para>Begins a database transaction.</para>
      </summary>
      <returns>
        <para>An object representing the new transaction. </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open <see cref="T:System.Data.OleDb.OleDbConnection" /> .</para>
      </summary>
      <param name="value">The database name.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Close">
      <summary>
        <para>Closes the connection to the data source. This is the preferred method of closing any open connection.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.CreateCommand">
      <summary>
        <para>Creates and returns an <see cref="T:System.Data.OleDb.OleDbCommand" /> object associated with
   the <see cref="T:System.Data.OleDb.OleDbConnection" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbCommand" /> object. </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbConnection" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])">
      <summary>
        <para>Returns schema information from a data source as indicated by a Guid, and after applying the specified restrictions.</para>
      </summary>
      <param name="schema">One of the <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> values that specifies the schema table to return.</param>
      <param name="restrictions">
        <para>An <see cref="T:System.Object" /> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on. </para>
      </param>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> containing the requested schema information.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Open">
      <summary>
        <para>Opens a database connection with the property
      settings specified by the <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool">
      <summary>
        <para>Indicates that the <see cref="T:System.Data.OleDb.OleDbConnection" /> object pooling can be cleared when the last
   underlying OLE DB Provider is released.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionString">
      <summary>
        <para>Gets or sets the string used to open a database.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout">
      <summary>
        <para> Gets the time to wait while trying to establish a
      connection before terminating the attempt and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Database">
      <summary>
        <para> Gets the name of the current database or the database to be used once a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.DataSource">
      <summary>
        <para> Gets the location and file name of the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Provider">
      <summary>
        <para> Gets the name of the OLE DB provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ServerVersion">
      <summary>
        <para> Gets a string containing the version of
      the of the server to which the client is connected.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.State">
      <summary>
        <para>Gets the current state of the connection.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.InfoMessage">
      <summary>
        <para>Occurs when the provider sends a warning or an informational message.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.StateChange">
      <summary>
        <para>Occurs when the state of the connection changes.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataAdapter">
      <summary>
        <para> Represents a set of data commands and a
      database connection that are used to fill the <see cref="T:System.Data.DataSet" />
      and update the data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
      <summary>
        <para>Initializes a new
      instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
      class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
      <summary>
   Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.
</summary>
      <param name="selectCommand">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure. This <see cref="T:System.Data.OleDb.OleDbCommand" /> is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> .</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      .</para>
      </summary>
      <param name="selectCommandText">The <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> .</param>
      <param name="selectConnectionString">The connection string.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>
        <para>Inintializes a new instance
 of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
 .</para>
      </summary>
      <param name="selectCommandText">The <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> .</param>
      <param name="selectConnection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset " />or <see langword="Record" />
object using the specified <see cref="T:System.Data.DataTable" /> and ADO
objects.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="ADODBRecordSet">An ADO <see langword="Recordset" /> or <see langword="Record" /> object. </param>
      <returns>
        <para>The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using
   the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="ADODBRecordSet">An ADO <see langword="Recordset" /> or <see langword="Record" /> object. </param>
      <param name="srcTable">The source table used for the table mappings.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event using a <see cref="T:System.Data.Common.RowUpdatedEventArgs" />
object.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event using a <see cref="T:System.Data.Common.RowUpdatingEventArgs" />
object.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets an SQL statement
      or stored procedure used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or sets an SQL
      statement or stored procedure used to update records in the data source.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data
   source.
   The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is
   executed against the data source. The attempt to update is made, so the event
   fires.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataReader">
      <summary>
        <para> Provides a way of reading
      a forward-only stream of data rows from a data source. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.OleDb.OleDbDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Finalize">
      <summary>
        <para>Frees resources before the <see cref="T:System.Data.OleDb.OleDbDataReader" /> is reclaimed by the 
   Garbage Collector.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a byte.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column as a byte.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column offset into
      the
      buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name=" dataIndex">The index within the field from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The maximum length to copy into the buffer. </param>
      <returns>
        <para>The actual number of bytes read.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Reads a stream of characters from the specified column offset
      into the buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name=" dataIndex">The index within the row from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to copy data. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The number of characters to read. </param>
      <returns>
        <para>The actual number of characters read.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a character.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)">
      <summary>
        <para> Not currently supported.
      </para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the name of the source data type.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the back-end data type.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.DateTime" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.Decimal" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a double-precision floating point number.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" />
that is the data type of the object.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The <see cref="T:System.Type" />
that is the data type of the object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single-precision floating point number.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a globally-unique identifier (GUID).</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 16-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 32-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 64-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)">
      <summary>
        <para>Gets the name of the specified column.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)">
      <summary>
        <para>Gets the column ordinal, given the name of the column.</para>
      </summary>
      <param name="name">The name of the column.</param>
      <returns>
        <para>The zero-based column ordinal.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a string.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.TimeSpan" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)">
      <summary>
        <para> Gets the
      value of the column at the specified ordinal in its native format.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value to return.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])">
      <summary>
        <para> Gets all the attribute columns in the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)">
      <summary>
        <para> Gets a value indicating whether the column contains non-existent or missing values.
      </para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified
   column value is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.NextResult">
      <summary>
        <para> Advances the data reader to the next result, when reading the results of
      batch SQL statements.
      </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more result sets; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.OleDb.OleDbDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Depth">
      <summary>
        <para> Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.FieldCount">
      <summary>
        <para> Gets the number of columns in the current row.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.IsClosed">
      <summary>
        <para> Indicates whether the data reader
      is closed.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)">
      <summary>
        <para> 
      Gets the value of the specified column in its native format given
      the column ordinal.
      </para>
      </summary>
      <param name="index">The column ordinal. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.String)">
      <summary>
        <para> Gets the value of the specified column in its native format given
      the column name.
      </para>
      </summary>
      <param name="name">The column name. </param>
    </member>
    <member name="T:System.Data.OleDb.OleDbError">
      <summary>
        <para> Collects information relevant to a
      warning or error returned by the data source. This class cannot be
      inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbError.ToString">
      <summary>
        <para>Gets the complete text of the error message.</para>
      </summary>
      <returns>
        <para>The complete text of the error.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Message">
      <summary>
        <para>Gets a short description of the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.NativeError">
      <summary>
        <para>Gets the database-specific error information.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.SQLState">
      <summary>
        <para>Gets the five-character error
      code following the ANSI SQL standard for the database.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbErrorCollection">
      <summary>
        <para> Collects all errors generated by the OLE DB .NET Data Provider. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the elements of the 
   <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> into an <see cref="T:System.Array" /> , starting at the given index within the 
   <see cref="T:System.Array" /> .</para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the elements. </param>
      <param name=" index">The starting index of the <paramref name="array" /> . </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Count">
      <summary>
        <para>Gets the number of errors in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Item(System.Int32)">
      <summary>
        <para>Gets the error at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the error to retrieve.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbException">
      <summary>
        <para>The exception that is thrown when the underlying provider returns a warning or
      error for an OLE DB data source. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.ErrorCode">
      <summary>
        <para>Gets the HRESULT of the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Errors">
      <summary>
        <para>Gets a collection of one or more <see cref="T:System.Data.OleDb.OleDbError" /> 
objects that give detailed information about exceptions generated by
the OLE DB .NET Data Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Message">
      <summary>
        <para> Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Source">
      <summary>
        <para>Gets the name of the OLE DB provider that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> 
event. This class cannot be inherited.
</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbInfoMessageEventArgs.ToString">
      <summary>
        <para>Retrieves a string representation of the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.ErrorCode">
      <summary>
        <para>Gets
       the HRESULT following the ANSI SQL standard for the database.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Errors">
      <summary>
        <para>Gets the collection of warnings sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Message">
      <summary>
        <para>Gets the full text of the error sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Source">
      <summary>
        <para>Gets the name of the object that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event of an <see cref="T:System.Data.OleDb.OleDbConnection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.Data.OleDb.OleDbInfoMessageEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbLiteral">
      <summary>
        <para>Returns information about literals used in text commands,
      data values, and database objects.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Invalid">
      <summary>
        <para>An invalid value. <see cref="F:System.Data.OleDb.OleDbLiteral.Invalid" /> maps to DBLITERAL_INVALID.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Binary_Literal">
      <summary>
        <para>A binary literal in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Binary_Literal" /> maps to DBLITERAL_BINARY_LITERAL.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Name">
      <summary>
        <para>A catalog name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Catalog_Name" /> maps to DBLITERAL_CATALOG_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator">
      <summary>
        <para>The character that separates the catalog name from the rest of the identifier in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator" />
 maps to DBLITERAL_CATALOG_SEPARATOR.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Char_Literal">
      <summary>
        <para>A character literal in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Char_Literal" />
maps to DBLITERAL_CHAR_LITERAL.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Alias">
      <summary>
        <para>A column alias in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Column_Alias" />
maps to DBLITERAL_COLUMN_ALIAS.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Name">
      <summary>
        <para>A column name used in a text command or in a data-definition interface. <see cref="F:System.Data.OleDb.OleDbLiteral.Column_Name" />
maps to DBLITERAL_COLUMN_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Correlation_Name">
      <summary>
        <para>A correlation name (table alias) in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Correlation_Name" />
maps to DBLITERAL_CORRELATION_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cursor_Name">
      <summary>
        <para>A cursor name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Cursor_Name" />
maps to DBLITERAL_CURSOR_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_PERCENT literal. For example, if a percent sign (%) is used to 
      match zero or more characters and this is a backslash (\), the characters "abc\%%" match all character values that start with "abc%". Some SQL dialects support a
      clause (the ESCAPE clause) that can be used to override this value. <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix" />
      maps to DBLITERAL_ESCAPE_PERCENT_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal. For example, if an underscore (_) is 
      used to match exactly one character and this is a backslash (\), the characters "abc\_ _" match all character values that are five characters long and start
      with "abc_". Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix" />
   maps to DBLITERAL_ESCAPE_UNDERSCORE_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Index_Name">
      <summary>
        <para>An index name used in a text command or in a data-definition interface.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Index_Name" />
   maps to DBLITERAL_INDEX_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Percent">
      <summary>
        <para>The character used in a LIKE clause to match zero or more characters. For example, if this is a percent sign (%), the characters "abc%" match all character 
      values that start with "abc". <see cref="F:System.Data.OleDb.OleDbLiteral.Like_Percent" />
      maps to DBLITERAL_LIKE_PERCENT.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Underscore">
      <summary>
        <para>The character used in a LIKE clause to match exactly one character. For example, if this is an underscore (_), the characters "abc_" match all character 
      values that are four characters long and start with "abc". <see cref="F:System.Data.OleDb.OleDbLiteral.Like_Underscore" />
      maps to DBLITERAL_LIKE_UNDERSCORE.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Procedure_Name">
      <summary>
        <para>A procedure name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Procedure_Name" />
maps to DBLITERAL_PROCEDURE_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix">
      <summary>
        <para>The character used in a text command as the opening quote for quoting identifiers that contain special characters. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix" />
   maps to DBLITERAL_QUOTE_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Name">
      <summary>
        <para>A schema name in a text command. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Schema_Name" />
   maps to DBLITERAL_SCHEMA_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Table_Name">
      <summary>
        <para>A table name used in a text command or in a data-definition interface. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Table_Name" />
   maps to DBLITERAL_TABLE_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Text_Command">
      <summary>
        <para>A text command, such as an SQL statement. <see cref="F:System.Data.OleDb.OleDbLiteral.Text_Command" />
maps to DBLITERAL_TEXT_COMMAND.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.User_Name">
      <summary>
        <para>A user name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.User_Name" />
maps to DBLITERAL_USER_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.View_Name">
      <summary>
        <para>A view name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.View_Name" />
maps to DBLITERAL_VIEW_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cube_Name">
      <summary>
        <para> The name of a cube in a schema (or the catalog if the 
      provider does not support schemas).</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Dimension_Name">
      <summary>
        <para>The name of the dimension. If a dimension is part of 
      more than one cube, there is one row for each cube/dimension combination.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Hierarchy_Name">
      <summary>
        <para>The name of the hierarchy. If the dimension does not 
      contain a hierarchy or has only one hierarchy, the current column contains a null value.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Level_Name">
      <summary>
        <para>Name of the cube to which the current level belongs.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Member_Name">
      <summary>
        <para>The name of the member.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Property_Name">
      <summary>
        <para>The name of the property.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Separator">
      <summary>
        <para>The character that separates the schema name from the rest of the identifier in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Schema_Separator" />
maps to DBLITERAL_SCHEMA_SEPARATOR.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix">
      <summary>
        <para>The character used in a text command as the closing quote for quoting identifiers that contain special characters. 1.x providers that use the same 
character as the prefix and suffix may not return this literal value and can set the lt member of the DBLITERAL structure to DBLITERAL_INVALID if requested. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix" />
   maps to DBLITERAL_QUOTE_SUFFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix">
      <summary>
        <para>The escape character, if any, used to suffix the character returned for the DBLITERAL_LIKE_PERCENT literal. For example, if a percent sign (%) is used 
      to match zero or more characters and percent signs are escaped by enclosing in open and close square brackets, DBLITERAL_ESCAPE_PERCENT_PREFIX
      is "[", DBLITERAL_ESCAPE_PERCENT_SUFFIX is "]", and the characters "abc[%]%" match all character values that start with "abc%". Providers that do not use
      a suffix character to escape the DBLITERAL_ESCAPE_PERCENT character do not return this literal value and can set the lt member of the DBLITERAL structure
      to DBLITERAL_INVALID if requested. <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix" />
      maps to DBLITERAL_ESCAPE_PERCENT_SUFFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal. For example, if an underscore (_) is 
      used to match exactly one character and this is a backslash (\), the characters "abc\_ _" match all character values that are five characters long and start
      with "abc_". Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix" />
   maps to DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameter">
      <summary>
        <para>Represents a parameter to an <see cref="T:System.Data.OleDb.OleDbCommand" /> and optionally, its mapping to
   a <see cref="T:System.Data.DataSet" /> column. This class
   cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> 
class.
</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter name and the value of the
   new <see cref="T:System.Data.OleDb.OleDbParameter" />
   .
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="value">The value of the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter name and data
   type.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the
   parameter name, data type,
   and width.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter
   name, data type, width, and source column
   name.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="srcColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class
   with the parameter name, data type, width, source column name, parameter direction, numeric precision,
   and other
   properties.
   </para>
      </summary>
      <param name="parameterName"> The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">
        <see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> is resolved. </param>
      <param name="srcColumn">The name of the source column. </param>
      <param name="srcVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.OleDb.OleDbParameter" />. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.ToString">
      <summary>
        <para>Gets a string containing the <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Direction">
      <summary>
        <para>Gets or sets a value indicating whether the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.OleDbType">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbType" /> of the parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.OleDb.OleDbParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Size">
      <summary>
        <para>Gets or sets the maximum
      size, in bytes, of the data within the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameterCollection">
      <summary>
        <para>Collects all parameters relevant to an <see cref="T:System.Data.OleDb.OleDbCommand" /> as well as their
   respective mappings to <see cref="T:System.Data.DataSet" />
   columns.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Object)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> object to the <see cref="T:System.Data.OleDb.OleDbCommand" /> .
   </para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to add to the collection. </param>
      <returns>
        <para>The index of the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Data.OleDb.OleDbParameter)">
      <summary>
        <para> Adds the specified <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" />.
   </para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter name and value.</para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="T:System.Object" /> value of the <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter name and data
   type.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the the parameter name, data type, and column width.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter
   name, data type, column width, and source column name.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether an <see cref="T:System.Data.OleDb.OleDbParameter" /> with the specified parameter name exists in the collection.</para>
      </summary>
      <param name="value">The name of the parameter.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether an <see cref="T:System.Data.OleDb.OleDbParameter" /> object 
   exists in the collection.</para>
      </summary>
      <param name="value">The value of the <see cref="T:System.Data.OleDb.OleDbParameter" /> object to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   collection contains the <see cref="T:System.Data.OleDb.OleDbParameter" /> ; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Clear">
      <summary>
        <para> Removes all items from the collection.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies <see cref="T:System.Data.OleDb.OleDbParameter" /> objects from the <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the <see cref="T:System.Data.OleDb.OleDbParameter" /> objects. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection with the specified parameter name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to find.</param>
      <returns>
        <para>The location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> object
   in the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to locate. </param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts an <see cref="T:System.Data.OleDb.OleDbParameter" />
in the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection.</param>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.OleDb.OleDbParameter" />
at
the specified index from the collection.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to remove. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.OleDb.OleDbParameter" />
with
the specified name from the collection.</para>
      </summary>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Remove(System.Object)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.OleDb.OleDbParameter" />
from the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to remove from the collection. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.OleDb.OleDbParameter" />
objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.Int32)">
      <summary>
        <para>Gets or
      sets the <see cref="T:System.Data.OleDb.OleDbParameter" />
      at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to retrieve.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.String)">
      <summary>
        <para>Gets or
      sets the <see cref="T:System.Data.OleDb.OleDbParameter" />
      with the specified name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>
        <para>Provides 
      the capability for the OLE DB .NET Data Provider to ensure
      that a user has a security level adequate to access an OLE DB data source.
   
			</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name=" allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>
        <para>Returns the <see cref="T:System.Data.OleDb.OleDbPermission" /> as an <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <returns>
        <para>A copy of the current permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Returns <see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbPermission" /> is a subset of the specified
   target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> from which to determine whether the current <see cref="T:System.Data.OleDb.OleDbPermission" /> is a subset.</param>
      <returns>
        <para>
          <see langword="True " />if the current permission object is a subset of the 
   specified permission object; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Returns an <see cref="T:System.Security.IPermission" /> that is the intersection of
   the current <see cref="T:System.Data.OleDb.OleDbPermission" /> and the
   specified target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> to intersect with the current <see cref="T:System.Data.OleDb.OleDbPermission" /> .</param>
      <returns>
        <para>A new permission object that represents the intersection of the current 
      permission object and the specified permission object. This new permission
      object is a null reference (<see langword="Nothing" /> in Visual Basic) if the
      intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Union(System.Security.IPermission)">
      <summary>
        <para>Returns an <see cref="T:System.Security.IPermission" /> that is the union of the
   current <see cref="T:System.Data.OleDb.OleDbPermission" /> and the
   specified target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> to combine with the current <see cref="T:System.Data.OleDb.OleDbPermission" /> .</param>
      <returns>
        <para>A new permission object that represents the union of the current permission 
      object and the specified permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Populates an <see cref="T:System.Data.OleDb.OleDbPermission" /> from the specified <see cref="T:System.Security.SecurityElement" />.</para>
      </summary>
      <param name="securityElement">The <see cref="T:System.Security.SecurityElement" /> used to populate the <see cref="T:System.Data.OleDb.OleDbPermission" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.ToXml">
      <summary>
        <para>Returns an XML representation of the <see cref="T:System.Data.OleDb.OleDbPermission" />
object as a <see cref="T:System.Security.SecurityElement" />.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state information.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>
        <para>Gets or sets a comma-delimited list of providers allowed by the security policy.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>
        <para> Returns an <see cref="T:System.Data.OleDb.OleDbPermission" /> object that is configured 
   according to the attribute properties.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbPermission" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>
        <para>Gets or sets a comma-delimited string containing a list
      of supported providers.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name=" command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name=" statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed.</param>
      <param name=" tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatedEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.OleDb.OleDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event of an <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> .</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> .</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatingEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbCommand" /> to execute when performing
    the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
    .</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event of an <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbSchemaGuid">
      <summary>
        <para>Returns the type of schema table specified by the <see cref="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
method.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables_Info">
      <summary>
        <para>Returns the tables (including views) that are accessible to a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Trustee">
      <summary>
        <para>Identifies the trustees defined in the data source.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Assertions">
      <summary>
        <para>Returns the assertions defined in the catalog that are
      owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Catalogs">
      <summary>
        <para>Returns the physical attributes associated with catalogs accessible from the data source. Returns the assertions defined in the catalog that are
      owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Character_Sets">
      <summary>
        <para>Returns the character sets defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Collations">
      <summary>
        <para>Returns the character collations defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Columns">
      <summary>
        <para>Returns the columns of tables (including views) defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints">
      <summary>
        <para>Returns the check constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Column_Usage">
      <summary>
        <para>Returns the columns used by referential constraints, unique constraints, check constraints, and assertions, defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Table_Usage">
      <summary>
        <para>Returns the tables that are used by referential constraints, unique constraints, check constraints, and assertions defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Key_Column_Usage">
      <summary>
        <para>Returns the columns defined in the catalog that are constrained as keys by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Referential_Constraints">
      <summary>
        <para>Returns 
      the referential constraints defined in the catalog that are owned by a given
      user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Constraints">
      <summary>
        <para>Returns the table constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Domain_Usage">
      <summary>
        <para>Returns the columns defined in the catalog that are dependent on a domain defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Indexes">
      <summary>
        <para>Returns the indexes defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Privileges">
      <summary>
        <para>Returns the privileges on columns of tables defined in the catalog that are available to, or granted by, a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Privileges">
      <summary>
        <para>Returns the privileges on tables defined in the catalog
      that are available to, or granted by, a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Usage_Privileges">
      <summary>
        <para>Returns the USAGE privileges on objects defined in the catalog that are available to, or granted by, a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedures">
      <summary>
        <para>Returns the procedures defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Schemata">
      <summary>
        <para>Returns the schema objects that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Sql_Languages">
      <summary>
        <para>Returns the conformance levels, options, and dialects supported by the SQL-implementation processing data defined in the catalog. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Statistics">
      <summary>
        <para>Returns the statistics defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables">
      <summary>
        <para>Returns the tables (including views) defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Translations">
      <summary>
        <para>Returns the character translations defined in the catalog that are accessible to a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Provider_Types">
      <summary>
        <para>Returns the base data types supported by the .NET data provider. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Views">
      <summary>
        <para>Returns the views defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Column_Usage">
      <summary>
        <para>Returns the columns on which viewed tables, defined in the catalog and owned by a given user, are dependent. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Table_Usage">
      <summary>
        <para>Returns the tables on which viewed tables, defined in the catalog and owned by a given user, are dependent. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Parameters">
      <summary>
        <para>Returns information about the parameters and return codes of procedures. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Foreign_Keys">
      <summary>
        <para>Returns the foreign key columns defined in the catalog by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Primary_Keys">
      <summary>
        <para>Returns the primary key columns defined in the catalog by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Columns">
      <summary>
        <para>Returns information about the columns of rowsets returned by procedures. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Statistics">
      <summary>
        <para>Describes the available set of statistics on tables in the provider.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints_By_Table">
      <summary>
        <para>Returns the check constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals">
      <summary>
        <para>Returns a list of provider-specific literals used in text commands.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbTransaction">
      <summary>
        <para> Represents an SQL transaction to be made at a data source. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)">
      <summary>
        <para>Initiates a nested database
      transaction and specifies the
      isolation level to use for the new transaction.
      </para>
      </summary>
      <param name="isolevel">The isolation level to use for the transaction.</param>
      <returns>
        <para>A nested database transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin">
      <summary>
        <para>Initiates a nested database transaction.
      </para>
      </summary>
      <returns>
        <para>A nested database transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Finalize">
      <summary>
        <para>Frees resources before the <see cref="T:System.Data.OleDb.OleDbTransaction" /> is reclaimed by the Garbage Collector.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.Connection">
      <summary>
        <para>Gets the <see cref="T:System.Data.OleDb.OleDbConnection" /> object associated with the transaction, or
<see langword="null" /> if the transaction is no longer valid. </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbType">
      <summary>
        <para>Specifies the data type of a field, a property, or an <see cref="T:System.Data.OleDb.OleDbParameter" />

.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BigInt">
      <summary>
        <para>
       A 64-bit signed integer (DBTYPE_I8). This maps to <see cref="T:System.Int64" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Binary">
      <summary>
        <para>
       A stream of binary data (DBTYPE_BYTES). This maps to
       an <see cref="T:System.Array" />
       of type <see cref="T:System.Byte" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Boolean">
      <summary>
        <para>       A Boolean value (DBTYPE_BOOL). This maps to <see cref="T:System.Boolean" />
.
</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BSTR">
      <summary>
        <para>
       A null-terminated character string of Unicode characters
       (DBTYPE_BSTR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Char">
      <summary>
        <para>
       A character string (DBTYPE_STR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Currency">
      <summary>
        <para> A currency value ranging from -2<superscript term="63" /> (or -922,337,203,685,477.5808)
   to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807) with an accuracy to
   a ten-thousandth of a currency unit (DBTYPE_CY). This maps to <see cref="T:System.Decimal" />
   .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Date">
      <summary>
        <para>
       Date data, stored as a double (DBTYPE_DATE). The
       whole portion is the number of days since December 30, 1899, while the
       fractional portion is a fraction of a day. This maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBDate">
      <summary>
        <para>
       Date data in the format yyyymmdd (DBTYPE_DBDATE). This
       maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTime">
      <summary>
        <para>
       Time data in the format hhmmss (DBTYPE_DBTIME). This maps
       to <see cref="T:System.TimeSpan" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTimeStamp">
      <summary>
        <para>
       Data and time data in the format yyyymmddhhmmss
       (DBTYPE_DBTIMESTAMP). This maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Decimal">
      <summary>
        <para>
       A fixed precision and scale numeric value between -10<superscript term="38" /> -1 and
       10<superscript term="38" /> -1
       (DBTYPE_DECIMAL). This maps to <see cref="T:System.Decimal" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Double">
      <summary>
        <para>
       A floating point number within the range of -1.79E +308
       through 1.79E +308 (DBTYPE_R8). This maps to <see cref="T:System.Double" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Empty">
      <summary>
        <para>
       No value (DBTYPE_EMPTY). This maps to <see cref="T:System.Empty" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Error">
      <summary>
        <para>
       A 32-bit error code (DBTYPE_ERROR). This maps to <see cref="T:System.Exception" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Filetime">
      <summary>
        <para>
       A 64-bit unsigned integer representing the number of
       100-nanosecond intervals since January 1, 1601 (DBTYPE_FILETIME). This maps to
    <see cref="T:System.DateTime" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Guid">
      <summary>
        <para>
       A globally unique identifier (or GUID) (DBTYPE_GUID).
       This maps to <see cref="T:System.Guid" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IDispatch">
      <summary>
        <para>
       A pointer to an IDispatch interface
       (DBTYPE_IDISPATCH). This maps to <see cref="T:System.Object" />
       .
    </para>
        <note type="note">
       This data type is not currently supported by
       ADO.NET. Usage may cause unpredictable
       results.
    </note>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Integer">
      <summary>
        <para>
       A 32-bit signed integer (DBTYPE_I4). This maps to <see cref="T:System.Int32" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IUnknown">
      <summary>
        <para>
       A pointer to an IUnknown interface (DBTYPE_UNKNOWN). This
       maps to <see cref="T:System.Object" />
       .
    </para>
        <note type="note">
       This data type is not currently
       supported by ADO.NET. Usage may cause unpredictable results.
    </note>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarBinary">
      <summary>
        <para>
       A long binary value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarChar">
      <summary>
        <para>
       A long string value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to <see cref="T:System.String" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarWChar">
      <summary>
        <para>
       A long null-terminated Unicode string value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Numeric">
      <summary>
        <para>
       An exact numeric value with a fixed precision and scale
       (DBTYPE_NUMERIC). This maps to <see cref="T:System.Decimal" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.PropVariant">
      <summary>
        <para>
       An automation PROPVARIANT (DBTYPE_PROP_VARIANT). This
       maps to <see cref="T:System.Object" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Single">
      <summary>
        <para>
       A floating point number within the range of -3.40E +38
       through 3.40E +38 (DBTYPE_R4). This maps to <see cref="T:System.Single" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.SmallInt">
      <summary>
        <para>
       A 16-bit signed integer (DBTYPE_I2). This maps to
    <see cref="T:System.Int16" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.TinyInt">
      <summary>
        <para>       A 8-bit signed integer (DBTYPE_I1). This maps to <see cref="T:System.SByte" />
.
</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedBigInt">
      <summary>
        <para>
       A 64-bit unsigned integer (DBTYPE_UI8). This maps to
    <see cref="T:System.UInt64" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedInt">
      <summary>
        <para>
       A 32-bit unsigned integer (DBTYPE_UI4). This maps to
    <see cref="T:System.UInt32" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedSmallInt">
      <summary>
        <para>
       A 16-bit unsigned integer (DBTYPE_UI2). This maps to
    <see cref="T:System.UInt16" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedTinyInt">
      <summary>
        <para> A 8-bit unsigned integer (DBTYPE_UI1). This maps to
   <see cref="T:System.Byte" />
   .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarBinary">
      <summary>
        <para>
       A variable-length stream of binary data (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
       an <see cref="T:System.Array" />
       of type <see cref="T:System.Byte" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarChar">
      <summary>
        <para>
       A variable-length stream of non-Unicode characters (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Variant">
      <summary>
        <para>
       A special data type that can contain numeric, string,
       binary, or date data, as well as the special values Empty and Null
       (DBTYPE_VARIANT). This type is assumed if no other is specified. This maps to
    <see cref="T:System.Object" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarNumeric">
      <summary>
        <para>
       A variable-length numeric value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to <see cref="T:System.Decimal" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarWChar">
      <summary>
        <para>
       A variable-length, null-terminated stream of Unicode characters (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.WChar">
      <summary>
        <para>
       A null-terminated stream of Unicode characters
       (DBTYPE_WSTR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.ConStringUtil.ParseConnectionString(System.String)">
      <summary>  This function parses the connection string and sets the appropriate hashtable values.
 </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>
        <para>Provides
      the capability for the SQL Server .NET Data Provider to ensure
      that a user has a security level adequate to access a data source.
   
			</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name=" allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>
        <para> Returns a <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object that is configured 
   according to the attribute properties.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</para>
      </returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommand">
      <summary>
        <para> Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query.
   </para>
      </summary>
      <param name="cmdText">The text of the query. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection" />, 
   and the <see cref="T:System.Data.SqlClient.Transaction" />.</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</param>
      <param name="transaction"> The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
      <summary>
        <para>Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Prepare">
      <summary>
        <para> Creates a prepared version of the command on an instance of SQL
      Server.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Cancel">
      <summary>
        <para>Attempts to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>
        <para>Creates
      a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object. </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the
      first row in the resultset returned by the query. Extra columns or rows are
      ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>
        <para> Executes a Transact-SQL statement against the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />
and returns the number of rows affected.</para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Xml.XmlReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" />values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection" /> used by this instance of the
<see cref="T:System.Data.SqlClient.SqlCommand" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction
      in which the <see cref="T:System.Data.SqlClient.SqlCommand" />
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandText">
      <summary>
        <para>Gets or sets the Transact-SQL statement or stored procedure to execute at the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandType">
      <summary>
        <para>Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>
        <para>Gets or sets the wait time before terminating
      the attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>
        <para> Gets or sets a value indicating whether the command object should be visible in
      a Windows Forms Designer control.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>
        <para> Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used
   by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommandBuilder">
      <summary>
        <para>Provides a means of automatically generating
      single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated SQL Server database. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class with the associated <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
object.</para>
      </summary>
      <param name="adapter">The name of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
      <summary>
        <para>Populates the specified <see cref="T:System.Data.SqlClient.SqlCommand" />
object's <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> collection with
parameter information for a stored procedure specified in the <see cref="T:System.Data.SqlClient.SqlCommand" />
.</para>
      </summary>
      <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> of this command.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
      <summary>
        <para> Gets
      the automatically generated Transact-SQL statement required to perform inserts on the database when an application
      calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
      <summary>
        <para> Gets the automatically generated
      Transact-SQL statement required to perform updates on the database when an application calls
   <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on
      the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
      <summary>
        <para>Gets the automatically generated Transact-SQL statement
      required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.RefreshSchema">
      <summary>
        <para>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
      <summary>
        <para> Gets or sets a <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> object for which Transact-SQL statements are
   automatically generated.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
      <summary>
        <para>Gets or sets the beginning character or characters to use when specifying SQL Server object names,
      (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
      <summary>
        <para>Gets or sets the ending character or characters to use when specifying SQL Server object
      names, (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>
        <para> Represents an open connection to a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class when given a string containing the connection string.</para>
      </summary>
      <param name="connectionString">The connection used to open the SQL Server database.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>
        <para>Opens a database connection with the property
      settings specified by the <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>
        <para>Closes the connection to the database. This is the
      preferred method of closing any open connection.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>
        <para> Begins a database transaction.</para>
      </summary>
      <returns>
        <para> An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the specified isolation level.</para>
      </summary>
      <param name="iso">The isolation level under which the transaction should run.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>
        <para>Begins a database transaction with the specified transaction name.</para>
      </summary>
      <param name="transactionName">The name of the transaction.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>
        <para>Begins a database transaction with the specified isolation level and
      transaction name.</para>
      </summary>
      <param name="iso">The isolation level under which the transaction should run.</param>
      <param name="transactionName">The name of the transaction.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open
   <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <param name="database">The name of the database to use in place of the current database.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>
        <para>Creates and returns a <see cref="T:System.Data.SqlClient.SqlCommand" /> object associated with
   the <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlCommand" /> object. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlConnection" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>
        <para> Gets or sets the string used to open a SQL Server database.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>
        <para> Gets the time to wait while trying to establish a connection before
      terminating the attempt and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>
        <para> Gets the name of the current database or the database to be used once
      a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>
        <para> Gets the name of the instance of SQL Server to which to connect.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>
        <para>Gets the size
      (in bytes) of network packets used to communicate with an instance of SQL
      Server .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>
        <para>Gets a string
      that identifies the database client.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>
        <para> Occurs when SQL Server returns a warning or informational message.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>
        <para> Gets a string containing the version of the instance of SQL Server to which the client is connected.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>
        <para> Gets the current state of the
      connection.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.StateChange">
      <summary>
        <para>Occurs when the state of the connection changes.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataAdapter">
      <summary>
        <para>Represents a set of data commands and a database
      connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server database.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
      <summary>
        <para>Initializes a new
      instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with the specified
   <see cref="T:System.Data.SqlClient.SqlCommand" /> 
   as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property.</para>
      </summary>
      <param name="selectCommand">A <see cref="T:System.Data.SqlClient.SqlCommand" /> that is a Transact-SQL SELECT statement or stored procedure. This <see cref="T:System.Data.SqlClient.SqlCommand" /> is set as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      and a connection
      string.</para>
      </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used as the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> of the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> .</param>
      <param name="selectConnectionString">The connection string.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>
        <para>Inintializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      and a <see cref="T:System.Data.SqlClient.SqlConnection" />
      object.</para>
      </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used as the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> of the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> .</param>
      <param name="selectConnection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement
      or stored procedure used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or sets a Transact-SQL
      statement or stored procedure used to update records in the data source.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed
    against the data source. The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is
    executed against the data source. The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>
        <para> Provides a means of reading
      a forward-only stream of rows from a SQL Server database. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>
        <para>Gets all attribute columns in the collection for the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>
        <para>Gets the name of the specified column.</para>
      </summary>
      <param name="i">The zero-based column ordinal.</param>
      <returns>
        <para>The name of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>
        <para>Gets the value of the specified column in its native format.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>This method returns <see cref="T:System.DBNull" /> for null database columns.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the name of the source data type.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the back-end data type.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" />
that is the data type of the object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The <see cref="T:System.Type" />
that is the data type of the object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>
        <para>Gets the column ordinal, given the name of the column.</para>
      </summary>
      <param name="name">The name of the column.</param>
      <returns>
        <para>The zero-based column ordinal.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a byte.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column as a byte.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column
      offset into
      the buffer an array starting at the given buffer offset.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" length">The maximum length to copy into the buffer.</param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" dataIndex">The index within the field from which to begin the read operation. </param>
      <returns>
        <para>The actual number of bytes read.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single character.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Reads a stream of characters from the specified column offset
      into the
      buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to copy data. </param>
      <param name=" length">The maximum number of characters to read. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" dataIndex">The index within the row from which to begin the read operation. </param>
      <returns>
        <para>The actual number of characters read.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>
        <para> Gets the value of
      the specified column as a globally-unique identifier (GUID).
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para> The value of the specified column.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 16-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 32-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 64-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single-precision floating point number.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a double-precision floating point number.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a string.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.Decimal" />
      object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.DateTime" />
      object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetData(System.Int32)">
      <summary>
        <para> Not currently supported.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>
        <para> Gets a value indicating whether the column contains non-existant or missing values.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified
   column value is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBinary" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlByte" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt16" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt32" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlGuid" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>
        <para>Gets an <see cref="T:System.Object" /> that is a representation of the underlying <see cref="T:System.Data.SqlDbType" /><see langword="Variant" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>An <see cref="T:System.Object" /> that is a
   representation of the underlying <see cref="T:System.Data.SqlDbType" /><see langword="Variant" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>
        <para> Gets all the attribute columns in the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute columns into.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>
        <para>Advances the data reader to the next result, when reading the results of
      batch Transact-SQL statements.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more result sets; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>
        <para> Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>
        <para> Gets the number of columns in the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>
        <para> 
      Gets the value of the specified column in its native format given
      the column ordinal.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>
        <para> Gets the value of the specified column in its native format given
      the column name.</para>
      </summary>
      <param name="name">The column name.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>
        <para> Gets a value indicating whether the data reader
      is closed.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>
        <para> Collects information relevant to a warning or error returned by SQL Server. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>
        <para>Gets the complete text of the error message.</para>
      </summary>
      <returns>
        <para>The complete text of the error.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>
        <para> Gets a number
      that identifies the type of error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>
        <para>Gets a numeric error code from SQL Server that represents 
      an error, warning or "no data found" message. For more information on how to
      decode these values, see SQL Server Books Online.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>
        <para> Gets the
      severity level of the error returned from SQL Server.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>
        <para>Gets the name of the instance
      of SQL Server that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>
        <para>Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>
        <para>Gets the name of
      the
      stored
      procedure or remote procedure call (RPC) that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>
        <para> Bets the line number
      within
      the Transact-SQL command batch or stored procedure that contains the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>
        <para> Collects all errors generated by the SQL .NET Data 
      Provider. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> collection into an <see cref="T:System.Array" />, starting at the given index within the <see cref="T:System.Array" />
.</para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> to copy elements into. </param>
      <param name=" index">The index from which to start copying into the <paramref name="array" /> parameter. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>
        <para>Gets the number of errors in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        <para>Gets an <see cref="T:System.Object" /> that can be used to synchronize access to
   the <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        <para> Gets a value indicating whether the collection is
      sychonized with the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>
        <para>Gets the error at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the error to retrieve.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>
        <para> The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>
        <para> Gets a collection of one or more <see cref="T:System.Data.SqlClient.SqlError" />
objects that give detailed information about exceptions generated by the SQL
Server .NET Data Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>
        <para>Gets the severity level of the error returned from the SQL Server .NET Data
      Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>
        <para>Gets the line number within
      the Transact-SQL command batch or stored procedure that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Message">
      <summary>
        <para>Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>
        <para>Gets a number that identifies the type of error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>
        <para>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>
        <para>Gets the name of the computer running an instance of SQL Server that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>
        <para>Gets a numeric error code from SQL Server that 
      represents an error, warning or "no data found" message. For more information on
      how to decode these values, see SQL Server Books
      Online.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event. This class cannot be
   inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>
        <para>Retrieves a string representation of the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>
        <para>Gets the collection of warnings sent from the server.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>
        <para>Gets the full text of the error sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>
        <para>Gets the name of the object that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event of a <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>
        <para>Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand" />, and optionally, its mapping
   to <see cref="T:System.Data.DataSet" /> columns. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name and a value of the
   new <see cref="T:System.Data.SqlClient.SqlParameter" />
   . </para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name and
   the data
   type.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map.</param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the <see cref="T:System.Data.SqlDbType" /> , and
   the size.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map.</param>
      <param name=" dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The width of the parameter.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the <see cref="T:System.Data.SqlDbType" />
, the size, the source column name, and a <see cref="T:System.Data.DataRowVersion" />
to
use.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name=" dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the type of the
   parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the
   parameter, the scale of the parameter, the source column,
   a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the
   parameter.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">
        <see langword="true" /> if the value of the field can be null, otherwise <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>
        <para>Gets a string containing the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> .</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.SqlDbType" />
of the parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>
        <para> Gets or sets a value indicating whether
      the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>
        <para>Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>
        <para>Gets or sets the maximum
      size, in bytes, of the data within the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column that is mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>
        <para>Collects all parameters relevant to a <see cref="T:System.Data.SqlClient.SqlCommand" /> as well as their
   respective mappings to <see cref="T:System.Data.DataSet" /> columns. This class cannot be
   inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter" /> object to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
      <returns>
        <para>The index in the collection of the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter" /> object to the <see cref="T:System.Data.SqlClient.SqlCommand" /> .</para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.SqlClient.SqlParameter" /> to be added.</param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the 
   specified parameter name and
   value.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="value">The <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> of the <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the
   parameter name and the data type.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the the
   parameter name, the data type, and the parameter size (column width).</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The size of the parameter (width of the column). </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the
   parameter name, the data type, the parameter size (column width), and the source column name.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The size of the parameter (width of the column). </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>
        <para> Indicates whether a <see cref="T:System.Data.SqlClient.SqlParameter" /> 
with the specified parameter name exists in the collection.
</para>
      </summary>
      <param name="value">The name of the parameter to retrieve. </param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>
        <para>Indicates whether a <see cref="T:System.Data.SqlClient.SqlParameter" /> exists in the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
   collection contains the <see cref="T:System.Data.SqlClient.SqlParameter" /> object; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>
        <para> Removes all items from the collection.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies <see cref="T:System.Data.SqlClient.SqlParameter" /> objects from
   the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy the <see cref="T:System.Data.SqlClient.SqlParameter" /> objects in the collection. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection with a specific parameter
name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.SqlClient.SqlParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of a <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> object to locate.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.SqlClient.SqlParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index within the collection to insert the <paramref name="value" />parameter. </param>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection using a specific index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection using the parameter name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object to remove from the collection.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.SqlClient.SqlParameter" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlParameter" />
at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to retrieve.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlParameter" />
with the specified name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event. This class cannot 
   be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatedEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand" />
 executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
event of a
<see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event. This class cannot 
   be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatingEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand" />
 to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
event of a
<see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>
        <para> Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Dispose">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlTransaction" /> and optionally releases the managed
   resources.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>
        <para> Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.
      </para>
      </summary>
      <param name="transactionName">The name of the transaction to rollback, or the savepoint to which to rollback. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>
        <para> Creates a savepoint in the transaction that can be used to roll back a portion of
      the transaction, and specifies the savepoint name.
      </para>
      </summary>
      <param name="savePointName">The name of the savepoint. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction,
   or <see langword="null" /> if the transaction is no longer valid. </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.#ctor">
      <summary> TdsParser constructor
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.Connect(System.String,System.String,System.Data.SqlClient.SqlInternalConnection,System.Int32)">
      <summary> TdsParser connection procedure to establish netlib connection.
            </summary>
      <param name="host">
                    Hostname of server.
            </param>
      <param name="protocol">
      </param>
      <param name="connHandler">
      </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadByte">
      <summary> Takes no arguments and returns a byte from the buffer.  If the buffer is empty, it is filled
                   before the byte is returned.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadByteArray(System.Byte[],System.Int32,System.Int32)">
      <summary> Takes a byte array, an offset, and a len and fills the array from the offset to len number of
                   bytes from the in buffer.
            </summary>
      <param name="buff">
                   Byte array to be filled with bytes from the buffer.
            </param>
      <param name="offset">
                   Location in the array where writing will begin.
            </param>
      <param name="len">
                   Number of bytes to be written to the byte array that is passed in.
            </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadShort">
      <summary> Returns a short from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadUnsignedShort">
      <summary> Returns an unsigned short from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadInt">
      <summary> Returns an int from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadFloat">
      <summary> Returns a float from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadLong">
      <summary> Returns a long from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadDouble">
      <summary> Returns a double from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.SkipBytes(System.Int64)">
      <summary> Reads bytes from the buffer but doesn't return them, in effect simply deleting them.
            </summary>
      <param name="num">
                   Number of bytes to be skipped.
            </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.InitSSPISession">
      <summary> Private helper function that initializes the SSPI session and package.
            </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Represents a variable-length
      stream of binary data to be stored in or retrieved from a
      database.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>
        <para>All of the <see cref="N:System.Data.SqlTypes" /> objects and structures implement the 
   INullable interface, reflecting the fact that, unlike the corresponding system
   types, <see langword="SqlTypes" />
   can legally contain the value null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>
        <para>Indicates whether a structure is null.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>
        <para> Initializes a new instance of 
      the <see langword="SqlBinary" /> structure, setting the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property to the contents of the supplied byte array.
      </para>
      </summary>
      <param name="value">The byte array to be stored or retrieved. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Converts an array of bytes to a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.
   </para>
      </summary>
      <param name="x">The array of bytes to be converted. </param>
      <returns>
        <para> A <see langword="SqlBinary" /> 
structure that represents the converted array of bytes.
</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>
        <para> Gets the contents of the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> 
parameter as an array of bytes.
</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" />. </param>
      <returns>
        <para> An array of bytes.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>
        <para> Converts this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to a string.
   </para>
      </summary>
      <returns>
        <para> A string containing the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> of the 
<see langword="SqlBinary" /> . If the <see langword="Value" /> is null the
   string will contain
   "null".
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Concatenates the two <see cref="T:System.Data.SqlTypes.SqlBinary" /> parameters to create a 
   new <see langword="SqlBinary" /> structure.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Converts a <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</para>
      </summary>
      <param name="x">The <see langword="SqlGuid" /> structure to be converted. </param>
      <returns>
        <para> A <see langword="SqlBinary" /> structure.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they are
   equal.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" />
that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
equal. If either instance of <see langword="SqlBinary" />
is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they
   are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first is less
   than the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first
instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first
   is greater than the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first is less
   than or equal to the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is less than
or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structues to determine if the first
   is greater than or equal to the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is greaater than
or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Concatenates two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structures to create a new <see langword="SqlBinary" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they are 
   equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structures to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structues to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlBinary" />
to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared to this <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A signed number indicating the relative values of
      this <see langword="SqlBinary" />
      structure and the object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>The value of this <see langword="SqlBinary" />object is less than the
         object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This <see langword="SqlBinary" /> object is the same as object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This <see langword="SqlBinary" /> object is greater than object.</para>
              <para>-or-</para>
              <para>The object is a null
      reference.</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to
      the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is
   an instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> and the two are
   equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>
        <para>Returns the hash code for this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>
        <para> Represents a null value that can be assigned to
      the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />
      property of a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>
        <para>Gets a value indicating whether whether the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure is 
   null. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>
        <para>Gets the single byte from the
   <see langword="Value" /> property located at the position indicated by the integer
      parameter, <paramref name="index" />. If <paramref name="index" /> indicates a position beyond the end of the byte
      array, a <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> will
      be raised. This property is read-only.</para>
      </summary>
      <param name="index">The position of the byte to be retrieved.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>
        <para>Gets the length in bytes of the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property. This property is 
   read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para> Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.
      </para>
      </summary>
      <summary>
        <para> Represents a boolean stored in or retrieved from a database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure using the supplied boolean 
   value.
   </para>
      </summary>
      <param name="value">The value for the new <see langword="SqlBoolean" /> structure; either <see langword="true" /> or <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure using the specified 
<see langword="integer" />
value.</para>
      </summary>
      <param name="value">The integer whose value is to be used for the new <see langword="SqlBoolean" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the supplied byte value to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <param name="x">A byte value to be converted to <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value containing 0 or 1.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>
        <para> Converts a <see cref="T:System.Data.SqlTypes.SqlBoolean" />
to a Boolean.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> to convert. </param>
      <returns>
        <para> A Boolean set to the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para> Performs a NOT operation on a <see cref="T:System.Data.SqlTypes.SqlBoolean" />
.</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> on which the NOT operation will be performed. </param>
      <returns>
        <para> A <see langword="SqlBoolean" /> with the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if argument was
true, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> if argument was
null, and <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />
otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>The true operator can be used to test
      the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      to determine whether it is true.</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> structure to be tested.</param>
      <returns>
        <para>Returns <see langword="true" /> if 
   the supplied parameter is <see langword="SqlBoolean" />
   is true, <see langword="false" /> otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>The false operator can be used to test
      the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to determine whether it is false.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be tested.</param>
      <returns>
        <para>Returns <see langword="true" /> if 
   the supplied parameter is <see langword="SqlBoolean" />
   is false, <see langword="false" /> otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise AND of two specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise OR of its operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to a string.</para>
      </summary>
      <returns>
        <para>A string containing the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> . If the value is null the string will contain
   "null".</para>
      </returns>
      <summary>
        <para> Converts the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> to a
   string.
   </para>
      </summary>
      <returns>
        <para> A string containing
      "true" if <see langword="true" /> = ;"null" if null; otherwise "false".
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> representation of a logical value to 
   its <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalent.</para>
      </summary>
      <param name="s">The <see cref="T:System.String" /> to be converted.</param>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure containing the 
   parsed value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a one's complement operation on the supplied
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 
   structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The one's complement of the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter to
   a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlBoolean" />
structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
the <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of
   the <see langword="SqlInt16" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />
property of the <see langword="SqlInt32" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />
property of the <see langword="SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />
property of the <see langword="SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />
property of the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </para>
      </param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a one's complement operation on the supplied 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The one's complement of the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise AND of two specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The result of the logical AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise OR operation on the two specified 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose Value is the result of the 
   bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose
<see langword="Value" /> equals the <see langword="Value" /> of this 
<see langword="SqlBoolean" /> structure. If the 
<see langword="SqlBoolean" /> structure's Value 
   is <see langword="true" />, then the <see langword="SqlByte" /> structure's
<see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> 
structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" />
structure whose <see langword="Value" />
equals 1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />; otherwise the <see langword="Value" /> of the 
new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose
<see langword="Value" /> equals 1 if the 
<see langword="SqlBoolean" /> structure's <see langword="Value " /> was <see langword="true" />, 
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt16" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlBoolean" /> structure's 
   Value was <see langword="true" />, otherwise the <see langword="Value" /> of the new
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value 
   of 1; <see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> 
equals 1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
if the <see langword="SqlBoolean" /> structure's <see langword="Value" /> is 1;
otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlString" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlBoolean" /> structure's 
   Value was <see langword="true" />, otherwise the <see langword="Value" /> of the new
<see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to a specified object and returns
   an indication of their relative values.</para>
      </summary>
      <param name="value">An object to compare, or a null reference (<see langword="Nothing" />in Visual Basic).</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and value.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term> A negative integer</term>
            <description>This instance is less than
         <paramref name="value" />.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is equal to <paramref name="value" />.</description>
          </item>
          <item>
            <term> A positive integer</term>
            <description>
              <para>This instance is greater than <paramref name="value" />.</para>
              <para>-or-</para>
              <para>
                <paramref name="value" /> is a null reference
      (<see langword="Nothing" />).</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> and the two are equal;
   otherwise <see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>
        <para> Represents a true value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>
        <para> Represents a false value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>
        <para> Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
   the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>
        <para>Represents a one value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>
        <para>Indicates whether or not the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure is null.</para>
      </summary>
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>
        <para> Gets the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure's value. This property is
   read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
structure as a byte.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>
        <para> Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in
      or retrieved from a database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlByte" /> structure using 
   the specified byte value.</para>
      </summary>
      <param name="value">A byte value to be stored in the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the new <see langword="SqlByte" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied byte value to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A byte value to be converted to <see langword="SqlByte" />.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the supplied parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to a byte.</para>
      </summary>
      <param name="x">The <see langword="SqlByte" /> structure to be converted to a byte.</param>
      <returns>
        <para>A byte whose value equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of 
   the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
   the <see langword="SqlByte" /> . If the <see langword="Value" /> is null,
   the <see langword="String" /> will be a null string.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to its 8-bit unsigned 
   integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure containing the 
   8-bit number represented by the <see langword="String" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>The ones complement operator performs a bitwise one's complement operation
      on its <see cref="T:System.Data.SqlTypes.SqlByte" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the ones
   complement of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlByte" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" />
whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property
contains the sum of the two operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlByte" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of subtracting the
      second <see langword="SqlByte" /> operand from the
      first.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the product of
   the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Divides its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the results of the
   division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the remainder after
      dividing its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> parameter to be converted to a <see langword="SqlByte" />.</param>
      <returns>
        <para>A <see langword="SqlByte" /> whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the supplied <see langword="SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of
   the <see langword="SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of
   the <see langword="SqlInt16" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of
   the <see langword="SqlInt32" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of
   the <see langword="SqlInt64" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property is equal to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of
the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property is equal to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of
the <see langword="Double" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of
   the <see langword="Decimal" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">An instance of the <see langword="SqlString" /> class.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the numeric
   value represented by the <see langword="SqlString" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlByte" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is
<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if 
   the first instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlByte" /> is null, the
<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of 
   the <see langword="SqlBoolean" /> will be
<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if
   the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlByte" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>The ones complement operator performs a
      bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains 
   the ones complement of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlByte" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> property 
   contains the results of the addition.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlByte" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of subtracting the second <see langword="SqlByte" /> operand from 
   the first.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the product of 
   the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Divides its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A SqlByte structure.</param>
      <param name=" y">A SqlByte structure.</param>
      <returns>
   A new <see langword="SqlByte" />
   structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the results of
   the division.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlByte" /> 
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see langword="SqlByte" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contains the remainder.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlByte" /> structures to determine 
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if
   the two instances are not equal. If either instance
   of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if
   the two instances are equal. If either instance of <see langword="SqlByte" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first 
   is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first 
   is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see langword="SqlByte" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two <see langword="SqlByte" /> structures to 
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> is non-zero; 
<see langword="false" /> 
if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlDouble" /> structure with the 
   same value as this <see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>
        <para>Converts this SqlByte structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlInt16" /> structure with the same 
   value as this <see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
   A <see langword="SqlInt32" />
   structure with the same value as this <see langword="SqlByte" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlInt64" /> structure 
   who <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of this
<see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of 
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlSingle" /> structure that has the 
   same <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> as
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlByte" /> to 
<see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> containing the string 
   representation of the <see langword="SqlByte" /> structure's <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the 
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than 
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as 
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference 
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlByte" />
   and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>
        <para>Represents a null value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a
      <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a
      <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlByte" /> structure. This property is read-only</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>
       Represents the date and time data ranging in value
       from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds
       to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>
        <para>A constant whose value is the number of ticks equivalent 
      to one second.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>
        <para>A constant whose value is the number of ticks equivalent to one minute.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>
        <para>A constant whose value is the number of ticks equivalent 
      to one hour.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the specified <see cref="T:System.DateTime" /> value.</para>
      </summary>
      <param name="value">A <see langword="DateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day.</para>
      </summary>
      <param name="year">An integer representing the year of the of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day number of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to initialize the year, month, day,
   hour, minute, and second of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day, hour, minute, second, and millisecond of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" millisecond">An double value representing the millisecond of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day, hour, minute, second, and billisecond of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" bilisecond">An integer value representing the bilisecond (billionth of a second) of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters.</para>
      </summary>
      <param name="dayTicks">An integer value that represents the date as ticks.</param>
      <param name=" timeTicks">An integer value that represents the time as ticks.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>Converts a <see cref="T:System.DateTime" /> structure to a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="value">A <see langword="DateTime" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> is equal to the combined <see cref="P:System.DateTime.Date" /> and <see cref="P:System.DateTime.TimeOfDay" /> properties of the
   supplied <see langword="DateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to
   a <see cref="T:System.DateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see langword="DateTime" /> object whose <see cref="P:System.DateTime.Date" /> and <see cref="P:System.DateTime.TimeOfDay" /> properties
   contain the same date and time values as
   the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />
   property of the supplied <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>
        <para> Converts this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> representing the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of 
   this <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> representation of
   a date and time to its <see cref="T:System.Data.SqlTypes.SqlDateTime" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure equal to the date and time 
   represented by the specified <see langword="String" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>
        <para>Adds the amount of time indicated by the 
      supplied <see cref="T:System.TimeSpan" />
      parameter, <paramref name="t" />, to the supplied <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" t">A <see langword="TimeSpan" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDateTime" />. If either arguement is <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, the new <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> will be <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>
        <para>Subtracts the supplied <see cref="T:System.TimeSpan" /> structure,
<paramref name="t" />, from the from the supplied <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 
structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" t">A <see langword="TimeSpan" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure representing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
to a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> to be converted.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> is
   equal to the date and time represented by the <see langword="SqlString" />
   parameter. If the <see langword="SqlString" /> is null,
   the <see langword="Value" /> of the newly
   created <see langword="SqlDateTime" /> structure will be null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two
   values are equal, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two instances
      of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than or
   equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than
   or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two
   values are equal, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two instances
      of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than or
   equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than
   or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlDateTime" /> and the two are equal; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>
        <para>Represents the minimum valid date value for 
      a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>
        <para>Represents the maximum valid date value for 
      a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>
        <para>Gets a value indicating whether the Value property of 
      the SqlDateTime structure is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>
        <para>Gets the number of ticks representing the date of
      this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>
        <para>Gets the number of ticks representing the time of
      this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>
       Represents a floating-point number within the range of
       -1.79E
       +308 through 1.79E +308 to be stored in or retrieved from
       a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure using the supplied double
   parameter to set the new SqlDouble structure's <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property.</para>
      </summary>
      <param name="value">A double whose value will be used for the new <see langword="SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied double value to a <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">The double value to convert.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> with the same value as the specified double 
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to double.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A double equivalent to the specified <see langword="SqlDouble" /> structure's 
   value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to a string.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of 
   this <see langword="SqlDouble" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to 
   its double-precision floating point number equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> containing the value 
   represented by the <see langword="String" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Returns the negated value of the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The addition operator computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The sum of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The subtraction operator the second <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The results of the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The product of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the results of the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is either 0 or 1, depending on
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter. If the
<see langword="SqlBoolean" /> 
is <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, then the
<see langword="SqlDouble" /> structure
will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter. If 
   the <see langword="SqlByte" /> is <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, then the
<see langword="SqlDouble" /> 
structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter. If
   the <see langword="SqlInt16" /> is <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter. If
   the <see langword="SqlInt32" /> is <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter. If 
   the <see langword="SqlInt64" /> is <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter. If the
<see langword="SqlSingle" /> is <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter. If the 
<see langword="SqlMoney" /> is <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter. If the
<see langword="SqlDecimal" /> is <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A new <see langword="SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the value of the 
   number represented by the <see langword="SqlString" />. If the <see langword="SqlString" /> is
<see cref="F:System.Data.SqlTypes.SqlString.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Performs a logical comparison on two instances
      of <see cref="T:System.Data.SqlTypes.SqlDouble" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name="y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two values are equal, otherwise
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDouble" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDouble" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" /> 
to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The addition operator computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The sum of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The subtraction operator the second <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The results of the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The product of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the results of the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Performs a logical comparison on two instances
      of <see cref="T:System.Data.SqlTypes.SqlDouble" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name="y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two values are equal, otherwise
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDouble" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDouble" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if
   the <see langword="SqlDouble" /> structure's <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is non-zero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the
<see langword="SqlDouble" /> is zero and <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> if 
   the <see langword="SqlDouble" /> structure is <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlDouble" /> structure. If the 
<see langword="SqlDouble" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlDouble" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlDouble" />
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDouble" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns an indication of
      their relative values.</para>
      </summary>
      <param name="value">The object to compare.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the 
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term>Less than zero</term>
            <description>This instance is less than 
            object.</description>
          </item>
          <item>
            <term>Zero</term>
            <description>This instance is the same as 
            object.</description>
          </item>
          <item>
            <term>Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference 
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of 
   the <see cref="T:System.Data.SqlTypes.SqlDouble" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is an instance of <see cref="T:System.Data.SqlTypes.SqlByte" /> 
and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>
        <para>Returns the hash code for this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structre.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>
        <para>Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property of an instance of the
<see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>
        <para>A constant representing the minimum possible value of 
   <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>
        <para>A constant representing the maximum value for 
      a <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>
       Represents a globally unique identifier to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> 
structure using the supplied byte array parameter.</para>
      </summary>
      <param name="value">A byte array.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure using the specified <see cref="T:System.String" /> parameter.</para>
      </summary>
      <param name="s">A <see langword="String" /> object.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure using the specified <see cref="T:System.Guid" /> parameter.</para>
      </summary>
      <param name="g">A <see langword="Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> 
structure using the specified values.</para>
      </summary>
      <param name="a">The first four bytes of the <see langword="SqlGuid" />.</param>
      <param name=" b">The next two bytes of the <see langword="SqlGuid" />.</param>
      <param name=" c">The next two bytes of the <see langword="SqlGuid" />.</param>
      <param name=" d">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" e">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" f">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" g">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" h">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" i">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" j">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" k">The next byte of the <see langword="SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the supplied <see cref="T:System.Guid" /> parameter to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Guid" />.</param>
      <returns>
        <para>A new <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is equal to 
   the <see langword="Guid" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlGuid" /> parameter to <see cref="T:System.Guid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A new <see langword="Guid" /> equal to the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> of 
   the <see langword="SqlGuid" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to a byte array.</para>
      </summary>
      <returns>
        <para>An array of bytes representing the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> of this <see langword="SqlGuid" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>
        <para>Converts this <see langword="SqlGuid" /> structure to
   a <see langword="String" /> .</para>
      </summary>
      <returns>
        <para>A string containing "true" if <see langword="true" /> 
=;"null" if null; otherwise "false".</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> structure to
<see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlGuid" /> equivalent to the value contained in the 
   specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlString" /> structure to
<see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> equals the value represented by
   the <see langword="String" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlBinary" /> parameter to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object.</param>
      <returns>
        <para>A new <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> of 
   the <see langword="SqlBinary" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlGuid" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison on two <see cref="T:System.Data.SqlTypes.SqlGuid" /> structures to determine
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />
will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlGuid" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison on two <see cref="T:System.Data.SqlTypes.SqlGuid" /> structures to determine
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />
will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure containing the 
   string representation of the <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to <see cref="T:System.Data.SqlTypes.SqlBinary" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBinary" /> structure containing the bytes in 
   the <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlGuid" /> and the two are equal; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>
        <para>Returns the hash code of this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>
        <para>Represents a null value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>
       Represents a 16-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
structure using the supplied short integer parameter.</para>
      </summary>
      <param name="value">A short integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied short integer to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A short integer value.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure with the same value as th 
   specified short integer.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
structure to a short integer.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A short integer whose value is the Value of 
      the <see langword="SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of 
   this instance of <see langword="SqlInt16" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to its 16-bit signed
   integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 16-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The unary minus operator negates the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> operand.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The ~ operator performs a bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" />
operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property 
   contains the complement of the specified <see langword="SqlInt16" />
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the sum of the 
   two <see langword="SqlInt16" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
property contains the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
   contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise AND.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt16" />
operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise OR.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise XOR.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to
<see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
   property is equal to the integer portin of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
   property is equal to the integer portion of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
object to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" /> object.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to the value
   represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> object parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The ~ operator performs a bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" />
operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property 
   contains the complement of the specified <see langword="SqlInt16" />
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the sum of the 
   two <see langword="SqlInt16" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
property contains the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
   contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> 
structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
contains the results of the bitwise AND.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt16" />
operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> 
structure whose
<see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of 
the bitwise OR.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure containing the results of the XOR 
   operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt16" /> structure. If the 
<see langword="SqlInt16" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />,
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt32" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />,
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt64" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt16" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt16" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>
        <para> Compares the specified object to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlInt16" />
   and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>
        <para> Gets the value of this instance of <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>
       Represents a 32-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure using the supplied integer value.</para>
      </summary>
      <param name="value">The integer to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied integer to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">An integer value.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose Value
   property is equal to the integer parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to an integer.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>The converted integer value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlInt32" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its 32-bit signed integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 32-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Negates the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> operand.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the ones 
   complement operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the sum of the two
      specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the sum of
   the specified <see langword="SqlInt32" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
      parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt32" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise OR of the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the 
   bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on
      the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the 
   bitwise XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of
   the <see langword="SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> property to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
   property of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 
property of the <see langword="SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 
property of the <see langword="SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the integer portion of the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the integer portion of the <see langword="SqlDouble" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 
property of the <see langword="SqlMoney" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 
property of the <see langword="SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
object to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the value represented by the <see langword="SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performa a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine if the first is
   greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the ones 
   complement operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the sum of the two
      specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the sum of 
   the specified <see langword="SqlInt32" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
      parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt32" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise OR of the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on
      the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performa a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine if the first is
   greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt32" /> structure. If the 
<see langword="SqlInt32" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt32" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt32" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt32" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt32" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt32" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt32" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
            (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the 
<see cref="T:System.Data.SqlTypes.SqlInt32" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an 
   instance of <see cref="T:System.Data.SqlTypes.SqlInt32" /> and the two
   are equal; otherwise <see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a <see cref="T:System.Data.SqlTypes.SqlInt32" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>
       Represents a 64-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
structure using the supplied long integer.</para>
      </summary>
      <param name="value">A long integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the long parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">A long integer value.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> equals the value of 
   the long parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter to long.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new long value equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlInt64" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its 64-bit signed integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 64-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>
   The unary minus operator negates the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />
   operand.
</summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the 
   negated <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the ones compliment of the <see langword="SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the sum of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the results of
   the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the product of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the results of
   the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise AND operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise OR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise XOR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
   property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameter to SqlInt64.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the integer
   portion of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" /> 
structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the integer
   portion of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the integer portion
   of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the value represented 
   by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two SqlInt64 
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the ones complement of the <see langword="SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the sum of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the results of
   the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the product of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the results of
   the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt64" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise OR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise XOR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two SqlInt64
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt64" /> structure. If the 
<see langword="SqlInt64" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt64" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt64" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt64" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlInt64" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt64" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt64" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of the
<see cref="T:System.Data.SqlTypes.SqlInt64" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is an
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> and the two
   are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>
        <para>A constant representing the smallest possible value for 
      a <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>
        <para>A constant representing the largest possible value for 
      a <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>
       Represents a currency value ranging from
       -2<superscript term="63" /> (or -922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or
       +922,337,203,685,477.5807) with an accuracy to
       a ten-thousandth of currency unit to be stored in or retrieved from a
       database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified integer value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified long integer value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified <see cref="T:System.Decimal" /> value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with specified double value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>
        <para> Converts the Value of this instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> as 
   a <see cref="T:System.Decimal" /> structure.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Decimal" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>
        <para>Converts the Value of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to a long integer.</para>
      </summary>
      <returns>
        <para>A 64-bit integer whose value equals the integer portion of this <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to integer.</para>
      </summary>
      <returns>
        <para>A 32-bit integer whose value equals the integer portion of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to a double.</para>
      </summary>
      <returns>
        <para>A double with a value equal to this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>Converts the <see cref="T:System.Decimal" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see langword="Decimal" /> value to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> equals the value of
   the <see cref="T:System.Decimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Decimal" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see langword="Decimal" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of
   the <see langword="SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> to string.</para>
      </summary>
      <returns>
        <para>A string whose value is the string representation of
      the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its <see cref="T:System.Data.SqlTypes.SqlMoney" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalent to the value 
   contained in the specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The unary minus operator negates the <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameter.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be negated.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the negation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Calculates the sum of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> stucture whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the sum of the
   two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The subtraction operator subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure containing the
   resuls of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The multiplicaion operator calculates the product of the
      two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the product of the
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the value
represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Calculates the sum of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> stucture whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the sum of the
   two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The subtraction operator subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure containing the
   resuls of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The multiplicaion operator calculates the product of the
      two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the product of the
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure. If the 
   value of the <see langword="SqlMoney" /> structure is zero, then
   the <see langword="SqlBoolean" /> structure's value will be <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlMoney" /> structure. If the 
<see langword="SqlMoney" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlMoney" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlMoney" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlMoney" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns 
      an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> and the two
   are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>
        <para>
       Represents a null value that can be assigned to
       the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
       the <see cref="T:System.Data.SqlTypes.SqlMoney" />class.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>
        <para>
       Represents the zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
       the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>
        <para> Represents the minimum value that can be assigned
      to <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlMoney" />
      class.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>
        <para> Represents the maximum value that can be assigned to
      the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlMoney" />
      class.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>
        <para>Returns a value indicating whether the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />
property contains null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>
        <para> Gets the monetary value of an instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure. 
   This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>
       Represents a fixed precision and scale numeric value between -10<superscript term="38" />
       -1 and 10<superscript term="38" /> -1 to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>
        <para>A constant representing the largest possible value for the <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> property.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>
        <para>A constant representing the maximum value for 
      the <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> property.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied <see cref="T:System.Decimal" />
value.</para>
      </summary>
      <param name="value">The <see cref="T:System.Decimal" /> value to be stored as a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied integer
   value.</para>
      </summary>
      <param name="value">The supplied integer value which will the used as the value of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied long integer
   value.</para>
      </summary>
      <param name="value">The supplied long integer value which will the used as the value of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied parameters.</para>
      </summary>
      <param name="bPrecision">The maximum number of digits that can be used to represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" bScale">The number of decimal places to which the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property will be resolved for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" fPositive">A boolean value indicating whether the new <see langword="SqlDecimal" /> structure represents a positive or negative number.</param>
      <param name=" bits">The 128-bit unsigned integer that that provides the value of the new <see langword="SqlDecimal" /> .</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure using the supplied parameters.</para>
      </summary>
      <param name="bPrecision">The maximum number of digits that can be used to represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" bScale">The number of decimal places to which the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property will be resolved for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" fPositive">A boolean value indicating whether the new <see langword="SqlDecimal" /> structure represents a positive or negative number.</param>
      <param name=" data1">An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data2">An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data3">An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data4">An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure using the supplied double parameter.</para>
      </summary>
      <param name="dVal">A double, representing the value for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.String" /> object containing the string 
   representation of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure's <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalent to the value 
   contained in the specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>
        <para>Returns the a double equal to the contents of 
      the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of this instance.</para>
      </summary>
      <returns>
        <para>The decimal representation of the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the <see cref="T:System.Decimal" /> value to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see langword="Decimal" /> value to be converted.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />
   property equals the value of the <see langword="Decimal" /> parameter. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter to <see cref="T:System.Decimal" />.</para>
      </summary>
      <param name="x">The <see langword="SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see langword="Decimal" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of
   the <see langword="SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The unary minus operator negates the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be negated.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose value
   contains the results of the negation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operators.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the sum.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the
      results of subtracting the second <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <param name=" y">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose Value property contains
   the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the product
   of the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The division operator calculates the results of dividing
      the first <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the results
   of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /></para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property equals
   the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />
   property of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to SqlDecimal.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> operand to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property equals
   the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the value represented by
   the <see cref="T:System.Data.SqlTypes.SqlString" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>
        <para>The scale of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand will be adjusted
   to the number of digits indicated by the digits parameter. Depending on the
   value of the fRound parameter, the value will either be rounded to the
   appropriate number of digits or truncated.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be adjusted.</param>
      <param name=" digits">The number of digits in the adjusted structure.</param>
      <param name=" fRound">If this parameter is <see langword="true" />, the new Value will be rounded, if <see langword="false" />, the value will be truncated.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the adjusted number.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>
        <para>Adjusts the value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
operand to the indicated precision and scale.</para>
      </summary>
      <param name="n">The SqlDecimal structure whose value is to be adjusted.</param>
      <param name=" precision">The precision for the new SqlDecimal structure.</param>
      <param name=" scale">The scale for the new SqlDecimal structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose Value has 
   been adjusted to the precision and scale indicated in the parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structures to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structures to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operators.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the sum.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the
      results of subtracting the second <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <param name=" y">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose Value property contains
   the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the product
   of the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The division operator calculates the results of dividing
      the first <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the results
   of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structures to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structures to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlDecimal" /> structure. If the 
<see langword="SqlDecimal" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlSingle" />
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The Abs member function gets the absolute value of 
      the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </summary>
      <param name="n">A SqlDecimal structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the unsigned 
   number representing the absolute value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Returns the smallest whole number greater than or equal
      to the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure for which the ceiling value is to be calculated.</param>
      <returns>
        <para>A SqlDecimal representing the smallest whole number greater than or equal to 
      the specified <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Rounds a specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> number to the next
   lower whole number.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure for which the floor value is to be calculated.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the whole number 
   portion of this <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Gets a value indicating the sign of a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure's <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </summary>
      <param name="n">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose sign is to be evaluated.</param>
      <returns>
        <para>A number indicating the sign of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>
        <para>Gets the number nearest the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure's value with the specified precision.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be rounded.</param>
      <param name=" position">The number of significant fractional digits (precision) in the return value.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the results of the 
   rounding operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>
        <para> Truncates the specified SqlDecimal structure's value to 
      the desired position.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be truncated.</param>
      <param name=" position">The decimal position to which the number will be truncated.</param>
      <returns>
        <para>Supply a negative value for the <paramref name="position" /> parameter in order to 
   truncate the value to the corresponding positon to the left of the decimal
   point.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>
        <para>Raises the value of the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to the specified exponential power.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be raised to a power.</param>
      <param name=" exp">A double value indicating the power to which the number should be raised.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the results.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an 
   instance of <see langword="SqlDecimal" /> and the two are equal; otherwise
<see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlMoney" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>
        <para>A constant representing the minimum value for 
      a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>
        <para>A constant representing the maximum value of 
      a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>
        <para>Indicates whether or not the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>
        <para>Indicates whether or not the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of this <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure is greater than zero.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>
        <para>Gets the binary representation of this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure as an array of integers.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>
        <para>Get the binary representation of the value of 
      this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure as
      an array of bytes.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>
       Represents a floating point number within the range of -3.40E +38 through
       3.40E +38 to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="value">A floating point number which will be used as the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
structure using the supplied double parameter.</para>
      </summary>
      <param name="value">A double value which will be used as the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the specified floating point value to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The float value to be converted to <see langword="SqlSingle" />.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the value of the specified 
   float.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to float.</para>
      </summary>
      <param name="x">The <see langword="SqlSingle" /> value to be converted to float.</param>
      <returns>
        <para>A float containing the value of the 
   <see langword="SqlSingle" /> 
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlSingle" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlSingle" /> equivalent to the value contained in the 
   specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Negates the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the
   specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the sum of the two 
   specified <see langword="SqlSingle" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the product of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the product of the 
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Divides the first <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>This implicit operator converts the
      supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>This implicit operator converts the <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The SqlString object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the
   value represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two SqlSingle 
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if thye first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
structures to determine if the first is greater than or equl to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the sum of the two 
   specified <see langword="SqlSingle" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the product of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the product of the 
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Divides the first <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para> A <see langword="SqlInt64" /> 
structure containing the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two SqlSingle
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if thye first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlSingle" />
structures to determine if the first is greater than or equl to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlSingle" /> structure. If the 
<see langword="SqlSingle" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlSingle" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlSingle" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlSingle" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns 
      an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
            (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>
        <para>Represents a null value that can be assigned to 
      the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of a <see cref="T:System.Data.SqlTypes.SqlSingle" />
      structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>
        <para>Represents the zero value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlSingle" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>
        <para>Represents the minimum value that can be assigned to 
   <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlSingle" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>
        <para>Represents the maximum value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlSingle" /> class. </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>
        <para>Returns a value indicating whether the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property is assigned to null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>
        <para>Specifies the compare option values for a <see cref="T:System.Data.SqlTypes.SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>
        <para> Specifies the default option settings for 
   <see langword="SqlString" /> comparisons.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore case.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore
   nonspace combining characters, such as diacritics. The Unicode Standard defines
   combining characters as characters that are combined with base characters to
   produce a new character. Non-space combining characters do not take up character
   space by themselves when rendered. For more information on non-space combining
   characters, see the Unicode Standard at http://www.unicode.org
   
   .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore the
   Kana type. Kana type refers to Japanese hiragana and katakana characters, which
   represent phonetic sounds in the Japanese language. Hiragana is used for native
   Japanese expressions and words, while katakana is used for words borrowed from
   other languages, such as "computer" or "internet". A phonetic sound can be
   expressed in both hiragana and katakana. If this value is selected, the hiragana
   character for one sound is considered equal to the katakana character for the same sound.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore the
   character width. For example, Japanese katakana characters can be written as
   full-width or half-width and, if this value is selected, the katakana characters
   written as full-width are considered equal to the same characters written in half-width.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>
        <para>Specifies that sorts should be based on a characters 
      numeric value rather than its alphabetic value.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>
        <para>
       Represents a variable-length stream of characters to be stored in or retrieved from the database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>
        <para> Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> property of an instance of
   the <see cref="T:System.Data.SqlTypes.SqlString" /> structure.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>
        <para> Specifies that 
   <see langword="SqlString" /> comparisons should ignore case.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>
        <para>Specifies that the string comparison must ignore the character width. For 
      example, Japanese katakana characters can be written as full-width or half-width
      and, if this value is selected, the katakana characters written as full-width
      are considered equal to the same characters written in half-width.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>
        <para>Specifies that the string comparison must ignore nonspace combining 
      characters, such as diacritics. The Unicode Standard defines combining
      characters as characters that are combined with base characters to produce a new
      character. Non-space combining characters do not take up character space by
      themselves when rendered. For more information on non-space combining
      characters, see the Unicode Standard at http://www.unicode.org.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>
        <para>Specifies that the string comparison must ignore the Kana type. Kana type 
      refers to Japanese hiragana and katakana characters, which represent phonetic
      sounds in the Japanese language. Hiragana is used for native Japanese
      expressions and words, while katakana is used for words borrowed from other
      languages, such as "computer" or "internet". A phonetic sound can be expressed
      in both hiragana and katakana. If this value is selected, the hiragana character
      for one sound is considered equal to the katakana character for the same
      sound.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>
        <para>Specifies that sorts should be based on a characters numeric value rather 
      than its alphabetic value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="index">The starting index within the array. </param>
      <param name="count">The number of characters from index to copy. </param>
      <param name="fUnicode">
        <see langword="true" /> if Unicode encoded, otherwise <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="fUnicode">
        <see langword="true" /> if Unicode encoded, otherwise <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="index">The starting index within the array. </param>
      <param name="count">The number of characters from index to copy. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified
   locale id, compare options, and data.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified string, 
   locale id, and compare option values.
   </para>
      </summary>
      <param name="data">The string to store. </param>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified string and 
   locale id values.
   </para>
      </summary>
      <param name="data">The string to store. </param>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> 
structure using the specified string.
</para>
      </summary>
      <param name="data">The string to store. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the <see cref="T:System.String" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.String" />to be converted.</param>
      <returns>
        <para>A <see langword="SqlString" /> containing the value of the specified 
<see langword="String" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlString" /> to a <see cref="T:System.String" /></para>
      </summary>
      <param name="x">The <see langword="SqlString" /> to be converted.</param>
      <returns>
        <para>A <see langword="String" />, whose contents are the same as
   the <see cref="P:System.Data.SqlTypes.SqlString.Value" />
   property of the <see langword="SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>
        <para> Converts a <see langword="SqlString" /> object to 
   a <see langword="String" /> .
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>
        <para> Gets an array of bytes, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" /> in
      Unicode format.</para>
      </summary>
      <returns>
        <para>An byte array, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" /> in Unicode format.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>
        <para> Gets an array of bytes, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" />in ANSI format.</para>
      </summary>
      <returns>
        <para>An byte array, containing the contents of the <see cref="T:System.Data.SqlTypes.SqlString" />
in ANSI format.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Concatenates the two specified <see cref="T:System.Data.SqlTypes.SqlString" /> structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" /> containing the newly concatenated value
   representing the contents of the two <see cref="T:System.Data.SqlTypes.SqlString" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The SqlInt32 structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlGuid" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>
        <para>Creates a copy of this <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object in which all 
   property values are the same as the original.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Concatenates the two specified <see cref="T:System.Data.SqlTypes.SqlString" /> structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" /> containing the newly concatenated value
   representing the contents of the two <see cref="T:System.Data.SqlTypes.SqlString" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDateTime" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlString" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlString" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CompareOptions" /> enumeration equilvalent of the 
   specified <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance of <see cref="T:System.Data.SqlTypes.SqlString" /> 
to the supplied object and returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlString" /> and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>
        <para>Indicates whether the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlString" /> is <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>
        <para> Gets the string that is stored in this
   <see cref="T:System.Data.SqlTypes.SqlString" /> structure. This property is 
      read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>
        <para>Specifies the geographical locale and language for the 
   <see langword="SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CultureInfo" /> structure that represents 
   information about the culture of this <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string
   comparisons should be performed for this <see cref="T:System.Data.SqlTypes.SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>
        <para>A combination of one or more of the <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> enumeration values that represent the way 
   in which this <see cref="T:System.Data.SqlTypes.SqlString" /> should be compared to other
<see langword="SqlString" /> structures.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>
        <para>The base exception class for the <see cref="N:System.Data.SqlTypes" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTypeException" /> class with a specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTypeException" /> class using the specified serialization 
   information and streaming context.</para>
      </summary>
      <param name="si">A SerializationInfo structure.</param>
      <param name=" sc">A StreamingContext structure.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>
        <para>The exception that is thrown when the 
   <see langword="Value" /> property of a <see langword="SqlTypes" /> structure is set to null.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> class with 
   default properties.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> class with a 
   specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>
        <para>The exception that is thrown when setting a value into 
      a <see langword="SqlType" /> structure would truncate that value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> class 
   with default properties.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> class with a 
   specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>
        <para>Allows structured data to be stored, retrieved, and
      manipulated through a relational <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>
        <para> Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />,
<see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 
.</para>
      </summary>
      <param name="prefix">The prefix of the new element; if String.Empty or <see langword="null" /> there is no prefix. </param>
      <param name=" localName">The local name of the new element. </param>
      <param name=" namespaceURI">The namespace URI of the new element; if String.Empty or <see langword="null" /> there is no namespaceURI. </param>
      <returns>
        <para> A new <see cref="T:System.Xml.XmlElement" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name. </para>
        <para>
          <see langword="XmlEntityReference" /> nodes cannot be
created for <see langword="XmlDataDocument" /> objects. Calling
this method throws an exception.</para>
      </summary>
      <param name="name">Name of the entity reference.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>
        <para>Retrieves the <see cref="T:System.Data.DataRow" /> associated
   with the specified <see cref="T:System.Xml.XmlElement" />.</para>
      </summary>
      <param name="e">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you wish to retrieve.</param>
      <returns>
        <para>The <see langword="DataRow" /> 
containing a representation of the <see langword="XmlElement" />;
<see langword="null" /> if there is no <see langword="DataRow" /> 
associated with the <see langword="XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>
        <para>Retrieves the <see cref="T:System.Xml.XmlElement" />
associated with the specified <see cref="T:System.Data.DataRow" />
.</para>
      </summary>
      <param name="r">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you wish to retrieve.</param>
      <returns>
        <para>The <see langword="XmlElement" /> containing a
   representation of the specified <see langword="DataRow" />
   .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of the current node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> using the specified URL.</para>
      </summary>
      <param name="filename">URL for the file containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the specified stream.</para>
      </summary>
      <param name="inStream">The stream containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the
   specified <see cref="T:System.IO.TextReader" />.</para>
      </summary>
      <param name="txtReader">The <see langword="TextReader" /> used to feed the XML data into the document.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" /> .</para>
      </summary>
      <param name="reader">
        <see langword="XmlReader" /> containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see langword="XmlDataDocument" /> class.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlDataDocument" /> class
      with the specified <see cref="T:System.Data.DataSet" />
      .</para>
      </summary>
      <param name="dataset">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" /> .</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>
        <para>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document. The 
<see langword="XPathNavigator" /> 
is positioned on the node specified in the <paramref name="node" /> parameter.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</param>
      <returns>
        <para>An <see langword="XPathNavigator" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</para>
        <para>This method is not supported by the <see langword="XmlDataDocument" />
class. Calling this method throws an exception.</para>
      </summary>
      <param name="elemId">The attribute ID to match.</param>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the
   data in the <see langword="XmlDataDocument" />
   .</para>
      </summary>
    </member>
    <member name="T:System.Data.TypedDataSetGenerator">
      <summary>
        <para>Used to create a strongly-typed <see cref="T:System.Data.DataSet" /> 
.</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>
        <para>Generates a strongly-typed <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" /> .</param>
      <param name="codeNamespace">The CodeNamespace that provides the target Namespace for the typed <see cref="T:System.Data.DataSet" /> .</param>
      <param name="codeGen">The CodeGenerator used to create the typed <see cref="T:System.Data.DataSet" /> .</param>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>
        <para> Transforms a string in a valid typed <see cref="T:System.Data.DataSet" /> name.</para>
      </summary>
      <param name="name">The source name to transform into a valid typed <see cref="T:System.Data.DataSet" /> name.</param>
      <param name="codeGen">The CodeGenerator used to perform the conversion.</param>
      <returns>
        <para>A string that is the converted name.</para>
      </returns>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>
        <para> The exception that is thrown by a strongly-typed <see cref="T:System.Data.DataSet" /> when the user accesses DBNull value.</para>
      </summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class using the specified serialization information
   and streaming context.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class with the 
   specified string and inner exception.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
      <param name="innerException">A reference to an inner exception.</param>
    </member>
    <member name="T:System.Data.TypedDataSetGeneratorException">
      <summary>
        <para>The exception that is thrown when a name conflict occurs 
      while generating a strongly-typed <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class using the specified serialization information
   and streaming context.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</para>
      </summary>
      <param name="list">An <see cref="T:System.Collections.ArrayList" /> object containing a dynamic list of exceptions.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Implements the <see langword="ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Data.TypedDataSetGeneratorException" /> object.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <summary>
        <para>Gets a dynamic list of generated errors.</para>
      </summary>
    </member>
  </members>
</doc>