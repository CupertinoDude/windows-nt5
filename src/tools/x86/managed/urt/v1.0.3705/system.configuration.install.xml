<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Configuration.Install</name>
  </assembly>
  <members>
    <member name="M:System.Configuration.Install.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Configuration.Install.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Configuration.Install.AssemblyInstaller">
      <summary>
        <para> Loads an assembly, and runs all the installers in it.</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.Installer">
      <summary>
        <para> Provides the foundation for custom installations.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)">
      <summary>
        <para>When overridden in a derived class, completes the install transaction. </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the collection have run.</param>
    </member>
    <member name="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
      <summary>
        <para>When overridden in a derived class, performs the installation. </para>
      </summary>
      <param name="stateSaver">
        <para>An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.Committed" /> event.
   </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property run.</param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.AfterInstall" /> event.
   </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property have completed their installations.</param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.AfterRollback" /> event.
   </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.AfterUninstall" />
event.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers contained in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are uninstalled. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.Committing" />
event.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are committed. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" />
event.</para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are installed. This <see cref="T:System.Collections.IDictionary" /> object should be empty at this point. </para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.BeforeRollback" /> event.
   </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property are rolled back. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)">
      <summary>
        <para> Raises the <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" /> event.
   </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property uninstall their installations. </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
      <summary>
        <para>When overridden in a derived class, restores the pre-installation state of
      the computer. </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para>When overridden in a derived class, removes an installation. </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installation was complete. </para>
      </param>
    </member>
    <member name="P:System.Configuration.Install.Installer.Context">
      <summary>
        <para> Gets
      or sets information about the current installation.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.Installer.HelpText">
      <summary>
        <para>Gets the help text for all the installers in the installer collection.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.Installer.Installers">
      <summary>
        <para> Gets the collection of installers that this installer
      contains.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.Installer.Parent">
      <summary>
        <para>Gets or sets the installer containing the collection that this installer belongs
      to.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.Committed">
      <summary>
        <para>Occurs after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property have committed their
   installations.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterInstall">
      <summary>
        <para> Occurs after the <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> methods of all the installers in
   the <see cref="P:System.Configuration.Install.Installer.Installers" />
   property have run.
   </para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterRollback">
      <summary>
        <para>Occurs after the installations of all the installers in
      the <see cref="P:System.Configuration.Install.Installer.Installers" />
      property are rolled back.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.AfterUninstall">
      <summary>
        <para>Occurs after all the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" />property perform their
   uninstallation operations.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.Committing">
      <summary>
        <para>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" />property committ their
   installations.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeInstall">
      <summary>
        <para>Occurs before the <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> method of each installer in the
   installer collection has run. </para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeRollback">
      <summary>
        <para>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" />
property are rolled back.</para>
      </summary>
    </member>
    <member name="E:System.Configuration.Install.Installer.BeforeUninstall">
      <summary>
        <para>Occurs before the installers in the <see cref="P:System.Configuration.Install.Installer.Installers" /> property perform their
   uninstall operations.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.String,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class,
   and specifies both the file name of
   the assembly to install and the command line to use when creating a new
<see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's 
   installation.</para>
      </summary>
      <param name="filename">The file name of the assembly to install.</param>
      <param name="commandLine">The command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.#ctor(System.Reflection.Assembly,System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.AssemblyInstaller" /> class, and specifies both
   the assembly to install and the command line to use when creating a new
<see cref="T:System.Configuration.Install.InstallContext" /> 
object.</para>
      </summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> to install.</param>
      <param name="commandLine">The command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.CheckIfInstallable(System.String)">
      <summary>
        <para>Checks to see if the specified assembly can be installed.</para>
      </summary>
      <param name="assemblyName">The assembly in which to search for installers.</param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Commit(System.Collections.IDictionary)">
      <summary>
        <para> Completes the installation transaction.
      </para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after all the installers in the installer collection have run.</param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para> Performs the installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Restores the computer to the state it was in
      before the installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.AssemblyInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para> Removes an installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </para>
      </param>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.Assembly">
      <summary>
        <para>Gets or sets the assembly to install.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.CommandLine">
      <summary>
        <para>Gets or sets the command line to use when creating a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's installation.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.HelpText">
      <summary>
        <para>Gets the help text for all the installers in the installer collection.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.Path">
      <summary>
        <para>Gets or sets the path of the assembly to install.</para>
      </summary>
    </member>
    <member name="P:System.Configuration.Install.AssemblyInstaller.UseNewContext">
      <summary>
        <para>Gets or sets a value indicating whether to create a new <see cref="T:System.Configuration.Install.InstallContext" /> object for the assembly's
   installation.</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.ComponentInstaller">
      <summary>
        <para> Specifies an installer that copies
      properties from a component to use at install time.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para>When overridden in a derived class, copies all the
      properties that are required at install time from the specified component.</para>
      </summary>
      <param name="component">The component to copy from.</param>
    </member>
    <member name="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>
        <para> Determines if the specified
      installer installs the same object as this installer.</para>
      </summary>
      <param name="otherInstaller">The installer to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if this installer and the
   installer specified by the <paramref name="otherInstaller" /> parameter
   install the same object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Diagnostics.EventLogInstaller">
      <summary>
        <para>Allows you to install and configure an event log that your application reads
      from or writes to when running. This class is called by the
      installation utility, for example, InstallUtil.exe, when installing an event
      log. </para>
      </summary>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para>Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at install time for an event log.</para>
      </summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" /> .</param>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para> Performs the installation and
      writes event log information to the registry.
      </para>
      </summary>
      <param name="stateSaver">
        <para>An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>
        <para> Determines whether the specified installer
      and this installer refer to the same source.</para>
      </summary>
      <param name="otherInstaller">The installer to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if this installer and the
   installer specified by the <paramref name="otherInstaller" /> parameter would install or
   uninstall the same source; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Restores the computer to the state it was in before the
      installation by rolling back the event log information that the installation procedure wrote
      to the registry.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</para>
      </param>
    </member>
    <member name="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para> Removes an installation by removing event log information
      from the registry.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </para>
      </param>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.Log">
      <summary>
        <para> Gets or sets the name of the log to set the source to.</para>
      </summary>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.Source">
      <summary>
        <para> Gets or sets the source name to register with the log.</para>
      </summary>
    </member>
    <member name="P:System.Diagnostics.EventLogInstaller.UninstallAction">
      <summary>
        <para> Gets or sets a
      value indicating what the installer does with the event log at uninstall time: remove it or leave it in its current installed state.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.IManagedInstaller.ManagedInstall(System.String,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.InstallContext">
      <summary>
        <para>Contains information about the current installation.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])">
      <summary>
        <para>Initializes a new instance of the
   <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for
      the installation.</para>
      </summary>
      <param name="logFilePath">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</param>
      <param name="commandLine">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)">
      <summary>
        <para> Determines whether the specified command-line parameter
      is <see langword="true" />.</para>
      </summary>
      <param name="paramName">The name of the command-line parameter to check.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified parameter is set to "yes", "true", "1",
   or an empty string (""); otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.LogMessage(System.String)">
      <summary>
        <para> Writes a message
      to the console and to the log file
      for the installation.
      </para>
      </summary>
      <param name="message">The message to write. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])">
      <summary>
        <para> Parses the command-line parameters into a string
      dictionary.</para>
      </summary>
      <param name="args">An array containing the command-line parameters.</param>
      <returns>
        <para>A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line
   parameters.</para>
      </returns>
    </member>
    <member name="P:System.Configuration.Install.InstallContext.Parameters">
      <summary>
        <para> Gets the
      command-line parameters that
      were entered when InstallUtil.exe was run.</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.InstallerCollection">
      <summary>
        <para> Contains a collection of installers to be run during an
      installation.
      </para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)">
      <summary>
        <para> Adds the specified installer to this collection of
      installers.
      </para>
      </summary>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to add to the collection. </param>
      <returns>
        <para> The zero-based index of the added installer.</para>
      </returns>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)">
      <summary>
        <para> Adds the specified collection of installers to this collection.
      </para>
      </summary>
      <param name="value">An <see cref="T:System.Configuration.Install.InstallerCollection" /> that represents the installers to add to this collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.Installer[])">
      <summary>
        <para> Adds the specified array of installers to this collection.
      </para>
      </summary>
      <param name="value">An array of type <see cref="T:System.Configuration.Install.Installer" /> that represents the installers to add to this collection. </param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Contains(System.Configuration.Install.Installer)">
      <summary>
        <para> Determines whether the specified installer is included
      in collection.
      </para>
      </summary>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to look for. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified installer is in this collection;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.CopyTo(System.Configuration.Install.Installer[],System.Int32)">
      <summary>
        <para>Copies the items from the collection to an array,
      begining at the specified index.</para>
      </summary>
      <param name="array">The array to copy to.</param>
      <param name=" index">The index of the array at which to paste the collection.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.IndexOf(System.Configuration.Install.Installer)">
      <summary>
        <para>Determines the index of a specified installer in the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Configuration.Install.Installer" /> to locate in the collection.</param>
      <returns>
        <para>The zero-based index of the installer in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Insert(System.Int32,System.Configuration.Install.Installer)">
      <summary>
        <para> Inserts the specified installer into the collection at
      the specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the installer.</param>
      <param name=" value">The <see cref="T:System.Configuration.Install.Installer" /> to insert.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)">
      <summary>
        <para> Removes the specified <see cref="T:System.Configuration.Install.Installer" /> from the
   collection.
   </para>
      </summary>
      <param name="value">An <see cref="T:System.Configuration.Install.Installer" /> that represents the installer to remove. </param>
    </member>
    <member name="P:System.Configuration.Install.InstallerCollection.Item(System.Int32)">
      <summary>
        <para> Gets or sets an
      installer at the specified index.
      </para>
      </summary>
      <param name="index">The zero-based index of the installer to get or set. </param>
    </member>
    <member name="T:System.Configuration.Install.InstallEventArgs">
      <summary>
        <para>Provides data for the events: <see cref="E:System.Configuration.Install.Installer.BeforeInstall" />, <see cref="E:System.Configuration.Install.Installer.AfterInstall" />, <see cref="E:System.Configuration.Install.Installer.Committing" />, <see cref="E:System.Configuration.Install.Installer.Committed" />, <see cref="E:System.Configuration.Install.Installer.BeforeRollback" />, <see cref="E:System.Configuration.Install.Installer.AfterRollback" />, <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" />, <see cref="E:System.Configuration.Install.Installer.AfterUninstall" />.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallEventArgs.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallEventArgs" /> class, and leaves the <see cref="P:System.Configuration.Install.InstallEventArgs.SavedState" />
property empty.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallEventArgs.#ctor(System.Collections.IDictionary)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallEventArgs" /> class, and specifies the value for the <see cref="P:System.Configuration.Install.InstallEventArgs.SavedState" />
property.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that represents the current state of the installation.</param>
    </member>
    <member name="P:System.Configuration.Install.InstallEventArgs.SavedState">
      <summary>
        <para> Gets an <see cref="T:System.Collections.IDictionary" />
that represents the current state of the installation.</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.InstallEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Configuration.Install.Installer.BeforeInstall" />, <see cref="E:System.Configuration.Install.Installer.AfterInstall" />, <see cref="E:System.Configuration.Install.Installer.Committing" />, <see cref="E:System.Configuration.Install.Installer.Committed" />, <see cref="E:System.Configuration.Install.Installer.BeforeRollback" />, <see cref="E:System.Configuration.Install.Installer.AfterRollback" />, <see cref="E:System.Configuration.Install.Installer.BeforeUninstall" />, or <see cref="E:System.Configuration.Install.Installer.AfterUninstall" /> event of an <see cref="T:System.Configuration.Install.Installer" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.Configuration.Install.InstallEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Configuration.Install.InstallException">
      <summary>
        <para>The exception that is thrown when an error occurs during
      the commit, rollback, or uninstall phase of an installation.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message to
   display to the user.</para>
      </summary>
      <param name="message">The message to display to the user.</param>
    </member>
    <member name="M:System.Configuration.Install.InstallException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallException" /> class, and specifies the message and the
   inner exception to display to the user.</para>
      </summary>
      <param name="message">The message to display to the user.</param>
      <param name=" innerException">The inner exception to display to the user.</param>
    </member>
    <member name="M:System.Configuration.Install.ManagedInstallerClass.InstallHelper(System.String[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstaller">
      <summary>
        <para>Specifies an installer for the <see cref="T:System.Diagnostics.PerformanceCounter" /> component.</para>
      </summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para>Copies all the properties from the specified component that are required at install time for a performance counter.</para>
      </summary>
      <param name="component">The component to copy from.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para> Performs the installation.
      </para>
      </summary>
      <param name="stateSaver">
        <para>An <see cref="T:System.Collections.IDictionary" /> that is used to save the information needed to perform a commit, rollback, or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Restores the computer to the state it was in
      before the installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</para>
      </param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para> Removes an installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </para>
      </param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.CategoryName">
      <summary>
        <para> Gets or sets the performance category name for the
      performance counter.</para>
      </summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.CategoryHelp">
      <summary>
        <para>Gets or sets the descriptive message for the performance counter.</para>
      </summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.Counters">
      <summary>
        <para>Gets a collection of data that pertains to the counters to install.</para>
      </summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterInstaller.UninstallAction">
      <summary>
        <para>Determines whether the performance counter should be removed at uninstall time.</para>
      </summary>
    </member>
    <member name="T:System.Configuration.Install.TransactedInstaller">
      <summary>
        <para> Defines an installer that either succeeds completely or fails and leaves
      the computer in its initial state.</para>
      </summary>
    </member>
    <member name="M:System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para> Performs the installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> in which this method saves information needed to perform a commit, rollback, or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para> Removes an installation.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the state of the computer after the installation completed. </para>
      </param>
    </member>
    <member name="T:System.Configuration.Install.UninstallAction">
      <summary>
        <para>Specifies what an installer should do during an uninstallation.</para>
      </summary>
    </member>
    <member name="F:System.Configuration.Install.UninstallAction.Remove">
      <summary>
        <para>Remove the resource the installer created.</para>
      </summary>
    </member>
    <member name="F:System.Configuration.Install.UninstallAction.NoAction">
      <summary>
        <para>Leave the resource created by the installer as is.</para>
      </summary>
    </member>
  </members>
</doc>