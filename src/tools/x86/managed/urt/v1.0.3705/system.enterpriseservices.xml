<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.EnterpriseServices</name>
  </assembly>
  <members>
    <member name="T:System.EnterpriseServices.TransactionVote">
      <summary>
        <para> Specifies the values allowed for transaction outcome voting.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Commit">
      <summary>
        <para> Commits the
      current transaction.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Abort">
      <summary>
        <para>Aborts the current transaction.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.IObjectConstruct.Construct(System.Object)">
      <summary>
    This method is called by COM+ 1.0
    infrastructure when the object is created. An object supporting
    IObjectConstructString is passed.
 </summary>
      <param name="obj">
    The construction object. Currently, this object will support the IObjectConstructString interface.
 </param>
    </member>
    <member name="P:System.EnterpriseServices.IObjectConstructString.ConstructString">
      <summary>
    The construction string specified in the
    COM+ 1.0 administration catalog.
 </summary>
    </member>
    <member name="M:System.EnterpriseServices.IObjectControl.Activate">
      <summary>
    Activate will be called when the COM+ 1.0
    context is about to allow new access to an object instance.
 </summary>
    </member>
    <member name="M:System.EnterpriseServices.IObjectControl.Deactivate">
      <summary>
    Deactivate is called when COM+ 1.0 has
    determined that the component is no longer needed.
 </summary>
    </member>
    <member name="M:System.EnterpriseServices.IObjectControl.CanBePooled">
      <summary>
    CanBePooled is called by the COM+ 1.0
    infrastructure to verify that the object instance is available for object
    pooling. The object should return false if it does not wish to be returned
    to the pool.
 </summary>
    </member>
    <member name="T:System.EnterpriseServices.BOID">
      <summary>
        <para>Represents the unit of work associated with a 
      transaction. This structure is used in <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.BOID.rgb">
      <summary>
        <para> Represents an array containing the data.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.XACTTRANSINFO">
      <summary>
        <para>Represents a structure used in the <see cref="T:System.EnterpriseServices.ITransaction" /> interface.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.uow">
      <summary>
        <para>Represents the unit of work associated with this transaction.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoLevel">
      <summary>
        <para>Represents the isolation level associated with this transaction
      object. ISOLATIONLEVEL_UNSPECIFIED indicates that no isolation level was specified.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoFlags">
      <summary>
        <para>Specifies zero. This field is reserved.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupported">
      <summary>
        <para> Represents a bitmask indicating which
   <see langword="grfTC" /> flags this
      transaction implementation supports.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupported">
      <summary>
        <para> Specifies zero.
      This field is reserved.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupportedRetaining">
      <summary>
        <para>Specifies zero. This field is reserved.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupportedRetaining">
      <summary>
        <para>Specifies zero. This field is reserved.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ITransaction">
      <summary>
        <para> Corresponds to the DTC
   <see langword="ITransaction" /> interface and is supported by objects obtained
      through <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" qualify="true" />
      . </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Commits the transaction.</para>
      </summary>
      <param name="fRetaining">Must be <see langword="false" />.</param>
      <param name=" grfTC">A value taken from the OLE DB enumeration <see langword="XACTTC." /></param>
      <param name=" grfRM">Must be zero.</param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Abort(System.EnterpriseServices.BOID@,System.Int32,System.Int32)">
      <summary>
        <para>Aborts the transaction.</para>
      </summary>
      <param name="pboidReason">An optional <see cref="T:System.EnterpriseServices.BOID" /> that indicates why the transaction is being aborted. This parameter can be <see langword="null" />, indicating that no reason for the abort is provided.</param>
      <param name=" fRetaining">Must be <see langword="false" />.</param>
      <param name=" fAsync">When <paramref name="fAsync" /> is <see langword="true" />, an asynchronous abort is performed and the caller must use <see langword="ITransactionOutcomeEvents" /> to learn the outcome of the transaction.</param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.GetTransactionInfo(System.EnterpriseServices.XACTTRANSINFO@)">
      <summary>
        <para>Returns information about a transaction object.</para>
      </summary>
      <param name="pinfo"> Pointer to the caller-allocated <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> structure that will receive information about the transaction. Must not be <see langword="null" />.</param>
    </member>
    <member name="T:System.EnterpriseServices.PropertyLockMode">
      <summary>
        <para> Specifies the mode for accessing shared properties in the
      shared property group manager.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.SetGet">
      <summary>
        <para>Locks a property during a get or set, assuring that every 
 get or set operation on a shared property is atomic.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.Method">
      <summary>
        <para> Locks all the properties in the shared property group
      for exclusive use by the caller, as long as the caller's current method is executing.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.PropertyReleaseMode">
      <summary>
        <para>Specifies the release mode for the properties in the new 
 shared property group.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Standard">
      <summary>
        <para>When all clients have released their references on the 
 property group, the property group is automatically destroyed. (This is the
 default COM mode.)</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Process">
      <summary>
        <para>The property group is not destroyed until the process in
      which it was created has terminated.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SharedProperty">
      <summary>
        <para> Accesses a shared property. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SharedProperty.Value">
      <summary>
        <para>Gets or sets the value of the shared property.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroup">
      <summary>
        <para> Represents a collection of shared properties. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreatePropertyByPosition(System.Int32,System.Boolean@)">
      <summary>
        <para> Creates a property at the given position.
      </para>
      </summary>
      <param name="position">The index of the new property </param>
      <param name="fExists">Determines whether the property exists. Set to <see langword="true" /> on return if the property exists. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.PropertyByPosition(System.Int32)">
      <summary>
        <para> Returns the property at the given position.
      </para>
      </summary>
      <param name="position">The index of the property. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreateProperty(System.String,System.Boolean@)">
      <summary>
        <para> Creates a property with the given name.
      </para>
      </summary>
      <param name="name">The name of the new property. </param>
      <param name="fExists">Determines whether the property exists. Set to <see langword="true" /> on return if the property exists. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.Property(System.String)">
      <summary>
        <para> Returns the property with the given name.
      </para>
      </summary>
      <param name="name">The name of requested property. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</para>
      </returns>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroupManager">
      <summary>
        <para> Controls access to shared property groups. This class cannot be inherited.
 </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SharedPropertyGroupManager" /> class.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.CreatePropertyGroup(System.String,System.EnterpriseServices.PropertyLockMode@,System.EnterpriseServices.PropertyReleaseMode@,System.Boolean@)">
      <summary>
        <para> Finds or creates a property group with the given information.
      </para>
      </summary>
      <param name="name">The name of requested property. </param>
      <param name="dwIsoMode"> The isolation mode requested. You can choose to make get and set operations atomic, or all operations over the duration of the method call atomic. </param>
      <param name="dwRelMode">The release mode requested. If the release mode is process, the property is held alive for the lifetime of the process. </param>
      <param name="fExist">Determines whether the property exists. Set to <see langword="true" /> if the property existed already, <see langword="false" /> if the call created the property. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.Group(System.String)">
      <summary>
        <para> Finds the property group with the given name.
      </para>
      </summary>
      <param name="name">The name of requested property. </param>
      <returns>
        <para>The requested <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.GetEnumerator">
      <summary>
        <para>Retrieves the enumeration interface for the collection.</para>
      </summary>
      <returns>
        <para>The enumerator interface for the collection.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponent">
      <summary>
        <para>Represents the base class of all classes using COM+ services. </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ServicedComponent" />
             class.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
      <summary>
        <para> Finalizes the
      object and removes the associated COM+ reference.</para>
      </summary>
      <param name="sc">The object to dispose.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Activate">
      <summary>
        <para>This method is called by the infrastructure when the object is created
      or allocated from a pool. Override this method to add custom initialization code to
      objects. </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Deactivate">
      <summary>
        <para>This method is called by the infrastructure when the object is about to
      be deactivated. Override this method to add custom finalization
      code to objects when just-in-time (JIT) compiled code or object pooling is used.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
      <summary>
        <para>This method is called by the infrastructure before the object is put
      back into the pool. Override this method to vote on whether the object is put
      back into the pool.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
if the serviced
component can be pooled; otherwise,
<see langword="false" />
.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
      <summary>
        <para>This method is called by the infrastructure just after the constructor
      is called, passing in the constructor string. Override this method to
      make use of the construction string value.</para>
      </summary>
      <param name="s">The construction string.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose">
      <summary>
        <para>
             
      Releases all resources used by the 
            <see cref="T:System.EnterpriseServices.ServicedComponent" />
            .
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
      <summary>
        <para>
             Releases the unmanaged resources used 
      by the 
            <see cref="T:System.EnterpriseServices.ServicedComponent" />
             and optionally releases the managed resources.
         </para>
      </summary>
      <param name="disposing">
        <see langword="true" />
          to release both managed and unmanaged resources; otherwise, 
         <see langword="false" />
          to release only unmanaged resources.
      </param>
    </member>
    <member name="P:System.EnterpriseServices.MethodCallMessageWrapperEx.MethodBase">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentProxyAttribute.CreateProxy(System.Runtime.Remoting.ObjRef,System.Type,System.Object,System.Runtime.Remoting.Contexts.Context)">
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponentException">
      <summary>
        <para>The exception that is thrown when an error is detected in a serviced component.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class 
   with a specified error message.</para>
      </summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class.</para>
      </summary>
      <param name="message">The message displayed to the client when the exception is thrown.</param>
      <param name=" innerException">The <see cref="P:System.Exception.InnerException" qualify="true" />, if any, that threw the current exception. </param>
    </member>
    <member name="T:System.EnterpriseServices.ContextUtil">
      <summary>
        <para> Obtains information about the COM+
      object context. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.EnableCommit">
      <summary>
        <para> Sets the <see langword="consistent " />
bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.DisableCommit">
      <summary>
        <para> Sets both the <see langword="consistent" /> bit
   and the <see langword="done" /> bit to
<see langword="false" /> in the COM+ context.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetComplete">
      <summary>
        <para> Sets the <see langword="consistent " />bit and
   the <see langword="done" /> bit to
<see langword="true " />in the COM+ context.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetAbort">
      <summary>
        <para> Sets the <see langword="consistent " /> bit to
<see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)">
      <summary>
        <para> Determines whether the caller is in the
      specified role.
      </para>
      </summary>
      <param name="role">The name of the role to check. </param>
      <returns>
        <para>
          <see langword="true" /> if the caller is in the specified role; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)">
      <summary>
        <para> Returns a named property from the COM+ context.
      </para>
      </summary>
      <param name="name">The name of the requested property. </param>
      <returns>
        <para>The named property for the context.</para>
      </returns>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsInTransaction">
      <summary>
        <para> Gets a value indicating whether the current context is
 transactional.
 </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled">
      <summary>
        <para> Gets a value indicating whether role-based security is active
 in the current context.
 </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.Transaction">
      <summary>
        <para> Gets an object describing the current COM+ DTC
      transaction.
      </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.TransactionId">
      <summary>
        <para>Gets the GUID of the current COM+ DTC
      transaction.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ContextId">
      <summary>
        <para>Gets a GUID for the current context.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ActivityId">
      <summary>
        <para>Gets a GUID representing the activity containing the component.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.MyTransactionVote">
      <summary>
        <para>Gets or sets the <see langword="consistent " /> bit in the COM+
   context.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn">
      <summary>
        <para> Gets or sets the <see langword="done" /> bit in the COM+
   context.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.PartitionId">
      <summary>
        <para>Gets a GUID for the current partition.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationId">
      <summary>
        <para>Gets a GUID for the current application.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId">
      <summary>
        <para>Gets a GUID for the current application instance.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityIdentity">
      <summary>
        <para>Contains information regarding an identity in a COM+
      call chain.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AccountName">
      <summary>
        <para>Gets the name of the user described by this
 identity.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationService">
      <summary>
        <para>Gets the authentication service described by this identity.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.ImpersonationLevel">
      <summary>
        <para> Gets the impersonation level of the user described
      by this identity.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationLevel">
      <summary>
        <para> Gets the authentication level of the user described by this identity.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallers">
      <summary>
        <para> Provides an ordered collection of identities in the
      current call chain.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallers.GetEnumerator">
      <summary>
        <para>Retrieves the enumeration interface for the object.</para>
      </summary>
      <returns>
        <para>The enumerator interface for 
 the <see langword="ISecurityCallersColl" /> collection.</para>
      </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Count">
      <summary>
        <para>Gets the number of callers in the chain. </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Item(System.Int32)">
      <summary>
        <para> Gets the specified <see cref="T:System.EnterpriseServices.SecurityIdentity" /> item.</para>
      </summary>
      <param name="idx"> The item to access using an index number.</param>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallContext">
      <summary>
        <para> Describes the chain of
 callers leading up to the current method call.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
      <summary>
        <para> Verifies that the direct caller is a
      member of the specified role.</para>
      </summary>
      <param name="role"> The specified role. </param>
      <returns>
        <para>
          <see langword="true" /> if the direct caller is a member of the specified role;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
      <summary>
        <para>Verifies that the specified user is in the specified role. </para>
      </summary>
      <param name="user"> The specified user. </param>
      <param name="role"> The specified role. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified user is a member of the specified
   role; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
      <summary>
        <para> Gets a <see cref="T:System.EnterpriseServices.SecurityCallContext" />
object describing the security call context.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled">
      <summary>
        <para>Determines whether security checks are enabled
      in the current context.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
      <summary>
        <para> Gets a <see cref="T:System.EnterpriseServices.SecurityIdentity" /> object
   describing the direct caller of this method.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.OriginalCaller">
      <summary>
        <para> Gets a <see cref="T:System.EnterpriseServices.SecurityIdentity" /> describing the
 original caller.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
      <summary>
        <para> Gets the <see langword="NumCallers" /> value from the
<see langword="ISecurityCallContext" /> collection in COM+. </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
      <summary>
        <para>Gets the <see langword="MinAuthenticationLevel" /> value from the <see langword="ISecurityCallContext" /> collection in COM+.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.Callers">
      <summary>
        <para> Gets
      a <see cref="T:System.EnterpriseServices.SecurityCallers" /> object describing the caller. </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionOption">
      <summary>
        <para> Specifies the automatic transaction
      type requested by the component.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Disabled">
      <summary>
        <para>Ignores any transaction in the current context.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.NotSupported">
      <summary>
        <para> Creates the component in a context with no governing transaction.
      </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Supported">
      <summary>
        <para> Shares a transaction, if one exists.
      </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Required">
      <summary>
        <para> Shares a transaction, if one exists, and creates a new transaction, if necessary.
      </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.RequiresNew">
      <summary>
        <para> Creates the component with a new transaction, regardless of the state of the current context.
      </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionIsolationLevel">
      <summary>
        <para>
             Specifies the value of the 
            <see cref="T:System.EnterpriseServices.TransactionAttribute" />
            .
         </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Any">
      <summary>
        <para>The isolation level for the component is obtained from 
      the calling component's isolation level. If this is the root component, the
      isolation level used in <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" />.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadUncommitted">
      <summary>
        <para>Shared locks are issued and no exclusive locks are honored.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadCommitted">
      <summary>
        <para>Shared locks are held while the data is being read to avoid reading
      modified data, but the data can be changed before the end of the transaction,
      resulting in non repeatable reads or phantom data.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.RepeatableRead">
      <summary>
        <para>Locks are placed on all data that is used in a query, preventing
      other users from updating the data. Prevents non repeatable reads, but
      phantom rows are still possible.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable">
      <summary>
        <para>Prevents updating or inserting until the transaction is complete.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationOption">
      <summary>
        <para> Specifies the type of automatic
 synchronization requested by the component.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Disabled">
      <summary>
        <para> COM+ ignores the synchronization requirements of
      the component when determining context for the object.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.NotSupported">
      <summary>
        <para>An object with this value never participates in synchronization, regardless
      of the status of its caller. This setting is only available for
      components that are non transactional and do not use just-in-time (JIT) activation.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Supported">
      <summary>
        <para>An object with this value participates in synchronization,
      if it exists.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Required">
      <summary>
        <para> Ensures that all objects created from the component are synchronized.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.RequiresNew">
      <summary>
        <para>An object with this value must participate in a new
 synchronization where COM+ manages contexts and apartments on behalf of all
 components involved in the call.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ActivationOption">
      <summary>
        <para> Specifies the manner in which serviced
 components are activated in the application.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Library">
      <summary>
        <para> Specifies that serviced components in the marked application are
 activated in the creator's process.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Server">
      <summary>
        <para> Specifies that serviced components in the marked application are
      activated in a system-provided process.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionAttribute">
      <summary>
        <para>
             Specifies the type of transaction that is available
      to the attributed object. Permissible values are members of the 
            <see cref="T:System.EnterpriseServices.TransactionOption" />
            
      enumeration.
      
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.TransactionAttribute" />
   class,
   setting the component's requested transaction type to
<see cref="F:System.EnterpriseServices.TransactionOption.Required" />
.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor(System.EnterpriseServices.TransactionOption)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.TransactionAttribute" />
             class, specifying the transaction type.
         </para>
      </summary>
      <param name="val">
          The specified transaction type, a 
         <see cref="T:System.EnterpriseServices.TransactionOption" />
          value. 
      </param>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Value">
      <summary>
        <para>
            Gets or sets the 
            <see cref="T:System.EnterpriseServices.TransactionOption" />
             value
   for the transaction, optionally disabling the transaction service.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Isolation">
      <summary>
        <para>Gets or sets the transaction isolation level.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Timeout">
      <summary>
        <para>Gets or sets the time-out for this transaction.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.JustInTimeActivationAttribute">
      <summary>
        <para>Turns just-in-time (JIT) activation on or off. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> class. 
      The default constructor enables just-in-time (JIT) activation.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor(System.Boolean)">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> class, 
      optionally
      allowing the disabling of just-in-time (JIT) activation by passing
   <see langword="false " />
   as the parameter.</para>
      </summary>
      <param name="val">
        <see langword="true" />to enable JIT activation; otherwise,<see langword="false" />.</param>
    </member>
    <member name="P:System.EnterpriseServices.JustInTimeActivationAttribute.Value">
      <summary>
        <para>
            Gets the value of the 
            <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" />
             setting.
         </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationAttribute">
      <summary>
        <para> Sets the synchronization value of the component. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.SynchronizationAttribute" />
             class 
 with the default 
            <see cref="T:System.EnterpriseServices.SynchronizationOption" />
            .
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor(System.EnterpriseServices.SynchronizationOption)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.SynchronizationAttribute" />
             class 
 with the
 specified 
            <see cref="T:System.EnterpriseServices.SynchronizationOption" />
            .
         </para>
      </summary>
      <param name="val">
         One of the 
         <see cref="T:System.EnterpriseServices.SynchronizationOption" />
          values.
      </param>
    </member>
    <member name="P:System.EnterpriseServices.SynchronizationAttribute.Value">
      <summary>
        <para>
            Gets the current setting of the 
            <see cref="P:System.EnterpriseServices.SynchronizationAttribute.Value" />
             property.
         </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.MustRunInClientContextAttribute">
      <summary>
        <para> Forces the attributed object to be created in the context of the creator, if possible. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" />
   
   class, requiring creation of the object in
   the context of the creator.
   </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor(System.Boolean)">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" /> class,
      optionally not creating the object in the context of the creator.
      </para>
      </summary>
      <param name="val">
        <see langword="true" /> to create the object in the context of the creator; otherwise,<see langword="false" />.</param>
    </member>
    <member name="P:System.EnterpriseServices.MustRunInClientContextAttribute.Value">
      <summary>
        <para> Gets or sets a value indicating whether the attributed object
      is to be created in the context of the creator.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ConstructionEnabledAttribute">
      <summary>
        <para> Enables COM+ object construction support. This class cannot be inherited.
 </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" />
             class and
 initializes the default settings for 
            <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" />
             and 
            <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default" />
            .
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" />
             class, setting 
            <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" />
             to the specified value.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable COM+ object construction support; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default">
      <summary>
        <para> Gets or sets a default value for the constructor
 string.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled">
      <summary>
        <para>Gets or sets a value indicating whether COM+ object construction support is enabled.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ObjectPoolingAttribute">
      <summary>
        <para> Enables and configures object pooling for a
      component. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" />
   class and
   sets the
<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />
,
<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />
,
<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" />
, and
<see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout" />
properties to their default
values.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" />
             class and sets the 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />
             and 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" />
             properties.
         </para>
      </summary>
      <param name="minPoolSize">The minimum pool size.</param>
      <param name=" maxPoolSize">The maximum pool size.</param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" />
             class and sets the 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />
             property.
         </para>
      </summary>
      <param name="enable">
        <see langword="true" />
          to enable object pooling; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean,System.Int32,System.Int32)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" />
             class and sets the 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />
            , 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />
            , and 
            <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" />
            
properties.
         </para>
      </summary>
      <param name="enable">
        <see langword="true" />
          to enable object pooling; otherwise, 
         <see langword="false" />
         .
      </param>
      <param name=" minPoolSize">The minimum pool size.</param>
      <param name=" maxPoolSize">The maximum pool size.</param>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled">
      <summary>
        <para>Gets or sets a value indicating whether object pooling is enabled.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize">
      <summary>
        <para> Gets or sets the value for the maximum size of the pool.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize">
      <summary>
        <para>Gets or sets the value for the minimum size of the pool.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout">
      <summary>
        <para>Gets or sets the length of time to wait for an object to become available
      in the pool before throwing an exception. This value is in
      milliseconds.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.COMTIIntrinsicsAttribute">
      <summary>
        <para> Enables you to pass context properties from
      the COM Transaction Integrator (COMTI) into the COM+ context.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor">
      <summary>
         
   Initializes a new instance of the 
         <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" />
          class,
   setting the 
         <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" />
          property to

         <see langword="true" />
         .

      </summary>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" />
             class,
   enabling the setting of the 
            <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" />
            
   property.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          if the COMTI context properties are passed into the COM+ context; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value">
      <summary>
        <para>Gets a value indicating whether the COMTI context properties are
      passed into the COM+ context.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.IISIntrinsicsAttribute">
      <summary>
        <para> Enables access to ASP intrinsic values from
   <see cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" qualify="true" />
   . This class cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" />
             class,
   enabling access to the ASP intrinsic values.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" />
             class,
   optionally disabling access to the ASP intrinsic values.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable access to the ASP intrinsic values; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.IISIntrinsicsAttribute.Value">
      <summary>
        <para>Gets a value indicating whether access to the ASP intrinsic values is enabled.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.EventTrackingEnabledAttribute">
      <summary>
        <para> Enables event tracking for a component. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" />
             class,
   enabling event tracking.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" />
             class, 
 optionally disabling event tracking.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable event tracking; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value">
      <summary>
        <para> Gets the value of the
   <see cref="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value" />
   
   property, which indicates whether tracking is enabled.
   </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ExceptionClassAttribute">
      <summary>
        <para>Sets the queuing exception class for the queued class. 
 This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ExceptionClassAttribute.#ctor(System.String)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ExceptionClassAttribute" />
             class.
         </para>
      </summary>
      <param name="name">The name of the exception class for the player to activate and play back before the message is routed to the dead letter queue.</param>
    </member>
    <member name="P:System.EnterpriseServices.ExceptionClassAttribute.Value">
      <summary>
        <para> Gets the name of the exception class for
      the player to activate and play back before the message is routed to the dead letter queue.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.LoadBalancingSupportedAttribute">
      <summary>
        <para> Determines whether the component participates in load
      balancing, if the component load balancing service is installed and enabled on the server.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" />
             class, specifying load balancing support.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" />
             class, optionally disabling load 
 balancing support.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable load balancing support; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.LoadBalancingSupportedAttribute.Value">
      <summary>
        <para>Gets a value indicating whether load balancing support is enabled.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.EventClassAttribute">
      <summary>
        <para> Marks the attributed class as an event class. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.EventClassAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.EventClassAttribute" />
             class.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.FireInParallel">
      <summary>
        <para>Gets or sets a value indicating whether events are to be
 delivered to subscribers in parallel.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers">
      <summary>
        <para>Gets or sets a value indicating whether subscribers can be activated in the publisher's
 process.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.PublisherFilter">
      <summary>
        <para>Gets or sets a publisher filter for an event method.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.PrivateComponentAttribute">
      <summary>
        <para>Identifies a component as a private component that is only seen and activated by components in the
      same application. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.PrivateComponentAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.PrivateComponentAttribute" />
             class.
         </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.AutoCompleteAttribute">
      <summary>
        <para> Marks the attributed method as an 
   <see langword="AutoComplete" /> object. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" />
   class,
   specifying that the application should automatically call
<see cref="M:System.EnterpriseServices.ContextUtil.SetComplete" />
if the transaction completes
successfully.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor(System.Boolean)">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" />
   class,
   specifying whether COM+
<see langword="AutoComplete" />
is enabled.</para>
      </summary>
      <param name="val">
        <see langword="true" /> to enable <see langword="AutoComplete" /> in the COM+ object; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.EnterpriseServices.AutoCompleteAttribute.Value">
      <summary>
        <para> Gets a value indicating the setting of
      the
   <see langword="AutoComplete" />
   option in
   COM+.
   </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationActivationAttribute">
      <summary>
        <para> Specifies whether
      components in the assembly run in the creator's process or in
      a system process.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationActivationAttribute.#ctor(System.EnterpriseServices.ActivationOption)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationActivationAttribute" />
             class,
   setting
   the specified 
            <see cref="T:System.EnterpriseServices.ActivationOption" />
             value.
         </para>
      </summary>
      <param name="opt">
         One of the 
         <see cref="T:System.EnterpriseServices.ActivationOption" />
          values.
      </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.Value">
      <summary>
        <para>
             Gets the specified 
            <see cref="T:System.EnterpriseServices.ActivationOption" />
             value.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapVRoot">
      <summary>
        <para> Gets or sets
      a value representing a virtual root on the Web for the COM+ application.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapMailbox">
      <summary>
        <para>This property is not supported in the current version.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationNameAttribute">
      <summary>
        <para> Specifies the name of the COM+ application to be used for the install of the components in the
 assembly. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationNameAttribute.#ctor(System.String)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />
             
class, specifying the name of the COM+ application to be used for
the install of the components.
         </para>
      </summary>
      <param name="name">The name of the COM+ application.</param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationNameAttribute.Value">
      <summary>
        <para> Gets a value indicating the name of
      the COM+ application that contains the components in the assembly.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationIDAttribute">
      <summary>
        <para> Specifies the application ID (as a GUID) for this assembly. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationIDAttribute.#ctor(System.String)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationIDAttribute" />
             class 
 specifying the GUID representing
 the application ID for the COM+ application.
         </para>
      </summary>
      <param name="guid">The GUID associated with the COM+ application.</param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationIDAttribute.Value">
      <summary>
        <para>Gets the GUID of the COM+ application.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationQueuingAttribute">
      <summary>
        <para>Enables queuing support for the marked assembly and enables the application
      to read method calls from Message Queuing queues. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" />
             class, 
 enabling queuing support for the assembly and initializing 
            <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />
            , 
            <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />
            , and 
            <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />
            
 .
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled">
      <summary>
        <para>Gets or sets a value indicating whether queuing support is enabled.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled">
      <summary>
        <para>Gets or sets a value indicating whether the application
      will accept queued component calls from clients.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads">
      <summary>
        <para> Gets or sets the number 
 of threads used to extract messages from the queue
 and activate the corresponding component.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.InterfaceQueuingAttribute">
      <summary>
        <para> Enables queuing support for the marked interface. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
             class setting the 
            <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
             and 
            <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
             properties to their default values.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
             class,
 optionally disabling queuing support.
         </para>
      </summary>
      <param name="enabled">
        <see langword="true" />
          to enable queuing support; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled">
      <summary>
        <para>Gets or sets a value indicating whether queuing support is enabled.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface">
      <summary>
        <para>Gets or sets the name of the interface on which queuing is enabled.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.DescriptionAttribute">
      <summary>
        <para> Sets the description on an assembly (application), component, method, or interface. This class
      cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.DescriptionAttribute.#ctor(System.String)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.DescriptionAttribute" />
             class.
         </para>
      </summary>
      <param name="desc">The description of the assembly (application), component, method, or interface.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.IsTypeEventSource(System.Type)">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.IsTypeJITActivated(System.Type)">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.IsTypeServicedComponent(System.Type)">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.IsTypeObjectPooled(System.Type)">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.IsMethodAutoDone(System.Reflection.MemberInfo)">
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentInfo.HasSpecialMethodAttributes(System.Reflection.MemberInfo)">
    </member>
    <member name="T:System.EnterpriseServices.InstallationFlags">
      <summary>
        <para>Flags used with the <see cref="T:System.EnterpriseServices.RegistrationHelper" /> class.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Default">
      <summary>
        <para>Do the default installation, which does the configure,
      install, and register steps, and assumes that the application already exists.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ExpectExistingTypeLib">
      <summary>
        <para>Do not export the type library; one can be found either by
      the generated or supplied type library name.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.CreateTargetApplication">
      <summary>
        <para>Create the target application. Error if it already exists.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.FindOrCreateTargetApplication">
      <summary>
        <para>Create the application if it does not
      exist; otherwise use the existing application.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReconfigureExistingApplication">
      <summary>
        <para> If using an existing application, ensure that the
      properties on this application match those in the assembly.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ConfigureComponentsOnly">
      <summary>
        <para>Configure components only, do not configure methods or interfaces.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReportWarningsToConsole">
      <summary>
        <para>When alert text is encountered, write it to the Console.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Register">
      <summary>
        <para>Should not be used.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Install">
      <summary>
        <para>Should not be used.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Configure">
      <summary>
        <para>Should not be used.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationErrorInfo">
      <summary>
        <para>Retrieves extended error information about methods related to multiple COM+ objects. This also includes
      methods that install, import, and export COM+ applications and components. This class
      cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MajorRef">
      <summary>
        <para>Gets the key value for the object that caused the error, if applicable.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MinorRef">
      <summary>
        <para>Gets a precise specification of the item that caused the
      error, such as a property name.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.Name">
      <summary>
        <para>Gets the name of the object or file that caused the error.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode">
      <summary>
        <para>Gets the error code for the object or file.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorString">
      <summary>
        <para>Gets the description of the <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode" />.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationException">
      <summary>
        <para>The exception that is thrown when a registration error is detected.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationException" /> class with a specified error message.</para>
      </summary>
      <param name="msg">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" qualify="true" /> object with the error 
   information in <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" />.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" qualify="true" /> object containing serialized object data.</param>
      <param name=" ctx">The contextual information about the source or destination.</param>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationException.ErrorInfo">
      <summary>
        <para>Gets an array of <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" /> objects describing registration errors.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.IRegistrationHelper">
      <summary>
        <para>Installs and configures assemblies in the COM+ catalog.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
        <para>Installs the assembly into the COM+ catalog.</para>
      </summary>
      <param name="assembly">The assembly name as a file or the strong name of an assembly in the global assembly cache (GAC).</param>
      <param name=" application">The application parameter can be <see langword="null" />. If it is, the name of the application is automatically generated based on the name of the assembly or the <see langword="ApplicationName" /> attribute. If the application contains an <see langword="ApplicationID" /> attribute, the attribute takes precedence.</param>
      <param name=" tlb">The name of the output type library (TLB) file, or a string containing <see langword="null" /> if the registration helper is expected to generate the name. On call completion, the actual name used is placed in the parameter.</param>
      <param name=" installFlags">The installation options specified in the enumeration.</param>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>
        <para>Uninstalls the assembly from the COM+ catalog.</para>
      </summary>
      <param name="assembly">The assembly name as a file or the strong name of an assembly in the global assembly cache (GAC).</param>
      <param name=" application">The name of the COM+ application.</param>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationHelper">
      <summary>
        <para> Installs and
      configures assemblies in the COM+ catalog. This class
      cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
        <para> Installs the named assembly in a COM+ application.</para>
      </summary>
      <param name="assembly">The file name of the assembly to install.</param>
      <param name="application">The name of the COM+ application to install into. This parameter can be <see langword="null" />. If <see langword="null" />, the name of the application is generated based on the name of the assembly, then is returned. If the application contains an <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, the attribute takes precedence.</param>
      <param name="tlb">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string containing <see langword="null" /> if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion.</param>
      <param name="installFlags">The flags controlling the installation process.</param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>
        <para>Uninstalls the assembly from the given application.</para>
      </summary>
      <param name="assembly">The filename of the assembly to uninstall.</param>
      <param name="application">If this name is not <see langword="null" />, it is the name of the application containing the components in the assembly.</param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)">
      <summary>
        <para>Uninstalls the assembly from the given application.</para>
      </summary>
      <param name="assembly">The filename of the assembly to uninstall.</param>
      <param name="application">If this name is not <see langword="null" />, it is the name of the application containing the components in the assembly.</param>
      <param name="partition">The name of the partition. This parameter can be <see langword="null" />.</param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>
        <para>Installs the named assembly in a COM+ application.</para>
      </summary>
      <param name="assembly">The file name of the assembly to install.</param>
      <param name="application">The name of the COM+ application to install into. This parameter can be <see langword="null" />. If <see langword="null" />, the name of the application is generated based on the name of the assembly, then is returned. If the application contains an <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, the attribute takes precedence.</param>
      <param name="partition">The name of the partition. This parameter can be <see langword="null" />.</param>
      <param name="tlb">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string containing <see langword="null" /> if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion.</param>
      <param name="installFlags">The flags controlling the installation process.</param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.Activate">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.Deactivate">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ComponentAccessControlAttribute">
      <summary>
        <para> Enables security checking on calls to a component. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" />
             class.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" />
             class and
   sets the 
            <see cref="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value" />
             property indicating
   whether to
   enable COM+ security configuration.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable security checking on calls to a component; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value">
      <summary>
        <para>Gets a value indicating whether to enable security 
 checking on calls to a component.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.AccessChecksLevelOption">
      <summary>
        <para>Specifies the level of access checking for an application, either at the process level only or at all levels,
      including component, interface, and method levels.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.Application">
      <summary>
        <para>Enable access checks only at the process level. No access
      checks are made at the component, interface, or method level.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.ApplicationComponent">
      <summary>
        <para>Enable access checks at every level on calls into the application.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.AuthenticationOption">
      <summary>
        <para> Specifies the remote procedure call (RPC) authentication mechanism. Applicable
      only when the
   <see cref="T:System.EnterpriseServices.ActivationOption" />
   
   is set to
<see langword="Server" />
.
</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Default">
      <summary>
        <para>
             
      Uses the default authentication level for the specified authentication service. In COM+,
      this setting is provided by the 
            <see langword="DefaultAuthenticationLevel" />
             property in the
   
            <see langword="LocalComputer" />
             collection.
         </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.None">
      <summary>
 Authentication does not occur.
</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Connect">
      <summary>
        <para>Authenticates credentials only when the connection is made.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Call">
      <summary>
        <para>Authenticates credentials at the beginning of every call.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Packet">
      <summary>
        <para>Authenticates credentials and verifies that all call 
 data is received.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Integrity">
      <summary>
        <para>Authenticates credentials and verifies that no call data 
 has been modified in transit.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Privacy">
      <summary>
        <para>Authenticates credentials and encrypts the packet, 
 including the data and the sender's identity and signature.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ImpersonationLevelOption">
      <summary>
        <para>Specifies the level of impersonation allowed when calling
      targets of a server application.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Default">
      <summary>
        <para>
             Uses the default impersonation level for
      the specified authentication service. In COM+, this setting is provided
      by the 
            <see langword="DefaultImpersonationLevel" />
             property in the
   
            <see langword="LocalComputer" />
            
   
   collection.
         </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Anonymous">
      <summary>
 The client is anonymous to the server. The server
 process can impersonate the client, but the impersonation token does not contain
 any information about the client.
</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Identify">
      <summary>
        <para>The system default level. The server can obtain the 
 client's identity, and the server can impersonate the client to do ACL checks.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Impersonate">
      <summary>
 The server can impersonate the client's security
 context while acting on behalf of the client. The server can access local
 resources as the client.
</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Delegate">
      <summary>
        <para>The most powerful impersonation level. When this level 
 is selected, the server (whether local or remote) can impersonate the client's
 security context while acting on behalf of the client</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationAccessControlAttribute">
      <summary>
        <para> Allows security configuration for the library or server application housing the application. This class
      cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" />
             class.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" />
             class and 
 sets the 
            <see cref="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value" />
            
 property indicating whether to enable COM security
 configuration.
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to allow configuration of security; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value">
      <summary>
        <para> Gets or sets a value indicating
      whether to enable COM+ security configuration.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.AccessChecksLevel">
      <summary>
        <para> Gets or sets the access checking level to process level or to component level.
      </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Authentication">
      <summary>
        <para> Gets or sets the remote procedure call (RPC) authentication level.
      </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.ImpersonationLevel">
      <summary>
        <para> Gets or sets the impersonation level that is allowed for calling targets of
      this application.
      </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityRoleAttribute">
      <summary>
        <para>Configures a role for an application or component. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" />
             class and
   sets the 
            <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" />
            
   property.
         </para>
      </summary>
      <param name="role">A security role for the application, component, interface, or method.</param>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" />
             class and
   sets the 
            <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" />
             and 
            <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess" />
            
   properties.
         </para>
      </summary>
      <param name="role">A security role for the application, component, interface, or method.</param>
      <param name=" everyone">
        <see langword="true" />
          to require that the newly created role have the Everyone user group added as a user; otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Role">
      <summary>
        <para>Gets or sets the security role.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess">
      <summary>
        <para> Sets a value indicating whether to add
      the Everyone user group as a user.
      </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Description">
      <summary>
        <para>Gets or sets the role description.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.SecureMethodAttribute">
      <summary>
        <para> 
      Ensures that the infrastructure calls through an interface for a
      method or for each method in a class when using the security service.
      Classes need to use interfaces to use security services. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.SecureMethodAttribute.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.SecureMethodAttribute" />
   class.
   </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.MTx.CreateObject(System.String)">
      <summary>
        <para>
       Create an object given a progID.
    </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.MTx.CreateObject(System.Guid)">
      <summary>
        <para>
       Create an object given a class ID.
    </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.MTx.SafeRef(System.Object)">
      <summary>
        <para>
        Create an object reference that is safe to pass back
        to a client.
    </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags">
      <summary>
        <para>Describes the origin of a Compensating Resource Manager (CRM) log record. </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ForgetTarget">
      <summary>
        <para>Indicates the delivered record should be forgotten. </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringPrepare">
      <summary>
        <para>Log record was written during Prepare.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringCommit">
      <summary>
        <para>Log record was written during commit.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringAbort">
      <summary>
        <para>Log record was written during abort.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDurringRecovery">
      <summary>
        <para>Log record was written during recovery.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringReplay">
      <summary>
        <para>Log record was written during Replay.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ReplayInProgress">
      <summary>
        <para>Log record was written when replay was in progress.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions">
      <summary>
        <para>Specifies flags that control which phases of transaction completion should
      be received by the Compensating Resource Manager (CRM) Compensator, and whether
      recovery should fail if questionable transactions remain after recovery has been
      attempted.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.PreparePhase">
      <summary>
        <para> Represents the prepare phase.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.CommitPhase">
      <summary>
        <para> Represents the commit phase.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AbortPhase">
      <summary>
        <para> Represents the abort phase.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AllPhases">
      <summary>
        <para> Represents all phases.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.FailIfInDoubtsRemain">
      <summary>
        <para>Fails if in-doubt transactions remain after recovery has been attempted.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.TransactionState">
      <summary>
        <para> Specifies the state of the current Compensating Resource Manager (CRM) transaction.
 </para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Active">
      <summary>
        <para>The transaction is active.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Committed">
      <summary>
        <para>The transaction is commited.</para>
      </summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Aborted">
      <summary>
 The transaction is aborted.
</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Indoubt">
      <summary>
        <para> The transaction is in-doubt.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecord">
      <summary>
        <para> Represents an unstructured log record delivered as a
      COM+
   <see langword="CrmLogRecordRead" />
   structure. This class
   cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Flags">
      <summary>
        <para>Gets a value indicating when the log record was written.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Sequence">
      <summary>
        <para>The sequence number of the log record.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Record">
      <summary>
        <para>Gets the log record user data.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Compensator">
      <summary>
        <para> Represents the base class for all Compensating Resource Manager (CRM) Compensators.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" />
             class.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare">
      <summary>
        <para> Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase
      of the transaction completion and the upcoming delivery of records.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
        <para>Delivers a log record in forward order during the prepare phase.</para>
      </summary>
      <param name="rec">The log record to forward.</param>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare">
      <summary>
        <para> Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log
      records available during the prepare phase.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)">
      <summary>
        <para> Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of
      the transaction completion and the upcoming delivery of records.</para>
      </summary>
      <param name="fRecovery">
        <see langword="true" />
          to begin commit phase; otherwise, 
         <see langword="false" />
         .
      </param>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
        <para>Delivers a log record in forward order during the commit phase.</para>
      </summary>
      <param name="rec">The log record to forward.</param>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit">
      <summary>
        <para>Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all
      the log records available during the commit phase.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)">
      <summary>
        <para> Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase
      of the transaction completion, and the upcoming delivery of records.</para>
      </summary>
      <param name="fRecovery">
        <see langword="true" />
          to begin abort phase; otherwise, 
         <see langword="false" />
         .
      </param>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>
        <para>Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</para>
      </summary>
      <param name="rec">The log record to be delivered.</param>
      <returns>
        <para>
          <see langword="true" />
             if the log record is delivered; otherwise,

            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort">
      <summary>
        <para>Notifies the Compensating Resource Manager (CRM) Compensator that it has received all
      the log records available during the abort phase.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
             if successful; otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk">
      <summary>
        <para>
            Gets a value representing the Compensating Resource Manager (CRM) 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />
             object.
         </para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Clerk">
      <summary>
        <para> Writes records of transactional actions
      to a log.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />
   class.
   </para>
      </summary>
      <param name="compensator">A type representing the compensator.</param>
      <param name=" description">The description of the compensator.</param>
      <param name=" flags">A bitwise combination of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />values.</param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" />
             class.
         </para>
      </summary>
      <param name="compensator">The name of the compensator.</param>
      <param name=" description">The description of the concentrator.</param>
      <param name=" flags">
         A bitwise combination of the 
         <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" />
          values.
      </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog">
      <summary>
        <para> Forces all log records to disk. </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord">
      <summary>
        <para>Does not deliver the last log record that was written by this
      instance of this interface.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort">
      <summary>
        <para>Performs an immediate abort call on the transaction.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)">
      <summary>
        <para>Writes unstructured log records to the log.</para>
      </summary>
      <param name="record">The log record to write to the log.</param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.Finalize">
      <summary>
        <para> Frees the resources of the current Clerk before
      it is reclaimed by the garbage collector.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW">
      <summary>
        <para>Gets a value representing the transaction unit of work (UOW).</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount">
      <summary>
        <para>Gets the number of log records.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor">
      <summary>
        <para> Contains a snapshot of all Clerks active in the process.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
             class.
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Populate">
      <summary>
        <para>Gets the Clerks collection object, which is a snapshot of the current
      state of the Clerks.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.GetEnumerator">
      <summary>
        <para> Returns the enumeration of the clerks in the 
      Compensating Resource Manager (CRM) monitor collection.</para>
      </summary>
      <returns>
        <para>An enumerator describing the clerks in the collection. </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Finalize">
      <summary>
        <para>
            Frees the resources of the current 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
             
before it is reclaimed by the garbage collector.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Count">
      <summary>
        <para>Gets the count of the Clerk monitors in the Compensating
      Resource Manager (CRM) monitor collection.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.Int32)">
      <summary>
        <para>
            Gets the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" />
             object
   for this 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
            .
         </para>
      </summary>
      <param name="index">
         The integer index identifying the 
         <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.String)">
      <summary>
        <para>
            Gets the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" />
             object
   for this 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
            .
         </para>
      </summary>
      <param name="index">
         The numeric index identifying the 
         <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />
         .
      </param>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo">
      <summary>
        <para> Contains information describing an active Compensating Resource Manager (CRM) Clerk object.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Finalize">
      <summary>
        <para>
            Frees the resources of the current 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" />
             before
   it is reclaimed by the garbage collector.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Clerk">
      <summary>
        <para> Gets
   <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" />
   for the current Clerk.
   </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.InstanceId">
      <summary>
        <para>Gets the instance class ID (CLSID) of the 
      current Compensating Resource Manager (CRM) Clerk.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Compensator">
      <summary>
        <para>Gets the ProgId of the Compensating Resource Manager (CRM) Compensator for the current CRM Clerk.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Description">
      <summary>
        <para>
            Gets the description of the Compensating Resource 
      Manager (CRM) Compensator for the current CRM Clerk. The description string is
      the string that was provided by the
   
            <see langword="ICrmLogControl::RegisterCompensator" />
             
   method.
         </para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.TransactionUOW">
      <summary>
        <para>Gets the Unit Of Work (UOW) of the transaction for the current Compensating Resource
      Manager (CRM) Clerk.</para>
      </summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.ActivityId">
      <summary>
        <para> Gets the activity ID of the current Compensating
      Resource Manager (CRM) Worker.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute">
      <summary>
        <para> Enables Compensating Resource Manger (CRM) on the tagged application.
      </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" />
             class, 
 setting the 
            <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" />
             property
 to 
            <see langword="true" />
             .
         </para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor(System.Boolean)">
      <summary>
        <para>
            Initializes a new instance of the 
            <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" />
             class,
   optionally setting the 
            <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" />
            
   property to 
            <see langword="false" />
            .
         </para>
      </summary>
      <param name="val">
        <see langword="true" />
          to enable Compensating Resource Manager (CRM); otherwise, 
         <see langword="false" />
         .
      </param>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value">
      <summary>
        <para>Enables or disables Compensating Resource Manager (CRM) on the tagged application.</para>
      </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.AssemblyLocator">
    </member>
    <member name="T:System.EnterpriseServices.ResourcePool">
      <summary>
        <para>Stores objects in the current transaction. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.#ctor(System.EnterpriseServices.ResourcePool.TransactionEndDelegate)">
      <summary>
        <para> Initializes a new instance of the
   <see cref="T:System.EnterpriseServices.ResourcePool" />
   class.
   </para>
      </summary>
      <param name="cb">A <see cref="T:System.EnterpriseServices.ResourcePool.TransactionEndDelegate" /> , that is called when a transaction is finished. All items currently stored in the transaction are handed back to the user through the delegate.</param>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.PutResource(System.Object)">
      <summary>
        <para>Adds a resource to the current transaction.</para>
      </summary>
      <param name="resource">The resource to add.</param>
      <returns>
        <para>
          <see langword="true" />
             if the resource object was added to the pool;
   otherwise, 
            <see langword="false" />
            .
         </para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.GetResource">
      <summary>
        <para>Gets a resource from the current transaction.</para>
      </summary>
      <returns>
        <para>The resource object.</para>
      </returns>
    </member>
    <member name="T:System.EnterpriseServices.BYOT">
      <summary>
        <para>Wraps the COM+ <see langword="ByotServerEx" /> class and 
   the COM+ DTC interfaces <see langword="ICreateWithTransactionEx" /> and
<see langword="ICreateWithTipTransactionEx" /> . This class
   cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)">
      <summary>
        <para>Creates an object that is enlisted within a manual
      transaction.</para>
      </summary>
      <param name="transaction">The <see langword="ITransaction" /> Interface object specifying a transaction.</param>
      <param name=" t">The specified type.</param>
      <returns>
        <para>The requested transaction.</para>
      </returns>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)">
      <summary>
        <para>Creates an object that is enlisted within a manual
      transaction using the Transaction Internet Protocol (TIP).</para>
      </summary>
      <param name="url">A TIP URL specifying a transaction.</param>
      <param name=" t">The type.</param>
      <returns>
        <para> The requested transaction.</para>
      </returns>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapPublisher">
      <summary>
		Interface definition for publishing COM SOAP Objects
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapIISVRoot">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Create(System.String,System.String,System.String,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Delete(System.String,System.String,System.String,System.String@)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapMetadata">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.ComSoapPublishError">
      <summary>
		Error handler for ComSoapPublish
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComSoapPublishError.Report(System.String)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClientRemotingConfig">
      <summary>
		Creating Client XML format remoting configuration file
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.ServerWebConfig">
      <summary>
		Producing/Editing Web.Config file
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.IISVirtualRoot">
      <summary>
		Creates and Deletes IIS 6.0 Virtual Roots
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Create(System.String,System.String,System.String,System.String@)">
      <summary>
            Creates an IIS 6.0 Virtual Root
            </summary>
      <param name="RootWeb">
      </param>
      <param name="PhysicalDirectory">
      </param>
      <param name="VirtualDirectory">
      </param>
      <param name="Error">
      </param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Delete(System.String,System.String,System.String,System.String@)">
      <summary>
            Deletes an IIS 6.0 Virtual Root
            </summary>
      <param name="WebRoot">
      </param>
      <param name="PhysicalDirectory">
      </param>
      <param name="VirtualDirectory">
      </param>
      <param name="Error">
      </param>
    </member>
    <member name="T:System.EnterpriseServices.Internal.Publish">
      <summary>
		Publishes COM Interfaces for SOAP Publication of COM+ objects
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
    </member>
    <member name="T:System.EnterpriseServices.Internal.GenerateMetadata">
      <summary>
		Generates CLR Metadata for a COM+ component
		</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)">
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])">
    </member>
    <member name="T:System.EnterpriseServices.Internal.IClrObjectFactory">
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
      <summary>
        assembly and type only - use configuration file
        </summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)">
      <summary>
            moniker passes in all configuration information
            </summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClrObjectFactory">
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
    </member>
  </members>
</doc>