;
; main.mir.ini
;
; This file defines language specific settings for use in the build process.
; This file includes the general settings from the include file listed below for
; all languages. This include file is designed as site specific. Redmond and
; Dublin will have seperate general include files.
;
; This file defines many of the optional settings used by a VBL or different
; language build process, centralizing them in one place.
;
; You may add new fields as appropriate, with comments clearly stating the
; purpose and valid entries the field may contain, and preferrably and example.
;
; Finally, please call the script GetIniSetting.cmd to retrieve data from this
; file to a cmd script, or alternately use PlGetIniSetting.pm to retrieve data
; to a perl script. The &MyGetField( $FieldName, $Language, $BranchName ) sub
; will return the field's value or undef if not found.
;
; Please note that any fields you do not have reason to use may be simply
; commented out with a semicolon.
;
;
;
;
; --- BEGIN SETTINGS --
;
;
;
; Includes
;
; Purpose: Include general settings for all languages.
;
; Example: include=redmond.intl.ini
;
; #include redmond.intl.ini
;
;
;
; template.branch.ini
;
; This file defines many of the optional settings used by a VBL or different
; language build process, centralizing them in one place.
;
; You may add new fields as appropriate, with comments clearly stating the
; purpose and valid entries the field may contain, and preferrably and example.
;
; Finally, please call the script GetIniSetting.cmd to retrieve data from this
; file to a cmd script, or alternately use PlGetIniSetting.pm to retrieve data
; to a perl script. The &MyGetField( $FieldName, $Language, $BranchName ) sub
; will return the field's value or undef if not found.
;
; Please note that any fields you do not have reason to use may be simply
; commented out with a semicolon.
;
;
;
;
; --- BEGIN SETTINGS --
;
;
;
; ReleaseServers::<archtype>
;
; Purpose: The ReleaseServers field is used to determine what machines to
;          propagate builds to through release.pl. The <archtype> may be any
;          valid architecture and debug type. If no field is given for a given
;          archtype, no builds are propagated for that build type.
;
; Example: ReleaseServers::IA64FRE=2kbldx1 2kbldx3 ntrelic2 2kbldx8
;
ReleaseServers::X86FRE=plocrel1
ReleaseServers::X86CHK=plocrel1
ReleaseServers::IA64FRE=plocrel1
;ReleaseServers::IA64CHK=
;
;
;
;
;
; ConglomerationServers
;
; Purpose: Both the DDK and Symbols CDs require a conglomeration to a single
;          machine from all four archtypes. This field will determine what
;          machines are to be used in this way. If the field is not defined,
;          the first machine for the current branch from BuildMachines.txt
;          is used.
;
; Example: ConglomerationServers=2kbldx8 ntburnlab8
;
ConglomerationServers=intblds10
;
;
;
;
;
; EnumeratedDFSServers
;
; Purpose: This field enumerates the actual DFS servers in a domain-based DFS
;          environment. This is used by raiseall.pl to write quality files
;          to the DFS directory structure through a "writer$" share on the
;          enumerated machines. If this field is not defined, the DFS is
;          assumed to be non-domain-based, and the writer$ share will be used
;          against the DFSRootName defined above.
;
; Example: EnumeratedDFSServers=winbuilds winbuilds2 winbuilds3
;
EnumeratedDFSServers=winbuilds winbuilds2 winbuilds3
;
;
;
;
;
; BuildMachineFreeSpace::<machine name>
;
; Purpose: This field determines how many gigabytes are required to be free on
;          your build machines after postbuild has completed.
;
; Example: BuildMachineFreeSpace::ROBSVBL1=10
;
BuildMachineFreeSpace::bld_wpxc1=10
BuildMachineFreeSpace::bld_wpxf1=10
;
;
;
;
;
; BuildMachineBuildsToKeep::<machine name>
; 
; Purpose: This field determines how many full builds to keep on each build
;          machine, no matter what.
;
; Example: BuildMachineBuildsToKeep::ROBSVBL1=6
;
BuildMachineBuildsToKeep::bld_wpxc1=4
;
;
;
;
; BuildMachines::<archtype>
;
; Purpose: Deletebuild needs to know what the build machines are.
;
; Example: BuildsMachines::IA64FRE=IA64FREBLD
;
BuildMachines::X86FRE=bld_wpxc1
BuildMachines::X86CHK=bld_wpxc1
BuildMachines::IA64FRE=bld_wpxc1
;BuildMachines::IA64CHK=bld_wpxc1
;
;
;
;
;
; ReleaseServerFreeSpace::<machine name>
;
; Purpose: This field determines how many gigabytes are required to be free on
;          a given release server during propagation.
;
; Example: ReleaseServerFreeSpace::2kbldx=10
;
ReleaseServerFreeSpace::plocrel1=10
;
;
;
;
; ReleaseServerBuildsToKeep::<machine name>::<archtype>
; 
; Purpose: This field determines how many full builds to keep on each release
;          server for the specified architecture type.  No matter what, this
;          number of builds will stay on the release server.
;
; Example: ReleaseServerBuildsToKeep::MIKESREL1::X86FRE=6
;
ReleaseServerBuildsToKeep::plocrel1::X86FRE=2
ReleaseServerBuildsToKeep::plocrel1::X86CHK=1
;ReleaseServerBuildsToKeep::plocrel1::IA64CHK=2
;
;
;
;
; PrimaryReleaseServer
;
; Purpose: If only one release server is to be raised via DFS, this field will
;          denote which server will be chosen. If this field is not set, there
;          is no restriction to the number of servers that will be raised.
;
; Example: PrimaryReleaseServer=2kbldx8
;
; PrimaryReleaseServer=ntrelic2
;
;
;
;
;
; SecondaryReleaseServer
;
; Purpose: If a primary release server is selected, and has a small storage
;          capacity, when builds are lowered from the primary through DFS the
;          secondary release server will be raised if the lowered build is
;          still present on the secondary. If no primary release server is
;          given, this field has no meaning.
;
; Example: SecondaryReleaseServer=ntrelic2
;
; SecondaryReleaseServer=ntrelic2
;
;
;
;
; ReleaseDir
;
; Purpose: Set this parameter to the release share name on the machine.
;
; Example: ReleaseDir=release
;
ReleaseDir=release
;
;
;
;
;
;
; SymCopyErrReceiver
;
; Purpose: If an error is seen during symbol copy we will send email to this alias
;
; Example: SymCopyErrReceiver=ntblus
;
SymCopyErrReceiver=ntblus
;
;
;
;
;
; PlocPath
;
; Purpose: set the root path for pseudo and mirror builds
;
; Example: PlocPath=\nt\plocbranch\ploc
;
PlocPath=\nt\ploc
;
;
;
;
;
; CodePage
;
; Purpose: set the value of CodePage
;
; Example: CodePage=1250
;
CodePage=1250
;
;
;
;
; ReleaseDrive
;
; Purpose: define release drive for each release server
;
; Example: ReleaseDrive::INTBLDS10=D
;
ReleaseDrive::PLOCREL1=D
ReleaseDrive::INTBLDS10=D
;
;
;
;
;
;
; UAFilePath
;
; Purpose: set this path for pseudo and mirrored builds
;
; Example: UAFilePath=\\grandcentral\vss\balticseavss\drop2slm\whpseudoloc
;
UAFilePath=\\grandcentral\vss\balticseavss\drop2slm\whpseudoloc
;
;
; DFSLatestServerSkus
;
; Purpose: When raising to latest.* from this branch, skus classified as
;          server should be taken from this branch
;
; Example: DfsLatestServerSkus=1
;
;DFSLatestServerSkus=1
;
;
; DFSLatestClientSkus
;
; Purpose: When raising to latest.* from this branch, skus classified as
;          client should be taken from this branch
;
; Example: DfsLatestClientSkus=1
;
DFSLatestClientSkus=1
;
;
;
;
;
;
;
; SymFarm
;
; Purpose: The SymFarm field is used as a central location for all platforms
;          to store symbols for indexing and archiving. This is done primarily
;          through indexsym.pm and symcopy.cmd. If no symbols farm is given,
;          symbols will remain archived on the build machines or release servers.
;
; BUGBUG The fact that we have a cluster for symfarm is a problem here.  This still has to be worked out
;
;
; Example: SymFarm=\\symsrv\symfarm
;
SymFarm=

#include mainlab.usa.common.ini