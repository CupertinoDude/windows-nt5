; DFSRootName
;
; Purpose: The DFSRootName field is used when raising builds via a DFS to a
;          specific build quality using raiseall.pl. If this field is not
;          defined, no raising will be performed.
;
; Example: DFSRootName=\\ntdev\release
;
DFSRootName=\\ntdev\release
;
;
; DFSAlternateLatestBranchName
;
; Purpose: Specifies the location off of DFSRootName for latest.* links in this
;          branch.  Raiseall uses the branch name (by default) when creating the
;          numbered links, but as other scripts in the organization rely on legacy
;          behavior, when creating the latest.* links an alternate path can be used.
;
; Example: DFSAlternateLatestBranchName=main
;
DFSAlternateLatestBranchName=main
;
; SymFarm
;
; Purpose: The SymFarm field is used as a central location for all platforms
;          to store symbols for indexing and archiving. This is done primarily
;          through indexsym.pm and symcopy.cmd. If no symbols farm is given,
;          symbols will remain archived on the build machines or release servers.
;
; BUGBUG The fact that we have a cluster for symfarm is a problem here.  This still has to be worked out
;
;
; Example: SymFarm=\\symsrv\symfarm
;
SymFarm=\\symsrv\symfarm 
;
;
; SymfarmFreeSpace::<machine name>
;
; Purpose: This field determines how many gigabytes are required to be free on
;          your symbol farm
;
; Example: SymfarmFreeSpace::SYMSRV=10
;
SymfarmFreeSpace::SYMSRV_A=12
SymfarmFreeSpace::SYMSRV_B=12
SymfarmFreeSpace::SYMSRV_C=12
SymfarmFreeSpace::SYMSRV_D=12
;
;
; SymFarmArchsToDelete::<machine name>
; 
; Purpose: This field determines which architectures to delete on the symbol farm
;
; Example: SymFarmArchsToDelete::SYMFARM_MAIN=x86fre ia64fre
;
SymFarmArchsToDelete::SYMSRV_A=x86fre x86chk ia64fre ia64chk
SymFarmArchsToDelete::SYMSRV_B=x86fre x86chk ia64fre ia64chk
SymFarmArchsToDelete::SYMSRV_C=x86fre x86chk ia64fre ia64chk
SymFarmArchsToDelete::SYMSRV_D=x86fre x86chk ia64fre ia64chk
;
;
; SymFarmBuildsToKeep::<machine name>::<archtype>
; 
; Purpose: This field determines how many full builds to keep on the symbol farm
;          for the specified architecture type.  No matter what, this
;          number of builds will stay on the symbol farm
;
; Example: SymFarmBuildsToKeep::SYMFARM_LAB3::X86FRE=6
;
SymFarmBuildsToKeep::SYMSRV_A::X86FRE=15
SymFarmBuildsToKeep::SYMSRV_A::X86CHK=10
SymFarmBuildsToKeep::SYMSRV_A::IA64FRE=15
SymFarmBuildsToKeep::SYMSRV_A::IA64CHK=10
SymFarmBuildsToKeep::SYMSRV_B::X86FRE=15
SymFarmBuildsToKeep::SYMSRV_B::X86CHK=10
SymFarmBuildsToKeep::SYMSRV_B::IA64FRE=15
SymFarmBuildsToKeep::SYMSRV_B::IA64CHK=10
SymFarmBuildsToKeep::SYMSRV_C::X86FRE=15
SymFarmBuildsToKeep::SYMSRV_C::X86CHK=10
SymFarmBuildsToKeep::SYMSRV_C::IA64FRE=15
SymFarmBuildsToKeep::SYMSRV_C::IA64CHK=10
SymFarmBuildsToKeep::SYMSRV_D::X86FRE=15
SymFarmBuildsToKeep::SYMSRV_D::X86CHK=10
SymFarmBuildsToKeep::SYMSRV_D::IA64FRE=15
SymFarmBuildsToKeep::SYMSRV_D::IA64CHK=10
;
;
; SymIndexServer
;
; Purpose: This field denotes the machine which holds the indexing
;          information from a build's symbols. If this field is not defined,
;          symbols are not indexed. This machine share is used in symindex.pm.
;
; Example: SymIndexServer=\\symbols\build$
;
SymIndexServer=\\symbols\build$
;
;
; DFSSemaphore
;
; Purpose: If DFSRoot is defined, all raising commands will check this
;          share for a semaphore. If the semaphore is present, the current
;          DFS command will block execution until it can obtain the
;          semaphore.
;
; Example: DFSSemaphore=\\ntrelic2\semaphore
;
DFSSemaphore=\\ntrel02\semaphore
;
;
; BuildMachineFreeSpace::<machine name>
;
; Purpose: This field determines how many gigabytes are required to be free on
;          your build machines after postbuild has completed.
;
; Example: BuildMachineFreeSpace::ROBSVBL1=10
;
BuildMachineFreeSpace::BLD_WDXF1=10
BuildMachineFreeSpace::BLD_WDXC1=10
BuildMachineFreeSpace::BLD_WDIF1=10
BuildMachineFreeSpace::BLD_WDIC1=10
BuildMachineFreeSpace::BLD_WQXF1=10
BuildMachineFreeSpace::BLD_WQXC1=10
BuildMachineFreeSpace::BLD_WQIF1=10
BuildMachineFreeSpace::BLD_WQIC1=10
BuildMachineFreeSpace::X86FRE00=10
BuildMachineFreeSpace::X86CHK00=10
BuildMachineFreeSpace::I64FRE00=10
BuildMachineFreeSpace::I64CHK00=10
;
;
; BuildMachineBuildsToKeep::<machine name>
; 
; Purpose: This field determines how many full builds to keep on each build
;          machine, no matter what.
;
; Example: BuildMachineBuildsToKeep::ROBSVBL1=6
;
BuildMachineBuildsToKeep::BLD_WDXF1=2
BuildMachineBuildsToKeep::BLD_WDXC1=2
BuildMachineBuildsToKeep::BLD_WDIF1=2
BuildMachineBuildsToKeep::BLD_WDIC1=2
BuildMachineBuildsToKeep::BLD_WQXF1=2
BuildMachineBuildsToKeep::BLD_WQXC1=2
BuildMachineBuildsToKeep::BLD_WQIF1=2
BuildMachineBuildsToKeep::BLD_WQIC1=2
BuildMachineBuildsToKeep::X86FRE00=2
BuildMachineBuildsToKeep::X86CHK00=2
BuildMachineBuildsToKeep::I64FRE00=2
BuildMachineBuildsToKeep::I64CHK00=2
;
;
; ReleaseServerFreeSpace::<machine name>
;
; Purpose: This field determines how many gigabytes are required to be free on
;          a given release server during propagation.
;
; Example: ReleaseServerFreeSpace::2kbldx=10
;
ReleaseServerFreeSpace::ntrel01=14
ReleaseServerFreeSpace::ntrel02=14
ReleaseServerFreeSpace::ntrel03=14
ReleaseServerFreeSpace::2kbldx1=10
ReleaseServerFreeSpace::2kbldx2=10
ReleaseServerFreeSpace::2kbldx3=10
ReleaseServerFreeSpace::2kbldx4=10
ReleaseServerFreeSpace::ntarchive1=10
ReleaseServerFreeSpace::intblds10=10
ReleaseServerFreeSpace::ntburnlab08=10
;
;
; ReleaseServerBuildsToKeep::<machine name>::<archtype>
; 
; Purpose: This field determines how many full builds to keep on each release
;          server for the specified architecture type.  No matter what, this
;          number of builds will stay on the release server.
;
; Example: ReleaseServerBuildsToKeep::MIKESREL1::X86FRE=6
;
ReleaseServerBuildsToKeep::ntrel01::X86FRE=4
ReleaseServerBuildsToKeep::ntrel01::X86CHK=4
ReleaseServerBuildsToKeep::ntrel01::IA64FRE=4
ReleaseServerBuildsToKeep::ntrel01::IA64CHK=4
ReleaseServerBuildsToKeep::ntrel02::X86CHK=2
ReleaseServerBuildsToKeep::ntrel02::IA64FRE=2
ReleaseServerBuildsToKeep::ntrel02::IA64CHK=2
ReleaseServerBuildsToKeep::ntrel03::X86FRE=2
ReleaseServerBuildsToKeep::2kbldx1::X86FRE=2
ReleaseServerBuildsToKeep::2kbldx2::X86FRE=2
ReleaseServerBuildsToKeep::2kbldx3::X86FRE=2
ReleaseServerBuildsToKeep::2kbldx4::IA64FRE=2
ReleaseServerBuildsToKeep::ntarchive1::X86FRE=4
ReleaseServerBuildsToKeep::ntarchive1::X86CHK=4
ReleaseServerBuildsToKeep::ntarchive1::IA64FRE=4
ReleaseServerBuildsToKeep::ntarchive1::IA64CHK=4
ReleaseServerBuildsToKeep::intblds10::X86FRE=3
ReleaseServerBuildsToKeep::intblds10::IA64FRE=3
ReleaseServerBuildsToKeep::ntburnlab08::X86FRE=2
ReleaseServerBuildsToKeep::ntburnlab08::X86CHK=2
ReleaseServerBuildsToKeep::ntburnlab08::IA64FRE=2
ReleaseServerBuildsToKeep::ntburnlab08::IA64CHK=2
;
;
; ReleaseDrive
;
; Purpose: define release drive for each release server
;
; Example: ReleaseDrive::INTBLDS10=D
;
;ReleaseDrive::2kbldx1=D
;ReleaseDrive::2kbldx2=D
;ReleaseDrive::2kbldx3=D
;ReleaseDrive::2kbldx4=D
;ReleaseDrive::ntarchive1=D
;ReleaseDrive::ntburnlab08=D
;ReleaseDrive::intblds10=D
;
;
; BVTMembers
;
; Purpose: If you raise through DFS and wish to set permissions on BVT shares
;          to a select group of people, set their accounts here.
;
; Example: BVTMembers=ntdev\ntbuild ntdev\ntbvtest redmond\ntbvtest
;
BVTMembers=ntdev\ntbuild ntdev\ntbvtest redmond\ntbvtest ntdev\gersys ntdev\tokuroy
;
;
; JoinDomain
;
; Purpose: If you need join this machine to the domain automatically,
;          set the domain / account and its password here
;
; Example: JoinDomain=<domain> <account> <password>
;
JoinDomain=ntdev winbld cp1cc1n1?
;
;
; ReleaseAccess
;
; Purpose: The users or groups that should have read access to releases
;
; Example: ntdev\ro_sd ntdev\rw_sd
;
ReleaseAccess=ntdev\ntbuild NTREL_WIN_LOCAL NTREL_CEO_LOCAL NTREL_EX_LOCAL
;
;
; BuildMachineReleaseAccess
;
; Purpose: The users or groups that should have read access to releases on the 
;          build machines. ReleaseAccess is used if this is not set.
;
; Example: ntdev\ntbuild
;
BuildMachineReleaseAccess=ntdev\ntbuild
;
;
; SymCopyErrReceiver
;
; Purpose: If an error is seen during symbol copy we will send email to this alias
;
; Example: SymCopyErrReceiver=ntblus
;
SymCopyErrReceiver=ntblus