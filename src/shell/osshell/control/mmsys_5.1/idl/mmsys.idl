// mmsys.idl : IDL source for mmsys.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (mmsys.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(89659D1F-A26F-4896-A6FC-C927AACDAFFC),
		dual,
		helpstring("IMixers Interface"),
		pointer_default(unique)
	]
	interface IMixers : IDispatch
	{
		[propget, id(1), helpstring("property TaskBarVolumeIcon")] HRESULT TaskBarVolumeIcon ([out, retval] BOOL *pVal);
		[propput, id(1), helpstring("property TaskBarVolumeIcon")] HRESULT TaskBarVolumeIcon ([in] BOOL newVal);
		[propget, id(2), helpstring("property NumDevices")] HRESULT NumDevices ([out, retval] UINT *pVal);
		[id(3), helpstring("method QueryMixerProperty")] HRESULT QueryMixerProperty ([in] UINT uiMixID, [in] BSTR bstrProp, [out, retval] VARIANT* pvarValue);
		[id(4), helpstring("method QueryDestinationProperty")] HRESULT QueryDestinationProperty ([in] UINT uiMixID, [in] UINT uiDestID, [in] BSTR bstrProp, [out, retval] VARIANT* pvarValue);
	};
	[
		object,
		uuid(F225C167-BAF3-4A97-9E01-48F88936C82E),
		dual,
		helpstring("ISchemes Interface"),
		pointer_default(unique)
	]
	interface ISchemes : IDispatch
	{
		[propget, id(1), helpstring("property Default")] HRESULT Default ([out, retval] BSTR* pbstrDefault);
		[propput, id(1), helpstring("property Default")] HRESULT Default ([in] BSTR bstrDefault);
		[propget, id(2), helpstring("property NumSchemes")] HRESULT NumSchemes ([out, retval] UINT* puiSchemes);
		[id(3), helpstring("method SaveScheme")] HRESULT SaveScheme ([in] BSTR bstrOldScheme, [in] BOOL fReplace, [in] BSTR bstrNewScheme);
		[id(4), helpstring("method DeleteScheme")] HRESULT DeleteScheme ([in] BSTR bstrDeleteScheme);
		[id(5), helpstring("method GetSchemeName")] HRESULT GetSchemeName ([in] UINT uiSchemeID, [out, retval] VARIANT* pvarSchemeName);
	};
	[
		object,
		uuid(CEA8898C-9CA2-4023-90A0-B5FE9604776E),
		dual,
		helpstring("IPreferredDevices Interface"),
		pointer_default(unique)
	]
	interface IPreferredDevices : IDispatch
	{
		[propget, id(1), helpstring("property PreferredOnly")] HRESULT PreferredOnly([out, retval] BOOL *pVal);
		[propput, id(1), helpstring("property PreferredOnly")] HRESULT PreferredOnly([in] BOOL newVal);
	};
	[
		object,
		uuid(08F74379-2BCC-4538-BAA0-AD9D4D14DA2D),
		dual,
		helpstring("IHardware Interface"),
		pointer_default(unique)
	]
	interface IHardware : IDispatch
	{
		[id(1), helpstring("method GetSpeakerType")] HRESULT GetSpeakerType ([in] UINT uiMixID, [out, retval] VARIANT* pvarType);
		[id(2), helpstring("method SetSpeakerType")] HRESULT SetSpeakerType ([in] UINT uiMixID, [in] DWORD dwType);
		[id(3), helpstring("method GetAcceleration")] HRESULT GetAcceleration ([in] UINT uiMixID, [in] BOOL fRecord, [out, retval] VARIANT* pvarHWLevel);
		[id(4), helpstring("method SetAcceleration")] HRESULT SetAcceleration ([in] UINT uiMixID, [in] BOOL fRecord, [in] DWORD dwHWLevel);
		[id(5), helpstring("method GetSrcQuality")] HRESULT GetSrcQuality ([in] UINT uiMixID, [in] BOOL fRecord, [out, retval] VARIANT* pvarSRCLevel);
		[id(6), helpstring("method SetSrcQuality")] HRESULT SetSrcQuality ([in] UINT uiMixID, [in] BOOL fRecord, [in] DWORD dwSRCLevel);
	};

[
	uuid(6305BB86-704E-4D8C-AA88-4711D782046C),
	version(1.0),
	helpstring("mmsys 1.0 Type Library")
]
library MMSYSLib
{
	importlib("stdole2.tlb");

	[
		uuid(7FD0B05F-843F-4E6D-9B4A-3C652D1F2518),
		helpstring("Mixers Class")
	]
	coclass Mixers
	{
		[default] interface IMixers;
	};
	[
		uuid(37EEB98B-A363-4339-B549-BAB0D22A8798),
		helpstring("Schemes Class")
	]
	coclass Schemes
	{
		[default] interface ISchemes;
	};
	[
		uuid(39AEE96D-6DB5-467D-AEEA-8B6B440E2709),
		helpstring("PreferredDevices Class")
	]
	coclass PreferredDevices
	{
		[default] interface IPreferredDevices;
	};
	[
		uuid(8B6013DE-5557-44AD-9B99-F68DB9AAC43C),
		helpstring("Hardware Class")
	]
	coclass Hardware
	{
		[default] interface IHardware;
	};
};
