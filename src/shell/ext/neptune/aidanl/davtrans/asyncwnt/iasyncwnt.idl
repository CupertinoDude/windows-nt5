//+-------------------------------------------------------------------------
//
//    Microsoft Windows
//    Copyright (C) Microsoft Corporation, 1999.
//
//    File: iasyncwnt.idl
//
//--------------------------------------------------------------------------

cpp_quote("#define IASYNCWNT_ACCEPTALL 0xffffffff")

cpp_quote("interface IAsyncWnt;")

[
    uuid(1046DAD3-95FA-43db-AEFA-902115B495E5),
    version(1.0),
    helpstring("DAV IAsyncWnt Library")
]
library AsyncWntAPI
{
    #ifndef DO_NO_IMPORTS
    import "unknwn.idl";
    import "wtypes.idl";
    import "objidl.idl";
    import "oaidl.idl";
    #endif

    // ---------------------------------------------------------------------------------------
    // IID_IASYNCWNTCALLBACK
    // ---------------------------------------------------------------------------------------
    [
        uuid(4868EB72-41A6-4781-B261-4C81F18497C0),
        helpstring("DAV AsyncWnt Callback"),
    ]
    interface IAsyncWntCallback : IUnknown
    {
        HRESULT OnAuthChallenge( TCHAR szUserName[ 255 ],
                                 TCHAR szPassword[ 255 ]);

        HRESULT Respond(LPWSTR pwszVerb,
                        LPWSTR       pwszPath,
                        DWORD        cchHeaders,
                        LPWSTR       pwszHeaders,
                        DWORD        dwStatusCode,
                        LPWSTR       pwszStatusCode,
                        LPWSTR       pwszContentType,
                        DWORD        cbSent,
                        BYTE*        pbResponse,
                        DWORD        cbResponse);
    };

    // ---------------------------------------------------------------------------------------
    // IID_IASYNCWNTCALLBACK
    // ---------------------------------------------------------------------------------------
    [
        uuid(B974C800-2214-4c65-9BA0-CDE1430F9786),
        helpstring("DAV AsyncWnt"),
    ]
    interface IAsyncWnt : IUnknown
    {    
        HRESULT Init() = 0;

        HRESULT SetUserAgent   (LPCWSTR         pwszUserAgent) = 0;
        HRESULT SetLogFilePath (LPCWSTR         pwszLogFilePath) = 0;

        HRESULT Request (LPCWSTR              pwszURL,
                         LPCWSTR              pwszVerb,
                         LPCWSTR              pwszHeaders,
                         ULONG                nAcceptTypes,
                         LPCWSTR              rgwszAcceptTypes[  ],
                         IASYNCWNTCALLBACK*   pcallback,
                         DWORD                dwContext) = 0;

        HRESULT RequestWithStream (LPCWSTR              pwszURL,
                                   LPCWSTR              pwszVerb,
                                   LPCWSTR              pwszHeaders,
                                   ULONG                nAcceptTypes,
                                   LPCWSTR              rgwszAcceptTypes[  ],
                                   IStream*             pStream,
                                   IASYNCWNTCALLBACK*   pcallback,
                                   DWORD                dwContext) = 0;

        HRESULT RequestWithBuffer (LPCWSTR              pwszURL,
                                   LPCWSTR              pWszVerb,
                                   LPCWSTR              pwszHeaders,
                                   ULONG                nAcceptTypes,
                                   LPCWSTR              rgwszAcceptTypes[  ],
                                   BYTE*                pbBuffer,
                                   UINT                 cbBuffer,
                                   IASYNCWNTCALLBACK*   pcallback,
                                   DWORD                dwContext) = 0;
    };

};


