//
// ARP resource file, "themed" look
//

#include "resource.h"
#include <directuipp.h>

/*****************************************************
 * Default style sheet rules
 *****************************************************/

<style resid=frame>
    arpframe
    {
        accessible: true;
        accRole: 9;
        accName: rcstr(IDS_ARPTITLE);
        fontsize: sysmetric(DSM_ICONFONTSIZE);
        fontweight: sysmetric(DSM_ICONFONTWEIGHT);
        fontstyle: sysmetric(DSM_ICONFONTSTYLE);
        fontface: sysmetricstr(DSMS_ICONFONTFACE);
        background: window;
        foreground: windowtext;
    }
</style>

<style resid=closepane>

    element
    {
        background: buttonface;
        padding: rect(10,10,10,10);
    }

    button
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_NORMAL);
        foreground: buttontext;
        padding: rect(20,6,20,6);
    }

    button [mousefocused]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_HOT);
    }
                
    button [pressed]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_PRESSED);
        padding: rect(21,7,19,5);
    }

    button [keyfocused]
    {
        contentalign: focusrect;
    }

    progress
    {
        borderthickness: rect(2,2,2,2);
        bordercolor: buttonface;
        borderstyle: sunken;
        padding: rect(1,1,1,1);
        margin: rect(0, 4, 0, 2);
        foreground: rcbmp(IDB_PROGRESS);
    }

</style>

<style resid=optionpane>

    ARPSelector
    {
        background: dtb(handlemap(TOOLBARHTHEME), 0, 0);
        foreground: buttontext;
        padding: rect(3,3,3,3);
        layoutpos: left;
    }

    element
    {
        background: argb(0,0,0,0);
    }

    button
    {
        background: dtb(handlemap(TOOLBARHTHEME), TP_BUTTON, TS_NORMAL);
        margin: rect(5,5,5,5);
        padding: rect(6,6,6,6);
    }

    button [keyfocused]
    {
        background: dtb(handlemap(TOOLBARHTHEME), TP_BUTTON, TS_HOT);
    }

    button [mousefocused]
    {
        background: dtb(handlemap(TOOLBARHTHEME), TP_BUTTON, TS_HOT);
    }

    button [pressed]
    {
        background: dtb(handlemap(TOOLBARHTHEME), TP_BUTTON, TS_PRESSED);
        padding: rect(7,7,5,5);
    }

    button [selected]
    {
        background: dtb(handlemap(TOOLBARHTHEME), TP_BUTTON, TS_CHECKED);
        padding: rect(7,7,5,5);
    }

</style>

<style resid=contentpane>

    element [id=atom(contentpane)]
    {
        padding: rect(10,10,10,10);
    }

    element [id=atom(installedlistcontainer)]
    {
        borderthickness: rect(1,1,1,1);
        bordercolor: buttonshadow;
        padding: rect(0,0,0,0);
    }

    element [id=atom(publishedlistcontainer)]
    {
        borderthickness: rect(1,1,1,1);
        bordercolor: buttonshadow;
        padding: rect(0,0,0,0);
    }

    element [id=atom(ocsetuplistcontainer)]
    {
        borderthickness: rect(1,1,1,1);
        bordercolor: buttonshadow;
        padding: rect(0,0,0,0);
    }

    element [id=atom(label)]
    {
        padding: rect(0,5,5,5);
    }

    element
    {
        padding: rect(2,2,2,2);
    }

    element [id=atom(sort)]
    {
        padding: rect(2,2,0,2);
    }

    button
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_NORMAL);
        foreground: buttontext;
        padding: rect(8,6,8,6);
        margin: rect(5,5,5,5);
    }

    button [mousefocused]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_HOT);
    }

    button [pressed]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_PRESSED);
        padding: rect(9,7,7,5);
    }

    button [keyfocused]
    {
        contentalign: focusrect;
    }

</style>

<style resid=listscroller>

    scrollbar
    {
        layoutpos: ninebottom;
    }

    scrollbar [vertical]
    {
        layoutpos: nineright;
    }

    viewer
    {
        layoutpos: nineclient;
    }

    thumb
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_THUMBBTNVERT, SCRBS_NORMAL);
        content: dtb(handlemap(SCROLLBARHTHEME), SBP_GRIPPERVERT, SCRBS_NORMAL);
        contentalign: middlecenter;
    }

    thumb [mousefocused]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_THUMBBTNVERT, SCRBS_HOT);
        content: dtb(handlemap(SCROLLBARHTHEME), SBP_GRIPPERVERT, SCRBS_HOT);
    }

    thumb [captured]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_THUMBBTNVERT, SCRBS_PRESSED);
        content: dtb(handlemap(SCROLLBARHTHEME), SBP_GRIPPERVERT, SCRBS_PRESSED);
    }

    repeatbutton [id=atom(lineup)]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_UPNORMAL);
        width: sysmetric(SM_CXVSCROLL);
        height: sysmetric(SM_CYVSCROLL);
    }

    repeatbutton [id=atom(lineup)][mousefocused]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_UPHOT);
    }

    repeatbutton [id=atom(lineup)][pressed]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_UPPRESSED);
    }

    repeatbutton [id=atom(linedown)]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_DOWNNORMAL);
        width: sysmetric(SM_CXVSCROLL);
        height: sysmetric(SM_CYVSCROLL);
    }

    repeatbutton [id=atom(linedown)][mousefocused]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_DOWNHOT);
    }

    repeatbutton [id=atom(linedown)][pressed]
    {
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_ARROWBTN, ABS_DOWNPRESSED);
    }

    repeatbutton [id=atom(pageup)]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_UPPERTRACKVERT, SCRBS_NORMAL);
    }

    repeatbutton [id=atom(pageup)][mousefocused]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_UPPERTRACKVERT, SCRBS_HOT);
    }

    repeatbutton [id=atom(pageup)][pressed]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_UPPERTRACKVERT, SCRBS_PRESSED);
    }

    repeatbutton [id=atom(pagedown)]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_LOWERTRACKVERT, SCRBS_NORMAL);
    }

    repeatbutton [id=atom(pagedown)][mousefocused]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_LOWERTRACKVERT, SCRBS_HOT);
    }

    repeatbutton [id=atom(pagedown)][pressed]
    { 
        background: dtb(handlemap(SCROLLBARHTHEME), SBP_LOWERTRACKVERT, SCRBS_PRESSED);
    }

</style>

<style resid=itemlist>

    arpitem
    {
        padding: rect(1,1,1,3);
    }

    arpitem [selected]
    {
        background: buttonface;
        foreground: buttontext;
        bordercolor: buttontext;
    }

    arpitem [keyfocused][selected]
    {
        background: highlight;
        foreground: highlighttext;
        bordercolor: highlighttext;
    }

    element
    {
        padding: rect(1,1,1,1);
    }

    element [id=atom(title)][selected]
    {
        fontweight: extrabold;
    }

    button
    {
        padding: rect(1,1,1,1);
        contentalign: wrapright;
    }

    button [id=atom(supinfo)]
    {
        contentalign: wrapleft;
    }

    button [selected]
    {
        fontstyle: underline;
        cursor: hand;
    }

    button [id=atom(supinfo)][keyfocused]
    {
        contentalign: wrapleft|focusrect;
    }

    button [keyfocused]
    {
        fontstyle: none;
        contentalign: wrapright|focusrect;
    }

</style>

<style resid=itemaction>

    button
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_NORMAL);
        foreground: buttontext;
        padding: rect(8,6,8,6);
        margin: rect(5,5,5,5);
    }

    button [mousefocused]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_HOT);
    }

    button [pressed]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_PRESSED);
        padding: rect(9,7,7,5);
    }

    button [keyfocused]
    {
        contentalign: focusrect;
    }

</style>

<style resid=helppopup>

    arphelp
    {
        accessible: true;
        accRole: 9;
        background: infobackground;
        foreground: infotext;
        padding: rect(6,6,6,6);
        fontsize: sysmetric(DSM_ICONFONTSIZE);
        fontweight: sysmetric(DSM_ICONFONTWEIGHT);
        fontstyle: sysmetric(DSM_ICONFONTSTYLE);
        fontface: sysmetricstr(DSMS_ICONFONTFACE);
    }

    element [id=atom(divider)]
    {
        background: infotext;
    }

    element [id=atom(rdivider)]
    {
        background: infotext;
    }

    element
    {
         background: argb(0,0,0,0);
    }

    element [id=atom(title)]
    {
        fontsize: sysmetric(DSM_CAPTIONFONTSIZE);
        fontweight: sysmetric(DSM_CAPTIONFONTWEIGHT);
        fontstyle: sysmetric(DSM_CAPTIONFONTSTYLE);
        fontface: sysmetricstr(DSMS_CAPTIONFONTFACE);
    }

    button [Enabled]
    {
       foreground: hotlight;
       fontstyle: underline;
    }

    button [MouseFocused]
    {
        cursor: hand;
    }

    button [class="winstyle"]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_NORMAL);
        foreground: buttontext;
        padding: rect(8,6,8,6);
        margin: rect(5,5,5,5);
        cursor: arrow;
        fontstyle: none;
    }

    button [class="winstyle"][mousefocused]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_HOT);
    }
                
    button [class="winstyle"][pressed]
    {
        background: dtb(handlemap(BUTTONHTHEME), BP_PUSHBUTTON, PBS_PRESSED);
        padding: rect(9,7,7,5);
    }

    button [keyfocused]
    {
        contentalign: focusrect;
    }

    ARPSupportItem
    {
        ContentAlign: WrapLeft;
    }

</style>

