cpp_quote("#ifndef _ACCORE_H_")
cpp_quote("#define _ACCORE_H_")

#include <olectl.h>

// accore.idl : IDL source for accore.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (accore.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "shldisp.idl";
#include "accoreid.h"

    //DEFINE_GUID(IID_ISPFSNotify, 0x3BB41711L, 0x9904, 0x4362, 0x9C, 0xC0, 0x73, 0x78, 0xE5, 0xAE, 0x0E, 0xB0);

    // ISPFSNotify interface
    [
        object,
        uuid(3BB41711-9904-4362-9CC0-7378E5AE0EB0),
        dual,
        helpstring("ISPFSNotify Interface"),
        pointer_default(unique)
    ]

    interface ISPFSNotify : IDispatch
    {
        [propget, id(DISPID_PROP_SPFSNOTIFY_RECURSIVE), helpstring("property recursive")] 
            HRESULT recursive([retval, out] VARIANT_BOOL *);
        [propput, id(DISPID_PROP_SPFSNOTIFY_RECURSIVE), helpstring("property recursive")] 
            HRESULT recursive([in] VARIANT_BOOL);
        [propget, id(DISPID_PROP_SPFSNOTIFY_FOLDERITEM), helpstring("property folderitem")]
            HRESULT folderitem([retval, out] VARIANT *);
        [propput, id(DISPID_PROP_SPFSNOTIFY_FOLDERITEM), helpstring("property folderitem")]
            HRESULT folderitem([in] VARIANT);
    };

    //DEFINE_GUID(IID_IActivityCenterHelp, 0x70A157B0, 0x3EDA, 0x11D3, 0x85, 0xBE, 0x00, 0x60, 0x97, 0xDF, 0x8C, 0x11);

    // IActivityCenterHelp interface
    [
        object,
        uuid(70A157B0-3EDA-11D3-85BE-006097DF8C11),
        dual,
        helpstring("IActivityCenterHelp Interface"),
        pointer_default(unique)
    ]

    interface IActivityCenterHelp : IDispatch
    {
        [id(1), helpstring("Display the common Open dialog")]
            HRESULT ACGetOpenFileName(
                [ in          ] LONG lFlags,
                [ in,optional ] BSTR bsDefault,
                [ in,optional ] BSTR bsTitle,
                [ in,optional ] BSTR bsWorkingDir,
                [ in,optional ] BSTR bsDefExt,
                [ in,optional ] BSTR bsFilters,
                [ out,retval  ] VARIANT *pvOut);

        [id(2), helpstring("Obtain an associated string from a filename")]
            HRESULT ACAssocQueryString(
                [ in          ] LONG assocf,
                [ in          ] LONG assocStr,
                [ in          ] BSTR bsPath,
                [ in,optional ] BSTR bsExtra,
                [ out,retval  ] VARIANT *pvOut);

        [id(3), helpstring("Format a string with insertions")]
            HRESULT ACFormatString(
                [ in          ] BSTR bsFormat,
                [ in,optional ] BSTR bsInsert1,
                [ in,optional ] BSTR bsInsert2,
                [ in,optional ] BSTR bsInsert3,
                [ in,optional ] BSTR bsInsert4,
                [ in,optional ] BSTR bsInsert5,
                [ in,optional ] BSTR bsInsert6,
                [ in,optional ] BSTR bsInsert7,
                [ in,optional ] BSTR bsInsert8,
                [ in,optional ] BSTR bsInsert9,
                [ out,retval  ] BSTR *pbsOut);

        [id(4), propget, helpstring("Name of current desktop theme")]
            HRESULT desktopTheme([retval, out] BSTR *pbsDeskTheme);
        [id(4), propput, helpstring("Name of current desktop theme")]
            HRESULT desktopTheme([in]          BSTR bsDeskTheme);

        [id(5), helpstring("Notify other windows that desktop settings have changed")]
            HRESULT ACSendDesktopSettingsChanged();

        [id(6), helpstring("Convert a path into a shell URL")]
            HRESULT ACPathToShellURL(
                [ in         ] BSTR bsPath,
                [ out,retval ] BSTR *pbsOut);

        [id(7), helpstring("Convert shell URL into a path")]
            HRESULT ACShellURLToPath(
                [ in         ] BSTR bsShellURL,
                [ out,retval ] BSTR *pbsOut);

    };

    // Music Center specific stuff is declared here
    [
        object,
        uuid(CAC350B3-5F38-4585-A1A4-E613E7A94D38),
        dual,
        helpstring("Music Center Help Interface"),
        pointer_default(unique)
    ]

    interface IMusicCenterHelp : IDispatch
    {
        [id(1), helpstring("Create a Random Playlist of all songs")]
            HRESULT MCGetRandomPlayList([in] IDispatch  *playlist);
    };


    // PhotoCenter specific stuff is declared here
    interface IPhotoCenterEdit;
    interface IPhotoCenterHelp;

    [
        object,
        uuid(36BED7F0-5645-40DA-9DF2-E729AFFBC089),
        dual,
        helpstring("IStartPageSectionManager Interface"),
        pointer_default(unique)
    ]
    interface IStartPageSectionManager : IDispatch
    {
        [id(DISPID_SPSM_METHOD_RECALC), helpstring("method recalc")] 
           HRESULT recalc();
        [propget, id(DISPID_SPSM_PROP_MAXITEMS), helpstring("property maxItems")] 
            HRESULT maxItems([out, retval] LONG *pVal);
        [propput, id(DISPID_SPSM_PROP_MAXITEMS), helpstring("property maxItems")] 
            HRESULT maxItems([in] LONG newVal);
    };

    [
        object,
        uuid(77fb64a4-446a-11d3-822e-00c04f609487),
        dual,
        helpstring("IPhotoCenterEdit Interface"),
        pointer_default(unique)
    ]
    interface IPhotoCenterEdit : IDispatch
    {
        // Editing operations

        [id(1), helpstring("Rotate an image")]
            HRESULT Rotate(
                [ in       ] BSTR bsPath,
                [ in       ] BSTR bsDestPath);

        [id(2), helpstring("Crop an image")]
            HRESULT Crop(
                [ in       ] BSTR bsPath, 
                [ in       ] BSTR bsDestPath,
                [ in       ] LONG left, 
                [ in       ] LONG top, 
                [ in       ] LONG width, 
                [ in       ] LONG height);

        // Undo functionality

        [id(3), helpstring("Start set of edits")]
            HRESULT Start();

        [id(4), helpstring("Save set of edits")]
            HRESULT Save( [in] BOOL fSaveAsNew);

        [id(5), helpstring("Cancel set of edits")]
            HRESULT Cancel();
    }

    [
        object,
        uuid(193D5D9D-00E4-4D61-88D8-46119920CBB5),
        dual,
        helpstring("IPhotoCenterHelp Interface"),
        pointer_default(unique)
    ]
    interface IPhotoCenterHelp : IDispatch
    {
        [id(1), helpstring("Ask user for the type of the non-wia device")]
            HRESULT GetDeviceType([in] IDispatch  *device, [out, retval] DWORD *pdwType);
    }


// ACCORE Libraryc
[
    uuid(67D585D9-B178-43a9-A375-3D8E03090EED),
    version(1.0),
    helpstring("accore 1.0 Type Library")
]
library ACCORELib
{
    [
        //DEFINE_GUID(varNameHere, 0xE9CBC542L, 0xD1C7, 0x4FB4, 0x91, 0x1E, 0x13, 0x4F, 0xC0, 0xE2, 0x71, 0x0F);
        uuid(E9CBC542-D1C7-4FB4-911E-134FC0E2710F), //DIID_DSPFSNotifyEvents
        helpstring("Event interface for SPFSNotify")        
    ]
    dispinterface DSPFSNotifyEvents
    {
    properties:
    methods:
        [id(DISPID_ONFSNOTIFYCHANGED), helpstring("The folder item has changed."), helpcontext(0x0000)]
        void OnFSNotifyChanged();
    }

    [
        uuid(155ADB29-10FD-4CC1-B0C0-F2718CCBB60C),
        helpstring("Start Page FS Notify Class")
    ]
    coclass SPFSNotify
    {
        [default] interface ISPFSNotify;
        [default, source] dispinterface DSPFSNotifyEvents;
    }

    [
        uuid(6FF97DD4-F8D4-4996-803F-0566698D9320),
        helpstring("DActivityCenterHelpEvents Interface")
    ]
    dispinterface DActivityCenterHelpEvents
    {
        properties:
        methods:
        [id(DISPID_ACH_EVENT_ONDESKTOPSETTINGSCHANGED), helpstring("method ondesktopsettingschanged"), helpcontext(0x0000)]
        void ondesktopsettingschanged();
    };

    [
        uuid(f14b8060-3ef5-11d3-85be-006097df8c11),
        helpstring("IActivityCenterHelp implementation")
    ]

    coclass ActivityCenterHelp
    {
        [default] interface IActivityCenterHelp;
        [default, source] dispinterface DActivityCenterHelpEvents;
    }

    [
        uuid(CD83816E-8747-4905-B51C-78FD913D9FCF),
        helpstring("Music Center implementation")
    ]
    coclass MusicCenterHelp
    {
        [default] interface IMusicCenterHelp;
    }

    [
        uuid(6FF97DD3-F8D4-4996-803F-0566698D9320),
        helpstring("DStartPageSectionManagerEvents Interface")
    ]
    dispinterface DStartPageSectionManagerEvents
    {
        properties:
        methods:
        [id(DISPID_SPSM_EVENT_ONRECALCDONE), helpstring("method onrecalcdone"), helpcontext(0x0000)]
        void onrecalcdone();
    };

    [
        uuid(FCB7C58F-FBDD-497D-B3CB-60FEBE6DC247),
        helpstring("MyProgramsManager Class")
    ]
    coclass MyProgramsManager
    {
        [default] interface IStartPageSectionManager;
        [default, source] dispinterface DStartPageSectionManagerEvents;
    };
    
    [
        uuid(FCB7C590-FBDD-497D-B3CB-60FEBE6DC247),
        helpstring("MyFilesManager Class")
    ]
    coclass MyFilesManager
    {
        [default] interface IStartPageSectionManager;
        [default, source] dispinterface DStartPageSectionManagerEvents;
    };
    
    [
        uuid(0f023cae-4468-11d3-822e-00c04f609487),
        helpstring("IPhotoCenterEdit implementation")
    ]
    coclass PhotoCenterEdit
    {
        [default] interface IPhotoCenterEdit;
    }

    [
        uuid(CC45F2CA-3DA7-432E-8812-35DD451F5D99),
        helpstring("PCHelp Class")
    ]
    coclass PhotoCenterHelp
    {
        [default] interface IPhotoCenterHelp;
    };
};

cpp_quote("#endif // _ACCORE_H_")
