/* Textual file generated for type library: shdocvw.dll */


[helpcontext(0), helpstring("Microsoft Internet Controls"), localizedhelpstring("Microsoft Internet Controls"), lcid(0), version(1.1), uuid(EAB22AC0-30C1-11CF-A7EB-0000C05BAE0B), cUniqueNames(368), cchUniqueNames(4612), CustomGuid(DE77BA64-517C-11D1-A2DA-0000F8773CE9), CustomValue("84017387"), CustomGuid(DE77BA63-517C-11D1-A2DA-0000F8773CE9), CustomValue("920507454")] 
library SHDocVw {

[helpcontext(0), helpstring("Web Browser interface"), localizedhelpstring("Web Browser interface"), dual, version(0.0), uuid(EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IWebBrowser  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Navigates to the previous item in the history list."), helpcontext(0), helpstring("Navigates to the previous item in the history list."), funckind(4), oVft(28), id(100)] void STDMETHODCALLTYPE GoBack(void) ;
[localizedhelpstring("Navigates to the next item in the history list."), helpcontext(0), helpstring("Navigates to the next item in the history list."), funckind(4), oVft(32), id(101)] void STDMETHODCALLTYPE GoForward(void) ;
[localizedhelpstring("Go home/start page."), helpcontext(0), helpstring("Go home/start page."), funckind(4), oVft(36), id(102)] void STDMETHODCALLTYPE GoHome(void) ;
[localizedhelpstring("Go Search Page."), helpcontext(0), helpstring("Go Search Page."), funckind(4), oVft(40), id(103)] void STDMETHODCALLTYPE GoSearch(void) ;
[localizedhelpstring("Navigates to a URL or file."), helpcontext(0), helpstring("Navigates to a URL or file."), funckind(4), oVft(44), id(104)] void STDMETHODCALLTYPE Navigate([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(48), id(-550)] void STDMETHODCALLTYPE Refresh(void) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(52), id(105)] void STDMETHODCALLTYPE Refresh2([in, PARAMFLAG_FOPT, optional] VARIANT * Level) ;
[localizedhelpstring("Stops opening a file."), helpcontext(0), helpstring("Stops opening a file."), funckind(4), oVft(56), id(106)] void STDMETHODCALLTYPE Stop(void) ;
[localizedhelpstring("Returns the application automation object if accessible, this automation object otherwise.."), helpcontext(0), helpstring("Returns the application automation object if accessible, this automation object otherwise.."), funckind(4), oVft(60), id(200), propget] IDispatch * STDMETHODCALLTYPE Application(void) ;
[localizedhelpstring("Returns the automation object of the container/parent if one exists or this automation object."), helpcontext(0), helpstring("Returns the automation object of the container/parent if one exists or this automation object."), funckind(4), oVft(64), id(201), propget] IDispatch * STDMETHODCALLTYPE Parent(void) ;
[localizedhelpstring("Returns the container/parent automation object, if any."), helpcontext(0), helpstring("Returns the container/parent automation object, if any."), funckind(4), oVft(68), id(202), propget] IDispatch * STDMETHODCALLTYPE Container(void) ;
[localizedhelpstring("Returns the active Document automation object, if any."), helpcontext(0), helpstring("Returns the active Document automation object, if any."), funckind(4), oVft(72), id(203), propget] IDispatch * STDMETHODCALLTYPE Document(void) ;
[localizedhelpstring("Returns True if this is the top level object."), helpcontext(0), helpstring("Returns True if this is the top level object."), funckind(4), oVft(76), id(204), propget] boolean STDMETHODCALLTYPE TopLevelContainer(void) ;
[localizedhelpstring("Returns the type of the contained document object."), helpcontext(0), helpstring("Returns the type of the contained document object."), funckind(4), oVft(80), id(205), propget] BSTR STDMETHODCALLTYPE Type(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(84), id(206), propget] long STDMETHODCALLTYPE Left(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(88), id(206), propput] void STDMETHODCALLTYPE Left([in] long PseudoName) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(92), id(207), propget] long STDMETHODCALLTYPE Top(void) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(96), id(207), propput] void STDMETHODCALLTYPE Top([in] long PseudoName) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(100), id(208), propget] long STDMETHODCALLTYPE Width(void) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(104), id(208), propput] void STDMETHODCALLTYPE Width([in] long PseudoName) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(108), id(209), propget] long STDMETHODCALLTYPE Height(void) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(112), id(209), propput] void STDMETHODCALLTYPE Height([in] long PseudoName) ;
[localizedhelpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), helpcontext(0), helpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), funckind(4), oVft(116), id(210), propget] BSTR STDMETHODCALLTYPE LocationName(void) ;
[localizedhelpstring("Gets the full URL/path currently viewed."), helpcontext(0), helpstring("Gets the full URL/path currently viewed."), funckind(4), oVft(120), id(211), propget] BSTR STDMETHODCALLTYPE LocationURL(void) ;
[localizedhelpstring("Query to see if something is still in progress."), helpcontext(0), helpstring("Query to see if something is still in progress."), funckind(4), oVft(124), id(212), propget] boolean STDMETHODCALLTYPE Busy(void) ;
}

[helpcontext(0), helpstring("Web Browser interface"), localizedhelpstring("Web Browser interface"), dual, oleautomation, version(0.0), uuid(EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B), hidden, cbSizeVft(128), cbSizeInstance(4), cbAlignment(4)] 
interface IWebBrowser  : stdole.IDispatch  {
[localizedhelpstring("Navigates to the previous item in the history list."), helpcontext(0), helpstring("Navigates to the previous item in the history list."), funckind(1), oVft(28)] HRESULT STDMETHODCALLTYPE GoBack(void) ;
[localizedhelpstring("Navigates to the next item in the history list."), helpcontext(0), helpstring("Navigates to the next item in the history list."), funckind(1), oVft(32)] HRESULT STDMETHODCALLTYPE GoForward(void) ;
[localizedhelpstring("Go home/start page."), helpcontext(0), helpstring("Go home/start page."), funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE GoHome(void) ;
[localizedhelpstring("Go Search Page."), helpcontext(0), helpstring("Go Search Page."), funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE GoSearch(void) ;
[localizedhelpstring("Navigates to a URL or file."), helpcontext(0), helpstring("Navigates to a URL or file."), funckind(1), oVft(44)] HRESULT STDMETHODCALLTYPE Navigate([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(1), oVft(48)] HRESULT STDMETHODCALLTYPE Refresh(void) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(1), oVft(52)] HRESULT STDMETHODCALLTYPE Refresh2([in, PARAMFLAG_FOPT, optional] VARIANT * Level) ;
[localizedhelpstring("Stops opening a file."), helpcontext(0), helpstring("Stops opening a file."), funckind(1), oVft(56)] HRESULT STDMETHODCALLTYPE Stop(void) ;
[localizedhelpstring("Returns the application automation object if accessible, this automation object otherwise.."), helpcontext(0), helpstring("Returns the application automation object if accessible, this automation object otherwise.."), funckind(1), oVft(60), propget] HRESULT STDMETHODCALLTYPE Application([out, retval] IDispatch * * ppDisp) ;
[localizedhelpstring("Returns the automation object of the container/parent if one exists or this automation object."), helpcontext(0), helpstring("Returns the automation object of the container/parent if one exists or this automation object."), funckind(1), oVft(64), propget] HRESULT STDMETHODCALLTYPE Parent([out, retval] IDispatch * * ppDisp) ;
[localizedhelpstring("Returns the container/parent automation object, if any."), helpcontext(0), helpstring("Returns the container/parent automation object, if any."), funckind(1), oVft(68), propget] HRESULT STDMETHODCALLTYPE Container([out, retval] IDispatch * * ppDisp) ;
[localizedhelpstring("Returns the active Document automation object, if any."), helpcontext(0), helpstring("Returns the active Document automation object, if any."), funckind(1), oVft(72), propget] HRESULT STDMETHODCALLTYPE Document([out, retval] IDispatch * * ppDisp) ;
[localizedhelpstring("Returns True if this is the top level object."), helpcontext(0), helpstring("Returns True if this is the top level object."), funckind(1), oVft(76), propget] HRESULT STDMETHODCALLTYPE TopLevelContainer([out, retval] boolean * pBool) ;
[localizedhelpstring("Returns the type of the contained document object."), helpcontext(0), helpstring("Returns the type of the contained document object."), funckind(1), oVft(80), propget] HRESULT STDMETHODCALLTYPE Type([out, retval] BSTR * Type) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(1), oVft(84), propget] HRESULT STDMETHODCALLTYPE Left([out, retval] long * pl) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(1), oVft(88), propput] HRESULT STDMETHODCALLTYPE Left([in] long pl) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(1), oVft(92), propget] HRESULT STDMETHODCALLTYPE Top([out, retval] long * pl) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(1), oVft(96), propput] HRESULT STDMETHODCALLTYPE Top([in] long pl) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(1), oVft(100), propget] HRESULT STDMETHODCALLTYPE Width([out, retval] long * pl) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(1), oVft(104), propput] HRESULT STDMETHODCALLTYPE Width([in] long pl) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(1), oVft(108), propget] HRESULT STDMETHODCALLTYPE Height([out, retval] long * pl) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(1), oVft(112), propput] HRESULT STDMETHODCALLTYPE Height([in] long pl) ;
[localizedhelpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), helpcontext(0), helpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), funckind(1), oVft(116), propget] HRESULT STDMETHODCALLTYPE LocationName([out, retval] BSTR * LocationName) ;
[localizedhelpstring("Gets the full URL/path currently viewed."), helpcontext(0), helpstring("Gets the full URL/path currently viewed."), funckind(1), oVft(120), propget] HRESULT STDMETHODCALLTYPE LocationURL([out, retval] BSTR * LocationURL) ;
[localizedhelpstring("Query to see if something is still in progress."), helpcontext(0), helpstring("Query to see if something is still in progress."), funckind(1), oVft(124), propget] HRESULT STDMETHODCALLTYPE Busy([out, retval] boolean * pBool) ;
}

[helpcontext(0), helpstring("Web Browser Control Events (old)"), localizedhelpstring("Web Browser Control Events (old)"), version(0.0), uuid(EAB22AC2-30C1-11CF-A7EB-0000C05BAE0B), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface DWebBrowserEvents  {

properties:

methods:
[localizedhelpstring("Fired when a new hyperlink is being navigated to."), helpcontext(0), helpstring("Fired when a new hyperlink is being navigated to."), funckind(4), oVft(0), id(100)] void STDMETHODCALLTYPE BeforeNavigate([in] BSTR URL, long Flags, BSTR TargetFrameName, VARIANT * PostData, BSTR Headers, [in, out] boolean * Cancel) ;
[localizedhelpstring("Fired when the document being navigated to becomes visible and enters the navigation stack."), helpcontext(0), helpstring("Fired when the document being navigated to becomes visible and enters the navigation stack."), funckind(4), oVft(0), id(101)] void STDMETHODCALLTYPE NavigateComplete([in] BSTR URL) ;
[localizedhelpstring("Statusbar text changed."), helpcontext(0), helpstring("Statusbar text changed."), funckind(4), oVft(0), id(102)] void STDMETHODCALLTYPE StatusTextChange([in] BSTR Text) ;
[localizedhelpstring("Fired when download progress is updated."), helpcontext(0), helpstring("Fired when download progress is updated."), funckind(4), oVft(0), id(108)] void STDMETHODCALLTYPE ProgressChange([in] long Progress, [in] long ProgressMax) ;
[localizedhelpstring("Download of page complete."), helpcontext(0), helpstring("Download of page complete."), funckind(4), oVft(0), id(104)] void STDMETHODCALLTYPE DownloadComplete(void) ;
[localizedhelpstring("The enabled state of a command changed"), helpcontext(0), helpstring("The enabled state of a command changed"), funckind(4), oVft(0), id(105)] void STDMETHODCALLTYPE CommandStateChange([in] long Command, [in] boolean Enable) ;
[localizedhelpstring("Download of a page started."), helpcontext(0), helpstring("Download of a page started."), funckind(4), oVft(0), id(106)] void STDMETHODCALLTYPE DownloadBegin(void) ;
[localizedhelpstring("Fired when a new window should be created."), helpcontext(0), helpstring("Fired when a new window should be created."), funckind(4), oVft(0), id(107)] void STDMETHODCALLTYPE NewWindow([in] BSTR URL, [in] long Flags, [in] BSTR TargetFrameName, [in] VARIANT * PostData, [in] BSTR Headers, [in, out] boolean * Processed) ;
[localizedhelpstring("Document title changed."), helpcontext(0), helpstring("Document title changed."), funckind(4), oVft(0), id(113)] void STDMETHODCALLTYPE TitleChange([in] BSTR Text) ;
[localizedhelpstring("Fired when a new hyperlink is being navigated to in a frame."), helpcontext(0), helpstring("Fired when a new hyperlink is being navigated to in a frame."), funckind(4), oVft(0), id(200)] void STDMETHODCALLTYPE FrameBeforeNavigate([in] BSTR URL, long Flags, BSTR TargetFrameName, VARIANT * PostData, BSTR Headers, [in, out] boolean * Cancel) ;
[localizedhelpstring("Fired when a new hyperlink is being navigated to in a frame."), helpcontext(0), helpstring("Fired when a new hyperlink is being navigated to in a frame."), funckind(4), oVft(0), id(201)] void STDMETHODCALLTYPE FrameNavigateComplete([in] BSTR URL) ;
[localizedhelpstring("Fired when a new window should be created."), helpcontext(0), helpstring("Fired when a new window should be created."), funckind(4), oVft(0), id(204)] void STDMETHODCALLTYPE FrameNewWindow([in] BSTR URL, [in] long Flags, [in] BSTR TargetFrameName, [in] VARIANT * PostData, [in] BSTR Headers, [in, out] boolean * Processed) ;
[localizedhelpstring("Fired when application is quiting."), helpcontext(0), helpstring("Fired when application is quiting."), funckind(4), oVft(0), id(103)] void STDMETHODCALLTYPE Quit([in, out] boolean * Cancel) ;
[localizedhelpstring("Fired when window has been moved."), helpcontext(0), helpstring("Fired when window has been moved."), funckind(4), oVft(0), id(109)] void STDMETHODCALLTYPE WindowMove(void) ;
[localizedhelpstring("Fired when window has been sized."), helpcontext(0), helpstring("Fired when window has been sized."), funckind(4), oVft(0), id(110)] void STDMETHODCALLTYPE WindowResize(void) ;
[localizedhelpstring("Fired when window has been activated."), helpcontext(0), helpstring("Fired when window has been activated."), funckind(4), oVft(0), id(111)] void STDMETHODCALLTYPE WindowActivate(void) ;
[localizedhelpstring("Fired when the PutProperty method has been called."), helpcontext(0), helpstring("Fired when the PutProperty method has been called."), funckind(4), oVft(0), id(112)] void STDMETHODCALLTYPE PropertyChange([in] BSTR Property) ;
}


typedef
[helpcontext(0), helpstring("Constants for WebBrowser CommandStateChange"), localizedhelpstring("Constants for WebBrowser CommandStateChange"), version(0.0), uuid(34A226E0-DF30-11CF-89A9-00A0C9054129), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), localizedhelpstring("Command Change"), helpcontext(0), helpstring("Command Change")] CSC_UPDATECOMMANDS = -1 ,
[varkind(2), localizedhelpstring("Navigate Forward"), helpcontext(0), helpstring("Navigate Forward")] CSC_NAVIGATEFORWARD = 1 ,
[varkind(2), localizedhelpstring("Navigate Back"), helpcontext(0), helpstring("Navigate Back")] CSC_NAVIGATEBACK = 2 ,
} CommandStateChangeConstants  ;

[helpcontext(0), helpstring("Web Browser Application Interface."), localizedhelpstring("Web Browser Application Interface."), dual, version(0.0), uuid(0002DF05-0000-0000-C000-000000000046), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IWebBrowserApp  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Navigates to the previous item in the history list."), helpcontext(0), helpstring("Navigates to the previous item in the history list."), funckind(4), oVft(28), id(100)] void STDMETHODCALLTYPE GoBack(void) ;
[localizedhelpstring("Navigates to the next item in the history list."), helpcontext(0), helpstring("Navigates to the next item in the history list."), funckind(4), oVft(32), id(101)] void STDMETHODCALLTYPE GoForward(void) ;
[localizedhelpstring("Go home/start page."), helpcontext(0), helpstring("Go home/start page."), funckind(4), oVft(36), id(102)] void STDMETHODCALLTYPE GoHome(void) ;
[localizedhelpstring("Go Search Page."), helpcontext(0), helpstring("Go Search Page."), funckind(4), oVft(40), id(103)] void STDMETHODCALLTYPE GoSearch(void) ;
[localizedhelpstring("Navigates to a URL or file."), helpcontext(0), helpstring("Navigates to a URL or file."), funckind(4), oVft(44), id(104)] void STDMETHODCALLTYPE Navigate([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(48), id(-550)] void STDMETHODCALLTYPE Refresh(void) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(52), id(105)] void STDMETHODCALLTYPE Refresh2([in, PARAMFLAG_FOPT, optional] VARIANT * Level) ;
[localizedhelpstring("Stops opening a file."), helpcontext(0), helpstring("Stops opening a file."), funckind(4), oVft(56), id(106)] void STDMETHODCALLTYPE Stop(void) ;
[localizedhelpstring("Returns the application automation object if accessible, this automation object otherwise.."), helpcontext(0), helpstring("Returns the application automation object if accessible, this automation object otherwise.."), funckind(4), oVft(60), id(200), propget] IDispatch * STDMETHODCALLTYPE Application(void) ;
[localizedhelpstring("Returns the automation object of the container/parent if one exists or this automation object."), helpcontext(0), helpstring("Returns the automation object of the container/parent if one exists or this automation object."), funckind(4), oVft(64), id(201), propget] IDispatch * STDMETHODCALLTYPE Parent(void) ;
[localizedhelpstring("Returns the container/parent automation object, if any."), helpcontext(0), helpstring("Returns the container/parent automation object, if any."), funckind(4), oVft(68), id(202), propget] IDispatch * STDMETHODCALLTYPE Container(void) ;
[localizedhelpstring("Returns the active Document automation object, if any."), helpcontext(0), helpstring("Returns the active Document automation object, if any."), funckind(4), oVft(72), id(203), propget] IDispatch * STDMETHODCALLTYPE Document(void) ;
[localizedhelpstring("Returns True if this is the top level object."), helpcontext(0), helpstring("Returns True if this is the top level object."), funckind(4), oVft(76), id(204), propget] boolean STDMETHODCALLTYPE TopLevelContainer(void) ;
[localizedhelpstring("Returns the type of the contained document object."), helpcontext(0), helpstring("Returns the type of the contained document object."), funckind(4), oVft(80), id(205), propget] BSTR STDMETHODCALLTYPE Type(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(84), id(206), propget] long STDMETHODCALLTYPE Left(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(88), id(206), propput] void STDMETHODCALLTYPE Left([in] long PseudoName) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(92), id(207), propget] long STDMETHODCALLTYPE Top(void) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(96), id(207), propput] void STDMETHODCALLTYPE Top([in] long PseudoName) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(100), id(208), propget] long STDMETHODCALLTYPE Width(void) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(104), id(208), propput] void STDMETHODCALLTYPE Width([in] long PseudoName) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(108), id(209), propget] long STDMETHODCALLTYPE Height(void) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(112), id(209), propput] void STDMETHODCALLTYPE Height([in] long PseudoName) ;
[localizedhelpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), helpcontext(0), helpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), funckind(4), oVft(116), id(210), propget] BSTR STDMETHODCALLTYPE LocationName(void) ;
[localizedhelpstring("Gets the full URL/path currently viewed."), helpcontext(0), helpstring("Gets the full URL/path currently viewed."), funckind(4), oVft(120), id(211), propget] BSTR STDMETHODCALLTYPE LocationURL(void) ;
[localizedhelpstring("Query to see if something is still in progress."), helpcontext(0), helpstring("Query to see if something is still in progress."), funckind(4), oVft(124), id(212), propget] boolean STDMETHODCALLTYPE Busy(void) ;
[localizedhelpstring("Exits application and closes the open document."), helpcontext(0), helpstring("Exits application and closes the open document."), funckind(4), oVft(128), id(300)] void STDMETHODCALLTYPE Quit(void) ;
[localizedhelpstring("Converts client sizes into window sizes."), helpcontext(0), helpstring("Converts client sizes into window sizes."), funckind(4), oVft(132), id(301)] void STDMETHODCALLTYPE ClientToWindow([in, out] int * pcx, [in, out] int * pcy) ;
[localizedhelpstring("Associates vtValue with the name szProperty in the context of the object."), helpcontext(0), helpstring("Associates vtValue with the name szProperty in the context of the object."), funckind(4), oVft(136), id(302)] void STDMETHODCALLTYPE PutProperty([in] BSTR Property, [in] VARIANT vtValue) ;
[localizedhelpstring("Retrieve the Associated value for the property vtValue in the context of the object."), helpcontext(0), helpstring("Retrieve the Associated value for the property vtValue in the context of the object."), funckind(4), oVft(140), id(303)] VARIANT STDMETHODCALLTYPE GetProperty([in] BSTR Property) ;
[localizedhelpstring("Returns name of the application."), helpcontext(0), helpstring("Returns name of the application."), funckind(4), oVft(144), id(0), propget] BSTR STDMETHODCALLTYPE Name(void) ;
[localizedhelpstring("Returns the HWND of the current IE window."), helpcontext(0), helpstring("Returns the HWND of the current IE window."), funckind(4), oVft(148), id(-515), propget] long STDMETHODCALLTYPE HWND(void) ;
[localizedhelpstring("Returns file specification of the application, including path."), helpcontext(0), helpstring("Returns file specification of the application, including path."), funckind(4), oVft(152), id(400), propget] BSTR STDMETHODCALLTYPE FullName(void) ;
[localizedhelpstring("Returns the path to the application."), helpcontext(0), helpstring("Returns the path to the application."), funckind(4), oVft(156), id(401), propget] BSTR STDMETHODCALLTYPE Path(void) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(4), oVft(160), id(402), propget] boolean STDMETHODCALLTYPE Visible(void) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(4), oVft(164), id(402), propput] void STDMETHODCALLTYPE Visible([in] boolean PseudoName) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(4), oVft(168), id(403), propget] boolean STDMETHODCALLTYPE StatusBar(void) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(4), oVft(172), id(403), propput] void STDMETHODCALLTYPE StatusBar([in] boolean PseudoName) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(4), oVft(176), id(404), propget] BSTR STDMETHODCALLTYPE StatusText(void) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(4), oVft(180), id(404), propput] void STDMETHODCALLTYPE StatusText([in] BSTR PseudoName) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(4), oVft(184), id(405), propget] int STDMETHODCALLTYPE ToolBar(void) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(4), oVft(188), id(405), propput] void STDMETHODCALLTYPE ToolBar([in] int PseudoName) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(4), oVft(192), id(406), propget] boolean STDMETHODCALLTYPE MenuBar(void) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(4), oVft(196), id(406), propput] void STDMETHODCALLTYPE MenuBar([in] boolean PseudoName) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(4), oVft(200), id(407), propget] boolean STDMETHODCALLTYPE FullScreen(void) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(4), oVft(204), id(407), propput] void STDMETHODCALLTYPE FullScreen([in] boolean PseudoName) ;
}

[helpcontext(0), helpstring("Web Browser Application Interface."), localizedhelpstring("Web Browser Application Interface."), dual, oleautomation, version(0.0), uuid(0002DF05-0000-0000-C000-000000000046), hidden, cbSizeVft(208), cbSizeInstance(4), cbAlignment(4)] 
interface IWebBrowserApp  : IWebBrowser  {
[localizedhelpstring("Exits application and closes the open document."), helpcontext(0), helpstring("Exits application and closes the open document."), funckind(1), oVft(128)] HRESULT STDMETHODCALLTYPE Quit(void) ;
[localizedhelpstring("Converts client sizes into window sizes."), helpcontext(0), helpstring("Converts client sizes into window sizes."), funckind(1), oVft(132)] HRESULT STDMETHODCALLTYPE ClientToWindow([in, out] int * pcx, [in, out] int * pcy) ;
[localizedhelpstring("Associates vtValue with the name szProperty in the context of the object."), helpcontext(0), helpstring("Associates vtValue with the name szProperty in the context of the object."), funckind(1), oVft(136)] HRESULT STDMETHODCALLTYPE PutProperty([in] BSTR Property, [in] VARIANT vtValue) ;
[localizedhelpstring("Retrieve the Associated value for the property vtValue in the context of the object."), helpcontext(0), helpstring("Retrieve the Associated value for the property vtValue in the context of the object."), funckind(1), oVft(140)] HRESULT STDMETHODCALLTYPE GetProperty([in] BSTR Property, [out, retval] VARIANT * pvtValue) ;
[localizedhelpstring("Returns name of the application."), helpcontext(0), helpstring("Returns name of the application."), funckind(1), oVft(144), id(0), propget] HRESULT STDMETHODCALLTYPE Name([out, retval] BSTR * Name) ;
[localizedhelpstring("Returns the HWND of the current IE window."), helpcontext(0), helpstring("Returns the HWND of the current IE window."), funckind(1), oVft(148), propget] HRESULT STDMETHODCALLTYPE HWND([out, retval] long * pHWND) ;
[localizedhelpstring("Returns file specification of the application, including path."), helpcontext(0), helpstring("Returns file specification of the application, including path."), funckind(1), oVft(152), propget] HRESULT STDMETHODCALLTYPE FullName([out, retval] BSTR * FullName) ;
[localizedhelpstring("Returns the path to the application."), helpcontext(0), helpstring("Returns the path to the application."), funckind(1), oVft(156), propget] HRESULT STDMETHODCALLTYPE Path([out, retval] BSTR * Path) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(1), oVft(160), propget] HRESULT STDMETHODCALLTYPE Visible([out, retval] boolean * pBool) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(1), oVft(164), propput] HRESULT STDMETHODCALLTYPE Visible([in] boolean pBool) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(1), oVft(168), propget] HRESULT STDMETHODCALLTYPE StatusBar([out, retval] boolean * pBool) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(1), oVft(172), propput] HRESULT STDMETHODCALLTYPE StatusBar([in] boolean pBool) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(1), oVft(176), propget] HRESULT STDMETHODCALLTYPE StatusText([out, retval] BSTR * StatusText) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(1), oVft(180), propput] HRESULT STDMETHODCALLTYPE StatusText([in] BSTR StatusText) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(1), oVft(184), propget] HRESULT STDMETHODCALLTYPE ToolBar([out, retval] int * Value) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(1), oVft(188), propput] HRESULT STDMETHODCALLTYPE ToolBar([in] int Value) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(1), oVft(192), propget] HRESULT STDMETHODCALLTYPE MenuBar([out, retval] boolean * Value) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(1), oVft(196), propput] HRESULT STDMETHODCALLTYPE MenuBar([in] boolean Value) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(1), oVft(200), propget] HRESULT STDMETHODCALLTYPE FullScreen([out, retval] boolean * pbFullScreen) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(1), oVft(204), propput] HRESULT STDMETHODCALLTYPE FullScreen([in] boolean pbFullScreen) ;
}

[helpcontext(0), helpstring("Web Browser Interface for IE4."), localizedhelpstring("Web Browser Interface for IE4."), dual, version(0.0), uuid(D30C1661-CDAF-11D0-8A3E-00C04FC9E26E), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IWebBrowser2  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Navigates to the previous item in the history list."), helpcontext(0), helpstring("Navigates to the previous item in the history list."), funckind(4), oVft(28), id(100)] void STDMETHODCALLTYPE GoBack(void) ;
[localizedhelpstring("Navigates to the next item in the history list."), helpcontext(0), helpstring("Navigates to the next item in the history list."), funckind(4), oVft(32), id(101)] void STDMETHODCALLTYPE GoForward(void) ;
[localizedhelpstring("Go home/start page."), helpcontext(0), helpstring("Go home/start page."), funckind(4), oVft(36), id(102)] void STDMETHODCALLTYPE GoHome(void) ;
[localizedhelpstring("Go Search Page."), helpcontext(0), helpstring("Go Search Page."), funckind(4), oVft(40), id(103)] void STDMETHODCALLTYPE GoSearch(void) ;
[localizedhelpstring("Navigates to a URL or file."), helpcontext(0), helpstring("Navigates to a URL or file."), funckind(4), oVft(44), id(104)] void STDMETHODCALLTYPE Navigate([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(48), id(-550)] void STDMETHODCALLTYPE Refresh(void) ;
[localizedhelpstring("Refresh the currently viewed page."), helpcontext(0), helpstring("Refresh the currently viewed page."), funckind(4), oVft(52), id(105)] void STDMETHODCALLTYPE Refresh2([in, PARAMFLAG_FOPT, optional] VARIANT * Level) ;
[localizedhelpstring("Stops opening a file."), helpcontext(0), helpstring("Stops opening a file."), funckind(4), oVft(56), id(106)] void STDMETHODCALLTYPE Stop(void) ;
[localizedhelpstring("Returns the application automation object if accessible, this automation object otherwise.."), helpcontext(0), helpstring("Returns the application automation object if accessible, this automation object otherwise.."), funckind(4), oVft(60), id(200), propget] IDispatch * STDMETHODCALLTYPE Application(void) ;
[localizedhelpstring("Returns the automation object of the container/parent if one exists or this automation object."), helpcontext(0), helpstring("Returns the automation object of the container/parent if one exists or this automation object."), funckind(4), oVft(64), id(201), propget] IDispatch * STDMETHODCALLTYPE Parent(void) ;
[localizedhelpstring("Returns the container/parent automation object, if any."), helpcontext(0), helpstring("Returns the container/parent automation object, if any."), funckind(4), oVft(68), id(202), propget] IDispatch * STDMETHODCALLTYPE Container(void) ;
[localizedhelpstring("Returns the active Document automation object, if any."), helpcontext(0), helpstring("Returns the active Document automation object, if any."), funckind(4), oVft(72), id(203), propget] IDispatch * STDMETHODCALLTYPE Document(void) ;
[localizedhelpstring("Returns True if this is the top level object."), helpcontext(0), helpstring("Returns True if this is the top level object."), funckind(4), oVft(76), id(204), propget] boolean STDMETHODCALLTYPE TopLevelContainer(void) ;
[localizedhelpstring("Returns the type of the contained document object."), helpcontext(0), helpstring("Returns the type of the contained document object."), funckind(4), oVft(80), id(205), propget] BSTR STDMETHODCALLTYPE Type(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(84), id(206), propget] long STDMETHODCALLTYPE Left(void) ;
[localizedhelpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The horizontal position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(88), id(206), propput] void STDMETHODCALLTYPE Left([in] long PseudoName) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(92), id(207), propget] long STDMETHODCALLTYPE Top(void) ;
[localizedhelpstring("The vertical position (pixels) of the frame window relative to the screen/container."), helpcontext(0), helpstring("The vertical position (pixels) of the frame window relative to the screen/container."), funckind(4), oVft(96), id(207), propput] void STDMETHODCALLTYPE Top([in] long PseudoName) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(100), id(208), propget] long STDMETHODCALLTYPE Width(void) ;
[localizedhelpstring("The horizontal dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The horizontal dimension (pixels) of the frame window/object."), funckind(4), oVft(104), id(208), propput] void STDMETHODCALLTYPE Width([in] long PseudoName) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(108), id(209), propget] long STDMETHODCALLTYPE Height(void) ;
[localizedhelpstring("The vertical dimension (pixels) of the frame window/object."), helpcontext(0), helpstring("The vertical dimension (pixels) of the frame window/object."), funckind(4), oVft(112), id(209), propput] void STDMETHODCALLTYPE Height([in] long PseudoName) ;
[localizedhelpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), helpcontext(0), helpstring("Gets the short (UI-friendly) name of the URL/file currently viewed."), funckind(4), oVft(116), id(210), propget] BSTR STDMETHODCALLTYPE LocationName(void) ;
[localizedhelpstring("Gets the full URL/path currently viewed."), helpcontext(0), helpstring("Gets the full URL/path currently viewed."), funckind(4), oVft(120), id(211), propget] BSTR STDMETHODCALLTYPE LocationURL(void) ;
[localizedhelpstring("Query to see if something is still in progress."), helpcontext(0), helpstring("Query to see if something is still in progress."), funckind(4), oVft(124), id(212), propget] boolean STDMETHODCALLTYPE Busy(void) ;
[localizedhelpstring("Exits application and closes the open document."), helpcontext(0), helpstring("Exits application and closes the open document."), funckind(4), oVft(128), id(300)] void STDMETHODCALLTYPE Quit(void) ;
[localizedhelpstring("Converts client sizes into window sizes."), helpcontext(0), helpstring("Converts client sizes into window sizes."), funckind(4), oVft(132), id(301)] void STDMETHODCALLTYPE ClientToWindow([in, out] int * pcx, [in, out] int * pcy) ;
[localizedhelpstring("Associates vtValue with the name szProperty in the context of the object."), helpcontext(0), helpstring("Associates vtValue with the name szProperty in the context of the object."), funckind(4), oVft(136), id(302)] void STDMETHODCALLTYPE PutProperty([in] BSTR Property, [in] VARIANT vtValue) ;
[localizedhelpstring("Retrieve the Associated value for the property vtValue in the context of the object."), helpcontext(0), helpstring("Retrieve the Associated value for the property vtValue in the context of the object."), funckind(4), oVft(140), id(303)] VARIANT STDMETHODCALLTYPE GetProperty([in] BSTR Property) ;
[localizedhelpstring("Returns name of the application."), helpcontext(0), helpstring("Returns name of the application."), funckind(4), oVft(144), id(0), propget] BSTR STDMETHODCALLTYPE Name(void) ;
[localizedhelpstring("Returns the HWND of the current IE window."), helpcontext(0), helpstring("Returns the HWND of the current IE window."), funckind(4), oVft(148), id(-515), propget] long STDMETHODCALLTYPE HWND(void) ;
[localizedhelpstring("Returns file specification of the application, including path."), helpcontext(0), helpstring("Returns file specification of the application, including path."), funckind(4), oVft(152), id(400), propget] BSTR STDMETHODCALLTYPE FullName(void) ;
[localizedhelpstring("Returns the path to the application."), helpcontext(0), helpstring("Returns the path to the application."), funckind(4), oVft(156), id(401), propget] BSTR STDMETHODCALLTYPE Path(void) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(4), oVft(160), id(402), propget] boolean STDMETHODCALLTYPE Visible(void) ;
[localizedhelpstring("Determines whether the application is visible or hidden."), helpcontext(0), helpstring("Determines whether the application is visible or hidden."), funckind(4), oVft(164), id(402), propput] void STDMETHODCALLTYPE Visible([in] boolean PseudoName) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(4), oVft(168), id(403), propget] boolean STDMETHODCALLTYPE StatusBar(void) ;
[localizedhelpstring("Turn on or off the statusbar."), helpcontext(0), helpstring("Turn on or off the statusbar."), funckind(4), oVft(172), id(403), propput] void STDMETHODCALLTYPE StatusBar([in] boolean PseudoName) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(4), oVft(176), id(404), propget] BSTR STDMETHODCALLTYPE StatusText(void) ;
[localizedhelpstring("Text of Status window."), helpcontext(0), helpstring("Text of Status window."), funckind(4), oVft(180), id(404), propput] void STDMETHODCALLTYPE StatusText([in] BSTR PseudoName) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(4), oVft(184), id(405), propget] int STDMETHODCALLTYPE ToolBar(void) ;
[localizedhelpstring("Controls which toolbar is shown."), helpcontext(0), helpstring("Controls which toolbar is shown."), funckind(4), oVft(188), id(405), propput] void STDMETHODCALLTYPE ToolBar([in] int PseudoName) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(4), oVft(192), id(406), propget] boolean STDMETHODCALLTYPE MenuBar(void) ;
[localizedhelpstring("Controls whether menubar is shown."), helpcontext(0), helpstring("Controls whether menubar is shown."), funckind(4), oVft(196), id(406), propput] void STDMETHODCALLTYPE MenuBar([in] boolean PseudoName) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(4), oVft(200), id(407), propget] boolean STDMETHODCALLTYPE FullScreen(void) ;
[localizedhelpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), helpcontext(0), helpstring("Maximizes window and turns off statusbar, toolbar, menubar, and titlebar."), funckind(4), oVft(204), id(407), propput] void STDMETHODCALLTYPE FullScreen([in] boolean PseudoName) ;
[localizedhelpstring("Navigates to a URL or file or pidl."), helpcontext(0), helpstring("Navigates to a URL or file or pidl."), funckind(4), oVft(208), id(500)] void STDMETHODCALLTYPE Navigate2([in] VARIANT * URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("IOleCommandTarget::QueryStatus"), helpcontext(0), helpstring("IOleCommandTarget::QueryStatus"), funckind(4), oVft(212), id(501)] OLECMDF STDMETHODCALLTYPE QueryStatusWB([in] OLECMDID cmdID) ;
[localizedhelpstring("IOleCommandTarget::Exec"), helpcontext(0), helpstring("IOleCommandTarget::Exec"), funckind(4), oVft(216), id(502)] void STDMETHODCALLTYPE ExecWB([in] OLECMDID cmdID, [in] OLECMDEXECOPT cmdexecopt, [in, PARAMFLAG_FOPT, optional] VARIANT * pvaIn, [in, out, PARAMFLAG_FOPT, optional] VARIANT * pvaOut) ;
[localizedhelpstring("Set BrowserBar to Clsid"), helpcontext(0), helpstring("Set BrowserBar to Clsid"), funckind(4), oVft(220), id(503)] void STDMETHODCALLTYPE ShowBrowserBar([in] VARIANT * pvaClsid, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarShow, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarSize) ;
[helpcontext(0), bindable, funckind(4), oVft(224), id(-525), propget] tagREADYSTATE STDMETHODCALLTYPE ReadyState(void) ;
[localizedhelpstring("Controls if the frame is offline (read from cache)"), helpcontext(0), helpstring("Controls if the frame is offline (read from cache)"), funckind(4), oVft(228), id(550), propget] boolean STDMETHODCALLTYPE Offline(void) ;
[localizedhelpstring("Controls if the frame is offline (read from cache)"), helpcontext(0), helpstring("Controls if the frame is offline (read from cache)"), funckind(4), oVft(232), id(550), propput] void STDMETHODCALLTYPE Offline([in] boolean PseudoName) ;
[localizedhelpstring("Controls if any dialog boxes can be shown"), helpcontext(0), helpstring("Controls if any dialog boxes can be shown"), funckind(4), oVft(236), id(551), propget] boolean STDMETHODCALLTYPE Silent(void) ;
[localizedhelpstring("Controls if any dialog boxes can be shown"), helpcontext(0), helpstring("Controls if any dialog boxes can be shown"), funckind(4), oVft(240), id(551), propput] void STDMETHODCALLTYPE Silent([in] boolean PseudoName) ;
[localizedhelpstring("Registers OC as a top-level browser (for target name resolution)"), helpcontext(0), helpstring("Registers OC as a top-level browser (for target name resolution)"), funckind(4), oVft(244), id(552), propget] boolean STDMETHODCALLTYPE RegisterAsBrowser(void) ;
[localizedhelpstring("Registers OC as a top-level browser (for target name resolution)"), helpcontext(0), helpstring("Registers OC as a top-level browser (for target name resolution)"), funckind(4), oVft(248), id(552), propput] void STDMETHODCALLTYPE RegisterAsBrowser([in] boolean PseudoName) ;
[localizedhelpstring("Registers OC as a drop target for navigation"), helpcontext(0), helpstring("Registers OC as a drop target for navigation"), funckind(4), oVft(252), id(553), propget] boolean STDMETHODCALLTYPE RegisterAsDropTarget(void) ;
[localizedhelpstring("Registers OC as a drop target for navigation"), helpcontext(0), helpstring("Registers OC as a drop target for navigation"), funckind(4), oVft(256), id(553), propput] void STDMETHODCALLTYPE RegisterAsDropTarget([in] boolean PseudoName) ;
[localizedhelpstring("Controls if the browser is in theater mode"), helpcontext(0), helpstring("Controls if the browser is in theater mode"), funckind(4), oVft(260), id(554), propget] boolean STDMETHODCALLTYPE TheaterMode(void) ;
[localizedhelpstring("Controls if the browser is in theater mode"), helpcontext(0), helpstring("Controls if the browser is in theater mode"), funckind(4), oVft(264), id(554), propput] void STDMETHODCALLTYPE TheaterMode([in] boolean PseudoName) ;
[localizedhelpstring("Controls whether address bar is shown"), helpcontext(0), helpstring("Controls whether address bar is shown"), funckind(4), oVft(268), id(555), propget] boolean STDMETHODCALLTYPE AddressBar(void) ;
[localizedhelpstring("Controls whether address bar is shown"), helpcontext(0), helpstring("Controls whether address bar is shown"), funckind(4), oVft(272), id(555), propput] void STDMETHODCALLTYPE AddressBar([in] boolean PseudoName) ;
[localizedhelpstring("Controls whether the window is resizable"), helpcontext(0), helpstring("Controls whether the window is resizable"), funckind(4), oVft(276), id(556), propget] boolean STDMETHODCALLTYPE Resizable(void) ;
[localizedhelpstring("Controls whether the window is resizable"), helpcontext(0), helpstring("Controls whether the window is resizable"), funckind(4), oVft(280), id(556), propput] void STDMETHODCALLTYPE Resizable([in] boolean PseudoName) ;
}

[helpcontext(0), helpstring("Web Browser Interface for IE4."), localizedhelpstring("Web Browser Interface for IE4."), dual, oleautomation, version(0.0), uuid(D30C1661-CDAF-11D0-8A3E-00C04FC9E26E), hidden, cbSizeVft(284), cbSizeInstance(4), cbAlignment(4)] 
interface IWebBrowser2  : IWebBrowserApp  {
[localizedhelpstring("Navigates to a URL or file or pidl."), helpcontext(0), helpstring("Navigates to a URL or file or pidl."), funckind(1), oVft(208)] HRESULT STDMETHODCALLTYPE Navigate2([in] VARIANT * URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Flags, [in, PARAMFLAG_FOPT, optional] VARIANT * TargetFrameName, [in, PARAMFLAG_FOPT, optional] VARIANT * PostData, [in, PARAMFLAG_FOPT, optional] VARIANT * Headers) ;
[localizedhelpstring("IOleCommandTarget::QueryStatus"), helpcontext(0), helpstring("IOleCommandTarget::QueryStatus"), funckind(1), oVft(212)] HRESULT STDMETHODCALLTYPE QueryStatusWB([in] OLECMDID cmdID, [out, retval] OLECMDF * pcmdf) ;
[localizedhelpstring("IOleCommandTarget::Exec"), helpcontext(0), helpstring("IOleCommandTarget::Exec"), funckind(1), oVft(216)] HRESULT STDMETHODCALLTYPE ExecWB([in] OLECMDID cmdID, [in] OLECMDEXECOPT cmdexecopt, [in, PARAMFLAG_FOPT, optional] VARIANT * pvaIn, [in, out, PARAMFLAG_FOPT, optional] VARIANT * pvaOut) ;
[localizedhelpstring("Set BrowserBar to Clsid"), helpcontext(0), helpstring("Set BrowserBar to Clsid"), funckind(1), oVft(220)] HRESULT STDMETHODCALLTYPE ShowBrowserBar([in] VARIANT * pvaClsid, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarShow, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarSize) ;
[helpcontext(0), bindable, funckind(1), oVft(224), propget] HRESULT STDMETHODCALLTYPE ReadyState([out, retval] tagREADYSTATE * plReadyState) ;
[localizedhelpstring("Controls if the frame is offline (read from cache)"), helpcontext(0), helpstring("Controls if the frame is offline (read from cache)"), funckind(1), oVft(228), propget] HRESULT STDMETHODCALLTYPE Offline([out, retval] boolean * pbOffline) ;
[localizedhelpstring("Controls if the frame is offline (read from cache)"), helpcontext(0), helpstring("Controls if the frame is offline (read from cache)"), funckind(1), oVft(232), propput] HRESULT STDMETHODCALLTYPE Offline([in] boolean pbOffline) ;
[localizedhelpstring("Controls if any dialog boxes can be shown"), helpcontext(0), helpstring("Controls if any dialog boxes can be shown"), funckind(1), oVft(236), propget] HRESULT STDMETHODCALLTYPE Silent([out, retval] boolean * pbSilent) ;
[localizedhelpstring("Controls if any dialog boxes can be shown"), helpcontext(0), helpstring("Controls if any dialog boxes can be shown"), funckind(1), oVft(240), propput] HRESULT STDMETHODCALLTYPE Silent([in] boolean pbSilent) ;
[localizedhelpstring("Registers OC as a top-level browser (for target name resolution)"), helpcontext(0), helpstring("Registers OC as a top-level browser (for target name resolution)"), funckind(1), oVft(244), propget] HRESULT STDMETHODCALLTYPE RegisterAsBrowser([out, retval] boolean * pbRegister) ;
[localizedhelpstring("Registers OC as a top-level browser (for target name resolution)"), helpcontext(0), helpstring("Registers OC as a top-level browser (for target name resolution)"), funckind(1), oVft(248), propput] HRESULT STDMETHODCALLTYPE RegisterAsBrowser([in] boolean pbRegister) ;
[localizedhelpstring("Registers OC as a drop target for navigation"), helpcontext(0), helpstring("Registers OC as a drop target for navigation"), funckind(1), oVft(252), propget] HRESULT STDMETHODCALLTYPE RegisterAsDropTarget([out, retval] boolean * pbRegister) ;
[localizedhelpstring("Registers OC as a drop target for navigation"), helpcontext(0), helpstring("Registers OC as a drop target for navigation"), funckind(1), oVft(256), propput] HRESULT STDMETHODCALLTYPE RegisterAsDropTarget([in] boolean pbRegister) ;
[localizedhelpstring("Controls if the browser is in theater mode"), helpcontext(0), helpstring("Controls if the browser is in theater mode"), funckind(1), oVft(260), propget] HRESULT STDMETHODCALLTYPE TheaterMode([out, retval] boolean * pbRegister) ;
[localizedhelpstring("Controls if the browser is in theater mode"), helpcontext(0), helpstring("Controls if the browser is in theater mode"), funckind(1), oVft(264), propput] HRESULT STDMETHODCALLTYPE TheaterMode([in] boolean pbRegister) ;
[localizedhelpstring("Controls whether address bar is shown"), helpcontext(0), helpstring("Controls whether address bar is shown"), funckind(1), oVft(268), propget] HRESULT STDMETHODCALLTYPE AddressBar([out, retval] boolean * Value) ;
[localizedhelpstring("Controls whether address bar is shown"), helpcontext(0), helpstring("Controls whether address bar is shown"), funckind(1), oVft(272), propput] HRESULT STDMETHODCALLTYPE AddressBar([in] boolean Value) ;
[localizedhelpstring("Controls whether the window is resizable"), helpcontext(0), helpstring("Controls whether the window is resizable"), funckind(1), oVft(276), propget] HRESULT STDMETHODCALLTYPE Resizable([out, retval] boolean * Value) ;
[localizedhelpstring("Controls whether the window is resizable"), helpcontext(0), helpstring("Controls whether the window is resizable"), funckind(1), oVft(280), propput] HRESULT STDMETHODCALLTYPE Resizable([in] boolean Value) ;
}


typedef
[helpcontext(0), version(0.0), uuid(00000000-0000-0000-0000-000000000000), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), helpcontext(0)] OLECMDID_OPEN = 1 ,
[varkind(2), helpcontext(0)] OLECMDID_NEW = 2 ,
[varkind(2), helpcontext(0)] OLECMDID_SAVE = 3 ,
[varkind(2), helpcontext(0)] OLECMDID_SAVEAS = 4 ,
[varkind(2), helpcontext(0)] OLECMDID_SAVECOPYAS = 5 ,
[varkind(2), helpcontext(0)] OLECMDID_PRINT = 6 ,
[varkind(2), helpcontext(0)] OLECMDID_PRINTPREVIEW = 7 ,
[varkind(2), helpcontext(0)] OLECMDID_PAGESETUP = 8 ,
[varkind(2), helpcontext(0)] OLECMDID_SPELL = 9 ,
[varkind(2), helpcontext(0)] OLECMDID_PROPERTIES = 10 ,
[varkind(2), helpcontext(0)] OLECMDID_CUT = 11 ,
[varkind(2), helpcontext(0)] OLECMDID_COPY = 12 ,
[varkind(2), helpcontext(0)] OLECMDID_PASTE = 13 ,
[varkind(2), helpcontext(0)] OLECMDID_PASTESPECIAL = 14 ,
[varkind(2), helpcontext(0)] OLECMDID_UNDO = 15 ,
[varkind(2), helpcontext(0)] OLECMDID_REDO = 16 ,
[varkind(2), helpcontext(0)] OLECMDID_SELECTALL = 17 ,
[varkind(2), helpcontext(0)] OLECMDID_CLEARSELECTION = 18 ,
[varkind(2), helpcontext(0)] OLECMDID_ZOOM = 19 ,
[varkind(2), helpcontext(0)] OLECMDID_GETZOOMRANGE = 20 ,
[varkind(2), helpcontext(0)] OLECMDID_UPDATECOMMANDS = 21 ,
[varkind(2), helpcontext(0)] OLECMDID_REFRESH = 22 ,
[varkind(2), helpcontext(0)] OLECMDID_STOP = 23 ,
[varkind(2), helpcontext(0)] OLECMDID_HIDETOOLBARS = 24 ,
[varkind(2), helpcontext(0)] OLECMDID_SETPROGRESSMAX = 25 ,
[varkind(2), helpcontext(0)] OLECMDID_SETPROGRESSPOS = 26 ,
[varkind(2), helpcontext(0)] OLECMDID_SETPROGRESSTEXT = 27 ,
[varkind(2), helpcontext(0)] OLECMDID_SETTITLE = 28 ,
[varkind(2), helpcontext(0)] OLECMDID_SETDOWNLOADSTATE = 29 ,
[varkind(2), helpcontext(0)] OLECMDID_STOPDOWNLOAD = 30 ,
[varkind(2), helpcontext(0)] OLECMDID_ONTOOLBARACTIVATED = 31 ,
[varkind(2), helpcontext(0)] OLECMDID_FIND = 32 ,
[varkind(2), helpcontext(0)] OLECMDID_DELETE = 33 ,
[varkind(2), helpcontext(0)] OLECMDID_HTTPEQUIV = 34 ,
[varkind(2), helpcontext(0)] OLECMDID_HTTPEQUIV_DONE = 35 ,
[varkind(2), helpcontext(0)] OLECMDID_ENABLE_INTERACTION = 36 ,
[varkind(2), helpcontext(0)] OLECMDID_ONUNLOAD = 37 ,
[varkind(2), helpcontext(0)] OLECMDID_PROPERTYBAG2 = 38 ,
[varkind(2), helpcontext(0)] OLECMDID_PREREFRESH = 39 ,
[varkind(2), helpcontext(0)] OLECMDID_SHOWSCRIPTERROR = 40 ,
[varkind(2), helpcontext(0)] OLECMDID_SHOWMESSAGE = 41 ,
[varkind(2), helpcontext(0)] OLECMDID_SHOWFIND = 42 ,
[varkind(2), helpcontext(0)] OLECMDID_SHOWPAGESETUP = 43 ,
[varkind(2), helpcontext(0)] OLECMDID_SHOWPRINT = 44 ,
[varkind(2), helpcontext(0)] OLECMDID_CLOSE = 45 ,
[varkind(2), helpcontext(0)] OLECMDID_ALLOWUILESSSAVEAS = 46 ,
[varkind(2), helpcontext(0)] OLECMDID_DONTDOWNLOADCSS = 47 ,
} OLECMDID  ;


typedef
[helpcontext(0), version(0.0), uuid(00000000-0000-0000-0000-000000000000), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), helpcontext(0)] OLECMDF_SUPPORTED = 1 ,
[varkind(2), helpcontext(0)] OLECMDF_ENABLED = 2 ,
[varkind(2), helpcontext(0)] OLECMDF_LATCHED = 4 ,
[varkind(2), helpcontext(0)] OLECMDF_NINCHED = 8 ,
[varkind(2), helpcontext(0)] OLECMDF_INVISIBLE = 16 ,
[varkind(2), helpcontext(0)] OLECMDF_DEFHIDEONCTXTMENU = 32 ,
} OLECMDF  ;


typedef
[helpcontext(0), version(0.0), uuid(00000000-0000-0000-0000-000000000000), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), helpcontext(0)] OLECMDEXECOPT_DODEFAULT = 0 ,
[varkind(2), helpcontext(0)] OLECMDEXECOPT_PROMPTUSER = 1 ,
[varkind(2), helpcontext(0)] OLECMDEXECOPT_DONTPROMPTUSER = 2 ,
[varkind(2), helpcontext(0)] OLECMDEXECOPT_SHOWHELP = 3 ,
} OLECMDEXECOPT  ;


typedef
[helpcontext(0), version(0.0), uuid(00000000-0000-0000-0000-000000000000), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), helpcontext(0)] READYSTATE_UNINITIALIZED = 0 ,
[varkind(2), helpcontext(0)] READYSTATE_LOADING = 1 ,
[varkind(2), helpcontext(0)] READYSTATE_LOADED = 2 ,
[varkind(2), helpcontext(0)] READYSTATE_INTERACTIVE = 3 ,
[varkind(2), helpcontext(0)] READYSTATE_COMPLETE = 4 ,
} tagREADYSTATE  ;

[helpcontext(0), helpstring("Web Browser Control events interface"), localizedhelpstring("Web Browser Control events interface"), version(0.0), uuid(34A715A0-6587-11D0-924A-0020AFC7AC4D), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface DWebBrowserEvents2  {

properties:

methods:
[localizedhelpstring("Statusbar text changed."), helpcontext(0), helpstring("Statusbar text changed."), funckind(4), oVft(0), id(102)] void STDMETHODCALLTYPE StatusTextChange([in] BSTR Text) ;
[localizedhelpstring("Fired when download progress is updated."), helpcontext(0), helpstring("Fired when download progress is updated."), funckind(4), oVft(0), id(108)] void STDMETHODCALLTYPE ProgressChange([in] long Progress, [in] long ProgressMax) ;
[localizedhelpstring("The enabled state of a command changed."), helpcontext(0), helpstring("The enabled state of a command changed."), funckind(4), oVft(0), id(105)] void STDMETHODCALLTYPE CommandStateChange([in] long Command, [in] boolean Enable) ;
[localizedhelpstring("Download of a page started."), helpcontext(0), helpstring("Download of a page started."), funckind(4), oVft(0), id(106)] void STDMETHODCALLTYPE DownloadBegin(void) ;
[localizedhelpstring("Download of page complete."), helpcontext(0), helpstring("Download of page complete."), funckind(4), oVft(0), id(104)] void STDMETHODCALLTYPE DownloadComplete(void) ;
[localizedhelpstring("Document title changed."), helpcontext(0), helpstring("Document title changed."), funckind(4), oVft(0), id(113)] void STDMETHODCALLTYPE TitleChange([in] BSTR Text) ;
[localizedhelpstring("Fired when the PutProperty method has been called."), helpcontext(0), helpstring("Fired when the PutProperty method has been called."), funckind(4), oVft(0), id(112)] void STDMETHODCALLTYPE PropertyChange([in] BSTR szProperty) ;
[localizedhelpstring("Fired before navigate occurs in the given WebBrowser (window or frameset element). The processing of this navigation may be modified."), helpcontext(0), helpstring("Fired before navigate occurs in the given WebBrowser (window or frameset element). The processing of this navigation may be modified."), funckind(4), oVft(0), id(250)] void STDMETHODCALLTYPE BeforeNavigate2([in] IDispatch * pDisp, [in] VARIANT * URL, [in] VARIANT * Flags, [in] VARIANT * TargetFrameName, [in] VARIANT * PostData, [in] VARIANT * Headers, [in, out] boolean * Cancel) ;
[localizedhelpstring("A new, hidden, non-navigated WebBrowser window is needed."), helpcontext(0), helpstring("A new, hidden, non-navigated WebBrowser window is needed."), funckind(4), oVft(0), id(251)] void STDMETHODCALLTYPE NewWindow2([in, out] IDispatch * * ppDisp, [in, out] boolean * Cancel) ;
[localizedhelpstring("Fired when the document being navigated to becomes visible and enters the navigation stack."), helpcontext(0), helpstring("Fired when the document being navigated to becomes visible and enters the navigation stack."), funckind(4), oVft(0), id(252)] void STDMETHODCALLTYPE NavigateComplete2([in] IDispatch * pDisp, [in] VARIANT * URL) ;
[localizedhelpstring("Fired when the document being navigated to reaches ReadyState_Complete."), helpcontext(0), helpstring("Fired when the document being navigated to reaches ReadyState_Complete."), funckind(4), oVft(0), id(259)] void STDMETHODCALLTYPE DocumentComplete([in] IDispatch * pDisp, [in] VARIANT * URL) ;
[localizedhelpstring("Fired when application is quiting."), helpcontext(0), helpstring("Fired when application is quiting."), funckind(4), oVft(0), id(253)] void STDMETHODCALLTYPE OnQuit(void) ;
[localizedhelpstring("Fired when the window should be shown/hidden"), helpcontext(0), helpstring("Fired when the window should be shown/hidden"), funckind(4), oVft(0), id(254)] void STDMETHODCALLTYPE OnVisible([in] boolean Visible) ;
[localizedhelpstring("Fired when the toolbar  should be shown/hidden"), helpcontext(0), helpstring("Fired when the toolbar  should be shown/hidden"), funckind(4), oVft(0), id(255)] void STDMETHODCALLTYPE OnToolBar([in] boolean ToolBar) ;
[localizedhelpstring("Fired when the menubar should be shown/hidden"), helpcontext(0), helpstring("Fired when the menubar should be shown/hidden"), funckind(4), oVft(0), id(256)] void STDMETHODCALLTYPE OnMenuBar([in] boolean MenuBar) ;
[localizedhelpstring("Fired when the statusbar should be shown/hidden"), helpcontext(0), helpstring("Fired when the statusbar should be shown/hidden"), funckind(4), oVft(0), id(257)] void STDMETHODCALLTYPE OnStatusBar([in] boolean StatusBar) ;
[localizedhelpstring("Fired when fullscreen mode should be on/off"), helpcontext(0), helpstring("Fired when fullscreen mode should be on/off"), funckind(4), oVft(0), id(258)] void STDMETHODCALLTYPE OnFullScreen([in] boolean FullScreen) ;
[localizedhelpstring("Fired when theater mode should be on/off"), helpcontext(0), helpstring("Fired when theater mode should be on/off"), funckind(4), oVft(0), id(260)] void STDMETHODCALLTYPE OnTheaterMode([in] boolean TheaterMode) ;
}

[helpcontext(0), helpstring("WebBrowser Control"), localizedhelpstring("WebBrowser Control"), control, version(0.0), uuid(EAB22AC3-30C1-11CF-A7EB-0000C05BAE0B), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass WebBrowser_V1  {
dispinterface IWebBrowser2 ;
[default] dispinterface IWebBrowser ;
[source] dispinterface DWebBrowserEvents2 ;
[default, source] dispinterface DWebBrowserEvents ;
}

[helpcontext(0), helpstring("WebBrowser Control"), localizedhelpstring("WebBrowser Control"), control, version(0.0), uuid(8856F961-340A-11D0-A96B-00C04FD705A2), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass WebBrowser  {
[default] dispinterface IWebBrowser2 ;
dispinterface IWebBrowser ;
[default, source] dispinterface DWebBrowserEvents2 ;
[source] dispinterface DWebBrowserEvents ;
}

[helpcontext(0), helpstring("Internet Explorer Application."), localizedhelpstring("Internet Explorer Application."), version(0.0), uuid(0002DF01-0000-0000-C000-000000000046), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass InternetExplorer  {
[default] dispinterface IWebBrowser2 ;
dispinterface IWebBrowserApp ;
[default, source] dispinterface DWebBrowserEvents2 ;
[source] dispinterface DWebBrowserEvents ;
}

[helpcontext(0), helpstring("Shell Browser Window."), localizedhelpstring("Shell Browser Window."), version(0.0), uuid(C08AFD90-F2A1-11D1-8455-00A0C91F3880), hidden, cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass ShellBrowserWindow  {
[default] dispinterface IWebBrowser2 ;
dispinterface IWebBrowserApp ;
[default, source] dispinterface DWebBrowserEvents2 ;
[source] dispinterface DWebBrowserEvents ;
}


typedef
[helpcontext(0), helpstring("Constants for ShellWindows registration"), localizedhelpstring("Constants for ShellWindows registration"), version(0.0), uuid(F41E6981-28E5-11D0-82B4-00A0C90C29C5), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), localizedhelpstring("Explorer"), helpcontext(0), helpstring("Explorer")] SWC_EXPLORER = 0 ,
[varkind(2), localizedhelpstring("Various Browsing Windows"), helpcontext(0), helpstring("Various Browsing Windows")] SWC_BROWSER = 1 ,
[varkind(2), localizedhelpstring("3rd Party Browsers"), helpcontext(0), helpstring("3rd Party Browsers")] SWC_3RDPARTY = 2 ,
[varkind(2), localizedhelpstring("Creation Callback"), helpcontext(0), helpstring("Creation Callback")] SWC_CALLBACK = 4 ,
} ShellWindowTypeConstants  ;


typedef
[helpcontext(0), helpstring("Options for ShellWindows FindWindow"), localizedhelpstring("Options for ShellWindows FindWindow"), version(0.0), uuid(7716A370-38CA-11D0-A48B-00A0C90A8F39), hidden, cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
enum {
[varkind(2), localizedhelpstring("Need Dispatch"), helpcontext(0), helpstring("Need Dispatch")] SWFO_NEEDDISPATCH = 1 ,
[varkind(2), localizedhelpstring("Include Pending"), helpcontext(0), helpstring("Include Pending")] SWFO_INCLUDEPENDING = 2 ,
[varkind(2), localizedhelpstring("Cookie Passed"), helpcontext(0), helpstring("Cookie Passed")] SWFO_COOKIEPASSED = 4 ,
} ShellWindowFindWindowOptions  ;

[helpcontext(0), helpstring("Event interface for IShellWindows"), localizedhelpstring("Event interface for IShellWindows"), version(0.0), uuid(FE4106E0-399A-11D0-A48C-00A0C90A8F39), cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface DShellWindowsEvents  {

properties:

methods:
[localizedhelpstring("A new window was registered."), helpcontext(0), helpstring("A new window was registered."), funckind(4), oVft(0), id(200)] void STDMETHODCALLTYPE WindowRegistered([in] long lCookie) ;
[localizedhelpstring("A new window was revoked."), helpcontext(0), helpstring("A new window was revoked."), funckind(4), oVft(0), id(201)] void STDMETHODCALLTYPE WindowRevoked([in] long lCookie) ;
}

[helpcontext(0), helpstring("Definition of interface IShellWindows"), localizedhelpstring("Definition of interface IShellWindows"), dual, version(0.0), uuid(85CB6900-4D95-11CF-960C-0080C7F4EE85), cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IShellWindows  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Get count of open Shell windows"), helpcontext(0), helpstring("Get count of open Shell windows"), funckind(4), oVft(28), id(1610743808), propget] long STDMETHODCALLTYPE Count(void) ;
[localizedhelpstring("Return the shell window for the given index"), helpcontext(0), helpstring("Return the shell window for the given index"), funckind(4), oVft(32), id(0)] IDispatch * STDMETHODCALLTYPE Item([in, PARAMFLAG_FOPT, optional] VARIANT index) ;
[localizedhelpstring("Enumerates the figures"), helpcontext(0), helpstring("Enumerates the figures"), funckind(4), oVft(36), id(-4)] IUnknown * STDMETHODCALLTYPE _NewEnum(void) ;
[localizedhelpstring("Register a window with the list"), helpcontext(0), helpstring("Register a window with the list"), hidden, funckind(4), oVft(40), id(1610743811)] void STDMETHODCALLTYPE Register([in] IDispatch * pid, [in] long HWND, [in] int swClass, [out] long * plCookie) ;
[localizedhelpstring("Register a pending open with the list"), helpcontext(0), helpstring("Register a pending open with the list"), hidden, funckind(4), oVft(44), id(1610743812)] void STDMETHODCALLTYPE RegisterPending([in] long lThreadId, [in] VARIANT * pvarloc, [in] VARIANT * pvarlocRoot, [in] int swClass, [out] long * plCookie) ;
[localizedhelpstring("Remove a window from the list"), helpcontext(0), helpstring("Remove a window from the list"), hidden, funckind(4), oVft(48), id(1610743813)] void STDMETHODCALLTYPE Revoke([in] long lCookie) ;
[localizedhelpstring("Notifies the new location"), helpcontext(0), helpstring("Notifies the new location"), hidden, funckind(4), oVft(52), id(1610743814)] void STDMETHODCALLTYPE OnNavigate([in] long lCookie, [in] VARIANT * pvarloc) ;
[localizedhelpstring("Notifies the activation"), helpcontext(0), helpstring("Notifies the activation"), hidden, funckind(4), oVft(56), id(1610743815)] void STDMETHODCALLTYPE OnActivated([in] long lCookie, [in] boolean fActive) ;
[localizedhelpstring("Find the window based on the location"), helpcontext(0), helpstring("Find the window based on the location"), hidden, funckind(4), oVft(60), id(1610743816)] IDispatch * STDMETHODCALLTYPE FindWindow([in] VARIANT * pvarloc, [in] VARIANT * pvarlocRoot, [in] int swClass, [out] long * pHWND, [in] int swfwOptions) ;
[localizedhelpstring("Notifies on creation and frame name set"), helpcontext(0), helpstring("Notifies on creation and frame name set"), hidden, funckind(4), oVft(64), id(1610743817)] void STDMETHODCALLTYPE OnCreated([in] long lCookie, [in] IUnknown * punk) ;
[localizedhelpstring("Used by IExplore to register different processes"), helpcontext(0), helpstring("Used by IExplore to register different processes"), hidden, funckind(4), oVft(68), id(1610743818)] void STDMETHODCALLTYPE ProcessAttachDetach([in] boolean fAttach) ;
}

[helpcontext(0), helpstring("Definition of interface IShellWindows"), localizedhelpstring("Definition of interface IShellWindows"), dual, oleautomation, version(0.0), uuid(85CB6900-4D95-11CF-960C-0080C7F4EE85), cbSizeVft(72), cbSizeInstance(4), cbAlignment(4)] 
interface IShellWindows  : stdole.IDispatch  {
[localizedhelpstring("Get count of open Shell windows"), helpcontext(0), helpstring("Get count of open Shell windows"), funckind(1), oVft(28), propget] HRESULT STDMETHODCALLTYPE Count([out, retval] long * Count) ;
[localizedhelpstring("Return the shell window for the given index"), helpcontext(0), helpstring("Return the shell window for the given index"), funckind(1), oVft(32), id(0)] HRESULT STDMETHODCALLTYPE Item([in, PARAMFLAG_FOPT, optional] VARIANT index, [out, retval] IDispatch * * Folder) ;
[localizedhelpstring("Enumerates the figures"), helpcontext(0), helpstring("Enumerates the figures"), funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE _NewEnum([out, retval] IUnknown * * ppunk) ;
[localizedhelpstring("Register a window with the list"), helpcontext(0), helpstring("Register a window with the list"), hidden, funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE Register([in] IDispatch * pid, [in] long HWND, [in] int swClass, [out] long * plCookie) ;
[localizedhelpstring("Register a pending open with the list"), helpcontext(0), helpstring("Register a pending open with the list"), hidden, funckind(1), oVft(44)] HRESULT STDMETHODCALLTYPE RegisterPending([in] long lThreadId, [in] VARIANT * pvarloc, [in] VARIANT * pvarlocRoot, [in] int swClass, [out] long * plCookie) ;
[localizedhelpstring("Remove a window from the list"), helpcontext(0), helpstring("Remove a window from the list"), hidden, funckind(1), oVft(48)] HRESULT STDMETHODCALLTYPE Revoke([in] long lCookie) ;
[localizedhelpstring("Notifies the new location"), helpcontext(0), helpstring("Notifies the new location"), hidden, funckind(1), oVft(52)] HRESULT STDMETHODCALLTYPE OnNavigate([in] long lCookie, [in] VARIANT * pvarloc) ;
[localizedhelpstring("Notifies the activation"), helpcontext(0), helpstring("Notifies the activation"), hidden, funckind(1), oVft(56)] HRESULT STDMETHODCALLTYPE OnActivated([in] long lCookie, [in] boolean fActive) ;
[localizedhelpstring("Find the window based on the location"), helpcontext(0), helpstring("Find the window based on the location"), hidden, funckind(1), oVft(60)] HRESULT STDMETHODCALLTYPE FindWindow([in] VARIANT * pvarloc, [in] VARIANT * pvarlocRoot, [in] int swClass, [out] long * pHWND, [in] int swfwOptions, [out, retval] IDispatch * * ppdispOut) ;
[localizedhelpstring("Notifies on creation and frame name set"), helpcontext(0), helpstring("Notifies on creation and frame name set"), hidden, funckind(1), oVft(64)] HRESULT STDMETHODCALLTYPE OnCreated([in] long lCookie, [in] IUnknown * punk) ;
[localizedhelpstring("Used by IExplore to register different processes"), helpcontext(0), helpstring("Used by IExplore to register different processes"), hidden, funckind(1), oVft(68)] HRESULT STDMETHODCALLTYPE ProcessAttachDetach([in] boolean fAttach) ;
}

[helpcontext(0), helpstring("ShellDispatch Load in Shell Context"), localizedhelpstring("ShellDispatch Load in Shell Context"), version(0.0), uuid(9BA05972-F6A8-11CF-A442-00A0C90A8F39), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass ShellWindows  {
[default] dispinterface IShellWindows ;
[default, source] dispinterface DShellWindowsEvents ;
}

[helpcontext(0), helpstring("Shell UI Helper Control Interface"), localizedhelpstring("Shell UI Helper Control Interface"), dual, version(0.0), uuid(729FE2F8-1EA8-11D1-8F85-00C04FC2FBE1), cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IShellUIHelper  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[helpcontext(0), hidden, funckind(4), oVft(28), id(1)] void STDMETHODCALLTYPE ResetFirstBootMode(void) ;
[helpcontext(0), hidden, funckind(4), oVft(32), id(2)] void STDMETHODCALLTYPE ResetSafeMode(void) ;
[helpcontext(0), hidden, funckind(4), oVft(36), id(3)] void STDMETHODCALLTYPE RefreshOfflineDesktop(void) ;
[helpcontext(0), funckind(4), oVft(40), id(4)] void STDMETHODCALLTYPE AddFavorite([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Title) ;
[helpcontext(0), funckind(4), oVft(44), id(5)] void STDMETHODCALLTYPE AddChannel([in] BSTR URL) ;
[helpcontext(0), funckind(4), oVft(48), id(6)] void STDMETHODCALLTYPE AddDesktopComponent([in] BSTR URL, [in] BSTR Type, [in, PARAMFLAG_FOPT, optional] VARIANT * Left, [in, PARAMFLAG_FOPT, optional] VARIANT * Top, [in, PARAMFLAG_FOPT, optional] VARIANT * Width, [in, PARAMFLAG_FOPT, optional] VARIANT * Height) ;
[helpcontext(0), funckind(4), oVft(52), id(7)] boolean STDMETHODCALLTYPE IsSubscribed([in] BSTR URL) ;
[helpcontext(0), funckind(4), oVft(56), id(8)] void STDMETHODCALLTYPE NavigateAndFind([in] BSTR URL, [in] BSTR strQuery, [in] VARIANT * varTargetFrame) ;
[helpcontext(0), funckind(4), oVft(60), id(9)] void STDMETHODCALLTYPE ImportExportFavorites([in] boolean fImport, [in] BSTR strImpExpPath) ;
[helpcontext(0), funckind(4), oVft(64), id(10)] void STDMETHODCALLTYPE AutoCompleteSaveForm([in, PARAMFLAG_FOPT, optional] VARIANT * Form) ;
[helpcontext(0), funckind(4), oVft(68), id(11)] void STDMETHODCALLTYPE AutoScan([in] BSTR strSearch, [in] BSTR strFailureUrl, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarTargetFrame) ;
[helpcontext(0), hidden, funckind(4), oVft(72), id(12)] void STDMETHODCALLTYPE AutoCompleteAttach([in, PARAMFLAG_FOPT, optional] VARIANT * Reserved) ;
[helpcontext(0), funckind(4), oVft(76), id(13)] VARIANT STDMETHODCALLTYPE ShowBrowserUI([in] BSTR bstrName, [in] VARIANT * pvarIn) ;
}

[helpcontext(0), helpstring("Shell UI Helper Control Interface"), localizedhelpstring("Shell UI Helper Control Interface"), dual, oleautomation, version(0.0), uuid(729FE2F8-1EA8-11D1-8F85-00C04FC2FBE1), cbSizeVft(80), cbSizeInstance(4), cbAlignment(4)] 
interface IShellUIHelper  : stdole.IDispatch  {
[helpcontext(0), hidden, funckind(1), oVft(28)] HRESULT STDMETHODCALLTYPE ResetFirstBootMode(void) ;
[helpcontext(0), hidden, funckind(1), oVft(32)] HRESULT STDMETHODCALLTYPE ResetSafeMode(void) ;
[helpcontext(0), hidden, funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE RefreshOfflineDesktop(void) ;
[helpcontext(0), funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE AddFavorite([in] BSTR URL, [in, PARAMFLAG_FOPT, optional] VARIANT * Title) ;
[helpcontext(0), funckind(1), oVft(44)] HRESULT STDMETHODCALLTYPE AddChannel([in] BSTR URL) ;
[helpcontext(0), funckind(1), oVft(48)] HRESULT STDMETHODCALLTYPE AddDesktopComponent([in] BSTR URL, [in] BSTR Type, [in, PARAMFLAG_FOPT, optional] VARIANT * Left, [in, PARAMFLAG_FOPT, optional] VARIANT * Top, [in, PARAMFLAG_FOPT, optional] VARIANT * Width, [in, PARAMFLAG_FOPT, optional] VARIANT * Height) ;
[helpcontext(0), funckind(1), oVft(52)] HRESULT STDMETHODCALLTYPE IsSubscribed([in] BSTR URL, [out, retval] boolean * pBool) ;
[helpcontext(0), funckind(1), oVft(56)] HRESULT STDMETHODCALLTYPE NavigateAndFind([in] BSTR URL, [in] BSTR strQuery, [in] VARIANT * varTargetFrame) ;
[helpcontext(0), funckind(1), oVft(60)] HRESULT STDMETHODCALLTYPE ImportExportFavorites([in] boolean fImport, [in] BSTR strImpExpPath) ;
[helpcontext(0), funckind(1), oVft(64)] HRESULT STDMETHODCALLTYPE AutoCompleteSaveForm([in, PARAMFLAG_FOPT, optional] VARIANT * Form) ;
[helpcontext(0), funckind(1), oVft(68)] HRESULT STDMETHODCALLTYPE AutoScan([in] BSTR strSearch, [in] BSTR strFailureUrl, [in, PARAMFLAG_FOPT, optional] VARIANT * pvarTargetFrame) ;
[helpcontext(0), hidden, funckind(1), oVft(72)] HRESULT STDMETHODCALLTYPE AutoCompleteAttach([in, PARAMFLAG_FOPT, optional] VARIANT * Reserved) ;
[helpcontext(0), funckind(1), oVft(76)] HRESULT STDMETHODCALLTYPE ShowBrowserUI([in] BSTR bstrName, [in] VARIANT * pvarIn, [out, retval] VARIANT * pvarOut) ;
}

[helpcontext(0), version(0.0), uuid(64AB4BB7-111E-11D1-8F79-00C04FC2FBE1), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass ShellUIHelper  {
[default] dispinterface IShellUIHelper ;
}

[helpcontext(0), version(0.0), uuid(55136806-B2DE-11D1-B9F2-00A0C98BC547), cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface _ShellFavoritesNameSpaceEvents  {

properties:

methods:
[helpcontext(0), funckind(4), oVft(0), id(1)] void STDMETHODCALLTYPE FavoritesSelectionChange([in] long cItems, [in] long hItem, [in] BSTR strName, [in] BSTR strUrl, [in] long cVisits, [in] BSTR strDate, [in] long fAvailableOffline) ;
}

[helpcontext(0), helpstring("IShellFavoritesNameSpace Interface"), localizedhelpstring("IShellFavoritesNameSpace Interface"), dual, version(0.0), uuid(55136804-B2DE-11D1-B9F2-00A0C98BC547), cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IShellFavoritesNameSpace  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("method MoveSelectionUp"), helpcontext(0), helpstring("method MoveSelectionUp"), hidden, funckind(4), oVft(28), id(1)] void STDMETHODCALLTYPE MoveSelectionUp(void) ;
[localizedhelpstring("method MoveSelectionDown"), helpcontext(0), helpstring("method MoveSelectionDown"), hidden, funckind(4), oVft(32), id(2)] void STDMETHODCALLTYPE MoveSelectionDown(void) ;
[localizedhelpstring("method ResetSort"), helpcontext(0), helpstring("method ResetSort"), hidden, funckind(4), oVft(36), id(3)] void STDMETHODCALLTYPE ResetSort(void) ;
[localizedhelpstring("method NewFolder"), helpcontext(0), helpstring("method NewFolder"), hidden, funckind(4), oVft(40), id(4)] void STDMETHODCALLTYPE NewFolder(void) ;
[localizedhelpstring("method Synchronize"), helpcontext(0), helpstring("method Synchronize"), hidden, funckind(4), oVft(44), id(5)] void STDMETHODCALLTYPE Synchronize(void) ;
[localizedhelpstring("method Import"), helpcontext(0), helpstring("method Import"), hidden, funckind(4), oVft(48), id(6)] void STDMETHODCALLTYPE Import(void) ;
[localizedhelpstring("method Export"), helpcontext(0), helpstring("method Export"), hidden, funckind(4), oVft(52), id(7)] void STDMETHODCALLTYPE Export(void) ;
[localizedhelpstring("method InvokeContextMenuCommand"), helpcontext(0), helpstring("method InvokeContextMenuCommand"), hidden, funckind(4), oVft(56), id(8)] void STDMETHODCALLTYPE InvokeContextMenuCommand([in] BSTR strCommand) ;
[localizedhelpstring("method MoveSelectionTo"), helpcontext(0), helpstring("method MoveSelectionTo"), hidden, funckind(4), oVft(60), id(9)] void STDMETHODCALLTYPE MoveSelectionTo(void) ;
[localizedhelpstring("Query to see if offline pack is installed"), helpcontext(0), helpstring("Query to see if offline pack is installed"), hidden, funckind(4), oVft(64), id(10), propget] boolean STDMETHODCALLTYPE FOfflinePackInstalled(void) ;
[localizedhelpstring("method CreateSubscriptionForSelection"), helpcontext(0), helpstring("method CreateSubscriptionForSelection"), hidden, funckind(4), oVft(68), id(11)] boolean STDMETHODCALLTYPE CreateSubscriptionForSelection(void) ;
[localizedhelpstring("method DeleteSubscriptionForSelection"), helpcontext(0), helpstring("method DeleteSubscriptionForSelection"), hidden, funckind(4), oVft(72), id(12)] boolean STDMETHODCALLTYPE DeleteSubscriptionForSelection(void) ;
[localizedhelpstring("method SetRoot"), helpcontext(0), helpstring("method SetRoot"), hidden, funckind(4), oVft(76), id(13)] void STDMETHODCALLTYPE SetRoot([in] BSTR bstrFullPath) ;
}

[helpcontext(0), helpstring("IShellFavoritesNameSpace Interface"), localizedhelpstring("IShellFavoritesNameSpace Interface"), dual, oleautomation, version(0.0), uuid(55136804-B2DE-11D1-B9F2-00A0C98BC547), cbSizeVft(80), cbSizeInstance(4), cbAlignment(4)] 
interface IShellFavoritesNameSpace  : stdole.IDispatch  {
[localizedhelpstring("method MoveSelectionUp"), helpcontext(0), helpstring("method MoveSelectionUp"), hidden, funckind(1), oVft(28)] HRESULT STDMETHODCALLTYPE MoveSelectionUp(void) ;
[localizedhelpstring("method MoveSelectionDown"), helpcontext(0), helpstring("method MoveSelectionDown"), hidden, funckind(1), oVft(32)] HRESULT STDMETHODCALLTYPE MoveSelectionDown(void) ;
[localizedhelpstring("method ResetSort"), helpcontext(0), helpstring("method ResetSort"), hidden, funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE ResetSort(void) ;
[localizedhelpstring("method NewFolder"), helpcontext(0), helpstring("method NewFolder"), hidden, funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE NewFolder(void) ;
[localizedhelpstring("method Synchronize"), helpcontext(0), helpstring("method Synchronize"), hidden, funckind(1), oVft(44)] HRESULT STDMETHODCALLTYPE Synchronize(void) ;
[localizedhelpstring("method Import"), helpcontext(0), helpstring("method Import"), hidden, funckind(1), oVft(48)] HRESULT STDMETHODCALLTYPE Import(void) ;
[localizedhelpstring("method Export"), helpcontext(0), helpstring("method Export"), hidden, funckind(1), oVft(52)] HRESULT STDMETHODCALLTYPE Export(void) ;
[localizedhelpstring("method InvokeContextMenuCommand"), helpcontext(0), helpstring("method InvokeContextMenuCommand"), hidden, funckind(1), oVft(56)] HRESULT STDMETHODCALLTYPE InvokeContextMenuCommand([in] BSTR strCommand) ;
[localizedhelpstring("method MoveSelectionTo"), helpcontext(0), helpstring("method MoveSelectionTo"), hidden, funckind(1), oVft(60)] HRESULT STDMETHODCALLTYPE MoveSelectionTo(void) ;
[localizedhelpstring("Query to see if offline pack is installed"), helpcontext(0), helpstring("Query to see if offline pack is installed"), hidden, funckind(1), oVft(64), propget] HRESULT STDMETHODCALLTYPE FOfflinePackInstalled([out, retval] boolean * pBool) ;
[localizedhelpstring("method CreateSubscriptionForSelection"), helpcontext(0), helpstring("method CreateSubscriptionForSelection"), hidden, funckind(1), oVft(68)] HRESULT STDMETHODCALLTYPE CreateSubscriptionForSelection([out, retval] boolean * pBool) ;
[localizedhelpstring("method DeleteSubscriptionForSelection"), helpcontext(0), helpstring("method DeleteSubscriptionForSelection"), hidden, funckind(1), oVft(72)] HRESULT STDMETHODCALLTYPE DeleteSubscriptionForSelection([out, retval] boolean * pBool) ;
[localizedhelpstring("method SetRoot"), helpcontext(0), helpstring("method SetRoot"), hidden, funckind(1), oVft(76)] HRESULT STDMETHODCALLTYPE SetRoot([in] BSTR bstrFullPath) ;
}

[helpcontext(0), version(0.0), uuid(55136805-B2DE-11D1-B9F2-00A0C98BC547), cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass ShellFavoritesNameSpace  {
[default] dispinterface IShellFavoritesNameSpace ;
[default, source] dispinterface _ShellFavoritesNameSpaceEvents ;
}

[helpcontext(0), helpstring("Script Error List Interface"), localizedhelpstring("Script Error List Interface"), dual, version(0.0), uuid(F3470F24-15FD-11D2-BB2E-00805FF7EFCA), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface IScriptErrorList  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[helpcontext(0), funckind(4), oVft(28), id(10)] void STDMETHODCALLTYPE advanceError(void) ;
[helpcontext(0), funckind(4), oVft(32), id(11)] void STDMETHODCALLTYPE retreatError(void) ;
[helpcontext(0), funckind(4), oVft(36), id(12)] long STDMETHODCALLTYPE canAdvanceError(void) ;
[helpcontext(0), funckind(4), oVft(40), id(13)] long STDMETHODCALLTYPE canRetreatError(void) ;
[helpcontext(0), funckind(4), oVft(44), id(14)] long STDMETHODCALLTYPE getErrorLine(void) ;
[helpcontext(0), funckind(4), oVft(48), id(15)] long STDMETHODCALLTYPE getErrorChar(void) ;
[helpcontext(0), funckind(4), oVft(52), id(16)] long STDMETHODCALLTYPE getErrorCode(void) ;
[helpcontext(0), funckind(4), oVft(56), id(17)] BSTR STDMETHODCALLTYPE getErrorMsg(void) ;
[helpcontext(0), funckind(4), oVft(60), id(18)] BSTR STDMETHODCALLTYPE getErrorUrl(void) ;
[helpcontext(0), funckind(4), oVft(64), id(23)] long STDMETHODCALLTYPE getAlwaysShowLockState(void) ;
[helpcontext(0), funckind(4), oVft(68), id(19)] long STDMETHODCALLTYPE getDetailsPaneOpen(void) ;
[helpcontext(0), funckind(4), oVft(72), id(20)] void STDMETHODCALLTYPE setDetailsPaneOpen(long fDetailsPaneOpen) ;
[helpcontext(0), funckind(4), oVft(76), id(21)] long STDMETHODCALLTYPE getPerErrorDisplay(void) ;
[helpcontext(0), funckind(4), oVft(80), id(22)] void STDMETHODCALLTYPE setPerErrorDisplay(long fPerErrorDisplay) ;
}

[helpcontext(0), helpstring("Script Error List Interface"), localizedhelpstring("Script Error List Interface"), dual, oleautomation, version(0.0), uuid(F3470F24-15FD-11D2-BB2E-00805FF7EFCA), hidden, cbSizeVft(84), cbSizeInstance(4), cbAlignment(4)] 
interface IScriptErrorList  : stdole.IDispatch  {
[helpcontext(0), funckind(1), oVft(28)] HRESULT STDMETHODCALLTYPE advanceError(void) ;
[helpcontext(0), funckind(1), oVft(32)] HRESULT STDMETHODCALLTYPE retreatError(void) ;
[helpcontext(0), funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE canAdvanceError([out, retval] long * pfCanAdvance) ;
[helpcontext(0), funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE canRetreatError([out, retval] long * pfCanRetreat) ;
[helpcontext(0), funckind(1), oVft(44)] HRESULT STDMETHODCALLTYPE getErrorLine([out, retval] long * plLine) ;
[helpcontext(0), funckind(1), oVft(48)] HRESULT STDMETHODCALLTYPE getErrorChar([out, retval] long * plChar) ;
[helpcontext(0), funckind(1), oVft(52)] HRESULT STDMETHODCALLTYPE getErrorCode([out, retval] long * plCode) ;
[helpcontext(0), funckind(1), oVft(56)] HRESULT STDMETHODCALLTYPE getErrorMsg([out, retval] BSTR * pstr) ;
[helpcontext(0), funckind(1), oVft(60)] HRESULT STDMETHODCALLTYPE getErrorUrl([out, retval] BSTR * pstr) ;
[helpcontext(0), funckind(1), oVft(64)] HRESULT STDMETHODCALLTYPE getAlwaysShowLockState([out, retval] long * pfAlwaysShowLocked) ;
[helpcontext(0), funckind(1), oVft(68)] HRESULT STDMETHODCALLTYPE getDetailsPaneOpen([out, retval] long * pfDetailsPaneOpen) ;
[helpcontext(0), funckind(1), oVft(72)] HRESULT STDMETHODCALLTYPE setDetailsPaneOpen(long fDetailsPaneOpen) ;
[helpcontext(0), funckind(1), oVft(76)] HRESULT STDMETHODCALLTYPE getPerErrorDisplay([out, retval] long * pfPerErrorDisplay) ;
[helpcontext(0), funckind(1), oVft(80)] HRESULT STDMETHODCALLTYPE setPerErrorDisplay(long fPerErrorDisplay) ;
}

[helpcontext(0), version(0.0), uuid(EFD01300-160F-11D2-BB2E-00805FF7EFCA), hidden, cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass CScriptErrorList  {
[default] dispinterface IScriptErrorList ;
}

[helpcontext(0), helpstring("Enumerated Search"), localizedhelpstring("Enumerated Search"), dual, version(0.0), uuid(BA9239A4-3DD5-11D2-BF8B-00C04FB93661), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface ISearch  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Get search title"), helpcontext(0), helpstring("Get search title"), funckind(4), oVft(28), id(1610743808), propget] BSTR STDMETHODCALLTYPE Title(void) ;
[localizedhelpstring("Get search guid"), helpcontext(0), helpstring("Get search guid"), funckind(4), oVft(32), id(1610743809), propget] BSTR STDMETHODCALLTYPE Id(void) ;
[localizedhelpstring("Get search url"), helpcontext(0), helpstring("Get search url"), funckind(4), oVft(36), id(1610743810), propget] BSTR STDMETHODCALLTYPE URL(void) ;
}

[helpcontext(0), helpstring("Enumerated Search"), localizedhelpstring("Enumerated Search"), dual, oleautomation, version(0.0), uuid(BA9239A4-3DD5-11D2-BF8B-00C04FB93661), hidden, cbSizeVft(40), cbSizeInstance(4), cbAlignment(4)] 
interface ISearch  : stdole.IDispatch  {
[localizedhelpstring("Get search title"), helpcontext(0), helpstring("Get search title"), funckind(1), oVft(28), propget] HRESULT STDMETHODCALLTYPE Title([out, retval] BSTR * pbstrTitle) ;
[localizedhelpstring("Get search guid"), helpcontext(0), helpstring("Get search guid"), funckind(1), oVft(32), propget] HRESULT STDMETHODCALLTYPE Id([out, retval] BSTR * pbstrId) ;
[localizedhelpstring("Get search url"), helpcontext(0), helpstring("Get search url"), funckind(1), oVft(36), propget] HRESULT STDMETHODCALLTYPE URL([out, retval] BSTR * pbstrUrl) ;
}

[helpcontext(0), helpstring("Searches Enum"), localizedhelpstring("Searches Enum"), dual, version(0.0), uuid(47C922A2-3DD5-11D2-BF8B-00C04FB93661), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface ISearches  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[localizedhelpstring("Get the count of searches"), helpcontext(0), helpstring("Get the count of searches"), funckind(4), oVft(28), id(1610743808), propget] long STDMETHODCALLTYPE Count(void) ;
[localizedhelpstring("Get the default search name"), helpcontext(0), helpstring("Get the default search name"), funckind(4), oVft(32), id(1610743809), propget] BSTR STDMETHODCALLTYPE Default(void) ;
[localizedhelpstring("Return the specified search"), helpcontext(0), helpstring("Return the specified search"), funckind(4), oVft(36), id(1610743810)] dispinterface ISearch * STDMETHODCALLTYPE Item([in, PARAMFLAG_FOPT, optional] VARIANT index) ;
[localizedhelpstring("Enumerates the searches"), helpcontext(0), helpstring("Enumerates the searches"), funckind(4), oVft(40), id(-4)] IUnknown * STDMETHODCALLTYPE _NewEnum(void) ;
}

[helpcontext(0), helpstring("Searches Enum"), localizedhelpstring("Searches Enum"), dual, oleautomation, version(0.0), uuid(47C922A2-3DD5-11D2-BF8B-00C04FB93661), hidden, cbSizeVft(44), cbSizeInstance(4), cbAlignment(4)] 
interface ISearches  : stdole.IDispatch  {
[localizedhelpstring("Get the count of searches"), helpcontext(0), helpstring("Get the count of searches"), funckind(1), oVft(28), propget] HRESULT STDMETHODCALLTYPE Count([out, retval] long * plCount) ;
[localizedhelpstring("Get the default search name"), helpcontext(0), helpstring("Get the default search name"), funckind(1), oVft(32), propget] HRESULT STDMETHODCALLTYPE Default([out, retval] BSTR * pbstrDefault) ;
[localizedhelpstring("Return the specified search"), helpcontext(0), helpstring("Return the specified search"), funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE Item([in, PARAMFLAG_FOPT, optional] VARIANT index, [out, retval] ISearch * * ppid) ;
[localizedhelpstring("Enumerates the searches"), helpcontext(0), helpstring("Enumerates the searches"), funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE _NewEnum([out, retval] IUnknown * * ppunk) ;
}

[helpcontext(0), helpstring("ISearchAssistantOC Interface"), localizedhelpstring("ISearchAssistantOC Interface"), dual, version(0.0), uuid(72423E8F-8011-11D2-BE79-00A0C9A83DA1), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface ISearchAssistantOC  {

properties:

methods:
[helpcontext(0), restricted, funckind(4), oVft(0), id(1610612736)] void STDMETHODCALLTYPE QueryInterface([in] stdole.GUID * riid, [out] void * * ppvObj) ;
[helpcontext(0), restricted, funckind(4), oVft(4), id(1610612737)] unsigned long STDMETHODCALLTYPE AddRef(void) ;
[helpcontext(0), restricted, funckind(4), oVft(8), id(1610612738)] unsigned long STDMETHODCALLTYPE Release(void) ;
[helpcontext(0), restricted, funckind(4), oVft(12), id(1610678272)] void STDMETHODCALLTYPE GetTypeInfoCount([out] unsigned int * pctinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(16), id(1610678273)] void STDMETHODCALLTYPE GetTypeInfo([in] unsigned int itinfo, [in] unsigned long lcid, [out] void * * pptinfo) ;
[helpcontext(0), restricted, funckind(4), oVft(20), id(1610678274)] void STDMETHODCALLTYPE GetIDsOfNames([in] stdole.GUID * riid, [in] char * * rgszNames, [in] unsigned int cNames, [in] unsigned long lcid, [out] long * rgdispid) ;
[helpcontext(0), restricted, funckind(4), oVft(24), id(1610678275)] void STDMETHODCALLTYPE Invoke([in] long dispidMember, [in] stdole.GUID * riid, [in] unsigned long lcid, [in] unsigned short wFlags, [in] stdole.DISPPARAMS * pdispparams, [out] VARIANT * pvarResult, [out] stdole.EXCEPINFO * pexcepinfo, [out] unsigned int * puArgErr) ;
[helpcontext(0), funckind(4), oVft(28), id(1)] void STDMETHODCALLTYPE AddNextMenuItem([in] BSTR bstrText, [in] long idItem) ;
[helpcontext(0), funckind(4), oVft(32), id(2)] void STDMETHODCALLTYPE SetDefaultSearchUrl([in] BSTR bstrUrl) ;
[helpcontext(0), funckind(4), oVft(36), id(3)] void STDMETHODCALLTYPE NavigateToDefaultSearch(void) ;
[helpcontext(0), funckind(4), oVft(40), id(4)] boolean STDMETHODCALLTYPE IsRestricted([in] BSTR bstrGuid) ;
[localizedhelpstring("property ShellFeaturesEnabled"), helpcontext(0), helpstring("property ShellFeaturesEnabled"), funckind(4), oVft(44), id(5), propget] boolean STDMETHODCALLTYPE ShellFeaturesEnabled(void) ;
[localizedhelpstring("property SearchAssistantDefault"), helpcontext(0), helpstring("property SearchAssistantDefault"), funckind(4), oVft(48), id(6), propget] boolean STDMETHODCALLTYPE SearchAssistantDefault(void) ;
[localizedhelpstring("Get searches"), helpcontext(0), helpstring("Get searches"), funckind(4), oVft(52), id(7), propget] dispinterface ISearches * STDMETHODCALLTYPE Searches(void) ;
[localizedhelpstring("Returns true if the current folder is web folder"), helpcontext(0), helpstring("Returns true if the current folder is web folder"), funckind(4), oVft(56), id(8), propget] boolean STDMETHODCALLTYPE InWebFolder(void) ;
[helpcontext(0), funckind(4), oVft(60), id(9)] void STDMETHODCALLTYPE PutProperty([in] boolean bPerLocale, [in] BSTR bstrName, [in] BSTR bstrValue) ;
[helpcontext(0), funckind(4), oVft(64), id(10)] BSTR STDMETHODCALLTYPE GetProperty([in] boolean bPerLocale, [in] BSTR bstrName) ;
[helpcontext(0), funckind(4), oVft(68), id(11), propput] void STDMETHODCALLTYPE EventHandled([in] boolean PseudoName) ;
[helpcontext(0), funckind(4), oVft(72), id(12)] void STDMETHODCALLTYPE ResetNextMenu(void) ;
[helpcontext(0), funckind(4), oVft(76), id(13)] void STDMETHODCALLTYPE FindOnWeb(void) ;
[helpcontext(0), funckind(4), oVft(80), id(14)] void STDMETHODCALLTYPE FindFilesOrFolders(void) ;
[helpcontext(0), funckind(4), oVft(84), id(15)] void STDMETHODCALLTYPE FindComputer(void) ;
[helpcontext(0), funckind(4), oVft(88), id(16)] void STDMETHODCALLTYPE FindPrinter(void) ;
[helpcontext(0), funckind(4), oVft(92), id(17)] void STDMETHODCALLTYPE FindPeople(void) ;
[helpcontext(0), funckind(4), oVft(96), id(18)] BSTR STDMETHODCALLTYPE GetSearchAssistantURL([in] boolean bSubstitute, [in] boolean bCustomize) ;
[helpcontext(0), funckind(4), oVft(100), id(19)] void STDMETHODCALLTYPE NotifySearchSettingsChanged(void) ;
[helpcontext(0), funckind(4), oVft(104), id(20), propput] void STDMETHODCALLTYPE ASProvider([in] BSTR PseudoName) ;
[helpcontext(0), funckind(4), oVft(108), id(20), propget] BSTR STDMETHODCALLTYPE ASProvider(void) ;
[helpcontext(0), funckind(4), oVft(112), id(21), propput] void STDMETHODCALLTYPE ASSetting([in] int PseudoName) ;
[helpcontext(0), funckind(4), oVft(116), id(21), propget] int STDMETHODCALLTYPE ASSetting(void) ;
[helpcontext(0), funckind(4), oVft(120), id(22)] void STDMETHODCALLTYPE NETDetectNextNavigate(void) ;
[helpcontext(0), funckind(4), oVft(124), id(23)] void STDMETHODCALLTYPE PutFindText([in] BSTR FindText) ;
[helpcontext(0), funckind(4), oVft(128), id(24), propget] int STDMETHODCALLTYPE Version(void) ;
[helpcontext(0), funckind(4), oVft(132), id(25)] BSTR STDMETHODCALLTYPE EncodeString([in] BSTR bstrValue, [in] BSTR bstrCharSet, [in] boolean bUseUTF8) ;
}

[helpcontext(0), helpstring("ISearchAssistantOC Interface"), localizedhelpstring("ISearchAssistantOC Interface"), dual, oleautomation, version(0.0), uuid(72423E8F-8011-11D2-BE79-00A0C9A83DA1), hidden, cbSizeVft(136), cbSizeInstance(4), cbAlignment(4)] 
interface ISearchAssistantOC  : stdole.IDispatch  {
[helpcontext(0), funckind(1), oVft(28)] HRESULT STDMETHODCALLTYPE AddNextMenuItem([in] BSTR bstrText, [in] long idItem) ;
[helpcontext(0), funckind(1), oVft(32)] HRESULT STDMETHODCALLTYPE SetDefaultSearchUrl([in] BSTR bstrUrl) ;
[helpcontext(0), funckind(1), oVft(36)] HRESULT STDMETHODCALLTYPE NavigateToDefaultSearch(void) ;
[helpcontext(0), funckind(1), oVft(40)] HRESULT STDMETHODCALLTYPE IsRestricted([in] BSTR bstrGuid, [out, retval] boolean * pVal) ;
[localizedhelpstring("property ShellFeaturesEnabled"), helpcontext(0), helpstring("property ShellFeaturesEnabled"), funckind(1), oVft(44), propget] HRESULT STDMETHODCALLTYPE ShellFeaturesEnabled([out, retval] boolean * pVal) ;
[localizedhelpstring("property SearchAssistantDefault"), helpcontext(0), helpstring("property SearchAssistantDefault"), funckind(1), oVft(48), propget] HRESULT STDMETHODCALLTYPE SearchAssistantDefault([out, retval] boolean * pVal) ;
[localizedhelpstring("Get searches"), helpcontext(0), helpstring("Get searches"), funckind(1), oVft(52), propget] HRESULT STDMETHODCALLTYPE Searches([out, retval] ISearches * * ppid) ;
[localizedhelpstring("Returns true if the current folder is web folder"), helpcontext(0), helpstring("Returns true if the current folder is web folder"), funckind(1), oVft(56), propget] HRESULT STDMETHODCALLTYPE InWebFolder([out, retval] boolean * pVal) ;
[helpcontext(0), funckind(1), oVft(60)] HRESULT STDMETHODCALLTYPE PutProperty([in] boolean bPerLocale, [in] BSTR bstrName, [in] BSTR bstrValue) ;
[helpcontext(0), funckind(1), oVft(64)] HRESULT STDMETHODCALLTYPE GetProperty([in] boolean bPerLocale, [in] BSTR bstrName, [out, retval] BSTR * pbstrValue) ;
[helpcontext(0), funckind(1), oVft(68), propput] HRESULT STDMETHODCALLTYPE EventHandled([in] boolean PseudoName) ;
[helpcontext(0), funckind(1), oVft(72)] HRESULT STDMETHODCALLTYPE ResetNextMenu(void) ;
[helpcontext(0), funckind(1), oVft(76)] HRESULT STDMETHODCALLTYPE FindOnWeb(void) ;
[helpcontext(0), funckind(1), oVft(80)] HRESULT STDMETHODCALLTYPE FindFilesOrFolders(void) ;
[helpcontext(0), funckind(1), oVft(84)] HRESULT STDMETHODCALLTYPE FindComputer(void) ;
[helpcontext(0), funckind(1), oVft(88)] HRESULT STDMETHODCALLTYPE FindPrinter(void) ;
[helpcontext(0), funckind(1), oVft(92)] HRESULT STDMETHODCALLTYPE FindPeople(void) ;
[helpcontext(0), funckind(1), oVft(96)] HRESULT STDMETHODCALLTYPE GetSearchAssistantURL([in] boolean bSubstitute, [in] boolean bCustomize, [out, retval] BSTR * pbstrValue) ;
[helpcontext(0), funckind(1), oVft(100)] HRESULT STDMETHODCALLTYPE NotifySearchSettingsChanged(void) ;
[helpcontext(0), funckind(1), oVft(104), propput] HRESULT STDMETHODCALLTYPE ASProvider([in] BSTR pProvider) ;
[helpcontext(0), funckind(1), oVft(108), propget] HRESULT STDMETHODCALLTYPE ASProvider([out, retval] BSTR * pProvider) ;
[helpcontext(0), funckind(1), oVft(112), propput] HRESULT STDMETHODCALLTYPE ASSetting([in] int pSetting) ;
[helpcontext(0), funckind(1), oVft(116), propget] HRESULT STDMETHODCALLTYPE ASSetting([out, retval] int * pSetting) ;
[helpcontext(0), funckind(1), oVft(120)] HRESULT STDMETHODCALLTYPE NETDetectNextNavigate(void) ;
[helpcontext(0), funckind(1), oVft(124)] HRESULT STDMETHODCALLTYPE PutFindText([in] BSTR FindText) ;
[helpcontext(0), funckind(1), oVft(128), propget] HRESULT STDMETHODCALLTYPE Version([out, retval] int * pVersion) ;
[helpcontext(0), funckind(1), oVft(132)] HRESULT STDMETHODCALLTYPE EncodeString([in] BSTR bstrValue, [in] BSTR bstrCharSet, [in] boolean bUseUTF8, [out, retval] BSTR * pbstrResult) ;
}

[helpcontext(0), version(0.0), uuid(1611FDDA-445B-11D2-85DE-00C04FA35C89), hidden, cbSizeVft(28), cbSizeInstance(4), cbAlignment(4)] 
dispinterface _SearchAssistantEvents  {

properties:

methods:
[helpcontext(0), funckind(4), oVft(0), id(1)] void STDMETHODCALLTYPE OnNextMenuSelect([in] long idItem) ;
[helpcontext(0), funckind(4), oVft(0), id(2)] void STDMETHODCALLTYPE OnNewSearch(void) ;
}

[helpcontext(0), helpstring("SearchAssistantOC Class"), localizedhelpstring("SearchAssistantOC Class"), version(0.0), uuid(B45FF030-4447-11D2-85DE-00C04FA35C89), hidden, cbSizeVft(0), cbSizeInstance(4), cbAlignment(4)] 
coclass SearchAssistantOC  {
[default] dispinterface ISearchAssistantOC ;
[default, source] dispinterface _SearchAssistantEvents ;
}

}
