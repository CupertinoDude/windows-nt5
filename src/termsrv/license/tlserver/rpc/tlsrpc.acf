//+--------------------------------------------------------------------------
//
// Copyright (c) 1997-1999 Microsoft Corporation
//
// File:        
//
// Contents:    
//
// History:     
//
//---------------------------------------------------------------------------
[implicit_handle(handle_t TermServLicensing_IfHandle)]
interface TermServLicensing
{
    [comm_status, fault_status] TLSRpcGetRevokeKeyPackList();
    [comm_status, fault_status] TLSRpcGetRevokeLicenseList();
    [comm_status, fault_status] TLSRpcReturnKeyPack();
    [comm_status, fault_status] TLSRpcReturnLicense(); 
    [comm_status, fault_status] TLSRpcInstallCertificate();
    [comm_status, fault_status] TLSRpcGetServerCertificate();
    [comm_status, fault_status] TLSRpcRegisterLicenseKeyPack();
    [comm_status, fault_status] TLSRpcConnect();
    [comm_status, fault_status] TLSRpcDisconnect();
    [comm_status, fault_status] TLSRpcSendServerCertificate();
    [comm_status, fault_status] TLSRpcGetServerName();
    [comm_status, fault_status] TLSRpcGetServerScope();
    [comm_status, fault_status] TLSRpcGetInfo();
    [comm_status, fault_status] TLSRpcIssuePlatformChallenge();
    [comm_status, fault_status] TLSRpcRequestNewLicense();
    [comm_status, fault_status] TLSRpcUpgradeLicense();
    [comm_status, fault_status] TLSRpcAllocateConcurrentLicense();
    [comm_status, fault_status] TLSRpcGetLastError();
    [comm_status, fault_status] TLSRpcKeyPackEnumBegin();
    [comm_status, fault_status] TLSRpcKeyPackEnumNext();
    [comm_status, fault_status] TLSRpcKeyPackEnumEnd();
    [comm_status, fault_status] TLSRpcKeyPackAdd();
    [comm_status, fault_status] TLSRpcKeyPackSetStatus();
    [comm_status, fault_status] TLSRpcLicenseEnumBegin();
    [comm_status, fault_status] TLSRpcLicenseEnumNext();
    [comm_status, fault_status] TLSRpcLicenseEnumEnd();
    [comm_status, fault_status] TLSRpcLicenseSetStatus();
    [comm_status, fault_status] TLSRpcGetAvailableLicenses();
    [comm_status, fault_status] TLSRpcGetRevokeKeyPackList();
    [comm_status, fault_status] TLSRpcGetRevokeLicenseList();
    [comm_status, fault_status] TLSRpcReturnKeyPack();
    [comm_status, fault_status] TLSRpcReturnLicense();
    [comm_status, fault_status] TLSRpcInstallCertificate();
    [comm_status, fault_status] TLSRpcGetServerCertificate();
    [comm_status, fault_status] TLSRpcRegisterLicenseKeyPack();
    [comm_status, fault_status] TLSRpcRequestTermServCert();
    [comm_status, fault_status] TLSRpcRetrieveTermServCert();
    [comm_status, fault_status] TLSRpcGetLSPKCS10CertRequest();

    [comm_status, fault_status] TLSRpcBeginReplication();
    [comm_status, fault_status] TLSRpcEndReplication();
    [comm_status, fault_status] TLSRpcReplicateRecord();
    [comm_status, fault_status] TLSRpcTableEnumBegin();
    [comm_status, fault_status] TLSRpcTableEnumNext();
    [comm_status, fault_status] TLSRpcTableEnumEnd();
    [comm_status, fault_status] TLSRpcGetVersion();
    [comm_status, fault_status] TLSRpcAnnounceServer();
    [comm_status, fault_status] TLSRpcLookupServer();
    [comm_status, fault_status] TLSRpcAnnounceLicensePack();
    [comm_status, fault_status] TLSRpcReturnLicensedProduct();

    [comm_status, fault_status] TLSRpcChallengeServer();
    [comm_status, fault_status] TLSRpcResponseServerChallenge();
    [comm_status, fault_status] TLSRpcSetTlsPrivateData();
    [comm_status, fault_status] TLSRpcGetTlsPrivateData();
    [comm_status, fault_status] TLSRpcTriggerReGenKey();
    [comm_status, fault_status] TLSRpcTelephoneRegisterLKP();

    [comm_status, fault_status] TLSRpcAllocateInternetLicense();
    [comm_status, fault_status] TLSRpcReturnInternetLicense();

    [comm_status, fault_status] TLSRpcAllocateInternetLicenseEx();
    [comm_status, fault_status] TLSRpcReturnInternetLicenseEx();

    [comm_status, fault_status] TLSRpcRequestNewLicenseEx();
    [comm_status, fault_status] TLSRpcUpgradeLicenseEx();
    [comm_status, fault_status] TLSRpcMarkLicense();
    [comm_status, fault_status] TLSRpcCheckLicenseMark();
    [comm_status, fault_status] TLSRpcGetSupportFlags();

    [comm_status, fault_status] TLSRpcRequestNewLicenseExEx();

    [comm_status, fault_status] TLSRpcGetServerNameEx();

    [comm_status, fault_status] TLSRpcLicenseEnumNextEx();
}

typedef [allocate(all_nodes, free)] PBYTE;
typedef [allocate(all_nodes, dont_free)] PTLSHYDRACERTREQUEST;
typedef [allocate(all_nodes, dont_free)] LPTLSHYDRACERTREQUEST;
typedef [allocate(all_nodes, free)] PTLSCERT_EXTENSIONS;
typedef [allocate(all_nodes, free)] PTLSCERT_EXTENSION;
typedef [allocate(all_nodes, free)] PTLSPrivateDataUnion;
typedef [allocate(all_nodes, free)] PTLSPrivateDataSPK;
typedef [allocate(all_nodes, free)] PTLSPrivateDataBinary;
typedef [allocate(all_nodes, free)] PTLSPrivateDataInstalledCertificate;
