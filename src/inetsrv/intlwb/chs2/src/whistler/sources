
MAJORCOMP=PKM
MINORCOMP=ChsBrKr
NO_STUB_DLL=1

RCOPTIONS=-l 804

SYNCHRONIZE_DRAIN=1

C_DEFINES=$(C_DEFINES) -DOLEDBVER=0x0250 -DCHINESES -DUNICODE -D_UNICODE

USE_CRTDLL=0

TARGETNAME=ChsBrkr
TARGETPATH=obj
TARGETTYPE=DYNLINK

SUBSYSTEM_VERSION=4.00

INCLUDES=..;$(INCLUDES);

SOURCES=ChsBrkr.rc \
        chsbrkr.cpp \
        IWordBreaker.cpp \
        CUNKNOWN.CPP \
        CFACTORY.CPP \
        MorphW.cpp \
        REGISTRY.CPP \
        SERVER.CPP \
        WBEngine.cpp \
        CharFreq.cpp \
        FixTable.cpp \
        Jargon.cpp \
        Jargon1.cpp \
        Lexicon.cpp \
        Morph1.cpp \
        Morph2.cpp \
        Morph3.cpp \
        Morph4.cpp \
        Morph5.cpp \
        MyPlex.cpp \
        utility.cpp \
        WordLink.cpp \
        WrdBreak.cpp

UMTYPE=windows

DLLBASE=0x44e00000

DLLENTRY=DllMain

PRECOMPILED_INCLUDE=..\myafx.h

CONDITIONAL_INCLUDES= \
        $(CONDITIONAL_INCLUDES) 

DLLDEF=ChsBrKr.def

#
# Support for IceCap profiling.
#

!if "$(PERFFLAGS)" == "TRUE"
! if exist ($(BASEDIR)\public\sdk\lib\$(TARGET_DIRECTORY)\icap.lib)
!  if !defined(MSC_Optimiztion)
MSC_OPTIMIZATION=-Oxs -Gh -MD
!  elseif "$(MSC_OPTIMIZATION)" == "-GX"
MSC_OPTIMIZATION=-Oxs -GX -Gh -MD
!  else
MSC_OPTIMIZATION=$(MSC_OPTIMIZATION) -Gh -MD
!  endif

USE_PDB=1

!  if "$(USE_PENTER)" == "TRUE"
LINKLIBS=$(LINKLIBS) H:\nt\public\sdk\lib\alpha\penter.lib
UMLIBS=$(UMLIBS) H:\nt\public\sdk\lib\alpha\penter.lib
!  else
LINKLIBS=$(LINKLIBS) H:\nt\public\sdk\lib\alpha\ICAP.lib
UMLIBS=$(UMLIBS) H:\nt\public\sdk\lib\alpha\ICAP.lib
!  endif

!  if "$(DBG)" == "1"
!   message Warning: Profiling with DBG on!
!  endif

! else
!  error Cannot build for IceCap profiling without ICAP.LIB
! endif
!endif

LINKER_FLAGS=$(LINKER_FLAGS) -IGNORE:4077

LINKLIBS=$(LINKLIBS)\
         $(SDK_LIB_PATH)\user32.lib \
         $(SDK_LIB_PATH)\kernel32.lib\
         $(SDK_LIB_PATH)\advapi32.lib \
         $(SDK_LIB_PATH)\uuid.lib\
         $(SDK_LIB_PATH)\ole32.lib\
         $(SDK_LIB_PATH)\uuid.lib \
         $(SDK_LIB_PATH)\query.lib

MISCFILES=noise.chs

