//Microsoft Developer Studio generated resource script.
//
#include "mqoares.h"

#include "afxres.h"

/////////////////////////////////////////////////////////////////////////////
// English (U.S.) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
#ifdef _WIN32
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
#pragma code_page(1252)
#endif //_WIN32

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE DISCARDABLE 
BEGIN
    "mqoares.h\0"
END


3 TEXTINCLUDE DISCARDABLE 
BEGIN
    "\r\n"
END

#endif    // APSTUDIO_INVOKED



/////////////////////////////////////////////////////////////////////////////
//
// String Table
//

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_RELOPS              "Enumerates the relational operators for a query."
    IDS_MQTRANSACTION       "Enumerates the transaction options when sending and receiving a message."
    IDS_MQMSGCURSOR         "Enumerates the cursor operations when synchronously or asynchronously peeking at or retrieving a message."
    IDS_MQMSGCLASS          "Enumerates the classes of a message."
    IDS_MQMSGDELIVERY       "Enumerates the delivery modes of a message."
    IDS_MQMSGACKNOWLEDGEMENT 
                            "Enumerates the acknowledgement modes for a message."
    IDS_MQMSGJOURNAL        "Enumerates the journaling for a message."
    IDS_MQMSGTRACE          "Enumerates the tracing options for a message."
    IDS_MQMSGSENDERIDTYPE   "Enumerates the sender identifier types for a message."
    IDS_MQMSGPRIVLEVEL      "Enumerates the privacy levels for a message."
    IDS_MQMSGAUTHLEVEL      "Enumerates the authorization levels for a message."
    IDS_MQMSGIDSIZE         "Enumerates message identification property sizes."
    IDS_MQMSGMAX            "Enumerates the maximum length for the message label."
    IDS_MQSHARE             "Enumerates the sharing modes for an open queue."
    IDS_MQACCESS            "Enumerates the access (send, peek, receive) modes for an open queue."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MQJOURNAL           "Enumerates the journaling modes for a queue."
    IDS_MQTRANSACTIONAL     "Enumerates the transactional modes for a queue."
    IDS_MQAUTHENTICATE      "Enumerates the authentication modes for a queue."
    IDS_MQPRIVLEVEL         "Enumerates the privacy levels for a queue."
    IDS_MQPRIORITY          "Enumerates the minimum and maximum queue priorities."
    IDS_MQMAX               "Enumerates the maximum length for a queue label and pathname."
    IDS_MQDEFAULT           "Enumerates the default values for message and queue properties."
    IDS_MQERROR             "Enumerates all Message Queuing errors."
    IDS_MQWARNING           "Enumerates all Message Queuing warnings."
    IDS_IMSMQQUERY          "Interface providing Message Queuing lookup facilities that are used to locate public queues."
    IDS_MSMQQUERY           "Object providing Message Queuing lookup facilities that are used to locate public queues."
    IDS_IMSMQMESSAGE        "Interface describing a message. A message can be created and sent to a queue or obtained from a queue."
    IDS_MSMQMESSAGE         "Object describing a message. A message can be created and sent to a queue or obtained from a queue."
    IDS_IMSMQQUEUE          "Interface describing an open queue that supports message retrieval.  Obtained by invoking the MSMQQueueInfo.Open method."
    IDS_IMSMQEVENT          "Interface describing outgoing asynchronous Message Queuing events that is used for notification of asynchronous message arrival."
    IDS_DMSMQEVENTEVENTS    "Outgoing event dispinterface that is used to  support asynchronous message notifications."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MSMQQUEUE           "Object describing an open queue that supports message retrieval.  Obtained by invoking the MSMQQueueInfo.Open method."
    IDS_MSMQEVENT           "Object describing outgoing asynchronous events.  Used for notification of asynchronous message arrival."
    IDS_IMSMQQUEUEINFO      "Interface describing a queue."
    IDS_MSMQQUEUEINFO       "Object describing a queue. Used to create, delete, and open queues."
    IDS_IMSMQQUEUEINFOS     "Interface describing the collection of queues produced by MSMQQuery.LookupQueue."
    IDS_MSMQQUEUEINFOS      "Object describing the collection of queues produced by MSMQQuery.LookupQueue."
    IDS_IMSMQTRANSACTION    "Interface describing the MSMQ transaction object. Supports the standard ITransaction methods Commit and Abort."
    IDS_MSMQTRANSACTION     "Object implementing the MSMQ transaction object. Supports the standard ITransaction methods Commit and Abort."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER 
                            "Interface describing DTCtransaction dispenser. Supports creating new DTC transactions."
    IDS_MSMQCOORDINATEDTRANSACTIONDISPENSER 
                            "Object implementing the DTC transaction dispenser.  Supports creating new DTC transactions."
    IDS_IMSMQTRANSACTIONDISPENSER 
                            "Interface describing the MSMQ transaction dispenser.  Supports creating new MSMQ internal transactions."
    IDS_MSMQTRANSACTIONDISPENSER 
                            "Object implementing the MSMQ transaction dispenser.  Supports creating new MSMQ internal transactions."
    IDS_IMSMQAPPLICATION    "Interface describing the MSMQ application object."
    IDS_MSMQAPPLICATION     "Object implementing the MSMQ application object.  Provides global functionality."
    IDS_LookupQueue         "Produces a collection of public queues that match a specified selection criteria. Queries Active Directory."
    IDS_lClass              "Property indicating the class of message. Possible values are defined by MQMSGCLASS enumeration"
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_lPrivLevel          "Property indicating the privacy level of a message.  Possible values are defined by MQMSGPRIVLEVEL enumeration."
    IDS_lAuthLevel          "Property indicating the authorization level of a message. Possible values are defined by MQMSGAUTHLEVEL enumeration."
    IDS_isAuthenticated     "Property indicating whether a message was authenticated or not. Possible values are 1 and 0."
    IDS_lDelivery           "Property indicating the delivery mode of a message. Possible values defined by MQMSGDELIVERY enumeration."
    IDS_lTrace              "Property indicating the tracing option for a message. Possible values are defined by MQMSGTRACE enumeration."
    IDS_lPriority           "Property indicating the priority level of a message. The range must be between MQ_MIN_PRIORITY and MQ_MAX_PRIORITY."
    IDS_lJournal            "Property indicating the journaling option for a message.  Possible values are defined by MQMSGJOURNAL enumeration."
    IDS_queueinfoResponse   "Property indicating the response queue for the message."
    IDS_lAppSpecific        "Property containing application-specific information."
    IDS_guidSrcMachine      "Property identifying the computer where the message originated."
    IDS_lenBody             "Property indicating the length (in bytes) of the message body."
    IDS_body                "Property containing the message body.  It is of Variant type and can contain any intrinsic type and persistent object."
    IDS_queueinfoAdmin      "Property indicating the administration queue for the message."
    IDS_id                  "Property containing the MSMQ-generated identifier (array of bytes) for the message."
    IDS_idCorrelation       "Property indicating the correlation identifier (array of bytes) for the message."
    IDS_lAck                "Property indicating what kind of acknowledgement message is returned. Possible values are defined by MQMSGACKNOWLEDGEMENT enumeration."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_strLabel            "Property indicating the label of the message."
    IDS_lMaxTimeToReachQueue 
                            "Property indicating the amount of time allowed to deliver the message to its destination queue."
    IDS_lMaxTimeToReceive   "Property indicating the amount of time the receiving application has to retreive the message from its destination queue."
    IDS_lHashAlg            "Property indicating which hash algorithm to use when authenticating the message."
    IDS_lEncryptAlg         "Property indicating which encryption algorithm to use when encrypting the message body of a private message."
    IDS_dateSentTime        "Property indicating when the message was sent. The type is Variant Date."
    IDS_dateArrivedTime     "Property indicating when the message arrived at its destination queue. The type is Variant Date."
    IDS_queueinfoDest       "Property indicating the destination queue of the message. Typically used when reading response messages, or messages in machine journals or dead-letter queues."
    IDS_binSenderCert       "Property containing the security certificate of a message. The type is an array of bytes."
    IDS_binSenderId         "Property containing the sender identifier of the message. The type is an array of bytes."
    IDS_lSenderIdType       "Property indicating what type of identifier is attached to the message. Possible values are defined by MSMQSENDERIDTYPE enumeration."
    IDS_Send                "Method used to send a message to the destination queue. Can optionally be part of a transaction."
    IDS_AttachCurrentSecurityContext 
                            "Method used to associate the current security context with a message."
    IDS_lAccess             "Property indicating the access mode of a queue. Possible values are defined by MQACCESS enumeration."
    IDS_lShareMode          "Property indicating the share mode of a queue. Possible values are defined by MQSHARE enumeration."
    IDS_queueinfo           "Property referring to an MSMQQueueInfo instance describing the queue."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_lHandle             "Property indicating the internal handle of an open queue instance.  Useful for directly calling Message Queuing APIs."
    IDS_isOpen              "Property indicating whether or not the queue object refers to an open instance of a queue. Possible values are 1 and 0."
    IDS_Close               "Method to close an open instance of a queue."
    IDS_Receive             "Method to synchronously retrieve a message from a queue. It always removes the first message in the queue regardless of the position of the implicit cursor. Optional parameters include ReceiveTimeout (default set to INFINITE), Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), and WantBody (default set to True)."
    IDS_Peek                "Method to synchronously peek at the first message in the queue, regardless of the implicit cursor position. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), and WantBody (default set to True)."
    IDS_EnableNotification  "Method to enable asynchronous notification of arriving messages. It can use the queue's implicit cursor.  The user-defined MSMQEvent_Arrived event handler is invoked when a message arrives at the location specified by the optional Cursor parameter (default is first message in the queue), or a timeout occurs. The user-defined MSMQEvent_ArrivedError is invoked if the asynchronous message retrieval results in an error."
    IDS_Reset               "Method that resets the queue's implicit cursor to the beginning of the queue."
    IDS_ReceiveCurrent      "Method to synchronously remove the current message from the queue. Retrieves the message at the position pointed to by the implicit cursor. Optional parameters include ReceiveTimeout (default set to INFINITE), Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), and WantBody (default set to True)."
    IDS_PeekNext            "Method to synchronously peek at the next message in the queue. When called, the implicit cursor is first advanced and then the message is returned. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), and WantBody (default set to True)."
    IDS_PeekCurrent         "Method to synchronously peek at the current message in the queue (the message pointed at by the implicit cursor). The implicit cursor is not advanced. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), and WantBody (default set to True)."
    IDS_guidQueue           "Property indicating the identifier of the public queue."
    IDS_guidServiceType     "Property identifying the type of service provided by the queue."
    IDS_MSMQQueueInfo_strLabel "Property indicating the label of the queue."
    IDS_strPathName         "Property indicating the pathname (physical location) of the queue."
    IDS_strFormatName       "Property that identifies the queue. The format name of a queue is generated by MSMQ when the queue is created, or generated later by the application."
    IDS_isTransactional     "Property indicating whether the queue is transactional or non-transactional. If the queue is transactional, all messages sent to the queue must be part of a transaction. Possible values are 1 and 0."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MSMQQueueInfo_lPrivLevel 
                            "Property that specifies the privacy level that is required by the queue. The privacy level determines how the queue handles private (encrypted) messages. Possible values are defined by the MQPRIVLEVEL enumeration."
    IDS_MSMQQueueInfo_lJournal 
                            "Property that specifies if the messages retrieved from the queue are copied to the queue's journal queue.  Possible values are defined by the MQJOURNAL enumeration."
    IDS_lQuota              "Property that specifies the maximum size (in kilobytes) of the queue."
    IDS_lBasePriority       "Property that specifies the base priority for all messages sent to a public queue.  The queue's base priority has no effect on the order of the messages in the queue, or how messages are read from the queue."
    IDS_dateCreateTime      "Property that indicates the time and date when the queue was created. The type is Variant Date."
    IDS_dateModifyTime      "Property that indicates the time and date when the queue's properties were last modified. The type is Variant Date."
    IDS_lAuthenticate       "Property that specifies whether or not the queue only accepts authenticated messages.  If the authentication level of the message does not match the authentication level of the queue, the message is rejected by the queue.  Possible values are defined by the MQAUTHENTICATE enumeration."
    IDS_lJournalQuota       "Property that specifies the maximum size (in kilobytes) of the journal queue."
    IDS_Create              "Method used to create a new queue. The PathName property is required to create a queue. The FormatName property is updated when the queue is created.  Optional parameters include IsWorldReadable (default set to False) and IsTransactional (default set to False)."
    IDS_Delete              "Method used to delete queue. The PathName propety must be specified to delete a queue."
    IDS_Open                "Method used to open a queue. The PathName property must be specified to open a queue. Parameters include Access (send, peek, or receive) and ShareMode (exclusive or all)."
    IDS_Refresh             "Method used to refresh the properties of a public queue from Active Directory."
    IDS_Update              "Method used to update Active Directory with the public queue's current properties."
    IDS_MSMQQueueInfos_Reset 
                            "Method used to reset the implicit cursor to the start of a collection of queues produced by MSMQQuery.LookupQueue."
    IDS_MSMQQueueInfos_Next "Method used to advance the implicit cursor to the next element of a collection of queues produced by MSMQQuery.LookupQueue."
    IDS_lTransaction        "Property that indicates the underlying ""magic cookie"" used by a transaction dispenser. "
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_Commit              "Method used to commit an MSMQ transaction."
    IDS_Abort               "Method used to abort an MSMQ transaction."
    IDS_BeginTransaction    "Method used to obtain a new transaction from a transaction dispenser."
    IDS_StrMachineIdOfMachineName 
                            "Global function used to map a computer name to a unique identifier. For example, this identifier can be used to construct a format name for a computer so that its journal queue can be opened."
    IDS_Arrived             "User-defined method invoked when a message arrives at a queue."
    IDS_ArrivedError        "User-defined method invoked when an error is returned while reading messages asynchronously."
    IDS_IsWorldReadable     "Property that indicates who can read messages in the queue. If set to 0 (the default), all users can send messages to the queue but only the owner of the queue can read messages from it. If set to 1,  all users can read messages from the queue."
    IDS_MQCALG              "Enumerates the various hashing and encryption algorithms."
    IDS_IMSMQTRANSACTION2   "Interface describing the MSMQ transaction object.  Supports the standard ITransaction methods Commit and Abort."
    IDS_InitNew             "Method used to initialize a new MSMQ transaction object with an existing transaction."
    IDS_IMSMQAPPLICATION2   "Interface describing the MSMQ application object."
    IDS_RegisterCertificate "Method used to register a user certificate in Active Directory."
    IDS_MQCERT_REGISTER     "Enumerates the flags when registering a certificate."
    IDS_MQCERT_REGISTER_ALWAYS "Register a new certificate"
    IDS_MQCERT_REGISTER_IF_NOT_EXIST 
                            "Register a new certificate only if one is not registered yet"
    IDS_IMSMQQUEUEINFO2     "Interface describing MSMQ queue."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_strPathNameDNS      "Property indicating the pathname (physical location) of the queue. The computer portion of the pathname is in DNS format."
    IDS_IMSMQMESSAGE2       "Interface describing a message. A message can be created and sent to a queue or obtained from a queue."
    IDS_lSenderVersion      "Property indicating the software version of MSMQ used to send the message."
    IDS_binExtension        "Property that provides a place to put additional information that is associated with the message. Type is an array of bytes."
    IDS_guidConnectorType   "Property indicating that some message properties typically generated by MSMQ are generated externally from MSMQ."
    IDS_queueinfoXactStatus "Property identifying the transaction status queue on the source computer."
    IDS_binDestSymmKey      "Property that specifies the symmetric key used to encrypt messages. The type is an array of bytes."
    IDS_binSignature        "Property that specifies the digital signature used to authenticate the message. The type is an array of bytes."
    IDS_lAuthProvType       "Property that specifies the type of cryptographic service provider used to generate the message's digital signature."
    IDS_strAuthProvName     "Property that specifies the name of the cryptographic provider used to generate the message's digital signature."
    IDS_lMsgClass           "Property indicating the class of message. Possible values are defined by MQMSGCLASS enumeration."
    IDS_IMSMQQUEUE2         "Interface describing an open queue: supports message retrieval."
    IDS_Receive_2           "Method to synchronously retrieve a message from a queue. It always removes the first message in queue regardless of the position of the implicit cursor. Optional parameters include ReceiveTimeout (default set to INFINITE), Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_Peek_2              "Method to synchronously peek at the first message in the queue, regardless of the implicit cursor position. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveCurrent_2    "Method to synchronously remove the current message from the queue. Retrieves the message at the position pointed to by the implicit cursor. Optional parameters include ReceiveTimeout (default set to INFINITE), Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekNext_2          "Method to synchronously peek at the next message in the queue. When called, the implicit cursor is first advanced and then the message is returned. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_PeekCurrent_2       "Method to synchronously peek at the current message in queue (message pointed at by the implicit cursor). The implicit cursor is not advanced. Optional parameters include ReceiveTimeout (default set to INFINITE), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_idXact              "Property that indicates which transaction sent the message. The type is an array of bytes."
    IDS_isFirstInXact       "Property that indicates whether the message was the first message sent in a transaction. Possible values are 1 and 0."
    IDS_isLastInXact        "Property that indicates whether the message was the last message sent in a transaction. Possible values are 1 and 0."
    IDS_IMSMQQUERY2         "Interface providing Message Queuing lookup facilities that are used to locate public queues."
    IDS_IMSMQQUEUEINFOS2    "Interface describing the collection of queues produced by MSMQQuery.LookupQueue."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER2
                            "Interface describing DTCtransaction dispenser. Supports creating new DTC transactions."
    IDS_IMSMQTRANSACTIONDISPENSER2
                            "Interface describing the MSMQ transaction dispenser.  Supports creating new MSMQ internal transactions."
    IDS_StrMachineNameOfMachineId
                            "Global function used to map a computer unique identifier to a pathname. For example, MSMQMessage.SourceMachineGuid can be mapped to find the computer name from which a message was sent."
    IDS_sMSMQVersionMajor   "Global property that indicates the major version of MSMQ"
    IDS_sMSMQVersionMinor   "Global property that indicates the minor version of MSMQ"
    IDS_sMSMQVersionBuild   "Global property that indicates the build version of MSMQ"
    IDS_fIsDsEnabled        "Global property that indicates whether MSMQ uses the Active Directory"
    IDS_IMSMQEVENT2         "Interface describing outgoing asynchronous Message Queuing events that is used for notification of asynchronous message arrival."
    IDS_sReceivedAuthenticationLevel
                            "Property indicating the authentication level of a received message. Possible values are defined by MQMSGAUTHENTICATION enumeration."
    IDS_MQMSGAUTHENTICATION "Enumerates the authentication levels of a received message."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQTRANSACTION3   "Interface describing the MSMQ transaction object.  Supports the standard ITransaction methods Commit and Abort."
    IDS_varITransaction     "Property containing the ITransaction interface of the transaction that is used by an MSMQTransaction object. It is of Variant type (VT_UNKNOWN)."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER3
                            "Interface describing DTCtransaction dispenser. Supports creating new DTC transactions."
    IDS_IMSMQTRANSACTIONDISPENSER3
                            "Interface describing the MSMQ transaction dispenser.  Supports creating new MSMQ internal transactions."
    IDS_IMSMQDESTINATION    "Interface describing the MSMQ destination object."
    IDS_DestOpen            "Method used to open a destination for send. The ADsPath property or the FormatName property must be specified to open a destination."
    IDS_fDestIsOpen         "Property indicating whether or not the destination object is open."
    IDS_strADsPath          "Property indicating the ADSI pathname of the destination."
    IDS_strDestFormatName   "Property that identifies the destination. The format name of a destination can be specified by the application, or be generated by MSMQ when the ADsPath property is specified."
    IDS_MSMQDESTINATION     "Object describing an MSMQ destination. Sending a message to the MSMQ destination is done by specifying the object in MSMQMessage.Send."
    IDS_destResponse        "Property indicating the response destination for the message. Type is an MSMQDestination object."
    IDS_destDestination     "Property indicating the destination of the message. Typically used when reading response messages, or messages in machine journals or dead-letter queues. Type is an MSMQDestination object."
    IDS_strObjADsPath       "Property indicating the ADSI pathname of the object."
    IDS_varHandle2          "Property indicating the internal handle of an open queue instance.  Useful for directly calling Message Queuing APIs. It is of Variant type (VT_I8)."
    IDS_IMSMQQUERY3         "Interface providing Message Queuing lookup facilities that are used to locate public queues."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQMESSAGE3       "Interface describing a message. A message can be created and sent to an MSMQ destination or obtained from an MSMQ queue."
    IDS_IMSMQQUEUE3         "Interface describing an open queue: supports message retrieval."
    IDS_IMSMQEVENT3         "Interface describing outgoing asynchronous Message Queuing events that is used for notification of asynchronous message arrival."
    IDS_IMSMQQUEUEINFO3     "Interface describing MSMQ queue."
    IDS_IMSMQQUEUEINFOS3    "Interface describing the collection of queues produced by MSMQQuery.LookupQueue."
    IDS_IMSMQAPPLICATION3   "Interface describing the MSMQ application object."
    IDS_Send_3              "Method used to send a message to the MSMQ destination. Can optionally be part of a transaction. the DestinationQueue parameter can be an MSMQDestination object, an MSMQQueue object, or an IADs object that identifies an MSMQ destination in the active directory"
    IDS_DestClose           "Method to close an open destination."
    IDS_strDestPathName     "Property indicating the MSMQ pathname of the object."
    IDS_varLookupId         "Property indicating the MSMQ lookup ID of the message. The type is Variant string. This property can be specified in MSMQQueue.ReceiveByLookupId or MSMQQueue.PeekByLookupId to identify the message to retrieve or peek."
    IDS_ReceiveByLookupId   "Method to synchronously retrieve a message with a LookupId property that is equal to the specified LookupId. Optional parameters include Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveNextByLookupId
                            "Method to synchronously retrieve a message with a LookupId property that is next to the specified LookupId. Optional parameters include Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceivePreviousByLookupId
                            "Method to synchronously retrieve a message with a LookupId property that is previous to the specified LookupId. Optional parameters include Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveFirstByLookupId
                            "Method to synchronously retrieve the first message in the queue based on the LookupId property order. Optional parameters include Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveLastByLookupId
                            "Method to synchronously retrieve the last message in the queue based on the LookupId property order. Optional parameters include Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekByLookupId      "Method to synchronously peek at a message with a LookupId property that is equal to the specified LookupId. Optional parameters include WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_PeekNextByLookupId  "Method to synchronously peek at a message with a LookupId property that is next to the specified LookupId. Optional parameters include WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekPreviousByLookupId
                            "Method to synchronously peek at a message with a LookupId property that is previous than the specified LookupId. Optional parameters include WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekFirstByLookupId "Method to synchronously peek at the first message in the queue based on the LookupId property order. Optional parameters include WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekLastByLookupId  "Method to synchronously peek at the last message in the queue based on the LookupId property order. Optional parameters include WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_isAuthenticated2    "Property indicating whether a message was authenticated or not."
    IDS_isFirstInXact2      "Property that indicates whether the message was the first message sent in a transaction."
    IDS_isLastInXact2       "Property that indicates whether the message was the last message sent in a transaction."
    IDS_isOpen2             "Property indicating whether or not the queue object refers to an open instance of a queue."
    IDS_isTransactional2    "Property indicating whether the queue is transactional or non-transactional. If the queue is transactional, all messages sent to the queue must be part of a transaction."
    IDS_IsWorldReadable2    "Property that indicates who can read messages in the queue. If set to False (the default), all users can send messages to the queue but only the owner of the queue can read messages from it. If set to True,  all users can read messages from the queue."
    IDS_strMulticastAddress "Property that specifies the multicast address that is associated with the queue."
    IDS_AttachCurrentSecurityContext2
                            "Method used to associate the current security context with a message."
    IDS_LookupQueue_3       "Produces a collection of public queues that match a specified selection criteria. Queries Active Directory."
    IDS_binSoapEnvelope     "Property containing the SOAP envelope of the message. Type is an array of bytes."
    IDS_binCompoundMessage  "Property containing the compound message. Type is an array of bytes."
    IDS_binSoapHeader       "Property containing a user supplied SOAP header."
    IDS_binSoapBody         "Property containing a user supplied SOAP body."
    IDS_Purge               "Method to purge all messages in a queue."
    IDS_ActiveQueues        "Property returning an array of format names of active queues on the local macine."
    IDS_PrivateQueues       "Property returning an array of format names of private queues on the local macine."
    IDS_DirectoryServiceServer  "Property returning the name of the Directory Service Server."
    IDS_IsConnected         "Property specifying whether the local QM is connected to the network and the Directory Service."
    IDS_Connect             "Method to connect the machine to the network and the Directory Service."
    IDS_Disconnect          "Method to disconnect the machine from the network and the Directory Service."
    IDS_Tidy                "Method to clean up empty message files now."
END
    
STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQMANAGEMENT     "Interface encapsulating common administrative functionalities for outgoing and target queues."
    IDS_IMSMQQUEUEMANAGEMENT "Interface encapsulating administrative functionalities for target queues."
    IDS_IMSMQOUTGOINGQUEUEMANAGEMENT "Interface encapsulating administrative functionalities for outgoing queues." 
    IDS_ManagementInit      "Method to initialize the MSMQManagement object." 
    IDS_Machine             "Property returning the name of the relevant machine." 
    IDS_MessageCount        "Property returning the number of messages in a queue."
    IDS_Pause               "Method to pause transmission from an outgoing queue."
    IDS_Resume              "Method to resume transmission from an outgoing queue."
    IDS_EodResend           "Method to resend the pending transactional messages in an outgoing queue."
    IDS_QueueType           "Property indicating the type of a queue."
    IDS_IsLocal             "Property indicating whether the queue resides on the local machine."
    IDS_ForeignStatus       "Property indicating that the queue is known to be foreign, that it is known not to be foreign, or that its status in this regard is unknown."
    IDS_UsedQuota           "Property indicating the amount of storage used for the queue."
    IDS_State               "Property indicating the connection status of the queue."
    IDS_NextHops            "Property containing an array of addresses for routing messages to their destination computers in the next hop."
    IDS_QUEUE_TYPE          "Enumerates the possible queue types."
    IDS_FOREIGN_STATUS      "Enumerates the possible foreign status values."
    IDS_QUEUE_STATE         "Enumerates the possible queue state values."
END

#endif    // English (U.S.) resources
/////////////////////////////////////////////////////////////////////////////





