/////////////////////////////////////////////////////////////////////
// NetConfigurationClass

#pragma deleteclass("NetConfigurationClass", NOFAIL)

[Abstract,Locale(1033)] 
class NetConfigurationClass
{
[DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

/////////////////////////////////////////////////////////////////////
// .NET Association base class

#pragma deleteclass("NetBaseAssociation", NOFAIL)

[Abstract,Association,Locale(1033)]
class NetBaseAssociation
{
};

/////////////////////////////////////////////////////////////////////
// .NET Containment Association base class

#pragma deleteclass("NetContainmentAssociation", NOFAIL)

[Abstract,Association,Locale(1033)]
class NetContainmentAssociation : NetBaseAssociation
{
};


////////////////////////////////////////////////////////////////////
/// BatchEntry class

#pragma deleteclass("BatchEntry", NOFAIL)

class BatchEntry
{
  [values{"create", "modify", "delete"}, Description("Batch operation to perform: when create-provide an instance, modify-provide an instance, delete-fill in an object path, retrieve-fill in an object path")] uint32 Op;
  [Description("Instance to be modified or created")] object Inst;
  [Description("Object (path) to be deleted or retrieved.  For create operations, BatchOperation::ProcessBatch method returns the path for the instance")] string Path;
  [Description("returns HRESULT of the operation")] uint32 Status;
};


//////////////////
// BatchOperation

#pragma deleteclass("BatchOperation", NOFAIL)

[abstract, description("Expectation that this will be processed in the order in which the method list is specified.  Derive from this class and implement the method (per provider)")]
class BatchOperation {
  [static] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags);
  [static] uint32 BatchCreate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static] uint32 BatchUpdate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static] uint32 BatchDelete(  [in]string Path[],       [in]uint32 flags, [out]uint32 status[], [out]object results[]);
};

//////////////////////
/// NetFrameworkBatchOperation

#pragma deleteclass("NetFrameworkBatchOperation", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider")]
class NetFrameworkBatchOperation : BatchOperation
{
  [static,implemented] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags);
  [static,implemented] uint32 BatchCreate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static,implemented] uint32 BatchUpdate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static,implemented] uint32 BatchDelete(  [in]string Path[],       [in]uint32 flags, [out]uint32 status[], [out]object results[]);
};

////////////////////////////
// ConfigurationNode

#pragma deleteclass("ConfigurationNode", NOFAIL)

[Abstract, Dynamic: ToSubClass ToInstance, Provider("NetFrameWorkv1Provider"): ToSubClass ToInstance, Locale(1033)]
class ConfigurationNode
{
[DisplayName("Selector"): Amended, Locale(1033), Description("Specifies a configuration node"):Amended] string Selector;
};

//////////////////////////////
// ApplicationBase

#pragma deleteclass("ApplicationBase", NOFAIL)

[Abstract,Locale(1033)] 
class ApplicationBase : ConfigurationNode
{
[DisplayName("RootApplication"): Amended, Locale(1033), Description("Is the webpplication the Root Application or not"):Amended] boolean RootApplication;
};

//**************************************************************************
//* Class: WebApplication
//**************************************************************************

#pragma deleteclass("WebApplication", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("WebApplication") : Amended, Locale(1033),  Description("") : Amended]
class WebApplication : ApplicationBase
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="iis://localhost/W3SVC/";
[DisplayName("Path"): Amended, Locale(1033), Description("Specifies vdir"):Amended] string Path;
[DisplayName("ConfigurationFilePath"): Amended, Locale(1033), Description("<path>\\web.config"):Amended] string ConfigurationFilePath;
[DisplayName("FriendlyName"): Amended, Locale(1033), Description("Friendly name of webapplication"):Amended] string FriendlyName;
[DisplayName("RelativeName"): Amended, Locale(1033), Description("Relative name"):Amended] string RelativeName;
[DisplayName("RootApplication"): Amended, Locale(1033), Description("Is the webpplication the Root Application or not"):Amended] boolean RootApplication;
[DisplayName("ServerComment"): Amended, Locale(1033), Description("ServerComment"):Amended] string ServerComment;
};

////////////////////
// NodeToConfigurationClass

#pragma deleteclass("NodeToConfigurationClass", NOFAIL)

[Abstract,Association,Locale(1033)]
class NodeToConfigurationClass
{
	[key] ConfigurationNode ref Node;
	[key] NetConfigurationClass ref ConfigClass;
};

/////////////////////
// LocationConfiguration

#pragma deleteclass ("LocationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class LocationConfiguration : NodeToConfigurationClass
{
};

///////////////////////
// NodeToConfigurationClassUnmerged
#pragma deleteclass ("LocationConfigurationClassUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class NodeToConfigurationClassUnmerged : NodeToConfigurationClass
{
};

////////////////////////
// ApplicationConfiguration

#pragma deleteclass ("ApplicationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class ApplicationConfiguration : NodeToConfigurationClass
{
};

///////////////////////////
// ApplicationConfigurationUnmerged

#pragma deleteclass ("ApplicationConfigurationUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class ApplicationConfigurationUnmerged : NodeToConfigurationClassUnmerged
{
};

///////////////////////
// ConfigurationFile

#pragma deleteclass ("ConfigurationFile", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("ConfigurationFile") : Amended, Locale(1033),  Description("Configuration File") : Amended]
class ConfigurationFile : ConfigurationNode
{
	[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies a configuration node"):Amended] string Selector;
	[key, DisplayName("Location"): Amended, Locale(1033), Description("Specifies a location inside the file"):Amended] string Location;
	
	[DisplayName("Path"): Amended, Locale(1033), Description("Configuration File Path"):Amended] string Path;
};

////////////////////////////////
// ConfigurationHierarchy

#pragma deleteclass ("ConfigurationHierarchy", NOFAIL)

[Abstract,Association,Locale(1033),AssocType("filehierarchy"):ToSubClass,Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationHierarchy
{
	[key] ConfigurationNode ref ConfigNode;
	[key] ConfigurationFile ref ConfigFile;
};

///////////////////////////
// ConfigurationNodeChild

#pragma deleteclass ("ConfigurationNodeChild", NOFAIL)

[Abstract,Association,Locale(1033),Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationNodeChild
{
	[key] ConfigurationNode ref Node;
	[key] ConfigurationFile ref ChildNode;
};

////////////////////////////
/// ConfigurationNodeParent

#pragma deleteclass ("ConfigurationNodeParent", NOFAIL)

[Abstract,Association,Locale(1033),Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationNodeParent
{
	[key] ConfigurationNode ref Node;
	[key] ConfigurationFile ref Parent;
};

//////////////////////////////
// WebApplicationConfiguration

#pragma deleteclass ("WebApplicationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class WebApplicationConfiguration : ApplicationConfiguration
{
	WebApplication ref Node;
	NetConfigurationClass ref ConfigClass;
};

//////////////////////////////
// WebApplicationConfigurationUnmerged

#pragma deleteclass ("WebApplicationConfigurationUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class WebApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged
{
	WebApplication ref Node;
	NetConfigurationClass ref ConfigClass;
};

//////////////////////////////
// WebApplicationHierarchy

#pragma deleteclass ("WebApplicationHierarchy", NOFAIL)

[Association,Local(1033), Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class WebApplicationHierarchy : ConfigurationHierarchy
{
    WebApplication ref ConfigNode;
	ConfigurationFile ref ConfigFile;
};

///////////////////////////////
// WebApplicationChildApplication

#pragma deleteclass("WebApplicationChildApplication", NOFAIL)

[Association,Local(1033),Dynamic:ToSubClass ToInstance,Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance, AssocType("webappchild")]
class WebApplicationChildApplication : ConfigurationNodeChild
{
	WebApplication ref Node;
	Object ref ChildNode;
};

/////////////////////////////
// WebApplicationParentApplication

#pragma deleteclass ("WebApplicationParentApplication", NOFAIL)

[Association,Local(1033), Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance, AssocType("webappparent")]
class WebApplicationParentApplication : ConfigurationNodeParent
{
	WebApplication ref Node;
	Object ref Parent;
};

#pragma deleteclass ("IMembershipCondition", NOFAIL)

//**************************************************************************
//* Class: IMembershipCondition
//**************************************************************************

[DisplayName("IMembershipCondition") : Amended, Locale(1033),  Description("") : Amended]
class IMembershipCondition : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033)]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Site"): Amended, Description("For SiteMembershipCondition"):Amended, Locale(1033)]string Site;
[DisplayName("x509Certificate"): Amended, Description("For PublishedMembershipCondition"):Amended, Locale(1033)]string x509Certificate;
[DisplayName("PublicKeyBlob"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string PublicKeyBlob;
[DisplayName("Name"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string Name;
[DisplayName("AssemblyVersion"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string AssemblyVersion;
[DisplayName("Url"): Amended, Description("For URLMembershipCondition"):Amended, Locale(1033)]string Url;
[DisplayName("Zone"): Amended, Description("For ZoneMembershipCondition"):Amended, Locale(1033)]string Zone;
[DisplayName("HashValue"): Amended, Description("For HashMembershipCondition"):Amended, Locale(1033)]string HashValue;
[DisplayName("HashAlgorithm"): Amended, Description("For HashMembershipCondition"):Amended, Locale(1033)]string HashAlgorithm;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

//**************************************************************************
//* Class: CodeGroup
//**************************************************************************

#pragma deleteclass ("CodeGroup", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("CodeGroup") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("codeGroup")]
class CodeGroup : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),Required]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Attributes"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0", "1","2","3"}, Values {"None", "Exclusive","LevelFinal","Exclusive,LevelFinal"}: Amended] sint32 Attributes=0;
[DisplayName("PermissionSetName"): Amended, Description(""):Amended, Locale(1033)]string PermissionSetName;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
[DisplayName("CodeGroup"): Amended, Locale(1033), Description("child codegroup"):Amended] CodeGroup children[];
[DisplayName("IMemberShipCondition"): Amended, Locale(1033), Description("IMemberShipCondition"):Amended] IMemberShipCondition membership[];
};
