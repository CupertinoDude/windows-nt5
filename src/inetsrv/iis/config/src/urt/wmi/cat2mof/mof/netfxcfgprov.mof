// **************************************************************************
// Copyright (c) 2000 Microsoft Corporation.
//
// File:  netfxcfgprov.mof
//
// Description: .NET Framework WMI Provider
//
// **************************************************************************

#pragma classflags("forceupdate")

/////////////////////////////////////////////////////////////////////
// Go to "root" and create a new "NetFrameworkv1" namespace

#pragma namespace ("\\\\.\\Root")

[Locale(0x409)]
instance of __Namespace
{
  Name = "NetFrameworkv1";
};

#pragma namespace ("\\\\.\\root\\NetFrameworkv1")

/////////////////////////////////////////////////////////////////////
// Register the instance provider

#pragma deleteclass("FrameworkProvider",NOFAIL)

class FrameworkProvider : __Win32Provider
{
  string HostingModel;
};

instance of FrameworkProvider as $NetFrameworkProvider
{
  Name = "NetFrameworkv1Provider";
  ClsId = "{4F14DD83-C443-4c0c-9784-AA903BBF9FA6}";
  ImpersonationLevel = 1;
  PerUserInitialization = TRUE;
  HostingModel = "NetworkServiceHost";
};


instance of __InstanceProviderRegistration
{
  Provider = $NetFrameworkProvider;
  SupportsPut = TRUE;
  SupportsGet = TRUE;
  SupportsDelete = TRUE;
  SupportsEnumeration = TRUE;
  QuerySupportLevels = {"WQL:UnarySelect"};
};

instance of __MethodProviderRegistration
{
  Provider = $NetFrameworkProvider;
};

/////////////////////////////////////////////////////////////////////
// NetConfigurationClass

#pragma deleteclass("NetConfigurationClass", NOFAIL)

[Abstract,Locale(1033)] 
class NetConfigurationClass
{
[DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

/////////////////////////////////////////////////////////////////////
// .NET Association base class

#pragma deleteclass("NetBaseAssociation", NOFAIL)

[Abstract,Association,Locale(1033)]
class NetBaseAssociation
{
};

/////////////////////////////////////////////////////////////////////
// .NET Containment Association base class

#pragma deleteclass("NetContainmentAssociation", NOFAIL)

[Abstract,Association,Locale(1033)]
class NetContainmentAssociation : NetBaseAssociation
{
};


////////////////////////////////////////////////////////////////////
/// BatchEntry class

#pragma deleteclass("BatchEntry", NOFAIL)

class BatchEntry
{
  [values{"create", "modify", "delete"}, Description("Batch operation to perform: when create-provide an instance, modify-provide an instance, delete-fill in an object path, retrieve-fill in an object path")] uint32 Op;
  [Description("Instance to be modified or created")] object Inst;
  [Description("Object (path) to be deleted or retrieved.  For create operations, BatchOperation::ProcessBatch method returns the path for the instance")] string Path;
  [Description("returns HRESULT of the operation")] uint32 Status;
};


//////////////////
// BatchOperation

#pragma deleteclass("BatchOperation", NOFAIL)

[abstract, description("Expectation that this will be processed in the order in which the method list is specified.  Derive from this class and implement the method (per provider)")]
class BatchOperation {
  [static] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags);
  [static] uint32 BatchCreate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static] uint32 BatchUpdate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static] uint32 BatchDelete(  [in]string Path[],       [in]uint32 flags, [out]uint32 status[], [out]object results[]);
};

//////////////////////
/// NetFrameworkBatchOperation

#pragma deleteclass("NetFrameworkBatchOperation", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider")]
class NetFrameworkBatchOperation : BatchOperation
{
  [static,implemented] uint32 ProcessBatch([in, out]BatchEntry BatchList[], [in]uint32 flags);
  [static,implemented] uint32 BatchCreate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static,implemented] uint32 BatchUpdate(  [in]object ObjectList[], [in]uint32 flags, [out]uint32 status[]);
  [static,implemented] uint32 BatchDelete(  [in]string Path[],       [in]uint32 flags, [out]uint32 status[], [out]object results[]);
};

////////////////////////////
// ConfigurationNode

#pragma deleteclass("ConfigurationNode", NOFAIL)

[Abstract, Dynamic: ToSubClass ToInstance, Provider("NetFrameWorkv1Provider"): ToSubClass ToInstance, Locale(1033)]
class ConfigurationNode
{
[DisplayName("Selector"): Amended, Locale(1033), Description("Specifies a configuration node"):Amended] string Selector;
};

//////////////////////////////
// ApplicationBase

#pragma deleteclass("ApplicationBase", NOFAIL)

[Abstract,Locale(1033)] 
class ApplicationBase : ConfigurationNode
{
[DisplayName("RootApplication"): Amended, Locale(1033), Description("Is the webpplication the Root Application or not"):Amended] boolean RootApplication;
};

//**************************************************************************
//* Class: WebApplication
//**************************************************************************

#pragma deleteclass("WebApplication", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("WebApplication") : Amended, Locale(1033),  Description("") : Amended]
class WebApplication : ApplicationBase
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="iis://localhost/W3SVC/";
[DisplayName("Path"): Amended, Locale(1033), Description("Specifies vdir"):Amended] string Path;
[DisplayName("ConfigurationFilePath"): Amended, Locale(1033), Description("<path>\\web.config"):Amended] string ConfigurationFilePath;
[DisplayName("FriendlyName"): Amended, Locale(1033), Description("Friendly name of webapplication"):Amended] string FriendlyName;
[DisplayName("RelativeName"): Amended, Locale(1033), Description("Relative name"):Amended] string RelativeName;
[DisplayName("RootApplication"): Amended, Locale(1033), Description("Is the webpplication the Root Application or not"):Amended] boolean RootApplication;
[DisplayName("ServerComment"): Amended, Locale(1033), Description("ServerComment"):Amended] string ServerComment;
};

////////////////////
// NodeToConfigurationClass

#pragma deleteclass("NodeToConfigurationClass", NOFAIL)

[Abstract,Association,Locale(1033)]
class NodeToConfigurationClass
{
	[key] ConfigurationNode ref Node;
	[key] NetConfigurationClass ref ConfigClass;
};

/////////////////////
// LocationConfiguration

#pragma deleteclass ("LocationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class LocationConfiguration : NodeToConfigurationClass
{
};

///////////////////////
// NodeToConfigurationClassUnmerged
#pragma deleteclass ("LocationConfigurationClassUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class NodeToConfigurationClassUnmerged : NodeToConfigurationClass
{
};

////////////////////////
// ApplicationConfiguration

#pragma deleteclass ("ApplicationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class ApplicationConfiguration : NodeToConfigurationClass
{
};

///////////////////////////
// ApplicationConfigurationUnmerged

#pragma deleteclass ("ApplicationConfigurationUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class ApplicationConfigurationUnmerged : NodeToConfigurationClassUnmerged
{
};

///////////////////////
// ConfigurationFile

#pragma deleteclass ("ConfigurationFile", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("ConfigurationFile") : Amended, Locale(1033),  Description("Configuration File") : Amended]
class ConfigurationFile : ConfigurationNode
{
	[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies a configuration node"):Amended] string Selector;
	[key, DisplayName("Location"): Amended, Locale(1033), Description("Specifies a location inside the file"):Amended] string Location;
	
	[DisplayName("Path"): Amended, Locale(1033), Description("Configuration File Path"):Amended] string Path;
};

////////////////////////////////
// ConfigurationHierarchy

#pragma deleteclass ("ConfigurationHierarchy", NOFAIL)

[Abstract,Association,Locale(1033),AssocType("filehierarchy"):ToSubClass,Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationHierarchy
{
	[key] ConfigurationNode ref ConfigNode;
	[key] ConfigurationFile ref ConfigFile;
};

///////////////////////////
// ConfigurationNodeChild

#pragma deleteclass ("ConfigurationNodeChild", NOFAIL)

[Abstract,Association,Locale(1033),Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationNodeChild
{
	[key] ConfigurationNode ref Node;
	[key] ConfigurationFile ref ChildNode;
};

////////////////////////////
/// ConfigurationNodeParent

#pragma deleteclass ("ConfigurationNodeParent", NOFAIL)

[Abstract,Association,Locale(1033),Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class ConfigurationNodeParent
{
	[key] ConfigurationNode ref Node;
	[key] ConfigurationFile ref Parent;
};

//////////////////////////////
// WebApplicationConfiguration

#pragma deleteclass ("WebApplicationConfiguration", NOFAIL)

[Abstract,Association,Locale(1033)]
class WebApplicationConfiguration : ApplicationConfiguration
{
	WebApplication ref Node;
	NetConfigurationClass ref ConfigClass;
};

//////////////////////////////
// WebApplicationConfigurationUnmerged

#pragma deleteclass ("WebApplicationConfigurationUnmerged", NOFAIL)

[Abstract,Association,Locale(1033)]
class WebApplicationConfigurationUnmerged : ApplicationConfigurationUnmerged
{
	WebApplication ref Node;
	NetConfigurationClass ref ConfigClass;
};

//////////////////////////////
// WebApplicationHierarchy

#pragma deleteclass ("WebApplicationHierarchy", NOFAIL)

[Association,Local(1033), Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance]
class WebApplicationHierarchy : ConfigurationHierarchy
{
    WebApplication ref ConfigNode;
	ConfigurationFile ref ConfigFile;
};

///////////////////////////////
// WebApplicationChildApplication

#pragma deleteclass("WebApplicationChildApplication", NOFAIL)

[Association,Local(1033),Dynamic:ToSubClass ToInstance,Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance, AssocType("webappchild")]
class WebApplicationChildApplication : ConfigurationNodeChild
{
	WebApplication ref Node;
	Object ref ChildNode;
};

/////////////////////////////
// WebApplicationParentApplication

#pragma deleteclass ("WebApplicationParentApplication", NOFAIL)

[Association,Local(1033), Dynamic:ToSubClass ToInstance, Provider("NetFrameWorkv1Provider") : ToSubClass ToInstance, AssocType("webappparent")]
class WebApplicationParentApplication : ConfigurationNodeParent
{
	WebApplication ref Node;
	Object ref Parent;
};

#pragma deleteclass ("IMembershipCondition", NOFAIL)

//**************************************************************************
//* Class: IMembershipCondition
//**************************************************************************

[DisplayName("IMembershipCondition") : Amended, Locale(1033),  Description("") : Amended]
class IMembershipCondition : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033)]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Site"): Amended, Description("For SiteMembershipCondition"):Amended, Locale(1033)]string Site;
[DisplayName("x509Certificate"): Amended, Description("For PublishedMembershipCondition"):Amended, Locale(1033)]string x509Certificate;
[DisplayName("PublicKeyBlob"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string PublicKeyBlob;
[DisplayName("Name"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string Name;
[DisplayName("AssemblyVersion"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033)]string AssemblyVersion;
[DisplayName("Url"): Amended, Description("For URLMembershipCondition"):Amended, Locale(1033)]string Url;
[DisplayName("Zone"): Amended, Description("For ZoneMembershipCondition"):Amended, Locale(1033)]string Zone;
[DisplayName("HashValue"): Amended, Description("For HashMembershipCondition"):Amended, Locale(1033)]string HashValue;
[DisplayName("HashAlgorithm"): Amended, Description("For HashMembershipCondition"):Amended, Locale(1033)]string HashAlgorithm;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

//**************************************************************************
//* Class: CodeGroup
//**************************************************************************

#pragma deleteclass ("CodeGroup", NOFAIL)

[Dynamic: ToInstance, Provider("NetFrameWorkv1Provider"), DisplayName("CodeGroup") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("codeGroup")]
class CodeGroup : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),Required]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Attributes"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0", "1","2","3"}, Values {"None", "Exclusive","LevelFinal","Exclusive,LevelFinal"}: Amended] sint32 Attributes=0;
[DisplayName("PermissionSetName"): Amended, Description(""):Amended, Locale(1033)]string PermissionSetName;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
[DisplayName("CodeGroup"): Amended, Locale(1033), Description("child codegroup"):Amended] CodeGroup children[];
[DisplayName("IMemberShipCondition"): Amended, Locale(1033), Description("IMemberShipCondition"):Amended] IMemberShipCondition membership[];
};
#pragma deleteclass ("application", NOFAIL)

//**************************************************************************
//* Class: application
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("application") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("application")  ,XML_ScopedByElement  ]
class application : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033)]string name="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("applicationToserviceAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class applicationToserviceAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] application ref Parent;
[read, key, Cols("version")] service ref Child;
};

#pragma deleteclass ("applicationTolifetimeAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class applicationTolifetimeAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] application ref Parent;
[read, key, Cols("version")] lifetime ref Child;
};

#pragma deleteclass ("applicationTochannelAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class applicationTochannelAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] application ref Parent;
[read, key, Cols("version")] channel ref Child;
};

#pragma deleteclass ("applicationToclientAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class applicationToclientAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] application ref Parent;
[read, key, Cols("version")] client ref Child;
};

#pragma deleteclass ("appSettings", NOFAIL)

//**************************************************************************
//* Class: appSettings
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("appSettings") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("appSettings") ,NonContained   ]
class appSettings : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("key"): Amended, Description(""):Amended, Locale(1033),key,Required]string key="";
[DisplayName("value"): Amended, Description(""):Amended, Locale(1033)]string value;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("assemblies", NOFAIL)

//**************************************************************************
//* Class: assemblies
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("assemblies") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("assemblies")    ]
class assemblies : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("assembly"): Amended, Description(""):Amended, Locale(1033),key,Required]string assembly="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("assemblyBinding", NOFAIL)

//**************************************************************************
//* Class: assemblyBinding
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("assemblyBinding") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("assemblyBinding")  ,XML_ScopedByElement  ]
class assemblyBinding : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("assemblyBindingTopublisherPolicyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class assemblyBindingTopublisherPolicyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] assemblyBinding ref Parent;
[read, key, Cols("version")] publisherPolicy ref Child;
};

#pragma deleteclass ("assemblyBindingTodependentAssemblyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class assemblyBindingTodependentAssemblyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] assemblyBinding ref Parent;
[read, key, Cols("version")] dependentAssembly ref Child;
};

#pragma deleteclass ("assemblyBindingToprobingAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class assemblyBindingToprobingAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] assemblyBinding ref Parent;
[read, key, Cols("version")] probing ref Child;
};

#pragma deleteclass ("assert", NOFAIL)

//**************************************************************************
//* Class: assert
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("assert") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("assert")  ,XML_ScopedByElement  ]
class assert : NetConfigurationClass
{
[DisplayName("assertuienabled"): Amended, Description(""):Amended, Locale(1033)]Boolean assertuienabled=0;
[DisplayName("logfilename"): Amended, Description(""):Amended, Locale(1033)]string logfilename="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("authentication", NOFAIL)

//**************************************************************************
//* Class: authentication
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("authentication") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("authentication")  ,XML_ScopedByElement  ]
class authentication : NetConfigurationClass
{
[DisplayName("mode"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0","1","2","3"}, Values {"None","Windows","Forms","Passport"}: Amended] sint32 mode=1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("authenticationToformsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class authenticationToformsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] authentication ref Parent;
[read, key, Cols("")] forms ref Child;
};

#pragma deleteclass ("authenticationTopassportAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class authenticationTopassportAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] authentication ref Parent;
[read, key, Cols("")] passport ref Child;
};

#pragma deleteclass ("authenticationModules", NOFAIL)

//**************************************************************************
//* Class: authenticationModules
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("authenticationModules") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("authenticationModule")    ]
class authenticationModules : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("authorization", NOFAIL)

//**************************************************************************
//* Class: authorization
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("authorization") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("authorization")    ]
class authorization : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1"}, Values {"allow","deny"}: Amended] sint32 Directive;
[DisplayName("roles"): Amended, Description(""):Amended, Locale(1033)]string roles="";
[DisplayName("users"): Amended, Description(""):Amended, Locale(1033)]string users="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("bindingRedirect", NOFAIL)

//**************************************************************************
//* Class: bindingRedirect
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("bindingRedirect") : Amended, Locale(1033),  Description("Redirects requests for one version of an assembly to another version.") : Amended, Database("NetFrameworkv1"), InternalName("bindingRedirect")  ,XML_ScopedByElement  ]
class bindingRedirect : NetConfigurationClass
{
[DisplayName("oldVersion"): Amended, Description("Specifies the version of the dependency that was originally requested."):Amended, Locale(1033),key,Required]string oldVersion;
[DisplayName("newVersion"): Amended, Description("Specifies the version of the dependency to use instead of the requested version."):Amended, Locale(1033)]string newVersion;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]uint32 id=1;
[DisplayName("name"): Amended, Description("Specifies the name of the dependency."):Amended, Locale(1033),key,Required]string name;
[DisplayName("publicKeyToken"): Amended, Description("Contains a hex value that specifies the strong name for this dependency."):Amended, Locale(1033),key,Required]string publicKeyToken="";
[DisplayName("culture"): Amended, Description("Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (<language>-<country/region>)"):Amended, Locale(1033),key,Required]string culture="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("browserCaps", NOFAIL)

//**************************************************************************
//* Class: browserCaps
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("browserCaps") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("browserCaps")  ,XML_ScopedByElement  ]
class browserCaps : NetConfigurationClass
{
[DisplayName("value"): Amended, Description(""):Amended, Locale(1033)]string value;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("bypassList", NOFAIL)

//**************************************************************************
//* Class: bypassList
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("bypassList") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("bypassList")    ]
class bypassList : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("address"): Amended, Description(""):Amended, Locale(1033),key,Required]string address="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("channel", NOFAIL)

//**************************************************************************
//* Class: channel
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("channel") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("channel")  ,XML_ScopedByElement  ]
class channel : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("displayName"): Amended, Description(""):Amended, Locale(1033)]string displayName="";
[DisplayName("reference"): Amended, Description(""):Amended, Locale(1033),key,Required]string reference="";
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033)]string name="";
[DisplayName("priority"): Amended, Description(""):Amended, Locale(1033)]uint32 priority=1;
[DisplayName("clientconnectionlimit"): Amended, Description(""):Amended, Locale(1033)]uint32 clientconnectionlimit=2;
[DisplayName("proxyname"): Amended, Description(""):Amended, Locale(1033)]string proxyname="";
[DisplayName("proxyport"): Amended, Description(""):Amended, Locale(1033)]uint32 proxyport=0;
[DisplayName("listen"): Amended, Description(""):Amended, Locale(1033)]Boolean listen=0;
[DisplayName("suppresschanneldata"): Amended, Description(""):Amended, Locale(1033)]Boolean suppresschanneldata=0;
[DisplayName("useipaddress"): Amended, Description(""):Amended, Locale(1033)]Boolean useipaddress=0;
[DisplayName("rejectremoterequests"): Amended, Description(""):Amended, Locale(1033)]Boolean rejectremoterequests=0;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("channelToclientProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class channelToclientProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version type port reference")] channel ref Parent;
[read, key, Cols("version channelType port channelReference")] clientProviders ref Child;
};

#pragma deleteclass ("channelToserverProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class channelToserverProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version type port reference")] channel ref Parent;
[read, key, Cols("version channelType port channelReference")] serverProviders ref Child;
};

#pragma deleteclass ("channelSinkProviders", NOFAIL)

//**************************************************************************
//* Class: channelSinkProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("channelSinkProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("channelSinkProviderTemplate")  ,XML_ScopedByElement  ]
class channelSinkProviders : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("channelSinkProvidersToclientProviderTemplatesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class channelSinkProvidersToclientProviderTemplatesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] channelSinkProviders ref Parent;
[read, key, Cols("version")] clientProviderTemplates ref Child;
};

#pragma deleteclass ("channelSinkProvidersToserverProviderTemplatesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class channelSinkProvidersToserverProviderTemplatesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] channelSinkProviders ref Parent;
[read, key, Cols("version")] serverProviderTemplates ref Child;
};

#pragma deleteclass ("channeltemplate", NOFAIL)

//**************************************************************************
//* Class: channeltemplate
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("channeltemplate") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("channeltemplate")  ,XML_ScopedByElement ,XML_InstanceElementName ("channel") ]
class channeltemplate : NetConfigurationClass
{
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]string id="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type="";
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033)]string name="";
[DisplayName("priority"): Amended, Description(""):Amended, Locale(1033)]uint32 priority=1;
[DisplayName("clientconnectionlimit"): Amended, Description(""):Amended, Locale(1033)]uint32 clientconnectionlimit=2;
[DisplayName("proxyname"): Amended, Description(""):Amended, Locale(1033)]string proxyname="";
[DisplayName("proxyport"): Amended, Description(""):Amended, Locale(1033)]uint32 proxyport=0;
[DisplayName("listen"): Amended, Description(""):Amended, Locale(1033)]Boolean listen=0;
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033)]uint32 port=0;
[DisplayName("suppresschanneldata"): Amended, Description(""):Amended, Locale(1033)]Boolean suppresschanneldata=0;
[DisplayName("useipaddress"): Amended, Description(""):Amended, Locale(1033)]Boolean useipaddress=0;
[DisplayName("rejectremoterequests"): Amended, Description(""):Amended, Locale(1033)]Boolean rejectremoterequests=0;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("client", NOFAIL)

//**************************************************************************
//* Class: client
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("client") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("client")  ,XML_ScopedByElement  ]
class client : NetConfigurationClass
{
[DisplayName("url"): Amended, Description(""):Amended, Locale(1033),key,Required]string url;
[DisplayName("displayName"): Amended, Description(""):Amended, Locale(1033)]string displayName;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientToclient_activatedAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientToclient_activatedAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version url")] client ref Parent;
[read, key, Cols("version clienturl")] client_activated ref Child;
};

#pragma deleteclass ("clientToclient_wellknownAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientToclient_wellknownAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version url")] client ref Parent;
[read, key, Cols("version clienturl")] client_wellknown ref Child;
};

#pragma deleteclass ("client_activated", NOFAIL)

//**************************************************************************
//* Class: client_activated
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("client_activated") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("client_activated")  ,XML_ScopedByElement ,XML_InstanceElementName ("activated") ]
class client_activated : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[DisplayName("clienturl"): Amended, Description(""):Amended, Locale(1033),key,Required]string clienturl;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("client_wellknown", NOFAIL)

//**************************************************************************
//* Class: client_wellknown
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("client_wellknown") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("client_wellknown")  ,XML_ScopedByElement ,XML_InstanceElementName ("wellknown") ]
class client_wellknown : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("url"): Amended, Description(""):Amended, Locale(1033)]string url;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[DisplayName("clienturl"): Amended, Description(""):Amended, Locale(1033),key,Required]string clienturl;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientFormatter", NOFAIL)

//**************************************************************************
//* Class: clientFormatter
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientFormatter") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientFormatter")  ,XML_ScopedByElement ,XML_InstanceElementName ("formatter") ]
class clientFormatter : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("reference"): Amended, Description(""):Amended, Locale(1033),key,Required]string reference;
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("ChannelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string ChannelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientFormatterTemplate", NOFAIL)

//**************************************************************************
//* Class: clientFormatterTemplate
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientFormatterTemplate") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientFormatterTemplate")  ,XML_ScopedByElement ,XML_InstanceElementName ("formatter") ]
class clientFormatterTemplate : NetConfigurationClass
{
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]string id;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("includeversions"): Amended, Description(""):Amended, Locale(1033)]Boolean includeversions=0;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientProvider", NOFAIL)

//**************************************************************************
//* Class: clientProvider
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientProvider") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientProvider")  ,XML_ScopedByElement ,XML_InstanceElementName ("provider") ]
class clientProvider : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("reference"): Amended, Description(""):Amended, Locale(1033),key,Required]string reference;
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("channelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientProviders", NOFAIL)

//**************************************************************************
//* Class: clientProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientProviders")  ,XML_ScopedByElement  ]
class clientProviders : NetConfigurationClass
{
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("channelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientProvidersToclientProviderAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientProvidersToclientProviderAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version channelType port channelReference")] clientProviders ref Parent;
[read, key, Cols("version channelType port channelReference")] clientProvider ref Child;
};

#pragma deleteclass ("clientProvidersToclientFormatterAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientProvidersToclientFormatterAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version channelType port channelReference")] clientProviders ref Parent;
[read, key, Cols("version channelType port ChannelReference")] clientFormatter ref Child;
};

#pragma deleteclass ("clientProviderTemplate", NOFAIL)

//**************************************************************************
//* Class: clientProviderTemplate
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientProviderTemplate") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientProviderTemplate")  ,XML_ScopedByElement ,XML_InstanceElementName ("provider") ]
class clientProviderTemplate : NetConfigurationClass
{
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]string id;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientProviderTemplates", NOFAIL)

//**************************************************************************
//* Class: clientProviderTemplates
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientProviderTemplates") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientProviderTemplates")  ,XML_ScopedByElement ,XML_InstanceElementName ("clientProviders") ]
class clientProviderTemplates : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("clientProviderTemplatesToclientFormatterTemplateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientProviderTemplatesToclientFormatterTemplateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] clientProviderTemplates ref Parent;
[read, key, Cols("version")] clientFormatterTemplate ref Child;
};

#pragma deleteclass ("clientProviderTemplatesToclientProviderTemplateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class clientProviderTemplatesToclientProviderTemplateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] clientProviderTemplates ref Parent;
[read, key, Cols("version")] clientProviderTemplate ref Child;
};

#pragma deleteclass ("clientTarget", NOFAIL)

//**************************************************************************
//* Class: clientTarget
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("clientTarget") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("clientTarget")    ]
class clientTarget : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("alias"): Amended, Description(""):Amended, Locale(1033),key,Required]string alias="";
[DisplayName("userAgent"): Amended, Description(""):Amended, Locale(1033)]string userAgent;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("codeBase", NOFAIL)

//**************************************************************************
//* Class: codeBase
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("codeBase") : Amended, Locale(1033),  Description("Indicates where a specific version of a dependent assembly can be found.") : Amended, Database("NetFrameworkv1"), InternalName("codeBase")  ,XML_ScopedByElement  ]
class codeBase : NetConfigurationClass
{
[DisplayName("version"): Amended, Description("Specifies the version of the dependency for which this codebase applies."):Amended, Locale(1033),key,Required]string version;
[DisplayName("href"): Amended, Description("Specifies the url where this version of the dependency can be located for installation."):Amended, Locale(1033)]string href;
[DisplayName("runtimeVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string runtimeVersion="";
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]uint32 id=1;
[DisplayName("name"): Amended, Description("Specifies the name of the dependency."):Amended, Locale(1033),key,Required]string name;
[DisplayName("publicKeyToken"): Amended, Description("Contains a hex value that specifies the strong name for this dependency."):Amended, Locale(1033),key,Required]string publicKeyToken="";
[DisplayName("culture"): Amended, Description("Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (<language>-<country/region>)"):Amended, Locale(1033),key,Required]string culture="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("compilation", NOFAIL)

//**************************************************************************
//* Class: compilation
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("compilation") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("compilation")  ,XML_ScopedByElement  ]
class compilation : NetConfigurationClass
{
[DisplayName("debug"): Amended, Description(""):Amended, Locale(1033)]Boolean debug=0;
[DisplayName("defaultLanguage"): Amended, Description(""):Amended, Locale(1033)]string defaultLanguage="";
[DisplayName("explicit"): Amended, Description(""):Amended, Locale(1033)]Boolean explicit=0;
[DisplayName("batch"): Amended, Description(""):Amended, Locale(1033)]Boolean batch=0;
[DisplayName("batchTimeout"): Amended, Description(""):Amended, Locale(1033)]uint32 batchTimeout=30;
[DisplayName("numRecompilesBeforeAppRestart"): Amended, Description(""):Amended, Locale(1033)]uint32 numRecompilesBeforeAppRestart=30;
[DisplayName("strict"): Amended, Description(""):Amended, Locale(1033)]Boolean strict=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("compilationToassembliesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class compilationToassembliesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] compilation ref Parent;
[read, key, Cols("")] assemblies ref Child;
};

#pragma deleteclass ("compilationTocompilersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class compilationTocompilersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] compilation ref Parent;
[read, key, Cols("")] compilers ref Child;
};

#pragma deleteclass ("compilers", NOFAIL)

//**************************************************************************
//* Class: compilers
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("compilers") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("compilers")  ,XML_ScopedByElement ,XML_InstanceElementName ("compiler") ]
class compilers : NetConfigurationClass
{
[DisplayName("language"): Amended, Description(""):Amended, Locale(1033),key,Required]string language="";
[DisplayName("extension"): Amended, Description(""):Amended, Locale(1033),key,Required]string extension="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type="";
[DisplayName("compilerOptions"): Amended, Description(""):Amended, Locale(1033)]string compilerOptions;
[DisplayName("warningLevel"): Amended, Description(""):Amended, Locale(1033)]uint32 warningLevel;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("configSections", NOFAIL)

//**************************************************************************
//* Class: configSections
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("configSections") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("configSections") ,NonContained ,XML_ScopedByElement  ]
class configSections : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("configSectionsTosectionAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class configSectionsTosectionAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] configSections ref Parent;
[read, key, Cols("")] section ref Child;
};

#pragma deleteclass ("configSectionsTosectionGroupAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class configSectionsTosectionGroupAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] configSections ref Parent;
[read, key, Cols("")] sectionGroup ref Child;
};

#pragma deleteclass ("ConnectAccess", NOFAIL)

//**************************************************************************
//* Class: ConnectAccess
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("ConnectAccess") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("ConnectAccess")  ,XML_ScopedByElement  ]
class ConnectAccess : NetConfigurationClass
{
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),key,Required]string className;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("ConnectAccessToEndPointAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class ConnectAccessToEndPointAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("PolicyVersion Name className")] ConnectAccess ref Parent;
[read, key, Cols("PolicyVersion Name className")] EndPoint ref Child;
};

#pragma deleteclass ("ConnectAccessToURIAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class ConnectAccessToURIAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("PolicyVersion Name className")] ConnectAccess ref Parent;
[read, key, Cols("PolicyVersion Name className")] URI ref Child;
};

#pragma deleteclass ("connectionManagement", NOFAIL)

//**************************************************************************
//* Class: connectionManagement
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("connectionManagement") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("connectionManagement")    ]
class connectionManagement : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("address"): Amended, Description(""):Amended, Locale(1033),key,Required]string address="";
[DisplayName("maxconnection"): Amended, Description(""):Amended, Locale(1033),key,Required]uint32 maxconnection=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("credentials", NOFAIL)

//**************************************************************************
//* Class: credentials
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("credentials") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("credentials")  ,XML_ScopedByElement  ]
class credentials : NetConfigurationClass
{
[DisplayName("passwordFormat"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"Clear","SHA1","MD5"}: Amended] sint32 passwordFormat=1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("credentialsTouserAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class credentialsTouserAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] credentials ref Parent;
[read, key, Cols("")] user ref Child;
};

#pragma deleteclass ("customErrors", NOFAIL)

//**************************************************************************
//* Class: customErrors
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("customErrors") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("customErrors")  ,XML_ScopedByElement  ]
class customErrors : NetConfigurationClass
{
[DisplayName("mode"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0","1","2"}, Values {"On","Off","RemoteOnly"}: Amended] sint32 mode=0;
[DisplayName("defaultRedirect"): Amended, Description(""):Amended, Locale(1033)]string defaultRedirect="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("customErrorsToerrorAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class customErrorsToerrorAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] customErrors ref Parent;
[read, key, Cols("")] error ref Child;
};

#pragma deleteclass ("defaultProxy", NOFAIL)

//**************************************************************************
//* Class: defaultProxy
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("defaultProxy") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("defaultProxy")  ,XML_ScopedByElement  ]
class defaultProxy : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("defaultProxyTobypassListAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class defaultProxyTobypassListAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] defaultProxy ref Parent;
[read, key, Cols("")] bypassList ref Child;
};

#pragma deleteclass ("defaultProxyToproxyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class defaultProxyToproxyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] defaultProxy ref Parent;
[read, key, Cols("")] proxy ref Child;
};

#pragma deleteclass ("dependentAssembly", NOFAIL)

//**************************************************************************
//* Class: dependentAssembly
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("dependentAssembly") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("dependentAssembly")  ,XML_ScopedByElement  ,XML_ChildElementName("assemblyIdentity")]
class dependentAssembly : NetConfigurationClass
{
[DisplayName("name"): Amended, Description("Specifies the name of the dependency."):Amended, Locale(1033),key,Required,XML_ValueInChildElement]string name;
[DisplayName("publicKeyToken"): Amended, Description("Contains a hex value that specifies the strong name for this dependency."):Amended, Locale(1033),key,Required,XML_ValueInChildElement]string publicKeyToken="";
[DisplayName("culture"): Amended, Description("Contains a string value that specifies the language and country/region for this dependency. Value based on RFC1766 (<language>-<country/region>)"):Amended, Locale(1033),key,Required,XML_ValueInChildElement]string culture="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("dependentAssemblyTobindingRedirectAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class dependentAssemblyTobindingRedirectAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version name publicKeyToken culture")] dependentAssembly ref Parent;
[read, key, Cols("version name publicKeyToken culture")] bindingRedirect ref Child;
};

#pragma deleteclass ("dependentAssemblyTocodeBaseAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class dependentAssemblyTocodeBaseAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version name publicKeyToken culture")] dependentAssembly ref Parent;
[read, key, Cols("runtimeVersion name publicKeyToken culture")] codeBase ref Child;
};

#pragma deleteclass ("developerSettings", NOFAIL)

//**************************************************************************
//* Class: developerSettings
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("developerSettings") : Amended, Locale(1033),  Description("Tells the runtime if the development mode binding policy should be enabled.") : Amended, Database("NetFrameworkv1"), InternalName("developerSettings")  ,XML_ScopedByElement  ]
class developerSettings : NetConfigurationClass
{
[DisplayName("developerInstallation"): Amended, Description("A value of true enables the development mode binding policy. False uses regular binding policy (default)."):Amended, Locale(1033)]Boolean developerInstallation=0;
[DisplayName("BindingCompliance"): Amended, Description(""):Amended, Locale(1033)]Boolean BindingCompliance=0;
[DisplayName("finalizeOnEEShutdown"): Amended, Description(""):Amended, Locale(1033)]Boolean finalizeOnEEShutdown=0;
[DisplayName("breakOnEELoad"): Amended, Description(""):Amended, Locale(1033)]Boolean breakOnEELoad=0;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("deviceInfoProviders", NOFAIL)

//**************************************************************************
//* Class: deviceInfoProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("deviceInfoProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("DeviceInfoProviders")  ,XML_ScopedByElement ,XML_InstanceElementName ("deviceInfoProvider") ]
class deviceInfoProviders : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("EndPoint", NOFAIL)

//**************************************************************************
//* Class: EndPoint
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("EndPoint") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("EndPoint")  ,XML_ScopedByElement  ]
class EndPoint : NetConfigurationClass
{
[DisplayName("host"): Amended, Description(""):Amended, Locale(1033),key,Required]string host;
[DisplayName("protocol"): Amended, Description(""):Amended, Locale(1033),key,Required]string protocol;
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port;
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),key,Required]string className;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("error", NOFAIL)

//**************************************************************************
//* Class: error
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("error") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("error")  ,XML_ScopedByElement  ]
class error : NetConfigurationClass
{
[DisplayName("statusCode"): Amended, Description(""):Amended, Locale(1033)]string statusCode="";
[DisplayName("redirect"): Amended, Description(""):Amended, Locale(1033)]string redirect="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("forms", NOFAIL)

//**************************************************************************
//* Class: forms
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("forms") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("forms")  ,XML_ScopedByElement  ]
class forms : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033)]string name=".ASPXAUTH";
[DisplayName("loginUrl"): Amended, Description(""):Amended, Locale(1033)]string loginUrl="";
[DisplayName("protection"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0","2","3","3"}, Values {"All","None","Validation","Encryption"}: Amended] sint32 protection=0;
[DisplayName("timeout"): Amended, Description(""):Amended, Locale(1033)]uint32 timeout=60;
[DisplayName("path"): Amended, Description(""):Amended, Locale(1033)]string path="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("formsTocredentialsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class formsTocredentialsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] forms ref Parent;
[read, key, Cols("")] credentials ref Child;
};

#pragma deleteclass ("FullTrustAssemblies", NOFAIL)

//**************************************************************************
//* Class: FullTrustAssemblies
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("FullTrustAssemblies") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("FullTrustAssembly")  ,XML_ScopedByElement ,XML_InstanceElementName ("IMembershipCondition") ]
class FullTrustAssemblies : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),key,Required]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("PublicKeyBlob"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033),key,Required]string PublicKeyBlob;
[DisplayName("Name"): Amended, Description("For StrongNameMembershipCondition"):Amended, Locale(1033),key,Required]string Name;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("gcConcurrent", NOFAIL)

//**************************************************************************
//* Class: gcConcurrent
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("gcConcurrent") : Amended, Locale(1033),  Description("Determines if CLR Garbage Collection should run concurrently or non-concurrently.") : Amended, Database("NetFrameworkv1"), InternalName("gcConcurrent")  ,XML_ScopedByElement  ]
class gcConcurrent : NetConfigurationClass
{
[DisplayName("enabled"): Amended, Description(""):Amended, Locale(1033)]Boolean enabled;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("globalization", NOFAIL)

//**************************************************************************
//* Class: globalization
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("globalization") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("globalization")  ,XML_ScopedByElement  ]
class globalization : NetConfigurationClass
{
[DisplayName("requestEncoding"): Amended, Description(""):Amended, Locale(1033)]string requestEncoding="";
[DisplayName("responseEncoding"): Amended, Description(""):Amended, Locale(1033)]string responseEncoding="";
[DisplayName("fileEncoding"): Amended, Description(""):Amended, Locale(1033)]string fileEncoding="";
[DisplayName("culture"): Amended, Description(""):Amended, Locale(1033)]string culture="";
[DisplayName("uiCulture"): Amended, Description(""):Amended, Locale(1033)]string uiCulture="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("httpHandlers", NOFAIL)

//**************************************************************************
//* Class: httpHandlers
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("httpHandlers") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("httpHandlers")    ]
class httpHandlers : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("verb"): Amended, Description(""):Amended, Locale(1033),key,Required]string verb="";
[DisplayName("path"): Amended, Description(""):Amended, Locale(1033),key,Required]string path="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type="";
[DisplayName("validate"): Amended, Description(""):Amended, Locale(1033)]string validate="true";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("httpModules", NOFAIL)

//**************************************************************************
//* Class: httpModules
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("httpModules") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("httpModules")    ]
class httpModules : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033)]string name;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("httpRuntime", NOFAIL)

//**************************************************************************
//* Class: httpRuntime
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("httpRuntime") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("httpRuntime")  ,XML_ScopedByElement  ]
class httpRuntime : NetConfigurationClass
{
[DisplayName("executionTimeout"): Amended, Description(""):Amended, Locale(1033)]uint32 executionTimeout;
[DisplayName("maxRequestLength"): Amended, Description(""):Amended, Locale(1033)]uint32 maxRequestLength;
[DisplayName("useFullyQualifiedRedirectUrl"): Amended, Description(""):Amended, Locale(1033)]Boolean useFullyQualifiedRedirectUrl;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("identity", NOFAIL)

//**************************************************************************
//* Class: identity
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("identity") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("identity")  ,XML_ScopedByElement  ]
class identity : NetConfigurationClass
{
[DisplayName("impersonate"): Amended, Description(""):Amended, Locale(1033)]Boolean impersonate=0;
[DisplayName("userName"): Amended, Description(""):Amended, Locale(1033)]string userName="";
[DisplayName("password"): Amended, Description(""):Amended, Locale(1033)]string password="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("lifetime", NOFAIL)

//**************************************************************************
//* Class: lifetime
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("lifetime") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("lifetime")  ,XML_ScopedByElement  ]
class lifetime : NetConfigurationClass
{
[DisplayName("leaseTime"): Amended, Description(""):Amended, Locale(1033)]string leaseTime="";
[DisplayName("sponsorshipTimeOut"): Amended, Description(""):Amended, Locale(1033)]string sponsorshipTimeOut="";
[DisplayName("renewOnCallTime"): Amended, Description(""):Amended, Locale(1033)]string renewOnCallTime="";
[DisplayName("leaseManagerPollTime"): Amended, Description(""):Amended, Locale(1033)]string leaseManagerPollTime="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("listeners", NOFAIL)

//**************************************************************************
//* Class: listeners
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("listeners") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("listeners")    ]
class listeners : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type="";
[DisplayName("initializeData"): Amended, Description(""):Amended, Locale(1033)]string initializeData="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("location", NOFAIL)

//**************************************************************************
//* Class: location
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("location") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("location") ,NonContained ,XML_ScopedByElement  ]
class location : NetConfigurationClass
{
[DisplayName("path"): Amended, Description(""):Amended, Locale(1033),key,Required]string path=".";
[DisplayName("allowOverride"): Amended, Description(""):Amended, Locale(1033)]Boolean allowOverride;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("machineKey", NOFAIL)

//**************************************************************************
//* Class: machineKey
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("machineKey") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("machineKey")  ,XML_ScopedByElement  ]
class machineKey : NetConfigurationClass
{
[DisplayName("validationKey"): Amended, Description(""):Amended, Locale(1033)]string validationKey="autogenerate";
[DisplayName("decryptionKey"): Amended, Description(""):Amended, Locale(1033)]string decryptionKey="autogenerate";
[DisplayName("validation"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"SHA1","MD5","3DES"}: Amended] sint32 validation=1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mobileControlBindings", NOFAIL)

//**************************************************************************
//* Class: mobileControlBindings
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("mobileControlBindings") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("mobileControlBindings")  ,XML_ScopedByElement ,XML_InstanceElementName ("control") ]
class mobileControlBindings : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("adapter"): Amended, Description(""):Amended, Locale(1033)]string adapter;
[DisplayName("deviceName"): Amended, Description(""):Amended, Locale(1033),key,Required]string deviceName="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mobileControls", NOFAIL)

//**************************************************************************
//* Class: mobileControls
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("mobileControls") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("mobileControls")  ,XML_ScopedByElement  ]
class mobileControls : NetConfigurationClass
{
[DisplayName("allowCustomAttributes"): Amended, Description(""):Amended, Locale(1033)]Boolean allowCustomAttributes;
[DisplayName("sessionStateHistorySize"): Amended, Description(""):Amended, Locale(1033)]uint32 sessionStateHistorySize;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mobileControlsTomobileDevicesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class mobileControlsTomobileDevicesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] mobileControls ref Parent;
[read, key, Cols("")] mobileDevices ref Child;
};

#pragma deleteclass ("deviceFilters", NOFAIL)

//**************************************************************************
//* Class: deviceFilters
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("deviceFilters") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("mobileDeviceFilters")  ,XML_ScopedByElement ,XML_InstanceElementName ("filter") ]
class deviceFilters : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("method"): Amended, Description(""):Amended, Locale(1033)]string method;
[DisplayName("compare"): Amended, Description(""):Amended, Locale(1033)]string compare;
[DisplayName("argument"): Amended, Description(""):Amended, Locale(1033)]string argument;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mobileDevices", NOFAIL)

//**************************************************************************
//* Class: mobileDevices
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("mobileDevices") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("mobileDevices")  ,XML_ScopedByElement ,XML_InstanceElementName ("device") ]
class mobileDevices : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("predicateClass"): Amended, Description(""):Amended, Locale(1033)]string predicateClass;
[DisplayName("predicateMethod"): Amended, Description(""):Amended, Locale(1033)]string predicateMethod;
[DisplayName("pageAdapter"): Amended, Description(""):Amended, Locale(1033)]string pageAdapter;
[DisplayName("inheritsFrom"): Amended, Description(""):Amended, Locale(1033)]string inheritsFrom;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mobileDevicesTomobileControlBindingsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class mobileDevicesTomobileControlBindingsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name")] mobileDevices ref Parent;
[read, key, Cols("deviceName")] mobileControlBindings ref Child;
};

#pragma deleteclass ("mscorlib", NOFAIL)

//**************************************************************************
//* Class: mscorlib
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("mscorlib") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("mscorlib") ,NonContained ,XML_ScopedByElement  ]
class mscorlib : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("mscorlibTosecurityAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class mscorlibTosecurityAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] mscorlib ref Parent;
[read, key, Cols("")] security ref Child;
};

#pragma deleteclass ("NamedPermissionSets", NOFAIL)

//**************************************************************************
//* Class: NamedPermissionSets
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("NamedPermissionSets") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("NamedPermissionSet")  ,XML_ScopedByElement ,XML_InstanceElementName ("PermissionSet") ]
class NamedPermissionSets : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("Description"): Amended, Description(""):Amended, Locale(1033)]string Description;
[DisplayName("Unrestricted"): Amended, Description(""):Amended, Locale(1033)]Boolean Unrestricted;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("NamedPermissionSetsToPermissionAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class NamedPermissionSetsToPermissionAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("PolicyVersion Name")] NamedPermissionSets ref Parent;
[read, key, Cols("PolicyVersion Name")] Permission ref Child;
};

#pragma deleteclass ("pages", NOFAIL)

//**************************************************************************
//* Class: pages
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("pages") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("pages")  ,XML_ScopedByElement  ]
class pages : NetConfigurationClass
{
[DisplayName("buffer"): Amended, Description(""):Amended, Locale(1033)]Boolean buffer=1;
[DisplayName("enableSessionState"): Amended, Description(""):Amended, Locale(1033), ValueMap {"0","1","2"}, Values {"false","true","ReadOnly"}: Amended] sint32 enableSessionState=1;
[DisplayName("enableViewState"): Amended, Description(""):Amended, Locale(1033)]Boolean enableViewState=1;
[DisplayName("enableViewStateMac"): Amended, Description(""):Amended, Locale(1033)]Boolean enableViewStateMac=1;
[DisplayName("pageBaseType"): Amended, Description(""):Amended, Locale(1033)]string pageBaseType="";
[DisplayName("userControlBaseType"): Amended, Description(""):Amended, Locale(1033)]string userControlBaseType="";
[DisplayName("autoEventWireup"): Amended, Description(""):Amended, Locale(1033)]Boolean autoEventWireup=1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("passport", NOFAIL)

//**************************************************************************
//* Class: passport
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("passport") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("passport")  ,XML_ScopedByElement  ]
class passport : NetConfigurationClass
{
[DisplayName("redirectUrl"): Amended, Description(""):Amended, Locale(1033)]string redirectUrl="internal";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("Permission", NOFAIL)

//**************************************************************************
//* Class: Permission
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("Permission") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("Permission")  ,XML_ScopedByElement  ]
class Permission : NetConfigurationClass
{
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),key,Required]string className;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version;
[DisplayName("Unrestricted"): Amended, Description("For Environment,FileDialog, FileIO permission"):Amended, Locale(1033)]Boolean Unrestricted;
[DisplayName("Read"): Amended, Description("For Environment,FileIO permission"):Amended, Locale(1033)]string Read;
[DisplayName("Write"): Amended, Description("For Environment,FileIO permission"):Amended, Locale(1033)]string Write;
[DisplayName("Append"): Amended, Description("For FileIO permission"):Amended, Locale(1033)]string Append;
[DisplayName("UserQuota"): Amended, Description("For IsolatedStorage permission"):Amended, Locale(1033)]uint32 UserQuota;
[DisplayName("Expiry"): Amended, Description("For IsolatedStorage permission"):Amended, Locale(1033)]string Expiry;
[DisplayName("Allowed"): Amended, Description("For IsolatedStorage permission"):Amended, Locale(1033)]string Allowed;
[DisplayName("Flags"): Amended, Description(""):Amended, Locale(1033)]string Flags;
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("PermissionToConnectAccessAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class PermissionToConnectAccessAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("PolicyVersion Name className")] Permission ref Parent;
[read, key, Cols("PolicyVersion Name className")] ConnectAccess ref Child;
};

#pragma deleteclass ("policy", NOFAIL)

//**************************************************************************
//* Class: policy
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("policy") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("PolicyLevel")  ,XML_ScopedByElement ,XML_InstanceElementName ("PolicyLevel") ]
class policy : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("policyToCodeGroupAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class policyToCodeGroupAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] policy ref Parent;
[read, key, Cols("PolicyVersion")] CodeGroup ref Child;
};

#pragma deleteclass ("policyToNamedPermissionSetsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class policyToNamedPermissionSetsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] policy ref Parent;
[read, key, Cols("PolicyVersion")] NamedPermissionSets ref Child;
};

#pragma deleteclass ("policyToFullTrustAssembliesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class policyToFullTrustAssembliesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] policy ref Parent;
[read, key, Cols("PolicyVersion")] FullTrustAssemblies ref Child;
};

#pragma deleteclass ("policyToSecurityClassesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class policyToSecurityClassesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] policy ref Parent;
[read, key, Cols("PolicyVersion")] SecurityClasses ref Child;
};

#pragma deleteclass ("probing", NOFAIL)

//**************************************************************************
//* Class: probing
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("probing") : Amended, Locale(1033),  Description("Tells the runtime where to probe for additional private assemblies.") : Amended, Database("NetFrameworkv1"), InternalName("probing")  ,XML_ScopedByElement  ]
class probing : NetConfigurationClass
{
[DisplayName("privatePath"): Amended, Description("Specifies multiple sub folders to the app that contain assemblies. Semicolon delimited relative paths."):Amended, Locale(1033)]string privatePath;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("processModel", NOFAIL)

//**************************************************************************
//* Class: processModel
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("processModel") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("processModel")  ,XML_ScopedByElement  ]
class processModel : NetConfigurationClass
{
[DisplayName("enable"): Amended, Description(""):Amended, Locale(1033)]Boolean enable;
[DisplayName("timeout"): Amended, Description(""):Amended, Locale(1033)]string timeout="infinite";
[DisplayName("idleTimeout"): Amended, Description(""):Amended, Locale(1033)]string idleTimeout="infinite";
[DisplayName("shutdownTimeout"): Amended, Description(""):Amended, Locale(1033)]string shutdownTimeout="5";
[DisplayName("requestLimit"): Amended, Description(""):Amended, Locale(1033)]string requestLimit="infinite";
[DisplayName("requestQueueLimit"): Amended, Description(""):Amended, Locale(1033)]string requestQueueLimit="infinite";
[DisplayName("restartQueueLimit"): Amended, Description(""):Amended, Locale(1033)]string restartQueueLimit="infinite";
[DisplayName("memoryLimit"): Amended, Description(""):Amended, Locale(1033)]string memoryLimit="infinite";
[DisplayName("cpuMask"): Amended, Description(""):Amended, Locale(1033)]string cpuMask="";
[DisplayName("webGarden"): Amended, Description(""):Amended, Locale(1033)]Boolean webGarden=1;
[DisplayName("userName"): Amended, Description(""):Amended, Locale(1033)]string userName="";
[DisplayName("password"): Amended, Description(""):Amended, Locale(1033)]string password="";
[DisplayName("logLevel"): Amended, Description(""):Amended, Locale(1033)]string logLevel="errors";
[DisplayName("clientConnectedCheck"): Amended, Description(""):Amended, Locale(1033)]string clientConnectedCheck="0:00:05";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("protocols", NOFAIL)

//**************************************************************************
//* Class: protocols
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("protocols") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("protocols")    ]
class protocols : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("proxy", NOFAIL)

//**************************************************************************
//* Class: proxy
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("proxy") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("proxy")  ,XML_ScopedByElement  ]
class proxy : NetConfigurationClass
{
[DisplayName("bypassonlocal"): Amended, Description(""):Amended, Locale(1033)]Boolean bypassonlocal;
[DisplayName("usesystemdefault"): Amended, Description(""):Amended, Locale(1033)]Boolean usesystemdefault;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("publisherPolicy", NOFAIL)

//**************************************************************************
//* Class: publisherPolicy
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("publisherPolicy") : Amended, Locale(1033),  Description("Specifies whether or not publisher policy stored in the GAC should be applied to the entire application or a specific dependency.") : Amended, Database("NetFrameworkv1"), InternalName("publisherPolicy")  ,XML_ScopedByElement  ]
class publisherPolicy : NetConfigurationClass
{
[DisplayName("apply"): Amended, Description("Specifies whether or not to use the publisher policy. Defaults to true."):Amended, Locale(1033)]Boolean apply=1;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("renderingProviders", NOFAIL)

//**************************************************************************
//* Class: renderingProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("renderingProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("RenderingProviders")  ,XML_ScopedByElement ,XML_InstanceElementName ("renderingProvider") ]
class renderingProviders : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("default"): Amended, Description(""):Amended, Locale(1033)]Boolean default;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("requiredRuntime", NOFAIL)

//**************************************************************************
//* Class: requiredRuntime
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("requiredRuntime") : Amended, Locale(1033),  Description("Used by the CLR shim to identify the version of runtime required by a specific application. This setting overrides the default which is stored in the registry.") : Amended, Database("NetFrameworkv1"), InternalName("requiredRuntime")  ,XML_ScopedByElement  ]
class requiredRuntime : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033)]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("runtime", NOFAIL)

//**************************************************************************
//* Class: runtime
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("runtime") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("runtime") ,NonContained ,XML_ScopedByElement  ]
class runtime : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("runtimeToassemblyBindingAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class runtimeToassemblyBindingAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] runtime ref Parent;
[read, key, Cols("version")] assemblyBinding ref Child;
};

#pragma deleteclass ("runtimeTogcConcurrentAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class runtimeTogcConcurrentAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] runtime ref Parent;
[read, key, Cols("version")] gcConcurrent ref Child;
};

#pragma deleteclass ("runtimeTodeveloperSettingsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class runtimeTodeveloperSettingsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] runtime ref Parent;
[read, key, Cols("version")] developerSettings ref Child;
};

#pragma deleteclass ("section", NOFAIL)

//**************************************************************************
//* Class: section
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("section") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("section")    ]
class section : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"section","remove","clear"}: Amended] sint32 Directive;
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("allowDefinition"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"Everywhere","MachineOnly","MachineToApplication"}: Amended] sint32 allowDefinition=1;
[DisplayName("allowLocation"): Amended, Description(""):Amended, Locale(1033)]Boolean allowLocation=1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionGroup", NOFAIL)

//**************************************************************************
//* Class: sectionGroup
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionGroup") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionGroup")  ,XML_ScopedByElement  ]
class sectionGroup : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionGroupTosectionGroup2Association", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class sectionGroupTosectionGroup2Association : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name")] sectionGroup ref Parent;
[read, key, Cols("groupName1")] sectionGroup2 ref Child;
};

#pragma deleteclass ("sectionGroupTosectionInGroupAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class sectionGroupTosectionInGroupAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name")] sectionGroup ref Parent;
[read, key, Cols("groupName")] sectionInGroup ref Child;
};

#pragma deleteclass ("sectionGroup2", NOFAIL)

//**************************************************************************
//* Class: sectionGroup2
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionGroup2") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionGroup2")  ,XML_ScopedByElement  ]
class sectionGroup2 : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[DisplayName("groupName1"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName1;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionGroup2TosectionGroup3Association", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class sectionGroup2TosectionGroup3Association : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name groupName1")] sectionGroup2 ref Parent;
[read, key, Cols("groupName2 groupName2")] sectionGroup3 ref Child;
};

#pragma deleteclass ("sectionGroup2TosectionInGroup2Association", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class sectionGroup2TosectionInGroup2Association : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name groupName1")] sectionGroup2 ref Parent;
[read, key, Cols("groupName2 groupName1")] sectionInGroup2 ref Child;
};

#pragma deleteclass ("sectionGroup3", NOFAIL)

//**************************************************************************
//* Class: sectionGroup3
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionGroup3") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionGroup3")  ,XML_ScopedByElement  ]
class sectionGroup3 : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[DisplayName("groupName1"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName1;
[DisplayName("groupName2"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName2;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionGroup3TosectionInGroup3Association", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class sectionGroup3TosectionInGroup3Association : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("name groupName1 groupName2")] sectionGroup3 ref Parent;
[read, key, Cols("groupName3 groupName2 groupName1")] sectionInGroup3 ref Child;
};

#pragma deleteclass ("sectionInGroup", NOFAIL)

//**************************************************************************
//* Class: sectionInGroup
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionInGroup") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionInGroup")  ,XML_ScopedByElement ,XML_InstanceElementName ("section") ]
class sectionInGroup : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("allowDefinition"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"Everywhere","MachineOnly","MachineToApplication"}: Amended] sint32 allowDefinition=1;
[DisplayName("allowLocation"): Amended, Description(""):Amended, Locale(1033)]Boolean allowLocation=1;
[DisplayName("groupName"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionInGroup2", NOFAIL)

//**************************************************************************
//* Class: sectionInGroup2
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionInGroup2") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionInGroup2")  ,XML_ScopedByElement ,XML_InstanceElementName ("section") ]
class sectionInGroup2 : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("allowDefinition"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"Everywhere","MachineOnly","MachineToApplication"}: Amended] sint32 allowDefinition=1;
[DisplayName("allowLocation"): Amended, Description(""):Amended, Locale(1033)]Boolean allowLocation=1;
[DisplayName("groupName1"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName1;
[DisplayName("groupName2"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName2;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sectionInGroup3", NOFAIL)

//**************************************************************************
//* Class: sectionInGroup3
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sectionInGroup3") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sectionInGroup3")  ,XML_ScopedByElement ,XML_InstanceElementName ("section") ]
class sectionInGroup3 : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("allowDefinition"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3"}, Values {"Everywhere","MachineOnly","MachineToApplication"}: Amended] sint32 allowDefinition=1;
[DisplayName("allowLocation"): Amended, Description(""):Amended, Locale(1033)]Boolean allowLocation=1;
[DisplayName("groupName1"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName1;
[DisplayName("groupName2"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName2;
[DisplayName("groupName3"): Amended, Description(""):Amended, Locale(1033),key,Required]string groupName3;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("security", NOFAIL)

//**************************************************************************
//* Class: security
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("security") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("security")  ,XML_ScopedByElement  ]
class security : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("securityTopolicyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class securityTopolicyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] security ref Parent;
[read, key, Cols("")] policy ref Child;
};

#pragma deleteclass ("SecurityClasses", NOFAIL)

//**************************************************************************
//* Class: SecurityClasses
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("SecurityClasses") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("securityClasses")  ,XML_ScopedByElement ,XML_InstanceElementName ("SecurityClass") ]
class SecurityClasses : NetConfigurationClass
{
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("Description"): Amended, Description(""):Amended, Locale(1033)]string Description;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("securityPolicy", NOFAIL)

//**************************************************************************
//* Class: securityPolicy
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("securityPolicy") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("securityPolicy")  ,XML_ScopedByElement ,XML_InstanceElementName ("trustLevel") ]
class securityPolicy : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("policyFile"): Amended, Description(""):Amended, Locale(1033)]string policyFile="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverFormatter", NOFAIL)

//**************************************************************************
//* Class: serverFormatter
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverFormatter") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverFormatter")  ,XML_ScopedByElement ,XML_InstanceElementName ("formatter") ]
class serverFormatter : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("reference"): Amended, Description(""):Amended, Locale(1033),key,Required]string reference;
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("channelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverFormatterTemplate", NOFAIL)

//**************************************************************************
//* Class: serverFormatterTemplate
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverFormatterTemplate") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverFormatterTemplate")  ,XML_ScopedByElement ,XML_InstanceElementName ("formatter") ]
class serverFormatterTemplate : NetConfigurationClass
{
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]string id;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("includeversions"): Amended, Description(""):Amended, Locale(1033)]Boolean includeversions=0;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverProvider", NOFAIL)

//**************************************************************************
//* Class: serverProvider
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverProvider") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverProvider")  ,XML_ScopedByElement ,XML_InstanceElementName ("provider") ]
class serverProvider : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("reference"): Amended, Description(""):Amended, Locale(1033),key,Required]string reference;
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("channelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverProviders", NOFAIL)

//**************************************************************************
//* Class: serverProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverProviders")  ,XML_ScopedByElement  ]
class serverProviders : NetConfigurationClass
{
[DisplayName("channelType"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelType="";
[DisplayName("port"): Amended, Description(""):Amended, Locale(1033),key,Required]string port="";
[DisplayName("channelReference"): Amended, Description(""):Amended, Locale(1033),key,Required]string channelReference="";
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverProvidersToserverFormatterAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serverProvidersToserverFormatterAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version channelType port channelReference")] serverProviders ref Parent;
[read, key, Cols("version channelType port channelReference")] serverFormatter ref Child;
};

#pragma deleteclass ("serverProvidersToserverProviderAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serverProvidersToserverProviderAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version channelType port channelReference")] serverProviders ref Parent;
[read, key, Cols("version channelType port channelReference")] serverProvider ref Child;
};

#pragma deleteclass ("serverProviderTemplate", NOFAIL)

//**************************************************************************
//* Class: serverProviderTemplate
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverProviderTemplate") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverProviderTemplate")  ,XML_ScopedByElement ,XML_InstanceElementName ("provider") ]
class serverProviderTemplate : NetConfigurationClass
{
[DisplayName("id"): Amended, Description(""):Amended, Locale(1033),key,Required]string id;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverProviderTemplates", NOFAIL)

//**************************************************************************
//* Class: serverProviderTemplates
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serverProviderTemplates") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serverProviderTemplates")  ,XML_ScopedByElement ,XML_InstanceElementName ("serverProviders") ]
class serverProviderTemplates : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serverProviderTemplatesToserverProviderTemplateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serverProviderTemplatesToserverProviderTemplateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] serverProviderTemplates ref Parent;
[read, key, Cols("version")] serverProviderTemplate ref Child;
};

#pragma deleteclass ("serverProviderTemplatesToserverFormatterTemplateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serverProviderTemplatesToserverFormatterTemplateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] serverProviderTemplates ref Parent;
[read, key, Cols("version")] serverFormatterTemplate ref Child;
};

#pragma deleteclass ("service", NOFAIL)

//**************************************************************************
//* Class: service
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("service") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("service")  ,XML_ScopedByElement  ]
class service : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serviceToservice_wellknownAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serviceToservice_wellknownAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] service ref Parent;
[read, key, Cols("version")] service_wellknown ref Child;
};

#pragma deleteclass ("serviceToservice_activatedAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class serviceToservice_activatedAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] service ref Parent;
[read, key, Cols("version")] service_activated ref Child;
};

#pragma deleteclass ("service_activated", NOFAIL)

//**************************************************************************
//* Class: service_activated
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("service_activated") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("service_activated")  ,XML_ScopedByElement ,XML_InstanceElementName ("activated") ]
class service_activated : NetConfigurationClass
{
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("service_activatedToservice_activated_lifetimeAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class service_activatedToservice_activated_lifetimeAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version type")] service_activated ref Parent;
[read, key, Cols("version type")] service_activated_lifetime ref Child;
};

#pragma deleteclass ("service_activated_lifetime", NOFAIL)

//**************************************************************************
//* Class: service_activated_lifetime
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("service_activated_lifetime") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("service_activated_lifetime")  ,XML_ScopedByElement ,XML_InstanceElementName ("lifetime") ]
class service_activated_lifetime : NetConfigurationClass
{
[DisplayName("leaseTime"): Amended, Description(""):Amended, Locale(1033)]string leaseTime="";
[DisplayName("RenewOnCallTime"): Amended, Description(""):Amended, Locale(1033)]string RenewOnCallTime="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("service_wellknown", NOFAIL)

//**************************************************************************
//* Class: service_wellknown
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("service_wellknown") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("service_wellknown")  ,XML_ScopedByElement ,XML_InstanceElementName ("wellknown") ]
class service_wellknown : NetConfigurationClass
{
[DisplayName("mode"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2"}, Values {"singleton","singlecall"}: Amended] sint32 mode;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type;
[DisplayName("objectUri"): Amended, Description(""):Amended, Locale(1033),key,Required]string objectUri;
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("serviceDescriptionFormatExtensionTypes", NOFAIL)

//**************************************************************************
//* Class: serviceDescriptionFormatExtensionTypes
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("serviceDescriptionFormatExtensionTypes") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("serviceDescriptionFormatExtensionTypes")    ]
class serviceDescriptionFormatExtensionTypes : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[DisplayName("primary"): Amended, Description(""):Amended, Locale(1033)]Boolean primary=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("sessionState", NOFAIL)

//**************************************************************************
//* Class: sessionState
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("sessionState") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("sessionState")  ,XML_ScopedByElement  ]
class sessionState : NetConfigurationClass
{
[DisplayName("mode"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2","3","4"}, Values {"off","InProc","StateServer","SqlServer"}: Amended] sint32 mode=2;
[DisplayName("stateConnectionString"): Amended, Description(""):Amended, Locale(1033)]string stateConnectionString="";
[DisplayName("sqlConnectionString"): Amended, Description(""):Amended, Locale(1033)]string sqlConnectionString="";
[DisplayName("cookieless"): Amended, Description(""):Amended, Locale(1033)]Boolean cookieless=0;
[DisplayName("timeout"): Amended, Description(""):Amended, Locale(1033)]uint32 timeout=20;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("soapExtensionImporterTypes", NOFAIL)

//**************************************************************************
//* Class: soapExtensionImporterTypes
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("soapExtensionImporterTypes") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("soapExtensionImporterTypes")    ]
class soapExtensionImporterTypes : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[DisplayName("primary"): Amended, Description(""):Amended, Locale(1033)]Boolean primary=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("soapExtensionReflectorTypes", NOFAIL)

//**************************************************************************
//* Class: soapExtensionReflectorTypes
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("soapExtensionReflectorTypes") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("soapExtensionReflectorTypes")    ]
class soapExtensionReflectorTypes : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[DisplayName("primary"): Amended, Description(""):Amended, Locale(1033)]Boolean primary=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("soapExtensionTypes", NOFAIL)

//**************************************************************************
//* Class: soapExtensionTypes
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("soapExtensionTypes") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("soapExtensionTypes")    ]
class soapExtensionTypes : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[DisplayName("primary"): Amended, Description(""):Amended, Locale(1033)]Boolean primary=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("startup", NOFAIL)

//**************************************************************************
//* Class: startup
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("startup") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("startup") ,NonContained ,XML_ScopedByElement  ]
class startup : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("startupTorequiredRuntimeAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class startupTorequiredRuntimeAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] startup ref Parent;
[read, key, Cols("")] requiredRuntime ref Child;
};

#pragma deleteclass ("switches", NOFAIL)

//**************************************************************************
//* Class: switches
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("switches") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("switches")    ]
class switches : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("value"): Amended, Description(""):Amended, Locale(1033)]string value;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("system_diagnostics", NOFAIL)

//**************************************************************************
//* Class: system_diagnostics
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("system_diagnostics") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("system_diagnostics") ,NonContained ,XML_ScopedByElement ,XML_InstanceElementName ("system.diagnostics") ]
class system_diagnostics : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("system_diagnosticsTotraceAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_diagnosticsTotraceAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_diagnostics ref Parent;
[read, key, Cols("")] trace ref Child;
};

#pragma deleteclass ("system_diagnosticsTolistenersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_diagnosticsTolistenersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_diagnostics ref Parent;
[read, key, Cols("")] listeners ref Child;
};

#pragma deleteclass ("system_diagnosticsToassertAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_diagnosticsToassertAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_diagnostics ref Parent;
[read, key, Cols("")] assert ref Child;
};

#pragma deleteclass ("system_diagnosticsToswitchesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_diagnosticsToswitchesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_diagnostics ref Parent;
[read, key, Cols("")] switches ref Child;
};

#pragma deleteclass ("system_net", NOFAIL)

//**************************************************************************
//* Class: system_net
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("system_net") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("system_net") ,NonContained ,XML_ScopedByElement ,XML_InstanceElementName ("system.net") ]
class system_net : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("system_netTodefaultProxyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_netTodefaultProxyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_net ref Parent;
[read, key, Cols("")] defaultProxy ref Child;
};

#pragma deleteclass ("system_netToauthenticationModulesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_netToauthenticationModulesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_net ref Parent;
[read, key, Cols("")] authenticationModules ref Child;
};

#pragma deleteclass ("system_netTowebRequestModulesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_netTowebRequestModulesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_net ref Parent;
[read, key, Cols("")] webRequestModules ref Child;
};

#pragma deleteclass ("system_netToconnectionManagementAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_netToconnectionManagementAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_net ref Parent;
[read, key, Cols("")] connectionManagement ref Child;
};

#pragma deleteclass ("system_runtime_remoting", NOFAIL)

//**************************************************************************
//* Class: system_runtime_remoting
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("system_runtime_remoting") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("system_runtime_remoting") ,NonContained ,XML_ScopedByElement ,XML_InstanceElementName ("system.runtime.remoting") ]
class system_runtime_remoting : NetConfigurationClass
{
[DisplayName("version"): Amended, Description(""):Amended, Locale(1033),key,Required]string version="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("system_runtime_remotingToapplicationAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_runtime_remotingToapplicationAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] system_runtime_remoting ref Parent;
[read, key, Cols("version")] application ref Child;
};

#pragma deleteclass ("system_runtime_remotingTochanneltemplateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_runtime_remotingTochanneltemplateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] system_runtime_remoting ref Parent;
[read, key, Cols("version")] channeltemplate ref Child;
};

#pragma deleteclass ("system_runtime_remotingTochannelSinkProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_runtime_remotingTochannelSinkProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("version")] system_runtime_remoting ref Parent;
[read, key, Cols("version")] channelSinkProviders ref Child;
};

#pragma deleteclass ("system_web", NOFAIL)

//**************************************************************************
//* Class: system_web
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("system_web") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("system_web") ,NonContained ,XML_ScopedByElement ,XML_InstanceElementName ("system.web") ]
class system_web : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("system_webToclientTargetAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToclientTargetAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] clientTarget ref Child;
};

#pragma deleteclass ("system_webTohttpRuntimeAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTohttpRuntimeAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] httpRuntime ref Child;
};

#pragma deleteclass ("system_webTopagesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTopagesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] pages ref Child;
};

#pragma deleteclass ("system_webTocustomErrorsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTocustomErrorsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] customErrors ref Child;
};

#pragma deleteclass ("system_webToiisFilterAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToiisFilterAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] iisFilter ref Child;
};

#pragma deleteclass ("system_webToprocessModelAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToprocessModelAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] processModel ref Child;
};

#pragma deleteclass ("system_webToauthenticationAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToauthenticationAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] authentication ref Child;
};

#pragma deleteclass ("system_webToweb_traceAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToweb_traceAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] web_trace ref Child;
};

#pragma deleteclass ("system_webTocompilationAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTocompilationAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] compilation ref Child;
};

#pragma deleteclass ("system_webToglobalizationAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToglobalizationAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] globalization ref Child;
};

#pragma deleteclass ("system_webTosessionStateAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTosessionStateAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] sessionState ref Child;
};

#pragma deleteclass ("system_webTohttpHandlersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTohttpHandlersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] httpHandlers ref Child;
};

#pragma deleteclass ("system_webTohttpModulesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTohttpModulesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] httpModules ref Child;
};

#pragma deleteclass ("system_webTosecurityPolicyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTosecurityPolicyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] securityPolicy ref Child;
};

#pragma deleteclass ("system_webTobrowserCapsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTobrowserCapsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] browserCaps ref Child;
};

#pragma deleteclass ("system_webToidentityAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToidentityAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] identity ref Child;
};

#pragma deleteclass ("system_webTowebControlsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTowebControlsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] webControls ref Child;
};

#pragma deleteclass ("system_webTotrustAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTotrustAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] trust ref Child;
};

#pragma deleteclass ("system_webTowebServicesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTowebServicesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] webServices ref Child;
};

#pragma deleteclass ("system_webToauthorizationAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webToauthorizationAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] authorization ref Child;
};

#pragma deleteclass ("system_webTomachineKeyAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTomachineKeyAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] machineKey ref Child;
};

#pragma deleteclass ("system_webTodeviceInfoProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTodeviceInfoProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] deviceInfoProviders ref Child;
};

#pragma deleteclass ("system_webTomobileControlsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTomobileControlsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] mobileControls ref Child;
};

#pragma deleteclass ("system_webTorenderingProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTorenderingProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] renderingProviders ref Child;
};

#pragma deleteclass ("system_webTodeviceFiltersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTodeviceFiltersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] deviceFilters ref Child;
};

#pragma deleteclass ("system_webTotransportProvidersAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class system_webTotransportProvidersAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] system_web ref Parent;
[read, key, Cols("")] transportProviders ref Child;
};

#pragma deleteclass ("system_windows_forms", NOFAIL)

//**************************************************************************
//* Class: system_windows_forms
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("system_windows_forms") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("system_windows_forms") ,NonContained ,XML_ScopedByElement ,XML_InstanceElementName ("system.windows.forms") ]
class system_windows_forms : NetConfigurationClass
{
[DisplayName("jitDebugging"): Amended, Description(""):Amended, Locale(1033),key,Required]Boolean jitDebugging=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("trace", NOFAIL)

//**************************************************************************
//* Class: trace
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("trace") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("trace")  ,XML_ScopedByElement  ]
class trace : NetConfigurationClass
{
[DisplayName("autoflush"): Amended, Description(""):Amended, Locale(1033)]Boolean autoflush;
[DisplayName("indentsize"): Amended, Description(""):Amended, Locale(1033)]uint32 indentsize;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("transportProviders", NOFAIL)

//**************************************************************************
//* Class: transportProviders
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("transportProviders") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("TransportProviders")  ,XML_ScopedByElement ,XML_InstanceElementName ("transportProvider") ]
class transportProviders : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033)]string type;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("trust", NOFAIL)

//**************************************************************************
//* Class: trust
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("trust") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("trust")  ,XML_ScopedByElement  ]
class trust : NetConfigurationClass
{
[DisplayName("level"): Amended, Description(""):Amended, Locale(1033)]string level;
[DisplayName("originUrl"): Amended, Description(""):Amended, Locale(1033)]string originUrl;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("URI", NOFAIL)

//**************************************************************************
//* Class: URI
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("URI") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("URI")  ,XML_ScopedByElement  ]
class URI : NetConfigurationClass
{
[DisplayName("uri"): Amended, Description(""):Amended, Locale(1033),key,Required]string uri;
[DisplayName("Name"): Amended, Description(""):Amended, Locale(1033),key,Required]string Name;
[DisplayName("PolicyVersion"): Amended, Description(""):Amended, Locale(1033),key,Required]string PolicyVersion;
[DisplayName("className"): Amended, Description(""):Amended, Locale(1033),key,Required]string className;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("user", NOFAIL)

//**************************************************************************
//* Class: user
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("user") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("user")  ,XML_ScopedByElement  ]
class user : NetConfigurationClass
{
[DisplayName("name"): Amended, Description(""):Amended, Locale(1033),key,Required]string name="";
[DisplayName("password"): Amended, Description(""):Amended, Locale(1033)]string password="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("iisFilter", NOFAIL)

//**************************************************************************
//* Class: iisFilter
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("iisFilter") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("web_iisFilter")  ,XML_ScopedByElement  ]
class iisFilter : NetConfigurationClass
{
[DisplayName("enableCookielessSessions"): Amended, Description(""):Amended, Locale(1033)]Boolean enableCookielessSessions;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("web_trace", NOFAIL)

//**************************************************************************
//* Class: web_trace
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("web_trace") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("web_trace")  ,XML_ScopedByElement ,XML_InstanceElementName ("trace") ]
class web_trace : NetConfigurationClass
{
[DisplayName("enabled"): Amended, Description(""):Amended, Locale(1033)]Boolean enabled=0;
[DisplayName("requestLimit"): Amended, Description(""):Amended, Locale(1033)]uint32 requestLimit=10;
[DisplayName("pageOutput"): Amended, Description(""):Amended, Locale(1033)]Boolean pageOutput=0;
[DisplayName("traceMode"): Amended, Description(""):Amended, Locale(1033), ValueMap {"1","2"}, Values {"SortByTime","SortByCategory"}: Amended] sint32 traceMode=1;
[DisplayName("localOnly"): Amended, Description(""):Amended, Locale(1033)]Boolean localOnly=0;
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("webControls", NOFAIL)

//**************************************************************************
//* Class: webControls
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("webControls") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("webControls")  ,XML_ScopedByElement  ]
class webControls : NetConfigurationClass
{
[DisplayName("clientScriptsLocation"): Amended, Description(""):Amended, Locale(1033)]string clientScriptsLocation="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("webRequestModules", NOFAIL)

//**************************************************************************
//* Class: webRequestModules
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("webRequestModules") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("webRequestModule")    ]
class webRequestModules : NetConfigurationClass
{
[DisplayName("Directive"): Amended, Description(""):Amended, Locale(1033),key,Required,XML_IsDirective, ValueMap {"0","1","2"}, Values {"add","remove","clear"}: Amended] sint32 Directive;
[DisplayName("prefix"): Amended, Description(""):Amended, Locale(1033),key,Required]string prefix="";
[DisplayName("type"): Amended, Description(""):Amended, Locale(1033),key,Required]string type="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("webServices", NOFAIL)

//**************************************************************************
//* Class: webServices
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("webServices") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("webServices")  ,XML_ScopedByElement  ]
class webServices : NetConfigurationClass
{
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("webServicesTosoapExtensionTypesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesTosoapExtensionTypesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] soapExtensionTypes ref Child;
};

#pragma deleteclass ("webServicesToprotocolsAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesToprotocolsAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] protocols ref Child;
};

#pragma deleteclass ("webServicesToserviceDescriptionFormatExtensionTypesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesToserviceDescriptionFormatExtensionTypesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] serviceDescriptionFormatExtensionTypes ref Child;
};

#pragma deleteclass ("webServicesTosoapExtensionImporterTypesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesTosoapExtensionImporterTypesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] soapExtensionImporterTypes ref Child;
};

#pragma deleteclass ("webServicesTowsdlHelpGeneratorAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesTowsdlHelpGeneratorAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] wsdlHelpGenerator ref Child;
};

#pragma deleteclass ("webServicesTosoapExtensionReflectorTypesAssociation", NOFAIL)

[Association, Aggregation, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("catalog")]
class webServicesTosoapExtensionReflectorTypesAssociation : NetContainmentAssociation
{
[read, key, Aggregate, PK, Cols("")] webServices ref Parent;
[read, key, Cols("")] soapExtensionReflectorTypes ref Child;
};

#pragma deleteclass ("wsdlHelpGenerator", NOFAIL)

//**************************************************************************
//* Class: wsdlHelpGenerator
//**************************************************************************

[Dynamic: ToInstance, Provider("NetFrameworkv1Provider"), DisplayName("wsdlHelpGenerator") : Amended, Locale(1033),  Description("") : Amended, Database("NetFrameworkv1"), InternalName("wsdlHelpGenerator")  ,XML_ScopedByElement  ]
class wsdlHelpGenerator : NetConfigurationClass
{
[DisplayName("href"): Amended, Description(""):Amended, Locale(1033)]string href="";
[key, DisplayName("Selector"): Amended, Locale(1033), Description("Specifies configuration store"):Amended] string Selector="config://localhost";
};

#pragma deleteclass ("locationToapplicationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToapplicationAssociation : LocationConfiguration
{
location ref Node;
application ref ConfigClass;
};

#pragma deleteclass ("locationToappSettingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToappSettingsAssociation : LocationConfiguration
{
location ref Node;
appSettings ref ConfigClass;
};

#pragma deleteclass ("locationToassembliesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToassembliesAssociation : LocationConfiguration
{
location ref Node;
assemblies ref ConfigClass;
};

#pragma deleteclass ("locationToassemblyBindingAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToassemblyBindingAssociation : LocationConfiguration
{
location ref Node;
assemblyBinding ref ConfigClass;
};

#pragma deleteclass ("locationToassertAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToassertAssociation : LocationConfiguration
{
location ref Node;
assert ref ConfigClass;
};

#pragma deleteclass ("locationToauthenticationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToauthenticationAssociation : LocationConfiguration
{
location ref Node;
authentication ref ConfigClass;
};

#pragma deleteclass ("locationToauthenticationModulesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToauthenticationModulesAssociation : LocationConfiguration
{
location ref Node;
authenticationModules ref ConfigClass;
};

#pragma deleteclass ("locationToauthorizationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToauthorizationAssociation : LocationConfiguration
{
location ref Node;
authorization ref ConfigClass;
};

#pragma deleteclass ("locationTobindingRedirectAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTobindingRedirectAssociation : LocationConfiguration
{
location ref Node;
bindingRedirect ref ConfigClass;
};

#pragma deleteclass ("locationTobrowserCapsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTobrowserCapsAssociation : LocationConfiguration
{
location ref Node;
browserCaps ref ConfigClass;
};

#pragma deleteclass ("locationTobypassListAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTobypassListAssociation : LocationConfiguration
{
location ref Node;
bypassList ref ConfigClass;
};

#pragma deleteclass ("locationTochannelAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTochannelAssociation : LocationConfiguration
{
location ref Node;
channel ref ConfigClass;
};

#pragma deleteclass ("locationTochannelSinkProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTochannelSinkProvidersAssociation : LocationConfiguration
{
location ref Node;
channelSinkProviders ref ConfigClass;
};

#pragma deleteclass ("locationTochanneltemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTochanneltemplateAssociation : LocationConfiguration
{
location ref Node;
channeltemplate ref ConfigClass;
};

#pragma deleteclass ("locationToclientAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientAssociation : LocationConfiguration
{
location ref Node;
client ref ConfigClass;
};

#pragma deleteclass ("locationToclient_activatedAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclient_activatedAssociation : LocationConfiguration
{
location ref Node;
client_activated ref ConfigClass;
};

#pragma deleteclass ("locationToclient_wellknownAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclient_wellknownAssociation : LocationConfiguration
{
location ref Node;
client_wellknown ref ConfigClass;
};

#pragma deleteclass ("locationToclientFormatterAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientFormatterAssociation : LocationConfiguration
{
location ref Node;
clientFormatter ref ConfigClass;
};

#pragma deleteclass ("locationToclientFormatterTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientFormatterTemplateAssociation : LocationConfiguration
{
location ref Node;
clientFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("locationToclientProviderAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientProviderAssociation : LocationConfiguration
{
location ref Node;
clientProvider ref ConfigClass;
};

#pragma deleteclass ("locationToclientProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientProvidersAssociation : LocationConfiguration
{
location ref Node;
clientProviders ref ConfigClass;
};

#pragma deleteclass ("locationToclientProviderTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientProviderTemplateAssociation : LocationConfiguration
{
location ref Node;
clientProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("locationToclientProviderTemplatesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientProviderTemplatesAssociation : LocationConfiguration
{
location ref Node;
clientProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("locationToclientTargetAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToclientTargetAssociation : LocationConfiguration
{
location ref Node;
clientTarget ref ConfigClass;
};

#pragma deleteclass ("locationTocodeBaseAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTocodeBaseAssociation : LocationConfiguration
{
location ref Node;
codeBase ref ConfigClass;
};

#pragma deleteclass ("locationToCodeGroupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToCodeGroupAssociation : LocationConfiguration
{
location ref Node;
CodeGroup ref ConfigClass;
};

#pragma deleteclass ("locationTocompilationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTocompilationAssociation : LocationConfiguration
{
location ref Node;
compilation ref ConfigClass;
};

#pragma deleteclass ("locationTocompilersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTocompilersAssociation : LocationConfiguration
{
location ref Node;
compilers ref ConfigClass;
};

#pragma deleteclass ("locationToconfigSectionsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToconfigSectionsAssociation : LocationConfiguration
{
location ref Node;
configSections ref ConfigClass;
};

#pragma deleteclass ("locationToConnectAccessAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToConnectAccessAssociation : LocationConfiguration
{
location ref Node;
ConnectAccess ref ConfigClass;
};

#pragma deleteclass ("locationToconnectionManagementAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToconnectionManagementAssociation : LocationConfiguration
{
location ref Node;
connectionManagement ref ConfigClass;
};

#pragma deleteclass ("locationTocredentialsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTocredentialsAssociation : LocationConfiguration
{
location ref Node;
credentials ref ConfigClass;
};

#pragma deleteclass ("locationTocustomErrorsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTocustomErrorsAssociation : LocationConfiguration
{
location ref Node;
customErrors ref ConfigClass;
};

#pragma deleteclass ("locationTodefaultProxyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTodefaultProxyAssociation : LocationConfiguration
{
location ref Node;
defaultProxy ref ConfigClass;
};

#pragma deleteclass ("locationTodependentAssemblyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTodependentAssemblyAssociation : LocationConfiguration
{
location ref Node;
dependentAssembly ref ConfigClass;
};

#pragma deleteclass ("locationTodeveloperSettingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTodeveloperSettingsAssociation : LocationConfiguration
{
location ref Node;
developerSettings ref ConfigClass;
};

#pragma deleteclass ("locationTodeviceInfoProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTodeviceInfoProvidersAssociation : LocationConfiguration
{
location ref Node;
deviceInfoProviders ref ConfigClass;
};

#pragma deleteclass ("locationToEndPointAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToEndPointAssociation : LocationConfiguration
{
location ref Node;
EndPoint ref ConfigClass;
};

#pragma deleteclass ("locationToerrorAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToerrorAssociation : LocationConfiguration
{
location ref Node;
error ref ConfigClass;
};

#pragma deleteclass ("locationToformsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToformsAssociation : LocationConfiguration
{
location ref Node;
forms ref ConfigClass;
};

#pragma deleteclass ("locationToFullTrustAssembliesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToFullTrustAssembliesAssociation : LocationConfiguration
{
location ref Node;
FullTrustAssemblies ref ConfigClass;
};

#pragma deleteclass ("locationTogcConcurrentAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTogcConcurrentAssociation : LocationConfiguration
{
location ref Node;
gcConcurrent ref ConfigClass;
};

#pragma deleteclass ("locationToglobalizationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToglobalizationAssociation : LocationConfiguration
{
location ref Node;
globalization ref ConfigClass;
};

#pragma deleteclass ("locationTohttpHandlersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTohttpHandlersAssociation : LocationConfiguration
{
location ref Node;
httpHandlers ref ConfigClass;
};

#pragma deleteclass ("locationTohttpModulesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTohttpModulesAssociation : LocationConfiguration
{
location ref Node;
httpModules ref ConfigClass;
};

#pragma deleteclass ("locationTohttpRuntimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTohttpRuntimeAssociation : LocationConfiguration
{
location ref Node;
httpRuntime ref ConfigClass;
};

#pragma deleteclass ("locationToidentityAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToidentityAssociation : LocationConfiguration
{
location ref Node;
identity ref ConfigClass;
};

#pragma deleteclass ("locationTolifetimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTolifetimeAssociation : LocationConfiguration
{
location ref Node;
lifetime ref ConfigClass;
};

#pragma deleteclass ("locationTolistenersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTolistenersAssociation : LocationConfiguration
{
location ref Node;
listeners ref ConfigClass;
};

#pragma deleteclass ("locationTomachineKeyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTomachineKeyAssociation : LocationConfiguration
{
location ref Node;
machineKey ref ConfigClass;
};

#pragma deleteclass ("locationTomobileControlBindingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTomobileControlBindingsAssociation : LocationConfiguration
{
location ref Node;
mobileControlBindings ref ConfigClass;
};

#pragma deleteclass ("locationTomobileControlsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTomobileControlsAssociation : LocationConfiguration
{
location ref Node;
mobileControls ref ConfigClass;
};

#pragma deleteclass ("locationTodeviceFiltersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTodeviceFiltersAssociation : LocationConfiguration
{
location ref Node;
deviceFilters ref ConfigClass;
};

#pragma deleteclass ("locationTomobileDevicesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTomobileDevicesAssociation : LocationConfiguration
{
location ref Node;
mobileDevices ref ConfigClass;
};

#pragma deleteclass ("locationTomscorlibAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTomscorlibAssociation : LocationConfiguration
{
location ref Node;
mscorlib ref ConfigClass;
};

#pragma deleteclass ("locationToNamedPermissionSetsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToNamedPermissionSetsAssociation : LocationConfiguration
{
location ref Node;
NamedPermissionSets ref ConfigClass;
};

#pragma deleteclass ("locationTopagesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTopagesAssociation : LocationConfiguration
{
location ref Node;
pages ref ConfigClass;
};

#pragma deleteclass ("locationTopassportAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTopassportAssociation : LocationConfiguration
{
location ref Node;
passport ref ConfigClass;
};

#pragma deleteclass ("locationToPermissionAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToPermissionAssociation : LocationConfiguration
{
location ref Node;
Permission ref ConfigClass;
};

#pragma deleteclass ("locationTopolicyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTopolicyAssociation : LocationConfiguration
{
location ref Node;
policy ref ConfigClass;
};

#pragma deleteclass ("locationToprobingAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToprobingAssociation : LocationConfiguration
{
location ref Node;
probing ref ConfigClass;
};

#pragma deleteclass ("locationToprocessModelAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToprocessModelAssociation : LocationConfiguration
{
location ref Node;
processModel ref ConfigClass;
};

#pragma deleteclass ("locationToprotocolsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToprotocolsAssociation : LocationConfiguration
{
location ref Node;
protocols ref ConfigClass;
};

#pragma deleteclass ("locationToproxyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToproxyAssociation : LocationConfiguration
{
location ref Node;
proxy ref ConfigClass;
};

#pragma deleteclass ("locationTopublisherPolicyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTopublisherPolicyAssociation : LocationConfiguration
{
location ref Node;
publisherPolicy ref ConfigClass;
};

#pragma deleteclass ("locationTorenderingProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTorenderingProvidersAssociation : LocationConfiguration
{
location ref Node;
renderingProviders ref ConfigClass;
};

#pragma deleteclass ("locationTorequiredRuntimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTorequiredRuntimeAssociation : LocationConfiguration
{
location ref Node;
requiredRuntime ref ConfigClass;
};

#pragma deleteclass ("locationToruntimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToruntimeAssociation : LocationConfiguration
{
location ref Node;
runtime ref ConfigClass;
};

#pragma deleteclass ("locationTosectionAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionAssociation : LocationConfiguration
{
location ref Node;
section ref ConfigClass;
};

#pragma deleteclass ("locationTosectionGroupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionGroupAssociation : LocationConfiguration
{
location ref Node;
sectionGroup ref ConfigClass;
};

#pragma deleteclass ("locationTosectionGroup2Association", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionGroup2Association : LocationConfiguration
{
location ref Node;
sectionGroup2 ref ConfigClass;
};

#pragma deleteclass ("locationTosectionGroup3Association", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionGroup3Association : LocationConfiguration
{
location ref Node;
sectionGroup3 ref ConfigClass;
};

#pragma deleteclass ("locationTosectionInGroupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionInGroupAssociation : LocationConfiguration
{
location ref Node;
sectionInGroup ref ConfigClass;
};

#pragma deleteclass ("locationTosectionInGroup2Association", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionInGroup2Association : LocationConfiguration
{
location ref Node;
sectionInGroup2 ref ConfigClass;
};

#pragma deleteclass ("locationTosectionInGroup3Association", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosectionInGroup3Association : LocationConfiguration
{
location ref Node;
sectionInGroup3 ref ConfigClass;
};

#pragma deleteclass ("locationTosecurityAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosecurityAssociation : LocationConfiguration
{
location ref Node;
security ref ConfigClass;
};

#pragma deleteclass ("locationToSecurityClassesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToSecurityClassesAssociation : LocationConfiguration
{
location ref Node;
SecurityClasses ref ConfigClass;
};

#pragma deleteclass ("locationTosecurityPolicyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosecurityPolicyAssociation : LocationConfiguration
{
location ref Node;
securityPolicy ref ConfigClass;
};

#pragma deleteclass ("locationToserverFormatterAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverFormatterAssociation : LocationConfiguration
{
location ref Node;
serverFormatter ref ConfigClass;
};

#pragma deleteclass ("locationToserverFormatterTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverFormatterTemplateAssociation : LocationConfiguration
{
location ref Node;
serverFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("locationToserverProviderAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverProviderAssociation : LocationConfiguration
{
location ref Node;
serverProvider ref ConfigClass;
};

#pragma deleteclass ("locationToserverProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverProvidersAssociation : LocationConfiguration
{
location ref Node;
serverProviders ref ConfigClass;
};

#pragma deleteclass ("locationToserverProviderTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverProviderTemplateAssociation : LocationConfiguration
{
location ref Node;
serverProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("locationToserverProviderTemplatesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserverProviderTemplatesAssociation : LocationConfiguration
{
location ref Node;
serverProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("locationToserviceAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserviceAssociation : LocationConfiguration
{
location ref Node;
service ref ConfigClass;
};

#pragma deleteclass ("locationToservice_activatedAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToservice_activatedAssociation : LocationConfiguration
{
location ref Node;
service_activated ref ConfigClass;
};

#pragma deleteclass ("locationToservice_activated_lifetimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToservice_activated_lifetimeAssociation : LocationConfiguration
{
location ref Node;
service_activated_lifetime ref ConfigClass;
};

#pragma deleteclass ("locationToservice_wellknownAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToservice_wellknownAssociation : LocationConfiguration
{
location ref Node;
service_wellknown ref ConfigClass;
};

#pragma deleteclass ("locationToserviceDescriptionFormatExtensionTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToserviceDescriptionFormatExtensionTypesAssociation : LocationConfiguration
{
location ref Node;
serviceDescriptionFormatExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("locationTosessionStateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosessionStateAssociation : LocationConfiguration
{
location ref Node;
sessionState ref ConfigClass;
};

#pragma deleteclass ("locationTosoapExtensionImporterTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosoapExtensionImporterTypesAssociation : LocationConfiguration
{
location ref Node;
soapExtensionImporterTypes ref ConfigClass;
};

#pragma deleteclass ("locationTosoapExtensionReflectorTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosoapExtensionReflectorTypesAssociation : LocationConfiguration
{
location ref Node;
soapExtensionReflectorTypes ref ConfigClass;
};

#pragma deleteclass ("locationTosoapExtensionTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosoapExtensionTypesAssociation : LocationConfiguration
{
location ref Node;
soapExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("locationTostartupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTostartupAssociation : LocationConfiguration
{
location ref Node;
startup ref ConfigClass;
};

#pragma deleteclass ("locationToswitchesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToswitchesAssociation : LocationConfiguration
{
location ref Node;
switches ref ConfigClass;
};

#pragma deleteclass ("locationTosystem_diagnosticsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosystem_diagnosticsAssociation : LocationConfiguration
{
location ref Node;
system_diagnostics ref ConfigClass;
};

#pragma deleteclass ("locationTosystem_netAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosystem_netAssociation : LocationConfiguration
{
location ref Node;
system_net ref ConfigClass;
};

#pragma deleteclass ("locationTosystem_runtime_remotingAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosystem_runtime_remotingAssociation : LocationConfiguration
{
location ref Node;
system_runtime_remoting ref ConfigClass;
};

#pragma deleteclass ("locationTosystem_webAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosystem_webAssociation : LocationConfiguration
{
location ref Node;
system_web ref ConfigClass;
};

#pragma deleteclass ("locationTosystem_windows_formsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTosystem_windows_formsAssociation : LocationConfiguration
{
location ref Node;
system_windows_forms ref ConfigClass;
};

#pragma deleteclass ("locationTotraceAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTotraceAssociation : LocationConfiguration
{
location ref Node;
trace ref ConfigClass;
};

#pragma deleteclass ("locationTotransportProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTotransportProvidersAssociation : LocationConfiguration
{
location ref Node;
transportProviders ref ConfigClass;
};

#pragma deleteclass ("locationTotrustAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTotrustAssociation : LocationConfiguration
{
location ref Node;
trust ref ConfigClass;
};

#pragma deleteclass ("locationToURIAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToURIAssociation : LocationConfiguration
{
location ref Node;
URI ref ConfigClass;
};

#pragma deleteclass ("locationTouserAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTouserAssociation : LocationConfiguration
{
location ref Node;
user ref ConfigClass;
};

#pragma deleteclass ("locationToiisFilterAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToiisFilterAssociation : LocationConfiguration
{
location ref Node;
iisFilter ref ConfigClass;
};

#pragma deleteclass ("locationToweb_traceAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationToweb_traceAssociation : LocationConfiguration
{
location ref Node;
web_trace ref ConfigClass;
};

#pragma deleteclass ("locationTowebControlsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTowebControlsAssociation : LocationConfiguration
{
location ref Node;
webControls ref ConfigClass;
};

#pragma deleteclass ("locationTowebRequestModulesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTowebRequestModulesAssociation : LocationConfiguration
{
location ref Node;
webRequestModules ref ConfigClass;
};

#pragma deleteclass ("locationTowebServicesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTowebServicesAssociation : LocationConfiguration
{
location ref Node;
webServices ref ConfigClass;
};

#pragma deleteclass ("locationTowsdlHelpGeneratorAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("location")]
class locationTowsdlHelpGeneratorAssociation : LocationConfiguration
{
location ref Node;
wsdlHelpGenerator ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToassembliesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToassembliesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
assemblies ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToassembliesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToassembliesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
assemblies ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthenticationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToauthenticationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
authentication ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthenticationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToauthenticationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
authentication ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthorizationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToauthorizationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
authorization ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthorizationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToauthorizationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
authorization ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTobrowserCapsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTobrowserCapsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
browserCaps ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTobrowserCapsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTobrowserCapsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
browserCaps ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochannelAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTochannelAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
channel ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochannelAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTochannelAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
channel ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
client ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
client ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclient_activatedAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclient_activatedAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
client_activated ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclient_activatedAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclient_activatedAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
client_activated ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientProviderAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientProvider ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientProviderAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientProvider ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientTargetAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientTargetAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientTarget ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientTargetAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientTargetAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientTarget ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclient_wellknownAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclient_wellknownAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
client_wellknown ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclient_wellknownAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclient_wellknownAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
client_wellknown ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocompilationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTocompilationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
compilation ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocompilationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTocompilationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
compilation ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocompilersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTocompilersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
compilers ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocompilersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTocompilersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
compilers ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToconfigSectionsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToconfigSectionsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
configSections ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToconfigSectionsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToconfigSectionsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
configSections ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocredentialsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTocredentialsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
credentials ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocredentialsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTocredentialsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
credentials ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocustomErrorsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTocustomErrorsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
customErrors ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTocustomErrorsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTocustomErrorsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
customErrors ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeveloperSettingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTodeveloperSettingsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
developerSettings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeveloperSettingsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTodeveloperSettingsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
developerSettings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToerrorAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToerrorAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
error ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToerrorAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToerrorAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
error ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToformsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToformsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
forms ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToformsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToformsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
forms ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToglobalizationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToglobalizationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
globalization ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToglobalizationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToglobalizationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
globalization ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTohttpHandlersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTohttpHandlersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
httpHandlers ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTohttpHandlersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTohttpHandlersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
httpHandlers ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTohttpRuntimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTohttpRuntimeAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
httpRuntime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTohttpRuntimeAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTohttpRuntimeAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
httpRuntime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToidentityAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToidentityAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
identity ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToidentityAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToidentityAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
identity ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomachineKeyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTomachineKeyAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
machineKey ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomachineKeyAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTomachineKeyAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
machineKey ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopagesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTopagesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
pages ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopagesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTopagesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
pages ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopassportAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTopassportAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
passport ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopassportAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTopassportAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
passport ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprobingAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToprobingAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
probing ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprobingAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToprobingAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
probing ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprocessModelAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToprocessModelAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
processModel ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprocessModelAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToprocessModelAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
processModel ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprotocolsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToprotocolsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
protocols ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToprotocolsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToprotocolsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
protocols ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopublisherPolicyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTopublisherPolicyAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
publisherPolicy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTopublisherPolicyAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTopublisherPolicyAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
publisherPolicy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosectionAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
section ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosectionAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
section ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionGroupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosectionGroupAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
sectionGroup ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionGroupAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosectionGroupAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
sectionGroup ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionInGroupAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosectionInGroupAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
sectionInGroup ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosectionInGroupAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosectionInGroupAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
sectionInGroup ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosecurityPolicyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosecurityPolicyAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
securityPolicy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosecurityPolicyAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosecurityPolicyAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
securityPolicy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverProviderAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverProvider ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverProviderAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverProvider ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverFormatterAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverFormatterAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverFormatter ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverFormatterAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverFormatterAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverFormatter ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_activatedAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToservice_activatedAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
service_activated ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_activatedAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToservice_activatedAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
service_activated ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_activated_lifetimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToservice_activated_lifetimeAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
service_activated_lifetime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_activated_lifetimeAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToservice_activated_lifetimeAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
service_activated_lifetime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserviceDescriptionFormatExtensionTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserviceDescriptionFormatExtensionTypesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serviceDescriptionFormatExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserviceDescriptionFormatExtensionTypesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserviceDescriptionFormatExtensionTypesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serviceDescriptionFormatExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_wellknownAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToservice_wellknownAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
service_wellknown ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToservice_wellknownAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToservice_wellknownAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
service_wellknown ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosessionStateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosessionStateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
sessionState ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosessionStateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosessionStateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
sessionState ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosoapExtensionTypesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
soapExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionTypesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosoapExtensionTypesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
soapExtensionTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionImporterTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosoapExtensionImporterTypesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
soapExtensionImporterTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionImporterTypesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosoapExtensionImporterTypesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
soapExtensionImporterTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionReflectorTypesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosoapExtensionReflectorTypesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
soapExtensionReflectorTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosoapExtensionReflectorTypesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosoapExtensionReflectorTypesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
soapExtensionReflectorTypes ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToswitchesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToswitchesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
switches ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToswitchesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToswitchesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
switches ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_diagnosticsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosystem_diagnosticsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
system_diagnostics ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_diagnosticsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosystem_diagnosticsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
system_diagnostics ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_runtime_remotingAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosystem_runtime_remotingAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
system_runtime_remoting ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_runtime_remotingAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosystem_runtime_remotingAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
system_runtime_remoting ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_webAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosystem_webAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
system_web ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_webAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosystem_webAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
system_web ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotraceAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTotraceAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
trace ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotraceAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTotraceAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
trace ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotrustAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTotrustAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
trust ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotrustAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTotrustAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
trust ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTouserAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTouserAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
user ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTouserAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTouserAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
user ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebControlsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTowebControlsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
webControls ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebControlsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTowebControlsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
webControls ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebServicesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTowebServicesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
webServices ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebServicesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTowebServicesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
webServices ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowsdlHelpGeneratorAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTowsdlHelpGeneratorAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
wsdlHelpGenerator ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowsdlHelpGeneratorAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTowsdlHelpGeneratorAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
wsdlHelpGenerator ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToappSettingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToappSettingsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
appSettings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToappSettingsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToappSettingsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
appSettings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTolocationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTolocationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
location ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTolocationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTolocationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
location ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToapplicationAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToapplicationAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
application ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToapplicationAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToapplicationAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
application ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTolifetimeAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTolifetimeAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
lifetime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTolifetimeAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTolifetimeAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
lifetime ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserviceAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserviceAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
service ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserviceAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserviceAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
service ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochanneltemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTochanneltemplateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
channeltemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochanneltemplateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTochanneltemplateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
channeltemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochannelSinkProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTochannelSinkProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
channelSinkProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTochannelSinkProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTochannelSinkProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
channelSinkProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderTemplatesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientProviderTemplatesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderTemplatesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientProviderTemplatesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientProviderTemplateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientProviderTemplateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientProviderTemplateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientFormatterTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToclientFormatterTemplateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
clientFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToclientFormatterTemplateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToclientFormatterTemplateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
clientFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderTemplatesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverProviderTemplatesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderTemplatesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverProviderTemplatesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverProviderTemplates ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverProviderTemplateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverProviderTemplateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverProviderTemplateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverProviderTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverFormatterTemplateAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToserverFormatterTemplateAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
serverFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToserverFormatterTemplateAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToserverFormatterTemplateAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
serverFormatterTemplate ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileControlsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTomobileControlsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
mobileControls ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileControlsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTomobileControlsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
mobileControls ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileDevicesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTomobileDevicesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
mobileDevices ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileDevicesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTomobileDevicesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
mobileDevices ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileControlBindingsAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTomobileControlBindingsAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
mobileControlBindings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTomobileControlBindingsAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTomobileControlBindingsAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
mobileControlBindings ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeviceFiltersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTodeviceFiltersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
deviceFilters ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeviceFiltersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTodeviceFiltersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
deviceFilters ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeviceInfoProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTodeviceInfoProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
deviceInfoProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodeviceInfoProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTodeviceInfoProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
deviceInfoProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTorenderingProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTorenderingProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
renderingProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTorenderingProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTorenderingProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
renderingProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotransportProvidersAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTotransportProvidersAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
transportProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTotransportProvidersAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTotransportProvidersAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
transportProviders ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_netAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTosystem_netAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
system_net ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTosystem_netAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTosystem_netAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
system_net ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodefaultProxyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTodefaultProxyAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
defaultProxy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTodefaultProxyAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTodefaultProxyAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
defaultProxy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToproxyAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToproxyAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
proxy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToproxyAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToproxyAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
proxy ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTobypassListAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTobypassListAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
bypassList ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTobypassListAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTobypassListAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
bypassList ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebRequestModulesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationTowebRequestModulesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
webRequestModules ref ConfigClass;
};

#pragma deleteclass ("WebApplicationTowebRequestModulesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationTowebRequestModulesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
webRequestModules ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthenticationModulesAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToauthenticationModulesAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
authenticationModules ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToauthenticationModulesAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToauthenticationModulesAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
authenticationModules ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToconnectionManagementAssociation", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appmerged")]
class WebApplicationToconnectionManagementAssociation : WebApplicationConfiguration
{
WebApplication ref Node;
connectionManagement ref ConfigClass;
};

#pragma deleteclass ("WebApplicationToconnectionManagementAssociationUnmerged", NOFAIL)

[Association, Dynamic, Provider("NetFrameworkv1Provider"), AssocType("appunmerged")]
class WebApplicationToconnectionManagementAssociationUnmerged : WebApplicationConfigurationUnmerged
{
WebApplication ref Node;
connectionManagement ref ConfigClass;
};

