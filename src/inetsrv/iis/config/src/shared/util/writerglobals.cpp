/**************************************************************************++
Copyright (c) 2001 Microsoft Corporation

Module name: 
    WriterGlobals.cpp

$Header: $

Abstract:

--**************************************************************************/

LPCWSTR	g_wszBeginFile					= L"<?xml version =\"1.0\"?>\r\n<configuration xmlns=\"urn:microsoft-catalog:null-placeholder\">\r\n<MBProperty>\r\n";
SIZE_T	g_cchBeginFile					= wcslen(g_wszBeginFile);
LPCWSTR	g_wszEndFile					= L"</MBProperty>\r\n</configuration>\r\n";
SIZE_T	g_cchEndFile					= wcslen(g_wszEndFile);
LPCWSTR	g_BeginLocation					= L"<";
SIZE_T	g_cchBeginLocation				= wcslen(g_BeginLocation);
LPCWSTR	g_Location						= L"\tLocation =\"";
SIZE_T	g_cchLocation					= wcslen(g_Location);
LPCWSTR	g_EndLocationBegin				= L"</";
SIZE_T	g_cchEndLocationBegin			= wcslen(g_EndLocationBegin);
LPCWSTR	g_EndLocationEnd				= L">\r\n";
SIZE_T	g_cchEndLocationEnd				= wcslen(g_EndLocationEnd);
LPCWSTR g_CloseQuoteBraceRtn			= L"\">\r\n";
SIZE_T	g_cchCloseQuoteBraceRtn			= wcslen(g_CloseQuoteBraceRtn);
LPCWSTR g_Rtn							= L"\r\n";
SIZE_T	g_cchRtn						= wcslen(g_Rtn);
LPCWSTR g_EqQuote						= L"=\"";
SIZE_T	g_cchEqQuote					= wcslen(g_EqQuote);
LPCWSTR g_QuoteRtn						= L"\"\r\n";
SIZE_T	g_cchQuoteRtn					= wcslen(g_QuoteRtn);
LPCWSTR g_TwoTabs						= L"\t\t";
SIZE_T	g_cchTwoTabs					= wcslen(g_TwoTabs);
LPCWSTR	g_NameEq						= L"\t\tName=\"";
SIZE_T	g_cchNameEq						= wcslen(g_NameEq);
LPCWSTR	g_IDEq							= L"\t\tID=\"";
SIZE_T	g_cchIDEq						= wcslen(g_IDEq);
LPCWSTR	g_ValueEq						= L"\t\tValue=\"";
SIZE_T	g_cchValueEq					= wcslen(g_ValueEq);
LPCWSTR	g_TypeEq						= L"\t\tType=\"";
SIZE_T	g_cchTypeEq						= wcslen(g_TypeEq);
LPCWSTR	g_UserTypeEq					= L"\t\tUserType=\"";
SIZE_T	g_cchUserTypeEq					= wcslen(g_UserTypeEq);
LPCWSTR	g_AttributesEq					= L"\t\tAttributes=\"";
SIZE_T	g_cchAttributesEq				= wcslen(g_AttributesEq);
LPCWSTR	g_BeginGroup					= L"\t<";
SIZE_T	g_cchBeginGroup					= wcslen(g_BeginGroup);
LPCWSTR	g_EndGroup						= L"\t>\r\n";
SIZE_T	g_cchEndGroup					= wcslen(g_EndGroup);
LPCWSTR	g_BeginCustomProperty			= L"\t<Custom\r\n";
SIZE_T	g_cchBeginCustomProperty		= wcslen(g_BeginCustomProperty);
LPCWSTR	g_EndCustomProperty				= L"\t/>\r\n";
SIZE_T	g_cchEndCustomProperty			= wcslen(g_EndCustomProperty);
LPCWSTR	g_ZeroHex						= L"0x00000000";
SIZE_T	g_cchZeroHex					= wcslen(g_ZeroHex);
LPCWSTR	g_wszIIsConfigObject			= L"IIsConfigObject";

WORD    BYTE_ORDER_MASK                 = 0xFEFF;
DWORD	UTF8_SIGNATURE                  = 0x00BFBBEF;

LPWSTR  g_wszByID	                    = L"ByID";
LPWSTR  g_wszByTableAndColumnIndexOnly        = L"ByTableAndColumnIndexOnly";
LPWSTR  g_wszByTableAndColumnIndexAndNameOnly = L"ByTableAndColumnIndexAndNameOnly";
LPWSTR  g_wszByTableAndColumnIndexAndValueOnly = L"ByTableAndColumnIndexAndValueOnly";
LPWSTR  g_wszUnknownName                = L"UnknownName_";
SIZE_T  g_cchUnknownName                = wcslen(g_wszUnknownName);
LPWSTR  g_UT_Unknown                    = L"Unknown_User_Type";
SIZE_T  g_cchUT_Unknown                 = wcslen(g_UT_Unknown);
LPWSTR  g_T_Unknown                     = L"Unknown_Type";
LPWSTR  g_wszTrue						= L"TRUE";
LPWSTR  g_wszFalse						= L"FALSE";
SIZE_T  g_cchMaxBoolStr					= wcslen(g_wszFalse);

SIZE_T  g_cchTemp						= 1024;
WCHAR   g_wszTemp[1024];
LPCWSTR g_wszBeginSchema				= L"<?xml version =\"1.0\"?>\r\n<!-- WARNING, DO NOT EDIT THIS FILE. -->\r\n<MetaData xmlns=\"x-schema:CatMeta.xms\">\r\n\r\n\t<DatabaseMeta               InternalName =\"METABASE\">\r\n\t\t<ServerWiring           Interceptor  =\"Core_XMLInterceptor\"/>\r\n\t\t<Collection         InternalName =\"MetabaseBaseClass\"    MetaFlagsEx=\"NOTABLESCHEMAHEAPENTRY\"  MetaFlags=\"HIDDEN\">\r\n\t\t\t<Property       InternalName =\"Location\"                                    Type=\"WSTR\"   MetaFlags=\"PRIMARYKEY\"/>\r\n\t\t</Collection>\r\n";
SIZE_T  g_cchBeginSchema                = wcslen(g_wszBeginSchema);
LPCWSTR g_wszEndSchema				    = L"\t</DatabaseMeta>\r\n</MetaData>\r\n";
SIZE_T  g_cchEndSchema                  = wcslen(g_wszEndSchema);
LPCWSTR g_wszBeginCollection            = L"\t\t<Collection         InternalName =\"";
SIZE_T  g_cchBeginCollection            = wcslen(g_wszBeginCollection);
LPCWSTR g_wszSchemaGen                  = L"\">\r\n";
SIZE_T  g_cchSchemaGen                  = wcslen(g_wszSchemaGen);
LPCWSTR g_wszInheritsFrom               = L"\"    InheritsPropertiesFrom=\"MetabaseBaseClass\" >\r\n";
SIZE_T  g_cchInheritsFrom               = wcslen(g_wszInheritsFrom);
LPCWSTR g_wszEndCollection              = L"\t\t</Collection>\r\n";
SIZE_T  g_cchEndCollection              = wcslen(g_wszEndCollection);
LPCWSTR g_wszBeginPropertyShort         = L"\t\t\t<Property       InheritsPropertiesFrom =\"IIsConfigObject:";
SIZE_T  g_cchBeginPropertyShort         = wcslen(g_wszBeginPropertyShort);
LPCWSTR g_wszMetaFlagsExEq              = L"\"  MetaFlagsEx=\"";
SIZE_T  g_cchMetaFlagsExEq              = wcslen(g_wszMetaFlagsExEq);
LPCWSTR g_wszMetaFlagsEq                = L"\"  MetaFlags=\"";
SIZE_T  g_cchMetaFlagsEq                = wcslen(g_wszMetaFlagsEq);
LPCWSTR g_wszEndPropertyShort           = L"\"/>\r\n";
SIZE_T  g_cchEndPropertyShort           = wcslen(g_wszEndPropertyShort);
LPCWSTR g_wszBeginPropertyLong          = L"\t\t\t<Property       InternalName =\"";
SIZE_T  g_cchBeginPropertyLong          = wcslen(g_wszBeginPropertyLong);
LPCWSTR g_wszPropIDEq                   = L"\"\t\t\tID=\"";
SIZE_T  g_cchPropIDEq                   = wcslen(g_wszPropIDEq);
LPCWSTR g_wszPropTypeEq                 = L"\"\t\t\tType=\"";
SIZE_T  g_cchPropTypeEq                 = wcslen(g_wszPropTypeEq);
LPCWSTR g_wszPropUserTypeEq             = L"\"\t\t\tUserType=\"";
SIZE_T  g_cchPropUserTypeEq             = wcslen(g_wszPropUserTypeEq);
LPCWSTR g_wszPropAttributeEq            = L"\"\t\t\tAttributes=\"";
SIZE_T  g_cchPropAttributeEq            = wcslen(g_wszPropAttributeEq);

LPWSTR  g_wszPropMetaFlagsEq            = L"\"\t\t\tMetaFlags=\"";
SIZE_T  g_cchPropMetaFlagsEq            = wcslen(g_wszPropMetaFlagsEq);
LPWSTR  g_wszPropMetaFlagsExEq          = L"\"\t\t\tMetaFlagsEx=\"";
SIZE_T  g_cchPropMetaFlagsExEq          = wcslen(g_wszPropMetaFlagsExEq);
LPWSTR  g_wszPropDefaultEq              = L"\"\t\t\tDefaultValue=\"";
SIZE_T  g_cchPropDefaultEq              = wcslen(g_wszPropDefaultEq);
LPWSTR  g_wszPropMinValueEq             = L"\"\t\t\tStartingNumber=\"";
SIZE_T  g_cchPropMinValueEq             = wcslen(g_wszPropMinValueEq);
LPWSTR  g_wszPropMaxValueEq             = L"\"\t\t\tEndingNumber=\"";
SIZE_T  g_cchPropMaxValueEq             = wcslen(g_wszPropMaxValueEq);
LPWSTR  g_wszEndPropertyLongNoFlag      = L"\"/>\r\n";
SIZE_T  g_cchEndPropertyLongNoFlag      = wcslen(g_wszEndPropertyLongNoFlag);
LPWSTR  g_wszEndPropertyLongBeforeFlag  = L"\">\r\n";
SIZE_T  g_cchEndPropertyLongBeforeFlag  = wcslen(g_wszEndPropertyLongBeforeFlag);
LPWSTR  g_wszEndPropertyLongAfterFlag   = L"\t\t\t</Property>\r\n";
SIZE_T  g_cchEndPropertyLongAfterFlag   = wcslen(g_wszEndPropertyLongAfterFlag);
LPCWSTR g_wszBeginFlag                  = L"\t\t\t\t<Flag       InternalName =\"";
SIZE_T  g_cchBeginFlag                  = wcslen(g_wszBeginFlag);
LPCWSTR g_wszFlagValueEq                = L"\"\t\tValue=\"";
SIZE_T  g_cchFlagValueEq                = wcslen(g_wszFlagValueEq);
LPCWSTR g_wszEndFlag                    = L"\"\t/>\r\n";
SIZE_T  g_cchEndFlag                    = wcslen(g_wszEndFlag);
LPCWSTR g_wszContainerClassListEq       = L"\"    ContainerClassList=\"";
SIZE_T  g_cchContainerClassListEq       = wcslen(g_wszContainerClassListEq);
LPCWSTR g_wszFlagIDEq					= L"\"\t\tID=\"";
SIZE_T  g_cchFlagIDEq			        = wcslen(g_wszFlagIDEq);
LPCWSTR g_aSynIDToWszType []            ={NULL,
										  L"DWORD",
										  L"STRING",
										  L"EXPANDSZ",
										  L"MULTISZ",
										  L"BINARY",
										  L"BOOL",
										  L"BOOL_BITMASK",
										  L"MIMEMAP",
										  L"IPSECLIST",
										  L"NTACL",
										  L"HTTPERRORS",
										  L"HTTPHEADERS"
};

LPCWSTR g_wszOr                         = L"| ";
SIZE_T  g_cchOr              			= wcslen(g_wszOr);

