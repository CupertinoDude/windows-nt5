
using System;

public class Foo 
{
	public int iCookie;

	public Foo() 
	{
		iCookie=-1;
	}

    //
    // The method that will be called when the thread is started
    //
	public void Baz()
	{
		int iThreadID = Thread.CurrentThread.GetHashCode();

		Console.Write("Hash: ");
		Console.Write(iThreadID);
		Console.Write(" Foo Baz is running on another thread : Cookie : ");
		Console.WriteLine(iCookie);
	}
};

public class Simple
{
    public static int Main(String[] args)
    {
		Console.WriteLine("Thread Simple Thread Pool Sample");

		for(int iItem=0;iItem < 1000;iItem++)
		{
			Foo oFoo = new Foo();
			oFoo.iCookie = iItem;
			WaitDelegate oW = new WaitDelegate(oFoo.Baz);
			ThreadPool.QueueUserWorkItem(oW);
		}	

		// Wait a short while to let some of the work items drain from the thread pool
		Thread.Sleep(15000);

		return 0;
	}
}

