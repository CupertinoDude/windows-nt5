/*++

Copyright (c) 1999-1999 Microsoft Corporation

Module Name:

    tinyclient.cool

Abstract:

    Test for UL client-side functionality.

Author:

    Mauro Ottaviani (mauroot)       05-Oct-1999

Revision History:

--*/

using System;
using System.Globalization;

using UlApi;

class tinyclient
{
	public static void Main( string[] args )
	{
		if ( args.Count != 3 )
		{
			Console.Write( "Microsoft (R) TinyClient Version 1.00 (NT)\nCopyright (C) Microsoft Corp 1999. All rights reserved.\nusage: TinyClient Method HostName Path\nexample: TinyClient GET localhost /tinyserver\n" );
			return;
		}

		Encoding myEncoder = Encoding.GetASCII();

		Console.WriteLine( "Creating a Request" );

		HTTPProtocolRequest Request = new
		HTTPProtocolRequest(
			args[1],
			args[2] );

		Request.Method = args[0];

		// these properties are already set as the default values, but
		// let's explicitly set them for sample use.

		
		Request.Version = "HTTP/1.0";
		Request.AddHeader( "User-Agent", "tinyclient", true );
   
		Console.WriteLine( "Request Formatted:---------------\n{0}\n--------------------------------", myEncoder.GetString( Request.Serialize(), 0, Request.Serialize().Length ) );

		Console.WriteLine( "Sending Request and waiting for the Response" );

		HTTPProtocolResponse Response = Request.GetLocalResponseSync();

		// Console.WriteLine( "Got a Response:\n{0}\n", myEncoder.GetString( Response.Serialize(), 0, Response.Serialize().Length ) );
		Console.WriteLine( "Got a Response:" );
		Console.WriteLine( "Version: {0}", Response.Version );
		Console.WriteLine( "StatusCode: {0}", Response.StatusCode );
		Console.WriteLine( "Reason: {0}", Response.Reason );
		Console.WriteLine( "Server: {0}", Response.Server );
		Console.WriteLine( "ContentLength: {0}", Response.ContentLength );
		Console.WriteLine( "GetHeader( \"Date\" ): {0}", Response.GetHeader( "Date" ) );
		if ( Response.ContentLength != 0 ) Console.WriteLine( "Body:--------------------\n{0}\n-------------------------", Response.Body );
			
		return;

	} // Main

} // class tinyserver

