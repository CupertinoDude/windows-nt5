/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module Name :

        configbasicauth.cool

   Abstract:

        Basic authentication against a config file user database
 
   Author:

        Bilal Alam (BAlam)      18-Aug-99

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server
--*/

using System;
using System.ASP;
using System.ASP.Security;
using System.IIS.PrivateUtils;
using System.Collections;

namespace System.IIS.Security
{
    public class ConfigBasicAuthenticationModule : BasicAuthenticationModule
    {
        protected override void OnBasicAuth( string strFullUser,
                                             string strPassword )
        {
            UserEntry                       userEntry;
            bool                            fMatch = false;

            userEntry = UserEntry.GetFromConfig( Context, strFullUser );
            if ( userEntry == null )
            {
                Context.Response.StatusCode = HttpStatus.Unauthorized;
                goto Finished;
            }

            //
            // Verify the password
            //

            if ( !userEntry.IsClearText )            
            {
                byte[]                  pbHash;

                //
                // Calculate hashed password
                //
            
                pbHash = UserEntry.GenerateHash( strFullUser,
                                                 strPassword,
                                                 GetRealm() );
                
                //
                // Compare
                //
                
                fMatch = GeneralSecUtils.BytesEqual( pbHash,
                                                     0,
                                                     userEntry.HashedPassword,
                                                     0,
                                                     pbHash.Count );
            }
            else
            {
                //
                // Easy.  We do a string compare of the passwords
                //
                    
                if ( strPassword.Equals( userEntry.ClearTextPassword ) )
                {
                    fMatch = true;
                }
            }
            
            if ( !fMatch )
            {
                Context.Response.StatusCode = HttpStatus.Unauthorized;
            }                
            else
            {
                //
                // Create the user
                //
                
                GenericIdentity identity = new GenericIdentity( strFullUser,
                                                                "Basic" );

                GenericUser user = new GenericUser( identity, 
                                                    userEntry.Roles );
                
                Context.User = user;
            }
            
        Finished:
            return;
        }
    }
}
