/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        UlGlobalNativeToManaged.java

   Abstract:

        This module implements the Native to Managed transition
        for UL hosted ASP.
 
   Author:

        Saurab Nog    ( SaurabN )     03-Apr-1999

   Environment:

        COM+ - User Mode
       
   Project:

        ASP - Managed Run Time

--*/

using System.Interop;
using System.ASP;

namespace System.IIS.Hosting
{

    [uuid("AFD40FB8-E7D6-11d2-BCEA-00902710B3B2")]
    public class ULManagedWorker
    {
        private String          _AppPoolId;
        private String          _rootDirectory;
        private String          _appPath;
        private long            _appDomainCreateTime;

        public ULManagedWorker()
        {
            _AppPoolId = null;
            _rootDirectory = null;
            _appPath = null;
        }

        // ************************************************************************

        public void Initialize( [nativetype(NativeType.NativeTypeLpwstr)] String AppPoolId,
                                [nativetype(NativeType.NativeTypeLpwstr)] String rootDirectory,
                                [nativetype(NativeType.NativeTypeLpwstr)] String appPath,
                                long appDomainCreateTime )
        {
            _AppPoolId = AppPoolId;
            _rootDirectory = rootDirectory;
            _appPath = appPath;
            _appDomainCreateTime = appDomainCreateTime;
        }
        // ************************************************************************

        public void DoWork(long NativeContext, int BufferPtr)
        {        
            ULWorkerRequest wr = new ULWorkerRequest( _AppPoolId, 
                                                      _rootDirectory, 
                                                      _appPath,
                                                      _appDomainCreateTime );
        
            wr.ParseRequestBuffer(NativeContext, BufferPtr);

            HttpRuntime.ProcessRequest(wr);
        }

        // ************************************************************************

        public void CompletionCallback(long ManagedContext, int cbData, int err)
        {
            ULWorkerRequest wr = (ULWorkerRequest) Root.Get( (int)ManagedContext);
            
            Root.Free((int)ManagedContext);
            
            wr.CompletionCallback(cbData, err);
        }
    }
}
