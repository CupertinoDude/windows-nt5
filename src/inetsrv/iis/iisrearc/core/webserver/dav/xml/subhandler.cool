/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        SubHandler.cool

   Abstract:

        This module describes the SubHandler that is used as a base
        class for all the DAV Method Sub Handlers that support parsing
        of particular information out of request bodies.
 
   Author:

        Emily Kruglick    ( EmilyK )     29-Sep-1999

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server

   Classes:

        ReadNode
            public const int Unknown  = 0;
            public const int PropFind = 1;
            public const int Prop     = 2;
            public const int PropAll  = 3;
            public const int PropName = 4;
            public const int SpecificProp = 5;
            
            public const int LockInfo = 6;
            public const int LockType = 7;
            public const int LockScope = 8;
            public const int Owner = 9;

            public String Tag;
            public int    ID;
            public ReadNode Parent;
            public ReadNode()

        SubHandler 
            protected PropFindCache _cache;
            public virtual ParsingControlConst HandleStartElement(String str)
            public virtual void HandleEndElement()
            public virtual void NothingParsed()
            public virtual void Initialize(DataCache xmlcache)

--*/


using System.IO;
using System.Collections;
using System.ASP;
using System.XML;
using System.IIS.DAV.DAVUtil;

namespace System.IIS.DAV.XML
{

    internal class ReadNode
    {
        public const int Unknown  = 0;
        public const int PropFind = 1;
        public const int Prop     = 2;
        public const int PropAll  = 3;
        public const int PropName = 4;
        public const int SpecificProp = 5;

        public const int LockInfo   =   6;
        public const int LockType   =   7;
        public const int LockScope  =   8;
        public const int Owner      =   9;

        public String Tag;
        public int    ID;
        public ReadNode Parent;

        public ReadNode()
        {
            Tag = null;
            ID = Unknown;
            Parent = null;
        }
    }

    internal class SubHandler
    {
        public virtual ParsingControlConst HandleStartElement(String str)
        {
            return ParsingControlConst.NotUsed;
        }

        public virtual void HandleEndElement()
        {
        }

        public virtual void NothingParsed()
        {
        }

        public virtual void PassXML(String str)
        {
        }

        public virtual void Initialize(DataCache xmlcache)
        {

        }
    }
}


