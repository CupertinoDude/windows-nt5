

using System.IO;
using System.IIS.DAV.DAVUtil;
using System.ASP;
using System.Collections;

namespace System.IIS.DAV.Lock
{
    internal class StoreLock
    {
        public String FileName;
        public String LockToken;
        public String Owner;
        public FileStream   OpenFile;
        public Int64  LockId;

        public StoreLock(String file, String mylock, String owner, FileStream f, Int64 lockid)
        {
            LockId = lockid;
            FileName = file;
            LockToken = mylock;
            Owner = owner;
            OpenFile =f;
        }

    }

    internal class Manager
    {
        // BUGBUG:  need to figure out the correct data structure 
        //          for storing the locks.
        private static Hashtable Locks;
        private static Int64 NextLock;
        
        public static Int64 GenerateLockId()
        {

	        Int64  lLockId;

            // BUGBUG: Need InterlockedIncrement here, not sure 
            //         if there is one in Managed code.
            lLockId = ++NextLock;

            return lLockId;
        }

        static Manager()
        {
            NextLock = 0;
            Locks = new Hashtable();
        }
       
        public static String GenerateLockToken(Int64 lLockId)
        {
            // BUGBUG:  Did IIS generate a new guid for each lock token
            //          or was there one per process running.
            Guid g = new Guid();

            return g.ToString() + ":" + lLockId.ToString();
        }        

        public static StoreLock StoreNewLock(String FileName, String Owner, FileStream file)
        {
            Int64 lockid = GenerateLockId();
            String locktoken = GenerateLockToken(lockid);
            
            StoreLock sl = new StoreLock(FileName, locktoken, Owner, file, lockid);

            Locks.Add(lockid, sl);

            return sl;
        }

        
    } // End Lock.Manager Class

}  // End DAV Namespace
