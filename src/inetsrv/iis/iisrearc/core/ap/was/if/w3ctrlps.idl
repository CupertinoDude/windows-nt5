cpp_quote( "" )
cpp_quote( "//" )
cpp_quote( "//  CLSID_W3Control {119817C9-666D-4053-AEDA-627D0E25CCEF}" )
cpp_quote( "//" )
cpp_quote( "" )
cpp_quote( "DEFINE_GUID( CLSID_W3Control, 0x119817c9, 0x666d, 0x4053, 0xae, 0xda, 0x62, 0x7d, 0xe, 0x25, 0xcc, 0xef );" )
cpp_quote( "" )
cpp_quote( "" )
cpp_quote( "//" )
cpp_quote( "//  IID_IW3Control {52C550C6-067F-4bc8-98B2-0F0E91C10261}" )
cpp_quote( "//" )
cpp_quote( "" )
cpp_quote( "DEFINE_GUID( IID_IW3Control, 0x52c550c6, 0x67f, 0x4bc8, 0x98, 0xb2, 0xf, 0xe, 0x91, 0xc1, 0x2, 0x61 );" )
cpp_quote( "" )
cpp_quote( "" )
cpp_quote( "" )
cpp_quote( "//" )
cpp_quote( "//  Valid states (note: matches valid MD_SERVER_STATE values)." )
cpp_quote( "//" )
cpp_quote( "" )
cpp_quote( "#define W3_CONTROL_STATE_INVALID        0" )
cpp_quote( "#define W3_CONTROL_STATE_STARTING       1" )
cpp_quote( "#define W3_CONTROL_STATE_STARTED        2" )
cpp_quote( "#define W3_CONTROL_STATE_STOPPING       3" )
cpp_quote( "#define W3_CONTROL_STATE_STOPPED        4" )
cpp_quote( "#define W3_CONTROL_STATE_PAUSING        5" )
cpp_quote( "#define W3_CONTROL_STATE_PAUSED         6" )
cpp_quote( "#define W3_CONTROL_STATE_CONTINUING     7" )
cpp_quote( "" )
cpp_quote( "" )
cpp_quote( "//" )
cpp_quote( "//  Valid commands (note: matches valid MD_SERVER_COMMAND values)." )
cpp_quote( "//" )
cpp_quote( "" )
cpp_quote( "#define W3_CONTROL_COMMAND_INVALID      0" )
cpp_quote( "#define W3_CONTROL_COMMAND_START        1" )
cpp_quote( "#define W3_CONTROL_COMMAND_STOP         2" )
cpp_quote( "#define W3_CONTROL_COMMAND_PAUSE        3" )
cpp_quote( "#define W3_CONTROL_COMMAND_CONTINUE     4" )



import "unknwn.idl";



[
    object,
    uuid( 52C550C6-067F-4bc8-98B2-0F0E91C10261 ),
    pointer_default( unique ),
    helpstring( "IW3Control Interface" )
]

interface IW3Control : IUnknown
{

    HRESULT 
    ControlSite(
        [in] DWORD SiteId,
        [in] DWORD Command,
        [out] DWORD * pNewState
        );

    HRESULT 
    QuerySiteStatus(
        [in] DWORD SiteId,
        [out] DWORD * pCurrentState
        );

    HRESULT
    GetCurrentMode(
        [out] DWORD* pdwServerMode
        );

    HRESULT
    RecycleAppPool(
        [unique, in, string] LPCWSTR szAppPool
        );

};



[
    uuid( e439f7dd-f7a5-4529-b876-95c8e1a718cc ),
    version( 1.0 ),
    helpstring( "W3Control Type Library" )
]

library W3ControlLibrary
{

    importlib( "stdole32.tlb" );
    importlib( "stdole2.tlb" );

    [
        uuid( b1047884-8155-45f2-8345-956072c57bc0 ),
        helpstring( "W3Control Class" )
    ]

    coclass W3Control
    {
        [default] interface IW3Control;
    };

};

