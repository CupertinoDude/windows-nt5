/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        DAVPathUrl.cool

   Abstract:

        This module implements utility functions for dealing with physical paths and logical urls .
 
   Author:

        Emily Kruglick    ( EmilyK )     20-OCt-1999

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server

--*/


using System.IO;
using System.Collections;
using System.ASP;
using System.XML;

namespace System.ASP.DAV
{
    internal class DAVPathUrl
    {      
        public static String ConcatinateURL(String FirstPart, String SecondPart)
        {
            return ConcatinateString(FirstPart, SecondPart, "/");

        }

        public static String ConcatinatePath(String FirstPart, String SecondPart)
        {
            return ConcatinateString(FirstPart, SecondPart, "\\");
        }

        public static bool IsDirectory(String Path)
        {
            FileEnumerator fe = new FileEnumerator(Path);
            if (fe.GetNext() ==true) 
            {   
                bool retval = IsDirectory(fe);
                fe.Close();
                return retval;
            }
            else
                return false;

        }

        public static bool IsDirectory(FileEnumerator fe)
        {
            if ((fe.Attributes & (int)FileAttributes.Directory) == (int)FileAttributes.Directory)
                return true;
            else
                return false;
        }

        private static String ConcatinateString(String FirstPart, String SecondPart, String divider)
        {
            bool fNoNeed = false;
            if (FirstPart[FirstPart.Length - 1] == divider[0])
            {
                fNoNeed = true;
            }
                
            String tmpSecond = SecondPart;
            if (SecondPart[0] == divider[0])
            {
                if (fNoNeed)
                {
                    tmpSecond = SecondPart.Remove(0, 1);
                }
                else
                {
                    fNoNeed = true;
                }
            }

            if (fNoNeed)
                return FirstPart + tmpSecond;
            else
                return FirstPart + divider + SecondPart;

        }
    }

}
