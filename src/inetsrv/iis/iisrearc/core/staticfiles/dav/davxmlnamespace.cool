/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        DAVXMLNamespace.cool

   Abstract:

        This module implements the DAVXMLNamespace class which is responsible for:
        
        1)  Providing a function to parse namespaces out of strings.

   Author:

        Emily Kruglick    ( EmilyK )     Oct-19-1999

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server

--*/


using System.IO;
using System.XML;

namespace System.ASP.DAV
{
    internal class DAVXMLNamespace
    {
        private char[] NamespaceTerminators;
        private int _CurrentPrefix;
        private String _Namespace;
        private String _TagWithout;
        private bool _HasNamespace;
        private bool _TagSet;

        public DAVXMLNamespace()
        {
            NamespaceTerminators = new char[5];
            NamespaceTerminators[0] = ':';
            NamespaceTerminators[1] = '/';
            NamespaceTerminators[2] = '?';
            NamespaceTerminators[3] = ';';
            NamespaceTerminators[4] = '#';

            _CurrentPrefix = 0;
            _TagSet = false;
            _HasNamespace = false;
        }

        public static bool IsNamespaceAttr(String sAttr)
        {
            bool fIsAttr = sAttr.Length >= 5;
            
            if (fIsAttr)
                fIsAttr = (String.Compare(sAttr, 0, "xmlns", 0, 5) == 0);

            return fIsAttr;
        }
        
        public void ParseTag(String sTag)
        {
            int index = 0;
            index = sTag.LastIndexOf(NamespaceTerminators);

            if (index >= 0)
            {
                _Namespace = sTag.Substring(0, index + 1);
                _HasNamespace = true;
                _TagWithout = sTag.Substring(index + 1);
            }
            else
            {
                _Namespace = "";
                _HasNamespace = false;
                _TagWithout = sTag;
            }
            _TagSet = true;
        }

        public String TagWithout
        {
            get 
            {
                if (_TagSet)
                {
                    return _TagWithout;
                }
                else
                {
                    return null;
                }
            }
        }

        public String Namespace
        {
            get 
            {
                if (_TagSet && _HasNamespace)
                {
                    return _Namespace;
                }
                else
                {
                    return null;
                }
            }
        }

        public bool HasNamespace
        {
            get 
            {
                return _HasNamespace;
            }
        }

        // Copied from DAVFS.  They only use the first 16 characters.
        public String GetNewPrefix()
        {
            StringBuilder ans = new StringBuilder();
            int cp = _CurrentPrefix;

            do
            {
                char ch = (char) ('a' +  ( cp & 0xF ));
                ans.Append(ch);
                
                cp >>=4;
            } while (cp != 0);

            _CurrentPrefix++;
            return ans.ToString();
        }

    } // End of Class
} // End of Namespace