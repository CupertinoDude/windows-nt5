/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        DAVUtil.cool

   Abstract:

        This module implements utility functions for DAV.
 
   Author:

        Emily Kruglick    ( EmilyK )     28-Sep-1999

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server

--*/


using System.IO;
using System.Collections;
using System.ASP;
using System.XML;

namespace System.ASP.DAV
{
    internal class WriteUtil
    {
        private const int ValidLevel = 7;

        public static void console(String tag, String info, int Level)
        {

            if (Level > ValidLevel)
            {
                Console.Write(tag + ": " + info + "\r\n");
            }
        }

        public static void console(String tag, String info)
        {
            console(tag, info, 0);
        }

        public static void InvestigateRequest(HttpRequest request)
        {
            Console.Write("P:  " + request.Path + "\r\n");
            Console.Write("FP:  " + request.FilePath + "\r\n");
            Console.Write("PI:  " + request.PathInfo + "\r\n");
            Console.Write("PP : " + request.PhysicalPath + "\r\n");
            Console.Write("RU : " + request.RawUrl + "\r\n");
            Console.Write("Host:  " + request.UserHostName + "\r\n");
            WriteUtil.console("Host", request.UserHostAddress);
            WriteUtil.console("Url.Host", request.Url.Host);
            WriteUtil.console("URL.Path", request.Url.Path);
            WriteUtil.console("URL.Protocol", request.Url.Protocol);
            WriteUtil.console("URL.Port", request.Url.Port.ToString());
            WriteUtil.console("URL.Anchor", request.Url.Anchor);
            WriteUtil.console("URL.QueryString", request.Url.QueryString);
        }
    }

    internal class DAVUtil
    {
        public static bool ValidateRequest(HttpRequest request, HttpResponse response)
        {

            // ContentType if it exists better be:  "text/xml".
            if ((request.ContentType != null)
                && (0 != string.Compare( request.ContentType, "", false))
                && (0 != string.Compare( request.ContentType, 0, "text/xml", 0, 8, false)))
	        {
                // if it is not "text/xml" than declare that we do not handle this type of body.
		        response.StatusCode = HttpStatus.UnsupportedMediaType;
                return false;
	        }
            return true;

        }
        
    }

}
