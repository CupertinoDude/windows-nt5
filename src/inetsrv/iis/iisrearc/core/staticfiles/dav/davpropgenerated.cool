/*++

   Copyright    (c)    1999    Microsoft Corporation

   Module  Name :

        DAVPropGenerated.cool

   Abstract:

        This module implements property retrieval for generated properties:

              Display Name
              
   Author:

        Emily Kruglick    ( EmilyK )     Oct-14-1999

   Environment:

        COM+ - User Mode Managed Run Time
       
   Project:

        Web Server

--*/


using System.IO;
using System.Collections;
using System.ASP;
using System.XML;
using System.Interop;
using System.Reflection;
using System.ASP.StaticFiles;

namespace System.ASP.DAV
{
    internal class DAVPropGenerated 
    {
        
        static public bool GetProperties( String     path
                                        , String     uri
                                        , int        flag
                                        , Hashtable  propnames
                                        , ArrayList  proplist)
        {
            DAVProperty davProp;
            String      sDisplayName;

            bool        fGetAll = true;
            bool        fGetOnlyNames = false;

            if (flag == DAVPropRetrievalFlags.NamedProps)
            {
                fGetAll = false;
                Util.Debug.Assert(propnames != null);
            }
            else if (flag == DAVPropRetrievalFlags.PropNames)
            {
                fGetOnlyNames = true;
            }


            // DisplayName Property
            // ======================
            if (fGetAll || propnames.ContainsKey(DAVPropNameConsts.propDisplayName))
            {
                davProp = new DAVProperty();
                davProp.Name = DAVPropNameConsts.propDisplayName;

                if (!fGetOnlyNames)
                {
                    //  We retrieve the display name from the URI, so we don't
                    //  return the physical path if we are dealing with a virtual root.

			        sDisplayName = new String (uri);
                    int iSlash = 0;
                    char[] rgRemoveSlash = new char[1];
                    rgRemoveSlash[0] = '/';

                    // Trims off the '/' from the end of the string.
                    sDisplayName = uri.TrimEnd(rgRemoveSlash);

                    int len = sDisplayName.Length;
                    if (len == 0)
                    {
                        // If we are dealing with a zero length string then 
                        // we need to just return the "/" as the display name.
                        sDisplayName = new String("/");
                    }
                    else
                    {
                        iSlash = sDisplayName.LastIndexOf('/');
                        if (iSlash != -1)
                        {
                            sDisplayName = sDisplayName.Remove(0, iSlash + 1);

                            // BUGBUG:  DAVFS sees it as an error if there are no slashes
                            //          for now I am just returning the string as is.

                        }
                    }

                davProp.Value = sDisplayName;
                }

                davProp.ResultCode = HttpStatus.Ok;
                proplist.Add(davProp);
            } // end of check if looking for specific property.

            // GetContentType Property
            // ======================+
            if (fGetAll || propnames.ContainsKey(DAVPropNameConsts.propContentType))
            {
                davProp = new DAVProperty();
                davProp.Name = DAVPropNameConsts.propContentType;

                if (!fGetOnlyNames)
                {
                 //     davProp.Value = "BUGBUG";
                    davProp.Value = MimeMapping.GetMimeMapping( uri );
                }

                davProp.ResultCode = HttpStatus.Ok;
                proplist.Add(davProp);
            }

            // This property finder will always find it's properties since it generates them.
            // It should only be called if we have a valid resource as seen by one of the other property
            // handlers.
            return true;

        }  // End of GetAllProperties
    } // End of DAVFileSystem Class
} // End of DAV namespace

