// AdRot.idl : IDL source for AdRot.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (AdRot.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

	[
		object,
		uuid(090ACFA0-1580-11d1-8AC0-00C0F00910F9),
		dual,
		helpstring("IAdRotator Interface"),
		pointer_default(unique)
	]
	interface IAdRotator : IDispatch
	{
		[propget, id(1), helpstring("The Clickable property enables you to specify whether the advertisements are displayed as hyperlinks.")] HRESULT Clickable([out, retval] BOOL *pVal);
		[propput, id(1), helpstring("The Clickable property enables you to specify whether the advertisements are displayed as hyperlinks.")] HRESULT Clickable([in] BOOL newVal);
		[propget, id(3), helpstring("The Border property enables you to specify whether to display the advertisements with a surrounding border.")] HRESULT Border([out, retval] short *pVal);
		[propput, id(3), helpstring("The Border property enables you to specify whether to display the advertisements with a surrounding border.")] HRESULT Border([in] short newVal);
		[propget, id(4), helpstring("The TargetFrame property specifies the target frame into which the link should be loaded.")] HRESULT TargetFrame([out, retval] BSTR *pVal);
		[propput, id(4), helpstring("The TargetFrame property specifies the target frame into which the link should be loaded.")] HRESULT TargetFrame([in] BSTR newVal);
		[propget, id(5), helpstring("The GetAdvertisement method retrieves the next advertisement from the Rotator Schedule file.")] HRESULT GetAdvertisement(BSTR, [out, retval] BSTR *pVal);
	};
[
	uuid(090ACFA1-1580-11d1-8AC0-00C0F00910F9),
	version(1.0),
	helpstring("MSWC Advertisement Rotator Object Library")
]
library AdRotator
{
	importlib("stdole2.tlb");

	[
		uuid(1621F7C0-60AC-11CF-9427-444553540000),
		helpstring("AdRotator Class")
	]
	coclass AdRotator
	{
		[default] interface IAdRotator;
	};
};
