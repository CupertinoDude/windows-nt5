/*++
    Copyright (c)  1995 Microsoft Corp.

    Module:

        cisa.idl
    
    Abstract:
        IDL file for ComIsapi. This file will be processed by MIDL to
        generate the type library (comisapi.tlb) and marshalling code.
    
    Author:
        Murali R. Krishnan  ( MuraliK)      1-Aug-1996
    
    History:

--*/

/*
        Unique user ID for RPC interface ( generated using uuidgen)
*/
[
        object,
        uuid( 4eb7fa00-ebe5-11cf-8d65-00805f384b94),
        helpstring( "IComIsapi Interface"),
        pointer_default( unique)
]

//
//  the interface definition
//
interface IComIsapi : IUnknown
{
    import  "oaidl.idl";

    typedef struct tagIN_CISA_WIRE_ECB {
        
        LPCSTR  lpszMethod;
        LPCSTR  lpszQueryString;
        LPCSTR  lpszPathInfo;
        LPCSTR  lpszPathXlated;
        LPCSTR  lpszContentType;
        
        DWORD   ConnID;
        DWORD   cbTotalBytes;
        unsigned long  cbAvailable;
        [size_is(cbAvailable)] BYTE lpbData[];
    } IN_CISA_WIRE_ECB;
    
    typedef struct tagOUT_CISA_WIRE_ECB {
        
        DWORD   dwHseStatus;    // status for ISAPI program
        DWORD   dwHttpStatusCode;
        DWORD   cbLogData;
        [size_is(cbLogData)] CHAR  lpchLogData[];
    } OUT_CISA_WIRE_ECB;
    

    HRESULT SetIsapiSink( [in] IUnknown * punkECB);    

    HRESULT HttpExtensionProc( 
                              [in] IN_CISA_WIRE_ECB * pInCisaWireEcb,
                              [in, out] OUT_CISA_WIRE_ECB * pOutCisaWireEcb
                              );
};


//
// Definitions of class library
//

[
 uuid( 4eb7fa01-ebe5-11cf-8d65-00805f384b94),
 version(1.0),
 helpstring( "ComIsapi 1.0 Type Library"),
 ]


library CisaLib
{
    importlib( "stdole2.tlb");
    
    [
     uuid( 4eb7fa02-ebe5-11cf-8d65-00805f384b94),
     helpstring( "ComIsapi Class")
    ]

    coclass ComIsapi
        {
            [default] interface IComIsapi;
        };
    
    
};

/********************* End of File ***************************/
