<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html dir=ltr><head><title>What's New in ASP</title>

<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script>

<META NAME="DESCRIPTION" CONTENT="Describes new features in this release of Active Server Pages."><META HTTP-EQUIV="Content-Type" content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services">
</head>

<body bgcolor="#FFFFFF">

<font face="Verdana,Arial,Helvetica" color="black">
<h1><a name="H1_37775030">What's New in ASP</a></h1>


<p>Active Server Pages (ASP) has been enhanced with features that make it easier to use for scripters and Web application developers.</p>

<ul>

<li><strong>New Flow Control Capabilities</strong>&nbsp;The ASP <strong>Server</strong> object now has two new methods that you can use to control program flow: <strong>Server.Transfer</strong> and <strong>Server.Execute</strong>. Rather than redirecting requests, which requires an expensive round-trip to the client, you can use these methods to transfer requests directly to an .asp file, without leaving the server.  For more information, see <a href="iiwacont.htm">Sending Content to the Browser</a>.</li>

<li><strong>Error Handling</strong>&nbsp;ASP now has a new error-handling capability, so that you can trap errors in a custom error message .asp file.  You can use the new <strong>Server.GetLastError</strong> method to display useful information, such as an error description or the line number where the error occurred.  For more information, see <a href="vbob1dtg.htm">ASPError Object</a>.</li>

<li><strong>Scriptless ASP</strong>&nbsp;Because static content is usually processed more quickly than server-side content, it was previously better to assign an .asp file extension only to files that contained ASP functionality. Whenever you needed to add ASP functionality to your static .html files, you had to manually add .asp file extensions to correct related hyperlinks.  With this latest release of ASP, however, .asp files that do not contain server-side functionality are now processed more quickly than ever before.  So, if you are creating an evolving Web application in which files may eventually require ASP functionality, you can now conveniently assign those files .asp file extensions, regardless of whether they contain static or server-side content.  For more information, see <a href="iiwabasi.htm">Creating an ASP Page</a>.</li>

<li><strong>Performance-Enhanced Objects</strong>&nbsp;ASP now provides performance-enhanced versions of its popular installable components.  These objects will scale reliably in a wide range of Web publishing environments.  For more information, see <a href="comp275c.htm">Installable Components for ASP</a>.</li>

<li><strong>XML Integration</strong>&nbsp;Extensible Markup Language (XML) enables you to semantically describe the complex structure of data or documents, which can then be shared across a variety of applications, clients, and servers.  Using the Microsoft&reg;&nbsp;XML Parser, included with Microsoft&#174; Internet Explorer version&nbsp;4.0, or later, you can create server-side applications enabling your Web server to exchange XML-formatted data with Internet Explorer version&nbsp;4.0 or later, or with other servers having XML parsing capabilities.  For more information, see the <a href="http://www.microsoft.com/isapi/redir.dll?prd=xml" target="_blank">Microsoft XML Web site</a>.</li>

<li><strong>Windows Script Components</strong>&nbsp;ASP supports Microsoft's powerful new scripting technology, Windows Script Components.  Now you can turn your business logic script procedures into reusable Component Object Model (COM) components that you can use in your Web applications, as well as in other COM-compliant programs. For more information, see <a href="iiwacomu.htm#scriptlets">Using Components and Objects</a>.</li>

<li><STRONG>A New Way to Determine Browser Capabilities</STRONG>&nbsp;ASP has a new feature for determining the exact capabilities of a browser.  When a browser sends a cookie describing its capabilities (such a cookie can be installed by using a simple client-side script) you can create an instance of the Browser Capabilities component that retrieves the browser's properties as returned by the cookie.  You can use this feature to discover a browser's capabilities and adjust your application accordingly.  For more information, see <A HREF="comp1vol.htm">Retrieving Browser Capabilities from a Cookie</A>.</li>

<li><STRONG>ASP Self-Tuning</STRONG>&nbsp;ASP now detects when executing requests are blocked by external resources. It automatically provides more threads to simultaneously execute additional requests and to continue normal processing. If the CPU becomes overburdened, ASP curtails the number of threads. This reduces the constant switching that occurs when too many nonblocking requests are executing simultaneously. For more information, see the metabase property reference for <A HREF="apro4s9w.htm"><STRONG>AspThreadGateEnabled</STRONG></A>.</li>


<li><STRONG>Server-Side Include with SRC Attribute</STRONG>&nbsp;You can now use the HTML &lt;SCRIPT&gt;&lt;/SCRIPT&gt; tag's SRC attribute to do server-side includes.  When you use the SRC attribute to specify a virtual or relative path, and use the RUNAT=SERVER attribute to denote server-side execution, you can achieve the same functionality as the #Include directive.  For more information, see <A HREF="iiwainc.htm">Including Files</A>.</li>

<li><STRONG>Encoded ASP Scripts</STRONG>&nbsp;Traditionally, Web developers have been unable to prevent others from viewing the logic behind their scripts.  ASP now supports a new script-encoding utility provided with Microsoft&#174;&nbsp;Visual Basic Scripting Edition (VBScript) and Microsoft&#174;&nbsp;JScript&nbsp;5.0.  Web developers can apply an encoding scheme to both client and server-side scripts that makes the programmatic logic appear as unreadable ASCII characters. Encoded scripts are decoded at run time by the script engine, so there's no need for a separate utility.  Although this feature is not intended as a secure, encrypted solution, it can prevent most casual users from browsing or copying scripts.  For more information, visit the <a href="http://www.microsoft.com/isapi/redir.dll?prd=msdn&pver=6.0&ar=scripting" target=_blank><b>Windows Script Technologies</b></a> Web site.</LI>

</font>

</font>

<li><font face="Verdana,Arial,Helvetica" color="black"><b>International ASP
  Development</b>&nbsp; </font><font face="Verdana,Arial,Helvetica" color="black">Two new properties were added to the Response object: Response.CodePage and
  Response.LCID. These properties provide page level control over codepage and locale settings for dynamic strings, without having to enable sessions. Session.CodePage and Session.LCID still provide session level control over codepage and locale settings for dynamic strings; however, they no longer can be
  inadvertently overwritten by @CodePage and @LCID. @CodePage and @LCID still affect static strings in Web pages. By default, all of these values are implicitly set by the default system ANSI codepage (CP_ACP) and the default system locale (LOCALE_SYSTEM_DEFAULT). However, if the metabase properties AspCodePage or AspLCID are set for any Web site or virtual directory, these become the default values. The metabase properties allow for global.asa files that need different codepages than the system default.
  Improved UTF-8 support includes support for surrogate characters and support
  for localized characters in the intrinsic objects, like form data and server
  variables.</font></LI>

</ul>


<font face="Verdana,Arial,Helvetica" color="black">


</font>

</font>

</body>
</html>
