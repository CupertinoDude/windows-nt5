<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Developing Scalable Web Applications</TITLE>
<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script>
<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT><META NAME="DESCRIPTION" CONTENT="Internet Information Services reference information">
<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services"> 
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H1><A NAME="_k2_developing_scalable_web_applications"></A><SUP></SUP>Developing Scalable Web Applications</H1>

<H6>Performance</H6>

<P>In the world of single-user desktop software development, the performance requirements are clearly defined. In that context, it is important that the user does not experience a significant delay when performing common tasks.</P>

<P>In the early years of the World Wide Web, slow Web pages were commonplace, and for many users a long wait was tolerated. However, as more and more enterprise Web applications were created, the requirements for Web application performance began to rival those of the single-user desktop. Today, with faster communication technologies becoming prevalent, users are demanding greater increases in site performance.</P>

<H6>Scalability</H6>

<P>The real issue in Web application design is that while the application <I>appears</I> to the single user as a traditional desktop application, it is actually a distributed application that could be simultaneously servicing hundreds or even thousands of users.</P>

<P>Web applications demand performance under a wide range of environment conditions—in other words, they must be scalable. Certainly, Web applications must perform well, but good performance when being used by a single user does not necessarily translate into scalability.</P>

<P>There are many different metrics for determining how scalable an application is. Ideally, a truly scalable Web application should be able to:

<UL type=disc>
	<LI>Serve a single user as well as it can serve hundreds or thousands of simultaneous users.</li>

	<LI>Perform twice as well when installed on a computer with twice the resources (processors, RAM, and so on), perform three times as well on a computer with three times the resources, and so on.</li>
</UL>

<P>Of course, these scalability requirements are <I>ideals</I>. However, the closer your application comes to fulfilling those ideals, the more successful your application will be when under load.</P>

<H6>Design Considerations for Performance and Scalability</H6>

<P>The most important thing to keep in mind when beginning a Web application development project is that Web applications are, for the most part, server applications. Historically, server software has been second only to operating system internals in complexity and programming difficulty. IIS and Windows<sup>&reg;</sup> offer a variety of innovative tools that make Web application development much faster and easier, but the concerns and challenges of server software programming still exist.</P>

<P>Some important considerations for making your application scalable include:

<UL type=disc>
	<LI><B>Technology Choices:</B> As with any development platform, Windows offers a number of options for completing a given task. Making the correct choice of technologies is the first, and often most important, step in designing a scalable Web application. For example, if a client-side technology provides the same or similar functionality as provided on the server, the client-side option often makes more sense; as the application is more scalable because the client handles much of the processing load. Proper technology choices can also lead to fewer round-trips between the client and server, further improving performance. For more information, see <A HREF="/iishelp/iis/htm/asp/eadg8qpj.htm">Web Applications: An Overview</A> and the Internet Client SDK.</li>

	<LI><B>Language Choices: </B>Choosing a development language impacts your Web application by defining the range of users who have access to it. For example, including scripting in an application will exclude users who have browsers that do not support scripting. The following lists some of the development languages available:
<UL type=disc>
	<LI>Windows Script Components</li>

	<LI>Visual Basic</li>

	<LI>Java</li>

	<LI>C++</li>
</UL>
</li>

	<LI><B>Algorithm and Work Flow Design:</B> Even the proper technology, if used improperly, will yield poor results.</li>

	<LI><B>Multithreading: </B>IIS and Windows provides a multithreaded environment, and in order to create scalable applications, you must choose the appropriate threading model for your components.</li>

	<LI><B>Resource Contention and Delay:</B> Resource contention and leakage are often major culprits behind applications that cannot scale.</li>

	<LI><B>"Real-World" Testing: </B>You must be sure to thoroughly test your Web application in an environment that approximates the actual environment in which the application will be deployed.</li>
</UL>

<P>A detailed analysis of all of these topics is beyond the scope of this documentation. Instead, in this section you will find a compilation of notes and procedures, specific to IIS, that will help you create a scalable Web application.</P>

<P>This section contains:

<UL type=disc>
	<LI><A HREF="/iishelp/iis/htm/asp/perf6j1v.htm">Developing Scalable ASP Applications</A></li>

	<LI><A HREF="/iishelp/iis/htm/asp/perf4i5v.htm">Developing Scalable Components</A></li>

	<LI><A HREF="/iishelp/iis/htm/asp/perf4vsj.htm">Designing High-Performance ISAPI Applications</A></li>

	<LI><A HREF="/iishelp/iis/htm/asp/perf7xnp.htm">Data Access Performance</A></li>

	<LI><A HREF="/iishelp/iis/htm/asp/perf1w13.htm">Performance and Scalability Testing</A></li>
</UL>

<P>For more information about designing Web applications, see <A HREF="/iishelp/iis/htm/asp/eadg8e43.htm">Design Decisions</A>.</P>
<hr class="iis" size="1">
<p align="center"><em><a href="../../../common/colegal.htm">&copy; 1997-2001 Microsoft Corporation. All rights reserved.</a></em></p>
</BODY>
</HTML>
