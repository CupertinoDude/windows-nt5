<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html dir=ltr><head><title>Including Files</title>

<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script> 

 

<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT>

<META NAME="DESCRIPTION" CONTENT="Explains how to use server-side include directives to include a file in an ASP file. Provides performance tips and script samples."><META HTTP-EQUIV="Content-Type" content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">

<h1><a name="H1_37774682">Including Files</a></h1>


<p><Em>Server-side include</Em> directives give you a way to insert the content of another file into a file before the Web server processes it. ASP implements only the <strong><A HREF="../core/iisiinc.htm">#include</A></strong> directive of this mechanism. To insert a file into an .asp file, use the following syntax:</p>
 
<pre>&lt;!-- #include virtual | file ="<em>filename</em>" --&gt; </pre>

<p>The <strong>virtual</strong> and <strong>file</strong>  keywords  indicate the type of path you are using to include the file, and <em>filename</em> is the path and file name of the file you want to include.</p>

<p>Included files do not require a special file name extension; however, it is considered good programming practice to give included files an .inc extension to distinguish them from other types of files.</p>

<h2><a name="usingthevirtualkeyword">Using the Virtual Keyword</a></h2>

<p>Use the <strong>virtual </strong> keyword to indicate a path beginning with a <Em>virtual directory</Em>.  For example, if a file named Footer.inc resides in a virtual directory named /Myapp, the following line would insert the contents of Footer.inc into the file containing the line:</p>

<pre>&lt;!-- #include virtual ="/myapp/footer.inc" --&gt;</pre>

<h2><a name="usingthefilekeyword">Using the File Keyword</a></h2>

<p>Use the <strong>file</strong> keyword to indicate a <em>relative</em> path. A relative path begins with the directory that contains the including file. For example, if you have a file in the directory Myapp, and the file Header1.inc is in Myapp\Headers, the following line would insert Header1.inc in your file:</p>

<pre>&lt;!-- #include file ="headers\header1.inc" --&gt;</pre>

<p>Note that the path to the included file, Headers\header1.inc, is relative to the including file; if the script containing this <strong>#include</strong> statement is not in the directory /Myapp, the statement would not work.</p>

<p>You can also use the <strong>file</strong> keyword with the syntax (<code>..\</code>) to include a file from a parent, or higher-level, directory if the <strong>Enable Parent Paths</strong> option is selected in the <a href="javascript://" onclick="Activate(); return false">Internet Information Services snap-in.</a>

<script language="javascript">
<!--
function Activate() {
if (navigator.appName == "Microsoft Internet Explorer"){
	window.open("../core/iisnapin.htm", "NewWin",'toolbar=no, left=200, top=200, scrollbars=no, resizeable=no,  width=350, height=350');
	}
	else if (navigator.appName == "Netscape") {
		window.open("../core/iisnapin.htm", "NewWin",  'toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=yes,resizable=0,width=350,height=350,top=200,left=200');
	}
}
//-->
</script>  For instructions, see <a href="../../../iis/htm/core/iiwarndh.htm">Configuring ASP Applications</a>.</p>


<h2><a name="H2_37777384">Location of Included Files</a></h2>

<p>ASP detects changes to an included file regardless of its location and inserts the files content the next time a browser requests an .asp file which includes this file. However, in general, it is easier to secure include files if they reside within the same application or Web site. For better security, it is advisable to place include files in a separate directory within your application, such as \Includes, and apply only appropriate Execute (Web server) permissions. For more information, see <A HREF="../core/iiwspsc.htm">Setting Web Server Permissions</A>.</P>

<p><strong><span style="color: #0000FF"><font color="#0000FF">Important</font></span></strong>&nbsp;&nbsp;&nbsp;By default, Web server Read permissions are applied to all files.  However, to prevent users from viewing the contents of your include files, disable Read permissions for the Include directory. </p>

<h2><a name="includingfilesdosanddonts">Including Files: Tips and Cautions</a></h2>

<p>An included file can, in turn, include other files. An .asp file can also include the same file more than once, provided that the <strong>#include</strong> directives do not cause a loop. For example, if the file First.asp includes the file Second.inc, Second.inc must not in turn include First.asp. Nor can a file include itself. ASP detects such loop or nesting errors, generates an error message, and stops processing the requested .asp file.</p>

<p>ASP includes files before executing script commands. Therefore, you cannot use a script command to build the name of an included file. For example, the following script would not open the file Header1.inc because ASP attempts to execute the <strong>#include</strong> directive before it assigns a file name to the variable <code>name</code>.</p>

<pre>&lt;!--  This script will fail --&gt;
&lt;% name=(header1 &amp; ".inc") %&gt; 
&lt;!-- #include file="&lt;%= name %&gt;" --&gt;</pre>

<p>Scripts commands and procedures must be entirely contained within the script delimiters &lt;% and %&gt;, the HTML tags &lt;SCRIPT&gt; and &lt;/SCRIPT&gt;, or the HTML tags &lt;OBJECT&gt; and &lt;/OBJECT&gt;. That is, you cannot open a script delimiter in an including .asp file, then close the delimiter in an included file; the script or script command must be a complete unit. For example, the following script would not work:</p>

<pre>&lt;!-- This script will fail --&gt;
&lt;%
  For i = 1 To n
    <em>statements in main file</em>
    &lt;!--  #include file="header1.inc" --&gt;
  Next
%&gt;</pre>

<p>The following script, however, would work:</p>

<pre>&lt;% 
  For i = 1 to n
    <em>statements in main file</em>
%&gt; 
&lt;!--  #include file="header1.inc"   --&gt;
&lt;% Next %&gt;</pre>

<p><strong>Note</strong>&nbsp;&nbsp;&nbsp;If the file that your ASP script includes contains a large number of functions and variables that are unused by the including script, the extra resources occupied by these unused structures can adversely affect performance, and ultimately decrease the scalability of your Web application. Therefore, it is generally advisable to break your include files into multiple smaller files, and include only those files required by your server-side script, rather than include one or two larger include files that may contain superfluous information.</p>

<p>Occasionally, it may be desirable to include a server-side file by using the HTML &lt;SCRIPT&gt;&lt;/SCRIPT&gt; tags. For example, the following script includes a file (by means of a relative path) that can be executed by the server:</p>

<pre>&lt;SCRIPT LANGUAGE="VBScript" RUNAT=SERVER SRC="Utils\datasrt.inc"&gt;&lt;/SCRIPT&gt;</pre>


<P>The following table shows the correct syntax for including files with the SRC attribute by means of either virtual or relative paths:</P>

<table border="1" cellpadding="4" cellspacing="1" width="100%">
<tr>
<!--Column 1--><th width="15%" bgcolor="#C0C0C0" align="Left" valign="top">Type of Path</th>
<!--Column 2--><th width="33%" bgcolor="#C0C0C0" align="Left" valign="top">Syntax</th>
<!--Column 3--><th width="33%" bgcolor="#C0C0C0" align="Left" valign="top">Example</th>
</tr>
<tr>
<!--Column 1--><td width="15%" valign="Top">Relative</td>
<!--Column 2--><td width="33%" valign="Top">SRC="<EM>Path\Filename</EM>"</td>
<!--Column 3--><td width="33%" valign="Top">SRC="Utilities\Test.asp"</td>
</tr>
<tr>
<!--Column 1--><td width="15%" valign="Top">Virtual</td>
<!--Column 2--><td width="33%" valign="Top">SRC="/<EM>Path/Filename</EM>"</td>
<!--Column 3--><td width="33%" valign="Top">SRC="/MyScripts/Digital.asp"</td>
</tr>
<tr>
<!--Column 1--><td width="15%" valign="Top">Virtual</td>
<!--Column 2--><td width="33%" valign="Top">SRC="\<EM>Path\Filename</EM>"</td>
<!--Column 3--><td width="33%" valign="Top">SRC="\RegApps\Process.asp"</td>
</tr>

</table>




<p><strong>Note</strong>&nbsp;&nbsp;&nbsp;You should not put any programmatic logic between the &lt;SCRIPT&gt; tags when including by this method; use another set of &lt;SCRIPT&gt; tags to add such logic.</p>


<hr class="iis" size="1">
<p align="center"><em><a href="/iishelp/common/colegal.htm">&copy; 1997-2001 Microsoft Corporation. All rights reserved.</a></em></p>

</font>
</body>
</html>
