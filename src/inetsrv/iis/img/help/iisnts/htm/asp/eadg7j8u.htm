<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Simplify Development With Process Isolation</TITLE>
<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script>
<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT><META NAME="DESCRIPTION" CONTENT="Internet Information Services reference information">
<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services"> 
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<H2><A NAME="_k2_simplify_development_with_process_isolation"></A><SUP></SUP>Simplify Development With Process Isolation</H2>

<P>In earlier versions of IIS, all ISAPI applications (including ASP) shared the resources and memory of the server process. Although this provided fast performance, unstable components could cause the server to crash—not an acceptable behavior for a mission-critical application such as IIS. To make matters worse, in-process components couldn't be unloaded unless the server was restarted—which meant that modifying existing components would affect all sites that shared the same server, whether they were directly affected by the upgrade or not.</P>

<P>Thanks to close integration with Component Services, applications in IIS version 4.0 and above can be started in an isolated process. There are two reasons for doing this:

<OL>
	<LI>Component development; rather than taking down the entire server to update a single component, you can stop and restart just a single application. In earlier versions of IIS, to add an updated component to an application, or an entirely new application, you previously had to stop the Web service, replace the old DLL with your new version in its shared location on the server, and restart the Web service again. Now with an isolated process, you can update a production Web site without shutting down all applications.</li>

	<LI>Process isolation, which limits the effects of a crash to the single application that caused it. In addition to protecting your primary Web service from the crash, the application can be configured to restart automatically as often as you like. In the case of an application fatal error, the application's process is automatically terminated. Because the application is running in the Component Services system process, all transactions in progress are aborted. The Windows event log stores a record of the event, and Component Services restarts the application. The only clients affected by the failure are those with outstanding requests to that specific application.</li>
</OL>

<H4>&nbsp;Process Isolation</H4>

<P>If you decide to run your application as a separate process, or with other applications in a single pooled process, you will need to select <B>High (Isolated) </B>or<B> Medium (Pooled) </B>from the<B> Application Protection </B>drop-down list on the<B> Home Directory</B> or <B>Virtual Directory</B> property sheet. You should first create an application for your application starting-point directory, if you haven't already done so. Components that will run in the new process must be installed into the appropriate COM application. For more information, see the Component Services documentation.</P>
<hr class="iis" size="1">
<p align="center"><em><a href="../../../common/colegal.htm">&copy; 1997-2001 Microsoft Corporation. All rights reserved.</a></em></p>
</BODY>
</HTML>
