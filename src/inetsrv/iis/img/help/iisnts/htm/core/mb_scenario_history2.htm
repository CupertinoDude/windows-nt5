<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Metabase_History_Scenario_2">
<meta name="description" content="Metabase History Scenario.">
<title>Metabase History Scenario 2</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Metabase History Scenario 2</h1><p>This scenario illustrates how the metabase history feature works
under the following conditions:</p><ul><li>There are changes pending in the in-memory metabase.</li><li>MetaBase.xml is write-locked.</li></ul><p>What you will learn:</p><p></p><ul><li>How IIS behaves when the MetaBase.xml file is write-locked and
the in-memory metabase is written to disk.</li></ul><p><b>Action taken</b>:   A write-to-disk event
occurs:</p><p>IIS performs a series of verifications. See <a href="mb_history_write2disk.htm"><b>Writing the Metabase to Disk</b></a>
for more information about the verifications.</p><p><img src="MB_Scenario_History2.gif" alt="Describes this scenario."></p><ol><li>IIS verifies that there are changes pending in the in-memory
metabase.</li><li>IIS locks the in-memory metabase to prevent writes.</li><li>To determine the major version number, IIS looks within the
in-memory metabase for the <b>HistoryMajorVersionNumber</b>
value.</li><li>IIS creates a temporary file containing the in-memory metabase
configuration, and the value of the <b>
HistoryMajorVersionNumber</b> property that was determined in step
3 is written within the temporary file.</li><li>IIS unlocks the in-memory metabase to allow writes.</li><li>IIS copies the temporary file to the history folder and renames
the file using the major and minor version numbers.</li><li>IIS verifies whether the MetaBase.xml file is write-locked.
&lt;Failed verification.&gt;</li><li>Because the MetaBase.xml file is write-locked, the MetaBase.xml
file is not overwritten with the temporary file and an error is
sent to the event log.</li></ol><p><img src="note.gif" alt="note"><b>
      Note
      </b>This is the only situation in which the
temporary file is not deleted by IIS. Along with the event log
error, this can be valuable information to remember when
troubleshooting.</p><p>A particular issue of concern regarding this scenario is when
IIS is shut down and the MetaBase.xml file is write-locked. In this
case, when IIS is restarted, the configuration that is copied into
the in-memory metabase from the MetaBase.xml file does not contain
the latest changes. To recover from this issue, you can compare the
MetaBase.xml file with the latest history file to determine the
changes that were made and then write the changes to MetaBase.xml
or re-apply the changes to the in-memory metabase. This situation
can be avoided by using a text editor, such Notepad, that does not
write-lock files.</p><div><p><b>Related Topics</b></p><ul><li>For more information about starting IIS, see <a href="mb_startingiis.htm"><b>Starting IIS</b></a>.</li><li>For more information about stopping IIS, see <a href="mb_stoppingiis.htm"><b>Stopping IIS</b></a>.</li></ul></div><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
