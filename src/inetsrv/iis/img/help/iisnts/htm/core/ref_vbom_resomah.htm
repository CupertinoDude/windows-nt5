<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="AddHeader">
<meta name="description" content="Internet Information Services reference information">
<title>AddHeader</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h3>AddHeader</h3><p>The <b>AddHeader</b> method adds a new HTML header and value to
the response sent to the client. It does not replace an existing
header of the same name. Once a header has been added, it cannot be
removed.</p><h6>Syntax</h6><p><b>Response.AddHeader</b><i>HeaderName</i><b>,</b><i>
HeaderValue</i></p><p><i> </i></p><h6>Parameters</h6><dl><dt><i>HeaderName</i></dt><dd>A string that indicates the name of the new header.<br></dd><dt><i>HeaderValue</i></dt><dd>A string that indicates the initial value of the new
header.</dd></dl><h6>Note</h6><p>If a client is configured to return response headers back to the
server on a subsequent request, you may use <b>
Request.ServerVariables</b> to retrieve the custom header value.
"HTTP_" will be pre-pended to the custom header name. For example,
if you add a header with this code:</p><pre><code>&lt;% Response.AddHeader "CustomHeader", "CustomValue" %&gt;</code></pre><p>You can retrieve the header if a special client returns it to
the server on the next request with this code:</p><pre><code>&lt;% ReturnedValue = Request.ServerVariables("HTTP_CustomHeader") %&gt;</code></pre><p>To avoid name ambiguity, <i>HeaderName</i> should not contain
any underscore (_) characters. The <b>ServerVariables</b>
collection interprets underscores as dashes in the header name. For
example, the following script causes the server to search for a
header named MY-HEADER.</p><pre><code>&lt;% Request.ServerVariables("HTTP_MY_HEADER") %&gt;</code></pre><p>If another <b>Response</b> method can provide the functionality
you require, it is recommended that you use that method instead.
For example, to send a custom value and have it returned to your
Web application on a subsequent request without relying on the
configuration of the client, you can use <b>Response.Cookies</b>
and <b>Request.Cookies</b>; or to set cache control for a response,
use <b>Response.CacheControl</b>.</p><p>Because the HTTP protocol requires that all headers be sent
before content, you must modify all outgoing headers before your
ASP script generates any output. In IIS 4.0, this meant that you
had to call <b>AddHeader</b> in your script before any output was
sent to the client, such as output generated by HTML code or the <a href="ref_vbom_resomwrite.htm"><b>Write</b></a> method. In IIS
versions 5.0 or later, response buffering is on by default.
Therefore, you can call the <b>AddHeader</b> method at any point in
the script, as long as it precedes any calls to <a href="ref_vbom_resomflush.htm"><b>Flush</b></a>. You can enable or
disable response buffering by setting the metabase property <b><a href="ref_mb_aspbufferingon.htm"><b>AspBufferingOn</b></a></b> or making a
call to Response.Buffer in an ASP script.</p><p>The following .asp file illustrates this point.</p><pre><code>&lt;HTML&gt;
Here's some text on your Web page.
' This header tells proxy servers using HTTP/1.0 not to cache this request.
&lt;% Response.AddHeader "Pragma", "no-cache" %&gt;
&lt;% Response.Flush %&gt; 
&lt;% Response.Write("Pragma is set to no-cache") %&gt; 
&lt;/HTML&gt;</code></pre><p>In the preceding example, because the page is buffered by
default, the server will not send output to the client until all
the scripts on the ASP page have been processed or until the <a href="ref_vbom_resomflush.htm"><b>Flush</b></a> method is called.
If the call to <b>AddHeader</b> appeared after the call to <b>
Flush</b> in the preceding example, the script would generate a
run-time error.</p><h6>Example</h6><p>You can use <b>AddHeader</b> to send multiple copies of the same
header with different values, as with the WWW-Authenticate headers.
The following example uses the <b>AddHeader</b> method to request
that the client use Basic authentication.</p><pre><code>&lt;% Response.Addheader "WWW-Authenticate", "BASIC" %&gt;</code></pre><p>The preceding script only informs the client browser which type
of authentication to use; it will not tell your Web server to
enable Basic authentication for the application.</p><h6>Applies To</h6><p><a href="ref_vbom_reso.htm"><b>Response Object</b></a></p><h6>See Also</h6><p><a href="ref_vbom_resomflush.htm"><b>Flush</b></a>, <a href="ref_vbom_resomwrite.htm"><b>Write</b></a>, <a href="ref_vbom_resopb.htm"><b>Buffer</b></a></p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
