<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Edit-While-Running_Scenario_8">
<meta name="description" content="Edit-While-Running Scenario.">
<title>Edit-While-Running Scenario 8</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Edit-While-Running Scenario 8</h1><p>This scenario illustrates how edit-while-running works under the
following conditions:</p><ul><li>MetaBase.xml contains a missing XML end tag and therefore
cannot be successfully parsed.</li></ul><p>What you will learn:</p><ul><li>How IIS behaves when MetaBase.xml is saved and cannot be
parsed.</li><li>How IIS names error files in the history folder.</li></ul><p><img src="note.gif" alt="note"><b>
      Note
      </b>For the purpose of this scenario, it is not
important to know the values contained within the metabase; only
the version number of the metabase files are important.</p><b>Step 1:</b><br>
An administrator opens MetaBase.xml using Notepad, inadvertently
deletes an XML end tag, and saves MetaBase.xml.<br><br><p><img src="MB_Scenario_EWR8step1a.gif" alt="Describes step 1a of this scenario."></p><p>When MetaBase.xml is edited and saved, the following
happens:</p><ol><li>IIS receives a file change notification that the MetaBase.xml
file has been saved.</li><li>IIS looks within the MetaBase.xml file for the <b>
HistoryMajorVersionNumber</b> value.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value that was found in step
2, with the highest minor version number.</li><li>IIS attempts to parse MetaBase.xml and determines that there is
a fatal error, which is the missing XML end tag. IIS copies
MetaBase.xml into the history folder and renames the file to
MetaBaseError_0000000002.xml.</li><li>IIS sends an error to the event log.</li><li>The in-memory metabase is saved to disk, and a new history file
is created.</li></ol><p><img src="MB_Scenario_EWR8step1b.gif" alt="Describes step 1b of this scenario."></p><p>In this case, the in-memory metabase is written to disk to
overwrite the non valid MetaBase.xml file. Changes that were made
to the non valid MetaBase.xml file are not applied to the in-memory
metabase.</p><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
