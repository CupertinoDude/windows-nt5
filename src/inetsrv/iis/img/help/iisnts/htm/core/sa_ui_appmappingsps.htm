<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="App_Mappings_Property_Sheet">
<meta name="description" content="">
<title>App Mappings Property Sheet</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<p><b>App Mappings Property Sheet</b></p><p>Use this property sheet to map file name extensions to the
program or interpreter that processes those files. Mapped
applications include Internet Server API (ISAPI) applications,
Active Server Pages (ASP) applications, Internet Database Connector
(IDC) applications, and files that use server-side include
directives. For example, when the Web server receives a request for
a page with an .asp file name extension, it uses the application
mapping to determine that the executable file asp.dll should be
called to process the page.</p><p><b>Cache ISAPI Applications</b></p><p>Internet Server API DLLs can be loaded and cached so that
further requests can be processed without calling the application
again. Most ISAPI applications (including Active Server Pages)
benefit from caching. You should clear this option only for special
circumstances, such as debugging ISAPI applications.</p><p>If the same ISAPI application has been loaded and cached by more
than one Web site on a server, then clearing this option for the
server does not unload the application from memory. You must clear
this option for all Web sites that use the application. Clearing
this option does not unload running applications. Only subsequent
requests are not cached.</p><p><b>Application Mappings</b></p><p>The table lists the file name extension associated with an
executable file and the name of the executable file. If the word
"(all)" appears in the list, all verbs will be sent to the
application; "(all)" is not a verb.</p><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>In the App Mappings property sheet for
IIS 4.0, there was a list of verbs in the <b>Exclusions</b>
column. For IIS 5.0 and 5.1, this has changed to a <b>
Verbs</b> column which lists the HTTP verbs that will be run by the
application.</p>
<p><b>To add an application mapping</b></p><ol><li>Click <b>Add</b>.</li><li>Enter the extension for the executable file in the <b>Ext</b>
column.</li><li>Enter the physical path to the executable file in the <b>
Executable Path</b> column.</li><li>Enter the HTTP Verbs that the executable file should pass to
the application. To specify that all verbs should be passed to the
application, leave this field blank (the field will be populated
with the term "(All)" when you click <b>OK</b>). Separate method
names with a comma (,).</li><li>Select the <b>Script Engine</b> check box if you want the
application to run in a directory without Execute permissions.</li><li>Select the <b>Check for File</b> check box to instruct the Web
server to verify the existence of the requested script file and to
ensure that the requesting user has access permission for that
script file.</li><li>Click <b>OK</b>.</li></ol><p>To remove an application mapping, select the extension and click
<b>Remove</b>.</p><p>The <b>Script Engine</b> setting is intended primarily for
script-based applications such as ASP and IDC that are mapped to an
interpreter. For a script-mapped application to run, either the <b>
Script</b> or <b>Execute</b> access check box must be selected for
the directory in which the application is located. To allow only
script-mapped applications to run, use the <b>Script</b> access. To
allow both script-mapped applications and executable files (.exe
and .dll) to run, use the <b>Execute</b> access.</p><p>If you select the <b>Check for File</b> check box and the script
does not exist or the user does not have access permission for the
script file, the appropriate warning message is returned to the
browser and the script engine is not invoked. This option can be
useful for scripts mapped to non-CGI executables like the Perl
interpreter that do not send a CGI response if the script is not
accessible. Because the script will be opened twice, once by the
server and once by the script engine, there is some performance
cost to enabling this option.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
