<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Including_Files">
<meta name="description" content="Explains how to use server-side include directives to include a file in an ASP file. Provides performance tips and script samples.">
<title>Including Files</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Including Files</h1><p><i>Server-side include</i> directives give you a way to insert
the content of another file into a file before the Web server
processes it. ASP implements only the <b>#include</b> directive of
this mechanism. To insert a file into an .asp file, use the
following syntax:</p><pre>
&lt;!-- #include virtual | file ="<i>filename</i>" --&gt; 
</pre><p>The <b>virtual</b> and <b>file</b> keywords indicate the type of
path you are using to include the file, and <i>filename</i> is the
path and file name of the file you want to include.</p><p>Included files do not require a special file name extension;
however, it is considered good programming practice to give
included files an .inc extension to distinguish them from other
types of files.</p><h2><a name="usingthevirtualkeyword">
Using the Virtual Keyword</a></h2><p>Use the <b>virtual</b> keyword to indicate a path beginning with
a <i>virtual directory</i>. For example, if a file named Footer.inc
resides in a virtual directory named /Myapp, the following line
would insert the contents of Footer.inc into the file containing
the line:</p><pre>
&lt;!-- #include virtual ="/myapp/footer.inc" --&gt;
</pre><h2><a name="usingthefilekeyword">Using
the File Keyword</a></h2><p>Use the <b>file</b> keyword to indicate a <i>relative</i> path.
A relative path begins with the directory that contains the
including file. For example, if you have a file in the directory
Myapp, and the file Header1.inc is in Myapp\Headers, the following
line would insert Header1.inc in your file:</p><pre>
&lt;!-- #include file ="headers\header1.inc" --&gt;
</pre><p>Note that the path to the included file, Headers\header1.inc, is
relative to the including file; if the script containing this <b>
#include</b> statement is not in the directory /Myapp, the
statement would not work.</p><p>You can also use the <b>file</b> keyword with the syntax
(<code>..\</code>) to include a file from a parent, or
higher-level, directory if the <b>Enable Parent Paths</b> option is
selected in the Internet Information Services snap-in.</p><h2><a name="H2_37777384">Location of Included
Files</a></h2><p>ASP detects changes to an included file regardless of its
location and inserts the files content the next time a browser
requests an .asp file which includes this file. However, in
general, it is easier to secure include files if they reside within
the same application or Web site. For better security, it is
advisable to place include files in a separate directory within
your application, such as \Includes, and apply only appropriate
Execute (Web server) permissions.</p><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>By default, Web server Read permissions are
applied to all files. However, to prevent users from viewing the
contents of your include files, disable Read permissions for the
Include directory.</p>
<h2><a name="includingfilesdosanddonts">Including Files: Tips and
Cautions</a></h2><p>An included file can, in turn, include other files. An .asp file
can also include the same file more than once, provided that the
<b>#include</b> directives do not cause a loop. For example, if the
file First.asp includes the file Second.inc, Second.inc must not in
turn include First.asp. Nor can a file include itself. ASP detects
such loop or nesting errors, generates an error message, and stops
processing the requested .asp file.</p><p>ASP includes files before executing script commands. Therefore,
you cannot use a script command to build the name of an included
file. For example, the following script would not open the file
Header1.inc because ASP attempts to execute the <b>#include</b>
directive before it assigns a file name to the variable <code>
name</code>.</p><pre>
&lt;!--  This script will fail --&gt;
&lt;% name=(header1 &amp; ".inc") %&gt; 
&lt;!-- #include file="&lt;%= name %&gt;" --&gt;
</pre><p>Scripts commands and procedures must be entirely contained
within the script delimiters &lt;% and %&gt;, the HTML tags
&lt;SCRIPT&gt; and &lt;/SCRIPT&gt;, or the HTML tags &lt;OBJECT&gt;
and &lt;/OBJECT&gt;. That is, you cannot open a script delimiter in
an including .asp file, then close the delimiter in an included
file; the script or script command must be a complete unit. For
example, the following script would not work:</p><pre>
&lt;!-- This script will fail --&gt;
&lt;%
  For i = 1 To n
    <i>statements in main file</i>
    &lt;!--  #include file="header1.inc" --&gt;
  Next
%&gt;
</pre><p>The following script, however, would work:</p><pre>
&lt;% 
  For i = 1 to n
    <i>statements in main file</i>
%&gt; 
&lt;!--  #include file="header1.inc"   --&gt;
&lt;% Next %&gt;
</pre><p><img src="note.gif" alt="note"><b>
      Note
      </b>If the file that your ASP script includes contains
a large number of functions and variables that are unused by the
including script, the extra resources occupied by these unused
structures can adversely affect performance, and ultimately
decrease the scalability of your Web application. Therefore, it is
generally advisable to break your include files into multiple
smaller files, and include only those files required by your
server-side script, rather than include one or two larger include
files that may contain superfluous information.</p>
<p>Occasionally, it may be desirable to include a server-side file
by using the HTML &lt;SCRIPT&gt;&lt;/SCRIPT&gt; tags. For example,
the following script includes a file (by means of a relative path)
that can be executed by the server:</p><pre>
&lt;SCRIPT LANGUAGE="VBScript" RUNAT=SERVER SRC="Utils\datasrt.inc"&gt;&lt;/SCRIPT&gt;
</pre><p>The following table shows the correct syntax for including files
with the SRC attribute by means of either virtual or relative
paths:</p><table width="" height=""><tr><th width="" height="" colspan="1" rowspan="1">Type of Path</th><th width="" height="" colspan="1" rowspan="1">Syntax</th><th width="" height="" colspan="1" rowspan="1">Example</th></tr><tr><td width="" height="" colspan="1" rowspan="1">Relative</td><td width="" height="" colspan="1" rowspan="1">SRC="<i>Path\Filename</i>"</td><td width="" height="" colspan="1" rowspan="1">SRC="Utilities\Test.asp"</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Virtual</td><td width="" height="" colspan="1" rowspan="1">SRC="/<i>Path/Filename</i>"</td><td width="" height="" colspan="1" rowspan="1">SRC="/MyScripts/Digital.asp"</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Virtual</td><td width="" height="" colspan="1" rowspan="1">SRC="\<i>Path\Filename</i>"</td><td width="" height="" colspan="1" rowspan="1">SRC="\RegApps\Process.asp"</td></tr></table><p><img src="note.gif" alt="note"><b>
      Note
      </b>You should not put any programmatic logic between
the &lt;SCRIPT&gt; tags when including by this method; use another
set of &lt;SCRIPT&gt; tags to add such logic.</p>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
