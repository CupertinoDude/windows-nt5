<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Transaction_Processing_Technology">
<meta name="description" content="Internet Information Services reference information">
<title>Transaction Processing Technology</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Transaction Processing Technology</h1><p>The primary technology that allows Active Server Pages (ASP) to
participate in a transaction is Component Services, which provides
IIS with transaction services as well as an environment for hosting
component instances. One of the benefits of this environment is the
ability to create attributes for individual component instances.
When IIS compiles script in an ASP page, a new instance of the IIS
Web Application Manager (IISWAM) is created. IISWAM is a Component
Object Model (COM) component that IIS uses to manage applications.
If the script contains the @TRANSACTION directive, the instance of
IISWAM will be declared within the transaction environment with an
appropriate transaction property. For example, if you include
@TRANSACTION = Required in your script, you are telling Component
Services that the instance of IISWAM that it creates should be run
in a transaction. If the script in an ASP page creates instances of
any other components that have been registered with Component
Services, Component Services will treat them as part of the same
transaction. The following diagram illustrates the relationship
between ASP and IISWAM.</p><p><img src="iiswam.gif" alt="IIS Web Application Manager"></p><p>Component Services provides transaction service to IIS through
two different layers. At the lowest layer, Component Services
interacts with the Microsoft<sup>®</sup> Distributed
Transaction Coordinator (MS DTC) to guarantee that transactions
meet the ACID properties (Atomic, Consistent, Isolated, Durable) of
a reliable transaction processing system. Component Services links
component instances to MS DTC through two mechanisms: resource
managers and resource dispensers.</p><p>A resource manager is a system service that manages durable
data. Component Services supports resource managers that implement
either the OLE Transactions protocol, such as
Microsoft<sup>®</sup> SQL Server 6.5, or the X/Open DTP XA
standard. Resource dispensers are similar to resource managers in
that they work with components to share state information. However,
this information is not durable. For example, resource dispensers
can manage pools of database connections for components that use
standard open database connectivity (ODBC) interfaces. The ODBC 3.0
Driver Manager is the resource dispenser for ODBC connections.</p><p>For more information on Component Services transactions, see <a href="asp_basp_understandtrans.htm"><b>Understanding Transactions</b></a>as well as the
Component Services and Message Queuing documentation in the
Platform SDK. To view samples of transactional
scripting, see <a href="samp_asp_scrptstxn.htm"><b>ASP Transaction Services</b></a> in ASP Samples.</p><div class="search-terms">(The following words are used by Search;
they are not intended to be displayed on the page.) MSMQ</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
