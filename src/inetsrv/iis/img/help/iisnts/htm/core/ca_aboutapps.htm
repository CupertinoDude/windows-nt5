<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="About_Applications">
<meta name="description" content="Conceptual information about Web applications. Includes diagrams of application-directory structure and information on isolated (out-of-process) applications.">
<title>About Applications</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>About Applications</h1><a name="H1_37777278"></a><p>An IIS <i>application</i> is any file that is executed within a
defined set of directories in your Web site. When you create an
application, you use the <a href="gs_iissnapin.htm"><b>IIS snap-in</b></a>
to designate the application's <i>starting-point directory</i>
(also called an <i>application root</i>) in your Web site. Every
file and directory under the starting-point directory in your Web
site is considered part of the application until another
starting-point directory is found. You thus use directory
boundaries to define the scope of an application.</p><h2><a name="app_1">Application Starting-Point</a></h2><p>In the <a href="gs_iissnapin.htm"><b>IIS snap-in</b></a>, an
application starting point is indicated by a package icon. The
following graphic shows an application with a starting-point
directory named /SiteAdmin:</p><img src="ca_appsrtptdir.gif" alt="Application starting point named /SiteAdmin."><p>The files in the \Login, \Order, and \SetupDB directories are
considered part of the /SiteAdmin application.</p><p>You can have more than one application per Web site. The default
Web site that is created when you install Internet Information
Services is an application starting point.</p><p>Internet Information Services supports ASP, ISAPI, CGI, IDC, and
SSI applications. An application can share information among the
files in the application; for example, ASP applications share
context flow, session state, and variable settings across the pages
of the application.</p><h2><a name="app_2">Application Protection</a></h2><p>IIS 5.1 offers three levels of application protection.
Application protection refers to the process in which applications
are run. In IIS 4.0, applications could be set to run either
in the same process as Web services (Inetinfo.exe) or in a process
isolated from Web services (DLLHost.exe). In IIS 5.0 and 5.1,
there is a third option: Applications can be run in a pooled
process (another instance of DLLHost.exe).</p><p>These different options provide varying levels of protection
against situations where a misbehaving application fails and causes
the process in which it is running to stop responding. By default,
Web services (Inetinfo.exe) runs in its own process, and other
applications are run in a single, pooled process (DLLHost.exe). You
can then set high priority applications to run as isolated
processes (another instance of DLLHost.exe). For performance
reasons, you should not run more than 10 isolated applications.</p><p>The following graphic depicts the property sheet used to set
application protection properties.</p><img src="ca_websitepropui.gif" alt="The Home directory property sheet."><p>Application protection can only be set at an application's
starting-point directory.</p><h2>Application Performance</h2><p>There is a trade-off between performance and level of
application protection. Applications that run in the Web services
process (inetinfo.exe) result in higher performance with a greater
risk that a misbehaving application can cause the Web services to
become unavailable. The recommended configuration is to run
inetinfo.exe in its own process, run mission-critical applications
in their own processes, and run remaining applications in a shared,
pooled process. For more information, see <a href="dwa_des_defappbou.htm"><b>Defining Application Boundaries</b></a>.</p><p>You can set process options for components in the Component
Services administration tool. For more information, see the
Component Services documentation.</p><div class="search-terms">(The following words are used by Search;
they are not intended to be displayed on the page.) icons</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
