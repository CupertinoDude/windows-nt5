<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Database_Access_Component">
<meta name="description" content="Internet Information Services reference information">
<title>Database Access Component</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Database Access Component</h1><p>The Database Access Components (DAC) provide access to
information stored in databases or other tabular data
structures.  DAC includes ActiveX<sup>®</sup> Data Objects
(ADO), Open Database Connectivity (ODBC), and Object Linking and
Embedding for Databases (OLEDB). ASP can use these components to
easily integrate information from a variety of database sources,
like Microsoft® Access, SQL, Excel and other technologies.
Providing access to multiple types of data storage is called
Universal Data Access.</p><p>For information about developing applications that use Universal
Data Access see <a href="http://www.microsoft.com/isapi/redir.dll?prd=mdac" target="_New"><b>http://www.microsoft.com/data/</b></a> or the Microsoft
Data Access SDK in the Platform SDK.</p><p>ADO is the most commonly used Data Access Component because of
its ease of use. ADO has a library of seven objects with methods
and properties to help you access data. Each object can be created
using Server.CreateObject:</p><pre><code>&lt;% 
   ' Create two of the seven ADO objects.
   Set conn = Server.CreateObject("ADODB.Connection")
   Set rs = Server.CreateObject("ADODB.RecordSet")
%&gt;</code></pre><p><img src="note.gif" alt="note"><b>
      Note
      </b>ADO uses a lot of constants that are pre-defined in
a type library to keep the user from having to remember specific
values. To use the constants specified in the ADO Reference, you
must either include a file that contains information about the ADO
constants, or include a reference to the ADO type library in your
Global.asa file. The following example demonstrates using the ADO
type library to access constants.</p>
<p>For example, to use this line in an ASP file, you would have to
remember that 3 indicates Open Static and Lock Optimistic:</p><pre><code>&lt;% rs.Open "Customers", Conn, 3, 3 %&gt;
</code></pre><p>If you include the type library for ADO, you could use this
code:</p><pre><code>&lt;% rs.Open "Customers", Conn, adOpenStatic, adLockOptimistic %&gt;
</code></pre><p>To include the following type library in your application, put
this declaration in the Global.asa file.</p><pre><code>&lt;!-- METADATA TYPE="typelib" FILE="c:\program files\common files\system\ado\msado20.dll"--&gt;
</code></pre><p>For more information about type libraries and constants, see <a href="asp_basp_usingvariables.htm"><b>Using Variables and Constants</b></a>. For more information about data access, see <a href="asp_basp_accdatasource.htm"><b>Accessing a Data Source</b></a> and
<a href="dwa_ada_ada.htm"><b>Accessing Data with ASP</b></a>.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
