<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Metabase_Schema">
<meta name="description" content="Overview of the MBSchema.xml file.">
<title>Metabase Schema</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Metabase Schema</h1><p>The purpose of the metabase schema is to define the default
attributes of metabase properties and flags, and enforce which
nodes within the metabase configuration that properties and flags
can be written. Properties that are written to the metabase
configuration that adhere to the rules of the metabase schema are
said to be written in-schema. To write a property or flag value to
the metabase configuration that is not defined in the metabase
schema must be written as a custom property. For more information
about writing properties to the metabase configuration, see <a href="mb_config_writechanges.htm"><b>Writing Changes to MetaBase.XML</b></a>. </p><p>The metabase schema is stored in an XML formatted text file
called MBSchema.XML and written into the in-memory metabase when
IIS is started or re-started. By default the MBSchema.XML file is
found in the <code>%windir%\system32\inetsrv folder</code>. A
binary file called MBSchema_00000000h.bin is created when IIS is
started or restarted and the MBSchema.XML file has changed. The
sole purpose of the binary schema file is to enable faster IIS
startup times. The MBSchema_00000000h.bin file is a compiled
version of the MBSchema.XML file, and should not be modified or
deleted by administrators. For more information about the
MBSchema_00000000h.bin file, see <a href="mb_startingiis.htm"><b>Starting IIS</b></a>.</p><h2>Hierarchy of MBSchema.XML</h2><p>MBSchema.XML is an XML formatted text file with a hierarchical
structure of collections, properties, and flags. A collection is
simply a hierarchical location within the schema that contain
properties.  Properties are configuration objects that are
associated with IIS Admin Objects and their corresponding ABO
objects. All properties contain attributes, and some properties
also contain flags. Flags are identified by ABO by their unique bit
mask identifier.</p><h3>Collections within MBSchema.XML</h3><p>Collections are defined within MBSchema.XML using
&lt;Collection&gt; tags. A collection is written in the following
format:</p><p><code>&lt;Collection InternalName ="<i>CollectionName</i>" <i>
AttributeName</i>="<i>AttributeValue</i>"&gt;<br>
 &lt;/Collection&gt;</code></p><p>where <i>CollectionName</i> is the name of the collection, <i>
AttributeName</i> is the name of a collection attribute, and <i>
AttributeValue</i> is the value of the collection attribute.</p><p>The top level collection is called MetabaseBaseClass and is used
to set global settings that all of the other collections inherit
from. </p><p><b>Snippet of the MetabaseBaseClass collection:</b><br><code>&lt;Collection InternalName ="MetabaseBaseClass"
MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HIDDEN"&gt;<br>
 &lt;Property InternalName ="Location" Type="WSTR"
MetaFlags="PRIMARYKEY"/&gt;<br>
 &lt;/Collection&gt;</code></p><p>The collection directly following MetabaseBaseClass is called
IISConfigObject. All metabase properties that can be written to the
metabase are defined within the IisConfigObject collection. The
default values of attributes and flags for each property are
defined within this class for each property. Note: Only a few
properties contain flags.<br><br><b>Snippet of the IIsConfigObject collection</b></p><p><code>&lt;Collection InternalName ="IIsConfigObject"
MetaFlagsEx="NOTABLESCHEMAHEAPENTRY" MetaFlags="HASUNKNOWNSIZES |
HIDDEN"&gt;<br>
 &lt;Property InternalName ="KeyType" <br>    <br>    Type="STRING" <br>    UserType="IIS_MD_UT_SERVER" <br>    Attributes="NO_ATTRIBUTES" <br>    MetaFlags="PRIMARYKEY" <br>   
MetaFlagsEx="CACHE_PROPERTY_MODIFIED" <br>    DefaultValue=""/&gt;<br>    .<br>    .<br>
&lt;/Collection&gt;</code></p><p><b>Remaining Collections</b><br>
All remaining collections directly follow the IISConfigObject
collection and define at which locations in the metabase
configuration that each property can be written. Properties are
written within these collections in the following format:</p><p><code>&lt;Property InheritsPropertiesFrom
="IIsConfigObject:<i>PropertyName</i>"/&gt;</code></p><p><code>where <i>PropertyName</i> is the name of the
property.</code></p><p><code>Note that all properties written within these remaining
collections inherit their attribute values from the IIsConfigObject
collection because the IIsConfigObject collection is where all
property attributes and flags are defined.</code></p><h2>In- or Out-of-Schema Updates</h2><p>IIS does not allow ADSI or WMI to make updates to the metabase
configuration that are not defined in the metabase schema. Changes
to the metabase configuration that do not comply with the metabase
schema rules, and are written directly to the MetaBase.XML file may
not get written to the in-memory metabase or history file, and an
error or warning is sent to the event log.</p><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
