<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Writing_Procedures">
<meta name="description" content="Explains how to define and write procedures in the ASP scripting environment. Includes VBScript and JScript samples.">
<title>Writing Procedures</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Writing Procedures</h1><p>A <i>procedure</i> is a group of script commands that performs a
specific task and can return a value. You can define your own
procedures and call them repeatedly in your scripts.</p><p>You can place procedure definitions in the same .asp file that
calls the procedures, or you can put commonly used procedures in a
shared .asp file and use the <b>#include</b> directive to include
it in other .asp files that call the procedures. Alternatively, you
could encapsulate the functionality in a COM component.</p><h2><a name="H2_37777134">Defining
Procedures</a></h2><p>Procedure definitions can appear within &lt;SCRIPT&gt; and
&lt;/SCRIPT&gt; tags and must follow the rules for the declared
scripting language. Use the &lt;SCRIPT&gt; element for procedures
in languages other than the primary scripting language. However,
use the scripting delimiters (&lt;% and %&gt;) for procedures in
the primary scripting language.</p><p>When you use the HTML &lt;SCRIPT&gt; tag, you must use two
attributes to ensure server-side processing of the script. The
syntax for using the &lt;SCRIPT&gt; tag is:</p><pre>
&lt;SCRIPT LANGUAGE=JScript RUNAT=SERVER&gt;

  <i>procedure definition</i>

&lt;/SCRIPT&gt;
</pre><p>The RUNAT=SERVER attribute tells the Web server to process the
script on the server. If you do not set this attribute, the script
is processed by the client browser. The LANGUAGE attribute
determines the scripting language used for this script block. You
can specify any language for which you have the scripting engine
installed with the server. To specify VBScript, use the value
VBScript. To specify JScript, use the value JScript. If you do not
set the LANGUAGE attribute, the script block is interpreted in the
primary scripting language.</p><p>The commands in the script block must form one or more complete
procedures in the chosen scripting language. For example, the
following commands define the JScript procedure <b>
MyFunction</b>.</p><pre>
&lt;HTML&gt;
&lt;SCRIPT LANGUAGE=JScript RUNAT=SERVER &gt;

  function MyFunction()
  {
    Response.Write("You called MyFunction().")
  }
  
&lt;/SCRIPT&gt;
</pre><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>Do not include within server-side
&lt;SCRIPT&gt; tags any script commands that are not part of
complete procedures. Commands that are not part of a procedure may
cause unpredictable results because the code is executed in the
following order: Script blocks in non-default languages are
executed in order of appearance, then the inline code, and finally
the script blocks in the default language. In addition, you cannot
use the ASP output directive <code>&lt;%= %&gt;</code> within a
procedure. Instead, use <b>Response.Write</b> to send content to
the browser.</p>
<h2><a name="callingprocedures">Calling
Procedures</a></h2><p>To call procedures, include the name of the procedure in a
command. If you are calling JScript procedures from VBScript, you
must use parentheses after the procedure name; if the procedure has
no arguments, use empty parentheses. If you are calling either
VBScript or JScript procedures from JScript, always use parentheses
after the procedure name.</p><p>For VBScript, you can also use the <b>Call</b> keyword when
calling a procedure. However, if the procedure that you are calling
requires arguments, the argument list must be enclosed in
parentheses. If you omit the <b>Call</b> keyword, you also must
omit the parentheses around the argument list. If you use <b>
Call</b> syntax to call any built-in or user-defined function, the
function's return value is discarded.</p><p>The following example illustrates creating and calling
procedures by using two different scripting languages (VBScript and
JScript).</p><pre>
&lt;%@ LANGUAGE=VBScript %&gt;
&lt;HTML&gt; 
  &lt;BODY&gt;
  &lt;!-- Call the JScript procedure from within VBScript--&gt;
  &lt;% call printDate() %&gt;
  &lt;!--Call the VBScript procedure from within VBScrip--&gt;
&lt;% Echo %&gt; 
  &lt;BR&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;

&lt;%Sub Echo%&gt;
&lt;!--Note: this will not output anything unless the page is called with a query string like http://localhost/test.asp?x=1%20have&amp;y=a%20cunning&amp;z=plan --&gt;
&lt;%
  Response.Write "&lt;TABLE BORDER=1&gt;" &amp; _
    "&lt;TR&gt;&lt;TH&gt;Name&lt;/TH&gt;&lt;TH&gt;Value&lt;/TH&gt;&lt;/TR&gt;" 

  Set objQueryString = Request.QueryString 
  
  For Each strSelection In objQueryString
    Response.Write "&lt;TR&gt;&lt;TD&gt;" &amp; strSelection &amp; "&lt;/TD&gt;&lt;TD&gt;" &amp; _ 
    objQueryString(strSelection) &amp; "&lt;/TD&gt;&lt;/TR&gt;" 
  Next 

  Response.Write "&lt;/TABLE&gt;" 

End Sub 
%&gt;

&lt;SCRIPT LANGUAGE=JScript RUNAT=SERVER&gt; 

function printDate() 
{ 
  var x
 
  x = new Date() 

  Response.Write(x.toString()) 
  Response.Write("&lt;BR&gt;")
} 
&lt;/SCRIPT&gt;
</pre><p><img src="note.gif" alt="note"><b>
      Note
      </b>VBScript calls to JScript functions are <i>not</i>
case sensitive.</p>
<h2><a name="H2_37781124">Passing Arrays to
Procedures</a></h2><p>To pass an entire array to a procedure in VBScript, use the
array name followed by empty parentheses; in JScript, use empty
square brackets.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
