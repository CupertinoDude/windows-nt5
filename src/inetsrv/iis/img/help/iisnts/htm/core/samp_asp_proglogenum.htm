<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Logging_Module_Enumerator">
<meta name="description" content="Internet Information Services reference information">
<title>Logging Module Enumerator</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Logging Module Enumerator</h1><h6>Overview</h6><p>Multiple logging modules can lead to multiple problems if you
aren't prepared. This sample tool illustrates some techniques you
can use to create logging management tools of your own.</p><p>This sample tool serves two separate functions. If it is invoked
without command-line arguments, then it simply lists all logging
modules that currently have entries in the metabase on your server.
But if an ADsPath is given, such as IIS://LocalHost/W3SVC/3, then
the tool will try to determine what is considered the active
logging module for that metabase node, and will give you
information about that logging module.</p><h6>Code Tour</h6><p>To list the available logging modules, the <b>GetObject</b>
method is invoked to gain access to the IIS://LocalHost/Logging
node of the metabase. A <b>For ... Each</b> loop is then used to
enumerate the modules that are founded in that node.</p><p>Gathering information about a specific server's logging module
is a bit more involved. Because the only property at the server
level that indicates what logging module is currently in use by the
server is the <b>LogPluginClsId</b> property, this value must be
compared to each and every module listed at the //LocalHost level
until a match is found.</p><p><b>GetObject</b> is used to gain access to the list of logging
modules provided at the //LocalHost level. The CLSID of the logging
module is compared to the CLSID of each logging module provided in
this main list until a match is found. When a match is found, the
script tells you all it can about the logging module; if no match
is found between the CLSIDs, the script aborts with an error.</p><h6>Location</h6><p>This script is available in the Internet services directory, at
...\iissamples\sdk\admin\logenum.vbs.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
