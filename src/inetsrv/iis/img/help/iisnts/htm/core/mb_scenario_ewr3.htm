<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Edit-While-Running_Scenario_3">
<meta name="description" content="Edit-While-Running Scenario">
<title>Edit-While-Running Scenario 3</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Edit-While-Running Scenario 3</h1><p>This scenario illustrates how edit-while-running works under the
following conditions:</p><ul><li>The MetaBase.XML file is open for edits but not write-locked
when the in-memory metabase is written to disk.</li></ul><p>What you will learn:</p><ul><li>How edit-while-running handles the situation when the in-memory
metabase is written to disk and the MetaBase.XML file is open for
edits.</li></ul><p><b>Step 1:</b><br>
Open MetaBase.XML with a text editor, and change A (A=1) but do not
save or close the file. It is recommended that you use Microsoft
Notepad to edit the MetaBase.XML file because Notepad does not
write-lock files.</p><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>Changes made using Notepad do not write
to the MetaBase.XML file until the changes made in Notepad are
saved.</p><p><img src="MB_Scenario_EWR3step1.gif" alt="Describes step 1 of this scenario."></p><p><b>Step 2:</b><br>
Edit the value of C (C=1) in the in memory metabase, and write the
changes to disk.</p><ol><li>A temporary file is created with the contents of the in-memory
metabase.</li><li>The temporary file is copied to the history folder and renamed
by appending the <b>HistoryMajorVersionNumber</b> value to the
filename, and the minor version number is reset to zero.</li><li>The temporary file is copied over MetaBase.XML.</li><li>The temporary file is deleted.</li></ol><p><b>Step 3:</b><br>
Save changes made using the text editor, but do not close the text
editor.</p><p>When the changes are saved, the following happens:</p><ol><li>The version 5 MetaBase.XML is overwritten with the updated
version 4 MetaBase.XML file.</li><li>The difference between the corresponding history file
(MetaBase_0000000004_0000000000.XML) and MetaBase.XML are
determined, and the changes are written to the in-memory metabase
through the Admin Base Objects.</li><li>A new history file is created with the contents of the
corresponding history file and the changes that were sent to the
Admin Base Objects. The minor version number is incremented.
Because the <b>HistoryMajorVersionNumber</b> value within the
history file is 4, the filename in this case is
MetaBase_0000000004_0000000001.XML.</li></ol><p><img src="MB_Scenario_EWR3step3.gif" alt="Describes step 3 of this scenario."></p><p><b>Step 4:</b><br>
Using Notepad, edit B (B=2) but do not save or close the file.</p><p>The application, in this case Microsoft Notepad, is used to edit
MetaBase.XML. The MetaBase.XML file is not write-locked by this
application, and the values in the MetaBase.XML file do not change
until the changes made in Notepad are saved.</p><p><img src="MB_Scenario_EWR3step4.gif" alt="Describes step 4 of this scenario."></p><p><b>Step 5:</b><br>
Edit the value of A (A=2) and C (C=3) in the in-memory metabase,
and write the changes to disk.</p><ol><li>A temporary file is created with the contents of the in-memory
metabase.</li><li>The temporary file is copied to the history folder and renamed
by appending the version number to its name. The version number is
incremented, and the minor version number is reset to zero for the
file that is moved to the history folder.</li><li>The temporary file is copied over MetaBase.XML.</li><li>The temporary file is deleted.</li></ol><p><img src="MB_Scenario_EWR3step5.gif" alt="Describes step 5 of this scenario."></p><p><b>Step 6:</b><br>
Save the changes made in Notepad (B=2), and close the Notepad
application.</p><ol><li>When the changes made in Notepad are saved, the major version 6
MetaBase.XML file is overwritten with the updated major version 4
MetaBase.XML file.</li><li>The difference between the corresponding history file and
MetaBase.XML are determined, and the changes are written to the
in-memory metabase through Admin Base Objects.</li><li>A new history file is created with the contents of the
corresponding history file and the changes that were sent to the
Admin Base Objects. The minor version number is incremented.
Because the <b>HistoryMajorVersionNumber</b> value within the
history file is 4, the filename of the new history file in this
case is MetaBase_0000000004_0000000002.XML.</li></ol><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>The MetaBase.XML file will be out of
sync with the in-memory metabase until the in-memory metabase is
written to disk, as shown in step 7.</p><p><img src="MB_Scenario_EWR3step6.gif" alt="Describes step 6 of this scenario."></p><p><b>Step 7:</b><br>
Write the in-memory metabase to disk.</p><p><img src="MB_Scenario_EWR3step7.gif" alt="Describes step 7 of this scenario."></p><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
