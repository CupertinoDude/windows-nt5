<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Permission_Checker_Component">
<meta name="description" content="Internet Information Services reference information">
<title>Permission Checker Component</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Permission Checker Component</h1><p>The Permission Checker Component creates a <b>
PermissionChecker</b> object that uses the password authentication
protocols provided in Microsoft<sup>®</sup> Internet
Information Services (IIS) to determine whether a Web user has been
granted permissions to read a file.</p><p>You can use the Permission Checker component to customize an
ASP-based page for different types of users. For example, if a Web
page contains hyperlinks, you can use the Permission Checker
component to test whether the user has permissions for the target
Web pages. If the user does not have the proper permissions, you
can then omit or alter the hyperlinks to those pages the user may
not access.</p><h6>Syntax</h6><p><b>Set</b><i>oVar</i><b>= Server.CreateObject(
"MSWC.PermissionChecker" )</b></p><p> </p><h6>Parameters</h6><dl><dt><i>oVar</i></dt><dd>Specifies the name of the <b>PermissionChecker</b> object
created by the call to <b>Server.CreateObject</b>.<br></dd></dl><h6>Methods</h6><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><a href="ica_prm_ha.htm"><b>HasAccess</b></a></td><td width="" height="" colspan="1" rowspan="1">Determines whether the user has permissions to access a
specified file.</td></tr></table><p><img src="note.gif" alt="note"><b>
      Note
      </b>IIS supports the following three types of password
authentication in any combination:</p>
<ul><li>Anonymous</li><li>Basic</li><li>Integrated Windows authentication</li></ul><p>When Anonymous authentication is enabled, all users are
initially logged on under the IIS anonymous user account. Because
anonymous users all share the same account, the Permissions Checker
component cannot authenticate individual users when anonymous
access is allowed.</p><p>For applications where all users have individual accounts, such
as intranet-only Web sites, it is recommended that you disable
anonymous authentication so that the Permissions Checker component
can authenticate individual users.</p><p>For applications where some pages must be available to anonymous
users and other pages need to be secure, such as mixed Internet and
intranet Web sites, you should enable anonymous authentication and
at least one other password authentication method, either
integrated Windows authentication or Basic. Then if you deny
anonymous access to a specific page, the server will attempt to
authenticate the user by using either integrated Windows
authentication or Basic password authentication.</p><p>You can use either of the following two methods to deny
anonymous access to a specific page.</p><ul><li>Set the Access Control List for the ASP-based file to exclude
the anonymous user account.</li><li>In the ASP script, check for the anonymous user account (if the
LOGON_USER server variable is empty) and set Response.Status to the
<code>401 Unauthorized</code> error message. This will cause IIS to
attempt to identify the user by using NTLM or Basic
authentication.</li></ul><p>This is illustrated in the following example.</p><p><code>&lt;%</code></p><p><code>If Request("LOGON_USER") = "" Then</code></p><p><code>  Response.Status = "401
Unauthorized"</code></p><p><code>End if</code></p><p><code>%&gt;</code></p><p><code> </code></p><p>If all the files in your application must be available to
anonymous users, the Permission Checker component will not able to
distinguish individual user accounts. You can still use it,
however, to ensure that the specified Web page exists and test
whether the anonymous user account has access permissions for that
page.</p><p><img src="note.gif" alt="note"><b>
      Note
      </b>NTLM password authentication is currently supported
only by Microsoft Internet Explorer, and may not work over a proxy
server. Thus, if users connect to your site with browsers other
than Internet Explorer or through a proxy server and your
application requires a non-anonymous user context, you must also
enable Basic password authentication.</p>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
