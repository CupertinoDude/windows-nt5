<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Working_with_Scripting_Languages">
<meta name="description" content="Explains how to set the primary scripting language for a Web page or application, and how to use VBScript and JScript in the ASP scripting environment.">
<title>Working with Scripting Languages</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Working with Scripting Languages</h1><p>Programming languages such as Visual Basic, C++, and Java
provide low-level access to computer resources and are used to
create complex, large-scale programs. Scripting languages, however,
are used to create programs of limited capability, called <i>
scripts</i>, that execute Web site functions on a Web server or
browser. Unlike more complex programming languages, scripting
languages are <i>interpreted</i>, instruction statements are
sequentially executed by an intermediate program called a command
interpreter. While interpretation reduces execution efficiency,
scripting languages are easy to learn and provide powerful
functionality. Scripts can be embedded in HTML pages to format
content or used to implement COM components encapsulating advanced
business logic.</p><p>Active Server Pages makes it possible for Web developers to
write scripts that execute on the server in variety of scripting
languages. In fact, several scripting languages can be used within
a single .asp file. In addition, because scripts are read and
processed on the server-side, the browser that requests the .asp
file does not need to support scripting.</p><p>You can use any scripting language for which the appropriate
scripting engine is installed on your Web server. A <i>scripting
engine</i> is a program that processes commands written in a
particular language. Active Server Pages comes with two scripting
engines: Microsoft Visual Basic Scripting Edition (VBScript) and
Microsoft JScript. You can install and use engines for other
scripting languages, such as REXX, PERL, and Python.</p><p>If you are already a Visual Basic programmer, you can
immediately begin using VBScript, which is a subset of Visual
Basic. If you are a Java, C, or C++ programmer, you may find that
JScript syntax is familiar to you, even though JScript is not
directly related to Java or C.</p><p>If you are familiar with another scripting language, such as
REXX, Perl, or Python you can obtain and install the appropriate
scripting engine so that you can use the language you already know.
Active Server Pages is a COM scripting host; to use a language you
must install a scripting engine that follows the COM Scripting
standard and resides as a COM (Component Object Model) object on
the Web server.</p><h2><a name="settingtheprimaryscriptinglanguage">Setting the Primary
Scripting Language</a></h2><p>The ASP <i>primary scripting language</i> is the language used
to process commands inside the &lt;% and %&gt; delimiters. By
default, the primary scripting language is VBScript. You can use
any scripting language for which you have a script engine as the
primary scripting language. You can set the primary scripting
language on a page-by-page basis, or for all pages in an ASP
application.</p><h3><a name="H3_37782962">Setting the Language for
an Application</a></h3><p>To set the primary scripting language for all pages in an
application, set the <b>Default ASP Language</b> property on the
<b>App Options</b> tab in the Internet Information Services
snap-in.</p><h3><a name="H3_37781925">Setting the Language for
a Page</a></h3><p>To set the primary scripting language for a single page, add the
<code>&lt;%@ LANGUAGE %&gt;</code> directive to the beginning of
your .asp file. The syntax for this directive is:</p><pre>
&lt;%@ LANGUAGE=<i>ScriptingLanguage</i> %&gt;
</pre><p>where <code><i>ScriptingLanguage</i></code> is the primary
scripting language that you want to set for that particular page.
The setting for a page overrides the global setting for all pages
in the application.</p><p>Follow the guidelines for using an ASP directive; for more
information, see <a href="asp_basp_create.htm"><b>Creating an ASP Page</b></a>.</p><p><img src="note.gif" alt="note"><b>
      Note
      </b>To use a language that does not support the <b>
Object.Method</b> syntax as the primary scripting language, you
must first create the <b>LanguageEngines</b> registry key.</p>
<h2><a name="usingvbscriptandjscript">
Using VBScript and JScript on the Server</a></h2><p>When using VBScript on the server with ASP, two VBScript
features are disabled. Because scripts written with Active Server
Pages are executed on the server, the VBScript statements that
present user-interface elements, <b>InputBox</b> and <b>MsgBox</b>,
are not supported. In addition, do not use the VBScript functions
<b>CreateObject</b> and <b>GetObject</b> in server-side scripts.
Use <b>Server.CreateObject</b> instead so that ASP can track the
object instance. Objects created by <b>CreateObject</b> or <b>
GetObject</b> cannot access the ASP built-in objects and cannot
participate in transactions. The exception to this rule is when you
are using the IIS Admin Objects, and when you are using Java
monikers. For more information, see <a href="prog_use_using.htm"><b>Using IIS Admin Objects</b></a> and <a href="asp_basp_usingcomp.htm#H2_37772661"><b>Creating an Object from a
Java Class</b></a>.</p><p>For a list and description of all VBScript and JScript
operators, functions, statements, objects, properties, and methods,
refer to the VBScript Language Reference and JScript Language
Reference. You can find this reference at the <a href="http://msdn.microsoft.com/scripting/" target="_New"><b>Microsoft Script
Technologies</b></a> Web site.</p><h3><a name="includingcomments">Including
Comments</a></h3><p>Because the processing of all scripts in ASP is done on the
server side, there is no need to include HTML comment tags to hide
the scripts from browsers that do not support scripting, as is
often done with client-side scripts. All ASP commands are processed
before content is sent to the browser. You can use HTML comments to
add remarks to an HTML page; comments are returned to the browser
and are visible if the user views the source HTML.</p><h4><a name="H4_37784996">VBScript
Comments</a></h4><p>Apostrophe-style comments are supported in VBScript. Unlike HTML
comments, these are removed when the script is processed and are
not sent to the browser.</p><pre>
&lt;% 
  'This line and the following two are comments. 
  'The PrintTable function prints all 
  'the elements in an array. 
  PrintTable MyArray() 
%&gt;
</pre><p>You cannot include a comment in an output expression. For
example, the first line that follows will work, but the second line
will not, because it begins with <code>&lt;%=</code>.</p><pre>
&lt;% i = i +1 'This statement increments i. (This script will work.) %&gt; 

&lt;%= name 'This statement prints the variable name. (This script will fail.) %&gt;
</pre><h4><a name="H4_37785830">JScript
Comments</a></h4><p>The <code>//</code> comment characters are supported in JScript.
These characters should be used on each comment line.</p><pre>
&lt;%
  var x
  x = new Date() 
  // This line sends the current date to the browser, 
  // translated to a string.
  Response.Write(x.toString()) 
%&gt;
</pre><h3><a name="H3_37786236">Case
Sensitivity</a></h3><p>VBScript is not case sensitive. For example, you can use either
<b>Request</b> or <b>request</b> to refer to the ASP <b>Request</b>
object. One consequence of case-insensitivity is that you cannot
distinguish variable names by case. For example, you cannot create
two separate variables named Color and color.</p><p>JScript <i>is</i> case sensitive. When you use JScript keywords
in scripts, you must type the keyword exactly as shown in the
reference page for that keyword. For example, using <b>date</b>
instead of <b>Date</b> will cause an error. The case shown in this
documentation for the ASP built-in objects will work in JScript
commands.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
