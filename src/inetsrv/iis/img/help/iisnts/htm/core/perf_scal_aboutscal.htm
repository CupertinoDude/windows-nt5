<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="About_Scalability">
<meta name="description" content="Conceptual information about scalability in a Web server environment.">
<title>About Scalability</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>About Scalability</h1><p>Web administrators are concerned with scalability because they
need to make certain their Web presence can handle steady traffic
growth as well as unanticipated traffic volumes. If the software
and the underlying infrastructure do not scale, then the server and
the clients connecting to that server will experience errors or
problems. Internet Information Services is designed to scale,
though poorly-designed infrastructure configurations can undermine
the software. This topic describes methods of hardware scaling and
how to design scalability into your entire infrastructure so
that  your IIS server performs optimally. </p><p><img src="note.gif" alt="note"><b>
      Note
      </b>Consider enabling <a href="ca_dedappmode.htm"><b>Dedicated Application Mode</b></a>. <a href="ca_dedappmode.htm"><b>Dedicated Application Mode</b></a> forces applications to run in an
isolated environment. Isolating applications in this way reduces
bottlenecks and points of contention, which typically improves
scalability and performance.</p>
<p>This section includes the following topics:</p><ul><li><a href="#methods"><b>Methods of Scaling</b></a></li><li><a href="#designscal"><b>Designing Scalability into the Server
Environment</b></a></li></ul><h2><a name="methods">Methods of Scaling</a></h2><p>Improving the scalability of your IIS Web server environment
requires planning and design with regards to hardware and
infrastructure. Because IIS is designed to scale, administrators
typically need to concern themselves only with the infrastructure.
When planning how to improve the scalability of the infrastructure,
administrators can choose to scale up, scale out, or scale down.
The method you choose depends on the type of information you intend
to publish/process and your budget. Each method has benefits and
drawbacks.</p><p><img src="note.gif" alt="note"><b>
      Note
      </b>Performance and scalability results will vary.
Every server environment is different, therefore this table
suggests only general performance and scalability results. See the
individual topics for more details.</p>
<p><b>Infrastructure Scalability Methods</b></p><table width="" height=""><tr><th width="" height="" colspan="1" rowspan="1"><b>Method</b></th><th width="" height="" colspan="1" rowspan="1">Process</th><th width="" height="" colspan="1" rowspan="1"><b>Performance Results</b></th><th width="" height="" colspan="1" rowspan="1"><b>Applications</b></th><th width="" height="" colspan="1" rowspan="1"><b>Cost</b></th><th width="" height="" colspan="1" rowspan="1"><b>Scalability Results</b></th></tr><tr><td width="" height="" colspan="1" rowspan="1"><a href="perf_scal_scaleup.htm"><b>Scaling Up</b></a></td><td width="" height="" colspan="1" rowspan="1">Add hardware like RAM or CPUs to an existing server.</td><td width="" height="" colspan="1" rowspan="1">Moderate</td><td width="" height="" colspan="1" rowspan="1">Must be highest quality in design; ideally C or C++. VB apps
are discouraged.

<p>Greater potential for a bad application to crash a site.</p></td><td width="" height="" colspan="1" rowspan="1">Low</td><td width="" height="" colspan="1" rowspan="1">Average 

<p>May enable an IIS Web server to house a few thousand more
sites.</p><p>Economical way to publish large amounts of static content.</p></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><a href="perf_scal_scaleout.htm"><b>Scaling Out</b></a><p> </p></td><td width="" height="" colspan="1" rowspan="1">Add servers to an existing server environment.</td><td width="" height="" colspan="1" rowspan="1">High 

<p> </p></td><td width="" height="" colspan="1" rowspan="1">Server environment can handle lower quality apps without
sacrificing performance and scalability. VB apps are
acceptable.</td><td width="" height="" colspan="1" rowspan="1">High</td><td width="" height="" colspan="1" rowspan="1">Excellent 

<p>Good option for sites processing financial transactions or
binary large object downloads (BLOB).</p></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><a href="perf_scal_scaledown.htm"><b>Scaling Down</b></a></td><td width="" height="" colspan="1" rowspan="1"><p>Replace real sites with virtual sites and assess idle capacity
in order to combine resources.</p></td><td width="" height="" colspan="1" rowspan="1">High</td><td width="" height="" colspan="1" rowspan="1">Not a good option for sites that utilize line-of-business or
distributed applications. Best suited for sites with large amounts
of static content.</td><td width="" height="" colspan="1" rowspan="1">Reduces Cost</td><td width="" height="" colspan="1" rowspan="1">Good

<p>Scaling down may be a vital solution for an ISP hosting
thousands of sites inefficiently.</p></td></tr></table><h2><a name="designscal">Designing Scalability into
the Server Environment</a></h2><p>The scalability of your system is dependent on the least
scalable part; if one piece fails, the scalability of the whole
system suffers. Scalability in a Web server environment can only be
achieved if it is designed into every facet of the system. The
entire infrastructure, including hardware, software, filters,
custom components, and applications must scale. For this
reason, improving scalability requires long-term assessment,
planning, and relentless testing. Typically, administrators can not
build a scalable Web presence and underlying infrastructure on
their own; they have to work with designers and managers through
every step of the process--conception to production. How you scale
and the method you choose to scale depends largely on the goals for
your Web presence and your budget. </p><p>From a high level, designing scalability into your system
requires that you:</p><h3><b>Define</b><b>the long term objectives for your Web
Presence</b></h3><p>The long term objectives for your Web presence are probably
determined by the nature of your business. Internet Service
Providers (ISP) want to host as many sites on one server as they
possibly can while maintaining performance.  Ecommerce sites
want fast and efficient processing of financial transactions
through secure connections. If you are using IIS for your intranet,
then your long term objective may be to place all of your Human
Resources benefits and payroll forms on your intranet. Defining
your objective will help determine how you build your
infrastructure. For example, an ISP hosting thousands of static
sites may achieve great scalability with very low overhead cost by
<a href="perf_scal_scaleup.htm"><b>Scaling Up</b></a>. A large e-commerce
site connected to an extensive database and processing financial
transactions will have better luck <a href="perf_scal_scaleout.htm"><b>Scaling Out</b></a> because lock
contention is reduced and because there are more resources to
handle the workloads.</p><h3><b>Know your customers</b></h3><p>Determine what your customers want and how they'll be getting at
your site's products and services. For example, are your customers
accessing your site through a T1 connection or a 56K modem? If the
products and services offered on your site require large amounts of
bandwidth to be viewed or experienced properly, then you may
frustrate a large population of potential customers. Also, the
strain of sending large image files or music files to a 56K modem
will undermine the performance and scalability of your system for
other users. Design your site so that users connecting with a 56K
modem will still have a rich experience.  <b><br></b></p><h3>D<b>efine your design goals with scalability as a
priority</b></h3><p>Make certain that all parties involved in the development of
your Web presence understand that scalability and performance are
to be designed into the server environment. Establish plans for
redundancy/failover capabilities and consider designing your server
environment according to the following guidelines:</p><ul><li>Strive for consistency across your entire code base.</li><li>Make configurations simple.</li><li>For sites offering special services or features, make certain
the site is configurable by feature. If adding a new features
compromises scalability and performance, pull the feature out and
fix the bugs in a test environment.</li><li>Strive to minimize the number of round-trips between the middle
tier and the backend.</li><li>Optimize data flow.</li><li>Consider a distributed architecture and distributed
applications.</li><li>Consider offline processing. </li><li>Make specific error events consistent across features; meaning,
use the same error code for issues requiring similar fixes.</li><li>Define standards for rendering, writes, membership, and
notifications.</li><li>Utilize services that already exist.</li></ul><h3><b>Test the Server Environment and Client Connections</b></h3><p>Perform client testing to verify the site works and works as it
was designed. Test the infrastructure at twice the expected load.
Know what the servers look like under load, the limits where the
server goes down, and what you can do to prevent the server from
failing. When preparing your production servers, perform a
scriptable install across the platform for consistency and to
reduce human costs.<br></p><h3>Keep Lines of Communication Open</h3><p>Administrators need to keep a clear line of communication back
to designers and testers for efficient troubleshooting. Know when
it's time to scale with hardware or software versus a redesign of
site features.</p><p><b>Related Topics</b></p><ul><li>For more information about monitoring and improving server
performance, see <a href="perf_mon.htm"><b>Performance Monitoring</b></a>.</li></ul><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
