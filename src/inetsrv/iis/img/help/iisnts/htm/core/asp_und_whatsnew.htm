<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="What's_New_in_ASP">
<meta name="description" content="Describes new features in this release of Active Server Pages.">
<title>What's New in ASP</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>What's New in ASP</h1><p>Active Server Pages (ASP) has been enhanced with features that
make it easier to use for scripters and Web application
developers.</p><ul><li><b>New Flow Control Capabilities</b> The ASP <b>Server</b>
object now has two new methods that you can use to control program
flow: <b>Server.Transfer</b> and <b>Server.Execute</b>. Rather than
redirecting requests, which requires an expensive round-trip to the
client, you can use these methods to transfer requests directly to
an .asp file, without leaving the server. For more information, see
<a href="asp_basp_sendcontent.htm"><b>Sending Content to the Browser</b></a>.</li><li><b>Error Handling</b> ASP now has a new error-handling
capability, so that you can trap errors in a custom error message
.asp file. You can use the new <b>Server.GetLastError</b> method to
display useful information, such as an error description or the
line number where the error occurred. For more information, see <a href="ref_vbom_aseo.htm"><b>ASPError Object</b></a>.</li><li><b>Scriptless ASP</b> Because static content is usually
processed more quickly than server-side content, it was previously
better to assign an .asp file extension only to files that
contained ASP functionality. Whenever you needed to add ASP
functionality to your static .html files, you had to manually add
.asp file extensions to correct related hyperlinks. With this
latest release of ASP, however, .asp files that do not contain
server-side functionality are now processed more quickly than ever
before. So, if you are creating an evolving Web application in
which files may eventually require ASP functionality, you can now
conveniently assign those files .asp file extensions, regardless of
whether they contain static or server-side content. For more
information, see <a href="asp_basp_create.htm"><b>Creating an ASP Page</b></a>.</li><li><b>Performance-Enhanced Objects</b> ASP now provides
performance-enhanced versions of its popular installable
components. These objects will scale reliably in a wide range of
Web publishing environments. For more information, see <a href="ica.htm"><b>ASP Installable Components Reference</b></a>.</li><li><b>XML Integration</b> Extensible Markup Language (XML)
enables you to semantically describe the complex structure of data
or documents, which can then be shared across a variety of
applications, clients, and servers. Using the
Microsoft® XML Parser, included with Microsoft®
Internet Explorer version 4.0, or later, you can create
server-side applications enabling your Web server to exchange
XML-formatted data with Internet Explorer version 4.0 or
later, or with other servers having XML parsing capabilities. For
more information, see the Microsoft <a href="http://www.microsoft.com/isapi/redir.dll?prd=xml" target="_New"><b>XML Web site</b></a>.</li><li><b>Windows Script Components</b> ASP supports Microsoft's
powerful new scripting technology, Windows Script Components. Now
you can turn your business logic script procedures into reusable
Component Object Model (COM) components that you can use in your
Web applications, as well as in other COM-compliant programs. For
more information, see <a href="asp_basp_usingcomp.htm#scriptlets"><b>
Using Components and Objects</b></a>.</li><li><b>A New Way to Determine Browser Capabilities</b> ASP has
a new feature for determining the exact capabilities of a browser.
When a browser sends a cookie describing its capabilities (such a
cookie can be installed by using a simple client-side script) you
can create an instance of the Browser Capabilities component that
retrieves the browser's properties as returned by the cookie. You
can use this feature to discover a browser's capabilities and
adjust your application accordingly. For more information, see <a href="ica_bcc_retbrowsecc.htm"><b>Retrieving Browser Capabilities from a Cookie</b></a>.</li><li><b>ASP Self-Tuning</b> ASP now detects when executing
requests are blocked by external resources. It automatically
provides more threads to simultaneously execute additional requests
and to continue normal processing. If the CPU becomes overburdened,
ASP curtails the number of threads. This reduces the constant
switching that occurs when too many nonblocking requests are
executing simultaneously. For more information, see the metabase
property reference for <b><a href="ref_mb_aspthreadgateenabled.htm"><b>AspThreadGateEnabled</b></a></b>.</li><li><b>Server-Side Include with SRC Attribute</b> You can now
use the HTML &lt;SCRIPT&gt;&lt;/SCRIPT&gt; tag's SRC attribute to
do server-side includes. When you use the SRC attribute to specify
a virtual or relative path, and use the RUNAT=SERVER attribute to
denote server-side execution, you can achieve the same
functionality as the #Include directive. For more information, see
<a href="asp_basp_includingfiles.htm"><b>Including Files</b></a>.</li><li><b>Encoded ASP Scripts</b> Traditionally, Web developers
have been unable to prevent others from viewing the logic behind
their scripts. ASP now supports a new script-encoding utility
provided with Microsoft® Visual Basic Scripting Edition
(VBScript) and Microsoft® JScript 5.0. Web developers
can apply an encoding scheme to both client and server-side scripts
that makes the programmatic logic appear as unreadable ASCII
characters. Encoded scripts are decoded at run time by the script
engine, so there's no need for a separate utility. Although this
feature is not intended as a secure, encrypted solution, it can
prevent most casual users from browsing or copying scripts. For
more information, visit the Microsoft Windows <a href="http://www.microsoft.com/isapi/redir.dll?prd=msdn&amp;pver=6.0&amp;ar=scripting" target="_New"><b>Script Technologies</b></a> Web site.</li><li><b>Fine Tuning Codepages and Locales</b> In IIS 5.1 and IIS
6.0, developers can now set the codepage and locale at the page
level using Response.CodePage and Response.LCID. New metabase keys
called AspCodePage and AspLCID now set the codepage and locale for
the entire application, including global.asa. The behavior of
Session.CodePage and Session.LCID has changed so that they are no
longer set by @CodePage and @LCID. If the Response property is not
set explicitly, it is set by the @ directive. If there is no @
directive, the Response property is set by the Session
property.  If the Session property is not set explicitly, it
is set by the metabase property. If the metabase property is not
set, the Session property is set by the system codepage or
locale.</li></ul><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
