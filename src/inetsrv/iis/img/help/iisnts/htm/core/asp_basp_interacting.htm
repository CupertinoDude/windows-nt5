<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Interacting_with_Client-Side_Scripts">
<meta name="description" content="Procedural information on how to use ASP to generate client-side scripts that are processed by the client browser. You can write server-side scripts that put together script commands that are sent to the browser.">
<title>Interacting with Client-Side Scripts</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Interacting with Client-Side Scripts</h1><p>ASP's effectiveness can be extended by using it to generate or
manipulate client-side scripts. For example, you can write
server-side scripts that assemble client-side scripts based on
server-specific variables, a user's browser type, or HTTP request
parameters.</p><p>By interspersing server-side script statements within
client-side scripts (enclosed by HTML &lt;SCRIPT&gt; tags), as
shown in the following example template, you can dynamically
initialize and alter client-side scripts at the request time:</p><pre>
&lt;SCRIPT LANGUAGE="VBScript"&gt;   
&lt;!--

<i>variable</i> = &lt;%=<i>server defined value</i> %&gt;
.
.
.

<i>client-side script</i>

&lt;% <i>server-side script used to generate a client-side statement</i> %&gt; 

<i>client-side script</i>
.
.
.
--&gt;
&lt;/SCRIPT&gt;
</pre><p>Incorporating such functionality can produce some useful and
interesting applications. For example, the following is a simple
server-side script (written in VBScript) that manipulates a
client-side script (written in JScript):</p><pre>
&lt;%
  Dim dtmTime, strServerName, strServerSoftware, intGreeting
 
  dtmTime = Time()
  strServerName = Request.ServerVariables("SERVER_NAME") 
  strServerSoftware = Request.ServerVariables("SERVER_SOFTWARE") 

  'Generate a random number.        
  Randomize
  intGreeting = int(rnd * 3)
%&gt;

  &lt;SCRIPT LANGUAGE="JScript"&gt;
  &lt;!--

  //Call function to display greeting
  showIntroMsg()

  function showIntroMsg()
  {  
    switch(&lt;%= intGreeting %&gt;)
    {
    case 0:
      msg =  "This is the &lt;%= strServerName%&gt; Web server running &lt;%= strServerSoftware %&gt;."
      break
    case 1:         
      msg = "Welcome to the &lt;%= strServerName%&gt; Web server. The local time is &lt;%= dtmTime %&gt;."
      break
    case 2:
      msg = "This server is running &lt;%= strServerSoftware %&gt;."
      break
    } 

  document.write(msg)

  }

--&gt;
&lt;/SCRIPT&gt;

</pre><p>Scripts of this kind can be expanded, for example, to configure
a client-side database or a DHTML personalization script.
Innovative use of this technique can also reduce round-trips and
server processing.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
