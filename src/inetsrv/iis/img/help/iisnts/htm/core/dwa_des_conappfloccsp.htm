<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Coordinating_Client/Server_Processing">
<meta name="description" content="Internet Information Services reference information">
<title>Coordinating Client/Server Processing</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h2>Coordinating Client/Server Processing</h2><p>Web applications are, by their very nature, distributed. As
clients increase their processing capability, the degree to which
you can distribute processing between the client and server
increases. By distributing some of the processing to the client you
will increase your application's responsiveness. Distribution of
processing, however, also increases the complexity of your
application design.</p><p>You should keep in mind two design goals when you distribute
processing between the client and server. First, you want to
minimize communication across the HTTP connection. Regardless how
fast the connection you have established is, local processing will
always be faster. You should pass information between the client
and server only when absolutely necessary.</p><p>A second design goal is to expose only those server resources to
the client that are absolutely necessary to accomplish the
processing task. Each request from the client should be fully
qualified so that the server does not have to respond to the client
for further information and thereby increase roundtrips across the
HTTP connection. For example, if a client can completely describe
its capabilities to the server when it makes a request, the server
can immediately send a response that matches those capabilities
rather than requesting further information from the client. This
design concept can also be applied to the design of Web
applications that support database access. For example, if a client
is checking the status of an order, you should provide the client
with a recordset that describes only that particular order, rather
than all the records in the orders table.</p><ul><li><a href="dwa_des_conappfloccspcac.htm"><b>Caching Data</b></a>:
Introduces a technique that you can use to minimize communication
across the HTTP connection.</li><li><a href="dwa_des_conappfloccspcli.htm"><b>Client Capabilities</b></a>:
Describes functionality provides you with a design tool to help
make client requests fully qualified.</li><li><a href="dwa_ada_remdatabind.htm"><b>Remote Data Binding with Remote Data Service</b></a>: Explains a technique that you can use to
limit client access to appropriate data resources.</li></ul><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
