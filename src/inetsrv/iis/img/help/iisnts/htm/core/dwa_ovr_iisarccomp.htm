<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="IIS_and_Component_Services">
<meta name="description" content="IIS and Component Services">
<title>IIS and Component Services</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h2>IIS and Component Services</h2><p>IIS and Component Services work together to form a basic
architecture for building Web applications. IIS uses the
functionality provided by Component Services to:</p><ul><li>Isolate applications into distinct processes.</li><li>Manage communication between COM+ components (including the ASP
built-in objects).</li><li>Coordinate transaction processing for transactional ASP
applications.</li></ul><p><img src="note.gif" alt="note"><b>
      Note
      </b>In IIS version 4.0, Microsoft Transaction
Server (MTS) provided transaction support. In IIS version 5.0,
and later versions, Component Services provides all the transaction
support of MTS, in addition to a number of other component
development and deployment features.</p>
<p>IIS defines Web applications as a collection of resource files
that are grouped into a logical namespace. By grouping resources
into applications, you gain the ability to share data throughout
the namespace and to run the application in an isolated
process.</p><p>Internally, IIS coordinates isolated applications through an
object known as the Web Application Manager. This object includes a
public interface (<b>IWAMAdmin</b>) that you can use to create
programs for administering Web applications. When you run a Web
application in an isolated process, IIS uses Component Services to
coordinate concurrent access to resources and pass context
information between COM components.</p><p>IIS uses the Component Services <b>ObjectContext</b> object to
give COM+ components that are called by ASP access to the ASP
built-in objects. For example, if you build a COM+ component in
Visual Basic that needs to access a form element from an HTML file,
you can use the following code:</p><pre><code>Dim objObjectContext As ObjectContext
Dim vntIn As Variant 
Set objObjectContext = GetObjectContext ()
vntIn = objObjectContext.Item("Request").Form("Field1")
</code></pre><p>Component Services uses the COM+ <b>ObjectContext</b> object to
maintain information about a particular instance of a COM+
component. When IIS compiles the ASP script, it calls Component
Services to create an <b>ObjectContext</b> for tracking information
about the ASP script. The <b>ObjectContext</b> includes an identity
property that uniquely identifies instance of the ASP script. For
example, if your ASP script creates instances of COM+ components
that have been registered with Component Services, each of these
objects will be associated with the ASP script's <b>
ObjectContext</b>. Similarly, when you create a transactional ASP
script with the <a href="ref_scrpt_vbstransaction.htm"><b>@TRANSACTION</b></a>, Component Services is notified and a new transaction
is started. From that point onwards, Component Services coordinates
the updating of any resources that are under its control. Component
Services guarantees the transaction's integrity by tracking any
changes made to persisted resources.</p><p>The COM+ <b>ObjectContext</b> object not the same as the ASP
built-in object called ObjectContext, which is wrapper for the COM+
<b>ObjectContext</b> object. The ASP ObjectContext object makes
transaction processing available from ASP script. </p><p><img src="note.gif" alt="note"><b>
      Note
      </b>In IIS version 4.0, transaction support was
provided by Microsoft Transaction Server (MTS). For IIS 5.1,
and Windows 2000, Component Services provides all the
transaction support of MTS, in addition to a number of other
features.</p>
<div><p><b>Related Topics</b></p><ul><li>For further information on isolating and managing applications,
see <a href="dwa_des_defappbou.htm"><b>Defining Application Boundaries</b></a>.</li><li>For further information on transaction processing, see <a href="dwa_pro_proctrans.htm"><b>Processing Transactions</b></a>, <a href="asp_basp_understandtrans.htm"><b>Understanding Transactions</b></a>.</li><li>For more information on Component Services and COM+, see the <a href="../cossdk/betaintr_6qan.htm" target="_New"><b>COM+ (Component
Services)</b></a> documentation in the Platform SDK.</li></ul></div><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
