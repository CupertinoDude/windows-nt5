<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Accommodating_International_Clients">
<meta name="description" content="Internet Information Services reference information">
<title>Accommodating International Clients</title><SCRIPT LANGUAGE="JScript" SRC="mailto.js"></SCRIPT><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<div id="nsbanner" class="nsbanner">
<div id="bannerrow2" class="bannerrow2">
<table class="buttonbartable" cellspacing="0">
<tr id="hdr" nowrap="yes"><td width="30" nowrap="yes"><a href="#Feedback" id="IconFB" target="_self"><img name="feedb" onclick="startFeedback(fb)" style="cursor:hand;" alt="Send Feedback about this page" src="art/mailto.gif"></a></td>
<td nowrap="yes">Internet Information Services
             </td>
</tr>
</table>
</div></div>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Accommodating International Clients</h1><p>One of the advantages of distributing information over the
Internet or an intranet is that you can create international Web
sites that users can access from different countries/regions. Users
can request pages that have been localized into their own language,
which they read in localized browser versions.</p><p>When you create a Web site that contains pages in different
languages, you may need to convert strings that are passed between
the browser and the Web server, or between an ASP script and a COM
component. If all pages on the Web site are written in the default
character set used by the Web server, ASP does the conversion
automatically. If you author pages in different character sets for
browsers of different languages, however, you need to use ASP
commands that specify how the strings should be converted. For
example, if your site contains some pages in one of the Japanese
character sets and others in one of the Chinese character sets, you
need to specify which character set ASP should use while processing
strings for a particular page.</p><p>ASP also provides commands that support the cultural conventions
for different locales, such as the format used for currency, time,
date, and numbers. As with the string conversion commands, you need
to use the locale commands only if your scripts do not use the
default locale for the Web server and the browser.</p><p>There are many design scenarios for the structure of an
international Web site. After finances and time are taken into
consideration, the best structure might be a mix of scenarios.
Three possible scenarios follow:</p><p><b>Scenario One - Translate each Web page</b></p><p>If you pay localizers to translate your pages, translating each
Web page may not be the most economical solution. However, your
server processes requests faster than in the other scenarios,
especially if you maximize static content.</p><ul><li>For each language you support, create a sub folder to store
translated Web pages.</li>
<li>Use an ASP file in your root folder to determine the accepted
languages of the browser, and redirect the translated Web pages to
the corresponding sub folder. If you do not support the languages
of the browser, provide links to the start pages of each sub folder
to let the viewer choose a language. Use
Request.ServerVariables("HTTP_ACCEPT_LANGUAGE") to determine what
languages the browser accepts.</li>
<li>Set the locale dynamically because some languages contain
multiple locales. For example, the codepage for English is 1252,
but the locale can be 2057 for Britain, 1033 for the United States,
or 4105 for Canada.</li>
</ul>
<p><b>Scenario Two - Translate text segments stored in a
database</b></p><p>If you have a small Web site, or one with content that changes
frequently, you can store all of your text segments in a database
that is indexed by the codepage of the segment. SQL handles strings
in different codepages. Access handles Unicode strings that you can
write out with Response.BinaryWrite. When you translate text
segments that are stored in a database, a localizer is given one
file to work with. Because the database calls are simple queries,
the speed of serving pages suffers only slightly.</p><ul><li>In each ASP file, determine the accepted languages of the
browser, and insert a text segment from the database that is
translated in the right language. Use
Request.ServerVariables("HTTP_ACCEPT_LANGUAGE") to determine what
languages the browser accepts.</li>
<li>Set the locale dynamically because some languages contain
multiple locales. For an example, see Step 3 in Scenario One.</li>
</ul>
<p><b>Scenario Three - Rely on a translation tool</b></p><p>Because individual locales may not be handled by the translation
tool and there may be subtle errors in the translation, have
someone proof read all your translated pages.</p><ul><li>Subscribe to a Web service that provides instant translation of
each of your Web pages, while maintaining the graphics and
formatting of your page. <a href="http://go.microsoft.com/fwlink/?LinkId=1760" target="_New"><b>Alta Vista</b></a>
has a downloadable document translation tool, as well as an online
tool to translate posted Web pages.</li>
</ul>
<p>There have been some changes since IIS 5.0 was released on
Windows 2000. UTF-8 support is extended to all multi-byte
characters including surrogate characters like those for Japanese.
The IIS intrinsic objects are able to store and retrieve strings
using different codepages. For example, form data and server
variables can contain strings that are encoded using a different
codepage than the default of the Web server. The IIS installable
components like Ad Rotator and Content Rotator also support
localized characters. Lastly, there are two new Response properties
called CodePage and LCID, and a new metabase property called
AspLCID, which change the hierarchy of how codepages and locales
are set on a page. For more information, see the following
topics.</p><ul><li><a href="dwa_des_acc_setcodepage.htm"><b>Setting the Code Page for String Conversions</b></a>: Includes sample code for converting strings
used by ASP.</li>
<li><a href="dwa_des_acc_setlocaleid.htm"><b>Setting the Locale Identifier</b></a>: Describes how to change the format used for
currency, time, and date.</li>
<li>For articles and case studies on globalization and
localization, go to <a href="http://go.microsoft.com/fwlink/?LinkId=1693" target="_New"><b><b>TechNet</b></b></a>.</li>
</ul>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p><a name="Feedback"></a><span id="fb"></span></body>
</html>
