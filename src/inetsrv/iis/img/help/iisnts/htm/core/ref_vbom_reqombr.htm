<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="BinaryRead">
<meta name="description" content="Internet Information Services reference information">
<title>BinaryRead</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h3>BinaryRead</h3><p>The <b>BinaryRead</b> method retrieves data sent to the server
from the client as part of a POST request. This method retrieves
the data from the client and stores it in a <b>SafeArray</b>. A <b>
SafeArray</b> is an array that contains information about the
number of dimensions and the bounds of its dimensions.</p><h6>Syntax</h6><p><i>variant</i> = <b>Request.BinaryRead</b>(<i>count</i>)</p><p> </p><h6>Parameters</h6><dl><dt><i>variant</i></dt><dd>Contains an array of unsigned bytes returned by this method.
This parameter will be of type VT_ARRAY | VT_UI1, which is a
variant array of unsigned one byte characters.<br></dd><dt><i>count</i></dt><dd>Before execution, specifies how many bytes to read from the
client. After this method returns, <i>count</i> will contain the
number of bytes successfully read from the client. The total number
of bytes that will actually be read is less than or equal to <b>
Request.TotalBytes</b>.</dd></dl><h6>Remarks</h6><p>The <b>BinaryRead</b> method is used to read the raw data sent
by the client as part of a POST request. This method is used for
low-level access to this data, as opposed to, for example, using
the <b>Request.Form</b> collection to view form data sent in a POST
request. Once you have called <b>BinaryRead</b>, referring to any
variable in the <b>Request.Form</b> collection will cause an error.
Conversely, once you have referred to a variable in the <b>
Request.Form</b> collection, calling <b>BinaryWrite</b> will cause
an error. Remember, if you access a variable in the <b>Request</b>
collection without specifying which subcollection it belongs to,
the <b>Request.Form</b> collection may be searched, bringing this
rule into force.</p><h6>Example</h6><p>The following example uses the <b>BinaryRead</b> method to place
the content of a request into a safe array.</p><pre><code>&lt;%
  Dim vntPostedData, lngCount

  lngCount = Request.TotalBytes
  vntPostedData = Request.BinaryRead(lngCount)
%&gt;
</code></pre><h6>Applies To</h6><p><a href="ref_vbom_reqo.htm"><b>Request Object</b></a></p><h6>See Also</h6><p><a href="ref_vbom_reqoctb.htm"><b>TotalBytes</b></a>, <a href="ref_vbom_reqoccc.htm"><b>ClientCertificate</b></a>, <a href="ref_vbom_reqoccookie.htm"><b>Cookies</b></a>, <a href="ref_vbom_reqocf.htm"><b>Form</b></a>, <a href="ref_vbom_reqocqs.htm"><b>QueryString</b></a>, <a href="ref_vbom_reqocsv.htm"><b>ServerVariables</b></a></p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
