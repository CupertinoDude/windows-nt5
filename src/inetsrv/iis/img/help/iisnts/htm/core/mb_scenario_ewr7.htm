<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Edit-While-Running_Scenario_7">
<meta name="description" content="Edit-While-Running Scenario.">
<title>Edit-While-Running Scenario 7</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Edit-While-Running Scenario 7</h1><p>This scenario illustrates how edit-while-running works under the
following conditions:</p><ul><li>The corresponding history file is not found in the history
folder when MetaBase.xml is saved.</li><li>The <b>MaxHistoryFiles</b> property is set to the default value
of 10.</li></ul><p>What you will learn:</p><ul><li>How IIS recovers when the MetaBase.xml file is changed and
saved and the corresponding history file is not found.</li><li>How IIS names error files in the history folder.</li></ul><p><img src="note.gif" alt="note"><b>
      Note
      </b>For the purpose of this scenario, it is not
important to know the values contained within the in-memory
metabase or the metabase files; only the version numbers of the
metabase files are relevant.</p><p><b>Step 1:</b><br>
An administrator opens MetaBase.xml using Notepad and changes but
does not save the file.</p><p><img src="MB_Scenario_EWR7step1.gif" alt="Describes step 1 of this scenario."></p><p><b>Step 2:</b><br>
Several hours pass, during which time the in-memory metabase is
written to disk nine times. The result is that several new history
files are created within the history folder.</p><p><img src="MB_Scenario_EWR7step2.gif" alt="Describes step 2 of this scenario."></p><p><b>Step 3:</b><br>
The in-memory metabase is changed and saved to disk again.</p><p><img src="MB_Scenario_EWR7step3.gif" alt="Describes step 3 of this scenario."></p><p>When the in-memory metabase is changed and saved to disk, the
following happens:</p><p>IIS performs a series of verifications as detailed in <a href="mb_history_write2disk.htm"><b>Writing the Metabase to Disk</b></a>.</p><ol><li>IIS verifies that there are changes pending in the in-memory
metabase.</li><li>IIS locks the in-memory metabase to prevent writes.</li><li>IIS determines the major version number.</li><li>IIS creates a temporary file containing the in-memory metabase
configuration.</li><li>IIS unlocks the in-memory metabase to allow writes.</li><li>IIS copies the temporary file to the history folder and renames
the file with the major and minor version numbers.</li><li>IIS verifies that MetaBase.xml is not write-locked. &lt;Passed
verification.&gt;</li><li>IIS verifies that MetaBase.xml is not read-only. &lt;Passed
verification.&gt;</li><li>IIS verifies that MetaBase.xml is not newer than the temporary
file. &lt;Passed verification.&gt;</li><li>The temporary file is copied over MetaBase.xml, and then the
temporary file is deleted.</li><li>IIS checks to determine whether the number of history file
pairs contained in the history folder exceeds the value of the <a href="ref_mb_MaxHistoryFiles.htm"><b>MaxHistoryFiles</b></a> property. (A
history file pair is a MetaBase.xml and MBSchema.xml history file
versioned with the same major and minor version numbers.) If the
number of history file pairs exceeds the value of the <b>
MaxHistoryFiles</b> property, the oldest history file pair, based
on the timestamp value, is deleted.</li></ol><p><img src="note.gif" alt="note"><b>
      Note
      </b>In step 12, the corresponding history file,
which was named MetaBase_0000000001_0000000000.xml<img src="note.gif" alt="note"><b>
      Note
      </b>, was deleted.</p><p><b>Step 4:</b><br>
The administrator saves the copy of MetaBase.xml with Notepad but
does not close Notepad.</p><p><img src="MB_Scenario_EWR7step4a.gif" alt="Describes step 4a of this scenario."></p><p>When MetaBase.xml is edited and saved, the following
happens:</p><ol><li>IIS receives a file change notification that the MetaBase.xml
file has been saved.</li><li>IIS looks within the MetaBase.xml file for the <b>
HistoryMajorVersionNumber</b> value.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value that was found in step
2, with the highest minor version number.</li><li>Because the corresponding history file is not found, IIS copies
MetaBase.xml to the history folder and renames the file to
MetaBaseError_0000000000.xml.</li><li>IIS sends an error to the event log.</li><li>A new history file is created, and the oldest is deleted.</li></ol><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>Whenever an error file is created, to
protect against the possibility that the MetaBase.xml file may be
non valid or corrupt, the in-memory metabase is written to
disk.</p><p><img src="MB_Scenario_EWR7step4b.gif" alt="Describes step 4b of this scenario."></p><p><img src="note.gif" alt="note"><b>
      Note
      </b>When IIS checks the <b>MaxHistoryFiles</b>
property against the number of files in the history folder, the
error files are not counted. Therefore, the file named
MetaBase_0000000003_0000000000.xml is not deleted.</p><p><b>Step 5:</b><br>
Make a change using Notepad, save MetaBase.xml, and then close
Notepad.</p><p><img src="MB_Scenario_EWR7step5a.gif" alt="Describes step 5a of this scenario."></p><p>When MetaBase.xml is edited and saved, the following
happens:</p><ol><li>IIS receives a file change notification that the MetaBase.xml
file has been saved.</li><li>IIS looks within the MetaBase.xml file for the <b>
HistoryMajorVersionNumber</b> value.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value that was found in step
2, with the highest minor version number.</li><li>Because the corresponding history file is not found, IIS copies
MetaBase.xml into the history folder and renames the file to
MetaBaseError_0000000001.xml.</li><li>IIS sends an error to the event log.</li><li>The in-memory metabase is saved to disk.</li><li>A new history file is created, and the oldest history file is
deleted.</li></ol><p><img src="MB_Scenario_EWR7step5b.gif" alt="Describes step 5b of this scenario."></p><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
