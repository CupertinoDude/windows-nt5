<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="ServerVariables">
<meta name="description" content="Internet Information Services reference information">
<title>ServerVariables</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h3>ServerVariables</h3><p>The <b>ServerVariables</b> collection retrieves the values of
predetermined environment variables.</p><h6>Syntax</h6><p><b>Request.ServerVariables (</b><i>server environment</i><i>
variable</i><b>)</b></p><p><b> </b></p><h6>Parameters</h6><dl><dt><i>server environment variable</i></dt><dd>Specifies the name of the server environment variable to
retrieve. It can be one of the following values. 

<table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>Variable</b></td><td width="" height="" colspan="1" rowspan="1"><b>Description</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1">ALL_HTTP</td><td width="" height="" colspan="1" rowspan="1">All HTTP headers sent by the client.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">ALL_RAW</td><td width="" height="" colspan="1" rowspan="1">Retrieves all headers in raw form. The difference between
ALL_RAW and ALL_HTTP is that ALL_HTTP places an HTTP_ prefix before
the header name and the header name is always capitalized. In
ALL_RAW the header name and values appear as they are sent by the
client.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">APPL_MD_PATH</td><td width="" height="" colspan="1" rowspan="1">Retrieves the metabase path for the Application for the ISAPI
DLL.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">APPL_PHYSICAL_PATH</td><td width="" height="" colspan="1" rowspan="1">Retrieves the physical path corresponding to the metabase path.
IIS converts the APPL_MD_PATH to the physical (directory) path to
return this value.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">AUTH_PASSWORD</td><td width="" height="" colspan="1" rowspan="1">The value entered in the client's authentication dialog. This
variable is available only if Basic authentication is used.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">AUTH_TYPE</td><td width="" height="" colspan="1" rowspan="1">The authentication method that the server uses to validate
users when they attempt to access a protected script.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">AUTH_USER</td><td width="" height="" colspan="1" rowspan="1">Raw authenticated user name.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_COOKIE</td><td width="" height="" colspan="1" rowspan="1">Unique ID for client certificate, returned as a string. Can be
used as a signature for the whole client certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_FLAGS</td><td width="" height="" colspan="1" rowspan="1">bit0 is set to 1 if the client certificate is present. 

<p>bit1 is set to 1 if the cCertification authority of the client
certificate is invalid (it is not in the list of recognized CAs on
the server).</p></td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_ISSUER</td><td width="" height="" colspan="1" rowspan="1">Issuer field of the client certificate (O=MS, OU=IAS, CN=user
name, C=USA).</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_KEYSIZE</td><td width="" height="" colspan="1" rowspan="1">Number of bits in Secure Sockets Layer connection key size. For
example, 128.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_SECRETKEYSIZE</td><td width="" height="" colspan="1" rowspan="1">Number of bits in server certificate private key. For example,
1024.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_SERIALNUMBER</td><td width="" height="" colspan="1" rowspan="1">Serial number field of the client certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_SERVER_ISSUER</td><td width="" height="" colspan="1" rowspan="1">Issuer field of the server certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_SERVER_SUBJECT</td><td width="" height="" colspan="1" rowspan="1">Subject field of the server certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CERT_SUBJECT</td><td width="" height="" colspan="1" rowspan="1">Subject field of the client certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CONTENT_LENGTH</td><td width="" height="" colspan="1" rowspan="1">The length of the content as given by the client.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">CONTENT_TYPE</td><td width="" height="" colspan="1" rowspan="1">The data type of the content. Used with queries that have
attached information, such as the HTTP queries GET, POST, and
PUT.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">GATEWAY_INTERFACE</td><td width="" height="" colspan="1" rowspan="1">The revision of the CGI specification used by the server. The
format is CGI/<i>revision</i>.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_&lt;<i>HeaderName</i>&gt;</td><td width="" height="" colspan="1" rowspan="1">The value stored in the header <i>HeaderName</i>. Any header
other than those listed in this table must be prefixed by HTTP_ in
order for the <b>ServerVariables</b> collection to retrieve its
value. 

<p><img src="note.gif" alt="note"><b>
      Note
      </b>The server interprets any underscore (_) characters
in <i>HeaderName</i> as dashes in the actual header. For example if
you specify HTTP_MY_HEADER, the server searches for a header sent
as MY-HEADER.</p>
</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_ACCEPT</td><td width="" height="" colspan="1" rowspan="1">Returns the value of the Accept header.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_ACCEPT_LANGUAGE</td><td width="" height="" colspan="1" rowspan="1">Returns a string describing the language to use for displaying
content.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_USER_AGENT</td><td width="" height="" colspan="1" rowspan="1">Returns a string describing the browser that sent the
request.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_COOKIE</td><td width="" height="" colspan="1" rowspan="1">Returns the cookie string that was included with the
request.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTP_REFERER</td><td width="" height="" colspan="1" rowspan="1">Returns a string that contains the URL of the page that
referred the request to the current page; however, the string does
not include redirect requests.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTPS</td><td width="" height="" colspan="1" rowspan="1">Returns ON if the request came in through secure channel (SSL)
or it returns OFF if the request is for a non-secure channel.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTPS_KEYSIZE</td><td width="" height="" colspan="1" rowspan="1">Number of bits in Secure Sockets Layer connection key size. For
example, 128.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTPS_SECRETKEYSIZE</td><td width="" height="" colspan="1" rowspan="1">Number of bits in server certificate private key. For example,
1024.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTPS_SERVER_ISSUER</td><td width="" height="" colspan="1" rowspan="1">Issuer field of the server certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">HTTPS_SERVER_SUBJECT</td><td width="" height="" colspan="1" rowspan="1">Subject field of the server certificate.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">INSTANCE_ID</td><td width="" height="" colspan="1" rowspan="1">The ID for the IIS instance in textual format. If the instance
ID is 1, it appears as a string. You can use this variable to
retrieve the ID of the Web-server instance (in the metabase) to
which the request belongs.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">INSTANCE_META_PATH</td><td width="" height="" colspan="1" rowspan="1">The metabase path for the instance of IIS that responds to the
request.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">LOCAL_ADDR</td><td width="" height="" colspan="1" rowspan="1">Returns the Server Address on which the request came in. This
is important on multi-homed computers where there can be multiple
IP addresses bound to the computer and you want to find out which
address the request used.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">LOGON_USER</td><td width="" height="" colspan="1" rowspan="1">The Windows account that the user is logged into.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">PATH_INFO</td><td width="" height="" colspan="1" rowspan="1">Extra path information as given by the client. You can access
scripts by using their virtual path and the PATH_INFO server
variable. If this information comes from a URL, it is decoded by
the server before it is passed to the CGI script.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">PATH_TRANSLATED</td><td width="" height="" colspan="1" rowspan="1">A translated version of PATH_INFO that takes the path and
performs any necessary virtual-to-physical mapping.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">QUERY_STRING</td><td width="" height="" colspan="1" rowspan="1">Query information stored in the string following the question
mark (?) in the HTTP request.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">REMOTE_ADDR</td><td width="" height="" colspan="1" rowspan="1">The IP address of the remote host making the request.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">REMOTE_HOST</td><td width="" height="" colspan="1" rowspan="1">The name of the host making the request. If the server does not
have this information, it will set REMOTE_ADDR and leave this
empty.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">REMOTE_USER</td><td width="" height="" colspan="1" rowspan="1">Unmapped user-name string sent in by the user. This is the name
that is really sent by the user, as opposed to the names that are
modified by any authentication filter installed on the server.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">REQUEST_METHOD</td><td width="" height="" colspan="1" rowspan="1">The method used to make the request. For HTTP, this is GET,
HEAD, POST, and so on.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SCRIPT_NAME</td><td width="" height="" colspan="1" rowspan="1">A virtual path to the script being executed. This is used for
self-referencing URLs.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SERVER_NAME</td><td width="" height="" colspan="1" rowspan="1">The server's host name, DNS alias, or IP address as it would
appear in self-referencing URLs.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SERVER_PORT</td><td width="" height="" colspan="1" rowspan="1">The port number to which the request was sent.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SERVER_PORT_SECURE</td><td width="" height="" colspan="1" rowspan="1">A string that contains either 0 or 1. If the request is being
handled on the secure port, then this will be 1. Otherwise, it will
be 0.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SERVER_PROTOCOL</td><td width="" height="" colspan="1" rowspan="1">The name and revision of the request information protocol. The
format is <i>protocol</i>/<i>revision</i>.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">SERVER_SOFTWARE</td><td width="" height="" colspan="1" rowspan="1">The name and version of the server software that answers the
request and runs the gateway. The format is <i>
name</i>/<i>version</i>.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">URL</td><td width="" height="" colspan="1" rowspan="1">Gives the base portion of the URL.</td></tr></table><br></dd></dl><h6>Remarks</h6><p>If a client sends a header other than those specified in the
preceding table, you can retrieve the value of that header by
prefixing the header name with HTTP_ in the call to <b>
Request.ServerVariables</b>. For example, if the client sends the
header:</p><pre><code>SomeNewHeader:SomeNewValue</code></pre><p>You can retrieve <code>SomeNewValue</code> by using the
following syntax:</p><pre><code>&lt;% Request.ServerVariables("HTTP_SomeNewHeader") %&gt;
</code></pre><h6>Example</h6><p>This example displays several server variables by name:</p><pre><code>&lt;HTML&gt;
&lt;!-- This example displays the content of several ServerVariables. --&gt; 
ALL_HTTP server variable = 
&lt;%= Request.ServerVariables("ALL_HTTP") %&gt; &lt;BR&gt;
CONTENT_LENGTH server variable = 
&lt;%= Request.ServerVariables("CONTENT_LENGTH") %&gt; &lt;BR&gt; 
CONTENT_TYPE server variable = 
&lt;%= Request.ServerVariables("CONTENT_TYPE") %&gt; &lt;BR&gt;
QUERY_STRING server variable = 
&lt;%= Request.ServerVariables("QUERY_STRING") %&gt; &lt;BR&gt; 
SERVER_SOFTWARE server variable = 
&lt;%= Request.ServerVariables("SERVER_SOFTWARE") %&gt; &lt;BR&gt; 
&lt;/HTML&gt;</code></pre><p>This example uses the VBScript For Each loop to iterate through
each existing server variable name. Some will be empty if you have
Anonymous Access enabled. The following script prints out all of
the server variables in a table:</p><pre><code>&lt;TABLE BORDER="1"&gt;
&lt;TR&gt;&lt;TD&gt;&lt;B&gt;Server Variable&lt;/B&gt;&lt;/TD&gt;&lt;TD&gt;&lt;B&gt;Value&lt;/B&gt;&lt;/TD&gt;&lt;/TR&gt;
&lt;% For Each strKey In Request.ServerVariables %&gt; 
&lt;TR&gt;
&lt;TD&gt;&lt;%= strKey %&gt;&lt;/TD&gt;
&lt;TD&gt;&lt;%= Request.ServerVariables(strKey) %&gt;&lt;/TD&gt;
&lt;/TR&gt;
&lt;% Next %&gt;
&lt;/TABLE&gt;
</code></pre><p>This example inserts the name of the server into a
hyperlink.</p><pre><code>&lt;A HREF= "http://&lt;%=Request.ServerVariables("SERVER_NAME")%&gt;/scripts/MyPage.asp"&gt;
Link to MyPage.asp
&lt;/A&gt;
</code></pre><h6>Applies To</h6><p><a href="ref_vbom_reqo.htm"><b>Request Object</b></a></p><h6>See Also</h6><p><a href="ref_vbom_reqoccc.htm"><b>ClientCertificate</b></a>, <a href="ref_vbom_reqoccookie.htm"><b>Cookies</b></a>, <a href="ref_vbom_reqocf.htm"><b>Form</b></a>, <a href="ref_vbom_reqocqs.htm"><b>QueryString</b></a></p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
