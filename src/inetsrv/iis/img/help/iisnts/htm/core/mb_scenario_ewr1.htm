<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Edit-While-Running_Scenario_1">
<meta name="description" content="Edit-While-Running scenario.">
<title>Edit-While-Running Scenario 1</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Edit-While-Running Scenario 1</h1><p>This scenario illustrates how edit-while-running works under the
following conditions:</p><ul><li>Changes are made to the MetaBase.XML file, and the MetaBase.XML
file is saved.</li><li>The MetaBase.XML file is not write-locked.</li><li>MetaBase.XML is not read-only.</li><li>The MetaBase.XML file is not open for edits (does not contain
newer changes than the temporary file).</li></ul><p>What you will learn:</p><ul><li>How the major and minor version numbers are incremented when
MetaBase.XML is edited directly and saved.</li><li>How the major and minor version numbers are used to name files
in the history folder.</li><li>How IIS determines the changes that were made to MetaBase.XML
and writes the changes to the in-memory metabase through Admin Base
Objects.</li></ul><p><b>Step 1</b>:<br>
For simplicity, this scenario starts with a clean install of IIS.
When IIS is installed, a copy of MetaBase.XML is written to the
history folder. The <b>HistoryMajorVersionNumber</b> value is not
necessarily numbered starting with 1. The major version number
could be a higher number, but the minor version number will always
be zero whenever a history file is created as the result of the
in-memory metabase being written to disk.</p><img src="MB_Scenario_EWR1step1.gif" alt="Describes step 1 of the EWR1 scenario."><p><b>Step 2:</b><br>
Using Notepad, open MetaBase.XML, edit the value of C to C=4, and
save but do not close the MetaBase.XML file.</p><p>When MetaBase.XML is edited and saved, the following
happens:</p><ol><li>IIS receives a file change notification that the MetaBase.XML
file has been saved.</li><li>IIS looks within the MetaBase.XML file for the value of <b>
HistoryMajorVersionNumber</b>.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value that was found in step
2 and that has the highest minor version number.</li><li>IIS verifies that the MetaBase.XML file can be parsed and is
free of schema errors.</li><li>IIS compares the MetaBase.XML file to the corresponding history
file to determine whether changes were made. 

<p><img src="note.gif" alt="note"><b>
      Note
      </b>If the MetaBase.XML file was saved with no
changes made, a history file is not created and no further action
is taken.</p></li><li>IIS verifies that the metabase level exists in the in-memory
metabase that the changes were made to.</li><li>The changes are written to the in-memory metabase through Admin
Base Objects (ABO).</li><li>IIS creates a new file in the history folder that contains the
contents of the corresponding history file and the changes that
were written to the in-memory metabase. The file is named using the
<b>HistoryMajorVersionNumber</b> value that was determined in step
2 and with the next available minor version number. The minor
version number is calculated by incrementing the minor version
number of the corresponding history file by 1.</li></ol><p><img src="important.gif" alt="important"><span style="color:blue;"><b>
     Important
      </b></span>A change that was made in MetaBase.XML
might not be sent to the in-memory metabase for the following
reasons:</p><ul><li>The change violates metabase schema-for example, a property
name is misspelled.</li><li>The in-memory metabase is write-locked by someone making a
programmatic change to the same metabase node or property, which
prevents the changes from being written to the in-memory
metabase</li></ul><p>In this case, an error or warning will be sent to the event log
and the change will not be written to the history file.</p><p>For more information about how the major and minor version
numbers are used to create the name of the history file, see <a href="mb_history_namingfiles.htm"><b>Naming the Metabase History Files</b></a>.   <img src="MB_Scenario_EWR1step2.gif" alt="Describes step 2 of the EWR1 scenario."></p><p><b>Step 3:</b><br>
Using Notepad to edit the MetaBase.XML file, change the value of C
to C=5 and then save and close the file.</p><p>When MetaBase.XML is edited and saved, the following
happens:</p><ol><li>IIS receives a file change notification that the MetaBase.XML
file has been saved.</li><li>IIS looks within the MetaBase.XML file for the value of <b>
HistoryMajorVersionNumber</b>.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value as was found in step 2,
with the highest minor version number.</li><li>IIS verifies that the MetaBase.XML file can be parsed and is
free of schema errors.</li><li>IIS compares the MetaBase.XML file against the corresponding
history file to determine whether changes were made. 

<p><img src="note.gif" alt="note"><b>
      Note
      </b>If the MetaBase.XML file was saved with no
changes made, a history file is not created and no further action
is taken.</p></li><li>IIS verifies that the metabase level exists in the in-memory
metabase that the changes were made to.</li><li>The changes are written to the in-memory metabase through Admin
Base Objects.</li><li>IIS creates a new file in the history folder that contains the
contents of the corresponding history file and the changes that
were written to the in-memory metabase. The file is named using the
<b>HistoryMajorVersionNumber</b> value that was determined in step
2 and with the next available minor version number. The minor
version number is calculated by incrementing the minor version
number of the corresponding history file by 1.</li></ol><p><img src="MB_Scenario_EWR1step3.gif" alt="Describes step 3 of the EWR1 scenario."></p><p><img src="note.gif" alt="note"><b>
      Note
      </b>The <b>HistoryMajorVersionNumber</b> value
that is written within the MetaBase.XML file is still 1. The next
step in this scenario illustrates how <b>
HistoryMajorVersionNumber</b> is incremented.</p><p><b>Step 4:</b><br>
The in-memory metabase is written to disk.</p><p>When the in-memory metabase is changed and saved, the following
happens:</p><ol><li>IIS performs a series of verifications as detailed in <a href="mb_history_write2disk.htm"><b>Writing the Metabase to Disk</b></a>.</li><li>IIS verifies that there are changes pending in the in-memory
metabase.</li><li>IIS locks the in-memory metabase to prevent writes.</li><li>IIS determines the major version number.</li><li>IIS creates a temporary file containing the in-memory metabase
configuration.</li><li>IIS unlocks the in-memory metabase to allow writes.</li><li>IIS copies the temporary file to the history folder and renames
the file with the major and minor version numbers. The minor
version number is reset to zero.</li><li>IIS verifies that MetaBase.XML is not write-locked. <code>
&lt;Passed verification.&gt;</code></li><li>IIS verifies that MetaBase.XML is not read-only. <code>
&lt;Passed verification.&gt;</code></li><li>IIS verifies that MetaBase.XML is not newer than the temporary
file. <code>&lt;Passed verification.&gt;</code></li><li>The temporary file is copied over MetaBase.XML, and the
temporary file is deleted.</li><li>The oldest history file pairs are deleted.</li></ol><p><img src="note.gif" alt="note"><b>
      Note
      </b>When a write-to-disk event occurs, the
changes are not pushed from the history folder back into the
in-memory metabase.</p><p><img src="MB_Scenario_EWR1step4.gif" alt="Describes step 4 of the EWR1 scenario."></p><p><b>Step 5</b>:<br>
Using Notepad to edit the MetaBase.XML file, change the value of C
to C=3 and then save and close the MetaBase.XML file.</p>

When MetaBase.XML is edited and saved, the following happens:<br><br><ol><li>IIS receives a file change notification that the MetaBase.XML
file has been saved.</li><li>IIS looks within the MetaBase.XML file for the <b>
HistoryMajorVersionNumber</b> value.</li><li>IIS looks within the history folder for the corresponding
history file. The corresponding history file is the file with the
same <b>HistoryMajorVersionNumber</b> value as was found in step 2,
with the highest minor version number.</li><li>IIS verifies that the MetaBase.XML file can be parsed and is
free of schema errors.</li><li>IIS compares the MetaBase.XML file against the corresponding
history file to determine whether changes were made. 

<p><img src="note.gif" alt="note"><b>
      Note
      </b>If the MetaBase.XML file was saved with no
changes made, a history file is not created and no further action
is taken.</p></li><li>IIS verifies that the metabase level exists in the in-memory
metabase that the changes were made to.</li><li>The changes are written to the in-memory metabase through Admin
Base Objects.</li><li>IIS creates a new file in the history folder that contains the
contents of the corresponding history file and the changes that
were written to the in-memory metabase. The file is named using the
<b>HistoryMajorVersionNumber</b> value that was determined in step
2 and with the next available minor version number. The minor
version number is calculated by incrementing the minor version
number of the corresponding history file by 1.</li></ol><p><img src="MB_Scenario_EWR1step5.gif" alt="Describes step 5 in the EWR1 scenario."></p><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
