<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Metabase_History_Scenario_1">
<meta name="description" content="Metabase History Scenario.">
<title>Metabase History Scenario 1</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Metabase History Scenario 1</h1><p>This scenario illustrates how edit while running works under the
following conditions:</p><ul><li>There are changes pending in the in-memory metabase.</li><li>MetaBase.xml is not write-locked.</li><li>MetaBase.xml is not read-only.</li><li>MetaBase.xml is not newer than the temporary file.</li></ul><p>You will learn:</p><ul><li>How IIS writes the in-memory metabase to disk when all checks
pass.</li><li>How history files are versioned and named when the in-memory
metabase is written to disk.</li></ul><p><b>Action taken</b>:   A write-to-disk event
occurs.</p><p>IIS performs a series of verifications as seen below. Refer to
<a href="mb_history_write2disk.htm"><b>Writing the Metabase to Disk</b></a> for more information about the verifications.</p><p><img src="MB_Scenario_History1.gif" alt="Describes step 1 of this scenario."></p><ol><li>IIS verifies that there are changes pending in the in-memory
metabase.</li><li>IIS locks the in-memory metabase to prevent writes.</li><li>IIS determines the major version number.</li><li>IIS creates a temporary file containing the in-memory metabase
configuration. Note: The value of the HistoryMajorVersionNumber
property that was determined in step 3 is written within the
temporary file.</li><li>IIS unlocks the in-memory metabase to allow writes.</li><li>IIS copies the temporary file to the history folder and renames
the file with the major and minor version numbers.</li><li>IIS verifies if the MetaBase.xml file is write locked.
&lt;Passed Verification&gt;</li><li>IIS verifies if the MetaBase.xml file is read-only. &lt;Passed
Verification&gt;</li><li>IIS verifies if the MetaBase.xml file in newer than the
temporary file. &lt;Passed Verification&gt;</li><li>Because the MetaBase.xml file is not write locked, not
read-only, and is not newer than the temporary file, the temporary
file is copied over MetaBase.xml, and the temporary file is
deleted.</li><li>IIS checks to determine whether the number of history file
pairs contained in the history folder exceed the value of the <a href="ref_mb_MaxHistoryFiles.htm"><b>MaxHistoryFiles</b></a> property. A
history file pair is a MetaBase.xml and MBSchema.xml history file
versioned with the same major and minor version numbers. If the
number of history file pairs exceed the <b>MaxHistoryFiles</b>
value, the oldest history file pair, based on the timestamp value,
is deleted.</li></ol><div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
