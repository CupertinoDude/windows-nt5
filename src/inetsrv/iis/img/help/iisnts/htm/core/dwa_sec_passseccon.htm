<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Passing_Security_Context">
<meta name="description" content="Internet Information Services reference information">
<title>Passing Security Context</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Passing Security Context</h1><p>Windows establishes a security context for each logged on user.
When IIS receives a request from a client, it authenticates the
request and then impersonates the client. While IIS is
impersonating the client, IIS operates within the confines of the
authenticated client's security context. This security context may
change during the various stages of request processing, depending
on the nature of the client request. The following diagram
illustrates the various security contexts that may play a part in
request processing.</p><p><img src="seccont.gif" alt="Security Context"></p><p>The security context of the IIS process (inetinfo) is known as
LocalSystem. However, when IIS is processing a client request, it
will impersonate the context of the client that generated the
request. If the client is authenticated with the Anonymous
authentication scheme, the security context will be
IUSR_<i>machinename</i> for in process applications and
IWAM_<i>machinename</i> for applications running in an isolated
process. If the client is authenticated with any other
authentication scheme, the security context will map to the
individual account of the client.</p><p>If you create an instance of a COM component with ASP, the COM
component will inherit the security context of the .asp file that
created it. When IIS destroys the component instance, it will also
use the security context of the .asp file in most instances. There
is at least one case, however, where this will not occur. If the
COM component has been given session scope (that is, <b>
Session</b>("mysesscomp") = <b>
Server.CreateObject</b>("MyComps.Comp1")), and the session times
out before the component is destroyed, IIS will try to destroy the
component by using its own security context (LocalSystem) rather
than the context of the client that accessed the .asp file. If the
component has accessed secured resources that it has not released,
this scenario can have side effects throughout the system.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
