<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="#exec">
<meta name="description" content="Internet Information Services reference information. The #exec directive instructs the Web server to run the specified application or shell command and send the output (standard output or ISAPI WriteClient data) to the client browser.">
<title>#exec</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h2>#exec</h2><p>The <b>#exec</b> directive runs a specified application or shell
command and sends the output (standard output or ISAPI <b>
WriteClient</b> data) to the client browser. You must surround a
directive with HTML comment delimiters.</p><p>This directive can be used only in STM pages; it cannot be used
in ASP pages. There is no matching ASP script method of including
the output of multiple CGI scripts or ISAPI applications in a Web
page.</p><h6>Syntax</h6><p><b>&lt;!-- #exec</b><i>CommandType</i><b>=</b><i>
CommandDescription</i><b>--&gt;</b></p><h6>Parameters</h6><p><i>CommandType</i></p><p>Specifies the type of command. The command type can be one of
the following:</p><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>Command Type</b></td><td width="" height="" colspan="1" rowspan="1"><b>Meaning</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1">CGI</td><td width="" height="" colspan="1" rowspan="1">Runs an application, such as a CGI script, ASP application, or
ISAPI application. The CommandDescription parameter is a string
that contains the full virtual path of the application, followed by
a question mark (?) and any parameters passed to the application.
Parameters are separated by plus signs (+). Because running an
ISAPI application is only part of processing the SSI document, an
ISAPI application is restricted as follows: 

<p>Any ISAPI extension attempting to send a URL or redirect through
the <b>ServerSupportFunction</b> callback function will cause a
message to be placed in the HTML stream, but the send-redirect will
not be performed.</p><p>The SSI interpreter (Ssinc.dll) will wait indefinitely for
applications returning HSE_STATUS_PENDING unless the <b>
ServerSupportFunction</b> is called to finish the
session. </p><p>The <b>ServerSupportFunction</b> is documented at <a href="http://www.microsoft.com/isapi/redir.dll?prd=msdn&amp;sbp=library&amp;pver=6.0&amp;ar=IIS&amp;sba=ISAPI" target="_New"><b><b>MSDN Library</b></b></a> under the ISAPI
reference.</p></td></tr><tr><td width="" height="" colspan="1" rowspan="1">CMD</td><td width="" height="" colspan="1" rowspan="1">Runs a shell command. The CommandDescription parameter is a
string that contains the full, physical path of the shell program,
followed by any command-line parameters separated by spaces. If the
full path is not specified, the Web server searches the system
path. 

<p>This directive is disabled by default because it poses a
security risk to your Web site. To enable it, add a DWORD registry
value called <b>SSIEnableCmdDirective</b> to the
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W3SVC\Parameters
key, and set it to 1. Disable Anonymous Access on any web folder
that contains STM files that use the #exec directive.</p><p>For general information on using the registry, see Registry.</p></td></tr></table><br><h6><b>Remarks</b></h6><p>The file containing this directive must use a file name
extension that is mapped to the SSI interpreter; otherwise, the Web
server will not process the directive. By default, the file name
extensions .stm, .shtm, and .shtml are mapped to the SSI
interpreter (ssinc.dll).</p><p>An STM page using the #echo directive must be run by itself, or
by calling it from an ASP page with Response.Redirect. Calling an
STM page from an ASP page with Server.Transfer, Server.Execute, or
#include will not work because that would force the STM page to go
through asp.dll instead of through ssinc.dll.</p><p>If you have the <a href="gs_iissnapin.htm"><b>IIS snap-in</b></a>
installed, you can modify default extension mappings and add new
mappings; see <a href="ca_settappmappings.htm"><b>Setting Application Mappings</b></a>. Since you cannot map a file extension to more than
one executable, you cannot use this directive in ASP files. ASP
files are already mapped to the asp.dll and must stay that way.</p><h6><b>Example</b></h6><p>This example uses the CGI command type to run an ASP page, so
there is no need to add values to your registry. It would be more
efficient to use Server.Execute, Server.Transfer, or #include to
run Test.asp from Exec.asp, but here we are just illustrating the
#exec directive in an STM file.</p><p>--- Exec.asp ---</p><pre>
&lt;FORM NAME="RunExec" METHOD="POST" ACTION="Exec.asp"&gt;
&lt;INPUT TYPE="SUBMIT" VALUE="Run the #exec Directive" NAME="RunExec"&gt;
&lt;/FORM&gt;
&lt;%
If Len(Request.Form("RunExec")) Then
  Response.Redirect("Exec.stm")
End If
%&gt;

</pre><p>--- Exec.stm ---</p><pre>
&lt;H3&gt;Inside Exec.stm&lt;/H3&gt;
&lt;!-- #exec CGI="/testfolder/test.asp?test=Hello" --&gt;
&lt;FORM NAME="Return" METHOD="POST" ACTION="Exec.asp"&gt;
&lt;INPUT TYPE="SUBMIT" VALUE="Return to Previous Page" NAME="Return"&gt;
&lt;/FORM&gt;

</pre><p>--- Test.asp ---</p><pre>
&lt;%
Response.Write "&lt;BR&gt;Inside Test.asp.&lt;BR&gt;"
Response.Write "Test = " &amp; Request.QueryString("Test") &amp; ".&lt;BR&gt;"
%&gt;
</pre><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
