<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="QueryString">
<meta name="description" content="Internet Information Services reference information">
<title>QueryString</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h3>QueryString</h3><p>The <b>QueryString</b> collection retrieves the values of the
variables in the HTTP query string. The HTTP query string is
specified by the values following the question mark (?). Several
different processes can generate a query string. For example, the
anchor tag</p><p>&lt;A HREF= "example?string=this is a sample"&gt;string
sample&lt;/A&gt;</p><p>generates a variable named <i>string</i> with the value "this is
a sample." Query strings are also generated by sending a form, or
by a user typing a query into the address box of the browser.</p><h6>Syntax</h6><p><b>
Request.QueryString(</b><i>variable</i><b>)</b>[<b>(</b><i>index</i><b>
)</b>|<b>.Count</b>]</p><p> </p><h6>Parameters</h6><dl><dt><i>variable</i></dt><dd>Specifies the name of the variable in the HTTP query string to
retrieve.<br></dd><dt><i>index</i></dt><dd>An optional parameter that enables you to retrieve one of
multiple values for <i>variable</i>. It can be any integer value in
the range 1 to <b>
Request.QueryString(</b><i>variable</i><b>).Count</b>.</dd></dl><h6>Remarks</h6><p>The <b>QueryString</b> collection is a parsed version of the
QUERY_STRING variable in the <b>ServerVariables</b> collection. It
enables you to retrieve the QUERY_STRING variable by name. The
value of <b>Request.QueryString(</b><i>parameter</i><b>)</b> is an
array of all of the values of <i>parameter</i> that occur in
QUERY_STRING. You can determine the number of values of a parameter
by calling <b>
Request.QueryString(</b><i>parameter</i><b>).Count</b>. If a
variable does not have multiple data sets associated with it, the
count is 1. If the variable is not found, the count is 0.</p><p>To reference a <b>QueryString</b> variable in one of multiple
data sets, you specify a value for <i>index</i>. The <i>index</i>
parameter can be any value between 1 and <b>
Request.QueryString(</b><i>variable</i><b>).Count</b>. If you
reference one of multiple <b>QueryString</b> variables without
specifying a value for <i>index</i>, the data is returned as a
comma-delimited string.</p><p>When you use parameters with <b>Request.QueryString</b>, the
server parses the parameters sent to the request and returns the
specified data. If your application requires unparsed <b>
QueryString</b> data, you can retrieve it by calling <b>
Request.QueryString</b> without any parameters.</p><p>You can use an iterator to loop through all the data values in a
query string. For example, if the following request is sent</p><pre><code>http://localhost/script/directory/NAMES.ASP?Q=Fred&amp;Q=Sally
</code></pre><p>and Names.asp contained the following script,</p><pre><code>---NAMES.ASP---
&lt;%
  For Each item In Request.QueryString("Q")
    Response.Write Request.QueryString("Q")(item) &amp; "&lt;BR&gt;"
  Next
%&gt;
</code></pre><p>Names.asp would display the following:</p><pre><code>Fred
Sally
</code></pre><p>The preceding script could also have been written using <b>
Count</b>.</p><pre><code>&lt;%
  For i = 1 To Request.QueryString("Q").Count   
    Response.Write Request.QueryString("Q")(i) &amp; "&lt;BR&gt;"
  Next
%&gt;
</code></pre><h6>Example</h6><p>The client request</p><pre><code>/scripts/directory-lookup.asp?name=fred&amp;age=22
</code></pre><p>results in the following QUERY_STRING value:</p><pre><code>name=fred&amp;age=22.
</code></pre><p>The <b>QueryString</b> collection would then contain two
members, <code>name</code> and <code>age.</code> You can then use
the following script:</p><pre><code>Welcome,  &lt;%= Request.QueryString("name") %&gt;. 
Your age is  &lt;%= Request.QueryString("age") %&gt;.
</code></pre><p>The output would be</p><pre><code>Welcome, Fred. Your age is 22.
</code></pre><p>If the following script is used:</p><pre><code>The unparsed query string is:  &lt;%=Request.QueryString %&gt;
</code></pre><p>The output would be</p><pre><code>The unparsed query string is: name=fred&amp;age=22
</code></pre><h6>Applies To</h6><p><a href="ref_vbom_reqo.htm"><b>Request Object</b></a></p><h6>See Also</h6><p><a href="ref_vbom_reqoccc.htm"><b>ClientCertificate</b></a>, <a href="ref_vbom_reqoccookie.htm"><b>Cookies</b></a>, <a href="ref_vbom_reqocf.htm"><b>Form</b></a>, <a href="ref_vbom_reqocsv.htm"><b>ServerVariables</b></a></p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
