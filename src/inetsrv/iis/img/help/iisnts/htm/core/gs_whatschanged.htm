<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="What's_Changed">
<meta name="description" content="Describes important differences between IIS 5.0 and 5.1, and IIS 6.0 such as changes to application processes, default settings, new properties added, and new default locations of installed files.">
<title>What's Changed</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>What's Changed</h1><a name="whatschanged"></a><p>This topic describes important differences in default behavior
and settings between IIS 4.0, IIS 5.0, IIS 5.1, and
IIS 6.0.</p><p>The following table summarizes the important differences between
versions of IIS.</p><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b> </b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS 4.0</b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS 5.0</b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS 5.1</b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS 6.0</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"> <b>Platform</b></td><td width="" height="" colspan="1" rowspan="1">NT4</td><td width="" height="" colspan="1" rowspan="1">Windows 2000</td><td width="" height="" colspan="1" rowspan="1">Windows XP Professional</td><td width="" height="" colspan="1" rowspan="1">Windows Whistler Servers</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Architecture</b></td><td width="" height="" colspan="1" rowspan="1">32-bit</td><td width="" height="" colspan="1" rowspan="1">32-bit</td><td width="" height="" colspan="1" rowspan="1">32-bit</td><td width="" height="" colspan="1" rowspan="1">32- and 64-bit</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Application process model</b></td><td width="" height="" colspan="1" rowspan="1">TCP/IP kernel, Dll Host</td><td width="" height="" colspan="1" rowspan="1">TCP/IP kernel, Dll Host</td><td width="" height="" colspan="1" rowspan="1">TCP/IP kernel, multiple Dll Hosts</td><td width="" height="" colspan="1" rowspan="1">Http.sys kernel, multiple worker processes</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Metabase configuration</b></td><td width="" height="" colspan="1" rowspan="1">Binary</td><td width="" height="" colspan="1" rowspan="1">Binary</td><td width="" height="" colspan="1" rowspan="1">Binary</td><td width="" height="" colspan="1" rowspan="1">XML</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Security</b></td><td width="" height="" colspan="1" rowspan="1">Windows authentication</td><td width="" height="" colspan="1" rowspan="1">Windows authentication 

<p>Kerberos</p><p>SSL</p></td><td width="" height="" colspan="1" rowspan="1">Windows authentication 

<p>Kerberos</p><p>SSL</p><p>Security wizard</p> </td><td width="" height="" colspan="1" rowspan="1">Windows authentication 

<p>Kerberos</p><p>SSL</p><p>Security wizard</p>

Passport support</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Remote administration</b></td><td width="" height="" colspan="1" rowspan="1">Not supported</td><td width="" height="" colspan="1" rowspan="1">HTMLA</td><td width="" height="" colspan="1" rowspan="1">No HTMLA 

<p>Terminal services</p></td><td width="" height="" colspan="1" rowspan="1">No HTMLA 

<p>Terminal services</p></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Cluster support</b></td><td width="" height="" colspan="1" rowspan="1">None</td><td width="" height="" colspan="1" rowspan="1">IIS clustering</td><td width="" height="" colspan="1" rowspan="1">Windows support</td><td width="" height="" colspan="1" rowspan="1">Windows support</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Web services</b></td><td width="" height="" colspan="1" rowspan="1">IIS on NT 4.0</td><td width="" height="" colspan="1" rowspan="1">Personal Web Manager on Windows 9x 

<p>IIS on Windows 2000</p></td><td width="" height="" colspan="1" rowspan="1">IIS optionally on Windows XP Professional 

<p>IIS on Windows 2000</p></td><td width="" height="" colspan="1" rowspan="1">IIS on Windows Whistler Servers</td></tr><tr><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td></tr><tr><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td><td width="" height="" colspan="1" rowspan="1"> </td></tr></table><p>For information about new features in IIS 6.0, see <a href="gs_features.htm"><b>Features</b></a>.</p><p><a href="#core"><b>Core Functionality and Services</b></a></p><p><a href="#cfg"><b>Metabase Configuration</b></a></p><p><a href="#administration"><b>Administration</b></a></p><p><a href="#progadm"><b>Programmatic Administration</b></a></p><p><a href="#asp"><b>Active Server Pages (ASP)</b></a></p><p><a href="#regandmet"><b>Registry</b></a></p><p><a href="#security"><b>Security</b></a></p><p><a href="#Performance"><b>Performance</b></a></p><h2><a name="core">Core Functionality and
Services</a></h2><h3>IIS 6.0 Functionality and Services</h3><p>IIS has been redesigned to take advantage of the base Windows
kernel, Http.sys. This allows for built-in response and request
caching and queueing, and the ability to route application process
requests directly to the worker processes, improving reliability
and performance.</p><p>IIS 6.0 introduces two modes of operation in order to configure
your application environments: standard application mode and
dedicated application mode.</p><h4>Standard Application Mode</h4><p>Standard application mode manages application processes similar
to the process management in IIS 5.0: all in-proc processes run
inside inetinfo, and out-of-proc applications run in separate DLL
Hosts. Some existing applications may not have been written to run
concurrently, or store state separately from the applicaiton.
Therefore, running processes in standard application mode ensures
compatability for most existing applications. The following
illustration shows how application processes are handled in
standard application mode.</p><p><img src="stdappmode.gif" alt="Standard application mode."></p><h4>Dedicated Application Mode</h4><p>When configured to execute in dedicated application mode, all
application code runs in an isolated environment. This design
removes some of the existing bottlenecks and points of contention.
Dedicated application mode allows the administrator to isolate
anything from an individual Web application to multiple sites in
their own self-contained Web service process. This prevents one
application or site from stopping another. In addition, separating
applications or sites into their own process space simplifies a
number of management tasks, such as restarts (independent of all
other sites or applications running on the system), changing a
component used by the application, debugging, monitoring counters,
throttling resources, and so forth. The following illustration
shows how applications are managed by IIS in dedicated application
mode.</p><p><img src="dedicatedappmode.gif" alt="Dedicated application mode."></p>

HTTP requests are routed to the correct application pool queue:
user mode worker-processes serving a pool pull the requests
directly from the kernel and eliminate the unnecessary process hops
encountered when sending a request to an out-of-process DLLhost. In
IIS 6.0, there is no longer the notion of in-process applications;
all necessary HTTP application runtime services, such as ISAPI
extension support, are equally available in any application pool.
This design prevents a malfunctioning HTTP application or Web site
from disrupting other HTTP applications (or other Web sites) served
from other processes on that computer. Unloading components become
easier, because with isolated application processes, the process
can, if necessary, be terminated to unload all resources, without
affect on other content or applications being served from other
processes. There is also benefit from being able to leverage other
operating system services available at the process level (for
example CPU throttling), per application pool. 

<p>Furthermore, critical portions of dedicated application mode
that maintain the overall functioning of Web services run entirely
outside of the worker processes. The IIS 6.0 kernel mode driver,
Http.sys, which is the universal HTTP processor for Windows, and
the IIS 6.0 Web administration service (WAS) isolate the critical
portions of the core Web server. Both of these components are
protected and do not allow third-party code to be loaded into them.
This design prevents a malfunctioning HTTP application from
disrupting Web services on the server.</p><h2><a name="cfg">Metabase Configuration</a></h2><p>The metabase for IIS 6.0 is stored in an XML file instead of
binary format in past versions. The location remains the same, but
the ways it can be manipulated - updated, rolled back, restored,
extended - have changed. There are two significant files instead of
one: Metabase.xml and MBSchema.xml.</p><h2><a name="administration">
Administration</a></h2><ul><li>In IIS 4.0, applications could either be run in the same
process as the Internet service or in a separate process. In
IIS 5.0 and 5.1, applications can now be grouped into pooled
processes for increased performance and improved scalability. For
more information, see <a href="ca_aboutapps.htm#app_2"><b>Application
Protection</b></a> in the About Applications topic. In IIS 6.0,
dedicated application mode, applications can pooled in any number
of applicaiton pools.</li><li>The <b>Application Mappings</b> property sheet contains a list
of Hypertext Transport Protocol (HTTP) verbs that will be processed
by an application that is mapped to certain file types. This list
of verbs represents a change from IIS 4.0. In IIS 4.0,
the list contained verbs that were <i>excluded</i>, or not
processed. This change was made to accommodate new HTTP verbs as
they are added to the Protocol. For more information on application
mappings, see <a href="ca_settappmappings.htm"><b>Setting Application Mappings</b></a>.</li><li>Clustering is not a feature of IIS 6.0 (IISsynche.exe is not
supported). Clustering is a Windows Whistler feature. For
information on Microsoft Windows Clustering Services (MSCS), see
the Windows Whistler Help documentation.</li><li>The location of custom error files has changed from IIS 4.0 to
IIS 5.0. For more information, see <a href="cerr_enablingcustom.htm#custerrinstall"><b>Enabling Detailed
Custom Error Messages</b></a>.</li><li>The Web-based Internet Services
Manager (HTML) has been replaced by a web applicance. To remotely
administer IIS by using the Internet Services Manager (HTML), see
<a href="rem_remoteadmin.htm"><b>Remote Administration</b></a>.</li></ul><h2><a name="progadm">Programmatic
Administration</a></h2><p>See <a href="ref_prog_adsrefcha.htm"><b>Metabase Changes for IIS 6.0</b></a>.</p><h2><a name="asp"></a>Active Server Pages (ASP)</h2><p>See <a href="asp_und_impchanges.htm"><b>Important Changes in ASP</b></a>.</p><h2><a name="security">Security</a></h2><ul><li>Many of the security features available in IIS 4.0 have
been simplified in IIS 5.0, 5.1 and IIS6.0, which have new
security task wizards: the Permissions Wizard, the Web Server
Certificate Wizard, and the CTL Wizard. With these three wizards,
you can synchronize Web and NTFS security settings, obtain and
install server certificates, and create and modify certificate
trust lists. In IIS 5.1 and IIS 6.0, you can select a cryptographic
service provider (CSP) for encrypting data with a certificate. For
more information, see <a href="sec_auth_certtaskwiz.htm"><b>Using the New Security Task Wizards</b></a>.</li><li><b>Index this resource</b> is now enabled by default.</li><li><b>Script source access</b>, which allows access to the <i>
source code</i> of scripts in ASP pages and other scripts, is new
and is disabled by default. It is available only if either <b>
Read</b> or <b>Write</b> permission is selected.</li><li><b>FrontPage Web</b>, which allows administration of sites on
your server by using FrontPage, is no longer set in the IIS
snap-in. It is enabled by default.</li></ul><h2><a name="Performance">Performance</a></h2><p>To limit the amount of memory allocated to ASP pages, IIS has
set the default value of <a href="ref_mb_aspscriptfilecachesize.htm"><b>AspScriptFileCacheSize</b></a>
to 250 ASP pages, and the default value of <a href="ref_mb_aspscriptenginecachemax.htm"><b>AspScriptEngineCacheMax</b></a> to 125 script engines. The
ASPScriptFileCacheSize can be set higher on sites with a large set
of frequently requested ASP pages. This improves performance
because ASP page compriation is substantially slower than
retrieving pages from cache. On a site with only a small number of
frequently requested ASP pages, memory can be saved by setting this
number to a smaller value.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
