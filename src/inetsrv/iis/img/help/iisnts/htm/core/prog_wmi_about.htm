<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="About_the_IIS_WMI_Interface">
<meta name="description" content="Provides an overview of WMI and the IIS WMI provider">
<title>About the IIS WMI Interface</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h2>About the IIS WMI Interface</h2><p>Windows Management Instrumentation (WMI) is technology for
administrators to manage Windows features. The IIS WMI provider
exposes a set of programming interfaces that offer powerful and
flexible ways to administer your Web sites. The IIS WMI provider is
superior to ADSI for managing configuration of the metabase.</p><h3>WMI and System Management Tools</h3><p>Windows Whistler management tools and scripts can use WMI to
manage systems composed of numerous devices, resources, and
applications. With WMI technology, these systems and components are
represented using the Common Information Model (CIM). CIM can model
anything in the managed environment regardless of data-source
location by providing a consistent and unified view of logical and
physical objects. Managed objects are represented using
object-oriented constructs, such as classes. These classes include
properties that describe data and methods. WMI offers a powerful
set of services that include manipulating managed objects,
retrieving query-based information, and notification of
events. </p><p>WMI is designed to offer the following advantages over other
available management technologies, including ADSI:</p><ul><li><b>Query Support:</b> Administrators can select only the
objects or properties they want to see, and WMI will return only
the appropriate data. This high granularity is efficient for the
system and the administrator.</li><li><b>Association:</b> Objects and properties may be associated
outside the boundaries of a containment model. WMI allows
selections and modifications by association across containment
boundaries, including across nodes.</li><li><b>Global Object Model:</b> A single COM API exposes managed
objects in IIS and other systems and applications depending onlu
upon the availability of appropriate WMI providers.</li></ul><p>Access to these services and to the management data is made
possible with a single (COM) programming interface. WMI providers
expose instances of objects to the WMI COM interface.</p><h3>The IIS WMI Provider</h3><p>For managing IIS with WMI, the managed object is the metabase,
and the IIS WMI Provider is an object management tool that manages
the metabase. The IIS WMI provider returns instances of IIS
configuration classes (the metabase schema) and properties to
WMI.  The IIS WMI provider is designed to provide
functionality greater than the IIS ADSI provider for metabase
configuration and IIS management tasks. The IIS WMI provider
accesses the queries and manages the IIS metabase as
follows: </p><ol><li>A script or application executes, sending a query for IIS
configuration classes to the WMI CIM Object Manager (OM) for
validation. The query may select classes to acquire status,, or
change notifications, or to set class properties. <br></li><li>OM compares the objects in the query with the WMI Object
Repository (OR) to validate them as WMI objects, then forwards the
query to the appropriate WMI provider. If the objects queried are
all valid metabase objects, OM forwards the query to the IIS WMI
Provider.<br></li><li>IIS WMI provider executes the query against the metabase
configuration classes, manipulating them and returning the
requested data to OM. <br></li><li>OM forwards the query response to the client that initiated the
query. </li></ol><p> </p><p>Figure 1. [Image illustrating the above sequence goes here.]</p><p>The WMI provider reads the metabase as a database of records,
where each record is represented as an instance of a class. Each
instance can then be queried to determine content, state,
associations, and properties. WMI provider establishes
relationships between objects, allowing you to tie together the
various objects and all the objects contained within them.
Management tasks can then be performed using an instance of the
class, or many instances.</p><h3>Comparing ADSI and WMI Providers</h3><p>The IIS WMI schema is congruent with the IIS ADSI Admin Objects
schema. The two technologies differ in architecture and
features. </p><p>The following table compares the architecture and features of
the IIS ADSI provider with those of the IIS WMI provider.</p><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>Issue</b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS ADSI provider</b></td><td width="" height="" colspan="1" rowspan="1"><b>IIS WMI provider</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1">Query capabilities?</td><td width="" height="" colspan="1" rowspan="1">No.</td><td width="" height="" colspan="1" rowspan="1">Yes. By querying on keytypes, WMI provider returns only the
data you need.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Object model and access routes</td><td width="" height="" colspan="1" rowspan="1">COM. Scripts and programs.</td><td width="" height="" colspan="1" rowspan="1">COM. Scripts, programs, and UI tools, such as the WMI Object
Browser.</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Extensible schema?</td><td width="" height="" colspan="1" rowspan="1">Yes.</td><td width="" height="" colspan="1" rowspan="1">No. WMI provider can return existing schema extensions, but
cannot extend the metabase schema. </td></tr><tr><td width="" height="" colspan="1" rowspan="1">Association or containment of related data</td><td width="" height="" colspan="1" rowspan="1">Properties are related to metabase keys by containment. 

<p>You can use the ADSI container object methods of the IIS Admin
Objects to manipulate keys in the metabase. You can create, delete,
and move keys by creating, deleting, and moving IIS Admin Objects
within container objects. You can also enumerate contained objects
such as virtual directories or servers with container object
methods. Supports property inheritance.</p></td><td width="" height="" colspan="1" rowspan="1">Association. In conjunction with other providers, includes
associations with managed objects not in the metabase. 

<p>An association in WMI describes a relationship between classes
and is in itself defined by a class.  This powerful concept
allows management information about an entire system of associated
components to be viewed and traversed for tasks such as
troubleshooting.  Navigating associations to other classes is
not limited by containment. </p></td></tr></table><h3>Resources</h3><p>Complete WMI documentation, titled "WMI Reference," is available
from MSDN. To get and use the WMI Object Browser, download and
install the WMI SDK from MSDN.</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
