<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Controlling_Database_Access">
<meta name="description" content="General guidelines for effectively restricting access to your Web server's database files.">
<title>Controlling Database Access</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Controlling Database Access</h1><p>You can use a variety of techniques to effectively restrict
access to your database files. These techniques can range from
configuring your database software's security features to setting
NTFS permissions for database files. This topic outlines basic
guidelines for effectively restricting access to your Web server's
database files.</p><b>To control database access</b><ol><li>Configure your database software's security features when
creating database files. With the security features provided by
some versions of database software, you can control user access to
database files with a high degree of granularity. For example, with
Microsoft SQL Server security features, you can control how users
access a particular database file, including how those users access
specific tables, records, and fields. For more information, consult
your database software documentation.</li><li>Secure the database files and directories stored on your Web
server by setting appropriate NTFS permissions. Make sure that
trusted users who need to update database files have appropriate
permissions. For more information, see <a href="sec_acc_ntfssetperm.htm"><b>Setting NTFS Permissions for a Directory or File</b></a>.</li><li>Secure your file-based Data Source Name (DSN), which can
contain user IDs and passwords, with appropriate NTFS
permissions.</li><li>Secure .asp files containing scripts that pass user name and
password information to databases with appropriate NTFS
permissions. 

<p><img src="note.gif" alt="note"><b>
      Note
      </b>Consider converting your ASP database scripts,
especially those containing user name and password information,
into secure COM server components. For more information, see the
Internet Information Services SDK delivered with the Platform
SDK.</p>
</li><li>Select an appropriate Web server authentication method for
identifying users attempting to access your database. Database user
authentication can depend greatly on the protocol used for
connecting to a database. For example, if you decide to use the
Named Pipes default connection protocol for SQL Server, then
authentication of Windows user account credentials may occur in
addition SQL Server authentication. You should carefully consult
your database software documentation for guidelines regarding the
integration of disparate authentication methods.</li></ol><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
