<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Metabase_Scenarios">
<meta name="description" content="This section contains metabase scenarios">
<title>Metabase Scenarios</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<div class="search-terms">phrase 1, phrase 2, phrase 3</div>
<h1>Metabase Scenarios</h1><p>Metabase scenarios provide detailed information that extend the
information presented throughout the metabase topics. The scenarios
listed below are referenced from the metabase topics that they
support.</p><div><p>Metabase scenarios are grouped by feature as follows:</p><ul><li>Metabase History Scenarios</li><li>Metabase Edit While Running Scenarios</li><li>Metabase Rollback Scenarios</li></ul></div><h2>Metabase History Scenarios</h2><p>The metabase history scenarios provide detailed information
about how metabase history works. For more information about
metabase history, see <a href="mb_history_history.htm"><b>The Metabase History Feature</b></a>.</p><h3><a href="mb_scenario_history1.htm"><b>Metabase History Scenario 1</b></a></h3><p>What you will learn:</p><ul><li>How IIS writes the in-memory metabase to disk when all checks
pass.</li><li>How history files are named when the in-memory metabase is
written to disk.</li></ul><h3><a href="mb_scenario_history2.htm"><b>Metabase History Scenario 2</b></a></h3><p>What you will learn:</p><ul><li>How IIS behaves when the metabase.xml file is write-locked and
the in-memory metabase is written to disk.</li></ul><h3><a href="mb_scenario_history3.htm"><b>Metabase History Scenario 3</b></a></h3><p>What you will learn:</p><ul><li>How IIS handles major version number rollover.</li></ul><h3><a href="mb_scenario_history4.htm"><b>Metabase History Scenario 4</b></a></h3><p>What you will learn:</p><ul><li>How IIS avoids overwriting files in the history folder that
have out of order version numbers.</li></ul><h2>Metabase Edit While Running Scenarios</h2><h3><a href="mb_scenario_ewr1.htm"><b>Edit-While-Running Scenario 1</b></a></h3><p>You will learn</p><ul><li>How the major and minor version numbers are incremented when
metabase.xml is edited directly and saved.</li><li>How the major and minor version numbers are used to name files
in the history folder.</li><li>How IIS determines the changes that were made to metabase.xml
and writes the changes to the in-memory metabase through Admin Base
Objects (ABO).</li></ul><h3>Edit while running scenario 2</h3><p>This scenario is not yet written</p><h3><a href="mb_scenario_ewr3.htm"><b>Edit-While-Running Scenario 3</b></a></h3><p>You will learn</p><ul><li>How edit while running gracefully handles the situation when
the in-memory metabase is written to disk and the metabase.xml file
is open for edits.</li></ul><h3><a href="mb_scenario_ewr4.htm"><b>Edit-While-Running Scenario 4</b></a></h3><p>You will learn</p><ul><li>How edit while running gracefully handles the situation when
the in-memory metabase is written to disk and the metabase.xml file
(has pending changes) is newer than the temporary file.</li><li>The last write always wins.</li></ul><h3><a href="mb_scenario_ewr5.htm"><b>Edit-While-Running Scenario 5</b></a></h3><p>You will learn</p><ul><li>How edit while running does not gracefully handle the scenario
when a user programmatically deletes a site within the in-memory
metabase, and another user saves changes to the same site by
editing metabase.xml with notepad.</li></ul><h3><a href="mb_scenario_ewr6.htm"><b>Edit-While-Running Scenario 6</b></a></h3><p>You will learn</p><ul><li>Why it is not recommended to allow multiple users to
simultaneously edit metabase.xml.</li></ul><h3><a href="mb_scenario_ewr7.htm"><b>Edit-While-Running Scenario 7</b></a></h3><p>You will learn</p><ul><li>How IIS recovers when the metabase.xml file is changed and
saved, and the corresponding history file is not found.</li><li>How IIS names error files in the history folder.</li></ul><h3><a href="mb_scenario_ewr8.htm"><b>Edit-While-Running Scenario 8</b></a></h3><p>You will learn</p><ul><li>How IIS behaves when metabase.xml is saved and cannot be
parsed.</li><li>How IIS names error files in the history folder.</li><li>That IIS overwrites metabase.xml with the in-memory metabase
when parse errors occur.</li></ul><h2>Metabase Rollback</h2><h3>Metabase Rollback Scenario 1</h3><p>You will learn</p><ul><li>How to roll back to a previous version of the MetaBase.XML
and/or MBSchema.XML files. </li></ul><p>This scenario is not yet written</p><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
