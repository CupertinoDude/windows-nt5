<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-16">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">
<meta http-equiv="PICS-Label" content="(PICS-1.1 &quot;<http://www.rsac.org/ratingsv01.html>&quot; l comment &quot;RSACi North America Server&quot; by &quot;inet@microsoft.com <mailto:inet@microsoft.com>&quot; r (n 0 s 0 v 0 l 0))">
<meta name="MS.LOCALE" content="EN-US">
<meta name="MS-IT-LOC" content="Internet Information Services">
<meta name="MS-HAID" content="Global_Registry_Entries">
<meta name="description" content="Registry reference information; contains detailed information about global registry entries.">
<title>Global Registry Entries</title><SCRIPT LANGUAGE="JScript" SRC="iishelp.js"></SCRIPT></head>
<body>
<p style="color:red">[This is preliminary documentation and subject to change]</p>
<h1>Global Registry Entries</h1><p><span>All other topics
have an introduction to the properties keys. Please add an overview
of the Global Registry Properties Keys. From what I understand,
these affect a lot of things and should be described as affecting
all IIS services. However, this is not implied from the other
topics.</span></p><table width="689" height=""><tr><td width="679" height="" colspan="1" rowspan="1"><b>CacheSecurityDescriptor</b></td></tr><tr><td width="679" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="679" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="679" height="" colspan="1" rowspan="1"><b>Default</b><b>value</b>: 1 (enabled)</td></tr><tr><td width="679" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 1</td></tr><tr><td width="679" height="" colspan="1" rowspan="1">Specifies whether security descriptors are cached
for file objects<span></span>.
<span><span><span>If</span>W</span>hen <b>
CacheSecurityDescriptor</b> is</span> enabled <span>(with the value of 1)</span>, IIS retrieves
security permissions when caching a file object and w<span><span>ill</span>does</span>
not need to gain access to the file object to check access rights
for new users. The feature is useful only if you have more than one
user account (<span><span>not using</span>Web server does not
use</span> only anonymous authentication).</td></tr></table><table width="691" height=""><tr><td width="681" height="" colspan="1" rowspan="1"><b>CheckCertRevocation</b></td></tr><tr><td width="681" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="681" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="681" height="" colspan="1" rowspan="1"><b>Default value</b>: 0 (disabled)</td></tr><tr><td width="681" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 1</td></tr><tr><td width="681" height="" colspan="1" rowspan="1">Specifies whether client certificates are checked
for revocation by IIS.<span></span><span>This</span><b><span><span>C</span></span></b><span><b>heckCertRevocation</b></span> is disabled
by default because checking for common certificate issuers is
typically done over the Internet and has severe performance impact.
However, enabling <b><span><span>
C</span></span></b><span><b>heckCertRevocation</b></span> may be
useful if you issue your own certificates and the revocation
process is local.</td></tr></table><table width="692" height=""><tr><td width="682" height="" colspan="1" rowspan="1"><b>DisableMemoryCache</b></td></tr><tr><td width="682" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="682" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="682" height="" colspan="1" rowspan="1"><b>Default value</b>: 0 (disabled)</td></tr><tr><td width="682" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 1</td></tr><tr><td width="682" height="" colspan="1" rowspan="1">Disables server caching<span></span>.
<span><span>This key</span>You must configure <b>
DisableMemory<span>C</span>a<span>c</span>h<span>e</span></b><span>
u</span>s<span>i</span>n<span>g</span><span><span>
t</span>h<span>e</span><span><span>
R</span>e<span>g</span>i<span>s</span>t<span>r</span>y <span></span> E<span>d</span>i<span>t</span><span>
u</span>t<span>i</span>l<span>i</span>t<span>y</span>; <span></span> y<span>o</span>u <span></span> c<span>a</span>n<span>n</span>o<span>t</span><span>
u</span>s<span>e</span></span></span><span><span>
t</span></span>he IIS snap-in.</span></td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>ListenBackLog</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 15</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 1 - 250</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Specifies the maximum number of active connections to hold in
the queue while they wait for server attention<span></span>.
Enhanced IIS functionality generally makes it unnecessary to use or
modify this entry, although extremely heavy <span><span>
use</span>traffic</span> might benefit by increasing this value up
to 50<span></span>.<span></span></td></tr></table><table width="725" height=""><tr><td width="715" height="" colspan="1" rowspan="1"><b>MaxCachedFileSize</b></td></tr><tr><td width="715" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="715" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="715" height="" colspan="1" rowspan="1"><b>Default value</b>: 256KB (262,144 bytes)</td></tr><tr><td width="715" height="" colspan="1" rowspan="1">Controls the maximum size of cache files<span></span>.
The default is 256KB if no value is present.<span></span></td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>MaxConcurrency</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 0</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 4,294,967,295</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Specifies the amount of concurrency that a system should
provide<span></span>.
<span>IIS uses</span><span>c</span><span>co</span>mpletion ports <span>are used by IIS</span><span>for</span><span>to</span> handl<span><span>e</span></span><span>e</span> input-output (I/O). In general<span>,</span><span>it is not good to</span><span>you should not</span><span></span><span> </span> have more than one thread running and conflicting on
shared memory or locks<span></span>.
This key specifies how many threads per processor should be allowed
to run simultaneously if there is a pending I/O operation. <span>The specific</span><span>A</span> value of 0 allows the system to make
the intelligent choice of the number of threads to use. Any nonzero
value specifies that the system should allow that many threads per
processor to run simultaneously.</td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>MaxPoolThreads</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 4</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 4,294,967,295</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Specifies the number of pool threads to create per
processor<span></span>.
<span>Po</span>ol thread<span>s</span> watch<span>es</span><span>for</span> the network <span>for</span> request<span>s</span> and processes <span><span>
it</span>the</span><span>incoming
requests</span>.<span></span>
The <b>MaxPoolThreads</b> count does not include threads that are
consumed by ISAPI applications. By default, only four CGI applets
can run concurrently. If you run <span>many</span><span>more
than four</span> CGI applications, you should increase this value
in order to increase the throughput. Optionally, you could set the
<b>UsePoolThreadForCGI</b> value <span> (under
..\Services\W3SVC\Parameters)</span> to FALSE (0), but this is
somewhat dangerous because it can significantly decrease
performance during high usage of CGI applications. Generally, <span>it is not good to</span><span>you should not</span> create more than 20
threads per processor.</td></tr></table><table width="861" height=""><tr><td width="851" height="" colspan="1" rowspan="1"><b>MemCacheSize</b></td></tr><tr><td width="851" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="851" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="851" height="" colspan="1" rowspan="1"><b>Default Value</b>: approximately one half the
available physical memory and calibrated in megabytes</td></tr><tr><td width="851" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 2500MB</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Controls the size of the cache<span></span>.
<span>The</span><span>D</span><span>de</span>fault value<span><span></span></span><span>  is</span> dynamically adjust<span><span>s</span></span><span>ed</span> every 60 seconds.</td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>PoolThreadLimit</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 2 * # MB</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 4,294,967,295</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><span><span>Each p</span>Po</span>ol thread<span>s</span> watch<span>es</span><span>for</span> the network <span>for</span> request<span>s</span> and processes <span><span>
it</span>the</span><span>incoming requests
</span>.Specifies
the maximum number of pool threads that can be created in the
system<span></span>. <b>PoolThreadLimit</b> is a hard limit that includes all IIS
threads<span>. <b>
PoolThreadLimit</b></span><span><span> </span> and <span>will</span>is</span>
always <span>be</span> greater
than or equal to <b>MaxPoolThreads</b>.</td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>MinFileKbSec</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 1000</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 1 - 8192</td></tr><tr><td width="" height="" colspan="1" rowspan="1">When a Web server sends a file to a client, a timeout is
established for how long the server will allow the transfer to
continue before ending <span>it</span><span>the connection</span>. The timeout chosen is
the maximum of the <span>C</span><span>co</span>nnection <span>T</span><span>ti</span>meout specified in the <a href="gs_iissnapin.htm"><b>IIS snap-in</b></a> plus the size of the
file<span>, and</span> divided by the value
specified <span>as</span><span>for</span><b>MinFileKbSec</b><span>s</span>. For example, a file size of 100
kilobytes is given a timeout of 100 seconds, or the <span>C</span><span>co</span>nnection <span>T</span><span>ti</span>meout if the latter is greater.<span></span>
Note that the registry name is misleading, because the value is in
bytes, not kilobytes as the name implies.</td></tr></table><table width="" height="159"><tr><td width="" height="9" colspan="1" rowspan="1"><b>ObjectCacheTTL</b></td></tr><tr><td width="" height="14" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="14" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="14" colspan="1" rowspan="1"><b>Default Value</b>: 30 (seconds)</td></tr><tr><td width="" height="14" colspan="1" rowspan="1"><b>Range</b>: 0 - 4,294,967,295</td></tr><tr><td width="" height="70" colspan="1" rowspan="1">This registry entry controls the Time To Live (TTL)
setting, which defines the length of time that objects are held in
cached memory. If an object in the memory cache has not been
referenced for the defined period, that object will be phased out
of the cache. If system memory is limited, or the server's contents
are dynamic, you can use a lower TTL to prevent system memory from
being used to cache a large number of volatile objects. Setting <b>
ObjectCacheTTL</b> to 0xFFFFFFFF disables the object-cache
scavenger and allows cached objects to remain in the cache until
they are overwritten. Disabling the cache scavenger is useful if
your server has ample system memory and your data is relatively
static.</td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>ThreadTimeout</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 24 * 60 * 60 (24 hours)<span></span></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 4,294,967,295</td></tr><tr><td width="" height="" colspan="1" rowspan="1">Specifies the amount of time an input-output <span>(I/O)</span> processing thread should be
maintained even if there is no I/O activity on the system<span></span>.
In general when there is no I/O activity and no requests
outstanding<span>,</span> the server <span><span>r</span>emains</span><span>is</span> idle and does not consume memory.
But if <span>that
situation</span><span>the server</span>
continues and exceeds the T<b>hreadTimeout</b> interval, <span>then</span> the <span>
I/O processing</span> thread is stopped.<span></span>
Units are in seconds.<span></span></td></tr></table><table width="" height=""><tr><td width="" height="" colspan="1" rowspan="1"><b>UserTokenTTL</b></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Registry Path</b>:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet \Services\InetInfo\Parameters</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Data Type</b>: REG_DWORD</td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Default value</b>: 15 * 60 (15 Minutes)<span></span></td></tr><tr><td width="" height="" colspan="1" rowspan="1"><b>Range</b>: 0 - 0x7FFFFFFF</td></tr><tr><td width="" height="" colspan="1" rowspan="1">When a request is made to the server, the security credentials
for the request (or the configured anonymous user) are used to
create a user token<span></span>
on the server. The server impersonates this user token when
accessing files or other system resources (see <b>
CacheSecurityDescriptor</b>). The token is cached so that the
Windows logon takes place only the first time the user accesses the
system or after the user's token has fallen out of the cache.
Integrated Windows authentication tokens are not cached. Units are
in seconds.<span></span></td></tr></table><hr class="iis" size="1">
<p align="center"><i><a href="/iishelp/common/colegal.htm">© 1997-2001 Microsoft Corporation. All rights reserved.</a></i></p>
</body>
</html>
