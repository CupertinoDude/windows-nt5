<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html dir=ltr><head><title>Managing SSL Server Certificates</title>

<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script>

<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT>

<META NAME="description" CONTENT="Procedural information on how to manage server certificates for activating your Web server's SSL features. A server certificate enables users to authenticate your server, check the validity of Web content, and establish a secure connection.">
<META HTTP-EQUIV="Content-Type" content="text/html; charset=Windows-1252">

<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services">

</head>


<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">

<h1><a name="H1_37718888">SSL Server Certificate Management</a></h1>
Before IIS 6.0, the only standard way to manage SSL server certificates was through the user interface on each computer, making it difficult to manage server certificates remotely or programmatically. In IIS 6.0, a new COM object, IISCertObj, allows you to use scripts with Windows Scripting Host (WSH) to:
<ul><li>Import copies of a certificate from a .PFX file (a file containing a PFX-encrypted certificate and a private key) on one computer to other computers.
<li>Save backups of certificates on a central site.
<li>Copy a certificate from one computer to another.</ul>
This topic uncludes:
<ul>
<li><a href="#scenario">Scenarios and Script Samples</a>
<li><a href="#implementation">IISCertObj Component Properties and Methods</a>
</ul>
<p>To learn about obtaining server certificates, see <a href="iiocrsc.htm">Obtaining a Server Certificate</a>.</p>

<h2><a name="scenario"></a>Scenarios and Script Samples</h2>
<p>Suppose you are managing a multiple-server network. To acquire SSL server certificates and install and implement copies of the certificates on all the servers requires the following steps.</p>
<ol>
<li>Acquire a certificate from a certificate authority (CA).
<li>Import copies of master certificates onto multiple servers.
<li>Save backup copies of certificates in a central archive.
<li>Export certificates across multiple servers.
</ol>
<p>Using WSH on IIS 6.0, you can execute scripts to communicate with IISCertObj, programmatically importing, archiving, and exporting certificates.</p>

<h3>Scenario 1: Importing Certificates to Multiple Servers</h3>
<p>Suppose you needed to use SSL for secure user logon to 100 or more servers. Further, you require all of the servers to use copies of the same SSL certificate. It would be awkward and very time-consuming to use the MMC snap-in to add these copies to each server. What you need is a scripted solution that installs copies of the same certificate to the entire server farm.</p>

<p>Save the following script as Certimport.vbs. Modify the command-line statement arguments to match your network resources. Then use the command-line statement to import a certificate from a certificate store on one server to other servers that require it.</p>
<p>Sample script (Certimport.vbs):</p>
&nbsp;&nbsp;dim iiscertobj
<br>&nbsp;&nbsp;set iiscertobj = WScript.CreateObject("IIS.IISCertObj")
<br>&nbsp;&nbsp;dim pfxfile : pfxfile = WScript.Arguments(1)
<br>&nbsp;&nbsp;dim pfxfilepassword : pfxfilepassword = WScript.Arguments(2)
<br>&nbsp;&nbsp;iiscertobj.Instancename = WScript.Arguments(3)
<br>&nbsp;&nbsp;iiscertobj.UserName = WScript.Arguments(5)
<br>&nbsp;&nbsp;iiscertobj.UserPassword = WScript.Arguments(6)
<br>
<br>&nbsp;&nbsp;'delimited list of servers
<br>&nbsp;&nbsp;dim WebFarmServers = split(",", WScript.Arguments(4)) 
<br>
<br>&nbsp;&nbsp;for each IISServer in WebFarmServer
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.ServerName = IISServer
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.Import pfxfile, pfxfilepassword
<br>&nbsp;&nbsp;next
	
<p>Command line statement:</p>
&nbsp;&nbsp;Certimport.vbs cert.pfx pfxpwd101 1 iisserver1,iisserver2,iisserver3 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pfxword101 Administrator aal34290

<h3>Scenario 2: Save Certificates in a Central Archive</h3>
<p>Suppose you are managing a server farm with many different SSL certificates. Using the IISCertObj export method, you can archive a backup of each certificate on your server farm to a central site.</p>

<p>Save the following script as Save_all_certs.vbs in your text editor. Modify the command-line statement arguments to match your network resources. Then use the command-line statement to export copies of certificates to the central site.

<p>Sample script (Save_all_certs.vbs):</p>
&nbsp;&nbsp;dim iiscertobj, targetServer, targetServers, pfxbasename
<br>&nbsp;&nbsp;set iiscertobj = WScript.CreateObject("IIS.IISCertObj")
<br>&nbsp;&nbsp;pfxbasename = WScript.Arguments(1)
<br>&nbsp;&nbsp;pfxpassword = WScript.Arguments(1)
<br>&nbsp;&nbsp;iiscertobj.Instancename = WScript.Arguments(3)
<br>&nbsp;&nbsp;targetServers = split(",", WScript.Arguments(4)
<br>&nbsp;&nbsp;iiscertobj.UserName = WScript.Arguments(5)
<br>&nbsp;&nbsp;iiscertobj.UserPassword = WScript.Arguments(6)
<br>
<br>&nbsp;&nbsp;for each targetServer in targetServers
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.ServerName = targetServer
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.Export pfxbasename + targetServer + ".pfx, _
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pfxpassword, true, true, false                                        
<br>&nbsp;&nbsp;next
	
<p>Command line statement:</p>
&nbsp;&nbsp;Save_all_certs.vbs certbackup adsf-0324 1 iisserver2,iisserver3,iisserver4

<h3>Scenario 3: Copy a Certificate from an Existing Server to a New Server</h3>
<p>Suppose you add a server to your server farm, install Windows Server and IIS. The script and command-line statement below will allow you to use the copy method of IISCertObj to copy a certificate to the new server. Save the script below as certcopy.vbs. Modify the command-line statement arguments to match your network resources. Then run the command-line statement.</p>

<p>Sample script (certcopy.vbs):</p>
&nbsp;&nbsp;dim iiscertobj, targetServer, targetServers, targetInstance
<br>&nbsp;&nbsp;set iiscertobj = WScript.CreateObject("IIS.IISCertObj")
<br>&nbsp;&nbsp;iiscertobj.ServerName = WScript.Arguments(1)
<br>&nbsp;&nbsp;iiscertobj.Instancename = WScript.Arguments(2)
<br>&nbsp;&nbsp;targetServers = split(",", WScript.Arguments(3)) 
<br>&nbsp;&nbsp;targetInstance = WScript.Arguments(4)) 
<br>&nbsp;&nbsp;iiscertobj.UserName = WScript.Arguments(5)
<br>&nbsp;&nbsp;iiscertobj.UserPassword = WScript.Arguments(6)
<br>
<br>&nbsp;&nbsp;for each targetServer in targetServers
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.Copy = targetServer, targetInstance
<br>&nbsp;&nbsp;&nbsp;&nbsp;iiscertobj.Import pfxfile, pfxfilepassword
<br>&nbsp;&nbsp;next
	
<p>Command line statement:</p>
&nbsp;&nbsp;Certcopy.vbs iisServer1 1 iisServer2 1 Administrator asdf-0324


<h2><a name="implementation"></a>IISCertObj Properties and Methods</h2>

<p>This section lists the IISCertObj properties and methods supported in IIS 6.0.</p>

<h3>Properties</h3>
<p>Properties should be set before calling methods. Methods will return an error message if the required properties for that method are not available when the method is called.</p>
<p>The following properties are used to generate certificate requests.

<p><strong>ServerName</strong> ServerName is the name of the computer on which the certificate operations are executed.
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT ServerName ([in] BSTR newVal);</p>

<p><strong>UserName</strong> The UserName property allows you to specify the username used for logon to the remote machine. If UserName is empty, the credentials of the currently logged on user are used. To install a certificate into a remote certificate store, the user must have administrator privileges on the remote machine.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT UserName ([in] BSTR newVal);</p>

<p><strong>UserPassword</strong> The UserPassword property allows you to specify the password used for logon to the remote machine.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT UserPassword ([in] BSTR newVal);</p>

<p><strong>InstanceName</strong> Identifies the targeted instance of IIS.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT InstanceName ([in] BSTR newVal);</p>

<h3>Methods</h3>


<p><strong>Export</strong> The Export method exports a copy of a certificate to a file. The target file may be on the local computer or on a remote computer.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT Export(BSTR FileName, BSTR Password, BSTR Password, _
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BOOL bPrivateKey, BOOL bCertChain, BOOL bRemoveCert);

<p>The Export method requires the following parameters:</p>
<ul><li><strong>FileName</strong> Specifies the name of the targeted file.
<li><strong>Password</strong> Contains the password used to secure the file specified as <em>FileName</em>.
<li><strong>bPrivateKey</strong> Specifies that the private key is exported (true) or not exported (false).
<li><strong>bCertChain</strong> Specifies that the certificate trust chain is to be exported (true) or not exported (false).
<li><strong>bRemoveCert</strong> Specifies that the binding of a certificate will be removed (true) or note removed (false).</ul>

<p><strong>Move</strong> The Move method allows you to move a certificate from one instance of IIS to another, and from from one computer to another.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT Import(BSTR DestinationServerName, BSTR DestinationServerInstance, _ 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[optional] BSTR DestinationServer UserName, _
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[optional] BSTR DestinationServer Password);

<p>The Move method uses the following parameters:</p>
<ul><li><strong>DestinationServerName</strong> Identiifies the server to which the certificate will me moved.
<li><strong>DestinationServerInstance</strong> Identifies the instance of IIS to which the certificate will be pointed.
<li><strong>DestinationServerUserName</strong> Optional username for the destination server. If empty, the username of the currently logged on user is used.
<li><strong>DestinationServerPassword</strong> Optional password for the destination server when DestinationServerUserName is used.</ul>

<p><strong>Copy</strong> The Copy method allows you to copy a certificate from one instance of IIS to another, and from one computer to another.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT Copy(BSTR DestinationServerName, BSTR DestinationServerInstance, _
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[optional] BSTR DestinationServer UserName, _
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[optional] BSTR DestinationServer Password);

<p>The Copy method uses the following parameters:</p>
<ul><li><strong>DestinationServerName</strong> Identiifies the server to which the certificate will me moved.
<li><strong>DestinationServerInstance</strong> Identifies the instance of IIS to which the certificate will be pointed.
<li><strong>DestinationServerUserName</strong> Optional username for the destination server. If empty, the username of the currently logged on user is used.
<li><strong>DestinationServerPassword</strong> Optional password for the destination server when DestinationServerUserName is used.</ul>

<p><strong>IsInstalled</strong> The IsInstalled allows you to determine whether or not a certificate is installed on a computer specified by the ServerName property.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;HRESULT IsInstalled(BSTR InstanceName, VARIANT_BOOL * retval)

<p>The IsInstalled method uses the following parameters:</p>
<ul><li><strong>InstanceName</strong> Identifies the IIS instance to check for and installed certificate.</ul>

<hr class="iis" size="1">
<p align="center"><em><a href="/iishelp/common/colegal.htm">&copy; 1997-2001 Microsoft Corporation. All rights reserved.</a></em></p>

</font>
</body>
</html>
