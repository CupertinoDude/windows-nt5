<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html dir=ltr><head><title>About Applications</title>

<SCRIPT LANGUAGE="JavaScript">
<!--
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
//-->
</script> 

<SCRIPT LANGUAGE="VBScript">
<!--
Sub Window_OnLoad()
   Dim frmContents
   On Error Resume Next
   If Not Parent Is Nothing Then
      Set frmContents = Parent.Contents
      If Not frmContents Is Nothing Then
            frmContents.Window.TOCSynch_Click
      End If
   End If
End Sub
//--></SCRIPT>

<META NAME="DESCRIPTION" CONTENT="Conceptual information about Web applications. Includes diagrams of application-directory structure and information on isolated (out-of-process) applications.">
<META HTTP-EQUIV="Content-Type" content="text/html; charset=Windows-1252">

<META HTTP-EQUIV="PICS-Label" CONTENT='(PICS-1.1 "<http://www.rsac.org/ratingsv01.html>" l comment "RSACi North America Server" by "inet@microsoft.com <mailto:inet@microsoft.com>" r (n 0 s 0 v 0 l 0))'>
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="MS-IT-LOC" Content="Internet Information Services">

</head>

<body bgcolor="#FFFFFF" text="#000000"><font face="Verdana,Arial,Helvetica">	

<h1><a name="H1_37777278">About Applications</a></h1>

<p> An IIS <em>application</em> is any file that is executed within a defined set of directories in your Web site.  When you create an application, you use the <a href="iiabuti.htm">IIS snap-in</a> to designate the application's <em>starting-point directory</em> (also called an <em>application root</em>) in your Web site.  Every file and directory under the starting-point directory in your Web site is considered part of the application until another starting-point directory is found.  You thus use directory boundaries to define the scope of an application.</p>

<h2><a name="app_1">Application Starting-Point</a></h2>

<p>In the <a href="iiabuti.htm">IIS snap-in</a>, an application starting point is indicated by a package icon. The following graphic shows an application with a starting-point directory named /SiteAdmin:</p>

<img src="iiwarnd1.gif" alt="Illustration of an application directory structure in the IIS snap-in.  An application starting point is marked by a package icon." align="bottom" width="144" height="100">

<p>The files in the \Login, \Order, and \SetupDB directories are considered part of the /SiteAdmin application. </p>

<p>You can have more than one application per Web site. The default Web site that is created when you install Internet Information Services is an application starting point.</p>

<p>Internet Information Services supports ASP, ISAPI, CGI, IDC, and SSI applications.  An application can share information among the files in the application; for example, ASP applications share context flow, session state, and variable settings across the pages of the application.</p>

<h2><a name="app_2">Application Protection</a></h2>

<p>IIS&nbsp;5.1 offers three levels of application protection. Application protection refers to the process in which applications are run. In IIS&nbsp;4.0, applications could be set to run either in the same process as Web services (Inetinfo.exe) or in a process isolated from Web services (DLLHost.exe). In IIS&nbsp;5.0 and 5.1, there is a third option: Applications can be run in a pooled process (another instance of DLLHost.exe).</p>

<p>These different options provide varying levels of protection against situations where a misbehaving application fails and causes the process in which it is running to stop responding. By default, Web services (Inetinfo.exe) runs in its own process, and other applications are run in a single, pooled process (DLLHost.exe). You can then set high priority applications to run as isolated processes (another instance of DLLHost.exe).  For performance reasons, you should not run more than 10 isolated applications.</p>

<p>The following graphic depicts the property sheet used to set application protection properties.</p>

<img src="iiwarnd4.gif" alt="The Home directory property sheet." width="461" height="453"> 

<p> Application protection can only be set at an application's starting-point directory. </p>

<h2>Application Performance</h2>

<p>There is a trade-off between performance and level of application protection. Applications that run in the Web services process (inetinfo.exe) result in higher performance with a greater risk that a misbehaving application can cause the Web services to become unavailable. The recommended configuration is to run inetinfo.exe in its own process, run mission-critical applications in their own processes, and run remaining applications in a shared, pooled process. For more information, see <a href="../asp/eadg7lpv.htm">Defining Application Boundaries</a>.</p>

<p> You can set process options for components in the Component Services administration tool. For more information, see the Component Services documentation. </p>

<hr class="iis" size="1"><p align="center"><em><a href="/iishelp/common/colegal.htm">&copy; 1997-2001 Microsoft Corporation. All rights reserved.</a></em></p>

<span style="display:none"><LAYER VISIBILITY=HIDE> 
(The following words are used by Search; they are not intended to be displayed on the page.)
icons
</layer></span>

</font>
</body>
</html>
