<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>STI Test Application</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY TEXT="#000000" LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff" leftmargin="8">

<FONT FACE="Verdana"><H2><A NAME="MYSAMPLE">STI Test Application</A> </H2>

<span style="color:#FF0000">[This is preliminary documentation and subject to change.]</span> 

<H3>SUMMARY</H3> </FONT><FONT FACE="Verdana" SIZE=2><P>
This sample is an application that can be used to test a Still Image (STI) user-mode minidriver. It can also be used as sample code for an STI-aware application or TWAIN data source.<P>

<H3>BUILDING THE SAMPLE</H3> </FONT><FONT FACE="Verdana" SIZE=2><P>
To build the sample, open a DDK command window, change to the App directory, and use the <B>build</B> command. Before you can use the sample, you need to install an STI device or the Sample User-mode Minidriver, Sampusd. Any device that appears in the Scanners and Cameras control panel is an STI device.<P>

This sample has been tested on Alpha platforms. It has not been confirmed to be 64-bit compliant. The code builds properly with Visual C 6.0. Plug and Play and Power Management do not apply to this sample. <P>

Building this sample produces one file: Stillvue.exe. Both free and checked versions are buildable. The sample has been tested with a binary that was built with Visual C 5.0.<P>

<H3>TOOLS</H3> </FONT><FONT FACE="Verdana" SIZE=2><P>
The Stillvue app can be run from a debugger or on its own. When the application is run, it presents several menu choices. Each menu choice corresponds to an STI function call. The functions should be executed in the same order as an application or TWAIN data source would call them. For example, the first thing to do is to call <B>IStillImage::StiCreateInstance</B> by selecting menu item <B>IStillImage</B>, <B>StiCreateInstance</B>. Next select <B>IStillImage</B>, <B>GetDeviceList</B>, and select a device with <B>IStillImage</B>,<B> CreateDevice</B>. Other functions can be selected as needed for your testing requirements.<P>

<H3>RESOURCES</H3></FONT><FONT FACE="Verdana" SIZE=2><P>
More information on TWAIN can be found at <A HREF="http://www.twain.org">http://www.twain.org</A>.<P>
To get a logo for your device, consult <A HREF="http://www.microsoft.com/hwtest">WHQL</A> for information and test suites.<P>
Your device should support Plug and Play, even if it uses the parallel or serial port. Download Plug and Play specs from their <A HREF="http://www.microsoft.com/hwdev/respec/pnpspecs.htm">Web site</A>.<P>

<H3>CODE TOUR</H3>
<H4>File Manifest</H4>
</FONT><U><PRE>File&#9;&#9;	Description
</U>
App.htm&#9;      		The documentation for this sample (this file)
Stillvue.cpp&#9; 	Implements application
Stisvc.cpp&#9;   	Generic implementation of scanning functions
Winx.cpp&#9;     	Implements utility functions
Wsti.cpp&#9;     	Implements calls to each of the STI functions
Stillvue.h&#9;   	Main application header file
Stivar.h&#9;     	Global STI variable declarations
Winx.h&#9;       		Utility function header
Resource.h&#9;   	Resource header
Stillvue.rc&#9;  	Resource file
Scan1.ico&#9;    	Application icon
Makefile&#9;     	The makefile for the project; do not edit.
Sources&#9;      		DDK build instructions

</pre></FONT><FONT FACE="Verdana" SIZE=2><P><H4>Programming Tour</H4></FONT><FONT FACE="Verdana" SIZE=2><P>
Each of the STI functions called by the Stillvue application is documented in the DDK documentation under Still Image Interfaces, IStiUSD Interface.
</FONT><P ALIGN="CENTER"><A HREF="#top"><FONT FACE="Verdana" SIZE=2>Top of page</FONT></A><FONT FACE="Verdana" SIZE=2> </P></FONT>
<TABLE CELLSPACING=0 BORDER=0 WIDTH=624>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#00ffff" HEIGHT=2>
<P></TD>
</TR>
</TABLE>

<FONT FACE="MS Sans Serif" SIZE=1><P>&copy; 1999 Microsoft Corporation</FONT><FONT FACE="Verdana" SIZE=2> </P></FONT></BODY>
</HTML>
