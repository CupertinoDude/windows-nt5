//////////////////////////////////////////////////////////////////////
// 
// Filename:        Slideshowdevice.idl
//
// Description:     
//
// Copyright (C) 2000 Microsoft Corp.
//
//////////////////////////////////////////////////////////////////////

import "oaidl.idl";
import "ocidl.idl";
    
typedef enum
{
    ProjectorState_UNINITED    = 0,
    ProjectorState_INITED,
    ProjectorState_STARTED,
    ProjectorState_STOPPED,
} ProjectorState_Enum;


    [
        object,
        uuid(95D17579-E9CE-475E-B73D-CC73B8D715BF),
        helpstring("ISlideshowProjector Interface"),
        pointer_default(unique)
    ]
    interface ISlideshowProjector : IUnknown
    {
        [helpstring("method Init")] 
        HRESULT Init(LPCTSTR pszDeviceDirectory,
                     LPCTSTR pszImageDirectory);

        [helpstring("method Term")] 
        HRESULT Term();

        [helpstring("method StartProjector")] 
        HRESULT StartProjector();

        [helpstring("method StopProjector")] 
        HRESULT StopProjector();

        [helpstring("method get_CurrentState")] 
        HRESULT get_CurrentState(ProjectorState_Enum   *pCurrentState);

        [helpstring("method put_ImageFrequency")] 
        HRESULT put_ImageFrequency(DWORD dwTimeoutInSeconds);

        [helpstring("method get_ImageFrequency")] 
        HRESULT get_ImageFrequency(DWORD *pdwTimeoutInSeconds);

        [helpstring("method put_ImageDirectory")] 
        HRESULT put_ImageDirectory(LPCTSTR pszImageDirectory);

        [helpstring("method get_ImageDirectory")] 
        HRESULT get_ImageDirectory(TCHAR   *pszDir,
                                  DWORD   cchDir);

        [helpstring("method get_DeviceDirectory")] 
        HRESULT get_DeviceDirectory(TCHAR   *pszURL,
                                   DWORD   cchURL);

        [helpstring("method get_ImageURL")] 
        HRESULT get_ImageURL(TCHAR   *pszURL,
                            DWORD   cchURL);

        [helpstring("method get_DeviceURL")] 
        HRESULT get_DeviceURL(TCHAR   *pszURL,
                             DWORD   cchDir);

        [helpstring("method RefreshImageList")] 
        HRESULT RefreshImageList();

        [helpstring("method get_DocumentNames")] 
        HRESULT get_DocumentNames(TCHAR   *pszDeviceDocName,
                                 DWORD   cchDeviceDocName,
                                 TCHAR   *pszServiceDocName,
                                 DWORD   cchServiceDocName);

        [helpstring("method get_ShowFilename")] 
        HRESULT get_ShowFilename(BOOL  *bShowFilename);

        [helpstring("method put_ShowFilename")] 
        HRESULT put_ShowFilename(BOOL bShowFilename);

        [helpstring("method get_AllowKeyControl")] 
        HRESULT get_AllowKeyControl(BOOL  *bAllowKeyControl);

        [helpstring("method put_AllowKeyControl")] 
        HRESULT put_AllowKeyControl(BOOL bAllowKeyControl);

        [helpstring("method get_StretchSmallImages")] 
        HRESULT get_StretchSmallImages(BOOL  *bStretchSmallImages);

        [helpstring("method put_StretchSmallImages")] 
        HRESULT put_StretchSmallImages(BOOL bStretchSmallImages);

        [helpstring("method get_ImageScaleFactor")] 
        HRESULT get_ImageScaleFactor(DWORD   *pdwScaleAsPercent);

        [helpstring("method put_ImageScaleFactor")] 
        HRESULT put_ImageScaleFactor(DWORD dwScaleAsPercent);
    };

[
    uuid(2F1E6313-253B-43D7-BBCA-E99094224D2F),
    version(1.0),
    helpstring("SlideshowProjector 1.0 Type Library")
]
library SSPRJCTRLib
{
    importlib("stdole32.tlb");
    importlib("stdole2.tlb");

    [
        uuid(EF6FF33C-6E29-4F1D-9AF6-EA0C5ED6CBB7),
        helpstring("SlideshowProjector Class")
    ]
    coclass SlideshowProjector
    {
        [default] interface ISlideshowProjector;
    };
    
};
