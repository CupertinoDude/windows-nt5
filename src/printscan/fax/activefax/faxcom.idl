// faxcom.idl : IDL source for faxcom.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (faxcom.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

        [
                object,
                uuid(b19bb45f-b91c-11d1-83e1-00c04fb6e984),
                dual,
                helpstring("IFaxTiff Interface"),
                pointer_default(unique)
        ]
        interface IFaxTiff : IDispatch
        {
                [propget, id(1), helpstring("when the fax was Received")] HRESULT ReceiveTime([out, retval] BSTR *pVal);
                [propget, id(2), helpstring("Name of Image")] HRESULT Image([out, retval] BSTR *pVal);
                [propput, id(2), helpstring("Name of Image")] HRESULT Image([in] BSTR newVal);
                [propget, id(3), helpstring("RecipientName")] HRESULT RecipientName([out, retval] BSTR *pVal);
                [propget, id(4), helpstring("SenderName")] HRESULT SenderName([out, retval] BSTR *pVal);
                [propget, id(5), helpstring("Routing string information")] HRESULT Routing([out, retval] BSTR *pVal);
                [propget, id(6), helpstring("CallerId string")] HRESULT CallerId([out, retval] BSTR *pVal);
                [propget, id(7), helpstring("Csid")] HRESULT Csid([out, retval] BSTR *pVal);
                [propget, id(8), helpstring("Tsid")] HRESULT Tsid([out, retval] BSTR *pVal);
                [propget, id(9), helpstring("RecipientNumber")] HRESULT RecipientNumber([out, retval] BSTR *pVal);
                [propget, id(10),helpstring("RawReceiveTime")] HRESULT RawReceiveTime([out, retval] VARIANT *pVal); 
                [propget, id(11), helpstring("tiff string metadata")] HRESULT TiffTagString([in] WORD tagID, [out,retval] BSTR* pVal);
        };      
        [
                object,
                uuid(D73733C7-CC80-11D0-B225-00C04FB6C2F5),
                dual,
                helpstring("IFaxServer Interface"),
                pointer_default(unique)
        ]
        interface IFaxServer : IDispatch
        {
                [id(1), helpstring("Makes a connection to a fax server")] HRESULT Connect(BSTR ServerName);
                [id(2), helpstring("Disconnects from a fax server")]      HRESULT Disconnect();
                [id(3), helpstring("Retrieves a list of fax ports")]      HRESULT GetPorts([out, retval] VARIANT* retval);
		[id(4), helpstring("Creates a fax document to send")]	  HRESULT CreateDocument(BSTR FileName, [out,retval] VARIANT *retval);
		[id(5), helpstring("Retrieves a List of Fax Jobs")]	      HRESULT GetJobs([out,retval] VARIANT *retval);
		[propget, id(6), helpstring("number of Retries for an outbound job")] HRESULT Retries([out, retval] long *pVal);
		[propput, id(6), helpstring("number of Retries for an outbound job")] HRESULT Retries([in] long newVal);
		[propget, id(7), helpstring("Time to wait between retries")] HRESULT RetryDelay([out, retval] long *pVal);
		[propput, id(7), helpstring("Time to wait between retries")] HRESULT RetryDelay([in] long newVal);
		[propget, id(8), helpstring("Days to leave unsent faxes on server")] HRESULT DirtyDays([out, retval] long *pVal);
		[propput, id(8), helpstring("Days to leave unsent faxes on server")] HRESULT DirtyDays([in] long newVal);
		[propget, id(9), helpstring("put page Branding string at top of outbound faxes")] HRESULT Branding([out, retval] BOOL *pVal);
		[propput, id(9), helpstring("put page Branding string at top of outbound faxes")] HRESULT Branding([in] BOOL newVal);
		[propget, id(10), helpstring("Use Device Tsid")] HRESULT UseDeviceTsid([out, retval] BOOL *pVal);
		[propput, id(10), helpstring("Use Device Tsid")] HRESULT UseDeviceTsid([in] BOOL newVal);
		[propget, id(11), helpstring("allow Server Coverpages only")] HRESULT ServerCoverpage([out, retval] BOOL *pVal);
		[propput, id(11), helpstring("allow Server Coverpages only")] HRESULT ServerCoverpage([in] BOOL newVal);
		[propget, id(12), helpstring("Pause Server Queue")] HRESULT PauseServerQueue([out, retval] BOOL *pVal);
		[propput, id(12), helpstring("Pause Server Queue")] HRESULT PauseServerQueue([in] BOOL newVal);
		[propget, id(13), helpstring("Archive Outbound Faxes")] HRESULT ArchiveOutboundFaxes([out, retval] BOOL *pVal);
		[propput, id(13), helpstring("Archive Outbound Faxes")] HRESULT ArchiveOutboundFaxes([in] BOOL newVal);
		[propget, id(14), helpstring("directory to Archive outbound faxes")] HRESULT ArchiveDirectory([out, retval] BSTR *pVal);
		[propput, id(14), helpstring("directory to Archive outbound faxes")] HRESULT ArchiveDirectory([in] BSTR newVal);
		[propget, id(15), helpstring("Mapi profile for Fax Server")] HRESULT ServerMapiProfile([out, retval] BSTR *pVal);
		[propput, id(15), helpstring("Mapi profile for Fax Server")] HRESULT ServerMapiProfile([in] BSTR newVal);
		[propget, id(16), helpstring("Discount Rate Start Hour")] HRESULT DiscountRateStartHour([out, retval] short *pVal);
		[propput, id(16), helpstring("Discount Rate Start Hour")] HRESULT DiscountRateStartHour([in] short newVal);
		[propget, id(17), helpstring("Discount Rate Start Minute")] HRESULT DiscountRateStartMinute([out, retval] short *pVal);
		[propput, id(17), helpstring("Discount Rate Start Minute")] HRESULT DiscountRateStartMinute([in] short newVal);
		[propget, id(18), helpstring("Discount Rate End Hour")] HRESULT DiscountRateEndHour([out, retval] short *pVal);
		[propput, id(18), helpstring("Discount Rate End Hour")] HRESULT DiscountRateEndHour([in] short newVal);
		[propget, id(19), helpstring("Discount Rate End Minute")] HRESULT DiscountRateEndMinute([out, retval] short *pVal);
		[propput, id(19), helpstring("Discount Rate End Minute")] HRESULT DiscountRateEndMinute([in] short newVal);
        };
        [
                object,
                uuid(D73733CC-CC80-11D0-B225-00C04FB6C2F5),
                dual,
                helpstring("IFaxPort Interface"),
                pointer_default(unique)
        ]
        interface IFaxPort : IDispatch
        {
                [propget, id(1), helpstring("Port Name")] HRESULT Name([out, retval] BSTR *pVal);
                [propget, id(2), helpstring("DeviceId")] HRESULT DeviceId([out, retval] long *pVal);
                [propget, id(3), helpstring("Rings before answering")] HRESULT Rings([out, retval] long *pVal);
                [propput, id(3), helpstring("Rings before answering")] HRESULT Rings([in] long newVal);
                [propget, id(4), helpstring("Csid")] HRESULT Csid([out, retval] BSTR *pVal);
                [propput, id(4), helpstring("Csid")] HRESULT Csid([in] BSTR newVal);
                [propget, id(5), helpstring("Tsid")] HRESULT Tsid([out, retval] BSTR *pVal);
                [propput, id(5), helpstring("Tsid")] HRESULT Tsid([in] BSTR newVal);
                [propget, id(6), helpstring("Send faxes on this port")] HRESULT Send([out, retval] BOOL *pVal);
                [propput, id(6), helpstring("Send faxes on this port")] HRESULT Send([in] BOOL newVal);
                [propget, id(7), helpstring("Receive faxes on this port")] HRESULT Receive([out, retval] BOOL *pVal);
                [propput, id(7), helpstring("Receive faxes on this port")] HRESULT Receive([in] BOOL newVal);
                [propget, id(8), helpstring("Port Priority for outbound jobs")] HRESULT Priority([out, retval] long *pVal);
                [propput, id(8), helpstring("Port Priority for outbound jobs")] HRESULT Priority([in] long newVal);
                [id(9), helpstring("retrieve a list if Routing Methods")] HRESULT GetRoutingMethods([out, retval] VARIANT* retval);
		[propget, id(10), helpstring("User has permission to modify port configuration")] HRESULT CanModify([out, retval] BOOL *pVal);
		[id(11), helpstring("retrive detailed port status.")] HRESULT GetStatus([out, retval] VARIANT* retval);
        };
        [
                object,
                uuid(D73733D5-CC80-11D0-B225-00C04FB6C2F5),
                dual,
                helpstring("IFaxPorts Interface"),
                pointer_default(unique)
        ]
        interface IFaxPorts : IDispatch
        {
                [propget, id(1), helpstring("Port Count")] HRESULT Count([out, retval] long *pVal);
                [propget, id(2), helpstring("property Item")] HRESULT Item(long Index, [out, retval] VARIANT *pVal);                
        };
        [
                object,
                uuid(2199F5F3-CEFC-11D0-A341-0000F800E68D),
                dual,
                helpstring("IFaxRoutingMethod Interface"),
                pointer_default(unique)
        ]
        interface IFaxRoutingMethod : IDispatch
        {
                [propget, id(1), helpstring("DeviceId")] HRESULT DeviceId([out, retval] long *pVal);
                [propget, id(2), helpstring("Enable routing method")] HRESULT Enable([out, retval] BOOL *pVal);
                [propput, id(2), helpstring("Enable routing method")] HRESULT Enable([in] BOOL newVal);
                [propget, id(3), helpstring("DeviceName")] HRESULT DeviceName([out, retval] BSTR *pVal);
                [propget, id(4), helpstring("Guid")] HRESULT Guid([out, retval] BSTR *pVal);
                [propget, id(5), helpstring("FunctionName")] HRESULT FunctionName([out, retval] BSTR *pVal);
                [propget, id(6), helpstring("ImageName")] HRESULT ImageName([out, retval] BSTR *pVal);
                [propget, id(7), helpstring("FriendlyName")] HRESULT FriendlyName([out, retval] BSTR *pVal);
		[propget, id(8), helpstring("ExtensionName")] HRESULT ExtensionName([out, retval] BSTR *pVal);
		[propget, id(9), helpstring("RoutingData")] HRESULT RoutingData([out, retval] BSTR *pVal);
        };
        [
                object,
                uuid(2199F5F5-CEFC-11D0-A341-0000F800E68D),
                dual,
                helpstring("IFaxRoutingMethod Interface"),
                pointer_default(unique)
        ]
        interface IFaxRoutingMethods : IDispatch
        {
                [propget, id(1), helpstring("Routing Method Count")] HRESULT Count([out, retval] long *pVal);
                [propget, id(2), helpstring("property Item")] HRESULT Item([in] long Index, [out, retval] VARIANT *pVal);                                
        };
	[
		object,
		uuid(8B97E605-D054-11D0-B226-00C04FB6C2F5),
		dual,
		helpstring("IFaxStatus Interface"),
		pointer_default(unique)
	]
	interface IFaxStatus : IDispatch
	{
		[propget, id(1), helpstring("CallerId")] HRESULT CallerId([out, retval] BSTR *pVal);
		[propget, id(2), helpstring("Csid")] HRESULT Csid([out, retval] BSTR *pVal);
		[propget, id(3), helpstring("CurrentPage")] HRESULT CurrentPage([out, retval] long *pVal);
		[propget, id(4), helpstring("DeviceId")] HRESULT DeviceId([out, retval] long *pVal);
		[propget, id(5), helpstring("DeviceName")] HRESULT DeviceName([out, retval] BSTR *pVal);
		[propget, id(6), helpstring("DocumentName")] HRESULT DocumentName([out, retval] BSTR *pVal);
                [propget, id(8), helpstring("Sending a fax")] HRESULT Send([out, retval] BOOL *pVal);
		[propget, id(9), helpstring("Receiving a fax")] HRESULT Receive([out, retval] BOOL *pVal);
		[propget, id(10), helpstring("Address")] HRESULT Address([out, retval] BSTR *pVal);
                [propget, id(12), helpstring("RoutingString")] HRESULT RoutingString([out, retval] BSTR *pVal);
		[propget, id(13), helpstring("SenderName")] HRESULT SenderName([out, retval] BSTR *pVal);
		[propget, id(14), helpstring("RecipientName")] HRESULT RecipientName([out, retval] BSTR *pVal);
		[propget, id(15), helpstring("DocumentSize")] HRESULT DocumentSize([out, retval] long *pVal);
		[propget, id(16), helpstring("Description")] HRESULT Description([out, retval] BSTR *pVal);
		[propget, id(17), helpstring("PageCount")] HRESULT PageCount([out, retval] long *pVal);
		[propget, id(18), helpstring("Tsid")] HRESULT Tsid([out, retval] BSTR *pVal);
		[propget, id(19), helpstring("StartTime")] HRESULT StartTime([out, retval] DATE *pVal);
		[propget, id(20), helpstring("SubmittedTime")] HRESULT SubmittedTime([out, retval] DATE *pVal);
		[propget, id(21), helpstring("ElapsedTime")] HRESULT ElapsedTime([out, retval] DATE *pVal);
		[id(22), helpstring("method Refresh")] HRESULT Refresh();
	};
	[
		object,
		uuid(FA21F4C5-5C4C-11D1-83CF-00C04FB6E984),
		dual,
		helpstring("IFaxDoc Interface"),
		pointer_default(unique)
	]
	interface IFaxDoc : IDispatch
	{
		[propget, id(1), helpstring("FileName")] HRESULT FileName([out, retval] BSTR *pVal);
		[propput, id(1), helpstring("FileName")] HRESULT FileName([in] BSTR newVal);
		[propget, id(2), helpstring("CoverpageName")] HRESULT CoverpageName([out, retval] BSTR *pVal);
		[propput, id(2), helpstring("CoverpageName")] HRESULT CoverpageName([in] BSTR newVal);
		[propget, id(3), helpstring("Send a Coverpage")] HRESULT SendCoverpage([out, retval] BOOL *pVal);
		[propput, id(3), helpstring("Send a Coverpage")] HRESULT SendCoverpage([in] BOOL newVal);
		[propget, id(4), helpstring("Server Coverpage")] HRESULT ServerCoverpage([out, retval] BOOL *pVal);
		[propput, id(4), helpstring("Server Coverpage")] HRESULT ServerCoverpage([in] BOOL newVal);
		[propget, id(5), helpstring("send at discount rates")] HRESULT DiscountSend([out, retval] BOOL *pVal);
		[propput, id(5), helpstring("send at discount rates")] HRESULT DiscountSend([in] BOOL newVal);
		[propget, id(6), helpstring("RecipientName")] HRESULT RecipientName([out, retval] BSTR *pVal);
		[propput, id(6), helpstring("RecipientName")] HRESULT RecipientName([in] BSTR newVal);
		[propget, id(7), helpstring("RecipientCompany")] HRESULT RecipientCompany([out, retval] BSTR *pVal);
		[propput, id(7), helpstring("RecipientCompany")] HRESULT RecipientCompany([in] BSTR newVal);
		[propget, id(8), helpstring("RecipientAddress")] HRESULT RecipientAddress([out, retval] BSTR *pVal);
		[propput, id(8), helpstring("RecipientAddress")] HRESULT RecipientAddress([in] BSTR newVal);
		[propget, id(9), helpstring("RecipientCity")] HRESULT RecipientCity([out, retval] BSTR *pVal);
		[propput, id(9), helpstring("RecipientCity")] HRESULT RecipientCity([in] BSTR newVal);
		[propget, id(10), helpstring("RecipientState")] HRESULT RecipientState([out, retval] BSTR *pVal);
		[propput, id(10), helpstring("RecipientState")] HRESULT RecipientState([in] BSTR newVal);
		[propget, id(11), helpstring("RecipientZip")] HRESULT RecipientZip([out, retval] BSTR *pVal);
		[propput, id(11), helpstring("RecipientZip")] HRESULT RecipientZip([in] BSTR newVal);
		[propget, id(12), helpstring("RecipientCountry")] HRESULT RecipientCountry([out, retval] BSTR *pVal);
		[propput, id(12), helpstring("RecipientCountry")] HRESULT RecipientCountry([in] BSTR newVal);
		[propget, id(13), helpstring("RecipientTitle")] HRESULT RecipientTitle([out, retval] BSTR *pVal);
		[propput, id(13), helpstring("RecipientTitle")] HRESULT RecipientTitle([in] BSTR newVal);
		[propget, id(14), helpstring("RecipientDepartment")] HRESULT RecipientDepartment([out, retval] BSTR *pVal);
		[propput, id(14), helpstring("RecipientDepartment")] HRESULT RecipientDepartment([in] BSTR newVal);
		[propget, id(15), helpstring("RecipientOffice")] HRESULT RecipientOffice([out, retval] BSTR *pVal);
		[propput, id(15), helpstring("RecipientOffice")] HRESULT RecipientOffice([in] BSTR newVal);
		[propget, id(16), helpstring("RecipientHomePhone")] HRESULT RecipientHomePhone([out, retval] BSTR *pVal);
		[propput, id(16), helpstring("RecipientHomePhone")] HRESULT RecipientHomePhone([in] BSTR newVal);
		[propget, id(17), helpstring("RecipientOfficePhone")] HRESULT RecipientOfficePhone([out, retval] BSTR *pVal);
		[propput, id(17), helpstring("RecipientOfficePhone")] HRESULT RecipientOfficePhone([in] BSTR newVal);
		[propget, id(18), helpstring("SenderName")] HRESULT SenderName([out, retval] BSTR *pVal);
		[propput, id(18), helpstring("SenderName")] HRESULT SenderName([in] BSTR newVal);
		[propget, id(19), helpstring("SenderCompany")] HRESULT SenderCompany([out, retval] BSTR *pVal);
		[propput, id(19), helpstring("SenderCompany")] HRESULT SenderCompany([in] BSTR newVal);
		[propget, id(20), helpstring("SenderAddress")] HRESULT SenderAddress([out, retval] BSTR *pVal);
		[propput, id(20), helpstring("SenderAddress")] HRESULT SenderAddress([in] BSTR newVal);
		[propget, id(21), helpstring("SenderTitle")] HRESULT SenderTitle([out, retval] BSTR *pVal);
		[propput, id(21), helpstring("SenderTitle")] HRESULT SenderTitle([in] BSTR newVal);
		[propget, id(22), helpstring("SenderDepartment")] HRESULT SenderDepartment([out, retval] BSTR *pVal);
		[propput, id(22), helpstring("SenderDepartment")] HRESULT SenderDepartment([in] BSTR newVal);
		[propget, id(23), helpstring("SenderOffice")] HRESULT SenderOffice([out, retval] BSTR *pVal);
		[propput, id(23), helpstring("SenderOffice")] HRESULT SenderOffice([in] BSTR newVal);
		[propget, id(24), helpstring("SenderHomePhone")] HRESULT SenderHomePhone([out, retval] BSTR *pVal);
		[propput, id(24), helpstring("SenderHomePhone")] HRESULT SenderHomePhone([in] BSTR newVal);
		[propget, id(25), helpstring("SenderOfficePhone")] HRESULT SenderOfficePhone([out, retval] BSTR *pVal);
		[propput, id(25), helpstring("SenderOfficePhone")] HRESULT SenderOfficePhone([in] BSTR newVal);
		[propget, id(26), helpstring("CoverpageNote")] HRESULT CoverpageNote([out, retval] BSTR *pVal);
		[propput, id(26), helpstring("CoverpageNote")] HRESULT CoverpageNote([in] BSTR newVal);
		[propget, id(27), helpstring("CoverpageSubject")] HRESULT CoverpageSubject([out, retval] BSTR *pVal);
		[propput, id(27), helpstring("CoverpageSubject")] HRESULT CoverpageSubject([in] BSTR newVal);
		[propget, id(28), helpstring("Tsid")] HRESULT Tsid([out, retval] BSTR *pVal);
		[propput, id(28), helpstring("Tsid")] HRESULT Tsid([in] BSTR newVal);
		[propget, id(29), helpstring("BillingCode")] HRESULT BillingCode([out, retval] BSTR *pVal);
		[propput, id(29), helpstring("BillingCode")] HRESULT BillingCode([in] BSTR newVal);
		[propget, id(30), helpstring("EmailAddress")] HRESULT EmailAddress([out, retval] BSTR *pVal);
		[propput, id(30), helpstring("EmailAddress")] HRESULT EmailAddress([in] BSTR newVal);
		[propget, id(31), helpstring("Document DisplayName")] HRESULT DisplayName([out, retval] BSTR *pVal);
		[propput, id(31), helpstring("Document DisplayName")] HRESULT DisplayName([in] BSTR newVal);
		[id(32), helpstring("Send a single fax")] HRESULT Send([out, retval]long *pVal);
		[propget, id(33), helpstring("Fax Number")] HRESULT FaxNumber([out, retval] BSTR *pVal);
		[propput, id(33), helpstring("Fax Number")] HRESULT FaxNumber([in] BSTR newVal);
                [propputref, id(34), helpstring("Tapi Connection Object")] HRESULT ConnectionObject([in] IDispatch* newVal);
                [propget, id(35), helpstring("Call Handle")] HRESULT CallHandle([out, retval] long *pVal);
		[propput, id(35), helpstring("Call Handle")] HRESULT CallHandle([in] long newVal);
                [propget, id(36), helpstring("SenderFax")] HRESULT SenderFax([out, retval] BSTR *pVal);
		[propput, id(36), helpstring("SenderFax")] HRESULT SenderFax([in] BSTR newVal);
                
	};	
	[
		object,
		uuid(55DABFD3-5C9E-11D1-B791-000000000000),
		dual,
		helpstring("IFaxJobs Interface"),
		pointer_default(unique)
	]
	interface IFaxJobs : IDispatch
	{
		[propget, id(1), helpstring("Job count")] HRESULT Count([out, retval] long *pVal);
		[propget, id(2), helpstring("property Item")] HRESULT Item(long Index, [out, retval] VARIANT *pVal);
	};
	[
		object,
		uuid(55DABFD5-5C9E-11D1-B791-000000000000),
		dual,
		helpstring("IFaxJob Interface"),
		pointer_default(unique)
	]
	interface IFaxJob : IDispatch
	{
		[propget, id(1), helpstring("JobId")] HRESULT JobId([out, retval] long *pVal);
		[propget, id(2), helpstring("Type")] HRESULT Type([out, retval] long *pVal);
		[propget, id(3), helpstring("UserName")] HRESULT UserName([out, retval] BSTR *pVal);
		[propget, id(4), helpstring("QueueStatus")] HRESULT QueueStatus([out, retval] BSTR *pVal);
		[propget, id(5), helpstring("DeviceStatus")] HRESULT DeviceStatus([out, retval] BSTR *pVal);
		[propget, id(6), helpstring("PageCount")] HRESULT PageCount([out, retval] long *pVal);
		[propget, id(7), helpstring("FaxNumber")] HRESULT FaxNumber([out, retval] BSTR *pVal);
		[propget, id(8), helpstring("RecipientName")] HRESULT RecipientName([out, retval] BSTR *pVal);
		[propget, id(9), helpstring("Tsid")] HRESULT Tsid([out, retval] BSTR *pVal);
		[propget, id(10), helpstring("SenderName")] HRESULT SenderName([out, retval] BSTR *pVal);
		[propget, id(11), helpstring("SenderCompany")] HRESULT SenderCompany([out, retval] BSTR *pVal);
		[propget, id(12), helpstring("SenderDept")] HRESULT SenderDept([out, retval] BSTR *pVal);
		[propget, id(13), helpstring("BillingCode")] HRESULT BillingCode([out, retval] BSTR *pVal);
		[propget, id(14), helpstring("DisplayName")] HRESULT DisplayName([out, retval] BSTR *pVal);
		[propget, id(15), helpstring("send at discount rates")] HRESULT DiscountSend([out, retval] BOOL *pVal);
                [id(16), helpstring("Change job Status")] HRESULT SetStatus(long Command);
		[id(17), helpstring("Refresh job Status")] HRESULT Refresh();
	};
[
        uuid(87099223-C7AF-11D0-B225-00C04FB6C2F5),
        version(1.0),
        helpstring("faxcom 1.0 Type Library")
]
library FAXCOMLib
{
        importlib("stdole32.tlb");
        importlib("stdole2.tlb");

        [
                uuid(87099231-C7AF-11D0-B225-00C04FB6C2F5),
                helpstring("FaxTiff Class")
        ]
        coclass FaxTiff
        {
                [default] interface IFaxTiff;
        };
        [
                uuid(D73733C8-CC80-11D0-B225-00C04FB6C2F5),
                helpstring("FaxServer Class")
        ]
        coclass FaxServer
        {
                [default] interface IFaxServer;
        };
        [
                uuid(D73733CD-CC80-11D0-B225-00C04FB6C2F5),
                helpstring("FaxPort Class")
        ]
        coclass FaxPort
        {
                [default] interface IFaxPort;
        };
        [
                uuid(D73733D6-CC80-11D0-B225-00C04FB6C2F5),
                helpstring("FaxPorts Class")
        ]
        coclass FaxPorts
        {
                [default] interface IFaxPorts;
        };
        [
                uuid(2199F5F4-CEFC-11D0-A341-0000F800E68D),
                helpstring("FaxRoutingMethod Class")
        ]
        coclass FaxRoutingMethod
        {
                [default] interface IFaxRoutingMethod;
        };
        [
                uuid(2199F5F6-CEFC-11D0-A341-0000F800E68D),
                helpstring("FaxRoutingMethods Class")
        ]
        coclass FaxRoutingMethods
        {
                [default] interface IFaxRoutingMethods;
        };
	[
		uuid(8B97E606-D054-11D0-B226-00C04FB6C2F5),
		helpstring("FaxStatus Class")
	]
	coclass FaxStatus
	{
		[default] interface IFaxStatus;
	};
	[
		uuid(FA21F4C6-5C4C-11D1-83CF-00C04FB6E984),
		helpstring("FaxDoc Class")
	]
	coclass FaxDoc
	{
		[default] interface IFaxDoc;
	};
	[
		uuid(55DABFD4-5C9E-11D1-B791-000000000000),
		helpstring("FaxJobs Class")
	]
	coclass FaxJobs
	{
		[default] interface IFaxJobs;
	};
	[
		uuid(55DABFD6-5C9E-11D1-B791-000000000000),
		helpstring("FaxJob Class")
	]
	coclass FaxJob
	{
		[default] interface IFaxJob;
	};
};
