*PPD-Adobe:  "4.1"
*% Adobe Systems Printer Description File
*% For "QMS 1725 Print System" version 2011.22
*% Date: 1/17/94
*% Modified: 8/24/95

*FormatVersion: "4.1"
*FileVersion: "3.0"
*LanguageEncoding: JIS83-RKSJ
*LanguageVersion: Japanese
*PCFileName: "QM1725J6.PPD"

*Product: "(QMS 1725 Print System)"
*PSVersion: "(2011.22) 13"
*ModelName: "QMS 1725 (Kanji F6)"
*NickName: "QMS 1725 (Kanji F6)"

*% General Information and Defaults ===============
*LanguageLevel: "2"
*FreeVM: "1364068"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
save
  statusdict /diskonline get exec {(True)}{(False)} ifelse = flush
restore
"
*End
*Throughput: "17"
*Password: "0"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING : Cannot perform the exitserver command.) = 
     (Password supplied is not valid.) = 
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution/解像度: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 300dpi: "1 dict dup /HWResolution [300 300] put setpagedevice"
*Resolution 600dpi: "1 dict dup /HWResolution [600 600] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "71.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{ dup mul exch dup mul add 1 exch sub }"

*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*Transfer Normalized: "{ }"
*Transfer Normalized.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*%Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A4: "
    2 dict dup /PageSize [596 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 757] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Monarch: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Comm10: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize DL: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
   8 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [596 842] (A4) put
   dup [516 729] (B5) put
   dup [522 757] (Executive) put
   dup [279 540] (Monarch) put
   dup [297 684] (Comm10) put
   dup [312 624] (DL) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A4: "
    2 dict dup /PageSize [596 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [522 757] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Monarch: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Comm10: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion DL: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea A4: "12 10 582 831 "
*ImageableArea Letter: "12 10 599 781 "
*ImageableArea Legal: "12 10 599 996 "
*ImageableArea Executive: "12 10 510 746 "
*ImageableArea Monarch: "12 1 279 529 "
*ImageableArea Comm10: "12 1 296 673 "
*ImageableArea DL: "12 1 311 612 "
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension A4: "595 842"
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Executive: "523 757"
*PaperDimension Monarch: "280 541"
*PaperDimension Comm10: "297 685"
*PaperDimension DL: "312 624"

*OpenUI *OutputBin/排紙: PickOne
*OrderDependency: 25 AnySetup *OutputBin
*DefaultOutputBin: Upper
*OutputBin Upper/標準（上部）: "
  currentpagedevice /OutputAttributes get 1 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /OutputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
 
*OutputBin Back/後部: "
  currentpagedevice /OutputAttributes get 2 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /OutputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End

*?OutputBin: "
save
  2 dict
  dup /1 (Upper) put
  dup /2 (Back) put
  currentpagedevice /OutputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *OutputBin

*OpenUI *InputSlot/給紙口: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/上トレイ: "
  currentpagedevice /InputAttributes get 1 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Lower/下トレイ: "
  currentpagedevice /InputAttributes get 2 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [2] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Envelope/封筒フィーダ: "
  currentpagedevice /InputAttributes get 3 get 
  dup null eq 
  { pop } 
  { dup length 1 add dict copy 
    dup /InputAttributes
    1 dict dup /Priority [3] put
    put setpagedevice
  } ifelse"
*End

*?InputSlot: "
save
  3 dict
  dup /1 (Upper) put
  dup /2 (Lower) put
  dup /3 (Envelope) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *ManualFeed/手差し: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore"
*ManualFeed True/あり: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False/なし: "1 dict dup /ManualFeed false put setpagedevice"
*End
*CloseUI: *ManualFeed

*DefaultOutputOrder: Normal

*OpenUI *Duplex/両面印刷: PickOne
*OrderDependency: 40 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/なし: "1 dict dup /Duplex false put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexNoTumble/あり（横綴じ）:"
  1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexTumble/あり（縦綴じ）:"
  1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble true put setpagedevice"
*End
*?Duplex: "save
   currentpagedevice /Duplex get
   { currentpagedevice /Tumble get
       {(DuplexTumble)}{(DuplexNoTumble)}ifelse
   }
   { (None)}
   ifelse = flush
restore
"
*End
*CloseUI: *Duplex

*OpenUI *TraySwitch/トレイ自動切り替え: Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True/あり: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False/なし: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)"
*Font AvantGarde-BookOblique: Standard "(001.002)"
*Font AvantGarde-Demi: Standard "(001.003)"
*Font AvantGarde-DemiOblique: Standard "(001.003)"
*Font Bookman-Demi: Standard "(001.001)"
*Font Bookman-DemiItalic: Standard "(001.001)"
*Font Bookman-Light: Standard "(001.001)"
*Font Bookman-LightItalic: Standard "(001.001)"
*Font Courier: Standard "(002.003)"
*Font Courier-Bold: Standard "(002.003)"
*Font Courier-BoldOblique: Standard "(002.003)"
*Font Courier-Oblique: Standard "(002.003)"
*Font Helvetica: Standard "(001.006)"
*Font Helvetica-Bold: Standard "(001.007)"
*Font Helvetica-BoldOblique: Standard "(001.007)"
*Font Helvetica-Condensed: Standard "(001.001)"
*Font Helvetica-Condensed-Bold: Standard "(001.002)"
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)"
*Font Helvetica-Condensed-Oblique: Standard "(001.001)"
*Font Helvetica-Narrow: Standard "(001.006)"
*Font Helvetica-Narrow-Bold: Standard "(001.007)"
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)"
*Font Helvetica-Narrow-Oblique: Standard "(001.006)"
*Font Helvetica-Oblique: Standard "(001.006)"
*Font NewCenturySchlbk-Bold: Standard "(001.006)"
*Font NewCenturySchlbk-BoldItalic: Standard "(001.004)"
*Font NewCenturySchlbk-Italic: Standard "(001.003)"
*Font NewCenturySchlbk-Roman: Standard "(001.004)"
*Font Palatino-Bold: Standard "(001.002)"
*Font Palatino-BoldItalic: Standard "(001.002)"
*Font Palatino-Italic: Standard "(001.002)"
*Font Palatino-Roman: Standard "(001.001)"
*Font Symbol: Special "(001.007)"
*Font Times-Bold: Standard "(001.007)"
*Font Times-BoldItalic: Standard "(001.009)"
*Font Times-Italic: Standard "(001.007)"
*Font Times-Roman: Standard "(001.007)"
*Font ZapfChancery-MediumItalic: Standard "(001.003)"
*Font ZapfDingbats: Special "(001.002)"
*Font Mincho-PC-Hiragana: Special "(002.000)"
*Font Mincho-PC-Katakana: Special "(002.000)"
*Font Ryumin-Light-83pv-RKSJ-H: RKSJ "(003.001)"
*Font Ryumin-Light-Add-H: JIS "(003.001)"
*Font Ryumin-Light-Add-RKSJ-H: RKSJ "(003.001)"
*Font Ryumin-Light-Add-RKSJ-V: RKSJ "(003.001)"
*Font Ryumin-Light-Add-V: JIS "(003.001)"
*Font Ryumin-Light-EUC-H: EUC "(003.001)"
*Font Ryumin-Light-EUC-V: EUC "(003.001)"
*Font Ryumin-Light-Ext-H: JIS "(003.001)"
*Font Ryumin-Light-Ext-RKSJ-H: RKSJ "(003.001)"
*Font Ryumin-Light-Ext-RKSJ-V: RKSJ "(003.001)"
*Font Ryumin-Light-Ext-V: JIS "(003.001)"
*Font Ryumin-Light-H: JIS "(003.001)"
*Font Ryumin-Light-NWP-H: JIS "(003.001)"
*Font Ryumin-Light-NWP-V: JIS "(003.001)"
*Font Ryumin-Light-RKSJ-H: RKSJ "(003.001)"
*Font Ryumin-Light-RKSJ-UserGaiji: Special "(003.001)"
*Font Ryumin-Light-RKSJ-V: RKSJ "(003.001)"
*Font Ryumin-Light-V: JIS "(003.001)"
*Font Ryumin-Light.Oubun: Special "(003.001)"
*Font Ryumin-Light.Roman: Special "(003.001)"
*Font Ryumin-Light.WP-Symbol: Special "(003.001)"
*Font GothicBBB-Medium-83pv-RKSJ-H: RKSJ "(003.002)"
*Font GothicBBB-Medium-Add-H: JIS "(003.002)"
*Font GothicBBB-Medium-Add-RKSJ-H: RKSJ "(003.002)"
*Font GothicBBB-Medium-Add-RKSJ-V: RKSJ "(003.002)"
*Font GothicBBB-Medium-Add-V: JIS "(003.002)"
*Font GothicBBB-Medium-EUC-H: EUC "(003.002)"
*Font GothicBBB-Medium-EUC-V: EUC "(003.002)"
*Font GothicBBB-Medium-Ext-H: JIS "(003.002)"
*Font GothicBBB-Medium-Ext-RKSJ-H: RKSJ "(003.002)"
*Font GothicBBB-Medium-Ext-RKSJ-V: RKSJ "(003.002)"
*Font GothicBBB-Medium-Ext-V: JIS "(003.002)"
*Font GothicBBB-Medium-H: JIS "(003.002)"
*Font GothicBBB-Medium-NWP-H: JIS "(003.002)"
*Font GothicBBB-Medium-NWP-V: JIS "(003.002)"
*Font GothicBBB-Medium-RKSJ-H: RKSJ "(003.002)"
*Font GothicBBB-Medium-RKSJ-UserGaiji: Special "(003.002)"
*Font GothicBBB-Medium-RKSJ-V: RKSJ "(003.002)"
*Font GothicBBB-Medium-V: JIS "(003.002)"
*Font GothicBBB-Medium.Oubun: Special "(003.002)"
*Font GothicBBB-Medium.Roman: Special "(003.002)"
*Font GothicBBB-Medium.WP-Symbol: Special "(003.002)"
*Font TypeBankM-M-83pv-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-M-Add-H: JIS "(003.001)"
*Font TypeBankM-M-Add-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-M-Add-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-M-Add-V: JIS "(003.001)"
*Font TypeBankM-M-EUC-H: EUC "(003.001)"
*Font TypeBankM-M-EUC-V: EUC "(003.001)"
*Font TypeBankM-M-Ext-H: JIS "(003.001)"
*Font TypeBankM-M-Ext-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-M-Ext-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-M-Ext-V: JIS "(003.001)"
*Font TypeBankM-M-H: JIS "(003.001)"
*Font TypeBankM-M-NWP-H: JIS "(003.001)"
*Font TypeBankM-M-NWP-V: JIS "(003.001)"
*Font TypeBankM-M-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-M-RKSJ-UserGaiji: Special "(003.001)"
*Font TypeBankM-M-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-M-V: JIS "(003.001)"
*Font TypeBankM-M.Roman: Special "(003.001)"
*Font TypeBankM-H-83pv-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-H-Add-H: JIS "(003.001)"
*Font TypeBankM-H-Add-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-H-Add-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-H-Add-V: JIS "(003.001)"
*Font TypeBankM-H-EUC-H: EUC "(003.001)"
*Font TypeBankM-H-EUC-V: EUC "(003.001)"
*Font TypeBankM-H-Ext-H: JIS "(003.001)"
*Font TypeBankM-H-Ext-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-H-Ext-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-H-Ext-V: JIS "(003.001)"
*Font TypeBankM-H-H: JIS "(003.001)"
*Font TypeBankM-H-NWP-H: JIS "(003.001)"
*Font TypeBankM-H-NWP-V: JIS "(003.001)"
*Font TypeBankM-H-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankM-H-RKSJ-UserGaiji: Special "(003.001)"
*Font TypeBankM-H-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankM-H-V: JIS "(003.001)"
*Font TypeBankM-H.Roman: Special "(003.001)"
*Font TypeBankG-B-83pv-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-B-Add-H: JIS "(003.001)"
*Font TypeBankG-B-Add-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-B-Add-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-B-Add-V: JIS "(003.001)"
*Font TypeBankG-B-EUC-H: EUC "(003.001)"
*Font TypeBankG-B-EUC-V: EUC "(003.001)"
*Font TypeBankG-B-Ext-H: JIS "(003.001)"
*Font TypeBankG-B-Ext-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-B-Ext-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-B-Ext-V: JIS "(003.001)"
*Font TypeBankG-B-H: JIS "(003.001)"
*Font TypeBankG-B-NWP-H: JIS "(003.001)"
*Font TypeBankG-B-NWP-V: JIS "(003.001)"
*Font TypeBankG-B-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-B-RKSJ-UserGaiji: Special "(003.001)"
*Font TypeBankG-B-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-B-V: JIS "(003.001)"
*Font TypeBankG-B.Roman: Special "(003.001)"
*Font TypeBankG-H-83pv-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-H-Add-H: JIS "(003.001)"
*Font TypeBankG-H-Add-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-H-Add-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-H-Add-V: JIS "(003.001)"
*Font TypeBankG-H-EUC-H: EUC "(003.001)"
*Font TypeBankG-H-EUC-V: EUC "(003.001)"
*Font TypeBankG-H-Ext-H: JIS "(003.001)"
*Font TypeBankG-H-Ext-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-H-Ext-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-H-Ext-V: JIS "(003.001)"
*Font TypeBankG-H-H: JIS "(003.001)"
*Font TypeBankG-H-NWP-H: JIS "(003.001)"
*Font TypeBankG-H-NWP-V: JIS "(003.001)"
*Font TypeBankG-H-RKSJ-H: RKSJ "(003.001)"
*Font TypeBankG-H-RKSJ-UserGaiji: Special "(003.001)"
*Font TypeBankG-H-RKSJ-V: RKSJ "(003.001)"
*Font TypeBankG-H-V: JIS "(003.001)"
*Font TypeBankG-H.Roman: Special "(003.001)"
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "serial25"
*Source: "AppleTalk"
*Source: "Centronics"
*Source: "Optional I/O"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Paper Out"
*PrinterError: "Paper Jam"
*PrinterError: "Off line"

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*%  For 85 lpi / 600 dpi  (5,5,2,6,6,2,20/3,0) =====================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "85.0"

*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
{1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }
"
*End

*%  For 71 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "66.6667"

*% end of PPD file for QMS 1725 Print System.
