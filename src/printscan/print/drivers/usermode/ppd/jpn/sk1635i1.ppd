*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Last Edit Date: Mar 30 1998
*% Modified by Masami Maki, SIID from code by
*% Mark Bate, SIDC. V +1.408.922-5800 F +1.408.922-5840 mark_bate@seiko.com
*% Seiko Instruments Printer Description File
*% Copyright 1990-1998 Seiko Instruments Development Corporation. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% Portions Copyright 1987-1998 Adobe Systems Incorporated. 
*% End of Copyright statement

*% Seiko Instruments (R) is a registered trademark of Seiko Instruments Inc.
*% SII TM is a trademark of Seiko Instruments Inc.

*FormatVersion: "4.3"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English

*% PCFileName Convention SK1635L#.PPD
*% SK is set by Adobe, 1635 is model
*% L is Localization: A=Asia (Roman),E=Europe (Roman),I=International (Roman),Z=Global (Roman),U=USA(Roman), J=Kanji 2 font, K=Kanji 7 font
*% # is Seiko Installer version integer
*PCFileName: "SK1635I1.PPD"

*Manufacturer: "Seiko"
*Product: "(ColorPoint 1635PS)"
*PSVersion: "(2015.105) 220"
*ModelName: "Seiko ColorPoint 1635PS Int v2015.105"
*ShortNickName: "Seiko ColorPoint 1635PS Int"
*NickName: "Seiko ColorPoint 1635PS Int v2015.105"

*% === Options and Constraints =========
*OpenGroup: InstallableOptions

*OpenUI *InstalledMemory/Memory Installed: PickOne
*DefaultInstalledMemory: 32Meg
*InstalledMemory 32Meg/32Meg (Standard):	""
*InstalledMemory 96Meg/96Meg (Adds Recomposite printing):	""
*?InstalledMemory: "
save
	currentsystemparams /RamSize get
	1048576 div ceiling cvi
	dup dup 32 eq exch 96 eq or
		{10 string cvs print(Meg)}{pop(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *InstalledMemory

*OpenUI *Option1/SII Pre-press Color Management :	PickOne
*DefaultOption1: On
*Option1 On/On:	""
*Option1 None/Off:	""
*CloseUI:	*Option1

*OpenUI *Option2/RGB Conversion Menu :	PickOne
*DefaultOption2: None
*Option2 None/Standard:	""
*Option2 Extended:	""
*CloseUI:	*Option2

*OpenUI *Option3/ColorPoint 1635PS PPD Rev. :	PickOne
*DefaultOption3: None
*%Option3 On/1.0.0p International:	""
*Option3 None/1.0.0p International:	""
*CloseUI:	*Option3

*CloseGroup: InstallableOptions

*% Installable Options Constraints ======================

*% Constrain for memory sizes
*UIConstraints: *InstalledMemory 32Meg *SKRecomposite
*UIConstraints:  *SKRecomposite *InstalledMemory 32Meg

*% Constrain for Press Support
*UIConstraints: *Option1 None *SKPMD
*UIConstraints: *Option1 None *SKColAdjust
*UIConstraints: *Option1 None *SKPaperColor
*UIConstraints: *Option1 None *SKDotGain
*UIConstraints: *Option1 None *SKInputAdjust
*UIConstraints: *Option1 None *SKGrayBalance
*UIConstraints: *Option1 None *SKMaxDensity
*UIConstraints: *Option1 None *SKCalibration
*UIConstraints: *Option1 None *SKCRD DTP
*UIConstraints: *Option1 None *SKCRD MON
*UIConstraints: *Option1 None *SKCRD REV

*% ReConstrain for Press Support
*UIConstraints: *SKPMD *Option1 None
*UIConstraints: *SKColAdjust *Option1 None
*UIConstraints: *SKPaperColor *Option1 None
*UIConstraints: *SKDotGain *Option1 None
*UIConstraints: *SKInputAdjust *Option1 None
*UIConstraints: *SKGrayBalance *Option1 None
*UIConstraints: *SKMaxDensity *Option1 None
*UIConstraints: *SKCalibration *Option1 None
*UIConstraints: *SKCRD DTP *Option1 None
*UIConstraints: *SKCRD MON *Option1 None
*UIConstraints: *SKCRD REV *Option1 None

*% Constrain for CRD
*UIConstraints: *Option2 None *SKCRD PRE
*UIConstraints: *Option2 None *SKCRD DES
*UIConstraints: *Option2 None *SKCRD VEW
*UIConstraints: *Option2 None *SKCRD MED

*% ReConstrain for CRD
*UIConstraints: *SKCRD PRE *Option2 None
*UIConstraints: *SKCRD DES *Option2 None
*UIConstraints: *SKCRD VEW *Option2 None
*UIConstraints: *SKCRD MED *Option2 None

*% User Interface Constraints ======================

*% Constrain for PMD Support
*UIConstraints: *SKPMD None *SKColAdjust True
*UIConstraints: *SKPMD None *SKPaperColor True
*UIConstraints: *SKPMD None *SKDotGain True
*UIConstraints: *SKPMD None *SKInputAdjust True
*UIConstraints: *SKPMD None *SKGrayBalance True
*UIConstraints: *SKPMD None *SKMaxDensity True

*% ReConstrain for PMD Support
*UIConstraints: *SKColAdjust True *SKPMD None
*UIConstraints: *SKPaperColor True *SKPMD None
*UIConstraints: *SKDotGain True *SKPMD None
*UIConstraints: *SKInputAdjust True *SKPMD None
*UIConstraints: *SKGrayBalance True *SKPMD None
*UIConstraints: *SKMaxDensity True *SKPMD None

*% Constrain for PageSizePolicy & Manual Feed
*%UIConstraints: *InputSlot ManualFeed *SKPageSizePolicy
*%UIConstraints: *SKPageSizePolicy *InputSlot ManualFeed

*% Constrain for Interpolation Resolution
*UIConstraints: *SKInterpolationM None *SKInterpolationR
*UIConstraints: *SKInterpolationR *SKInterpolationM None

*% System Management ===========================
*JobPatchFile 1:"

%%!PS-Adobe-3.0
%%BeginFile: Seiko Instruments PPD *JobPatchFile 1
%%Copyright: 1990-1997 Seiko Instruments Incorporated. All Rights Reserved.
%%Copyright: by Sol & Mark @ Seiko Instruments Development Corporation
%%Copyright: Portions by Hiroyuki Takeuchi @ Seiko Instruments Information Devices
%%Copyright: V+1.408.922.5800, F+1.408.922.5840 mark_bate@seiko.com
%%Updated 971121

globaldict/SKJobPatch? known not
{	currentglobal true setglobal
	globaldict /SKJobPatch? true put
	globaldict/SKRecompositeFrom 0 put
% The following two lines set the offset to compensate for QXP RegMarks
	globaldict/SKQRK_xoffset# 0 put
	globaldict/SKQRK_yoffset# 0 put
	setglobal
	%true SK_SetCalibration
	0 5 SK_SetLocalPrint
	0 SK_SetInterpolationM
	0 SK_SetInterpolationR
	false SK_SetPaperColor
	false SK_SetDotGain
	false SK_SetInputAdjust
	false SK_SetGrayBalance
	false SK_SetMaxDensity
	false SK_SetColAdjust
	[] false SK_SetSeparation
}if
%%EndFile: Seiko Instruments PPD *JobPatchFile 1
"
*End

*%QRKPatch StartofJob:		"%*QRKPatch StartofJob"
*%QRKPatch StartofProcset:	"%*QRKPatch StartofProcset"
*%QRKPatch EndofProcset:		"%*QRKPatch EndofProcset"
*%QRKPatch StartofInitalization:	"%*QRKPatch StartofInitalization"
*%QRKPatch EndofInitalization:		"%*QRKPatch EndofInitalization"
*%QRKPatch StartofPage:	"%*QRKPatch StartofPage"
*%QRKPatch EndofPage:		"%*QRKPatch EndofPage"
*%QRKPatch EndofJob:		"%*QRKPatch EndofJob"

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP TBCP
*TTRasterizer: Type42
*?TTRasterizer: "
save
	42 /FontType resourcestatus
 		{ pop pop (Type42)}
		{(None)} ifelse
	= flush
restore
"
*End

*FreeVM: "5200000"
*% Translations strings added here for Win95
*VMOption 32Meg/32Meg (Standard):	"5200000"
*VMOption 96Meg/96Meg (Optimal for Recomposite):	"14000000"

*ColorDevice: True
*DefaultColorSpace: CMYK
*FileSystem: True
*?FileSystem: "
save
	false (%disk?%) 
		{ currentdevparams dup /Writeable known
 			{ /Writeable get {pop true} if }{	pop } ifelse 
		} 10 string /IODevice resourceforall
 		{(True)}{(False)} ifelse
	= flush
restore
"
*End

*Throughput: "1"
*Password: "()" 
*ExitServer: "
count 0 eq
 { false } { true exch startjob } ifelse not
 		{	(WARNING: Cannot modify initial VM.) =
			(Missing or invalid password.) =
			(Please contact the author of this software.) = flush quit
 		} if
"
*End
*Reset: "
count 0 eq
 { false } { true exch startjob } ifelse not
		{	(WARNING: Cannot reset printer.) =
 			(Missing or invalid password.) =
 			(Please contact the author of this software.) = flush quit
		} if
systemdict /quit get exec
(WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 300dpi
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "0"
*PrintPSErrors: False


*% Document Setup +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*%*OpenGroup: RGB_Color_Conversion_Style
*% CRD Selection ===============
*OpenUI *SKCRD/RGB Color Conversion Style : PickOne
*OrderDependency: 40.0 AnySetup *SKCRD
*DefaultSKCRD: GEN
*SKCRD None/Default:		""
*SKCRD GEN/*General: 				"/GEN	SK_SetColorRendering"
*SKCRD PHF/Photographic1:			"/PHF	SK_SetColorRendering"
*SKCRD PHK/Photographic2:			"/PHK	SK_SetColorRendering"
*SKCRD CLR/Preserve Spot Colors:	"/CLR	SK_SetColorRendering"
*SKCRD STR/Business Graphics:		"/STR	SK_SetColorRendering"
*SKCRD BAD/Adjust Blue: 			"/BAD SK_SetColorRendering"
*%*SKCRD OHP/Overhead Projector:	"/OHP	SK_SetColorRendering"
*SKCRD NAT/Printer Native:			"/NAT	SK_SetColorRendering"

*SKCRD PRE/Presentation:			"/PRE	SK_SetColorRendering"
*SKCRD DES/Design:					"/DES	SK_SetColorRendering"
*SKCRD VEW/Mixed Graphics & Photo:"/VEW SK_SetColorRendering"
*SKCRD MED/Medical:					"/MED	SK_SetColorRendering"

*SKCRD DTP/Desktop Publishing (for Press):	"/DTP	SK_SetColorRendering"
*SKCRD MON/Print Monochrome (for Press):		"/MON	SK_SetColorRendering"
*SKCRD REV/Print Reverse Color (for Press):	"/REV SK_SetColorRendering"
*?SKCRD: "
save
	currentcolorrendering dup
	begin
		/ColorRenderingName known
			{	(<<)cvx exec
				(Gen)(None) (GEN)(GEN) (PHF)(PHF) (PHK)(PHK) (CLR)(CLR)
				(STR)(STR)  (BAD)(BAD) (NAT)(NAT) (PRE)(PRE) (DES)(DES)
				(VEW)(VEW)  (MED)(MED) (DTP)(DTP) (MON)(MON) (REV)(REV)
				(>>)cvx exec
				ColorRenderingName 0 3 getinterval
				2 copy known { get }{ pop pop (Unknown)}ifelse
			}
			{	(Unknown)}ifelse
	end
	= flush
restore
"
*End
*CloseUI: *SKCRD
*%*CloseGroup: RGB_Color_Conversion_Style

*%*OpenGroup: Footer_Print
*OpenUI *SKSelectFooter/Print Footer: PickOne
*OrderDependency: 50.0 AnySetup *SKSelectFooter
*DefaultSKSelectFooter: None
*SKSelectFooter None/*Off:	 	""
*SKSelectFooter 1/Standard: 	"1 SK_SelectFooter (//SK_PrintFooter)cvx exec SK_EndProc"
*SKSelectFooter 2/Color Match Information: 	"2 SK_SelectFooter (//SK_PrintFooter)cvx exec SK_EndProc"
*SKSelectFooter 3/Color bar:	"3 SK_SelectFooter (//SK_PrintFooter)cvx exec SK_EndProc"
*?SKSelectFooter:	"
save
	globaldict /SK_SelectFooter known
	globaldict /SeikoState known and
	{	globaldict /SeikoState get dup /CurrentFooterType known
		{	/CurrentFooterType get dup 0 lt{pop 4}{ dup 3 gt{ pop 4}if}ifelse
			[ (Unknown) (1) (2) (3) (Unknown) ]exch get
		}
		{ pop  (None)}ifelse
	}
	{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKSelectFooter
*%*CloseGroup: Footer_Print

*%*OpenGroup: Local_Print
*OpenUI *SKLocalPrint/Local Print: PickOne
*OrderDependency: 52.0 AnySetup *SKLocalPrint
*DefaultSKLocalPrint: None
*SKLocalPrint None/*Off:	 						"0  5	SK_SetLocalPrint"
*SKLocalPrint 2/On (timeout in 2 minutes): 	"1  2	SK_SetLocalPrint"
*SKLocalPrint 5/On (timeout in 5 minutes): 	"1  5	SK_SetLocalPrint"
*SKLocalPrint 10/On (timeout in 10 minutes):	"1 10	SK_SetLocalPrint"
*SKLocalPrint 0/On (never times out):			"1  0	SK_SetLocalPrint"
*?SKLocalPrint:	"
save
	(%Engine%) currentdevparams/LocalPrintTimeout known
		{	(%Engine%) currentdevparams/LocalPrintCount get 0 eq
				{	(None)}
				{	(<<)cvx exec
					2 (2) 5 (5) 10 (10) 0 (0)
					(>>)cvx exec
					(%Engine%) currentdevparams/LocalPrintTimeout get
					2 copy known { get }{ pop pop (Unknown)}ifelse
				}ifelse	
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKLocalPrint
*%*CloseGroup: Local_Print

*%*OpenGroup: ColorPoint_Image_Smoothing
*% Interpolation Selection ===============
*OpenUI *SKInterpolationM/Image Smoothing Method : PickOne
*OrderDependency: 54.0 AnySetup *SKInterpolationM
*DefaultSKInterpolationM: None
*SKInterpolationM None/*Off:				"0 SK_SetInterpolationM"
*SKInterpolationM 1/Bilinear:				"1 SK_SetInterpolationM"
*SKInterpolationM 2/Bicubic:				"2 SK_SetInterpolationM"
*SKInterpolationM 3/Blackman Sharp:		"3 SK_SetInterpolationM"
*SKInterpolationM 4/Blackman Smooth:	"4 SK_SetInterpolationM"
*SKInterpolationM 5/Blackman Fuzzy:		"5 SK_SetInterpolationM"
*SKInterpolationM 6/Blackman Blurry:	"6 SK_SetInterpolationM"
*?SKInterpolationM:	"
save
	currentpagedevice/DeviceRenderingInfo known
		{	currentpagedevice
			/DeviceRenderingInfo get
			/InterpolateType get
			dup 3 eq
				{	(%Engine%)currentdevparams/BlackmanCutoff known
					{	(%Engine%)currentdevparams/BlackmanCutoff get
						10 mul round cvi 5 exch sub add
					}	{	pop 7 }ifelse
				}if
			dup 0 lt {	pop 7 }{dup 6 gt {	pop 7 }if}ifelse
			[(None)(1)(2)(3)(4)(5)(6)(Unknown)]exch get
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKInterpolationM

*OpenUI *SKInterpolationR/Image Smoothing Resolution : PickOne
*OrderDependency: 56.0 AnySetup *SKInterpolationR
*DefaultSKInterpolationR: None
*SKInterpolationR None/*Auto:		"  0 SK_SetInterpolationR"
*SKInterpolationR 300/300 dpi:	"300 SK_SetInterpolationR"
*SKInterpolationR 150/150 dpi:	"150 SK_SetInterpolationR"
*SKInterpolationR 100/100 dpi:	"100 SK_SetInterpolationR"
*SKInterpolationR 75/ 75 dpi:	" 75 SK_SetInterpolationR"
*?SKInterpolationR:	"
save
	(%Engine%)currentdevparams/InterpolationResolution known
		{		(<<)cvx exec
				0 (None) 300 (300) 150 (150) 100 (100) 75 (75)
				(>>)cvx exec
				(%Engine%)currentdevparams/InterpolationResolution get
				2 copy known { get }{ pop pop (Unknown)}ifelse
		}
		{	(Unknown)} ifelse
	= flush
restore
"
*End
*CloseUI: *SKInterpolationR
*%*CloseGroup: ColorPoint_Image_Smoothing

*% Paper Handling ===================

*%*OpenGroup: ColorPoint_Media_Size_Error_Handling
*OpenUI *SKPageSizePolicy/Media Size Error Handling : PickOne
*OrderDependency: 58.0 AnySetup *SKPageSizePolicy
*DefaultSKPageSizePolicy: None
*SKPageSizePolicy None/Print Anyway:		"<</Policies<</PageSize 1>> >>setpagedevice"
*SKPageSizePolicy 3/Adjust to Fit Media:	"<</Policies<</PageSize 3>> >>setpagedevice"
*?SKPageSizePolicy:	"
save
	currentpagedevice/Policies get/PageSize get
	dup 1 eq
		{	pop (None)}
		{	3 eq {(3)}{(Unknown)}ifelse}ifelse
	= flush
restore
"
*End
*CloseUI: *SKPageSizePolicy
*%*CloseGroup: ColorPoint_Media_Size_Error_Handling

*OpenUI *InputSlot/Media from: PickOne
*OrderDependency: 60.0 AnySetup *InputSlot
*DefaultInputSlot: Cassette
*InputSlot Cassette:						"(<<)cvx exec/ManualFeed false(>>)cvx exec setpagedevice"
*CloseUI: *InputSlot

*DefaultOutputOrder: Normal

*OpenUI *PageSize: PickOne
*OrderDependency: 62.0 AnySetup *PageSize
*DefaultPageSize: A3W
*PageSize A3W/A3 Super Wide: "[899 1431]SK_SetPaperSize"
*?PageSize: "
save
	currentpagedevice /PageSize get aload pop 2 copy gt {exch} if 
	(Unknown) 
	(<<)cvx exec
	[899 1431] (A3W)
	(>>)cvx exec
		{	exch aload pop 4 index sub abs 5 le exch 
			5 index sub abs 5 le and 
			{	exch pop exit} {pop} ifelse
		} bind forall
	= flush pop pop
restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 64.0 AnySetup *PageRegion
*DefaultPageRegion: A3W
*PageRegion A3W/A3 Super Wide: "[899 1431]SK_SetPaperSize"
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A3W
*ImageableArea A3W/A3 Super Wide:				"11.5201 14.2801 887.04 1310.28 "
*?ImageableArea: "
save
	/cvp { (                ) cvs print ( ) print } bind def
	/upperright {10000 mul floor 10000 div} bind def
	/lowerleft {10000 mul ceiling 10000 div} bind def
	newpath clippath pathbbox
	4 -2 roll exch 2 {lowerleft cvp} repeat
	exch 2 {upperright cvp} repeat ()
	= flush
restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A3W
*PaperDimension A3W/A3 Super Wide:					"899 1431"

*% Halftone Information ===============
*ContoneOnly: True
*%DefaultHalftoneType: 3
*%ContoneOnly: False
*%OpenGroup: ColorPoint_Halftone
*%OpenUI *SKHalftone/Thermal Wax Halftone : PickOne
*%OrderDependency: 66.0 AnySetup *SKHalftone
*%DefaultSKHalftone: None
*%SKHalftone None/*Enhanced: "
*%(%Engine%) currentdevparams /PrintTechnology get /ThermalWax eq
*%	{	/TTHalftone/Halftone findresource sethalftone } if
*%"
*%End
*%SKHalftone Adobe/Standard: "
*%(%Engine%) currentdevparams /PrintTechnology get /ThermalWax eq
*%	{	/DefaultHalftone/Halftone findresource sethalftone } if
*%"
*%End
*%?SKHalftone: "
*%save
*%	currenthalftone dup dup begin
*%		/HalftoneType known
*%			{	/HalftoneType get 3 eq
*%				{	(None) }
*%				{	(Adobe) }ifelse
*%		 	}
*%			{	pop (Unknown)}ifelse
*%		end
*%	= flush
*%restore
*%"
*%End
*%CloseUI: *SKHalftone
*%CloseGroup: ColorPoint_Halftone

*%QRKCustomHalftone None/*Enhanced: "
*%(%Engine%) currentdevparams /PrintTechnology get /ThermalWax eq
*%	{	/TTHalftone/Halftone findresource sethalftone } if
*%"
*%End
*%QRKCustomHalftone Adobe/Standard: "
*%(%Engine%) currentdevparams /PrintTechnology get /ThermalWax eq
*%	{	/DefaultHalftone/Halftone findresource sethalftone } if
*%"
*%End

*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
	{	abs exch abs 2 copy add 1 gt
		{	1 sub dup mul exch 1 sub dup mul add 1 sub }
		{	dup mul exch dup mul add 1 exch sub } ifelse
	}
"
*End

*%*OpenGroup: ColorPoint_Pre-press_Features
*OpenUI *SKPMD/CMYK Pre-press Color Emulation :PickOne
*OrderDependency: 80.0 AnySetup *SKPMD
*DefaultSKPMD: None
*SKPMD None/*Off:							"(DIC)	(50)false 1 SK_SetCMYKEnv"
*SKPMD DIC50/DIC:							"(DIC)	(50)true  1 SK_SetCMYKEnv"
*SKPMD EURO/EURO Cromalin (TM):		"(EURO)	(50)true  2 SK_SetCMYKEnv"
*SKPMD EURO2/EURO 3M Matchprint (TM):"(EURO2)	(50)true  2 SK_SetCMYKEnv"
*SKPMD JPN150/JAPAN-1:					"(JPN1)	(50)true  1 SK_SetCMYKEnv"
*SKPMD Native50/Printer Native:		"(Native)(50)true  1 SK_SetCMYKEnv"
*SKPMD SWOP/US 3M Matchprint (TM):	"(SWOP)	(50)true  2 SK_SetCMYKEnv"
*SKPMD SWOP2/US FUJI Color-Art (TM):"(SWOP2)	(50)true  2 SK_SetCMYKEnv"
*SKPMD TOYO50/TOYO:						"(TOYO)	(50)true  1 SK_SetCMYKEnv"
*?SKPMD: "
save
	currentpagedevice/DeviceRenderingInfo get/PressMatch get
		{	globaldict/CurrentPMD known
			{	(<<)cvx exec
				(DIC50)(DIC50) (EURO50)(EURO) (EURO250)(EURO2) (JPN150)(JPN150)
				(Native50)(Native50) (SWOP50)(SWOP) (SWOP250)(SWOP2) (TOYO50)(TOYO50)
				(>>)cvx exec
				globaldict/CurrentPMD get
				2 copy known { get }{ pop pop (Unknown)}ifelse
			}
			{	(Unknown)}ifelse
		}
		{	(None)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKPMD

*OpenUI *SKCalibration/Pre-press Custom Calibration:Boolean
*OrderDependency: 82.0 AnySetup *SKCalibration
*DefaultSKCalibration: True
*SKCalibration True/On:	"true SK_SetCalibration"
*SKCalibration False/Off:	"false SK_SetCalibration"
*?SKCalibration: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentcalibration SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKCalibration

*OpenUI *SKPaperColor/Pre-press Paper Color Emulation :Boolean
*OrderDependency: 84.0 AnySetup *SKPaperColor
*DefaultSKPaperColor: False
*%SKPaperColor True/On:		"
*%1 dict begin /BeginPage {pop clippath 1 setgray fill} def
*%currentdict end setpagedevice
*%true SK_SetPaperColor
*%"
*%End
*SKPaperColor False/*Off:	"false SK_SetPaperColor"
*?SKPaperColor: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentpapercolor SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKPaperColor

*OpenUI *SKDotGain/Pre-press Custom Dot Gain :Boolean
*OrderDependency: 86.0 AnySetup *SKDotGain
*DefaultSKDotGain: False
*SKDotGain True/On:		"true SK_SetDotGain"
*SKDotGain False/*Off:	"false SK_SetDotGain"
*?SKDotGain: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentdotgain SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKDotGain

*OpenUI *SKInputAdjust/Pre-press Input Color Adjust :Boolean
*OrderDependency: 88.0 AnySetup *SKInputAdjust
*DefaultSKInputAdjust: False
*SKInputAdjust True/On:		"true SK_SetInputAdjust"
*SKInputAdjust False/*Off:	"false SK_SetInputAdjust"
*?SKInputAdjust: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentinputadjust SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKInputAdjust

*OpenUI *SKGrayBalance/Pre-press Custom Gray Balance :Boolean
*OrderDependency: 90.0 AnySetup *SKGrayBalance
*DefaultSKGrayBalance: False
*SKGrayBalance True/On:		"true SK_SetGrayBalance"
*SKGrayBalance False/*Off:	"false SK_SetGrayBalance"
*?SKGrayBalance: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentgraybalance SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKGrayBalance

*OpenUI *SKMaxDensity/Pre-press Maximum Density Adjust :Boolean
*OrderDependency: 92.0 AnySetup *SKMaxDensity
*DefaultSKMaxDensity: False
*SKMaxDensity True/On:		"true SK_SetMaxDensity"
*SKMaxDensity False/*Off:	"false SK_SetMaxDensity"
*?SKMaxDensity: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentmaxdensity SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKMaxDensity

*OpenUI *SKColAdjust/Pre-press Output Color Adjust :Boolean
*OrderDependency: 94.0 AnySetup *SKColAdjust
*DefaultSKColAdjust: False
*SKColAdjust True/On:		"true SK_SetColAdjust"
*SKColAdjust False/*Off:	"false SK_SetColAdjust"
*?SKColAdjust: "
save
	/SeikoProcs/ProcSet resourcestatus
		{	pop pop/currentcoloradjust SK_PExec pop
			{	(True)}
			{	(False)}ifelse
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKColAdjust

*OpenUI *SKRecomposite/Recomposite Separations: PickOne
*OrderDependency: 96.0 AnySetup *SKRecomposite
*DefaultSKRecomposite: None
*SKRecomposite None/*Off:	"
%%BeginFile: Seiko Instruments PostScript Feature
%%Copyright: 1990-1995 Seiko Instruments Incorporated. All Rights Reserved.
%%Copyright: Last edit date:15/September/95
%%Copyright: by Mark Bate @ Seiko Instruments Development Corporation
%%Copyright: V+1.408.922.5800, F+1.408.922.5840 mark_bate@seiko.com
%%Modified by Sol 25/October/96

%*SKRecomposite None/Off
currentglobal true setglobal globaldict/SKRecompositeFrom 0 put setglobal
[] false SK_SetSeparation
%%EndFile: Seiko Instruments PostScript Feature
"
*End

*SKRecomposite 4/from QuarkXPress 3:	"

%%BeginFile: Seiko Instruments PostScript Feature
%%Copyright: 1990-1995 Seiko Instruments Incorporated. All Rights Reserved.
%%Copyright: Last edit date:23July96
%%Copyright: by Mark Bate @ Seiko Instruments Development Corporation
%%Copyright: V+1.408.922.5800, F+1.408.922.5840 mark_bate@seiko.com
%%Modified by Sol 25/October/96

% Same code works for QXP3.11J & QXP3.31J
% *SKRecomposite 4/from QuarkXPress 3.x
currentglobal true setglobal globaldict/SKRecompositeFrom 4 put setglobal
	[/Black/Cyan/Magenta/Yellow] true SK_SetSeparation

%%EndFile: Seiko Instruments PostScript Feature

"
*End

*SKRecomposite 3/from PageMaker 6:	"

%%BeginFile: Seiko Instruments PostScript Feature
%%Copyright: 1990-1995 Seiko Instruments Incorporated. All Rights Reserved.
%%Copyright: Last edit date:15/September/95
%%Copyright: by Mark Bate @ Seiko Instruments Development Corporation
%%Copyright: V+1.408.922.5800, F+1.408.922.5840 mark_bate@seiko.com
%%Modified by Sol 25/October/96

% *SKRecomposite 3/PageMaker 6
currentglobal true setglobal globaldict/SKRecompositeFrom 3 put setglobal
	[/Cyan/Magenta/Yellow/Black] true SK_SetSeparation
	/P6SEP where
	{	pop P6SEP begin
		/languagelevel 2 def
		end % P6SEP
	} if
%%EndFile: Seiko Instruments PostScript Feature

"
*End

*SKRecomposite 2/from Illustrator 6 or 7:	"

%%BeginFile: Seiko Instruments PostScript Feature
%%Copyright: 1990-1995 Seiko Instruments Incorporated. All Rights Reserved.
%%Copyright: Last edit date:15/September/95
%%Copyright: by Mark Bate @ Seiko Instruments Development Corporation
%%Copyright: V+1.408.922.5800, F+1.408.922.5840 mark_bate@seiko.com
%%Modified by HT 17/October/97

%*SKRecomposite 2/Illustrator 7
currentglobal true setglobal globaldict/SKRecompositeFrom 2 put setglobal
	[/Cyan/Magenta/Yellow/Black] true SK_SetSeparation
%% by HT to use with LW8.4.2 Driver also
/endp where	%for LW8.x and PSP8.x for Mac
{	dup/efcl known
	{
		dup /endp get dup length 1 sub get /showpage eq		%for LW8.4.2J
		{
			/endp{}put
		}
		{
			/endp
			{	pm restore
				1 dict begin
					/showpage{	end}def
			}put
		}ifelse
		1 setcopies
	}
	{	/endp{}put}ifelse

	/setcopies
		{pop	systemdict/initgraphics get exec}store
	% Added initgraphics to resolve page shift between each page
	%%Comment Sets Install to null so spd calls will not wipe our settings
	<</Install {}>> setpagedevice
	/setpagedevice{	pop}bind def
	/SK_SetPaperSize{pop}bind def
}
{
	/AdobePS_Win_Driver_Incr where	%for PS4.1.1 for Win95
	{	true}
	{
		/AdobePS_Win_Driver_Incr_L2 where	%for PS4.1.1 for Win95
		{	true}
		{	false} ifelse
	}ifelse
	{	dup matrix currentmatrix /SK_SetMatrix exch put
		/SK_SetPaperSize{pop SK_SetMatrix setmatrix}put
	}
	{
		/NTPSOct95 where	%for Win NT4 Driver
		{
			dup matrix currentmatrix /SK_SetMatrix exch put
			/SK_SetPaperSize{pop SK_SetMatrix setmatrix}put
		}if
	}ifelse
}ifelse
%%EndFile: Seiko Instruments PostScript Feature

"
*End

*?SKRecomposite:	"
save	% Check with resources installed  %% Can some of this be in Seiko Procs
	globaldict/SKRecompositeFrom known
		{	[(None)(Unknown)(2)(3)(4)(Unknown)]
			SKRecompositeFrom dup 0 lt {	pop 5}{dup 4 gt { pop 5}if}ifelse
			get
		}
		{	(Unknown)}ifelse
	= flush
restore
"
*End
*CloseUI: *SKRecomposite
*%*CloseGroup:  ColorPoint_Pre-press_Features

*% Font Information =====================
*FCacheSize 32Meg:750000
*FCacheSize 96Meg:1600000
*DefaultFont: Courier
*Font Courier: Standard "(002.004S)" Standard ROM
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(001.002S)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(001.002S)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(001.001S)" Standard ROM
*Font Helvetica-Condensed: Standard "(001.001S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Standard "(001.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*?FontQuery: "
save
	{	count 1 gt
		{	exch dup 127 string cvs (/) print print (:) print
 			/Font resourcestatus
				{	pop pop (Yes)} {(No)} ifelse =
		}
		{ exit } ifelse 
	} bind loop
	(*) = flush
restore
"
*End

*?FontList: "
save
	(*) {	(/)print print (\n)print}bind 128 string /Font resourceforall
	(*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "busy"
*Status: "holding"
*Status: "idle"
*Status: "initializing"
*Status: "waiting"
*Status: "PrinterError: cover open"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: waiting for manual feed"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "LPR"
*Source: "FTP"
*Source: "Socket"
*Source: "ScsiproComm"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "cover open"
*PrinterError: "paper jam"
*PrinterError: "out of paper"
*PrinterError: "waiting for manual feed"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.100lpi.300dpi/100 lpi / 300 dpi

*% For 100 lpi / 300 dpi =====================

*ColorSepScreenAngle ProcessBlack.100lpi.300dpi/100 lpi / 300 dpi: "0"
*ColorSepScreenAngle CustomColor.100lpi.300dpi/100 lpi / 300 dpi: "0"
*ColorSepScreenAngle ProcessCyan.100lpi.300dpi/100 lpi / 300 dpi: "0"
*ColorSepScreenAngle ProcessMagenta.100lpi.300dpi/100 lpi / 300 dpi: "0"
*ColorSepScreenAngle ProcessYellow.100lpi.300dpi/100 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.100lpi.300dpi/100 lpi / 300 dpi: "100"
*ColorSepScreenFreq CustomColor.100lpi.300dpi/100 lpi / 300 dpi: "100"
*ColorSepScreenFreq ProcessCyan.100lpi.300dpi/100 lpi / 300 dpi: "100"
*ColorSepScreenFreq ProcessMagenta.100lpi.300dpi/100 lpi / 300 dpi: "100"
*ColorSepScreenFreq ProcessYellow.100lpi.300dpi/100 lpi / 300 dpi: "100"

*% End of File Produced by Maki
*% Last Edit Date: Mar 30 1998
*% end of PPD file for ColorPoint 1635PS 
