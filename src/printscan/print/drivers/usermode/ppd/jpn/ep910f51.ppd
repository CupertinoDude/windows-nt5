*PPD-Adobe: "4.2"
*%------------------------------------------------------------------
*%Version Number:                  "1fc"
*%Revision Number:                 "1"
*%Platform Supported:              ""
*%Localized To:                    "US"
*%Modifier:                        ""
*%Support Number:                  ""
*%------------------------------------------------------------------
*FormatVersion: "4.2"
*FileVersion: "1.1"
*LanguageEncoding: JIS83-RKSJ
*LanguageVersion: Japanese
*PCFileName: "EP910F51.PPD"
*Product: "(EPSON LP-9100PS2)"
*PSVersion: "(2014.107) 0"
*ModelName: "EPSON LP-9100PS2"
*NickName: "EPSON LP-9100PS2 F5 v2014.107"
*ShortNickName: "EPSON LP-9100PS2 F5"
*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/ÉIÉvÉVÉáÉìÉJÉZÉbÉg: Boolean
*DefaultOption1: False
*Option1 True/óLÇË: ""
*Option1 False/ñ≥Çµ: ""
*?Option1 : "			
	currentpagedevice /InputAttributes get 1 get
	null eq {(False)}{(True)}ifelse 
	= flush"
*End
*CloseUI: *Option1

*OpenUI *Option2/ÇgÇcÇc: Boolean
*DefaultOption2: False
*Option2 True/ê⁄ë±: ""
*Option2 False/ñ¢ê⁄ë±: ""
*?Option2: "
  save false
   (%disk?%) 
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse 
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End
*CloseUI: *Option2

*OpenUI *Option3/Type1 Coprocessor: Boolean
*DefaultOption3: False
*Option3 True/ëïíÖ: ""
*Option3 False/ñ¢ëïíÖ: ""
*?Option3: "
  save 
	(False) (*) {
	(Type1Coprocessor) eq {pop (True) exit}if
	} =string /HWOptions resourceforall
	= flush
 restore"
*End
*CloseUI: *Option3

*OpenUI *InstalledMemory/ÉÅÉÇÉä: PickOne
*DefaultInstalledMemory: 11Meg 
*InstalledMemory 11Meg/ïWèÄ(11MB): ""
*InstalledMemory 15Meg/15MBÇ…ëùê›: ""
*InstalledMemory 19Meg/19MBÇ…ëùê›: ""
*InstalledMemory 23Meg/23MBÇ…ëùê›: ""
*InstalledMemory 27Meg/27MBÇ…ëùê›: ""
*InstalledMemory 31Meg/31MBÇ…ëùê›: ""
*InstalledMemory 35Meg/35MBÇ…ëùê›: ""
*InstalledMemory 43Meg/43MBÇ…ëùê›: ""
*?InstalledMemory: "
	save
	currentsystemparams /RamSize get 16#100000 div 11 sub 4 div cvi
	[(11Meg) (15Meg) (19Meg) (23Meg) (27Meg) (31Meg) (35Meg) () (43Meg)]
	exch get = flush
	restore
	"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Lower
*%UIConstraints: *ManualFeed False *MediaType

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP

*FreeVM: "1940000"
*VMOption 11Meg: "1940000"
*VMOption 15Meg: "5940000"
*VMOption 19Meg: "9940000"
*VMOption 23Meg: "13940000"
*VMOption 27Meg: "17940000"
*VMOption 31Meg: "21940000"
*VMOption 35Meg: "25940000"
*VMOption 43Meg: "33940000"
 
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*TTRasterizer: Type42
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%) 
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse 
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "8"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End
*OpenUI *Resolution/âëúìx:  PickOne
*OrderDependency: 20 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 600dpi/ÉtÉ@ÉCÉì: "1 dict dup /HWResolution [600 600] put setpagedevice"
*Resolution 300dpi/ÉNÉCÉbÉN: "1 dict dup /HWResolution [300 300] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch  
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul  
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *Smoothing/ÇqÇhÇs:  PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing:True
*Smoothing True/ÇnÇm: "1 dict dup /PostRenderingEnhance true put setpagedevice"
*Smoothing False/ÇnÇeÇe: "1 dict dup /PostRenderingEnhance false put setpagedevice"
*?Smoothing: "
  save
    currentpagedevice /PostRenderingEnhance get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *Smoothing

*% Paper Handling ===================
*LandscapeOrientation: Any
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Tabloid/B: "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3: "
    2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A5: "
    2 dict dup /PageSize [421 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B4: "
    2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B5: "
    2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize F4: "
    2 dict dup /PageSize [595 935] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Com10: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize DL: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize C5: "
    2 dict dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize GOVLegal: "
    2 dict dup /PageSize [612 936] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Hagaki: "
    2 dict dup /PageSize [284 420] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Monarch: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize HalfLetter: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize GOVLetter: "
    2 dict dup /PageSize [576 756] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  18 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put
   dup [842 1191] (A3) put
   dup [595 842] (A4) put
   dup [421 595] (A5) put
   dup [729 1032] (B4) put
   dup [516 729] (B5) put
   dup [595 935] (F4) put
   dup [522 756] (Executive) put
   dup [297 684] (Com10) put
   dup [312 624] (DL) put
   dup [459 649] (C5) put
   dup [612 936] (GOVLegal) put
   dup [284 420] (Hagaki) put
   dup [279 540] (Monarch) put
   dup [396 612] (HalfLetter) put
   dup [576 756] (GOVLetter) put
 
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Tabloid/B: "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3: "
    2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A5: "
    2 dict dup /PageSize [421 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B4: "
    2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B5: "
    2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion F4: "
    2 dict dup /PageSize [595 935] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
    2 dict dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Com10: "
    2 dict dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion DL: "
    2 dict dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion C5: "
    2 dict dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion GOVLegal: "
    2 dict dup /PageSize [612 936] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Hagaki: "
    2 dict dup /PageSize [284 420] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Monarch: "
    2 dict dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion HalfLetter: "
    2 dict dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion GOVLetter: "
    2 dict dup /PageSize [576 756] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea Letter: "5.58 5.52 609.42 788.88 "
*ImageableArea Legal: "5.7601 5.82 608.64 1004.7 "
*ImageableArea Tabloid/B: "5.76 5.8201 789.12 1220.22 "
*ImageableArea A3: "5.7601 5.8201 839.04 1187.1 "
*ImageableArea A4: "5.5801 5.52 591.66 838.8 "
*ImageableArea A5: "5.5801 5.52 415.02 589.2 "
*ImageableArea B4: "5.76 5.8201 720.0 1028.22 "
*ImageableArea B5: "5.82 5.7601 510.3 723.84"
*ImageableArea F4: "5.76 5.8201 589.44 929.34 "
*ImageableArea Executive: "5.8201 5.76 516.54 746.88"
*ImageableArea Com10: "5.7601 5.8201 293.76 678.3 "
*ImageableArea DL: "5.76 5.8201 305.28 616.38 "
*ImageableArea C5: "5.76 5.8201 455.04 643.26 "
*ImageableArea GOVLegal: "5.7601 5.82 608.64 928.38 "
*ImageableArea Hagaki: "5.76 5.8201 278.4 414.3 "
*ImageableArea Monarch: "5.76 5.82 274.56 534.3 "
*ImageableArea HalfLetter: "5.8201 5.7601 390.3 608.64"
*ImageableArea GOVLetter: "5.76 5.8201 570.24 750.3 "

*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid/B: "792 1224"
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension A5: "421 595"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension F4: "595 935"
*PaperDimension Executive: "522 756"
*PaperDimension Com10: "297 684"
*PaperDimension DL: "312 624"
*PaperDimension C5: "459 649"
*PaperDimension GOVLegal: "612 936"
*PaperDimension Hagaki: "284 420"
*PaperDimension Monarch: "279 540"
*PaperDimension HalfLetter: "396 612"
*PaperDimension GOVLetter: "576 756"

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/ïWèÄÉJÉZÉbÉg: "
  currentpagedevice /InputAttributes get 0 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
  } ifelse"
*End
*InputSlot Lower/ÉIÉvÉVÉáÉìÉJÉZÉbÉg: "
  currentpagedevice /InputAttributes get 1 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
  save
  2 dict
  dup /0 (Upper) put
  dup /1 (Lower) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot


*OpenUI *ManualFeed/éËç∑ÇµÅiÉtÉçÉìÉgÉgÉåÉCÅj:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch/ÉgÉåÉCÇÃêÿë÷Ç¶:  Boolean
*OrderDependency: 50 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True/é©ìÆ: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False/éËìÆ: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*OpenUI *MediaType/ÉtÉçÉìÉgÉgÉåÉCÇÃópéÜÉ^ÉCÉv:  PickOne
*OrderDependency: 30 AnySetup *MediaType
*DefaultMediaType: Standard
*MediaType Standard/ïÅí éÜ: "
currentpagedevice /ManualFeed get {
1 dict dup /MediaWeight 75 put setpagedevice} if  
"
*End
*MediaType Thick/å˙éÜ: "
currentpagedevice /ManualFeed get {
1 dict dup /MediaWeight 110 put setpagedevice }if
 "
*End
*?MediaType: "
  save
  2 dict
  dup 75 (Standard) put
  dup 110 (Thick) put
  currentpagedevice /MediaWeight 
  get get = flush
  restore
"
*End
*CloseUI: *MediaType

*DefaultOutputOrder: Normal

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font GothicBBB-Medium-83pv-RKSJ-H: RKSJ "(003.002)" 83pv Disk
*Font GothicBBB-Medium-Add-H: JIS "(003.002)" Add Disk
*Font GothicBBB-Medium-Add-RKSJ-H: RKSJ "(003.002)" Add Disk
*Font GothicBBB-Medium-Add-RKSJ-V: RKSJ "(003.002)" Add Disk
*Font GothicBBB-Medium-Add-V: JIS "(003.002)" Add Disk
*Font GothicBBB-Medium-EUC-H: EUC "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium-EUC-V: EUC "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium-Ext-H: JIS "(003.002)" Ext Disk
*Font GothicBBB-Medium-Ext-RKSJ-H: RKSJ "(003.002)" Ext Disk
*Font GothicBBB-Medium-Ext-RKSJ-V: RKSJ "(003.002)" Ext Disk
*Font GothicBBB-Medium-Ext-V: JIS "(003.002)" Ext Disk
*Font GothicBBB-Medium-H: JIS "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium-NWP-H: JIS "(003.002)" NWP Disk
*Font GothicBBB-Medium-NWP-V: JIS "(003.002)" NWP Disk
*Font GothicBBB-Medium-RKSJ-H: RKSJ "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium-RKSJ-V: RKSJ "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium-V: JIS "(003.002)" JIS-83 Disk
*Font GothicBBB-Medium.Oubun: Special "(003.002)" Special Disk
*Font GothicBBB-Medium.Roman: Special "(003.002)" Special Disk
*Font GothicBBB-Medium.Roman83pv: Special "(003.002)" Special Disk
*Font GothicBBB-Medium.WP-Symbol: Special "(003.002)" Special Disk
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Jun101-Light-83pv-RKSJ-H: RKSJ "(003.001)" 83pv Disk
*Font Jun101-Light-Add-H: JIS "(003.001)" Add Disk
*Font Jun101-Light-Add-RKSJ-H: RKSJ "(003.001)" Add Disk
*Font Jun101-Light-Add-RKSJ-V: RKSJ "(003.001)" Add Disk
*Font Jun101-Light-Add-V: JIS "(003.001)" Add Disk
*Font Jun101-Light-EUC-H: EUC "(003.001)" JIS-83 Disk
*Font Jun101-Light-EUC-V: EUC "(003.001)" JIS-83 Disk
*Font Jun101-Light-Ext-H: JIS "(003.001)" Ext Disk
*Font Jun101-Light-Ext-RKSJ-H: RKSJ "(003.001)" Ext Disk
*Font Jun101-Light-Ext-RKSJ-V: RKSJ "(003.001)" Ext Disk
*Font Jun101-Light-Ext-V: JIS "(003.001)" Ext Disk
*Font Jun101-Light-H: JIS "(003.001)" JIS-83 Disk
*Font Jun101-Light-NWP-H: JIS "(003.001)" NWP Disk
*Font Jun101-Light-NWP-V: JIS "(003.001)" NWP Disk
*Font Jun101-Light-RKSJ-H: RKSJ "(003.001)" JIS-83 Disk
*Font Jun101-Light-RKSJ-V: RKSJ "(003.001)" JIS-83 Disk
*Font Jun101-Light-V: JIS "(003.001)" JIS-83 Disk
*Font Jun101-Light.Oubun: Special "(003.001)" Special Disk
*Font Jun101-Light.Roman: Special "(003.001)" Special Disk
*Font Jun101-Light.Roman83pv: Special "(003.001)" Special Disk
*Font Jun101-Light.WP-Symbol: Special "(003.001)" Special Disk
*Font MidashiGo-MB31-83pv-RKSJ-H: RKSJ "(003.000)" 83pv Disk
*Font MidashiGo-MB31-Add-H: JIS "(003.000)" Add Disk
*Font MidashiGo-MB31-Add-RKSJ-H: RKSJ "(003.000)" Add Disk
*Font MidashiGo-MB31-Add-RKSJ-V: RKSJ "(003.000)" Add Disk
*Font MidashiGo-MB31-Add-V: JIS "(003.000)" Add Disk
*Font MidashiGo-MB31-EUC-H: EUC "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31-EUC-V: EUC "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31-Ext-H: JIS "(003.000)" Ext Disk
*Font MidashiGo-MB31-Ext-RKSJ-H: RKSJ "(003.000)" Ext Disk
*Font MidashiGo-MB31-Ext-RKSJ-V: RKSJ "(003.000)" Ext Disk
*Font MidashiGo-MB31-Ext-V: JIS "(003.000)" Ext Disk
*Font MidashiGo-MB31-H: JIS "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31-NWP-H: JIS "(003.000)" NWP Disk
*Font MidashiGo-MB31-NWP-V: JIS "(003.000)" NWP Disk
*Font MidashiGo-MB31-RKSJ-H: RKSJ "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31-RKSJ-V: RKSJ "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31-V: JIS "(003.000)" JIS-83 Disk
*Font MidashiGo-MB31.Oubun: Special "(003.000)" Special Disk
*Font MidashiGo-MB31.Roman: Special "(003.000)" Special Disk
*Font MidashiGo-MB31.Roman83pv: Special "(003.000)" Special Disk
*Font MidashiGo-MB31.WP-Symbol: Special "(003.000)" Special Disk
*Font MidashiMin-MA31-83pv-RKSJ-H: RKSJ "(003.001)" 83pv Disk
*Font MidashiMin-MA31-Add-H: JIS "(003.001)" Add Disk
*Font MidashiMin-MA31-Add-RKSJ-H: RKSJ "(003.001)" Add Disk
*Font MidashiMin-MA31-Add-RKSJ-V: RKSJ "(003.001)" Add Disk
*Font MidashiMin-MA31-Add-V: JIS "(003.001)" Add Disk
*Font MidashiMin-MA31-EUC-H: EUC "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31-EUC-V: EUC "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31-Ext-H: JIS "(003.001)" Ext Disk
*Font MidashiMin-MA31-Ext-RKSJ-H: RKSJ "(003.001)" Ext Disk
*Font MidashiMin-MA31-Ext-RKSJ-V: RKSJ "(003.001)" Ext Disk
*Font MidashiMin-MA31-Ext-V: JIS "(003.001)" Ext Disk
*Font MidashiMin-MA31-H: JIS "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31-NWP-H: JIS "(003.001)" NWP Disk
*Font MidashiMin-MA31-NWP-V: JIS "(003.001)" NWP Disk
*Font MidashiMin-MA31-RKSJ-H: RKSJ "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31-RKSJ-V: RKSJ "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31-V: JIS "(003.001)" JIS-83 Disk
*Font MidashiMin-MA31.Oubun: Special "(003.001)" Special Disk
*Font MidashiMin-MA31.Roman: Special "(003.001)" Special Disk
*Font MidashiMin-MA31.Roman83pv: Special "(003.001)" Special Disk
*Font MidashiMin-MA31.WP-Symbol: Special "(003.001)" Special Disk
*Font Mincho-PC-Hiragana: Special "(002.000)" Special Disk
*Font Mincho-PC-Katakana: Special "(002.000)" Special Disk
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font PCCentury-Bold: UnknownEncoding "(003.000)" UnknownCharset UnknownStatus
*Font PCHelvetica: UnknownEncoding "(001.001)" UnknownCharset UnknownStatus
*Font PCHelvetica-Bold: UnknownEncoding "(003.000)" UnknownCharset UnknownStatus
*Font PCJun101-Light: UnknownEncoding "(001.000)" UnknownCharset UnknownStatus
*Font PCTimes-Roman: UnknownEncoding "(001.001)" UnknownCharset UnknownStatus
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Ryumin-Light-83pv-RKSJ-H: RKSJ "(003.001)" 83pv Disk
*Font Ryumin-Light-Add-H: JIS "(003.001)" Add Disk
*Font Ryumin-Light-Add-RKSJ-H: RKSJ "(003.001)" Add Disk
*Font Ryumin-Light-Add-RKSJ-V: RKSJ "(003.001)" Add Disk
*Font Ryumin-Light-Add-V: JIS "(003.001)" Add Disk
*Font Ryumin-Light-EUC-H: EUC "(003.001)" JIS-83 Disk
*Font Ryumin-Light-EUC-V: EUC "(003.001)" JIS-83 Disk
*Font Ryumin-Light-Ext-H: JIS "(003.001)" Ext Disk
*Font Ryumin-Light-Ext-RKSJ-H: RKSJ "(003.001)" Ext Disk
*Font Ryumin-Light-Ext-RKSJ-V: RKSJ "(003.001)" Ext Disk
*Font Ryumin-Light-Ext-V: JIS "(003.001)" Ext Disk
*Font Ryumin-Light-H: JIS "(003.001)" JIS-83 Disk
*Font Ryumin-Light-NWP-H: JIS "(003.001)" NWP Disk
*Font Ryumin-Light-NWP-V: JIS "(003.001)" NWP Disk
*Font Ryumin-Light-RKSJ-H: RKSJ "(003.001)" JIS-83 Disk
*Font Ryumin-Light-RKSJ-V: RKSJ "(003.001)" JIS-83 Disk
*Font Ryumin-Light-V: JIS "(003.001)" JIS-83 Disk
*Font Ryumin-Light.Oubun: Special "(003.001)" Special Disk
*Font Ryumin-Light.Roman: Special "(003.001)" Special Disk
*Font Ryumin-Light.Roman83pv: Special "(003.001)" Special Disk
*Font Ryumin-Light.WP-Symbol: Special "(003.001)" Special Disk
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "initializing"
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "Tray change timeout"
*Status: "waiting for a4 tray"
*Status: "waiting for letter tray"
*Status: "waiting for b5 tray"
*Status: "waiting for executivepage tray"
*Status: "waiting for halfletter tray"
*Status: "waiting for ledger tray"
*Status: "waiting for a3 tray"
*Status: "waiting for b4 tray"
*Status: "waiting for legal tray"
*Status: "waiting for glg (legal13) tray"
*Status: "waiting for monarch envelope tray"
*Status: "waiting for com10 envelope tray"
*Status: "waiting for dl envelope tray"
*Status: "waiting for c5 envelope tray"
*Status: "waiting for hagaki tray"
*Status: "waiting for glt tray"
*Status: "waiting for f4 tray"
*Status: "Stopped waiting for a4 tray"
*Status: "Stopped waiting for letter tray"
*Status: "Stopped waiting for b5 tray"
*Status: "Stopped waiting for executivepage tray"
*Status: "Stopped waiting for halfletter tray"
*Status: "Stopped waiting for ledger tray"
*Status: "Stopped waiting for a3 tray"
*Status: "Stopped waiting for b4 tray"
*Status: "Stopped waiting for legal tray"
*Status: "Stopped waiting for glg (legal13) tray"
*Status: "Stopped waiting for monarch envelope tray"
*Status: "Stopped waiting for com10 envelope tray"
*Status: "Stopped waiting for dl envelope tray"
*Status: "Stopped waiting for c5 envelope tray"
*Status: "Stopped waiting for hagaki tray"
*Status: "Stopped waiting for glt tray"
*Status: "Stopped waiting for f4 tray"
*Status: "a4 tray installed"
*Status: "letter tray installed"
*Status: "b5 tray installed"
*Status: "executivepage installed"
*Status: "halfletter tray installed"
*Status: "ledger tray installed"
*Status: "a3 tray installed"
*Status: "b4 tray installed"
*Status: "legal tray installed"
*Status: "glg (legal13) tray installed"
*Status: "monarch envelope tray installed"
*Status: "com10 envelope tray installed"
*Status: "dl envelope tray installed"
*Status: "c5 envelope tray installed"
*Status: "hagaki tray installed"
*Status: "glt tray installed"
*Status: "f4 tray installed"
*Status: "PrinterError: DMA firmware failure: restart"
*Status: "PrinterError: cover open"
*Status: "PrinterError: toner low"
*Status: "PrinterError: toner cartridge out"
*Status: "PrinterError: paper entry misfeed"
*Status: "PrinterError: regular paper misfeed"
*Status: "PrinterError: paper exit misfeed"
*Status: "PrinterError: standard cassette out/misinstalled"
*Status: "PrinterError: optional cassette out/misinstalled"
*Status: "PrinterError: out of paper: standard"
*Status: "PrinterError: out of paper: optional"
*Status: "PrinterError: out of paper: front"
*Status: "PrinterError: paper size error: standard"
*Status: "PrinterError: paper size error: optional"
*Status: "PrinterError: paper size error: front"
*Status: "PrinterError: engine NVRAM malfunction"
*Status: "PrinterError: fuser malfunction"
*Status: "PrinterError: scanner motor malfunction"
*Status: "PrinterError: fan malfunction"
*Status: "PrinterError: service call"
*Status: "PrinterError: EEROM error"
*Status: "PrinterError: HDD read/write error"
*Status: "PrinterError: ATC error"
*Status: "PrinterError: warming up"
*Status: "PrinterError: waiting for manual feed"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "Serial"
*Source: "SerialB"
*Source: "Parallel"
*Source: "ScsiComm"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "DMA firmware failure: restart"
*PrinterError: "cover open"
*PrinterError: "toner low"
*PrinterError: "toner cartridge out"
*PrinterError: "paper entry misfeed"
*PrinterError: "regular paper misfeed"
*PrinterError: "paper exit misfeed"
*PrinterError: "standard cassette out/misinstalled"
*PrinterError: "optional cassette out/misinstalled"
*PrinterError: "out of paper: standard"
*PrinterError: "out of paper: optional"
*PrinterError: "out of paper: front"
*PrinterError: "paper size error: standard"
*PrinterError: "paper size error: optional"
*PrinterError: "paper size error: front"
*PrinterError: "engine NVRAM malfunction"
*PrinterError: "fuser malfunction"
*PrinterError: "scanner motor malfunction"
*PrinterError: "fan malfunction"
*PrinterError: "service call"
*PrinterError: "EEROM error"
*PrinterError: "HDD read/write error"
*PrinterError: "ATC error"
*PrinterError: "warming up"
*PrinterError: "waiting for manual feed"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow


*%  For 85 lpi / 600 dpi  (5,5,2,6,6,2,20/3,0) =====================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "30.0"

*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
{1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch 
abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*%  For 71 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "70.7107"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "63.2456"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "66.6667"

*% Produced by "bldppd42.ps" version 4.0 edit 13
*% Last Edit Date: <30 August 1994>
*% end of PPD file for LP-9100PS2 F5
