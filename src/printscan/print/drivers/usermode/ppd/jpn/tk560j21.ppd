*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright (c) Tektronix, Incorporated.  All rights reserved.
*% Tektronix (R) is a registered trademark of Tektronix, Inc.
*% TekColor TM is a trademark of Tektronix, Inc.
*% Phaser (R) is a registered trademark of Tektronix, Inc., for color
*%  printers and related products.

*FormatVersion: "4.3"
*FileVersion: "1.0"
*LanguageEncoding: JIS83-RKSJ
*LanguageVersion: Japanese
*Product: "(Phaser 560J)"
*PSVersion: "(2015.105) 14"
*Manufacturer: "Tektronix"
*ModelName: "Tektronix Phaser 560J"
*ShortNickName: "Tektronix Phaser 560J 2JF"
*NickName: "Tektronix Phaser 560J 2JF (2015.105) 14"
*PCFileName: "TK560J21.PPD"

*% === Installable Options ===========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *InstalledMemory/メモリ構成: PickOne
*DefaultInstalledMemory: None
*InstalledMemory None/標準 24 MB: ""
*InstalledMemory 40Meg/40 MBに増設: ""
*InstalledMemory 56Meg/56 MBに増設: ""
*InstalledMemory 72Meg/72 MBに増設: ""
*?InstalledMemory: "% InstalledMemory 
 currentsystemparams /RamSize get
 16#100000 div round cvi
 dup 26 lt
 { pop (None) } {2 string cvs print (Meg) } ifelse
 print (\n) print flush"
*End
*CloseUI: *InstalledMemory

*OpenUI *Option3/追加トレイ: Boolean
*OrderDependency: 69.2 AnySetup *Option3
*DefaultOption3: False
*Option3 True/インストールされている: ""
*Option3 False/インストールされていない: ""
*?Option3: "
currentpagedevice /InputAttributes get 1 known
{ (True) } { (False) } ifelse = flush"
*End
*CloseUI: *Option3

*OpenUI *Option1/ハードディスク: Boolean
*OrderDependency: 69.4 AnySetup *Option1
*DefaultOption1: False
*Option1 True/インストールされている: ""
*Option1 False/インストールされていない: ""
*?Option1: "
 false
 (%disk?%)
 { currentdevparams dup /Writeable known
   { /Writeable get {pop true} if }  {pop} ifelse
 } 10 string /IODevice resourceforall
 {(True)}{(False)} ifelse = flush"
*End
*CloseUI: *Option1

*OpenUI *Option2/ネットワーク・カード: PickOne
*OrderDependency: 69.6 AnySetup *Option2
*DefaultOption2: None
*Option2 None/インストールされていない: ""
*Option2 P1/EtherTalk, NetWare and TCP/IP: ""
*Option2 P3/LocalTalk and Serial: ""
*Option2 P4/TokenTalk, NetWare and TCP/IP: ""
*?Option2: "% Option2
 (%EthernetPhysical%) /IODevice resourcestatus
 {pop pop (P1) }
 {
   (%LocalTalk%) /IODevice resourcestatus
   {pop pop (P3) }
   {
     (%TokenRingPhysical%) /IODevice resourcestatus
     {pop pop (P4) } { (None) } ifelse
   } ifelse
 } ifelse = flush"
*End
*CloseUI: *Option2

*CloseGroup: InstallableOptions

*% === Constraints ===================

*UIConstraints: *Option3 False *InputSlot Middle
*UIConstraints: *Option3 False *InputSlot Lower
*UIConstraints: *InputSlot MPF *OutputOrder Normal

*UIConstraints: *InputSlot Middle *Option3 False
*UIConstraints: *InputSlot Lower *Option3 False
*UIConstraints: *OutputOrder Normal *InputSlot MPF

*% === Basic Device Capabilities ============

*LanguageLevel: "2"
*Protocols: BCP

*FreeVM: "5900000"
*VMOption None/標準 24 MB: "5900000"
*VMOption 40Meg/40 MBに増設: "5800000"
*VMOption 56Meg/56 MBに増設: "17500000"
*VMOption 72Meg/72 MBに増設: "4300000"

*ColorDevice: True
*DefaultColorSpace: CMYK
*AccurateScreensSupport: True
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*SuggestedManualFeedTimeout: "60"
*1284Modes Parallel: Compat Nibble
*1284DeviceID: "
  MANUFACTURER:Tektronix;COMMAND SET:Adobe Level 2 PostScript;
  MODEL:Phaser 560J;CLASS:Printer;DESCRIPTION:
  Phaser 560J Color Laser Printer, PostScript Level 2, Letter/Legal/A4 Size;
  COMPATIBLE_ID:"
*End
*TTRasterizer: Type42
*?TTRasterizer: "
  42 /FontType resourcestatus
  { pop pop (Type42)} {pop pop (None)} ifelse = flush"
*End

*Emulators:  hpgl
*StartEmulator_hpgl: "currentfile /hpgl statusdict /emulate get exec "
*StopEmulator_hpgl: "<1B7F>0"

*FileSystem: True
*?FileSystem: "
  false
  (%disk?%)
  { currentdevparams dup /Writeable known
    { /Writeable get {pop true} if }  {pop} ifelse
  } 10 string /IODevice resourceforall
  {(True)}{(False)} ifelse = flush"
*End
*Throughput: "14"
*Password: "0"
*ExitServer: "
  count 0 eq
  { false } { true exch startjob } ifelse
  not
  { (WARNING: Cannot modify initial VM.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
  } if"
*End
*Reset: "
  count 0 eq
  { false } { true exch startjob } ifelse
  not
  { (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
  } if
  systemdict /quit get exec
  (WARNING : Printer Reset Failed.) = flush"
*End

*DefaultResolution: 600dpi
*SetResolution 600dpi : ""
*SetResolution 1200dpi : ""
*?Resolution: "
  currentpagedevice /HWResolution get 0 get (    ) cvs print (dpi) = flush"
*End

*% Halftone Information =================
*DefaultHalftoneType: 9
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div} bind"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{1 exch sub} bind"


*% Tray Selection ============

*OpenUI *TKMPFMedia/汎用フィーダのメディア: PickOne
*OrderDependency: 46.0 AnySetup *TKMPFMedia
*DefaultTKMPFMedia: UPS
*TKMPFMedia UPS/プリンタ側の設定を使用: ""
*TKMPFMedia Paper/用紙: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (Paper)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia Duplex/裏面印刷: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (Duplex)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia Transparency/OHPフィルム: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (Transparency)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia CoatedPaper/コート紙: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (CoatedPaper)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia CardStock/カード/封筒: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (CardStock)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia Label/ラベル: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (Label)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*TKMPFMedia FabricTransfer/布地転写紙: "
  userdict /MPFeeder {
    <<
      /MediaPosition null
      /MediaType (FabricTransfer)
      /TraySwitch false
      /ManualFeed true
    >> setpagedevice
  } put"
*End
*?TKMPFMedia: "
/MPFeeder where {
  /MPFeeder get exec currentpagedevice /MediaType get
}{
  (UPS)
} ifelse
= flush"
*End
*CloseUI: *TKMPFMedia

*OpenUI *InputSlot/給紙方法: PickOne
*OrderDependency: 54.0 AnySetup *InputSlot
*DefaultInputSlot: Paper
*InputSlot Paper/用紙: "
  <<
    /MediaPosition null
    /MediaType (Paper)
    /TraySwitch true
    /ManualFeed false
  >> setpagedevice"
*End
*InputSlot Transparency/OHPフィルム: "
  <<
    /MediaPosition null
    /MediaType (Transparency)
    /TraySwitch true
    /ManualFeed false
  >> setpagedevice"
*End
*InputSlot Upper/上段トレイ: "
  <<
    /MediaPosition 0
    /MediaType null
    /TraySwitch false
    /ManualFeed false
  >> setpagedevice"
*End
*InputSlot Middle/中段トレイ: "
  <<
    /MediaPosition 1
    /MediaType null
    /TraySwitch false
    /ManualFeed false
  >> setpagedevice"
*End
*InputSlot Lower/下段トレイ: "
  <<
    /MediaPosition 2
    /MediaType null
    /TraySwitch false
    /ManualFeed false
  >> setpagedevice"
*End
*InputSlot MPF/汎用フィーダ: "
  /MPFeeder where {
    /MPFeeder get exec
  }{
    <<
      /MediaPosition 3
      /MediaType null
      /TraySwitch false
      /ManualFeed false
    >> setpagedevice
  } ifelse"
*End
*?InputSlot: "
  currentpagedevice /MediaPosition get
  dup null eq
  { pop currentpagedevice /MediaType get}
  {[(Upper) (Middle) (Lower) (MPF)] exch get} ifelse
  = flush"
*End
*CloseUI: *InputSlot


*% Paper Handling ===================

*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*OpenUI *PageSize/用紙サイズ: PickOne
*OrderDependency: 56.0 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize Letter/レター: "<< /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageSize Legal/リーガル: "<< /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageSize A4: "<< /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*?PageSize: "
  currentpagedevice /PageSize get aload pop 
  2 copy gt {exch} if (Unknown)
  <<
  [612 792] (Letter)
  [612 1008] (Legal)
  [595 842] (A4) >>
  { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and 
      { exch pop exit } { pop } ifelse
  } bind forall = flush pop pop"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 56.0 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion Letter/レター: "<< /PageSize [612 792] /ImagingBBox null >> setpagedevice"
*PageRegion Legal/リーガル: "<< /PageSize [612 1008] /ImagingBBox null >> setpagedevice"
*PageRegion A4: "<< /PageSize [595 842] /ImagingBBox null >> setpagedevice"
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea Letter/レター: "10.32 15.9 601.68 776.22"
*ImageableArea Legal/リーガル: "10.32 16.3801 601.68 991.74"
*ImageableArea A4: "13.44 14.46 581.76 828.54"
*?ImageableArea: "
  /cvp { (                ) cvs print ( ) print } bind def
  /upperright {10000 mul floor 10000 div} bind def
  /lowerleft {10000 mul ceiling 10000 div} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {lowerleft cvp} repeat
  exch 2 {upperright cvp} repeat flush"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension Letter/レター: "612 792"
*PaperDimension Legal/リーガル: "612 1008"
*PaperDimension A4: "595 842"

*RequiresPageRegion All: True


*% TKColor Selections  ===================

*OpenUI *TKColor/カラー補正: PickOne
*OrderDependency: 40.0 AnySetup *TKColor
*DefaultTKColor: Automatic
*TKColor Automatic/自動補正: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /Automatic
      >>
    >>
  >> setpagedevice"
*End
*TKColor NoAdjust/補正なし: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice null
    >>
  >> setpagedevice"
*End
*TKColor VividColor/鮮やかなカラー: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /TekBlue
      >>
    >>
  >> setpagedevice"
*End
*TKColor SimulateDisplay/ディスプレイ: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /TekDisplay
      >>
    >>
  >> setpagedevice"
*End
*TKColor SWOPPress/SWOP プレス: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /SWOP-Coated
      >>
    >>
  >> setpagedevice"
*End
*TKColor EuroscalePress/Euroscale プレス: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /Euroscale-Coated
      >>
    >>
  >> setpagedevice"
*End
*TKColor CommercialPress/Commercial プレス: "
  <<
    /DeviceRenderingInfo <<
      /Type 2
      /VirtualColorDevice <<
        /Type 3
        /ColorTransform /Commercial-Coated
      >>
    >>
  >> setpagedevice"
*End
*TKColor UsePrinterSetting/プリンタ側の設定を使用: ""
*?TKColor: "
  { currentpagedevice /DeviceRenderingInfo get
    /VirtualColorDevice get
    dup null eq
    { pop (NoAdjust) }
    { /ColorTransform get
      <<
        /Automatic         (Automatic)
        /TekBlue           (VividColor)
        /TekDisplay        (SimulateDisplay)
        /SWOP-Coated       (SWOPPress)
        /Euroscale-Coated  (EuroscalePress)
        /Commercial-Coated (CommercialPress)
      >>
      exch get
    } ifelse
  } stopped
  { % error in PostScript code execution
    pop pop (Unknown)
  } if
  = flush"
*End
*CloseUI: *TKColor

*% Print Quality Selection  ===================

*OpenUI *OutputMode/プリント品質: PickOne
*OrderDependency: 47.0 AnySetup *OutputMode
*DefaultOutputMode: Standard
*OutputMode FastMono/高速モノクロ  600x600 dpi: "
  <<
    /HWResolution [600 600]
    /ProcessColorModel /DeviceGray
  >> setpagedevice"
*End
*OutputMode FastColor/高速カラー  600x600 dpi: "
  <<
    /HWResolution [600 600]
    /ProcessColorModel /DeviceCMY
  >> setpagedevice"
*End
*OutputMode Presentation/プレゼンテーション  600x600 dpi: "
  <<
    /HWResolution [600 600]
    /ProcessColorModel /DeviceCMYK
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails <<
       /OutputMode (Presentation)
    >>
  >> setpagedevice"
*End
*OutputMode Standard/標準  600x600 dpi: "
  <<
    /HWResolution [600 600]
    /ProcessColorModel /DeviceCMYK
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails <<
      /OutputMode (Standard)
    >>
  >> setpagedevice"
*End
*OutputMode Premium/プレミアム  1200x1200 dpi: "
  <<
    /HWResolution [1200 1200]
    /ProcessColorModel /DeviceCMYK
    /PostRenderingEnhance true
    /PostRenderingEnhanceDetails <<
      /OutputMode (Standard)
    >>
  >> setpagedevice"
*End
*?OutputMode: "
  currentpagedevice /ProcessColorModel get dup /DeviceGray eq 
  {
    pop (FastMono) 
  }
  {
    /DeviceCMY eq 
    {
      (FastColor)
    }
    {
      currentpagedevice /HWResolution get 0 get 1200 eq 
      {
        (Premium)
      }
      {
        currentpagedevice /PostRenderingEnhanceDetails get /OutputMode get
      } ifelse
    } ifelse
  } ifelse
  = flush"
*End
*CloseUI: *OutputMode

*OpenUI *TKImageSmoothing/イメージ・スムージング: Boolean
*OrderDependency: 52.0 AnySetup *TKImageSmoothing
*DefaultTKImageSmoothing: False
*TKImageSmoothing False/オフ: "
  false /RRCustomProcs /ProcSet findresource /setforceinterpolate get exec"
*End
*TKImageSmoothing True/オン: "
  true /RRCustomProcs /ProcSet findresource /setforceinterpolate get exec"
*End
*?TKImageSmoothing: "
  /RRCustomProcs /ProcSet findresource /currentforceinterpolate get exec
  {(True)}{(False)} ifelse
  = flush"
*End
*CloseUI: *TKImageSmoothing

*OpenUI *OutputOrder/プリント出力面: PickOne
*OrderDependency: 44.0 AnySetup *OutputOrder
*DefaultOutputOrder: Reverse
*OutputOrder Normal/下向き: "  << /OutputFaceUp false >> setpagedevice"
*OutputOrder Reverse/上向き: "  << /OutputFaceUp true >> setpagedevice"
*?OutputOrder: "
  currentpagedevice /OutputFaceUp get
  { (Reverse) }
  { (Normal)  } ifelse
  = flush"
*End
*CloseUI: *OutputOrder

*OpenUI *TKCollate/コレーション: Boolean
*OrderDependency: 50.0 AnySetup *TKCollate
*DefaultTKCollate: False
*TKCollate False/オフ: "<< /Collate false >> setpagedevice"
*TKCollate True/オン: "<< /Collate true >> setpagedevice"
*?TKCollate: "
  save
  currentpagedevice /Collate get {(True)}{(False)}ifelse
  = flush restore"
*End
*CloseUI: *TKCollate

*OpenUI *TKCheckPrint/チェックプリント機能: Boolean
*OrderDependency: 55.0 AnySetup *TKCheckPrint
*DefaultTKCheckPrint: False
*TKCheckPrint False/オフ: ""
*TKCheckPrint True/オン: "
  /RRCustomProcs /ProcSet findresource /setcheckprint get exec"
*End
*?TKCheckPrint: "
  /RRCustomProcs /ProcSet findresource
  /currentcheckprint get exec {(True)}{(False)}ifelse
  = flush"
*End
*CloseUI: *TKCheckPrint

*% Special Macintosh Font Information =====================

*JobPatchFile 0: "
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup length 2 add dict copy begin
    /83pv-RKSJ-H false def /90pv-RKSJ-H false def
    /BuildOCFCompatible currentdict end /FixCIDInitProcSet defineresource pop
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /SetBuildCompatible get false exch exec
    } {
      pop pop
    } ifelse
  } ifelse
} if
"
*End

*OpenUI *TKFType/フォント互換性:  Boolean
*OrderDependency: 68.0 AnySetup *TKFType
*DefaultTKFType: False
*TKFType True/CID Native: ""

*TKFType False/OCF Compatible: "
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup length 2 add dict copy begin
    /83pv-RKSJ-H true def /90pv-RKSJ-H true def
    /BuildOCFCompatible currentdict end /FixCIDInitProcSet defineresource pop
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /SetBuildCompatible get true exch exec
    } {
      pop pop
    } ifelse
  } ifelse
} if
"
*End
*?TKFType: "
save
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup /83pv-RKSJ-H known {
      /83pv-RKSJ-H get
    } {
      pop true
    } ifelse
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /BuildCompatible get
      /83pv-RKSJ-H exch 0 exch exec
    } {
      pop pop true
    } ifelse
  } ifelse
} {
  true
} ifelse {(False)}{(True)}ifelse = flush
restore
"
*End
*CloseUI: *TKFType

*% Font Information =====================
*DefaultFont: Courier
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font GothicBBB-Medium-83pv-RKSJ-H: RKSJ "(003.004)" 83pv ROM
*Font GothicBBB-Medium-90ms-RKSJ-H: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-90ms-RKSJ-V: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-90pv-RKSJ-H: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-90pv-RKSJ-V: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-Add-H: JIS "(003.004)" Add ROM
*Font GothicBBB-Medium-Add-RKSJ-H: RKSJ "(003.004)" Add ROM
*Font GothicBBB-Medium-Add-RKSJ-V: RKSJ "(003.004)" Add ROM
*Font GothicBBB-Medium-Add-V: JIS "(003.004)" Add ROM
*Font GothicBBB-Medium-EUC-H: EUC "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-EUC-V: EUC "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-Ext-H: JIS "(003.004)" Ext ROM
*Font GothicBBB-Medium-Ext-RKSJ-H: RKSJ "(003.004)" Ext ROM
*Font GothicBBB-Medium-Ext-RKSJ-V: RKSJ "(003.004)" Ext ROM
*Font GothicBBB-Medium-Ext-V: JIS "(003.004)" Ext ROM
*Font GothicBBB-Medium-H: JIS "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-NWP-H: JIS "(003.004)" NWP ROM
*Font GothicBBB-Medium-NWP-V: JIS "(003.004)" NWP ROM
*Font GothicBBB-Medium-RKSJ-H: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-RKSJ-V: RKSJ "(003.004)" JIS-83 ROM
*Font GothicBBB-Medium-V: JIS "(003.004)" JIS-83 ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Ryumin-Light-83pv-RKSJ-H: RKSJ "(003.003)" 83pv ROM
*Font Ryumin-Light-90ms-RKSJ-H: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-90ms-RKSJ-V: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-90pv-RKSJ-H: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-90pv-RKSJ-V: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-Add-H: JIS "(003.003)" Add ROM
*Font Ryumin-Light-Add-RKSJ-H: RKSJ "(003.003)" Add ROM
*Font Ryumin-Light-Add-RKSJ-V: RKSJ "(003.003)" Add ROM
*Font Ryumin-Light-Add-V: JIS "(003.003)" Add ROM
*Font Ryumin-Light-EUC-H: EUC "(003.003)" JIS-83 ROM
*Font Ryumin-Light-EUC-V: EUC "(003.003)" JIS-83 ROM
*Font Ryumin-Light-Ext-H: JIS "(003.003)" Ext ROM
*Font Ryumin-Light-Ext-RKSJ-H: RKSJ "(003.003)" Ext ROM
*Font Ryumin-Light-Ext-RKSJ-V: RKSJ "(003.003)" Ext ROM
*Font Ryumin-Light-Ext-V: JIS "(003.003)" Ext ROM
*Font Ryumin-Light-H: JIS "(003.003)" JIS-83 ROM
*Font Ryumin-Light-NWP-H: JIS "(003.003)" NWP ROM
*Font Ryumin-Light-NWP-V: JIS "(003.003)" NWP ROM
*Font Ryumin-Light-RKSJ-H: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-RKSJ-V: RKSJ "(003.003)" JIS-83 ROM
*Font Ryumin-Light-V: JIS "(003.003)" JIS-83 ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*?FontQuery: "
  { count 1 gt
    { exch dup 127 string cvs (/) print print (:) print
     /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
    } { exit } ifelse
  } bind loop
  (*) = flush"
*End

*?FontList: "(*) {cvn ==} 128 string /Font resourceforall (*) = flush"

*DefaultColorSep: ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi

*%  For 60 lpi / 600 dpi ================================

*ColorSepScreenAngle ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "0.0"
*ColorSepScreenAngle CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "0.0"
*ColorSepScreenAngle ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "0.0"
*ColorSepScreenAngle ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "0.0"
*ColorSepScreenAngle ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "60.0"
*ColorSepScreenFreq CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "60.0"
*ColorSepScreenFreq ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "60.0"
*ColorSepScreenFreq ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "60.0"
*ColorSepScreenFreq ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "60.0"

*% end of PPD file for Tektronix Phaser 560J 2JF
