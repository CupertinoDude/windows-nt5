*PPD-Adobe: "4.1"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.1"
*FileVersion: "2.0"
*PCFileName: "NC3000_1.PPD"
*LanguageVersion: Japanese
*Product: "(LCX-PS)"
*PSVersion: "(52.1) 0"
*ModelName: "NEC PC-PR3000PS"
*ShortNickName: "NEC PC-PR3000PS"
*NickName: "NEC PC-PR3000PS v52.1"

*% Constraints ===============
*UIConstraints: *InputSlot Upper *PageSize B4
*UIConstraints: *InputSlot Lower *PageSize A4
*UIConstraints: *InputSlot Lower *PageSize B5
*UIConstraints: *InputSlot Lower *PageSize Postcard
*UIConstraints: *PageSize B4 *InputSlot Upper
*UIConstraints: *PageSize A4 *InputSlot Lower
*UIConstraints: *PageSize B5 *InputSlot Lower
*UIConstraints: *PageSize Postcard *InputSlot Lower

*% General Information and Defaults ===============
*FreeVM: "1422294"
*LanguageLevel: "1"
*Extensions: Composite FileSystem
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: True
*?FileSystem: "
save
  statusdict /diskonline get exec {(True)}{(False)} ifelse = flush
restore
"
*End

*Throughput: "8"
*Password: "0"
*ExitServer: "
  count 0 eq {  % is the password on the stack?
    true 
  }{
    dup	% potential password
    statusdict /checkpassword get exec not 
  } ifelse 
  {  %  if no password or not valid 
    (WARNING : Cannot perform the exitserver command.) = 
    (Password supplied is not valid.) = 
    (Please contact the author of this software.) = flush
    quit 
  } if 
  serverdict /exitserver get exec
"
*End
*Reset: "
  count 0 eq {  % is the password on the stack?
    true 
  }{
    dup	% potential password
    statusdict /checkpassword get exec not 
  } ifelse 
  {  %  if no password or not valid 
    (WARNING : Cannot reset printer.) = 
    (Password supplied is not valid.) = 
    (Please contact the author of this software.) = flush
    quit 
  } if 
  serverdict /exitserver get exec
  systemdict /quit get exec
  (WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 320dpi
*?Resolution: "
save
  initgraphics
  0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  (          ) cvs print (dpi) = flush
restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 
sub }{dup mul exch dup mul add 1 exch sub }ifelse }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize A4: "statusdict /a4tray get exec"
*PageSize B4: "statusdict /b4tray get exec"
*PageSize B5: "statusdict /b5tray get exec"
*PageSize Postcard/はがき: "statusdict /postcardtray get exec"
*?PageSize: "
save 
4 dict 
  dup /a4 (A4) put
  dup /b4 (B4) put
  dup /b5 (B5) put
  dup /postcard (Postcard) put
  statusdict /papersize get exec
  3 1 roll  {get} stopped {(Unknown)}if
  exch  not { print (.Transverse) }if
  = flush
restore 
"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion A4: "a4"
*PageRegion B4: "b4"
*PageRegion B5: "b5"
*PageRegion Postcard/はがき: "postcard"
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea A4: "22.68 14.3438 584.055 827.719 "
*ImageableArea B4: "22.68 17.055 706.455 1017.63 "
*ImageableArea B5: "22.68 16.1551 504.855 714.33 "
*ImageableArea Postcard/はがき: "22.68 9.585 274.455 405.36 "
*?ImageableArea: "
save
  /cvp {(                ) cvs print ( ) print } bind def
  /upperright {10000 mul floor 10000 div} bind def
  /lowerleft {10000 mul ceiling 10000 div} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {lowerleft cvp} repeat
  exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension A4: "595 842"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension Postcard/はがき: "283 420"

*RequiresPageRegion All: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/ホッパ１: "statusdict begin 1 setpapertray end"
*InputSlot Lower/ホッパ２: "statusdict begin 2 setpapertray end"
*?InputSlot: "
save
  [(Unknown) (Upper) (Lower) ]
  statusdict /papertray get exec
  {get exec} stopped { pop pop (Unknown)} if = flush
restore 
"
*End
*CloseUI: *InputSlot

*DefaultOutputBin: OnlyOne
*DefaultOutputOrder: Normal

*OpenUI *ManualFeed/手差し: Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*ManualFeed True: "statusdict /manualfeed true put"
*ManualFeed False: "statusdict /manualfeed false put"
*DefaultManualFeed: False
*?ManualFeed: "
  statusdict /manualfeed get
  {(True)}{(False)}ifelse = flush
"
*End
*CloseUI: *ManualFeed

*% Font Information =====================
*DefaultFont: Courier
*Font Courier: Standard "(001.004)" Standard ROM
*Font Courier-Bold: Standard "(001.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(001.004)" Standard ROM
*Font Courier-Oblique: Standard "(001.004)" Standard ROM
*Font Helvetica: Standard "(001.002)" Standard ROM
*Font Helvetica-Bold: Standard "(001.002)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.002)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.002)" Standard ROM
*Font Symbol: Special "(001.003)" Special ROM
*Font Times-Bold: Standard "(001.002)" Standard ROM
*Font Times-BoldItalic: Standard "(001.004)" Standard ROM
*Font Times-Italic: Standard "(001.002)" Standard ROM
*Font Times-Roman: Standard "(001.002)" Standard ROM

*Font GothicBBB-Medium-78-EUC-H: EUC "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-EUC-V: EUC "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-H: JIS "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-RKSJ-H: RKSJ "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-RKSJ-V: RKSJ "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-SJ-H: Shift-JIS "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-SJ-V: Shift-JIS "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-78-V: JIS "(001.000)" JIS-78 Disk
*Font GothicBBB-Medium-83pv-RKSJ-H: RKSJ "(001.000)" 83pv Disk
*Font GothicBBB-Medium-83pv-RKSJ-V: RKSJ "(001.000)" 83pv Disk
*Font GothicBBB-Medium-EUC-H: EUC "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-EUC-V: EUC "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-Ext-EUC-H: EUC "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-EUC-V: EUC "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-H: JIS "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-RKSJ-H: RKSJ "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-RKSJ-V: RKSJ "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-SJ-H: Shift-JIS "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-SJ-V: Shift-JIS "(001.000)" Ext Disk
*Font GothicBBB-Medium-Ext-V: JIS "(001.000)" Ext Disk
*Font GothicBBB-Medium-H: JIS "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-RKSJ-H: RKSJ "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-RKSJ-V: RKSJ "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-SJ-H: Shift-JIS "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-SJ-V: Shift-JIS "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium-V: JIS "(001.000)" JIS-83 Disk
*Font GothicBBB-Medium.Hankaku: Special "(001.000)" Special Disk
*Font GothicBBB-Medium.Roman: Special "(001.000)" Special Disk
*Font GothicBBB-Medium.WP-Symbol: Special "(001.000)" Special Disk
*Font Mincho-PC-Hiragana: Special "(001.000)" Special Disk
*Font Mincho-PC-Katakana: Special "(001.000)" Special Disk
*Font Ryumin-Light-78-EUC-H: EUC "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-EUC-V: EUC "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-H: JIS "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-RKSJ-H: RKSJ "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-RKSJ-V: RKSJ "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-SJ-H: Shift-JIS "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-SJ-V: Shift-JIS "(001.000)" JIS-78 Disk
*Font Ryumin-Light-78-V: JIS "(001.000)" JIS-78 Disk
*Font Ryumin-Light-83pv-RKSJ-H: RKSJ "(001.000)" 83pv Disk
*Font Ryumin-Light-83pv-RKSJ-V: RKSJ "(001.000)" 83pv Disk
*Font Ryumin-Light-EUC-H: EUC "(001.000)" JIS-83 Disk
*Font Ryumin-Light-EUC-V: EUC "(001.000)" JIS-83 Disk
*Font Ryumin-Light-Ext-EUC-H: EUC "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-EUC-V: EUC "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-H: JIS "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-RKSJ-H: RKSJ "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-RKSJ-V: RKSJ "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-SJ-H: Shift-JIS "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-SJ-V: Shift-JIS "(001.000)" Ext Disk
*Font Ryumin-Light-Ext-V: JIS "(001.000)" Ext Disk
*Font Ryumin-Light-H: JIS "(001.000)" JIS-83 Disk
*Font Ryumin-Light-RKSJ-H: RKSJ "(001.000)" JIS-83 Disk
*Font Ryumin-Light-RKSJ-V: RKSJ "(001.000)" JIS-83 Disk
*Font Ryumin-Light-SJ-H: Shift-JIS "(001.000)" JIS-83 Disk
*Font Ryumin-Light-SJ-V: Shift-JIS "(001.000)" JIS-83 Disk
*Font Ryumin-Light-V: JIS "(001.000)" JIS-83 Disk
*Font Ryumin-Light.Hankaku: Special "(001.000)" Special Disk
*Font Ryumin-Light.Roman: Special "(001.000)" Special Disk
*Font Ryumin-Light.WP-Symbol: Special "(001.000)" Special Disk
*Font UserGaiji: Special "(001.000)" Special Disk
*?FontQuery: "
save
/str 128 string def str 0 (fonts/) putinterval
{
  count 1 gt {
  exch dup 128 string cvs (/) print print (:) print
  dup FontDirectory exch known {pop (Yes)}
  {
      str
      dup 3 -1 roll 128 string cvs dup length /len exch def
      6 exch putinterval
      0 len 6 add getinterval mark exch
      { } 128 string filenameforall counttomark 0 gt {
      cleartomark (Yes)}{cleartomark (No)}ifelse
      }ifelse =
      }{ exit } ifelse
  } bind loop
  (*) = flush
restore
"
*End

*?FontList: "
save
  FontDirectory { pop == } bind forall flush
  /filenameforall where {
    pop (fonts/*) {
    dup length 6 sub 6 exch getinterval cvn ==
    } bind
    128 string filenameforall flush
  } if
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: cover open"
*Status: "PrinterError: ep life"
*Status: "PrinterError: fuser life"
*Status: "PrinterError: paper misfeed"
*Status: "PrinterError: no cartridge"
*Status: "PrinterError: wrong paper size"
*Status: "PrinterError: out of toner"
*Status: "PrinterError: problem with fuser temp"
*Status: "PrinterError: manual feed timeout"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: offline"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "serial25"
*Source: "Centronics"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "paper jam"
*PrinterError: "cover open"
*PrinterError: "ep life"
*PrinterError: "fuser life"
*PrinterError: "paper misfeed"
*PrinterError: "no cartridge"
*PrinterError: "wrong paper size"
*PrinterError: "out of toner"
*PrinterError: "problem with fuser temp"
*PrinterError: "manual feed timeout"
*PrinterError: "out of paper"
*PrinterError: "offline"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.320dpi/60 lpi / 320 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow


*%  For 60 lpi / 320 dpi  ===============================

*%ColorSepScreenAngle ProcessBlack.60lpi.320dpi/60 lpi / 320 dpi: "45"
*%ColorSepScreenAngle CustomColor.60lpi.320dpi/60 lpi / 320 dpi: "45"
*%ColorSepScreenAngle ProcessCyan.60lpi.320dpi/60 lpi / 320 dpi: "15"
*%ColorSepScreenAngle ProcessMagenta.60lpi.320dpi/60 lpi / 320 dpi: "75"
*%ColorSepScreenAngle ProcessYellow.60lpi.320dpi/60 lpi / 320 dpi: "0"

*%ColorSepScreenFreq ProcessBlack.60lpi.320dpi/60 lpi / 320 dpi: "60"
*%ColorSepScreenFreq CustomColor.60lpi.320dpi/60 lpi / 320 dpi: "60"
*%ColorSepScreenFreq ProcessCyan.60lpi.320dpi/60 lpi / 320 dpi: "60"
*%ColorSepScreenFreq ProcessMagenta.60lpi.320dpi/60 lpi / 320 dpi: "60"
*%ColorSepScreenFreq ProcessYellow.60lpi.320dpi/60 lpi / 320 dpi: "60"

*% For "LCX-PS" version 52.1
*% Produced by "BuildPPD.ps" version 3.0 edit 58
*% Converted to meet 4.1 specification
*% Last Edit Date: April 12 1995
*% The byte count of this file should be exactly 013574 or 013967
*% depending on the filesystem it resides in.
*% end of PPD file for LCX-PS
