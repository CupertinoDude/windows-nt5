*PPD-Adobe: "4.3"
*% ============================================================
*% Printer Description File for MICROLINE 660PS
*% Copyright 2000 Oki Data Corporation
*% Date: Nov. 24, 2000  Edt: 07
*% ============================================================
*FormatVersion: "4.3"
*FileVersion: "1.0"
*LanguageEncoding: JIS83-RKSJ
*LanguageVersion: Japanese
*PCFileName: "OK6602_1.PPD"
*Product: "(MICROLINE 660PS)"
*PSVersion: "(2017.103) 27"
*Manufacturer: "Oki"
*ModelName: "OKI MICROLINE 660PS"
*ShortNickName: "OKI MICROLINE 660PS"
*NickName: "OKI MICROLINE 660PS v2017.103"

*% _____ Options and Constraints __________________________________
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *Option1/セカンドトレイ: Boolean
*DefaultOption1: False
*Option1 True/搭載している: ""
*Option1 False/搭載していない: ""
*?Option1: "
	save
		currentpagedevice /InputAttributes get begin
		1 where {pop (True)} {(False)} ifelse
		= flush
		end
	restore
"
*End
*CloseUI: *Option1
*OpenUI *Option2/マルチパーパスフィーダ: Boolean
*DefaultOption2: False
*Option2 True/搭載している: ""
*Option2 False/搭載していない: ""
*?Option2: "
	save
		currentpagedevice /InputAttributes get begin
		4 where {pop (True)} {(False)} ifelse
		= flush
		end
	restore
"
*End
*CloseUI: *Option2
*% ________________________________________________________________
*OpenUI *InstalledMemory/メモリ容量（RAMサイズ）: PickOne
*DefaultInstalledMemory: 8MB
*InstalledMemory 8MB/標準 8 MB RAM: ""
*InstalledMemory 16MB/16 MB (8 MB 増設): ""
*?InstalledMemory : "
	save
		currentsystemparams /InstalledRam get
		1024 idiv 1024 idiv (          ) cvs print (MB) = flush
	restore
"
*End
*CloseUI: *InstalledMemory
*CloseGroup: InstallableOptions
*% ________________________________________________________________
*UIConstraints: *Option1 False *InputSlot Lower
*UIConstraints: *Option2 False *InputSlot Multi-Feeder
*UIConstraints: *InputSlot Lower *Option1 False
*UIConstraints: *InputSlot Multi-Feeder *Option2 False
*UIConstraints: *PageSize Env10 *InputSlot Upper
*UIConstraints: *PageSize Env9 *InputSlot Upper
*UIConstraints: *PageSize EnvDL *InputSlot Upper
*UIConstraints: *PageSize EnvC5 *InputSlot Upper
*UIConstraints: *PageSize EnvMonarch *InputSlot Upper
*UIConstraints: *PageSize Postcard *InputSlot Upper
*UIConstraints: *PageSize ReturnPostcard *InputSlot Upper
*UIConstraints: *PageSize EnvChou3Rotated *InputSlot Upper
*UIConstraints: *PageSize EnvChou4Rotated *InputSlot Upper
*UIConstraints: *PageSize EnvYou4Rotated *InputSlot Upper
*UIConstraints: *PageSize EnvFree *InputSlot Upper
*UIConstraints: *PageRegion Env10 *InputSlot Upper
*UIConstraints: *PageRegion Env9 *InputSlot Upper
*UIConstraints: *PageRegion EnvDL *InputSlot Upper
*UIConstraints: *PageRegion EnvC5 *InputSlot Upper
*UIConstraints: *PageRegion EnvMonarch *InputSlot Upper
*UIConstraints: *PageRegion Postcard *InputSlot Upper
*UIConstraints: *PageRegion ReturnPostcard *InputSlot Upper
*UIConstraints: *PageRegion EnvChou3Rotated *InputSlot Upper
*UIConstraints: *PageRegion EnvChou4Rotated *InputSlot Upper
*UIConstraints: *PageRegion EnvYou4Rotated *InputSlot Upper
*UIConstraints: *PageRegion EnvFree *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize Env10
*UIConstraints: *InputSlot Upper *PageSize Env9
*UIConstraints: *InputSlot Upper *PageSize EnvDL
*UIConstraints: *InputSlot Upper *PageSize EnvC5
*UIConstraints: *InputSlot Upper *PageSize EnvMonarch
*UIConstraints: *InputSlot Upper *PageSize Postcard
*UIConstraints: *InputSlot Upper *PageSize ReturnPostcard
*UIConstraints: *InputSlot Upper *PageSize EnvChou3Rotated
*UIConstraints: *InputSlot Upper *PageSize EnvChou4Rotated
*UIConstraints: *InputSlot Upper *PageSize EnvYou4Rotated
*UIConstraints: *InputSlot Upper *PageSize EnvFree
*UIConstraints: *InputSlot Upper *PageRegion Env10
*UIConstraints: *InputSlot Upper *PageRegion Env9
*UIConstraints: *InputSlot Upper *PageRegion EnvDL
*UIConstraints: *InputSlot Upper *PageRegion EnvC5
*UIConstraints: *InputSlot Upper *PageRegion EnvMonarch
*UIConstraints: *InputSlot Upper *PageRegion Postcard
*UIConstraints: *InputSlot Upper *PageRegion ReturnPostcard
*UIConstraints: *InputSlot Upper *PageRegion EnvChou3Rotated
*UIConstraints: *InputSlot Upper *PageRegion EnvChou4Rotated
*UIConstraints: *InputSlot Upper *PageRegion EnvYou4Rotated
*UIConstraints: *InputSlot Upper *PageRegion EnvFree
*UIConstraints: *PageSize Env10 *InputSlot Lower
*UIConstraints: *PageSize Env9 *InputSlot Lower
*UIConstraints: *PageSize EnvDL *InputSlot Lower
*UIConstraints: *PageSize EnvC5 *InputSlot Lower
*UIConstraints: *PageSize EnvMonarch *InputSlot Lower
*UIConstraints: *PageSize Postcard *InputSlot Lower
*UIConstraints: *PageSize ReturnPostcard *InputSlot Lower
*UIConstraints: *PageSize EnvChou3Rotated *InputSlot Lower
*UIConstraints: *PageSize EnvChou4Rotated *InputSlot Lower
*UIConstraints: *PageSize EnvYou4Rotated *InputSlot Lower
*UIConstraints: *PageSize EnvFree *InputSlot Lower
*UIConstraints: *PageRegion Env10 *InputSlot Lower
*UIConstraints: *PageRegion Env9 *InputSlot Lower
*UIConstraints: *PageRegion EnvDL *InputSlot Lower
*UIConstraints: *PageRegion EnvC5 *InputSlot Lower
*UIConstraints: *PageRegion EnvMonarch *InputSlot Lower
*UIConstraints: *PageRegion Postcard *InputSlot Lower
*UIConstraints: *PageRegion ReturnPostcard *InputSlot Lower
*UIConstraints: *PageRegion EnvChou3Rotated *InputSlot Lower
*UIConstraints: *PageRegion EnvChou4Rotated *InputSlot Lower
*UIConstraints: *PageRegion EnvYou4Rotated *InputSlot Lower
*UIConstraints: *PageRegion EnvFree *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize Env10
*UIConstraints: *InputSlot Lower *PageSize Env9
*UIConstraints: *InputSlot Lower *PageSize EnvDL
*UIConstraints: *InputSlot Lower *PageSize EnvC5
*UIConstraints: *InputSlot Lower *PageSize EnvMonarch
*UIConstraints: *InputSlot Lower *PageSize Postcard
*UIConstraints: *InputSlot Lower *PageSize ReturnPostcard
*UIConstraints: *InputSlot Lower *PageSize EnvChou3Rotated
*UIConstraints: *InputSlot Lower *PageSize EnvChou4Rotated
*UIConstraints: *InputSlot Lower *PageSize EnvYou4Rotated
*UIConstraints: *InputSlot Lower *PageSize EnvFree
*UIConstraints: *InputSlot Lower *PageRegion Env10
*UIConstraints: *InputSlot Lower *PageRegion Env9
*UIConstraints: *InputSlot Lower *PageRegion EnvDL
*UIConstraints: *InputSlot Lower *PageRegion EnvC5
*UIConstraints: *InputSlot Lower *PageRegion EnvMonarch
*UIConstraints: *InputSlot Lower *PageRegion Postcard
*UIConstraints: *InputSlot Lower *PageRegion ReturnPostcard
*UIConstraints: *InputSlot Lower *PageRegion EnvChou3Rotated
*UIConstraints: *InputSlot Lower *PageRegion EnvChou4Rotated
*UIConstraints: *InputSlot Lower *PageRegion EnvYou4Rotated
*UIConstraints: *InputSlot Lower *PageRegion EnvFree
*UIConstraints: *PageSize A6 *InputSlot Lower
*UIConstraints: *PageRegion A6 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize A6
*UIConstraints: *InputSlot Lower *PageRegion A6
*UIConstraints: *PageSize Legal *InputSlot Multi-Feeder
*UIConstraints: *PageRegion Legal *InputSlot Multi-Feeder
*UIConstraints: *InputSlot Multi-Feeder *PageSize Legal
*UIConstraints: *InputSlot Multi-Feeder *PageRegion Legal
*UIConstraints: *PageSize Legal13 *InputSlot Multi-Feeder
*UIConstraints: *PageRegion Legal13 *InputSlot Multi-Feeder
*UIConstraints: *InputSlot Multi-Feeder *PageSize Legal13
*UIConstraints: *InputSlot Multi-Feeder *PageRegion Legal13

*% _____ Device Capabilities ______________________________________
*LanguageLevel: "2"
*Protocols: PJL TBCP
*JCLBegin: "<1B>%-12345X"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X"
*Emulators: hplj
*StartEmulator_hplj: "<1B>%-12345X@PJL ENTER LANGUAGE=PCL<0A>"
*StopEmulator_hplj: "<1B>%-12345X"
*% __________________
*FreeVM: "2321610"
*VMOption 8MB/標準 8MB RAM: "2321610"
*VMOption 16MB/16MB (8MB 増設）: "3910858"
*% _______________________________
*FCacheSize 8MB: 1118278
*FCacheSize 16MB: 2184994
*% ________________________________________________________________
*ColorDevice: False
*DefaultColorSpace: Gray
*% __________________________
*TTRasterizer: Type42
*?TTRasterizer: "
	save
	42 /FontType resourcestatus
	{pop pop (Type42)} {(No Type42)} ifelse = flush
	restore
	"
*End
*% __________________________
*Throughput: "14"
*1284Modes Parallel: Compat Nibble
*1284DeviceID: "MANUFACTURE:OKI DATA CORP;COMMAND SET:IPL3,ESCP,POSTSCRIPT;MODEL:MICROLINE 660PS;CLASS:PRINTER;DESCRIPTION:MICROLINE 660PS;COMPATIBLE ID:;"
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End
*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: A4
*ImageableArea Letter/レター: "14.4 14.4 597.6 775.6"
*ImageableArea Legal/リーガル14: "14.4 14.4 597.6 991.6"
*ImageableArea Legal13/リーガル13: "14.4 14.4 597.6 921.6"
*ImageableArea A4: "14.4 14.4 580.6 825.6"
*ImageableArea A5: "14.4 14.4 400.6 578.6"
*ImageableArea A6: "14.4 14.4 282.6 403.6"
*ImageableArea B5: "14.4 14.4 501.6 712.6"
*ImageableArea Executive: "15.4 14.4 505.6 739.6"
*ImageableArea Env10/Com-10: "14.4 14.4 282.6 667.6"
*ImageableArea Env9/Com-9: "14.4 14.4 264.5 624.5"
*ImageableArea EnvDL/DL: "14.4 14.4 297.6 607.6"
*ImageableArea EnvC5/C5: "14.4 14.4 443.6 631.6"
*ImageableArea EnvMonarch/Monarch: "14.4 14.4 264.6 523.6"
*ImageableArea Postcard/はがき: "14.4 14.4 269.6 398.6"
*ImageableArea ReturnPostcard/往復はがき: "14.4 14.4 552.5 404.1"
*ImageableArea EnvChou3Rotated/封筒１ 長形３号: "14.4 14.4 651.6 323.6"
*ImageableArea EnvChou4Rotated/封筒２ 長形４号: "14.4 14.4 566.6 238.6"
*ImageableArea EnvYou4Rotated/封筒３ 洋形４号: "14.4 14.4 651.6 280.6"
*ImageableArea Free/フリー: "14.4 14.4 597.6 825.6"
*ImageableArea EnvFree/封筒フリー: "14.4 14.4 825.6 597.6"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat () = flush
 restore
"
*End
*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A4
*PaperDimension Letter/レター: "612 792"
*PaperDimension Legal/リーガル14: "612 1008"
*PaperDimension Legal13/リーガル13: "612 936"
*PaperDimension A4: "595 842"
*PaperDimension A5: "420 595"
*PaperDimension A6: "297 420"
*PaperDimension B5: "516 729"
*PaperDimension Executive: "522 756"
*PaperDimension Env10/Com-10: "297 684"
*PaperDimension Env9/Com-9: "279 639"
*PaperDimension EnvDL/DL: "312 624"
*PaperDimension EnvC5/C5: "459 649"
*PaperDimension EnvMonarch/Monarch: "279 540"
*PaperDimension Postcard/はがき: "284 419"
*PaperDimension ReturnPostcard/往復はがき: "568 419"
*PaperDimension EnvChou3Rotated/封筒１ 長形３号: "666 340"
*PaperDimension EnvChou4Rotated/封筒２ 長形４号: "581 255"
*PaperDimension EnvYou4Rotated/封筒３ 洋形４号: "666 298"
*PaperDimension Free/フリー: "612 842"
*PaperDimension EnvFree/封筒フリー: "842 612"
*% ________________________________________________________________
*RequiresPageRegion All: True
*% _______________________
*OpenUI *InputSlot: PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/上トレイ: "
	1 dict dup /ManualFeed false put setpagedevice
	0 statusdict /setpapertray 2 copy known
	{ get {exec} stopped {pop} if } 
	{pop pop pop} ifelse
"
*End
*InputSlot Lower/下トレイ: "
	1 dict dup /ManualFeed false put setpagedevice
	1 statusdict /setpapertray 2 copy known
	{ get {exec} stopped {pop} if } 
	{pop pop pop} ifelse
"
*End
*InputSlot Multi-Feeder/ﾏﾙﾁﾊﾟｰﾊﾟｽﾌｨｰﾀﾞ: "
	1 dict dup /ManualFeed false put setpagedevice
	4 statusdict /setpapertray 2 copy known
	{ get {exec} stopped {pop} if } 
	{pop pop pop} ifelse
"
*End
*InputSlot ManualFeed/手差し: "
    1 dict dup /ManualFeed true put setpagedevice"
*End
*?InputSlot: "
  save
  currentpagedevice /ManualFeed get
  { (ManualFeed)}
  {
  	3 dict
  	dup /0 (Upper) put
  	dup /1 (Lower) put
  	dup /4 (Multi-Feeder) put
  
    	currentpagedevice /InputAttributes get
  		dup /Priority known
  		{ /Priority get 0 get (      ) cvs cvn get }
  		{
    		dup length 1 eq
    		{ {pop} forall (       ) cvs cvn get }
    		{ pop pop (Unknown) } ifelse
  	} ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot
*% _____ Paper Handling __________________________________________
*LandscapeOrientation: Any
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 40.0 AnySetup *PageSize
*DefaultPageSize: A4
*PageSize Letter/レター: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 792] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize Legal/リーガル14: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 1008] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize Legal13/リーガル13: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 936] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageSize A4: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [595 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize A5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [420 595] >> setpagedevice } stopped
{  3 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize A6: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [297 420] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize B5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [516 729] >> setpagedevice } stopped
{  3 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Executive: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [522 756] >> setpagedevice } stopped
{  3 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Env10/Com-10: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [297 684] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Env9/Com-9: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [279 639] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 639] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvDL/DL: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [312 624] >> setpagedevice } stopped
{  3 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvC5/C5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [459 649] >> setpagedevice } stopped
{  3 dict dup /PageSize [459 649] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvMonarch/Monarch: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [279 540] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Postcard/はがき: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [284 419] >> setpagedevice } stopped
{  3 dict dup /PageSize [284 419] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize ReturnPostcard/往復はがき: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [568 419] >> setpagedevice } stopped
{  3 dict dup /PageSize [568 419] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvChou3Rotated/封筒１ 長形３号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [666 340] /MediaType(Envelope)>> 
setpagedevice } stopped
{  3 dict dup /PageSize [666 340] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvChou4Rotated/封筒２ 長形４号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [581 255] /MediaType(Envelope) >> 
setpagedevice } stopped
{  3 dict dup /PageSize [581 255] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvYou4Rotated/封筒３ 洋形４号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [666 298] /MediaType(Envelope)>> 
setpagedevice } stopped
{  3 dict dup /PageSize [666 298] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize Free/フリー: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [612 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageSize EnvFree/封筒フリー: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [842 612] /MediaType(Envelope) >> 
setpagedevice } stopped
{  3 dict dup /PageSize [842 612] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop 
   (Unknown) 
  20 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [612 936] (Legal13) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [297 420] (A6) put
   dup [516 729] (B5) put
   dup [522 756] (Executive) put
   dup [297 684] (Env10) put
   dup [279 639] (Env9) put
   dup [312 624] (EnvDL) put
   dup [459 649] (EnvC5) put
   dup [279 540] (EnvMonarch) put
   dup [284 419] (Postcard) put
   dup [568 419] (ReturnPostcard) put
   dup [666 340] (EnvChou3Rotated) put
   dup [581 255] (EnvChou4Rotated) put
   dup [666 298] (EnvYou4Rotated) put
   dup [612 842] (Free) put
   dup [842 612] (EnvFree) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize
*% _______________________________________________
*OpenUI *PageRegion:  PickOne
*OrderDependency: 50.0 AnySetup *PageRegion
*DefaultPageRegion: A4
*PageRegion Letter/レター: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 792] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageRegion Legal/リーガル14: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 1008] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageRegion Legal13/リーガル13: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 936] >> setpagedevice } stopped 
{  3 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if "
*End
*PageRegion A4: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [595 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion A5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [420 595] >> setpagedevice } stopped
{  3 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion A6: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [297 420] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 420] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion B5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [516 729] >> setpagedevice } stopped
{  3 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Executive: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [522 756] >> setpagedevice } stopped
{  3 dict dup /PageSize [522 756] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Env10/Com-10: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [297 684] >> setpagedevice } stopped
{  3 dict dup /PageSize [297 684] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Env9/Com-9: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [279 639] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 639] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvDL/DL: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [312 624] >> setpagedevice } stopped
{  3 dict dup /PageSize [312 624] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvC5/C5: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [459 649] >> setpagedevice } stopped
{  3 dict dup /PageSize [459 649] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvMonarch/Monarch: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [279 540] >> setpagedevice } stopped
{  3 dict dup /PageSize [279 540] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Postcard/はがき: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [284 419] >> setpagedevice } stopped
{  3 dict dup /PageSize [284 419] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion ReturnPostcard/往復はがき: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [568 419] >> setpagedevice } stopped
{  3 dict dup /PageSize [568 419] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvChou3Rotated/封筒１ 長形３号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [666 340] /MediaType(Envelope)>> 
setpagedevice } stopped
{  3 dict dup /PageSize [666 340] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvChou4Rotated/封筒２ 長形４号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [581 255] /MediaType(Envelope) >> 
setpagedevice } stopped
{  3 dict dup /PageSize [581 255] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvYou4Rotated/封筒３ 洋形４号: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [666 298] /MediaType(Envelope) >> 
setpagedevice } stopped
{  3 dict dup /PageSize [666 298] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion Free/フリー: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /PageSize [612 842] >> setpagedevice } stopped
{  3 dict dup /PageSize [612 842] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*PageRegion EnvFree/封筒フリー: "
statusdict /papertray 2 copy known{
get exec statusdict /setpapertray 2 copy known
	{1 dict begin currentpagedevice /ManualFeed get /OK_MAN exch def get exec  
	 OK_MAN { 1 dict dup /ManualFeed true put setpagedevice} if end
	} {pop pop} ifelse
} { pop pop} ifelse
{ << /Policies <</PageSize 7>> /PageSize [842 612] /MediaType(Envelope) >> 
setpagedevice } stopped
{  3 dict dup /PageSize [842 612] put dup /ImagingBBox null put
    dup /Policies 1 dict dup /PageSize 7 put put setpagedevice } if"
*End
*CloseUI: *PageRegion
*% ________________________________________________________________
*OpenUI *Resolution/解像度:  PickOne
*OrderDependency: 70.0 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 300dpi/300 dpi: "
1 dict dup /HWResolution [300 300] put setpagedevice
1 dict dup /Policies 1 dict dup /HWResolution 2 put put setpagedevice"
*End
*Resolution 600dpi/600 dpi: "
1 dict dup /HWResolution [600 600] put setpagedevice
1 dict dup /Policies 1 dict dup /HWResolution 2 put put setpagedevice"
*End
*Resolution 1200dpi/600x1200 dpi: "
1 dict dup /HWResolution [600 1200] put setpagedevice
1 dict dup /Policies 1 dict dup /HWResolution 2 put put setpagedevice"
*End
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    1 get (       ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution
*% ________________________________________________________________
*OpenUI *TraySwitch/自動トレイ切り替え:  Boolean
*OrderDependency: 80.0 AnySetup *TraySwitch
*DefaultTraySwitch: False
*TraySwitch True/あり: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False/なし: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch
*% _______________________________________
*OpenUI *OutputMode/トナーセーブ:  PickOne
*OrderDependency: 90.0 AnySetup *OutputMode
*DefaultOutputMode: None
*OutputMode None/無効: "
    2 dict
    dup /PostRenderingEnhance false put
    dup /PostRenderingEnhanceDetails
    2 dict
    	dup /Type 28 put
    	dup /TonerSaver 0 put
    put setpagedevice"
*End
*OutputMode Medium/ややセーブ: "
    2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
    2 dict
    	dup /Type 28 put
    	dup /TonerSaver 1 put
    put setpagedevice"
*End
*OutputMode Light/セーブ: "
    2 dict
    dup /PostRenderingEnhance true put
    dup /PostRenderingEnhanceDetails
    2 dict
    	dup /Type 28 put
    	dup /TonerSaver 2 put
    put setpagedevice"
*End
*?OutputMode: "save
 currentpagedevice dup /PostRenderingEnhance known
 {dup /PostRenderingEnhance get
  	{ /PostRenderingEnhanceDetails get
    	  dup /Type get 28 eq
   		{ dup /TonerSaver get 2 gt 
    			{ pop (None)}
    			{ dup /TonerSaver get 0 eq
    				{pop (None)}
    				{dup /TonerSaver get 1 eq 
					{pop (Medium)} {pop  (Light)} ifelse
				} ifelse
    			} ifelse
  		}
   		{pop (None)} ifelse
  	}
  	{pop (None)} ifelse
 }
 {pop (None)} ifelse
 = flush
restore"
*End
*CloseUI: *OutputMode
*% _____ Halftone Information ____________________________________
*DefaultHalftoneType: 3
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
  {abs exch abs 2 copy add 1 gt {1 sub dup mul exch  
  1 sub dup mul add 1 sub} {dup mul exch dup mul  
  add 1 exch sub} ifelse}
 "
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"
*% _____ Halftone Mode _____________________________________
*OpenUI *OKHalftoneMode/スムージング: PickOne
*OrderDependency: 100.0 PageSetup *OKHalftoneMode
*DefaultOKHalftoneMode: Regular
*OKHalftoneMode Regular/標準: "
	currentpagedevice /HWResolution get
	 1 get dup 600 eq
		{pop /DefaultBW600 /Halftone findresource sethalftone} 
		{1200 eq
			{/DefaultBW1200 /Halftone findresource sethalftone} 
			{/DefaultBW300 /Halftone findresource sethalftone} 
ifelse
		} ifelse
"
*End
*OKHalftoneMode Photo/写真: "
	currentpagedevice /HWResolution get
	1 get dup 600 eq
		{pop /Oki16x16aBW600t /Halftone findresource sethalftone}
		{1200 eq
			{/Oki16x16aBW1200t /Halftone findresource 
	sethalftone}
			{/Oki12x12aBW300t /Halftone findresource 
	sethalftone} ifelse
		   } ifelse
	"
*End
*?OKHalftoneMode: "
   save
   currenthalftone /HalftoneType get
   1 eq {(Regular)}{(Photo)} ifelse
   = flush
   restore
   "
*End
*CloseUI: *OKHalftoneMode

*OpenUI *OKFType/フォント:  Boolean
*OrderDependency: 110.0 AnySetup *OKFType
*DefaultOKFType: True
*OKFType True/CIDネイティブ: "
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup length 2 add dict copy begin
    /83pv-RKSJ-H false def /90pv-RKSJ-H false def
    /BuildOCFCompatible currentdict end /FixCIDInitProcSet defineresource pop
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /SetBuildCompatible get false exch exec
    } {
      pop pop
    } ifelse
  } ifelse
} if
"
*End
*OKFType False/OCF互換: "
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup length 2 add dict copy begin
    /83pv-RKSJ-H true def /90pv-RKSJ-H true def
    /BuildOCFCompatible currentdict end /FixCIDInitProcSet defineresource pop
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /SetBuildCompatible get true exch exec
    } {
      pop pop
    } ifelse
  } ifelse
} if
"
*End
*?OKFType: "
save
/resourcestatus where {
  pop mark {
    /BuildOCFCompatible /FixCIDInitProcSet dup /Category resourcestatus {
      pop pop resourcestatus {
        pop pop true
      } {
        false
      } ifelse
    } {
      pop pop false
    } ifelse
  } stopped {cleartomark false} {exch pop} ifelse {
    /BuildOCFCompatible /FixCIDInitProcSet findresource
    dup /83pv-RKSJ-H known {
      /83pv-RKSJ-H get
    } {
      pop true
    } ifelse
  } {
    /CIDParams /ProcSet 2 copy resourcestatus {
      pop pop findresource /BuildCompatible get
      /83pv-RKSJ-H exch 0 exch exec
    } {
      pop pop true
    } ifelse
  } ifelse
} {
  true
} ifelse {(False)}{(True)}ifelse = flush
restore
"
*End
*CloseUI: *OKFType

*% _____ Font Information _________________________________________
*DefaultFont: Courier
*Font AdobeSansMM: Standard "(001.000)" Standard ROM
*Font AdobeSerifMM: Standard "(001.001)" Standard ROM
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font HeiseiMin-W3-83pv-RKSJ-H: 83pv-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-90ms-RKSJ-H: 90ms-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-90ms-RKSJ-V: 90ms-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-90pv-RKSJ-H: 90pv-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-90pv-RKSJ-V: 90pv-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Add-H: Add-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Add-RKSJ-H: Add-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Add-RKSJ-V: Add-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Add-V: Add-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-EUC-H: EUC-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-EUC-V: EUC-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Ext-H: Ext-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Ext-RKSJ-H: Ext-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Ext-RKSJ-V: Ext-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-Ext-V: Ext-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-H: H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-NWP-H: NWP-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-NWP-V: NWP-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-RKSJ-H: RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-RKSJ-V: RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiMin-W3-V: V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-83pv-RKSJ-H: 83pv-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-90ms-RKSJ-H: 90ms-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-90ms-RKSJ-V: 90ms-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-90pv-RKSJ-H: 90pv-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-90pv-RKSJ-V: 90pv-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Add-H: Add-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Add-RKSJ-H: Add-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Add-RKSJ-V: Add-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Add-V: Add-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-EUC-H: EUC-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-EUC-V: EUC-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Ext-H: Ext-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Ext-RKSJ-H: Ext-RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Ext-RKSJ-V: Ext-RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-Ext-V: Ext-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-H: H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-NWP-H: NWP-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-NWP-V: NWP-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-RKSJ-H: RKSJ-H "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-RKSJ-V: RKSJ-V "(003.01)" Adobe-Japan1-2 ROM
*Font HeiseiKakuGo-W5-V: V "(003.01)" Adobe-Japan1-2 ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End
*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End
*ADOTTFontSub TTF12/ＭＳ 明朝: "平成明朝W3"
*ADOTTFontSub TTF13/ＭＳ ゴシック: "平成角ゴシックW5"
*ADOTTFontSub TTF12/@ＭＳ 明朝: "@平成明朝W3"
*ADOTTFontSub TTF13/@ＭＳ ゴシック: "@平成角ゴシックW5"
*%  Printer Messages (verbatim from printer): ________________
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"
*% Status (format: %%[ status: <Message from the list below> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError:Complex page, image approximated"  
*Status: "PrinterError:toner low"
*Status: "PrinterError:change drum"
*Status: "PrinterError:waiting for manual feed"
*Status: "PrinterError:either paper empty, or no tray installed"
*Status: "PrinterError:paper change request"
*Status: "PrinterError:memory overflow"
*Status: "PrinterError:Complex page, imaging incomplete"  
*Status: "PrinterError:toner empty"
*Status: "PrinterError:paper size error"
*Status: "PrinterError:hopping error"
*Status: "PrinterError:paper feed jam"
*Status: "PrinterError:paper exit jam"
*Status: "PrinterError:cover open"
*Status: "PrinterError:front panel i/o timeout"
*Status: "PrinterError:engine i/o timeout"
*Status: "PrinterError:option unit i/o timeout"
*Status: "PrinterError:option unit i/o error"
*Status: "PrinterError:fan motor error"
*Status: "PrinterError:toner sensor error"
*Status: "PrinterError:front cover open"
*Status: "PrinterError:ejecting"
*Status: "PrinterError:engine ssio error"
*Status: "PrinterError:thermister open"
*Status: "PrinterError:thermister short"
*Status: "PrinterError:engine timer 1 error"
*Status: "PrinterError:engine timer 2 error"
*Status: "PrinterError:engine interval timer error"
*Status: "PrinterError:fuser error"
*Status: "PrinterError:fuser can not turn off"
*Status: "PrinterError:thermistor ng"
*Status: "PrinterError:memory error"
*Status: "PrinterError:led head error"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Parallel"
*Source: "Usb"
*Source: "EtherTalk"
*Source: "NetworkInterface"
*PrinterError: "Complex page, image approximated"  
*PrinterError: "toner low"
*PrinterError: "change drum"
*PrinterError: "waiting for manual feed"
*PrinterError: "either paper empty, or no tray installed"
*PrinterError: "paper change request"
*PrinterError: "memory overflow"
*PrinterError: "Complex page, imaging incomplete"  
*PrinterError: "toner empty"
*PrinterError: "paper size error"
*PrinterError: "hopping error"
*PrinterError: "paper feed jam"
*PrinterError: "paper exit jam"
*PrinterError: "cover open"
*PrinterError: "front panel i/o timeout"
*PrinterError: "engine i/o timeout"
*PrinterError: "option unit i/o timeout"
*PrinterError: "option unit i/o error"
*PrinterError: "fan motor error"
*PrinterError: "toner sensor error"
*PrinterError: "front cover open"
*PrinterError: "ejecting"
*PrinterError: "engine ssio error"
*PrinterError: "thermister open"
*PrinterError: "thermister short"
*PrinterError: "engine timer 1 error"
*PrinterError: "engine timer 2 error"
*PrinterError: "engine interval timer error"
*PrinterError: "fuser error" 
*PrinterError: "fuser can not turn off" 
*PrinterError: "thermistor ng"
*PrinterError: "memory error"
*PrinterError: "led head error"
*% _____ Color Separation Information _____________________________
*DefaultColorSep: ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi
*%  For 85 lpi / 600 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "75"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0"
*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "85"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "85"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "85"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "85"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "85"
*%  For 71 lpi / 600 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.71lpi.600dpi/71 lpi / 600 dpi: "71"
*ColorSepScreenFreq CustomColor.71lpi.600dpi/71 lpi / 600 dpi: "71"
*ColorSepScreenFreq ProcessCyan.71lpi.600dpi/71 lpi / 600 dpi: "71"
*ColorSepScreenFreq ProcessMagenta.71lpi.600dpi/71 lpi / 600 dpi: "71"
*ColorSepScreenFreq ProcessYellow.71lpi.600dpi/71 lpi / 600 dpi: "71"
*%  For 60 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"
*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"
*%  For 53 lpi / 300 dpi  ===============================
*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

