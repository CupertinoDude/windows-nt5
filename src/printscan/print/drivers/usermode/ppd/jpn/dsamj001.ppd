*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1994 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% Last Edit Mar.10,1996 for Windows
*FormatVersion: "4.2"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "DSAMJ001.PPD"
*Product: "(FT-R3050AM)"
*PSVersion: "(2013.114) 12"
*ShortNickName: "SCREEN FT-R3050AM"
*ModelName: "SCREEN FT-R3050AM"
*NickName: "SCREEN FT-R3050AM"

*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*FreeVM: "1073738132"

*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: True
*TTRasterizer: Type42

*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%) 
   { currentdevparams dup /Writeable known
	  { /Writeable get {pop true} if }  { pop } ifelse 
	} 10 string /IODevice resourceforall
	{(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "1"
*Password: "0"

*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
       } if"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   serverdict /exitserver get exec
   systemdict /quit get exec
   (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution/Choose Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 3000dpi
*Resolution 3000dpi: "1 dict dup /HWResolution [3000 3000] put setpagedevice"
*Resolution 2400dpi: "1 dict dup /HWResolution [2400 2400] put setpagedevice"
*Resolution 1800dpi: "1 dict dup /HWResolution [1800 1800] put setpagedevice"
*Resolution 1500dpi: "1 dict dup /HWResolution [1500 1500] put setpagedevice"
*Resolution 1200dpi: "1 dict dup /HWResolution [1200 1200] put setpagedevice"
*Resolution 1000dpi: "1 dict dup /HWResolution [1000 1000] put setpagedevice"

*?Resolution: "
save
 currentpagedevice /HWResolution get
 0 get (     ) cvs print  (dpi) = flush
 restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "175"
*ScreenAngle: "45.0"

*DefaultScreenProc: Round
*ScreenProc Round:"{abs exch abs 2 copy add 1 le {dup mul exch dup mul add 1 exch sub}
{1 sub dup mul exch 1 sub dup mul add 1 sub}ifelse}"
*End

*ScreenProc Elliptical: "{abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt 
{pop dup mul exch .75 div dup mul add 4 div 1 exch sub}{dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub .75 div dup mul add 4 div 1 sub}
{.5 exch sub exch pop exch pop}ifelse}ifelse}"
*End

*ScreenProc Diamond: "{abs exch abs 2 copy add .75 le
{dup mul exch dup mul add 1 exch sub}{2 copy add 1.23 le
{.85 mul add 1 exch sub}{1 sub dup mul exch 1 sub dup mul add 1 sub} ifelse} ifelse}"
*End

*ScreenProc Line: "{exch pop abs neg}"

*ScreenProc Square: "{abs exch abs 2 copy lt {exch}if pop neg}"

*ScreenProc Cross: "{abs exch abs 2 copy gt {exch}if pop neg}"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling =====================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "2 dict dup /PageSize [612 792] put dup /Orientation 0 put setpagedevice"
*PageSize Legal: "2 dict dup /PageSize [612 1008] put dup /Orientation 0 put setpagedevice"
*PageSize Tabloid: "2 dict dup /PageSize [792 1224] put dup /Orientation 0 put setpagedevice"
*PageSize A5: "2 dict dup /PageSize [420 595] put dup /Orientation 0 put setpagedevice"
*PageSize A4: "2 dict dup /PageSize [595 842] put dup /Orientation 0 put setpagedevice"
*PageSize A3: "2 dict dup /PageSize [842 1191] put dup /Orientation 0 put setpagedevice"
*PageSize A2: "2 dict dup /PageSize [1191 1684] put dup /Orientation 0 put setpagedevice"
*PageSize B5: "2 dict dup /PageSize [516 729] put dup /Orientation 0 put setpagedevice"
*PageSize B4: "2 dict dup /PageSize [729 1032] put dup /Orientation 0 put setpagedevice"
*PageSize B3: "2 dict dup /PageSize [1032 1460] put dup /Orientation 0 put setpagedevice"

*PageSize Letter.Transverse: "2 dict dup /PageSize [792 612] put dup /Orientation 3 put setpagedevice"
*PageSize Legal.Transverse: "2 dict dup /PageSize [1008 612] put dup /Orientation 3 put setpagedevice"
*PageSize Tabloid.Transverse: "2 dict dup /PageSize [1224 792] put dup /Orientation 3 put setpagedevice"
*PageSize A5.Transverse: "2 dict dup /PageSize [595 420] put dup /Orientation 3 put setpagedevice"
*PageSize A4.Transverse: "2 dict dup /PageSize [842 595] put dup /Orientation 3 put setpagedevice"
*PageSize A3.Transverse: "2 dict dup /PageSize [1191 842] put dup /Orientation 3 put setpagedevice"
*PageSize B5.Transverse: "2 dict dup /PageSize [729 516] put dup /Orientation 3 put setpagedevice"
*PageSize B4.Transverse: "2 dict dup /PageSize [1032 729] put dup /Orientation 3 put setpagedevice"

*PageSize Letter.Extra: "2 dict dup /PageSize [683 863] put dup /Orientation 0 put setpagedevice"
*PageSize Legal.Extra: "2 dict dup /PageSize [683 1079] put dup /Orientation 0 put setpagedevice"
*PageSize Tabloid.Extra: "2 dict dup /PageSize [863 1295] put dup /Orientation 0 put setpagedevice"
*PageSize A5.Extra: "2 dict dup /PageSize [490 666] put dup /Orientation 0 put setpagedevice"
*PageSize A4.Extra: "2 dict dup /PageSize [666 913] put dup /Orientation 0 put setpagedevice"
*PageSize A3.Extra: "2 dict dup /PageSize [913 1261] put dup /Orientation 0 put setpagedevice"
*PageSize A2.Extra: "2 dict dup /PageSize [1261 1755] put dup /Orientation 0 put setpagedevice"
*PageSize B5.Extra: "2 dict dup /PageSize [587 799] put dup /Orientation 0 put setpagedevice"
*PageSize B4.Extra: "2 dict dup /PageSize [799 1103] put dup /Orientation 0 put setpagedevice"
*PageSize B3.Extra: "2 dict dup /PageSize [1103 1531] put dup /Orientation 0 put setpagedevice"

*PageSize Letter.Extra.Transverse: "2 dict dup /PageSize [863 683] put dup /Orientation 3 put setpagedevice"
*PageSize Legal.Extra.Transverse: "2 dict dup /PageSize [1079 683] put dup /Orientation 3 put setpagedevice"
*PageSize Tabloid.Extra.Transverse: "2 dict dup /PageSize [1295 863] put dup /Orientation 3 put setpagedevice"
*PageSize A5.Extra.Transverse: "2 dict dup /PageSize [666 490] put dup /Orientation 3 put setpagedevice"
*PageSize A4.Extra.Transverse: "2 dict dup /PageSize [913 666] put dup /Orientation 3 put setpagedevice"
*PageSize A3.Extra.Transverse: "2 dict dup /PageSize [1261 913] put dup /Orientation 3 put setpagedevice"
*PageSize B5.Extra.Transverse: "2 dict dup /PageSize [799 587] put dup /Orientation 3 put setpagedevice"
*PageSize B4.Extra.Transverse: "2 dict dup /PageSize [1103 799] put dup /Orientation 3 put setpagedevice"

*?PageSize: "
 save
	currentpagedevice /PageSize get aload pop
	2 copy gt {exch} if (Unknown)
	20 dict
	dup [612 792] (Letter) put
	dup [612 1008] (Legal) put
	dup [792 1224] (Tabloid) put
	dup [420 595] (A5) put
	dup [595 842] (A4) put
	dup [842 1191] (A3) put
	dup [1191 1684] (A2) put
	dup [516 729] (B5) put
	dup [729 1032] (B4) put
	dup [1032 1460] (B3) put

	dup [683 863] (Letter.Extra) put
	dup [683 1079] (Legal.Extra) put
	dup [863 1295] (Tabloid.Extra) put
	dup [490 666] (A5.Extra) put
	dup [666 913] (A4.Extra) put
	dup [913 1261] (A3.Extra) put
	dup [1261 1755] (A2.Extra) put
	dup [587 799] (B5.Extra) put
	dup [799 1103] (B4.Extra) put
	dup [1103 1531] (B3.Extra) put

	{ exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
	   { exch pop exit } {pop} ifelse
	} bind forall = flush pop pop
 restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "2 dict dup /PageSize [612 792] put dup /Orientation 0 put setpagedevice"
*PageRegion Legal: "2 dict dup /PageSize [612 1008] put dup /Orientation 0 put setpagedevice"
*PageRegion Tabloid: "2 dict dup /PageSize [792 1224] put dup /Orientation 0 put setpagedevice"
*PageRegion A5: "2 dict dup /PageSize [420 595] put dup /Orientation 0 put setpagedevice"
*PageRegion A4: "2 dict dup /PageSize [595 842] put dup /Orientation 0 put setpagedevice"
*PageRegion A3: "2 dict dup /PageSize [842 1191] put dup /Orientation 0 put setpagedevice"
*PageRegion A2: "2 dict dup /PageSize [1191 1684] put dup /Orientation 0 put setpagedevice"
*PageRegion B5: "2 dict dup /PageSize [516 729] put dup /Orientation 0 put setpagedevice"
*PageRegion B4: "2 dict dup /PageSize [729 1032] put dup /Orientation 0 put setpagedevice"
*PageRegion B3: "2 dict dup /PageSize [1032 1460] put dup /Orientation 0 put setpagedevice"

*PageRegion Letter.Transverse: "2 dict dup /PageSize [792 612] put dup /Orientation 3 put setpagedevice"
*PageRegion Legal.Transverse: "2 dict dup /PageSize [1008 612] put dup /Orientation 3 put setpagedevice"
*PageRegion Tabloid.Transverse: "2 dict dup /PageSize [1224 792] put dup /Orientation 3 put setpagedevice"
*PageRegion A5.Transverse: "2 dict dup /PageSize [595 420] put dup /Orientation 3 put setpagedevice"
*PageRegion A4.Transverse: "2 dict dup /PageSize [842 595] put dup /Orientation 3 put setpagedevice"
*PageRegion A3.Transverse: "2 dict dup /PageSize [1191 842] put dup /Orientation 3 put setpagedevice"
*PageRegion B5.Transverse: "2 dict dup /PageSize [729 516] put dup /Orientation 3 put setpagedevice"
*PageRegion B4.Transverse: "2 dict dup /PageSize [1032 729] put dup /Orientation 3 put setpagedevice"

*PageRegion Letter.Extra: "2 dict dup /PageSize [683 863] put dup /Orientation 0 put setpagedevice"
*PageRegion Legal.Extra: "2 dict dup /PageSize [683 1079] put dup /Orientation 0 put setpagedevice"
*PageRegion Tabloid.Extra: "2 dict dup /PageSize [863 1295] put dup /Orientation 0 put setpagedevice"
*PageRegion A5.Extra: "2 dict dup /PageSize [490 666] put dup /Orientation 0 put setpagedevice"
*PageRegion A4.Extra: "2 dict dup /PageSize [666 913] put dup /Orientation 0 put setpagedevice"
*PageRegion A3.Extra: "2 dict dup /PageSize [913 1261] put dup /Orientation 0 put setpagedevice"
*PageRegion A2.Extra: "2 dict dup /PageSize [1261 1755] put dup /Orientation 0 put setpagedevice"
*PageRegion B5.Extra: "2 dict dup /PageSize [587 799] put dup /Orientation 0 put setpagedevice"
*PageRegion B4.Extra: "2 dict dup /PageSize [799 1103] put dup /Orientation 0 put setpagedevice"
*PageRegion B3.Extra: "2 dict dup /PageSize [1103 1531] put dup /Orientation 0 put setpagedevice"

*PageRegion Letter.Extra.Transverse: "2 dict dup /PageSize [863 683] put dup /Orientation 3 put setpagedevice"
*PageRegion Legal.Extra.Transverse: "2 dict dup /PageSize [1079 683] put dup /Orientation 3 put setpagedevice"
*PageRegion Tabloid.Extra.Transverse: "2 dict dup /PageSize [1295 863] put dup /Orientation 3 put setpagedevice"
*PageRegion A5.Extra.Transverse: "2 dict dup /PageSize [666 490] put dup /Orientation 3 put setpagedevice"
*PageRegion A4.Extra.Transverse: "2 dict dup /PageSize [913 666] put dup /Orientation 3 put setpagedevice"
*PageRegion A3.Extra.Transverse: "2 dict dup /PageSize [1261 913] put dup /Orientation 3 put setpagedevice"
*PageRegion B5.Extra.Transverse: "2 dict dup /PageSize [799 587] put dup /Orientation 3 put setpagedevice"
*PageRegion B4.Extra.Transverse: "2 dict dup /PageSize [1103 799] put dup /Orientation 3 put setpagedevice"

*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea Letter: "0 0 612 792"
*ImageableArea Legal: "0 0 612 1008"
*ImageableArea Tabloid: "0 0 792 1224"
*ImageableArea A5: "0 0 420 595"
*ImageableArea A4: "0 0 595 842"
*ImageableArea A3: "0 0 842 1191"
*ImageableArea A2: "0 0 1191 1684"
*ImageableArea B5: "0 0 516 729"
*ImageableArea B4: "0 0 729 1032"
*ImageableArea B3: "0 0 1032 1460"

*ImageableArea Letter.Transverse: "0 0 792 612"
*ImageableArea Legal.Transverse: "0 0 1008 612"
*ImageableArea Tabloid.Transverse: "0 0 1224 792"
*ImageableArea A5.Transverse: "0 0 595 420"
*ImageableArea A4.Transverse: "0 0 842 595"
*ImageableArea A3.Transverse: "0 0 1191 842"
*ImageableArea B5.Transverse: "0 0 729 516"
*ImageableArea B4.Transverse: "0 0 1032 729"

*ImageableArea Letter.Extra: "0 0 683 863"
*ImageableArea Legal.Extra: "0 0 683 1079"
*ImageableArea Tabloid.Extra: "0 0 863 1295"
*ImageableArea A5.Extra: "0 0 490 666"
*ImageableArea A4.Extra: "0 0 666 913"
*ImageableArea A3.Extra: "0 0 913 1261"
*ImageableArea A2.Extra: "0 0 1261 1755"
*ImageableArea B5.Extra: "0 0 587 799"
*ImageableArea B4.Extra: "0 0 799 1103"
*ImageableArea B3.Extra: "0 0 1103 1531"

*ImageableArea Letter.Extra.Transverse: "0 0 863 683"
*ImageableArea Legal.Extra.Transverse: "0 0 1079 683"
*ImageableArea Tabloid.Extra.Transverse: "0 0 1295 863"
*ImageableArea A5.Extra.Transverse: "0 0 666 490"
*ImageableArea A4.Extra.Transverse: "0 0 913 666"
*ImageableArea A3.Extra.Transverse: "0 0 1261 913"
*ImageableArea B5.Extra.Transverse: "0 0 799 587"
*ImageableArea B4.Extra.Transverse: "0 0 1103 799"

*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid: "792 1224"
*PaperDimension A5: "420 595"
*PaperDimension A4: "595 842"
*PaperDimension A3: "842 1191"
*PaperDimension A2: "1191 1684"
*PaperDimension B5: "516 729"
*PaperDimension B4: "729 1032"
*PaperDimension B3: "1032 1460"

*PaperDimension Letter.Transverse: "792 612"
*PaperDimension Legal.Transverse: "1008 612"
*PaperDimension Tabloid.Transverse: "1224 792"
*PaperDimension A5.Transverse: "595 420"
*PaperDimension A4.Transverse: "842 595"
*PaperDimension A3.Transverse: "1191 842"
*PaperDimension B5.Transverse: "729 516"
*PaperDimension B4.Transverse: "1032 729"

*PaperDimension Letter.Extra: "683 863"
*PaperDimension Legal.Extra: "683 1079"
*PaperDimension Tabloid.Extra: "863 1295"
*PaperDimension A5.Extra: "490 666"
*PaperDimension A4.Extra: "666 913"
*PaperDimension A3.Extra: "913 1261"
*PaperDimension A2.Extra: "1261 1755"
*PaperDimension B5.Extra: "587 799"
*PaperDimension B4.Extra: "799 1103"
*PaperDimension B3.Extra: "1103 1531"

*PaperDimension Letter.Extra.Transverse: "863 683"
*PaperDimension Legal.Extra.Transverse: "1079 683"
*PaperDimension Tabloid.Extra.Transverse: "1295 863"
*PaperDimension A5.Extra.Transverse: "666 490"
*PaperDimension A4.Extra.Transverse: "913 666"
*PaperDimension A3.Extra.Transverse: "1261 913"
*PaperDimension B5.Extra.Transverse: "799 587"
*PaperDimension B4.Extra.Transverse: "1103 799"

*%=== Custom Page Sizes ==================================
*CustomPageSize True: "
  4 dict begin
  5 -2 roll 2 copy le
	{5 2 roll 3 add 4 mod dup /Orientation exch def}
	{5 2 roll 2 add 4 mod dup /Orientation exch def} ifelse
  /PageOffset [ 5 -2 roll ] def
  /PageSize [
  	5 2 roll pop
  ] def
	/ImagingBBox null def
	currentdict end setpagedevice
"
*End

*ParamCustomPageSize Width: 1 points 0 1440
*ParamCustomPageSize Height: 2 points 0 7086
*ParamCustomPageSize WidthOffset: 3 points 0 1440
*ParamCustomPageSize HeightOffset: 4 points 0 7086
*ParamCustomPageSize Orientation: 5 int 0 3
*MaxMediaWidth: "1440"
*?CurrentMediaWidth: "save statusdict /mediawidth get exec = flush restore"
*MaxMediaHeight: "7086"
*?CurrentMediaHeight: "save statusdict /medialength get exec = flush restore"
*CenterRegistered: False
*RequiresPageRegion All: True

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Cassette
*InputSlot Cassette: ""
*CloseUI: *InputSlot

*OpenUI *NegativePrint/Negative Print: Boolean
*OrderDependency: 40 AnySetup *NegativePrint
*DefaultNegativePrint: False
*NegativePrint True: "1 dict dup /NegativePrint true put setpagedevice"
*NegativePrint False: "1 dict dup /NegativePrint false put setpagedevice"
*?NegativePrint: "currentpagedevice /NegativePrint get = flush"
*CloseUI: *NegativePrint

*OpenUI *MirrorPrint/Mirror Print:Boolean
*OrderDependency: 40 AnySetup *MirrorPrint
*DefaultMirrorPrint: False
*MirrorPrint True: "1 dict dup /MirrorPrint true put setpagedevice"
*MirrorPrint False: "1 dict dup /MirrorPrint false put setpagedevice"
*?MirrorPrint: "currentpagedevice /MirrorPrint get = flush"
*CloseUI: *MirrorPrint

*DefaultOutputBin:  OnlyOne
*DefaultOutputOrder:  Normal

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(001.006)" Standard Disk
*Font AvantGarde-Demi: Standard "(001.007)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(001.007)" Standard Disk
*Font Bookman-Demi: Standard "(001.004)" Standard Disk
*Font Bookman-DemiItalic: Standard "(001.004)" Standard Disk
*Font Bookman-Light: Standard "(001.004)" Standard Disk
*Font Bookman-LightItalic: Standard "(001.004)" Standard Disk
*Font Courier: Standard "(002.004)" Standard Disk
*Font Courier-Bold: Standard "(002.004)" Standard Disk
*Font Courier-BoldOblique: Standard "(002.004)" Standard Disk
*Font Courier-Oblique: Standard "(002.004)" Standard Disk
*Font Helvetica: Standard "(001.006)" Standard Disk
*Font Helvetica-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Oblique: Standard "(001.006)" Standard Disk
*Font Helvetica-Condensed: Standard "(001.003)" Standard Disk
*Font Helvetica-Condensed-Bold: Standard "(001.004)" Standard Disk
*Font Helvetica-Condensed-BoldObl: Standard "(001.004)" Standard Disk
*Font Helvetica-Condensed-Oblique: Standard "(001.003)" Standard Disk
*Font Helvetica-Narrow: Standard "(001.006)" Standard Disk
*Font Helvetica-Narrow-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Narrow-Oblique: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(001.009)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(001.007)" Standard Disk
*Font Palatino-Roman: Standard "(001.005)" Standard Disk
*Font Palatino-Bold: Standard "(001.005)" Standard Disk
*Font Palatino-BoldItalic: Standard "(001.005)" Standard Disk
*Font Palatino-Italic: Standard "(001.005)" Standard Disk
*Font Symbol: Standard "(001.007)" Standard Disk
*Font Times-Bold: Standard "(001.007)" Standard Disk
*Font Times-BoldItalic: Standard "(001.009)" Standard Disk
*Font Times-Italic: Standard "(001.007)" Standard Disk
*Font Times-Roman: Standard "(001.007)" Standard Disk
*Font ZapfChancery-MediumItalic: Standard "(001.007)" Standard Disk
*Font ZapfDingbats: Standard "(001.004)" Standard Disk

*?FontQuery: "
save
{ count 1 gt
{ exch dup 127 string cvs (/) print print (:) print
/Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
} { exit } ifelse 
} bind loop
(*) = flush
restore
"
*End
*?FontList: "
save
(*) {cvn ==} 128 string /Font resourceforall
(*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% ===== Status message List : Status (format: %%[ status: <one of these> ]%% ) =====
*Status: "initializing"
*Status: "idle"
*Status: "busy"
*Status: "printing"
*Status: "waiting"
*Status: "PrinterError:Please check an engine's message."
*Status: "PrinterError:Please unload the material."
*Status: "PrinterError:Please take out the material."
*Status: "PrinterError:Please set the material."
*Status: "PrinterError:Please unload the material, and then set new one."
*Status: "PrinterError:Please take out the material, and then set new one."
*Status: "PrinterError:Please set the larger size material."
*Status: "PrinterError:Please unload the material, and then set larger size one."
*Status: "PrinterError:Please take out the material, and then set larger size one."
*Status: "PrinterError:Please replace the material, type or size does not fits."
*Status: "PrinterError:Please unload the material, and replace one type or size fits."
*Status: "PrinterError:Please take out the material, and replace one type or size fits."
*Status: "PrinterError:The rest of material is not enough."
*Status: "PrinterError:Engine is Local Mode"
*Status: "PrinterError:PIF command error has occurred."
*Status: "PrinterError:Engine does not support this setting.   "
*Status: "PrinterError:PIF parameters are out of range."
*Status: "PrinterError:Engine is off line."
*Status: "PrinterError:Engine trouble has occurred. Please check the engine."
*Status: "PrinterError:Output processing has been canceled in the engine."
*Status: "PrinterError:Output processing has been canceled by command."
*Status: "PrinterError:Processing now, Output processing can not be available."
*Status: "PrinterError:Processer error has occurred."
*Status: "PrinterError:Handshake comunication, Image data has been lost delayed."
*Status: "PrinterError:Output of Image data can not be started (or restart)."
*Status: "PrinterError:PIF Bus handshake error has occurred."
*Status: "PrinterError:PIF response timeout error has occurred."
*Status: "PrinterError:Engine is Power-Down or disconnect."
*Status: "PrinterError:Another RIP had occupied the engine."

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "EtherTalk"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Please check an engine's message."
*PrinterError: "Please unload the material."
*PrinterError: "Please take out the material."
*PrinterError: "Please set the material."
*PrinterError: "Please unload the material, and then set new one."
*PrinterError: "Please take out the material, and then set new one."
*PrinterError: "Please set the larger size material."
*PrinterError: "Please unload the material, and then set larger size one."
*PrinterError: "Please take out the material, and then set larger size one."
*PrinterError: "Please replace the material, type or size does not fits."
*PrinterError: "Please unload the material, and replace one type or size fits."
*PrinterError: "Please take out the material, and replace one type or size fits."
*PrinterError: "The rest of material is not enough."
*PrinterError: "Engine is Local Mode"
*PrinterError: "PIF command error has occurred."
*PrinterError: "Engine does not support this setting.   "
*PrinterError: "PIF parameters are out of range."
*PrinterError: "Engine is off line."
*PrinterError: "Engine trouble has occurred. Please check the engine."
*PrinterError: "Output processing has been canceled in the engine."
*PrinterError: "Output processing has been canceled by command."
*PrinterError: "Processing now, Output processing can not be available."
*PrinterError: "Processer error has occurred."
*PrinterError: "Handshake comunication, Image data has been lost delayed."
*PrinterError: "Output of Image data can not be started (or restart)."
*PrinterError: "PIF Bus handshake error has occurred."
*PrinterError: "PIF response timeout error has occurred."
*PrinterError: "Engine is Power-Down or disconnect."
*PrinterError: "Another RIP had occupied the engine."

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% end of PPD file for SCREEN FT-R3050AM

