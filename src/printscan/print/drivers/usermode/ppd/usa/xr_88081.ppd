*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.2"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "XR_88081.PPD"
*Product: "(Xerox 8808)"
*PSVersion: "(2015.105) 22"
*ModelName: "Xerox 8808 PostScript"
*NickName: "Xerox 8808 PostScript"

*% ===== Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *InstalledMemory: PickOne
*DefaultInstalledMemory: 24Meg
*InstalledMemory 24Meg/24 MB Memory: ""
*CloseUI: *InstalledMemory

*OpenUI *Option1/Bottom Tray: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*OpenUI *Option2/Ethernet Card: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *Option3/Media Size Group: PickOne
*DefaultOption3: ANSI
*Option3 ANSI: ""
*Option3 ISO: ""
*CloseUI: *Option3
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Lower

*UIConstraints: *Option3 ANSI *PageSize A4
*UIConstraints: *Option3 ANSI *PageSize A5
*UIConstraints: *Option3 ANSI *PageSize B5
*UIConstraints: *Option3 ANSI *PageRegion A4
*UIConstraints: *Option3 ANSI *PageRegion A5
*UIConstraints: *Option3 ANSI *PageRegion B5

*UIConstraints: *Option3 ISO *PageSize Letter
*UIConstraints: *Option3 ISO *PageSize Statement
*UIConstraints: *Option3 ISO *PageSize Executive
*UIConstraints: *Option3 ISO *PageRegion Letter
*UIConstraints: *Option3 ISO *PageRegion Statement
*UIConstraints: *Option3 ISO *PageRegion Executive

*% ===== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP PJL
*FreeVM: "6385048"
*VMOption 24Meg: "6385048"
*ColorDevice: False
*DefaultColorSpace: Gray
*VariablePaperSize: False
*FileSystem: False
*TTRasterizer: Type42
*Emulators: hplj
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec"
*StopEmulator_hplj: "<1B7F>0"
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "0"

*JCLBegin: "<1B>%-12345X@PJL Job<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE = POSTSCRIPT <0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*PrintPSErrors: True
*Throughput: "8"
*Password: "()"
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End

*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not {
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*OpenUI *Resolution:  PickOne
*OrderDependency: 20 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 600dpi: "1 dict dup /HWResolution [600 600] put setpagedevice"
*Resolution 800dpi: "1 dict dup /HWResolution [800 800] put setpagedevice"
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End
*CloseUI: *Resolution

*% Halftone Information ===============
*ScreenFreq: "85.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1
exch sub }"
*End
*ResScreenFreq 600dpi: "85.0"
*ResScreenAngle 600dpi: "45.0"
*ResScreenFreq 800dpi: "100.0"
*ResScreenAngle 800dpi: "45.0"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*LandscapeOrientation: Any

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal13: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 936] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal14: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 1008] put dup /ImagingBBox null put
setpagedevice"
*End
*PageSize Ledger: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [792 1224] put dup /ImagingBBox null put
setpagedevice"
*End
*PageSize A3: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [842 1191] put dup /ImagingBBox null put
setpagedevice"
*End
*PageSize A4: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A5: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize B4: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [728 1032] put dup /ImagingBBox null put
setpagedevice"
*End
*PageSize B5: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [516 728] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Postcard: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [283 420] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Statement: "
   5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Executive: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize COM10/COM10 Envelope: "
   5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize DL/DL Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize C5/C5 Envelope: "
   5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Monarch/Monarch Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if
   (Unknown)
  17 dict
   dup [612 792] (Letter) put
   dup [612 936] (Legal13) put
   dup [612 1008] (Legal14) put
   dup [792 1224] (Ledger) put
   dup [842 1191] (A3) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [728 1032] (B4) put
   dup [516 728] (B5) put
   dup [283 420] (Postcard) put
   dup [396 612] (Statement) put
   dup [522 756] (Executive) put
   dup [297 684] (COM10) put
   dup [312 624] (DL) put
   dup [459 649] (C5) put
   dup [279 540] (Monarch) put
 { exch aload pop 4 index sub abs 5 le exch
   5 index sub abs 5 le and
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal13: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 936] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal14: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [612 1008] put dup /ImagingBBox null put
setpagedevice"
*End
*PageRegion Ledger: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [792 1224] put dup /ImagingBBox null put
setpagedevice"
*End
*PageRegion A3: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [842 1191] put dup /ImagingBBox null put
setpagedevice"
*End
*PageRegion A4: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A5: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion B4: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [728 1032] put dup /ImagingBBox null put
setpagedevice"
*End
*PageRegion B5: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [516 728] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Postcard: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [283 420] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Statement: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [396 612] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Executive: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [522 756] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion COM10/COM10 Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [297 684] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion DL/DL Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [312 624] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion C5/C5 Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [459 649] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Monarch/Monarch Envelope: "
    5 dict dup /Policies 1 dict dup /PageSize 2 put put dup /PageSize [279 540] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "11.34 11.34 600.66 780.66 "
*ImageableArea Legal13: "11.34 11.34 600.66 924.66 "
*ImageableArea Legal14: "11.34 11.34 600.66 996.66 "
*ImageableArea Ledger: "11.34 11.34 780.66 1212.66 "
*ImageableArea A3: "11.34 11.34 830.66 1179.6612.33 "
*ImageableArea A4: "11.34 11.34 583.66 830.6612.33 "
*ImageableArea A5: "11.34 11.34 410.66 583.6612.375 "
*ImageableArea B4: "11.34 11.34 716.66 1020.6612.33 "
*ImageableArea B5: "11.34 11.34 504.66 716.6612.375 "
*ImageableArea Postcard: "11.34 11.34 271.66 408.66 "
*ImageableArea Statement: "11.34 11.34 384.66 600.66 "
*ImageableArea Executive: "11.34 11.34 510.66 744.66 "
*ImageableArea COM10/COM10 Envelope: "11.34 11.34 285.66 672.66 "
*ImageableArea DL/DL Envelope: "11.34 11.34 300.66 612.6612.33 "
*ImageableArea C5/C5 Envelope: "11.34 11.34 447.66 637.6612.33 "
*ImageableArea Monarch/Monarch Envelope: "11.34 11.34 267.66 528.66 "
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Legal13: "612 936"
*PaperDimension Legal14: "612 1008"
*PaperDimension Ledger: "792 1224"
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension A5: "420 595"
*PaperDimension B4: "728 1032"
*PaperDimension B5: "516 728"
*PaperDimension Postcard: "283 420"
*PaperDimension Statement: "396 612"
*PaperDimension Executive: "522 756"
*PaperDimension COM10/COM10 Envelope: "297 684"
*PaperDimension DL/DL Envelope: "312 624"
*PaperDimension C5/C5 Envelope: "459 649"
*PaperDimension Monarch/Monarch Envelope: "279 540"

*RequiresPageRegion All: False

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/Top: "
  currentpagedevice /InputAttributes get 0 get
  dup null eq
  { pop }
  { dup length 1 add dict copy
   dup /InputAttributes
    1 dict dup /Priority [0] put
    put setpagedevice
 } ifelse"
*End
*InputSlot Lower/Bottom: "
  currentpagedevice /InputAttributes get
  { 2 get } stopped
  { pop pop /bottom 1 def } { pop /bottom 2 def } ifelse
  currentpagedevice /InputAttributes get bottom get
  dup null eq
  { pop }
  { dup length 1 add dict copy
    dup /InputAttributes
    1 dict dup /Priority [1] put
    put setpagedevice
  } ifelse"
*End
*?InputSlot: "
save
  2 dict
  dup /0 (Upper) put
  dup /1 (Lower) put
  currentpagedevice /InputAttributes get
 dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*DefaultOutputBin: Upper/Top
*DefaultOutputOrder: Normal
*PageStackOrder Upper/Top: Normal
*PageStackOrder Lower/Bottom: Reverse

*OpenUI *ManualFeed:  Boolean
*OrderDependency: 20 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed get
    {(True)}{(False)}ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
     } { exit } ifelse
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
 (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"
*Message: "%%[ Waiting for Ledger tray ]%%"
*Message: "%%[ Waiting for A3 tray ]%%"
*Message: "%%[ Waiting for Portrait A4 tray ]%%"
*Message: "%%[ Waiting for Landscape A4 tray ]%%"
*Message: "%%[ Waiting for Portrait A tray ]%%"
*Message: "%%[ Waiting for Landscape A tray ]%%"
*Message: "%%[ Waiting for Legal tray ]%%"
*Message: "%%[ Tray change timeout ]%%"
*Message: "%%[ Ledger tray installed ]%%"
*Message: "%%[ A3 tray installed ]%%"
*Message: "%%[ Portrait A4 tray installed ]%%"
*Message: "%%[ Landscape A4 tray installed ]%%"
*Message: "%%[ Portrait A tray installed ]%%"
*Message: "%%[ Landscape A tray installed ]%%"
*Message: "%%[ Legal tray installed ]%%"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "initializing"
*Status: "holding"
*Status: "PrinterError: Fuser Warming Up"
*Status: "PrinterError: E0 Media Tray Clear Misfeed"
*Status: "PrinterError: E1 Top Tray Clear Misfeed"
*Status: "PrinterError: E6 Manual Path Clear Misfeed"
*Status: "PrinterError: E3 Bottom Tray Clear Misfeed"
*Status: "PrinterError: E4 Exit Path Clear Misfeed"
*Status: "PrinterError: E5 Media Path Clear Misfeed"
*Status: "PrinterError: C8 Registration? Check Plot"
*Status: "PrinterError: C0 Insert Tray"
*Status: "PrinterError: C1 Insert Top Tray"
*Status: "PrinterError: C2 Insert Middle Tray"
*Status: "PrinterError: C3 Insert Bottom Tray"
*Status: "PrinterError: C4 Tray Empty"
*Status: "PrinterError: C5 Top Tray Empty"
*Status: "PrinterError: C6 Middle Tray Empty"
*Status: "PrinterError: C7 Bottom Tray Empty"
*Status: "PrinterError: E7 Cover Open Close Cover"
*Status: "PrinterError: Replace EP Cartridge"
*Status: "PrinterError: J1 Replace EP Cartridge"
*Status: "PrinterError: U1 Motor Failure Call Service"
*Status: "PrinterError: U2 ROS Failure Call Service"
*Status: "PrinterError: U3 Fuser Failure Call Service"
*Status: "PrinterError: U0 NVM Error Call Service"
*Status: "PrinterError: C11 Wrong Tray"
*Status: "PrinterError: Open Covers Clear Media Jam"
*Status: "PrinterError: U5 Fan Failure Call Service"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "EtherNet"
*Source: "Parallel"
*Source: "Serial"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Fuser Warming Up"
*PrinterError: "E0 Media Tray Clear Misfeed"
*PrinterError: "E1 Top Tray Clear Misfeed"
*PrinterError: "E6 Manual Path Clear Misfeed"
*PrinterError: "E3 Bottom Tray Clear Misfeed"
*PrinterError: "E4 Exit Path Clear Misfeed"
*PrinterError: "E5 Media Path Clear Misfeed"
*PrinterError: "C8 Registration? Check Plot"
*PrinterError: "C0 Insert Tray"
*PrinterError: "C1 Insert Top Tray"
*PrinterError: "C2 Insert Middle Tray"
*PrinterError: "C3 Insert Bottom Tray"
*PrinterError: "C4 Tray Empty"
*PrinterError: "C5 Top Tray Empty"
*PrinterError: "C6 Middle Tray Empty"
*PrinterError: "C7 Bottom Tray Empty"
*PrinterError: "E7 Cover Open Close Cover"
*PrinterError: "Replace EP Cartridge"
*PrinterError: "J1 Replace EP Cartridge"
*PrinterError: "U1 Motor Failure Call Service"
*PrinterError: "U2 ROS Failure Call Service"
*PrinterError: "U3 Fuser Failure Call Service"
*PrinterError: "U0 NVM Error Call Service"
*PrinterError: "C11 Wrong Tray"
*PrinterError: "Open Covers Clear Media Jam"
*PrinterError: "U5 Fan Failure Call Service"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*% For 85 lpi / 600 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "45.0"

*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "85.0"
*ColorSepScreenFreq CustomColor.85lpi.600dpi/85 lpi / 600 dpi: "85.0"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "85.0"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "85.0"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "85.0"

*% For 100 lpi / 800 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.100lpi.800dpi/100 lpi / 800 dpi: "45.0"
*ColorSepScreenAngle CustomColor.100lpi.800dpi/100 lpi / 800 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.100lpi.800dpi/100 lpi / 800 dpi: "45.0"
*ColorSepScreenAngle ProcessMagenta.100lpi.800dpi/100 lpi / 800 dpi: "45.0"
*ColorSepScreenAngle ProcessYellow.100lpi.800dpi/100 lpi / 800 dpi: "45.0"

*ColorSepScreenFreq ProcessBlack.100lpi.800dpi/100 lpi / 800 dpi: "100.0"
*ColorSepScreenFreq CustomColor.100lpi.800dpi/100 lpi / 800 dpi: "100.0"
*ColorSepScreenFreq ProcessCyan.100lpi.800dpi/100 lpi / 800 dpi: "100.0"
*ColorSepScreenFreq ProcessMagenta.100lpi.800dpi/100 lpi / 800 dpi: "100.0"
*ColorSepScreenFreq ProcessYellow.100lpi.800dpi/100 lpi / 800 dpi: "100.0"

*% Produced by "bldppd42.ps" version 4.2 edit 16
*% Last Edit Date: Aug 14 1995
*% The byte count of this file should be exactly 021861 or 022461
*% depending on the filesystem it resides in.
*% end of PPD file for Xerox 8808
