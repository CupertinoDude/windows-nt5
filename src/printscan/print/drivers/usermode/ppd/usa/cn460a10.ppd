*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1993-94 Electronics for Imaging, Inc. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% Created for Tango P340 Printer
*%EFFileVersion: 2.0
*%EF1File, EFLEPPD

*FormatVersion: "4.3"
*FileVersion: "1.0"
*PCFileName: "CN460A10.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(C LBP 460PS)"
*PSVersion: "(3010.104) 1"
*ModelName: "Canon C LBP 460PS v3010.104"
*ShortNickName: "Canon C LBP 460PS"
*NickName: "Canon C LBP 460PS"
*Manufacturer: "Canon"
*% rmk submitted 7/21/98

*% Protocol test
*%Protocols: BCP TBCP
*% ===================================
*% Emulations and Protocols
*% ===================================
*Protocols:             PJL TBCP
*JCLBegin:              "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter:    "@PJL ENTER LANGUAGE = POSTSCRIPT <0A>"
*JCLEnd:                "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*% ========= EFIFlags =========

*%EFIGroupName DesktopOutput/Output :True
*%EFIGroupName DesktopOptions/Options :True
*%EFIGroupName Image/Printer Image :True

*% ===================================
*% Installable Options
*% ===================================
*OpenGroup: InstallableOptions/Options Installed

*%EFIFlags *EFDuplexOption DesktopOptions
*%EFIGroup *EFDuplexOption DesktopOptions/Options
*OpenUI *EFDuplexOption/Duplex Unit: Boolean
*DefaultEFDuplexOption: False
*EFDuplexOption True/Installed: ""
*EFDuplexOption False/Not Installed: ""
*?EFDuplexOption: "
  save
	FieryXJdict /getfierysysdict known 
       	{(%%OPT_DUPLEXER) FieryXJdict /getfierysysdict get exec }
        { (False) } 
        ifelse
        = flush 
  restore"
*End
*CloseUI: *EFDuplexOption

*%EFIFlags *EFOptionCassette DesktopOptions
*%EFIGroup *EFOptionCassette DesktopOptions/Options
*OpenUI *EFOptionCassette/Cassette 2: Boolean
*DefaultEFOptionCassette: False
*EFOptionCassette True/Installed:                ""
*EFOptionCassette False/Not Installed:   ""
*?EFOptionCassette: "
  save
	FieryXJdict /getfierysysdict known 
       	{(%%OPT_CASS) FieryXJdict /getfierysysdict get exec }
        { (False) } 
        ifelse
        = flush 
  restore"
*End
*CloseUI: *EFOptionCassette

*%EFIFlags *EFOptionDisk DesktopOptions
*%EFIGroup *EFOptionDisk DesktopOptions/Options
*OpenUI *EFOptionDisk/Hard Disk: Boolean
*DefaultEFOptionDisk: False
*EFOptionDisk True/Installed:                ""
*EFOptionDisk False/Not Installed:   ""
*?EFOptionDisk: "
  save
	FieryXJdict /getfierysysdict known 
       	{(%%OPT_DISK) FieryXJdict /getfierysysdict get exec }
        { (False) } 
        ifelse
        = flush 
  restore"
*End
*CloseUI: *EFOptionDisk

*OpenUI *InstalledMemory/Printer Memory: PickOne
*DefaultInstalledMemory: 32MB
*InstalledMemory 32MB/32: ""
*InstalledMemory 48MB/48: ""
*InstalledMemory 64MB/64: ""
*InstalledMemory 80MB/80: ""
*InstalledMemory 96MB/96: ""
*InstalledMemory 112MB/112: ""
*InstalledMemory 128MB/128: ""
*InstalledMemory 144MB/144: ""
*InstalledMemory 160MB/160: ""
*InstalledMemory 192MB/192: ""
*?InstalledMemory: " 
  save
	FieryXJdict /getfierysysdict known 
       	{(%%OPT_MEM) FieryXJdict /getfierysysdict get exec }
        { (32MB) } 
        ifelse
        = flush 
  restore
"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*% === Options and Constraints =========
*% == Contraints based on Installable options.


*% If optional cassette is not installed, disable access to  Tray3
*UIConstraints: *EFOptionCassette False *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *EFOptionCassette False

*% If optional Duplexer is not installed, disable access to Duplex
*UIConstraints: *EFDuplexOption False *Duplex
*UIConstraints: *EFDuplexOption False *Duplex DuplexTumble
*UIConstraints: *EFDuplexOption False *Duplex DuplexNoTumble

*UIConstraints: *Duplex *EFDuplexOption False
*UIConstraints: *Duplex DuplexTumble   *EFDuplexOption False
*UIConstraints: *Duplex DuplexNoTumble *EFDuplexOption False

*% Contraints between the various UI's

*% Cannot have CRDTexts and gray
*UIConstraints: *ColorModel Gray *EFColorCRDText Presentation
*UIConstraints: *ColorModel Gray *EFColorCRDText Photographic
*UIConstraints: *ColorModel Gray *EFColorCRDText OHT 

*UIConstraints: *EFColorCRDText Presentation *ColorModel Gray
*UIConstraints: *EFColorCRDText Photographic *ColorModel Gray
*UIConstraints: *EFColorCRDText OHT      *ColorModel Gray


*% Cannot have CRDGraphics and gray
*UIConstraints: *ColorModel Gray *EFColorCRDGraphics Presentation
*UIConstraints: *ColorModel Gray *EFColorCRDGraphics Photographic
*UIConstraints: *ColorModel Gray *EFColorCRDGraphics OHT 

*UIConstraints: *EFColorCRDGraphics Presentation *ColorModel Gray
*UIConstraints: *EFColorCRDGraphics Photographic *ColorModel Gray
*UIConstraints: *EFColorCRDGraphics OHT      *ColorModel Gray

*% cannot have CRDImages and gray
*UIConstraints: *ColorModel Gray *EFColorCRDImages Presentation
*UIConstraints: *ColorModel Gray *EFColorCRDImages Photographic
*UIConstraints: *ColorModel Gray *EFColorCRDImages OHT 

*UIConstraints: *EFColorCRDImages Presentation *ColorModel Gray
*UIConstraints: *EFColorCRDImages Photographic *ColorModel Gray
*UIConstraints: *EFColorCRDImages OHT      *ColorModel Gray


*% Paper size input slot constraints
*% These papers can only come in via the manual tray Tray 1

*% Env10/InputSlot - also known as Com10 (Comm10)
*UIConstraints: *PageSize Env10 *InputSlot Tray2
*UIConstraints: *PageSize Env10 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageSize Env10
*UIConstraints: *InputSlot Tray3 *PageSize Env10


*% EnvMonarch/InputSlot
*UIConstraints: *PageSize EnvMonarch *InputSlot Tray2
*UIConstraints: *PageSize EnvMonarch *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageSize EnvMonarch
*UIConstraints: *InputSlot Tray3 *PageSize EnvMonarch

*% EnvISOB5/InputSlot
*UIConstraints: *PageSize EnvISOB5 *InputSlot Tray2
*UIConstraints: *PageSize EnvISOB5 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageSize EnvISOB5
*UIConstraints: *InputSlot Tray3 *PageSize EnvISOB5

*% EnvDL/InputSlot
*UIConstraints: *PageSize EnvDL *InputSlot Tray2
*UIConstraints: *PageSize EnvDL *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageSize EnvDL
*UIConstraints: *InputSlot Tray3 *PageSize EnvDL

*% EnvC5/InputSlot
*UIConstraints: *PageSize EnvC5 *InputSlot Tray2
*UIConstraints: *PageSize EnvC5 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageSize EnvC5
*UIConstraints: *InputSlot Tray3 *PageSize EnvC5


*% Corresponding PageRegion contraints:


*% Env10/InputSlot
*UIConstraints: *PageRegion Env10 *InputSlot Tray2
*UIConstraints: *PageRegion Env10 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageRegion Env10
*UIConstraints: *InputSlot Tray3 *PageRegion Env10

*% EnvMonarch /InputSlot
*UIConstraints: *PageRegion EnvMonarch *InputSlot Tray2
*UIConstraints: *PageRegion EnvMonarch *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageRegion EnvMonarch
*UIConstraints: *InputSlot Tray3 *PageRegion EnvMonarch

*% EnvISOB5/InputSlot
*UIConstraints: *PageRegion EnvISOB5 *InputSlot Tray2
*UIConstraints: *PageRegion EnvISOB5 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageRegion EnvISOB5
*UIConstraints: *InputSlot Tray3 *PageRegion EnvISOB5

*% EnvDL/InputSlot
*UIConstraints: *PageRegion EnvDL *InputSlot Tray2
*UIConstraints: *PageRegion EnvDL *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageRegion EnvDL
*UIConstraints: *InputSlot Tray3 *PageRegion EnvDL

*% EnvC5/InputSlot
*UIConstraints: *PageRegion EnvC5 *InputSlot Tray2
*UIConstraints: *PageRegion EnvC5 *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *PageRegion EnvC5
*UIConstraints: *InputSlot Tray3 *PageRegion EnvC5

*% Media constraints
*% tray and media constraints: 
*UIConstraints: *MediaType Labels *InputSlot Tray2
*UIConstraints: *MediaType Labels *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *MediaType Labels
*UIConstraints: *InputSlot Tray3 *MediaType Labels

*UIConstraints: *MediaType Glossy *InputSlot Tray2
*UIConstraints: *MediaType Glossy *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *MediaType Glossy
*UIConstraints: *InputSlot Tray3 *MediaType Glossy

*UIConstraints: *MediaType HeavyMedia *InputSlot Tray2
*UIConstraints: *MediaType HeavyMedia *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *MediaType HeavyMedia
*UIConstraints: *InputSlot Tray3 *MediaType HeavyMedia

*UIConstraints: *MediaType Transparent *InputSlot Tray2
*UIConstraints: *MediaType Transparent *InputSlot Tray3
*UIConstraints: *InputSlot Tray2 *MediaType Transparent
*UIConstraints: *InputSlot Tray3 *MediaType Transparent

*%==========================================
*% Duplexing & Media Type constraints 
*%==========================================

*% no duplexing transparency
*UIConstraints: *MediaType Transparent *Duplex DuplexTumble
*UIConstraints: *MediaType Transparent *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexTumble *MediaType Transparent 
*UIConstraints: *Duplex DuplexNoTumble *MediaType Transparent 

*UIConstraints: *MediaType HeavyMedia *Duplex DuplexTumble
*UIConstraints: *MediaType HeavyMedia *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexTumble  *MediaType HeavyMedia 
*UIConstraints: *Duplex DuplexNoTumble *MediaType HeavyMedia 

*UIConstraints: *MediaType Labels *Duplex DuplexTumble
*UIConstraints: *MediaType Labels *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexTumble  *MediaType Labels 
*UIConstraints: *Duplex DuplexNoTumble *MediaType Labels 

*%==========================================
*% Disk and Job option constraints 
*%==========================================
*% No Collate or Check & Print functionality without Disk

*UIConstraints: *EFOptionDisk False *Collate True
*UIConstraints: *Collate True *EFOptionDisk False 

*UIConstraints: *EFOptionDisk False *EFCheckPrint True
*UIConstraints: *EFCheckPrint True *EFOptionDisk False 

*% No Collate or Check & Print together
*UIConstraints: *Collate True *EFCheckPrint True
*UIConstraints: *EFCheckPrint True *Collate True


*%==========================================
*%  CustomPageSize/InputSlot
*%==========================================
*NonUIConstraints:*CustomPageSize True *InputSlot Tray2
*NonUIConstraints:*CustomPageSize True *InputSlot Tray3
*NonUIConstraints:*InputSlot Tray2 *CustomPageSize True
*NonUIConstraints:*InputSlot Tray3 *CustomPageSize True


*% General Information and Defaults ===============
*FreeVM: "33554432"
*VMOption 32MB: "33554432"
*VMOption 48MB: "50331648"
*VMOption 64MB: "67108864"
*VMOption 80MB: "83886080"
*VMOption 96MB: "100663296"
*VMOption 112MB: "117440512"
*VMOption 128MB: "134217728"
*VMOption 144MB: "150994844"
*VMOption 160MB: "167772160"
*VMOption 192MB: "201326592"
*%FCacheSize None: 1048576

*Source: "EtherTalk"
*Source: "Parallel"
*Source: "TCP/IP"
*Source: "Novell IPX"
*Source: "Windows SMB"

*%--- System Management

*LanguageLevel: "3"
*ColorDevice: True
*ContoneOnly: True
*DefaultColorSpace: CMYK
*TTRasterizer: Type42
*RenderingIntent: Colorimetric

*FileSystem: True
*?FileSystem: "
    save
      statusdict /diskstatus known{(True)} {(False)} ifelse = flush
    restore
    "
*End
*Throughput: "10"
*Password: "0"
*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   systemdict /quit get exec
   (WARNING: Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 600dpi
*?Resolution: "
    save
      initgraphics
      0 0 moveto currentpoint matrix defaultmatrix transform
      0 72 lineto currentpoint matrix defaultmatrix transform
      3 -1 roll sub dup mul
      3 1 roll exch sub dup mul
      add sqrt round cvi
      (          ) cvs print (dpi) = flush
    restore
    "
*End

*AccurateScreensSupport: True
*ScreenFreq: "200"
*ScreenAngle: "90"

*%EFIFlags *ColorModel
*%EFIGroup *ColorModel ColorWise/ColorWise
*OpenUI *ColorModel/Color Mode: PickOne
*OrderDependency: 15 AnySetup *ColorModel
*DefaultColorModel: CMYK
*ColorModel CMYK/CMYK: "
        << /ProcessColorModel /DeviceCMYK >> setpagedevice "
*End
*ColorModel Gray/Grayscale: " 
        << /ProcessColorModel /DeviceGray >> setpagedevice "
*End
*?ColorModel: " currentpagedevice /ProcessColorModel get ==  if "
*CloseUI: *ColorModel

*% ===================================
*% Duplexer definitions
*% ===================================

*%EFIFlags *Duplex DesktopOutput
*%EFIGroup *Duplex DesktopOutput/Output
*OpenUI *Duplex/Duplex: PickOne
*OrderDependency: 20 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/Simplex: "
         <</Duplex false>> setpagedevice << /Tumble false >> setpagedevice "
*End 
*Duplex DuplexTumble/Duplex (Top-Bottom): "
         <</Duplex true>> setpagedevice  << /Tumble true >> setpagedevice "
*End 
*Duplex DuplexNoTumble/Duplex (Top-Top): " 
        <</Duplex true>> setpagedevice "
*End 
*CloseUI: *Duplex


*% ===================================
*% EFI Color Stuff
*% ===================================

*%EFIFlags *EFColorCRDText ColorWise
*%EFIGroup *EFColorCRDText ColorWise/ColorWise
*OpenUI *EFColorCRDText/Color CRD Text: PickOne
*OrderDependency: 20 AnySetup *EFColorCRDText
*DefaultEFColorCRDText: Presentation
*EFColorCRDText None/None: ""
*EFColorCRDText Photographic/Photographic: "
        FieryXJdict /XJDefineTextCRD known
        {
            /Photographic FieryXJdict /XJDefineTextCRD get exec 
        } if"
*End
*EFColorCRDText Presentation/Presentation: "
        FieryXJdict /XJDefineTextCRD known
        {
            /Presentation FieryXJdict /XJDefineTextCRD get exec 
        } if"
*End
*EFColorCRDText OHT/Transparency: "
        FieryXJdict /XJDefineTextCRD known
        {
            /OHT FieryXJdict /XJDefineTextCRD get exec 
        } if"
*End
*CloseUI: *EFColorCRDText


*%EFIFlags *EFColorCRDGraphics ColorWise
*%EFIGroup *EFColorCRDGraphics ColorWise/ColorWise
*OpenUI *EFColorCRDGraphics/Color CRD Graphics: PickOne
*OrderDependency: 20 AnySetup *EFColorCRDGraphics
*DefaultEFColorCRDGraphics: Presentation
*EFColorCRDGraphics None/None: ""
*EFColorCRDGraphics Photographic/Photographic: "
        FieryXJdict /XJDefineGraphicsCRD known
        {
            /Photographic FieryXJdict /XJDefineGraphicsCRD get exec 
        } if"
*End
*EFColorCRDGraphics Presentation/Presentation: "
        FieryXJdict /XJDefineGraphicsCRD known
        {
            /Presentation FieryXJdict /XJDefineGraphicsCRD get exec 
        } if"
*End
*EFColorCRDGraphics OHT/Transparency: "
        FieryXJdict /XJDefineGraphicsCRD known
        {
            /OHT FieryXJdict /XJDefineGraphicsCRD get exec 
        } if"
*End
*CloseUI: *EFColorCRDGraphics


*%EFIFlags *EFColorCRDImages ColorWise
*%EFIGroup *EFColorCRDImages ColorWise/ColorWise
*OpenUI *EFColorCRDImages/Color CRD Images: PickOne
*OrderDependency: 20 AnySetup *EFColorCRDImages
*DefaultEFColorCRDImages: Photographic
*EFColorCRDImages None/None: ""
*EFColorCRDImages Photographic/Photographic: "
        FieryXJdict /XJDefineImagesCRD known
        {
            /Photographic FieryXJdict /XJDefineImagesCRD get exec 
        } if"
*End
*EFColorCRDImages Presentation/Presentation: "
        FieryXJdict /XJDefineImagesCRD known
        {
            /Presentation FieryXJdict /XJDefineImagesCRD get exec 
        } if"
*End
*EFColorCRDImages OHT/Transparency: "
        FieryXJdict /XJDefineImagesCRD known
        {
            /OHT FieryXJdict /XJDefineImagesCRD get exec 
        } if"
*End
*CloseUI: *EFColorCRDImages

*%EFIFlags *EFBrightness ColorWise
*%EFIGroup *EFBrightness ColorWise/ColorWise
*OpenUI *EFBrightness/Brightness: PickOne
*OrderDependency: 55.0 AnySetup *EFBrightness
*DefaultEFBrightness: 00.00
*EFBrightness +0.24/85%  Lightest: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLightestColAdj known {
           userdict /EFIColordict get /SetLightestColAdj get exec
        } if } if "
*End
*EFBrightness +0.16/90%  Lighter:       " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLighterColAdj known {
           userdict /EFIColordict get /SetLighterColAdj get exec
        } if } if "
*End
*EFBrightness +0.08/95%  Light:         " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLightColAdj known {
           userdict /EFIColordict get /SetLightColAdj get exec
        } if } if "
*End
*EFBrightness 00.00/100% Normal:        ""
*EFBrightness -0.08/105% Dark:  " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkColAdj known {
           userdict /EFIColordict get /SetDarkColAdj get exec
        } if } if "
*End
*EFBrightness -0.16/110% Darker:        " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkerColAdj known {
           userdict /EFIColordict get /SetDarkerColAdj get exec
        } if } if "
*End
*EFBrightness -0.24/115% Darkest:       " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkestColAdj known {
           userdict /EFIColordict get /SetDarkestColAdj get exec
        } if } if "
*End
*CloseUI: *EFBrightness


*%EFIFlags *EFRGBOverride ColorWise
*%EFIGroup *EFRGBOverride ColorWise/ColorWise
*OpenUI *EFRGBOverride/RGB Source: PickOne
*OrderDependency: 63.75 AnySetup *EFRGBOverride
*DefaultEFRGBOverride: sRGB
*EFRGBOverride EFIRGB/EFIRGB: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (EFIRGB) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride sRGB/sRGB (PC): " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (SRGB) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride Apple13/Apple Standard: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (APPLE13) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride Off/None: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           null userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*CloseUI: *EFRGBOverride

*%EFIFlags *EFSimulation ColorWise
*%EFIGroup *EFSimulation ColorWise/ColorWise
*OpenUI *EFSimulation/CMYK Simulation: PickOne
*OrderDependency: 60.0 AnySetup *EFSimulation
*DefaultEFSimulation: None
*EFSimulation SWOP/SWOP-Coated: " 
userdict /EFIColordict known { 
        userdict /EFIColordict get /SetSlowSimulSpeed known {
           userdict /EFIColordict get /SetSlowSimulSpeed get exec
        } if } if
userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimul known {
           (SWOP-Coated) userdict /EFIColordict get /SetCMYKSimul get exec
        } if } if "
*End
*EFSimulation DIC/DIC: " 
userdict /EFIColordict known { 
        userdict /EFIColordict get /SetSlowSimulSpeed known {
           userdict /EFIColordict get /SetSlowSimulSpeed get exec
        } if } if
userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimul known {
           (DIC) userdict /EFIColordict get /SetCMYKSimul get exec
        } if } if "
*End
*EFSimulation Euroscale/Euroscale: " 
userdict /EFIColordict known { 
        userdict /EFIColordict get /SetSlowSimulSpeed known {
           userdict /EFIColordict get /SetSlowSimulSpeed get exec
        } if } if
userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimul known {
           (Euroscale) userdict /EFIColordict get /SetCMYKSimul get exec
        } if } if "
*End
*EFSimulation None/None: " 
userdict /EFIColordict known { 
        userdict /EFIColordict get /SetFastSimulSpeed known {
           userdict /EFIColordict get /SetFastSimulSpeed get exec
        } if } if 
userdict /EFIColordict known { 
        userdict /EFIColordict get /SetCMYKSimul known {
           (.None) userdict /EFIColordict get /SetCMYKSimul get exec
        } if } if "
*End
*CloseUI: *EFSimulation


*% ===================================
*% Mediatype definitions
*% ===================================

*OpenUI *MediaType/Media Type : PickOne
*OrderDependency: 50 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper: " 
        (printerinfo mediatype PLAIN) =string 
            FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*MediaType Transparent/Transparencies: " 
        (printerinfo mediatype TRANSPARENCY) =string 
    FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*MediaType Labels/Labels: " 
        (printerinfo mediatype LABELS) =string 
    FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*MediaType HeavyMedia/Heavy Paper: " 
        (printerinfo mediatype HEAVY) =string 
    FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*MediaType Glossy/Glossy Films: " 
        (printerinfo mediatype GLOSSY) =string 
    FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*CloseUI: *MediaType



*% ================================================
*% Collate: driver UI only
*% ================================================

*%EFIFlags *EFCollate DesktopOutput
*%EFIGroup *EFCollate  DesktopOutput/Output
*%Modified by Microsoft to *Collate
*%OpenUI *EFCollate/Electronic Collation: Boolean
*%OrderDependency: 35 AnySetup *EFCollate
*%DefaultEFCollate: False
*%EFCollate True/Yes: "(printerinfo proofnprint mopy) =string FieryXJdict /ExtCmdGetExec get *%exec {pop} if "
*%EFCollate False/No: ""
*%CloseUI: *EFCollate

*OpenUI *Collate/Electronic Collation : Boolean
*OrderDependency: 35 AnySetup *Collate
*DefaultCollate: False
*Collate True/Yes: "(printerinfo proofnprint mopy) =string FieryXJdict /ExtCmdGetExec get exec {pop} if "
*FCollate False/No: ""
*CloseUI: *Collate

*%EFIFlags *EFCheckPrint DesktopOutput
*%EFIGroup *EFCheckPrint  DesktopOutput/Output
*OpenUI *EFCheckPrint/Check and Print: Boolean
*OrderDependency: 50 AnySetup *EFCheckPrint
*DefaultEFCheckPrint: False
*EFCheckPrint True/Yes: " (printerinfo proofnprint on) =string FieryXJdict /ExtCmdGetExec get exec {pop} if "
*EFCheckPrint False/No: ""
*CloseUI: *EFCheckPrint


*% ================================================
*% Paper source 
*% ================================================

*OpenUI *InputSlot/Paper Source: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: AutoSelect
*InputSlot AutoSelect/AutoSelect: ""
*InputSlot Tray1/MP Tray: "(printerinfo trayselect MP_TRAY) =string  
        FieryXJdict /ExtCmdGetExec get exec {pop} if "
*End
*InputSlot Tray2/Cassette 1: "(printerinfo trayselect MAIN_CASS) =string  
        FieryXJdict /ExtCmdGetExec get exec {pop} if"
*End
*InputSlot Tray3/Cassette 2: "(printerinfo trayselect OPTIONAL_CASS) =string  
        FieryXJdict /ExtCmdGetExec get exec {pop} if"
*End
*CloseUI: *InputSlot

*DefaultOutputOrder: Reverse

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Black substitution is always on.
*DefaultBlackSubstitution: True
*BlackSubstitution True: ""

*% Custom Page Sizes ===================
*% min: 3.0w x 5.0h
*% max:8.5w x 14.0h
*MaxMediaWidth: "612"
*MaxMediaHeight: "1008"
*HWMargins: 12 12 12 12
*ParamCustomPageSize Width:  1 points 216 612
*ParamCustomPageSize Height: 2 points 360 1008
*ParamCustomPageSize WidthOffset: 3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*% Need to define Orientation correctly 
*ParamCustomPageSize Orientation: 5 int 0 3

*CenterRegistered: False
*LeadingEdge Short: ""
*DefaultLeadingEdge: Short
*NonUIConstraints: *InputSlot Tray1 *LeadingEdge Short
*CustomPageSize True: "
        4 dict begin /Orientation exch def pop pop
        2 array astore /PageSize exch def
        /ImagingBBox null def /MediaType (ShortEdgeFeed) def
        PageSize 0 get PageSize 1 get
        gt { PageSize 0 get PageSize 1 get exch PageSize astore
          /Orientation [ 3 0 1 2 ] Orientation get def
        } if currentdict end setpagedevice
        userdict /FieryXJdict known { 
          (printerinfo IsCustom YES)=string
          FieryXJdict /ExtCmdGetExec get exec {pop} if 
	} if "
*End

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*OpenUI *PageSize/Page Size: PickOne
*OrderDependency: 90 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter:"
    << /PageSize [612 792] /MediaType (null)
        /InputAttributes << 0 << /PageSize [612 792] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize Legal/Legal: " 
    << /PageSize [612 1008] /MediaType (null)
        /InputAttributes << 0 << /PageSize [612 1008] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize Executive/Exec: "
    << /PageSize [522 756] /MediaType (null)
        /InputAttributes << 0 << /PageSize [522 756] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize A4/A4:"
    << /PageSize [595 842] /MediaType (null)
        /InputAttributes << 0 << /PageSize [595 842] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize A5/A5:"
    << /PageSize [420 595] /MediaType (null)
        /InputAttributes << 0 << /PageSize [420 595] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize Env10/EnvCom-10: "
    << /PageSize [297 684] /MediaType (null)
        /InputAttributes << 0 << /PageSize [297 684] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize EnvISOB5/EnvB5: "
    << /PageSize [499 709] /MediaType (null)
        /InputAttributes << 0 << /PageSize [499 709] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize EnvDL/EnvDL: " 
    << /PageSize [312 624] /MediaType (null)
        /InputAttributes << 0 << /PageSize [312 624] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize EnvMonarch/EnvMonarch: "
    << /PageSize [279 540] /MediaType (null)
        /InputAttributes << 0 << /PageSize [279 540] /MediaType (null) >> >> >> setpagedevice "
*End
*PageSize EnvC5/EnvC5: " 
    << /PageSize [459 649] /MediaType (null)
        /InputAttributes << 0 << /PageSize [459 649] /MediaType (null) >> >> >> setpagedevice "
*End
*?PageSize: "
    save currentpagedevice /PageSize get aload pop
    2 copy gt {exch} if (Unknown) 
    10 dict
    dup [612 792] (Letter) put
    dup [612 1008] (Legal) put
    dup [522 756] (Executive) put
    dup [595 842] (A4) put
    dup [420 595] (A5) put
    dup [297 684] (Env10) put
    dup [279 540] (EnvMonarch) put
    dup [499 709] (EnvISOB5) put
    dup [312 624] (EnvDL) put
    dup [459 649] (EnvC5) put

    { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
      { exch pop exit } { pop } ifelse
    } bind forall = flush pop pop
    restore "
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*OpenUI *PageRegion/PageRegion: PickOne
*OrderDependency: 95 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter: " 
    << /PageSize [612 792] /MediaType (null)
        /InputAttributes << 0 << /PageSize [612 792] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion Legal/Legal: " 
    << /PageSize [612 1008] /MediaType (null)
        /InputAttributes << 0 << /PageSize [612 1008] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion Executive/Exec: " 
    << /PageSize [522 756] /MediaType (null)
        /InputAttributes << 0 << /PageSize [522 756] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion A4/A4: " 
    << /PageSize [595 842] /MediaType (null) 
        /InputAttributes << 0 << /PageSize [595 842] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion A5/A5: " 
    << /PageSize [420 595] /MediaType (null)
        /InputAttributes << 0 << /PageSize [420 595] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion EnvISOB5/EnvB5: " 
    << /PageSize [499 709] /MediaType (null) 
        /InputAttributes << 0 << /PageSize [499 709] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion EnvDL/EnvDL: " 
    << /PageSize [312 624] /MediaType (null)
        /InputAttributes << 0 << /PageSize [312 624] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion Env10/EnvCom-10: "
    << /PageSize [297 684] /MediaType (null)
        /InputAttributes << 0 << /PageSize [297 684] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion EnvMonarch/EnvMonarch: " 
    << /PageSize [279 540] /MediaType (null) 
        /InputAttributes << 0 << /PageSize [279 540] /MediaType (null) >> >> >> setpagedevice "
*End
*PageRegion EnvC5/EnvC5: " 
    << /PageSize [459 649] /MediaType (null)
        /InputAttributes << 0 << /PageSize [459 649] /MediaType (null) >> >> >> setpagedevice "
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea Letter/Letter: "12 12 600 780"
*ImageableArea Legal/Legal: "12 12 600 996"
*ImageableArea Executive/Exec: "12 12 510 744"
*ImageableArea A4/A4: "12 12 583 830"
*ImageableArea A5/A5: "12 12 408 583"
*ImageableArea Env10/EnvCom-10: "12 12 285 672"
*ImageableArea EnvISOB5/EnvB5: "12 12 487 697"
*ImageableArea EnvDL/EnvDL: "12 12 300 612"
*ImageableArea EnvMonarch/EnvMonarch: "12 12 267 528"
*ImageableArea EnvC5/EnvC5: "12 12 447 637"

*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal:     "612 1008"
*PaperDimension Executive/Exec: "522 756"
*PaperDimension A4/A4: "595 842"
*PaperDimension A5/A5: "420 595"
*PaperDimension Env10/EnvCom-10: "297 684"
*PaperDimension EnvISOB5/EnvB5: "499 709"
*PaperDimension EnvDL/EnvDL: "312 624"
*PaperDimension EnvMonarch/EnvMonarch: "279 540"
*PaperDimension EnvC5/EnvC5: "459 649"

*RequiresPageRegion All: True

*% Font Information =========================
*DefaultFont: Courier
*Font AlbertusMT-Italic: Standard "(001.000)" Standard Disk
*Font AlbertusMT-Light: Standard "(001.000)" Standard Disk
*Font AlbertusMT: Standard "(001.000)" Standard Disk
*Font AntiqueOlive-Bold: Standard "(501.009)" ExtendedRoman Disk
*Font AntiqueOlive-Compact: Standard "(501.008)" ExtendedRoman Disk
*Font AntiqueOlive-Italic: Standard "(501.010)" ExtendedRoman Disk
*Font AntiqueOlive-Roman: Standard "(501.008)" ExtendedRoman Disk
*Font Apple-Chancery: Standard "(001.001)" ExtendedRoman Disk
*Font Arial-BoldItalicMT: Standard "(501.009)" ExtendedRoman Disk
*Font Arial-BoldMT: Standard "(501.009)" ExtendedRoman Disk
*Font Arial-ItalicMT: Standard "(501.012)" ExtendedRoman Disk
*Font ArialMT: Standard "(501.009)" ExtendedRoman Disk
*Font AvantGarde-Book: Standard "(501.009)" ExtendedRoman Disk
*Font AvantGarde-BookOblique: Standard "(501.009)" ExtendedRoman Disk
*Font AvantGarde-Demi: Standard "(501.010)" ExtendedRoman Disk
*Font AvantGarde-DemiOblique: Standard "(501.010)" ExtendedRoman Disk
*Font Bodoni-Bold: Standard "(501.006)" ExtendedRoman Disk
*Font Bodoni-BoldItalic: Standard "(501.007)" ExtendedRoman Disk
*Font Bodoni-Italic: Standard "(501.007)" ExtendedRoman Disk
*Font Bodoni-Poster: Standard "(501.009)" ExtendedRoman Disk
*Font Bodoni-PosterCompressed: Standard "(501.007)" ExtendedRoman Disk
*Font Bodoni: Standard "(501.008)" ExtendedRoman Disk
*Font Bookman-Demi: Standard "(501.007)" ExtendedRoman Disk
*Font Bookman-DemiItalic: Standard "(501.008)" ExtendedRoman Disk
*Font Bookman-Light: Standard "(501.006)" ExtendedRoman Disk
*Font Bookman-LightItalic: Standard "(501.007)" ExtendedRoman Disk
*Font Carta: Special "(001.001)" Special Disk
*Font Chicago: Standard "(501.011)" ExtendedRoman Disk
*Font Clarendon-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font Clarendon-Light: Standard "(501.009)" ExtendedRoman Disk
*Font Clarendon: Standard "(501.009)" ExtendedRoman Disk
*Font CooperBlack-Italic: Standard "(001.003)" Standard Disk
*Font CooperBlack: Standard "(001.003)" Standard Disk
*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard Disk
*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard Disk
*Font Coronet-Regular: Standard "(001.000)" ExtendedRoman Disk
*Font Courier-Bold: Standard "(501.010)" ExtendedRoman Disk
*Font Courier-BoldOblique: Standard "(501.010)" ExtendedRoman Disk
*Font Courier-Oblique: Standard "(501.010)" ExtendedRoman Disk
*Font Courier: Standard "(501.010)" ExtendedRoman Disk
*Font Eurostile-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font Eurostile-BoldExtendedTwo: Standard "(501.008)" ExtendedRoman Disk
*Font Eurostile-ExtendedTwo: Standard "(501.010)" ExtendedRoman Disk
*Font Eurostile: Standard "(501.008)" ExtendedRoman Disk
*Font Geneva: Standard "(501.007)" ExtendedRoman Disk
*Font GillSans-Bold: Standard "(501.007)" ExtendedRoman Disk
*Font GillSans-BoldCondensed: Standard "(501.006)" ExtendedRoman Disk
*Font GillSans-BoldItalic: Standard "(501.008)" ExtendedRoman Disk
*Font GillSans-Condensed: Standard "(501.007)" ExtendedRoman Disk
*Font GillSans-ExtraBold: Standard "(501.008)" ExtendedRoman Disk
*Font GillSans-Italic: Standard "(501.008)" ExtendedRoman Disk
*Font GillSans-Light: Standard "(501.009)" ExtendedRoman Disk
*Font GillSans-LightItalic: Standard "(501.009)" ExtendedRoman Disk
*Font GillSans: Standard "(501.009)" ExtendedRoman Disk
*Font Goudy-Bold: Standard "(001.002)" Standard Disk
*Font Goudy-BoldItalic: Standard "(001.002)" Standard Disk
*Font Goudy-ExtraBold: Standard "(001.001)" Standard Disk
*Font Goudy-Italic: Standard "(001.002)" Standard Disk
*Font Goudy: Standard "(001.003)" Standard Disk
*Font Helvetica-Bold: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-BoldOblique: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-Condensed-Bold: Standard "(501.009)" ExtendedRoman Disk
*Font Helvetica-Condensed-BoldObl: Standard "(501.009)" ExtendedRoman Disk
*Font Helvetica-Condensed-Oblique: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-Condensed: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-Narrow-Bold: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-Narrow-BoldOblique: Standard "(501.010)" ExtendedRoman Disk
*Font Helvetica-Narrow-Oblique: Standard "(501.008)" ExtendedRoman Disk
*Font Helvetica-Narrow: Standard "(501.008)" ExtendedRoman Disk
*Font Helvetica-Oblique: Standard "(501.008)" ExtendedRoman Disk
*Font Helvetica: Standard "(501.008)" ExtendedRoman Disk
*Font HoeflerText-Black: Standard "(501.008)" ExtendedRoman Disk
*Font HoeflerText-BlackItalic: Standard "(501.009)" ExtendedRoman Disk
*Font HoeflerText-Italic: Standard "(501.010)" ExtendedRoman Disk
*Font HoeflerText-Ornaments: Special "(001.001)" Special Disk
*Font HoeflerText-Regular: Standard "(501.009)" ExtendedRoman Disk
*Font JoannaMT-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font JoannaMT-BoldItalic: Standard "(501.008)" ExtendedRoman Disk
*Font JoannaMT-Italic: Standard "(501.008)" ExtendedRoman Disk
*Font JoannaMT: Standard "(501.009)" ExtendedRoman Disk
*Font LetterGothic-Bold: Standard "(501.010)" ExtendedRoman Disk
*Font LetterGothic-BoldSlanted: Standard "(501.010)" ExtendedRoman Disk
*Font LetterGothic-Slanted: Standard "(501.010)" ExtendedRoman Disk
*Font LetterGothic: Standard "(501.009)" ExtendedRoman Disk
*Font LubalinGraph-Book: Standard "(501.009)" ExtendedRoman Disk
*Font LubalinGraph-BookOblique: Standard "(501.009)" ExtendedRoman Disk
*Font LubalinGraph-Demi: Standard "(501.009)" ExtendedRoman Disk
*Font LubalinGraph-DemiOblique: Standard "(501.009)" ExtendedRoman Disk
*Font Marigold: Standard "(001.000)" Standard Disk
*Font MonaLisa-Recut: Standard "(001.000)" Standard Disk
*Font Monaco: Standard "(501.012)" ExtendedRoman Disk
*Font NewCenturySchlbk-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(501.009)" ExtendedRoman Disk
*Font NewCenturySchlbk-Italic: Standard "(501.011)" ExtendedRoman Disk
*Font NewCenturySchlbk-Roman: Standard "(501.008)" ExtendedRoman Disk
*Font NewYork: Standard "(501.013)" ExtendedRoman Disk
*Font Optima-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font Optima-BoldItalic: Standard "(501.009)" ExtendedRoman Disk
*Font Optima-Italic: Standard "(501.010)" ExtendedRoman Disk
*Font Optima: Standard "(501.010)" ExtendedRoman Disk
*Font Oxford: Standard "(001.000)" Standard Disk
*Font Palatino-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font Palatino-BoldItalic: Standard "(501.007)" ExtendedRoman Disk
*Font Palatino-Italic: Standard "(501.008)" ExtendedRoman Disk
*Font Palatino-Roman: Standard "(501.006)" ExtendedRoman Disk
*Font StempelGaramond-Bold: Standard "(501.007)" ExtendedRoman Disk
*Font StempelGaramond-BoldItalic: Standard "(501.012)" ExtendedRoman Disk
*Font StempelGaramond-Italic: Standard "(501.009)" ExtendedRoman Disk
*Font StempelGaramond-Roman: Standard "(501.011)" ExtendedRoman Disk
*Font Symbol: Special "(001.008)" Special Disk
*Font Tekton: Standard "(001.001)" Standard Disk
*Font Times-Bold: Standard "(501.009)" ExtendedRoman Disk
*Font Times-BoldItalic: Standard "(501.009)" ExtendedRoman Disk
*Font Times-Italic: Standard "(501.010)" ExtendedRoman Disk
*Font Times-Roman: Standard "(501.010)" ExtendedRoman Disk
*Font TimesNewRomanPS-BoldItalicMT: Standard "(501.011)" ExtendedRoman Disk
*Font TimesNewRomanPS-BoldMT: Standard "(501.009)" ExtendedRoman Disk
*Font TimesNewRomanPS-ItalicMT: Standard "(501.011)" ExtendedRoman Disk
*Font TimesNewRomanPSMT: Standard "(501.010)" ExtendedRoman Disk
*Font Univers-Bold: Standard "(501.008)" ExtendedRoman Disk
*Font Univers-BoldExt: Standard "(501.010)" ExtendedRoman Disk
*Font Univers-BoldExtObl: Standard "(501.010)" ExtendedRoman Disk
*Font Univers-BoldOblique: Standard "(501.008)" ExtendedRoman Disk
*Font Univers-Condensed: Standard "(501.011)" ExtendedRoman Disk
*Font Univers-CondensedBold: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-CondensedBoldOblique: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-CondensedOblique: Standard "(501.011)" ExtendedRoman Disk
*Font Univers-Extended: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-ExtendedObl: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-Light: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-LightOblique: Standard "(501.009)" ExtendedRoman Disk
*Font Univers-Oblique: Standard "(501.009)" ExtendedRoman Disk
*Font Univers: Standard "(501.009)" ExtendedRoman Disk
*Font Wingdings-Regular: Special "(001.001)" Special Disk
*Font ZapfChancery-MediumItalic: Standard "(002.000)" ExtendedRoman Disk
*Font ZapfDingbats: Special "(001.005S)" Special Disk
*?FontQuery: "
   save  
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
       /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
      } { exit } ifelse
   } bind loop
   (*) = flush
   restore"
*End

*?FontList: "
   save (*) {cvn ==} 128 string /Font resourceforall
   (*) = flush restore"
*End


*% PPD Last Modified 7.23.98
*% End of PPD