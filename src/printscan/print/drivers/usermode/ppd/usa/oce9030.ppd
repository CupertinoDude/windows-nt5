*PPD-Adobe: "4.2"
*%
*%   	PostScript(R) Printer Description file for the Oce G9030-S
*%
*% 	    Copyright 1998 Oce Technologies B.V.
*%
*% October_19_1998
*%=====================================================================

*FormatVersion: "4.2"
*FileVersion: "1.8"

*LanguageVersion: English
*LanguageEncoding: ISOLatin1

*PCFileName: "OCE9030.PPD"

*Manufacturer: "Oce"
*Product: "(Oce 9000-S/9500-S)"
*PSVersion: "(6.3) 0"

*ModelName: "Oce G9030-S PostScript"
*NickName:  "Oce G9030-S PostScript"

*%=== Basic Device Capabilities ===========================
*%
*LanguageLevel: "2"

*FreeVM: "1000000"

*% Throughput is 2 A0/minute == 11 * 8.5"
*ThroughPut: "11"

*DefaultResolution: 300dpi
*Resolution 300dpi: ""
*ColorDevice: False

*Reset: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver systemdict /quit get exec }
{
  (WARNING : Printer reset failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*Password: "0"
*ExitServer: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver }
{
  (WARNING : Exitserver command failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Gray Levels and Halftoning Information ===============
*DefaultColorSpace: Gray
*AccurateScreens: False
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"

*DefaultScreenProc: Dot
*ScreenProc Dot: "{dup mul exch dup mul add 1.0 exch sub }"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*%=== Paper Handling =======================
*OpenGroup: Paper

*OpenUI *PageSize: PickOne
*OrderDependency: 20 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize AnsiA/A 8.5"x11": "
    << /ImagingBBox null /PageSize [ 612  792] >> setpagedevice"
*End
*PageSize AnsiB/B 11"x17":"
    << /ImagingBBox null /PageSize [ 792 1224] >> setpagedevice"
*End
*PageSize AnsiC/C 17"x22": "
    << /ImagingBBox null /PageSize [1224 1584] >> setpagedevice"
*End
*PageSize AnsiD/D 22"x34": "
    << /ImagingBBox null /PageSize [1584 2448] >> setpagedevice"
*End
*PageSize AnsiE/E 34"x44": "
    << /ImagingBBox null /PageSize [2448 3168] >> setpagedevice"
*End
*PageSize ArchA/A+ 9"x12": "
    << /ImagingBBox null /PageSize [ 648  864] >> setpagedevice"
*End
*PageSize ArchB/B+ 12"x18": "
    << /ImagingBBox null /PageSize [ 864 1296] >> setpagedevice"
*End
*PageSize ArchC/C+ 18"x24": "
    << /ImagingBBox null /PageSize [1296 1728] >> setpagedevice"
*End
*PageSize ArchD/D+ 24"x36": "
    << /ImagingBBox null /PageSize [1728 2592] >> setpagedevice"
*End
*PageSize ArchE/E+ 36"x48": "
    << /ImagingBBox null /PageSize [2592 3456] >> setpagedevice"
*End
*PageSize A4/A4: "
    << /ImagingBBox null /PageSize [ 595  842] >> setpagedevice"
*End
*PageSize A3/A3: "
    << /ImagingBBox null /PageSize [ 842 1191] >> setpagedevice"
*End
*PageSize A2/A2: "
    << /ImagingBBox null /PageSize [1191 1684] >> setpagedevice"
*End
*PageSize A1/A1: "
    << /ImagingBBox null /PageSize [1684 2384] >> setpagedevice"
*End
*PageSize A0/A0: "
    << /ImagingBBox null /PageSize [2384 3370] >> setpagedevice"
*End
*?PageSize: "
  save
    /ps currentpagedevice /PageSize get def
    20 dict begin
    /AnsiA   [ 612   792 ] def
    /AnsiB   [ 792  1224 ] def
    /AnsiC   [1224  1584 ] def
    /AnsiD   [1584  2448 ] def
    /AnsiE   [2448  3168 ] def
    /ArchA   [ 648   864 ] def
    /ArchB   [ 864  1296 ] def
    /ArchC   [1296  1728 ] def
    /ArchD   [1728  2592 ] def
    /ArchE   [2592  3456 ] def
    /A4      [ 595   842 ] def
    /A3      [ 842  1191 ] def
    /A2      [1191  1684 ] def
    /A1      [1684  2384 ] def
    /A0      [2384  3370 ] def
    currentdict end {
      dup 0 get ps 0 get sub abs 5 gt
      {
	  pop pop
      }
      {
	 1 get ps 1 get sub abs 5 gt { pop }{10 string cvs print exit } ifelse
      }
      ifelse
    } forall
    flush
  restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 30 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion AnsiA/A 8.5"x11": "
    << /ImagingBBox null /PageSize [ 612  792] >> setpagedevice"
*End
*PageRegion AnsiB/B 11"x17":"
    << /ImagingBBox null /PageSize [ 792 1224] >> setpagedevice"
*End
*PageRegion AnsiC/C 17"x22": "
    << /ImagingBBox null /PageSize [1224 1584] >> setpagedevice"
*End
*PageRegion AnsiD/D 22"x34": "
    << /ImagingBBox null /PageSize [1584 2448] >> setpagedevice"
*End
*PageRegion AnsiE/E 34"x44": "
    << /ImagingBBox null /PageSize [2448 3168] >> setpagedevice"
*End
*PageRegion ArchA/A+ 9"x12": "
    << /ImagingBBox null /PageSize [ 648  864] >> setpagedevice"
*End
*PageRegion ArchB/B+ 12"x18": "
    << /ImagingBBox null /PageSize [ 864 1296] >> setpagedevice"
*End
*PageRegion ArchC/C+ 18"x24": "
    << /ImagingBBox null /PageSize [1296 1728] >> setpagedevice"
*End
*PageRegion ArchD/D+ 24"x36": "
    << /ImagingBBox null /PageSize [1728 2592] >> setpagedevice"
*End
*PageRegion ArchE/E+ 36"x48": "
    << /ImagingBBox null /PageSize [2592 3456] >> setpagedevice"
*End
*PageRegion A4/A4: "
    << /ImagingBBox null /PageSize [ 595  842] >> setpagedevice"
*End
*PageRegion A3/A3: "
    << /ImagingBBox null /PageSize [ 842 1191] >> setpagedevice"
*End
*PageRegion A2/A2: "
    << /ImagingBBox null /PageSize [1191 1684] >> setpagedevice"
*End
*PageRegion A1/A1: "
    << /ImagingBBox null /PageSize [1684 2384] >> setpagedevice"
*End
*PageRegion A0/A0: "
    << /ImagingBBox null /PageSize [2384 3370] >> setpagedevice"
*End
*CloseUI: *PageRegion

*% The imageable area for the different paper sizes
*%
*DefaultImageableArea: Unknown
*ImageableArea AnsiA/A 8.5"x11":"9 9  603  783"
*ImageableArea AnsiB/B 11"x17": "9 9  783 1215"
*ImageableArea AnsiC/C 17"x22": "9 9 1215 1575"
*ImageableArea AnsiD/D 22"x34": "9 9 1575 2439"
*ImageableArea AnsiE/E 34"x44": "9 9 2439 3159"
*ImageableArea ArchA/A+ 9"x12":   "9 9  639  855"
*ImageableArea ArchB/B+ 12"x18":  "9 9  855 1287"
*ImageableArea ArchC/C+ 18"x24":  "9 9 1287 1719"
*ImageableArea ArchD/D+ 24"x36":  "9 9 1719 2583"
*ImageableArea ArchE/E+ 36"x48":  "9 9 2583 3447"
*ImageableArea A4/A4: "9 9  586  833"
*ImageableArea A3/A3: "9 9  833 1182"
*ImageableArea A2/A2: "9 9 1182 1675"
*ImageableArea A1/A1: "9 9 1675 2375"
*ImageableArea A0/A0: "9 9 2375 3361"
*?ImageableArea: "
save
  initclip
  /convprint { cvi 12 string cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch ceiling convprint ceiling convprint
  exch floor convprint floor convprint (\n) print flush
restore
"
*End

*% The physical dimensions of the paper
*%
*DefaultPaperDimension: Unknown
*PaperDimension AnsiA/A 8.5"x11": " 612  792"
*PaperDimension AnsiB/B 11"x17":  " 792 1224"
*PaperDimension AnsiC/C 17"x22":  "1224 1584"
*PaperDimension AnsiD/D 22"x34":  "1584 2448"
*PaperDimension AnsiE/E 34"x44":  "2448 3168"
*PaperDimension ArchA/A+ 9"x12":   " 648  864"
*PaperDimension ArchB/B+ 12"x18":  " 864 1296"
*PaperDimension ArchC/C+ 18"x24":  "1296 1728"
*PaperDimension ArchD/D+ 24"x36":  "1728 2592"
*PaperDimension ArchE/E+ 36"x48":  "2592 3456"
*PaperDimension A4/A4: " 595  842"
*PaperDimension A3/A3: " 842 1191"
*PaperDimension A2/A2: "1191 1684"
*PaperDimension A1/A1: "1684 2384"
*PaperDimension A0/A0: "2384 3370"


*% Custom page sizes
*%
*MaxMediaWidth:  "2592"
*MaxMediaHeight: "42519"
*?CurrentMediaWidth: "
   currentpagedevice /InputAttributes get /PageSize get 1 get == flush
"
*End

*HWMargins: 8.5 8.5 8.5 8.5
*ParamCustomPageSize Width:        1 points 595    2592
*ParamCustomPageSize Height:       2 points 595   42519
*ParamCustomPageSize WidthOffset:  3 points   0    2592
*ParamCustomPageSize HeightOffset: 4 points   0   42519
*ParamCustomPageSize Orientation:  5  int     0       3
*OrderDependency: 20 AnySetup *CustomPageSize
*CustomPageSize True: "
    pop pop pop
    2 dict begin
    /PageSize [ 4 -2 roll ] def
    /ImagingBBox null def
    currentdict end setpagedevice
"
*End

*CloseGroup: Paper

*% Media handling features ================================

*OpenUI *InputSlot: PickOne
*DefaultInputSlot: Roll
*InputSlot Roll/Roll: ""
*CloseUI: *InputSlot

*RequiresPageRegion All: True

*% Processing options =====================================

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.001)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.001)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.001)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.001)" Standard ROM
*Font Bookman-Demi: Standard "(001.001)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.001)" Standard ROM
*Font Bookman-Light: Standard "(001.001)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.001)" Standard ROM
*Font Courier: Standard "(001.004)" Standard ROM
*Font Courier-Bold: Standard "(001.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(001.004)" Standard ROM
*Font Courier-Oblique: Standard "(001.004)" Standard ROM
*Font Helvetica: Standard "(001.001)" Standard ROM
*Font Helvetica-Bold: Standard "(001.001)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.002)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.002)" Standard ROM
*Font Palatino-Bold: Standard "(001.000)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.000)" Standard ROM
*Font Palatino-Italic: Standard "(001.000)" Standard ROM
*Font Palatino-Roman: Standard "(001.000)" Standard ROM
*Font Symbol: Special "(001.001)" Special ROM
*Font Times-Bold: Standard "(001.001)" Standard ROM
*Font Times-BoldItalic: Standard "(001.001)" Standard ROM
*Font Times-Italic: Standard "(001.001)" Standard ROM
*Font Times-Roman: Standard "(001.001)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.002)" Standard ROM
*Font ZapfDingbats: Special "(001.000)" Special ROM

*?FontQuery: "
save
/sv exch def
 {
    count 0 gt
    {
      dup /Font resourcestatus {pop pop (:Yes) }{(:No)} ifelse
      exch 127 string cvs (/) print print print
    }
    {
      exit
    }
    ifelse
  } bind loop
  (*) = flush
sv restore
"
*End

*?FontList: "
    (*) {(/) print print} 127 string /Font resourceforall
    (*) = flush
"
*End

*% Color Separation Information =====================

*DefaultColorSep: ProcessCyan.60lpi.400dpi/60 lpi / 400 dpi

*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow
*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color

*ColorSepScreenAngle ProcessCyan.60lpi.400dpi/60 lpi / 400 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.400dpi/60 lpi / 400 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.400dpi/60 lpi / 400 dpi: "0"
*ColorSepScreenAngle ProcessBlack.60lpi.400dpi/60 lpi / 400 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.400dpi/60 lpi / 400 dpi: "45"

*ColorSepScreenFreq ProcessCyan.60lpi.400dpi/60 lpi / 400 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.400dpi/60 lpi / 400 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.400dpi/60 lpi / 400 dpi: "60"
*ColorSepScreenFreq ProcessBlack.60lpi.400dpi/60 lpi / 400 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.400dpi/60 lpi / 400 dpi: "60"

*ColorSepScreenProc ProcessCyan.60lpi.400dpi/60 lpi / 400 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessMagenta.60lpi.400dpi/60 lpi / 400 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessYellow.60lpi.400dpi/60 lpi / 400 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessBlack.60lpi.400dpi/60 lpi / 400 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc CustomColor.60lpi.400dpi/60 lpi / 400 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*ColorSepTransfer ProcessCyan.60lpi.400dpi/60 lpi / 400 dpi: "{ }"
*ColorSepTransfer ProcessMagenta.60lpi.400dpi/60 lpi / 400 dpi: "{ }"
*ColorSepTransfer ProcessYellow.60lpi.400dpi/60 lpi / 400 dpi: "{ }"
*ColorSepTransfer ProcessBlack.60lpi.400dpi/60 lpi / 400 dpi: "{ }"
*ColorSepTransfer CustomColor.60lpi.400dpi/60 lpi / 400 dpi: "{ }"

*% Finishing options ===============================

*% Printer Messages Information =====================

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "printer operational, no error present"
*PrinterError: "manual feed timeout"
*PrinterError: "check paper input unit"
*PrinterError: "check paper output unit"
*PrinterError: "check paper path"
*PrinterError: "if empty, feed sheet to manual slot"
*PrinterError: "please wait, temporary error"
*PrinterError: "please wait, printer warming up"
*PrinterError: "please wait, printer initializing"
*PrinterError: "please wait, printer selftest"
*PrinterError: "printer off line"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "printing test page"
*Status: "initializing"
*Status: "PrinterError: printer operational, no error present"
*Status: "PrinterError: manual feed timeout"
*Status: "PrinterError: check paper input unit"
*Status: "PrinterError: check paper output unit"
*Status: "PrinterError: check paper path"
*Status: "PrinterError: if empty, feed sheet to manual slot"
*Status: "PrinterError: please wait, temporary error"
*Status: "PrinterError: please wait, printer warming up"
*Status: "PrinterError: please wait, printer initializing"
*Status: "PrinterError: please wait, printer selftest"
*Status: "PrinterError: printer off line"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "serial9"
*Source: "serial25"
*Source: "AppleTalk"
*Source: "Centronics"

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\fontname\ not found, using Courier"

*% end of PPD file

