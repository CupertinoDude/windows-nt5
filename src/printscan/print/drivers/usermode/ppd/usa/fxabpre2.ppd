*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1996 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.3"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "FXABPRE2.PPD"
*Product: "(Able Model-PR)"
*PSVersion: "(2017.102) 66050"
*Manufacturer: "FX"
*ShortNickName: "FX Able Model-PR v2017 PS"
*ModelName: "FX Able Model-PR v2017.102 PS"
*NickName: "FX Able Model-PR v2017.102 PS"

*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 12Meg
*InstalledMemory 12Meg/Standard 12 MB RAM: ""
*InstalledMemory 16Meg/16 MB Upgrade: ""
*InstalledMemory 20Meg/20 MB Upgrade: ""
*InstalledMemory 24Meg/24 MB Upgrade: ""
*InstalledMemory 28Meg/28 MB Upgrade: ""
*InstalledMemory 32Meg/32 MB Upgrade: ""
*InstalledMemory 40Meg/40 MB Upgrade: ""
*InstalledMemory 44Meg/44 MB Upgrade: ""
*InstalledMemory 56Meg/56 MB Upgrade: ""
*?InstalledMemory: "
	save
	(12Meg) /Custom /ProcSet findresource begin
	totalinstalledram
	dup 16777216 eq{exch pop (16Meg) exch}if
	dup 20971520 eq{exch pop (20Meg) exch}if
	dup 25165824 eq{exch pop (24Meg) exch}if
	dup 29360128 eq{exch pop (28Meg) exch}if
	dup 33554432 eq{exch pop (32Meg) exch}if
	dup 41943040 eq{exch pop (40Meg) exch}if
	dup 46137344 eq{exch pop (44Meg) exch}if
	dup 58720256 eq{exch pop (56Meg) exch}if
	pop
	= flush end restore
"
*End
*CloseUI: *InstalledMemory

*OpenUI *Option1/Option Sheet Feeder: PickOne
*DefaultOption1: 3TrayModule
*Option1 2TrayModule/2 Trays Module: ""
*Option1 3TrayModule/3 Trays Module: ""
*?Option1: "
	save
	(Unknown)
	currentpagedevice
	/InputAttributes get length
	dup 4 eq {exch pop (2TrayModule) exch} if
	dup 5 eq {exch pop (3TrayModule) exch} if
	pop = flush
	restore
"
*End
*CloseUI: *Option1

*OpenUI *Option2/Face Up Tray: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2

*OpenUI *Option3/Offset Catch Tray: Boolean
*DefaultOption3: False
*Option3 True/Installed: ""
*Option3 False/Not Installed: ""
*?Option3: "
	save
	currentpagedevice
	/Jog known {(True)}{(False)} ifelse = flush
	restore
"
*End
*CloseUI: *Option3

*OpenUI *Option4/Duplex Module: Boolean
*DefaultOption4: False
*Option4 True/Installed: ""
*Option4 False/Not Installed: ""
*?Option4: "
	save
	currentpagedevice
	/Duplex known {(True)}{(False)} ifelse = flush
	restore
"
*End
*CloseUI: *Option4
*OpenUI *Option5/Manual Feed Tray: Boolean
*DefaultOption5: False
*Option5 True/Installed: ""
*Option5 False/Not Installed: ""
*?Option5: "
	save
	currentpagedevice
	/ManualFeed known {(True)}{(False)} ifelse = flush
	restore
"
*End
*CloseUI: *Option5

*OpenUI *Option6/Sorter: Boolean
*DefaultOption6: False
*Option6 True/Installed: ""
*Option6 False/Not Installed: ""
*?Option6: "
	save
	currentpagedevice
	/OutputAttributes get
	2 known {(True)}{(False)} ifelse = flush
	restore
"
*End
*CloseUI: *Option6

*OpenUI *Option7/Mail Box: Boolean
*DefaultOption7: False
*Option7 True/Installed: ""
*Option7 False/Not Installed: ""
*?Option7: "
	save
	currentpagedevice
	/OutputAttributes get
	3 known {(True)}{(False)} ifelse = flush
	restore
"
*End
*CloseUI: *Option7
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 2TrayModule *InputSlot 4thTray
*UIConstraints: *Option2 False *OutputBin FaceUp
*UIConstraints: *Option3 False *Jog DeviceDeactivation
*UIConstraints: *Option3 False *Jog EndOfSet
*UIConstraints: *Option4 False *Duplex DuplexNoTumble
*UIConstraints: *Option4 False *Duplex DuplexTumble
*UIConstraints: *Option5 False *ManualFeed True
*UIConstraints: *Option6 False *OutputBin Sorter
*UIConstraints: *Option7 False *OutputBin MailBox1
*UIConstraints: *Option7 False *OutputBin MailBox2
*UIConstraints: *Option7 False *OutputBin MailBox3
*UIConstraints: *Option7 False *OutputBin MailBox4
*UIConstraints: *Option7 False *OutputBin MailBox5
*UIConstraints: *Option7 False *OutputBin MailBox6
*UIConstraints: *Option7 False *OutputBin MailBox7
*UIConstraints: *Option7 False *OutputBin MailBox8
*UIConstraints: *Option7 False *OutputBin MailBox9
*UIConstraints: *Option7 False *OutputBin MailBox10
*UIConstraints: *Option6 True *Option7 True
*UIConstraints: *InputSlot 4thTray *Option1 2TrayModule
*UIConstraints: *OutputBin FaceUp *Option2 False
*UIConstraints: *Jog EndOfSet *Option3 False
*UIConstraints: *Jog DeviceDeactivation *Option3 False
*UIConstraints: *Duplex DuplexNoTumble *Option4 False
*UIConstraints: *Duplex DuplexTumble *Option4 False
*UIConstraints: *ManualFeed True *Option5 False
*UIConstraints: *OutputBin Sorter *Option6 False
*UIConstraints: *OutputBin MailBox1 *Option7 False
*UIConstraints: *OutputBin MailBox2 *Option7 False
*UIConstraints: *OutputBin MailBox3 *Option7 False
*UIConstraints: *OutputBin MailBox4 *Option7 False
*UIConstraints: *OutputBin MailBox5 *Option7 False
*UIConstraints: *OutputBin MailBox6 *Option7 False
*UIConstraints: *OutputBin MailBox7 *Option7 False
*UIConstraints: *OutputBin MailBox8 *Option7 False
*UIConstraints: *OutputBin MailBox9 *Option7 False
*UIConstraints: *OutputBin MailBox10 *Option7 False
*UIConstraints: *Option7 True *Option6 True
*UIConstraints: *ManualFeed True *Duplex DuplexNoTumble
*UIConstraints: *ManualFeed True *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *ManualFeed True
*UIConstraints: *Duplex DuplexTumble *ManualFeed True
*UIConstraints: *ManualFeed True *OutputBin Sorter
*UIConstraints: *ManualFeed True *OutputBin MailBox1
*UIConstraints: *ManualFeed True *OutputBin MailBox2
*UIConstraints: *ManualFeed True *OutputBin MailBox3
*UIConstraints: *ManualFeed True *OutputBin MailBox4
*UIConstraints: *ManualFeed True *OutputBin MailBox5
*UIConstraints: *ManualFeed True *OutputBin MailBox6
*UIConstraints: *ManualFeed True *OutputBin MailBox7
*UIConstraints: *ManualFeed True *OutputBin MailBox8
*UIConstraints: *ManualFeed True *OutputBin MailBox9
*UIConstraints: *ManualFeed True *OutputBin MailBox10
*UIConstraints: *OutputBin Sorter *ManualFeed True
*UIConstraints: *OutputBin MailBox1 *ManualFeed True
*UIConstraints: *OutputBin MailBox2 *ManualFeed True
*UIConstraints: *OutputBin MailBox3 *ManualFeed True
*UIConstraints: *OutputBin MailBox4 *ManualFeed True
*UIConstraints: *OutputBin MailBox5 *ManualFeed True
*UIConstraints: *OutputBin MailBox6 *ManualFeed True
*UIConstraints: *OutputBin MailBox7 *ManualFeed True
*UIConstraints: *OutputBin MailBox8 *ManualFeed True
*UIConstraints: *OutputBin MailBox9 *ManualFeed True
*UIConstraints: *OutputBin MailBox10 *ManualFeed True
*UIConstraints: *Jog DeviceDeactivation *OutputBin FaceUp
*UIConstraints: *Jog DeviceDeactivation *OutputBin Sorter
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox1
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox2
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox3
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox4
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox5
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox6
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox7
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox8
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox9
*UIConstraints: *Jog DeviceDeactivation *OutputBin MailBox10
*UIConstraints: *Jog EndOfSet *OutputBin FaceUp
*UIConstraints: *Jog EndOfSet *OutputBin Sorter
*UIConstraints: *Jog EndOfSet *OutputBin MailBox1
*UIConstraints: *Jog EndOfSet *OutputBin MailBox2
*UIConstraints: *Jog EndOfSet *OutputBin MailBox3
*UIConstraints: *Jog EndOfSet *OutputBin MailBox4
*UIConstraints: *Jog EndOfSet *OutputBin MailBox5
*UIConstraints: *Jog EndOfSet *OutputBin MailBox6
*UIConstraints: *Jog EndOfSet *OutputBin MailBox7
*UIConstraints: *Jog EndOfSet *OutputBin MailBox8
*UIConstraints: *Jog EndOfSet *OutputBin MailBox9
*UIConstraints: *Jog EndOfSet *OutputBin MailBox10
*UIConstraints: *OutputBin FaceUp *Jog DeviceDeactivation
*UIConstraints: *OutputBin Sorter *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox1 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox2 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox3 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox4 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox5 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox6 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox7 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox8 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox9 *Jog DeviceDeactivation
*UIConstraints: *OutputBin MailBox10 *Jog DeviceDeactivation
*UIConstraints: *OutputBin FaceUp *Jog EndOfSet
*UIConstraints: *OutputBin Sorter *Jog EndOfSet
*UIConstraints: *OutputBin MailBox1 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox2 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox3 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox4 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox5 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox6 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox7 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox8 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox9 *Jog EndOfSet
*UIConstraints: *OutputBin MailBox10 *Jog EndOfSet
*UIConstraints: *PageSize A5 *InputSlot 2ndTray
*UIConstraints: *PageSize A5 *InputSlot 3rdTray
*UIConstraints: *PageSize A5 *InputSlot 4thTray
*UIConstraints: *PageSize FXPostcard *InputSlot StandardTray
*UIConstraints: *PageSize FXPostcard *InputSlot 2ndTray
*UIConstraints: *PageSize FXPostcard *InputSlot 3rdTray
*UIConstraints: *PageSize FXPostcard *InputSlot 4thTray
*UIConstraints: *PageSize FXPostcard *OutputBin Sorter
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox1
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox2
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox3
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox4
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox5
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox6
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox7
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox8
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox9
*UIConstraints: *PageSize FXPostcard *OutputBin MailBox10
*UIConstraints: *PageSize FXPostcard *Duplex DuplexNoTumble
*UIConstraints: *PageSize FXPostcard *Duplex DuplexTumble
*UIConstraints: *InputSlot 2ndTray *PageSize A5
*UIConstraints: *InputSlot 3rdTray *PageSize A5
*UIConstraints: *InputSlot 4thTray *PageSize A5
*UIConstraints: *InputSlot StandardTray *PageSize FXPostcard
*UIConstraints: *InputSlot 2ndTray *PageSize FXPostcard
*UIConstraints: *InputSlot 3rdTray *PageSize FXPostcard
*UIConstraints: *InputSlot 4thTray *PageSize FXPostcard
*UIConstraints: *OutputBin Sorter *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox1 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox2 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox3 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox4 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox5 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox6 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox7 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox8 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox9 *PageSize FXPostcard
*UIConstraints: *OutputBin MailBox10 *PageSize FXPostcard
*UIConstraints: *Duplex DuplexNoTumble *PageSize FXPostcard
*UIConstraints: *Duplex DuplexTumble *PageSize FXPostcard
*UIConstraints: *PageRegion A5 *InputSlot 2ndTray
*UIConstraints: *PageRegion A5 *InputSlot 3rdTray
*UIConstraints: *PageRegion A5 *InputSlot 4thTray
*UIConstraints: *PageRegion FXPostcard *InputSlot StandardTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 2ndTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 3rdTray
*UIConstraints: *PageRegion FXPostcard *InputSlot 4thTray
*UIConstraints: *PageRegion FXPostcard *OutputBin Sorter
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox1
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox2
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox3
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox4
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox5
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox6
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox7
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox8
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox9
*UIConstraints: *PageRegion FXPostcard *OutputBin MailBox10
*UIConstraints: *PageRegion FXPostcard *Duplex DuplexNoTumble
*UIConstraints: *PageRegion FXPostcard *Duplex DuplexTumble
*UIConstraints: *InputSlot 2ndTray *PageRegion A5
*UIConstraints: *InputSlot 3rdTray *PageRegion A5
*UIConstraints: *InputSlot 4thTray *PageRegion A5
*UIConstraints: *InputSlot StandardTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 2ndTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 3rdTray *PageRegion FXPostcard
*UIConstraints: *InputSlot 4thTray *PageRegion FXPostcard
*UIConstraints: *OutputBin Sorter *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox1 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox2 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox3 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox4 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox5 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox6 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox7 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox8 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox9 *PageRegion FXPostcard
*UIConstraints: *OutputBin MailBox10 *PageRegion FXPostcard
*UIConstraints: *Duplex DuplexNoTumble *PageRegion FXPostcard
*UIConstraints: *Duplex DuplexTumble *PageRegion FXPostcard
*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*Protocols: BCP TBCP
*FreeVM: "2178688"
*VMOption 12Meg/Standard 12 MB RAM: "2178688"
*VMOption 16Meg/16 MB Upgrade: "2178688"
*VMOption 20Meg/20 MB Upgrade: "2178688"
*VMOption 24Meg/24 MB Upgrade: "2178688"
*VMOption 28Meg/28 MB Upgrade: "2178688"
*VMOption 32Meg/32 MB Upgrade: "2178688"
*VMOption 40Meg/40 MB Upgrade: "2178688"
*VMOption 44Meg/44 MB Upgrade: "2178688"
*VMOption 56Meg/56 MB Upgrade: "2178688"
*ColorDevice: False
*DefaultColorSpace: Gray
*Throughput: "32"
*TTRasterizer: Type42
*?TTRasterizer: "
save
42 /FontType resourcestatus
{ pop pop (Type 42) } { (No Type 42) } ifelse = flush
restore
"
*End
*FileSystem: True
*?FileSystem: "
  save false
   (%disk?%)
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore
"
*End
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*% Resolution Information =============
*DefaultResolution: 300dpi

*% Halftone Information ===============
*DefaultHalftoneType: 1
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "{180 mul cos exch 180 mul cos add 2 div}"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*OpenUI *Smoothing/ImageEnhancement: Boolean
*OrderDependency: 60.0 AnySetup *Smoothing
*DefaultSmoothing: True
*Smoothing True: "1 dict dup /PostRenderingEnhance true put setpagedevice"
*Smoothing False: "1 dict dup /PostRenderingEnhance false put setpagedevice"
*?Smoothing: "
save
currentpagedevice /PostRenderingEnhance get
  { (True) } { (False) }
ifelse = flush
restore
"
*End
*CloseUI: *Smoothing

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30.0 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize A4: "
    3 dict dup /PageSize [595 842] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize A3: "
    3 dict dup /PageSize [842 1191] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize A5: "
    3 dict dup /PageSize [420 595] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize B4: "
    3 dict dup /PageSize [729 1032] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize B5: "
    3 dict dup /PageSize [516 729] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize Letter: "
    3 dict dup /PageSize [612 792] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize Legal: "
    3 dict dup /PageSize [612 1008] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize Tabloid: "
    3 dict dup /PageSize [792 1224] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize Legal13/8.5x13: "
    3 dict dup /PageSize [612 936] put dup /ImagingBBox null put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize FXPostcard/Postcard: "
    currentpagedevice dup /ManualFeed known {
	/ManualFeed get { 
	    3 dict dup /PageSize [283 420] put 
	    dup /ImagingBBox null put
	    dup /InputAttributes 
	    1 dict dup /Priority [0 1 2 3] put put setpagedevice
	} if
    } if"
*End
*PageSize A4Small: "
    3 dict dup /PageSize [595 842] put dup /ImagingBBox [28 30 566 811] put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*PageSize LetterSmall: "
    3 dict dup /PageSize [612 792] put dup /ImagingBBox [30 31 582 761] put
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3] put put setpagedevice"
*End
*?PageSize: "
  save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  10 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put
   dup [842 1191] (A3) put
   dup [595 842] (A4) put
   dup [420 595] (A5) put
   dup [729 1032] (B4) put
   dup [516 729] (B5) put
   dup [612 936] (Legal13) put
   dup [283 420] (FXPostcard) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
   restore
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 50.0 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion A4: "
   2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion A3: "
   2 dict dup /PageSize [842 1191] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion A5: "
   2 dict dup /PageSize [420 595] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion B4: "
   2 dict dup /PageSize [729 1032] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion B5: "
   2 dict dup /PageSize [516 729] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion Letter: "
   2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion Legal: "
   2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion Tabloid: "
   2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion Legal13/8.5x13: "
   2 dict dup /PageSize [612 936] put dup /ImagingBBox null put setpagedevice "
*End
*PageRegion FXPostcard/Postcard: "
   currentpagedevice dup /ManualFeed known {
	/ManualFeed get {  
     	    2 dict dup /PageSize [283 420] put 
	    dup /ImagingBBox null put setpagedevice
	} if 
   } if"
*End
*PageRegion A4Small: "
   2 dict dup /PageSize [595 842] put dup /ImagingBBox [28 30 566 811] put setpagedevice "
*End
*PageRegion LetterSmall: "
   2 dict dup /PageSize [612 792] put dup /ImagingBBox [30 31 582 761] put setpagedevice "
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea A3: "11.5201 10.92 830.4 1178.28 "
*ImageableArea A4: "12.6001 12.6001 583.8 829.56 "
*ImageableArea A5: "12.3601 11.6401 407.88 582.84 "
*ImageableArea B4: "11.52 12.36 718.08 1019.4 "
*ImageableArea B5: "12.36 11.52 503.88 716.04 "
*ImageableArea Letter: "12.6001 11.6401 601.08 779.64 "
*ImageableArea Legal13/8.5x13: "11.52 11.64 601.92 923.64 " 
*ImageableArea Legal: "11.52 11.64 601.92 995.64 " 
*ImageableArea Tabloid: "11.52 11.6401 781.44 1211.64 " 
*ImageableArea FXPostcard/Postcard: "11.5201 11.8801 273.6 407.4 "
*ImageableArea A4Small: "28 30 566 811 "
*ImageableArea LetterSmall: "30 31 582 761 " 
*?ImageableArea: "
  save
  newpath clippath pathbbox 4 -2 roll
  exch 2 {10000 mul ceiling 10000 div dup 0 lt {pop 0.0} if 128 string cvs print ( ) print} repeat
  exch 2 {10000 mul floor   10000 div dup 0 lt {pop 0.0} if 128 string cvs print ( ) print} repeat
  (\n) print restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension A4: "595 842"
*PaperDimension A3: "842 1191"
*PaperDimension A5: "420 595"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension Letter: "612 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid: "792 1224"
*PaperDimension Legal13/8.5x13: "612 936"
*PaperDimension FXPostcard/Postcard: "283 420"
*PaperDimension A4Small: "595 842"
*PaperDimension LetterSmall: "612 792"

*OpenUI *InputSlot: PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: StandardTray
*InputSlot StandardTray/Standard Tray: "
  currentpagedevice /InputAttributes get dup 0 known 
  {0 get dup null eq 
   { pop } 
   { dup length 1 add dict copy 
     dup /InputAttributes
     1 dict dup /Priority [0 1 2 3] put
     put setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*InputSlot 2ndTray/Second Tray: "
  currentpagedevice /InputAttributes get dup 1 known 
  {1 get dup null eq 
   { pop } 
   { dup length 1 add dict copy 
     dup /InputAttributes
     1 dict dup /Priority [1 0 2 3] put
     put setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*InputSlot 3rdTray/Third Tray: "
  currentpagedevice /InputAttributes get dup 2 known 
  {2 get dup null eq 
   { pop } 
   { dup length 1 add dict copy 
     dup /InputAttributes
     1 dict dup /Priority [2 0 1 3] put
     put setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*InputSlot 4thTray/Fourth Tray: "
  currentpagedevice /InputAttributes get dup 3 known 
  {3 get dup null eq 
   { pop } 
   { dup length 1 add dict copy 
     dup /InputAttributes
     1 dict dup /Priority [3 0 1 2] put
     put setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*?InputSlot: "
save
  4 dict
  dup /0 (StandardTray) put
  dup /1 (2ndTray) put
  dup /2 (3rdTray) put
  dup /3 (4thTray) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*DefaultOutputOrder:  Normal

*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 70.0 AnySetup *OutputBin
*DefaultOutputBin:  FaceDown
*OutputBin FaceDown/Face Down (Standard): "
  currentpagedevice /OutputAttributes get dup 0 known 
  {0 get dup null eq 
   { pop } 
   { dup length 1 add dict copy 
     dup /OutputFaceUp false put
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin FaceUp/Face Up (Option): "
  currentpagedevice /OutputAttributes get dup 1 known 
  {1 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup currentpagedevice dup /Duplex known {
       /Duplex get
        {/OutputFaceUp false put}
        {/OutputFaceUp true put}
       ifelse
     } {pop /OutputFaceUp true put}
     ifelse
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin Sorter/Sorter: "
  currentpagedevice /OutputAttributes get dup 2 known 
  {2 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox1/Mail Box No.1: "
  currentpagedevice /OutputAttributes get dup 3 known 
  {3 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox2/Mail Box No.2: "
  currentpagedevice /OutputAttributes get dup 4 known 
  {4 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox3/Mail Box No.3: "
  currentpagedevice /OutputAttributes get dup 5 known 
  {5 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox4/Mail Box No.4: "
  currentpagedevice /OutputAttributes get dup 6 known 
  {6 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox5/Mail Box No.5: "
  currentpagedevice /OutputAttributes get dup 7 known 
  {7 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox6/Mail Box No.6: "
  currentpagedevice /OutputAttributes get dup 8 known 
  {8 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox7/Mail Box No.7: "
  currentpagedevice /OutputAttributes get dup 9 known 
  {9 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox8/Mail Box No.8: "
  currentpagedevice /OutputAttributes get dup 10 known 
  {10 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox9/Mail Box No.9: "
  currentpagedevice /OutputAttributes get dup 11 known 
  {11 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known { 
      dup /ManualFeed false put 
     } if   
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*OutputBin MailBox10/Mail Box No.10: "
  currentpagedevice /OutputAttributes get dup 12 known 
  {12 get dup null eq 
   { pop } 
   { dup length 2 add dict copy 
     dup /OutputFaceUp false put
     currentpagedevice /Jog known {
      dup /Jog 0 put
     } if
     currentpagedevice /ManualFeed known {
      dup /ManualFeed false put
     } if  
     setpagedevice
   } ifelse }
  {pop}
  ifelse"
*End
*?OutputBin:"
save
currentpagedevice
dup /OutputType get null eq {
 /OutputAttributes get dup /Priority get
 {
  2 copy known {exit} {pop} ifelse
 } forall
 dup type /integertype eq {
  exch pop
 } {
  pop 0
 } ifelse
} {
 /OutputAttributes get
 dup /Priority get
 {
  2 copy known {
   2 copy get /OutputType get
   currentpagedevice /OutputType get
   anchorsearch {
    pop length 0 eq {exit} if
   } {
    pop
   } ifelse
   pop
  } {
   pop
  } ifelse
 } forall
 dup type /integertype eq {
  exch pop
 } {
  pop 13
 } ifelse
} ifelse
[(FaceDown)(FaceUp)(Sorter)(MailBox1)
(MailBox2)(MailBox3)(MailBox4)(MailBox5)(MailBox6)
(MailBox7)(MailBox8)(MailBox9)(MailBox10)(Unknown)] exch get = flush
restore
"
*End
*CloseUI: *OutputBin

*OpenUI *ManualFeed/Manual Feed:  Boolean
*OrderDependency: 40.0 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True: "currentpagedevice /ManualFeed known {1 dict dup /ManualFeed true put setpagedevice} if"
*ManualFeed False: "currentpagedevice /ManualFeed known {1 dict dup /ManualFeed false put setpagedevice} if"
*?ManualFeed: "
  save
    currentpagedevice /ManualFeed known {
    	currentpagedevice /ManualFeed get
    	{(True)}{(False)}ifelse
    } 
    {(False)} ifelse = flush
  restore
"
*End
*CloseUI: *ManualFeed

*OpenUI *TraySwitch:  Boolean
*OrderDependency: 60.0 AnySetup *TraySwitch
*DefaultTraySwitch: True
*TraySwitch True: "1 dict dup /TraySwitch true put setpagedevice"
*TraySwitch False: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *TraySwitch

*OpenUI *Duplex:  PickOne
*OrderDependency: 50.0 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None/Simplex: "
currentpagedevice /Policies get
currentpagedevice /Duplex known { 
    2 dict dup /Duplex false put
    dup /OutputFaceUp false put
} {
    1 dict dup /OutputFaceUp false put
} ifelse
1 dict dup /Policies 1 dict dup /PolicyNotFound 0 put put setpagedevice
{setpagedevice} stopped
{dup /OutputFaceUp true put setpagedevice} if
1 dict dup /Policies 4 -1 roll put setpagedevice
"
*End
*Duplex DuplexNoTumble/Duplex: "
currentpagedevice /Duplex known {
    3 dict dup /Duplex true put
    dup /OutputFaceUp false put
    dup /Tumble false put setpagedevice
} {
    1 dict dup /OutputFaceUp false put setpagedevice
} ifelse"
*End
*Duplex DuplexTumble/Duplex (Tumble): "
currentpagedevice /Duplex known { 
    3 dict dup /Duplex true put
    dup /OutputFaceUp false put
    dup /Tumble true put setpagedevice
} {
    1 dict dup /OutputFaceUp false put setpagedevice
} ifelse"
*End
*?Duplex: "save
    currentpagedevice /Duplex known {
   	currentpagedevice /Duplex get {
   	    currentpagedevice /Tumble get
       	    {(DuplexTumble)}{(DuplexNoTumble)}ifelse
   	} 
   	{(None)} ifelse
    }
    {(None)} ifelse = flush
restore
"
*End
*CloseUI: *Duplex

*OpenUI *Jog/Offset Catch:  PickOne
*OrderDependency: 90.0 AnySetup *Jog
*DefaultJog: None
*Jog None: "currentpagedevice /Jog known {1 dict dup /Jog 0 put setpagedevice} if"
*Jog DeviceDeactivation/Jog at end of job: "currentpagedevice /Jog known {1 dict dup /Jog 1 put setpagedevice} if"
*Jog EndOfSet/Jog at end of page: "currentpagedevice /Jog known {1 dict dup /Jog 3 put setpagedevice} if"
*?Jog: "
save
    currentpagedevice /Jog known {
  	[(None)(DeviceDeactivation)(DeviceDeactivation)(EndOfSet)]
  	currentpagedevice /Jog get
  	{get} stopped {pop pop (Unknown)} if 
    }
    {(None)} ifelse = flush
restore
"
*End
*CloseUI: *Jog

*% Font Information =====================
*FCacheSize 12Meg/Standard 12 MB RAM: 6MEG
*FCacheSize 16Meg/16 MB Upgrade: 6MEG
*FCacheSize 20Meg/20 MB Upgrade: 6MEG
*FCacheSize 24Meg/24 MB Upgrade: 6MEG
*FCacheSize 28Meg/28 MB Upgrade: 6MEG
*FCacheSize 32Meg/32 MB Upgrade: 6MEG
*FCacheSize 40Meg/40 MB Upgrade: 6MEG
*FCacheSize 44Meg/44 MB Upgrade: 6MEG
*FCacheSize 56Meg/56 MB Upgrade: 6MEG

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status: "initializing"
*Status: "idle"
*Status: "holding"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: Service Call"
*Status: "PrinterError: Drum&Toner Cartridge is Missing"
*Status: "PrinterError: No Toner"
*Status: "PrinterError: Left Hand Cover Open"
*Status: "PrinterError: Cabinet Left Hand Cover Open"
*Status: "PrinterError: Duplex Docking Cover Open"
*Status: "PrinterError: Sorter/MailBox Cover Open"
*Status: "PrinterError: Tray Lifter Failed"
*Status: "PrinterError: Paper Jam"
*Status: "PrinterError: Paper Jam at Fuser"
*Status: "PrinterError: Paper Jam at Registration Roller"
*Status: "PrinterError: Paper Jam at Duplex Module"
*Status: "PrinterError: Paper Jam at Duplex Tray"
*Status: "PrinterError: Paper Jam at Tray1"
*Status: "PrinterError: Paper Jam at Tray2"
*Status: "PrinterError: Paper Jam at Tray3"
*Status: "PrinterError: Paper Jam at Tray4"
*Status: "PrinterError: Paper Jam at Manual Feed Tray"
*Status: "PrinterError: Paper Jam at Sorter/MailBox"
*Status: "PrinterError: Output Tray is Full"
*Status: "PrinterError: Sorter/MailBox is Full"
*Status: "PrinterError: Tray is Missing"
*Status: "PrinterError: Any Trays are Missing"
*Status: "PrinterError: Out of Paper in All Trays"
*Status: "PrinterError: Out of Paper"
*Status: "PrinterError: Out of Paper in Maunal Feed Tray"
*Status: "PrinterError: A5 is Only Usable in Tray1"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "RemotePrinter"
*Source: "PrintServer"
*Source: "LPR"
*Source: "Internal"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Service Call"
*PrinterError: "Drum&Toner Cartridge is Missing"
*PrinterError: "No Toner"
*PrinterError: "Left Hand Cover Open"
*PrinterError: "Cabinet Left Hand Cover Open"
*PrinterError: "Duplex Docking Cover Open"
*PrinterError: "Sorter/MailBox Cover Open"
*PrinterError: "Tray Lifter Failed"
*PrinterError: "Paper Jam"
*PrinterError: "Paper Jam at Fuser"
*PrinterError: "Paper Jam at Registration Roller"
*PrinterError: "Paper Jam at Duplex Module"
*PrinterError: "Paper Jam at Duplex Tray"
*PrinterError: "Paper Jam at Tray1"
*PrinterError: "Paper Jam at Tray2"
*PrinterError: "Paper Jam at Tray3"
*PrinterError: "Paper Jam at Tray4"
*PrinterError: "Paper Jam at Manual Feed Tray"
*PrinterError: "Paper Jam at Sorter/MailBox"
*PrinterError: "Output Tray is Full"
*PrinterError: "Sorter/MailBox is Full"
*PrinterError: "Tray is Missing"
*PrinterError: "Any Trays are Missing"
*PrinterError: "Out of Paper in All Trays"
*PrinterError: "Out of Paper"
*PrinterError: "Out of Paper in Maunal Feed Tray"
*PrinterError: "A5 is Only Usable in Tray1"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi

*%  For 60 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 300 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.300dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.300dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.300dpi/53 lpi / 300 dpi: "50.0"

*% Originally produced by "bldppd42.ps" version 4.0 edit 13
*% Last Edit Date: Mar 07 1997
*% The byte count of this file should be exactly 040686 or 041902
*% depending on the filesystem it resides in.
*% end of PPD file for Able Model-PR
