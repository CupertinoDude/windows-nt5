*PPD-Adobe: "4.1"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1993 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*FormatVersion: "4.1"
*FileVersion: "1.0"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "KD_15801.PPD"
*Product: "(KODAK 1580)"
*PSVersion: "(2010.131) 42"
*ModelName: "Eastman Kodak 1580"
*NickName: "Eastman Kodak 1580"

*% === Options and Constraints =========

*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/Finisher: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot InsertSheet
*UIConstraints: *Option1 False *FoldWhen
*UIConstraints: *Option1 False *FoldType
*UIConstraints: *Option1 False *StapleWhen
*UIConstraints: *Option1 False *StapleLocation

*UIConstraints: *FoldWhen None *FoldType
*UIConstraints: *StapleWhen None *StapleLocation
*UIConstraints: *StapleWhen *Jog
*UIConstraints: *Jog *StapleWhen

*UIConstraints: *FoldType ZFold *StapleLocation SaddleStitcher
*UIConstraints: *FoldWhen None *StapleLocation SaddleStitcher

*UIConstraints: *FoldType ZFold *PageSize Letter
*UIConstraints: *FoldType ZFold *PageSize Letter.Transverse
*UIConstraints: *FoldType ZFold *PageSize 9x11
*UIConstraints: *FoldType ZFold *PageSize Legal
*UIConstraints: *FoldType ZFold *PageSize A4
*UIConstraints: *FoldType ZFold *PageRegion Letter
*UIConstraints: *FoldType ZFold *PageRegion Letter.Transverse
*UIConstraints: *FoldType ZFold *PageRegion Legal
*UIConstraints: *FoldType ZFold *PageRegion A4

*UIConstraints: *PageSize Letter *FoldType ZFold 
*UIConstraints: *PageSize Letter.Transverse *FoldType ZFold 
*UIConstraints: *PageSize 9x11 *FoldType ZFold 
*UIConstraints: *PageSize Legal *FoldType ZFold 
*UIConstraints: *PageSize A4 *FoldType ZFold
*UIConstraints: *PageRegion Letter *FoldType ZFold
*UIConstraints: *PageRegion Letter.Transverse *FoldType ZFold
*UIConstraints: *PageRegion Legal *FoldType ZFold
*UIConstraints: *PageRegion A4 *FoldType ZFold

*UIConstraints: *FoldType Saddle *PageSize Letter
*UIConstraints: *FoldType Saddle *PageSize Letter.Transverse
*UIConstraints: *FoldType Saddle *PageSize 9x11
*UIConstraints: *FoldType Saddle *PageSize Legal
*UIConstraints: *FoldType Saddle *PageSize A4
*UIConstraints: *FoldType Saddle *PageRegion Letter
*UIConstraints: *FoldType Saddle *PageRegion Letter.Transverse
*UIConstraints: *FoldType Saddle *PageRegion Legal
*UIConstraints: *FoldType Saddle *PageRegion A4

*UIConstraints: *PageSize Letter *FoldType Saddle
*UIConstraints: *PageSize Letter.Transverse *FoldType Saddle 
*UIConstraints: *PageSize 9x11 *FoldType Saddle 
*UIConstraints: *PageSize Legal *FoldType Saddle
*UIConstraints: *PageSize A4 *FoldType Saddle
*UIConstraints: *PageRegion Letter *FoldType Saddle
*UIConstraints: *PageRegion Letter.Transverse *FoldType Saddle
*UIConstraints: *PageRegion Legal *FoldType Saddle
*UIConstraints: *PageRegion A4 *FoldType Saddle


*% ==== Device Capabilities ===============
*LanguageLevel: "2"
*StartEmulator_hplj: "currentfile /hpcl statusdict /emulate get exec "
*StopEmulator_hplj: "<1B7F>0"

*FreeVM: "4926768"
*ColorDevice:  False
*DefaultColorSpace:  Gray 
*VariablePaperSize: False
*FileSystem: True 
*?FileSystem: "
  save false
   (%disk?%) 
   { currentdevparams dup /Writeable known
      { /Writeable get {pop true} if }  { pop } ifelse 
    } 10 string /IODevice resourceforall
    {(True)}{(False)} ifelse = flush
 restore"
*End

*Throughput: "70" 
*Password: "()" 
*ExitServer: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
     (WARNING: Cannot modify initial VM.) =
     (Missing or invalid password.) =
     (Please contact the author of this software.) = flush quit
     } if
"
*End
*Reset: "
 count 0 eq
 { false } { true exch startjob } ifelse
 not { 
    (WARNING: Cannot reset printer.) =
    (Missing or invalid password.) =
    (Please contact the author of this software.) = flush quit
    } if
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 406dpi
*?Resolution: "
  save
    currentpagedevice /HWResolution get
    0 get
    (          ) cvs print
    (dpi)
    = flush
  restore
"
*End

*% Halftone Information ===============
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
{abs   exch   abs   2 copy   add   1 gt   {1 sub   dup   mul   exch  
1 sub   dup   mul   add   1 sub  } {dup   mul   exch   dup   mul  
add   1 exch   sub  } ifelse  }
"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================

*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Letter.Transverse: "
    2 dict dup /PageSize [612 791] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize 9x11: "
    2 dict dup /PageSize [648 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize Tabloid: "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A3: "
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*PageSize A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*?PageSize: "
 save
   currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if 
   (Unknown) 
  6 dict
   dup [612 792] (Letter) put
   dup [612 1008] (Legal) put
   dup [648 792] (9x11) put
   dup [792 1224] (Tabloid) put
   dup [842 1190] (A3) put
   dup [595 842] (A4) put
 { exch aload pop 4 index sub abs 5 le exch 
   5 index sub abs 5 le and 
      {exch pop exit} {pop} ifelse
   } bind forall
   = flush pop pop
restore 
"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion:  PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter: "
    2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Letter.Transverse: "
    2 dict dup /PageSize [612 791] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion 9x11: "
    2 dict dup /PageSize [648 792] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Legal: "
    2 dict dup /PageSize [612 1008] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion Tabloid: "
    2 dict dup /PageSize [792 1224] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A3: "
    2 dict dup /PageSize [842 1190] put dup /ImagingBBox null put setpagedevice"
*End
*PageRegion A4: "
    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea Letter: "7.1823 8.5124 605.882 780.295 "
*ImageableArea Letter.Transverse: "7.1823 8.5124 605.882 780.295"
*ImageableArea 9x11: "7.1823 8.5124 642.768 780.295"
*ImageableArea Legal: "8.5123 7.1823 604.374 1003.12"
*ImageableArea Tabloid: "8.5124 7.1823 780.295 1218.77 "
*ImageableArea A3: "8.5124 7.1824 831.369 1184.72"
*ImageableArea A4: "7.1823 8.5124 588.857 831.369"
*?ImageableArea: "
 save
   /cvp { (                ) cvs print ( ) print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter: "612 792"
*PaperDimension Letter.Transverse: "612 791"
*PaperDimension 9x11: "648 792"
*PaperDimension Legal: "612 1008"
*PaperDimension Tabloid: "792 1224"
*PaperDimension A3: "842 1190"
*PaperDimension A4: "595 842"

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Main
*InputSlot Main/Main Supply: "
  currentpagedevice /InputAttributes get
  1 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [1] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Lower/Lower Cassette: "
  currentpagedevice /InputAttributes get
  2 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [2] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot Upper/Upper Cassette: "
  currentpagedevice /InputAttributes get
  3 get dup
  null eq {pop}
  { dup
    /InputAttributes
    1 dict dup /Priority [3] put
    put  setpagedevice
  } ifelse "
*End
*InputSlot InsertSheet/Insert Sheet Tray: "
 <</InsertSheet true>> setpagedevice
 showpage
 <</InsertSheet false>> setpagedevice"
*End
*?InputSlot: "
save
  4 dict
  dup /1 (Main) put
  dup /2 (Lower) put
  dup /3 (Upper) put
  dup /4 (InsertSheet) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*DefaultOutputBin:  Upper
*DefaultOutputOrder:  Normal

*PageStackOrder Upper: Normal
*PageStackOrder Lower: Normal

*OpenUI *Collate: Boolean
*OrderDependency: 50 AnySetup *Collate
*DefaultCollate: False
*Collate True: "1 dict dup /Collate true put setpagedevice"
*Collate False: "1 dict dup /Collate false put setpagedevice"
*?Collate: "
save
  currentpagedevice /Collate get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *Collate

*OpenUI *Duplex:  PickOne
*OrderDependency: 50 AnySetup *Duplex
*DefaultDuplex: None
*Duplex None: "1 dict dup /Duplex false put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexNoTumble: "1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble false put setpagedevice"
*End
*Duplex DuplexTumble: "1 dict dup /Duplex true put setpagedevice
       1 dict dup /Tumble true put setpagedevice"
*End
*?Duplex: "save
   currentpagedevice /Duplex get
   { currentpagedevice /Tumble get
       {(DuplexTumble)}{(DuplexNoTumble)}ifelse
   }
   { (None)} 
   ifelse = flush
restore
"
*End
*CloseUI: *Duplex

*OpenUI *MirrorPrint:  Boolean
*OrderDependency: 50 AnySetup *MirrorPrint
*DefaultMirrorPrint: False
*MirrorPrint True: "1 dict dup /MirrorPrint true put setpagedevice"
*MirrorPrint False: "1 dict dup /MirrorPrint false put setpagedevice"
*?MirrorPrint: "
save
  currentpagedevice /MirrorPrint get
  {(True)}{(False)}ifelse = flush
restore
"
*End
*CloseUI: *MirrorPrint

*OpenUI *StapleWhen:  PickOne
*OrderDependency: 50 AnySetup *StapleWhen
*DefaultStapleWhen: None
*StapleWhen None: "1 dict dup /Staple 0 put setpagedevice"
*StapleWhen EndOfSet: "1 dict dup /Staple 3 put setpagedevice"
*?StapleWhen: "
save
  [(None)(None)(None)(EndOfSet)]
  currentpagedevice /Staple get
  {get} stopped {pop pop (Unknown)} if = flush
restore
"
*End
*CloseUI: *StapleWhen
*OpenGroup: Staple

*OpenUI *StapleLocation:  PickOne
*OrderDependency: 50 AnySetup *StapleLocation
*DefaultStapleLocation: 1.Top.Left.45
*StapleLocation 1.Top.Left.45/1 Staple, Upper Left, 0 degrees: "
  1 dict dup /StapleDetails
   3 dict
     dup /Type 2 put
     dup /HeadCount 1 put
     dup /StapleLocation
      [ 1 dict dup /XAxis (Left) put dup /YAxis (Top) put
        dup /Orientation 0 put
      ] put
   put setpagedevice"
*End
*StapleLocation 2.Left.90/2 Staples, Left Side, 90 degrees: "
  1 dict dup /StapleDetails
   3 dict
     dup /Type 2 put
     dup /HeadCount 2 put
     dup /StapleLocation
      [
        1 dict dup /XAxis (Left) put dup /YAxis (OneThird) put dup /Orientation 90 put
        1 dict dup /XAxis (Left) put dup /YAxis (TwoThirds) put dup /Orientation 90 put
      ] put
   put setpagedevice"
*End
*StapleLocation 3.Left.90/3 Staples, Left Side, 90 degrees: "
  1 dict dup /StapleDetails
   3 dict
     dup /Type 2 put
     dup /HeadCount 3 put
     dup /StapleLocation
      [
        1 dict dup /XAxis (Left) put dup /YAxis (Top) put dup /Orientation 90 put
        1 dict dup /XAxis (Left) put dup /YAxis (Middle) put dup /Orientation 90 put
        1 dict dup /XAxis (Left) put dup /YAxis (Bottom) put dup /Orientation 90 put
      ] put
   put setpagedevice"
*End

*StapleLocation SaddleStitcher/Saddle Stitcher: "
  1 dict dup /StapleDetails
   3 dict
     dup /Type 2 put
     dup /HeadCount 2 put
     dup /StapleLocation
      [
        1 dict dup /XAxis (OneThird) put dup /YAxis (Middle) put dup /Orientation 0 put
        1 dict dup /XAxis (TwoThirds) put dup /YAxis (Middle) put dup /Orientation 0 put
      ] put
   put setpagedevice"
*End

*?StapleLocation: "
save
  [(Unknown)(1.Top.Left.45)(2.Left.90)(3.Left.90)]
  currentpagedevice /StapleDetails get
	dup /HeadCount get /HeadCount exch def 
  /StapleLocation get 
  HeadCount 1 eq 
  { 0 get 
    dup /XAxis get (Left) eq exch dup /YAxis get (Top) eq 
    exch /Orientation get 45 eq and and { 1 } { 0 } ifelse 
  }
  { HeadCount 2 eq 
    { dup 0 get
      dup /XAxis get (Left) eq exch dup /YAxis get (OneThird) eq 
      exch /Orientation get 90 eq and and
      exch 1 get
      dup /XAxis get (Left) eq exch dup /YAxis get (TwoThirds) eq 
      exch /Orientation get 90 eq and and 
      and { 2 } { 0 } ifelse
    }
    { HeadCount 3 eq 
      { dup 0 get 
        dup /XAxis get (Left) eq exch dup /YAxis get (Top) eq
        exch /Orientation get 90 eq and and
        exch dup 1 get
        dup /XAxis get (Left) eq exch dup /YAxis get (Middle) eq
        exch /Orientation get 90 eq and and
        exch 2 get
        dup /XAxis get (Left) eq exch dup /YAxis get (Bottom) eq
        exch /Orientation get 90 eq and and
        and and { 3 } { 0 } ifelse
 		 }
      { 0 } ifelse
    } ifelse 
  } ifelse
  get = flush
restore
"
*End
*CloseGroup: Staple
*CloseUI: *StapleLocation

*OpenUI *FoldWhen:  PickOne
*OrderDependency: 50 AnySetup *FoldWhen
*DefaultFoldWhen: None
*FoldWhen None: "1 dict dup /Fold 0 put setpagedevice"
*FoldWhen EndOfSet: "1 dict dup /Fold 3 put setpagedevice"
*?FoldWhen: "
save
  [(None)(None)(None)(EndOfSet)]
  currentpagedevice /Fold get
  {get} stopped {pop pop (Unknown)} if = flush
restore
"
*End
*CloseUI: *FoldWhen

*OpenUI *FoldType:  PickOne
*OrderDependency: 50 AnySetup *FoldType
*DefaultFoldType: ZFold
*FoldType Saddle: "1 dict
  dup /FoldDetails 2 dict
    dup /Type 1 put
    dup /FoldType (Saddle) put
  put setpagedevice"
*End
*FoldType ZFold: "1 dict
  dup /FoldDetails 2 dict
    dup /Type 1 put
    dup /FoldType (ZFold) put
  put setpagedevice"
*End

*?FoldType: "
save
  currentpagedevice /FoldDetails get
  /FoldType {get} stopped {pop pop (Unknown)} if = flush
restore
"
*End
*CloseUI: *FoldType

*OpenUI *Jog:  PickOne
*OrderDependency: 50 AnySetup *Jog
*DefaultJog: None
*Jog None: "1 dict dup /Jog 0 put setpagedevice"
*Jog EndOfSet: "1 dict dup /Jog 3 put setpagedevice"
*?Jog: "
save
  [(None)(None)(None)(EndOfSet)]
  currentpagedevice /Jog get
  {get} stopped {pop pop (Unknown)} if = flush
restore
"
*End
*CloseUI: *Jog

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Demi: Standard "(001.003S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.003S)" Standard ROM
*Font Bookman-Light: Standard "(001.003S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.003S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM

*?FontQuery: "
 save
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
        /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
      } { exit } ifelse 
   } bind loop
   (*) = flush
 restore
"
*End

*?FontList: "
save
  (*) {cvn ==} 128 string /Font resourceforall
  (*) = flush
restore
"
*End
*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ] %%)
*Status:"MISMATCH HAS OCCURRED"
*Status:"PAPER SUPPLY IS NOT AVAILABLE"
*Status:"STAPLE OPTION IS NOT POSSIBLE"
*Status:"FOLDING OPTION IS NOT POSSIBLE"
*Status:"STACKING OPTION IS NOT POSSIBLE"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "Centronics"
*Source: "DQP-Ethernet"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.406dpi/ 60 lpi / 406 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%  For 60 lpi / 406 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.60lpi.406dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.406dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.406dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.406dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.406dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.406dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.406dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.406dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.406dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.406dpi/60 lpi / 300 dpi: "60"

*%  For 53 lpi / 406 dpi  ===============================

*ColorSepScreenAngle ProcessBlack.53lpi.406dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.53lpi.406dpi/53 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.53lpi.406dpi/53 lpi / 300 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.53lpi.406dpi/53 lpi / 300 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.53lpi.406dpi/53 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.53lpi.406dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq CustomColor.53lpi.406dpi/53 lpi / 300 dpi: "53.033"
*ColorSepScreenFreq ProcessCyan.53lpi.406dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessMagenta.53lpi.406dpi/53 lpi / 300 dpi: "47.4342"
*ColorSepScreenFreq ProcessYellow.53lpi.406dpi/53 lpi / 300 dpi: "50.0"


*% Last Edit Date: Dec 20 1993
*% The byte count of this file should be exactly 020886 or 021555
*% depending on the filesystem it resides in.
*% end of PPD file for KODAK 1580
