*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% Last Edit Date: Jun 26 1995
*% Masami Maki, Seiko Instruments Inc.
*% Seiko Instruments Printer Description File
*% Seiko Instruments (R) is a registered trademark of Seiko Instruments Inc.
*% SII TM is a trademark of Seiko Instruments Inc.

*% For SII Color Laser Printer CL-1200e
*FormatVersion: "4.2"
*FileVersion: "1.0"
*PCFileName: "SKCL_ES1.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(CL-1200)"
*PSVersion: "(2013.114) 101"
*ModelName: "SII Color Laser Printer CL-1200e"
*ShortNickName: "SII CL-1200e"
*NickName: "SII Color Laser Printer CL-1200e"

*OpenGroup: InstallableOptions

*OpenUI *InstalledMemory/Printer Memory: PickOne
*DefaultInstalledMemory: 32Meg
*InstalledMemory  32Meg/ 32 Meg RAM  (1BitDepthStandard): ""
*InstalledMemory  48Meg/ 48 Meg RAM  (1BitDepth+option): ""
*InstalledMemory  64Meg/ 64 Meg RAM  (4BitDepthStandard): ""
*InstalledMemory  80Meg/ 80 Meg RAM  (4BitDepth+option): ""
*InstalledMemory  96Meg/ 96 Meg RAM  (4BitDepth+option): ""
*InstalledMemory 112Meg/112 Meg RAM  (4BitDepth+option): ""
*InstalledMemory 128Meg/128 Meg RAM  (4BitDepth+option): ""
*InstalledMemory 144Meg/144 Meg RAM  (4BitDepth+option): ""
*CloseUI: *InstalledMemory

*OpenUI *Option1/Papers: PickOne
*DefaultOption1: ALL
*Option1 ALL:		""
*Option1 JIS/International:	""
*Option1 US:		""
*CloseUI: *Option1

*CloseGroup: InstallableOptions

*% ====  Constraints =====
*% BitDepth 4 needs more than 48MB
*UIConstraints: *InstalledMemory 32Meg *BitsPerPixel 4
*UIConstraints: *InstalledMemory 48Meg *BitsPerPixel 4
*% Constrain for ISO/US paper sizes
*UIConstraints: *Option1 US *PageSize A3
*UIConstraints: *Option1 US *PageSize A4
*UIConstraints: *Option1 US *PageSize A4R
*UIConstraints: *Option1 US *PageSize A5
*UIConstraints: *Option1 US *PageSize A5R
*UIConstraints: *Option1 US *PageSize A6
*UIConstraints: *Option1 US *PageSize B4
*UIConstraints: *Option1 US *PageSize B5
*UIConstraints: *Option1 US *PageSize B5R
*UIConstraints: *Option1 US *PageSize B6
*UIConstraints: *Option1 US *PageSize B6R
*UIConstraints: *Option1 US *PageSize DP
*UIConstraints: *Option1 JIS *PageSize Tabloid
*UIConstraints: *Option1 JIS *PageSize 11x15
*UIConstraints: *Option1 JIS *PageSize 10x14
*UIConstraints: *Option1 JIS *PageSize Legal
*UIConstraints: *Option1 JIS *PageSize 8.5x13
*UIConstraints: *Option1 JIS *PageSize Letter
*UIConstraints: *Option1 JIS *PageSize 11x8.5
*UIConstraints: *Option1 JIS *PageSize 8.25x13
*UIConstraints: *Option1 JIS *PageSize 8x13
*UIConstraints: *Option1 JIS *PageSize 8x10.5
*UIConstraints: *Option1 JIS *PageSize 8x10
*UIConstraints: *Option1 JIS *PageSize Statement
*UIConstraints: *Option1 JIS *PageSize 8.5x5.5
*UIConstraints: *Option1 US *PageRegion A3
*UIConstraints: *Option1 US *PageRegion A4
*UIConstraints: *Option1 US *PageRegion A4R
*UIConstraints: *Option1 US *PageRegion A5
*UIConstraints: *Option1 US *PageRegion A5R
*UIConstraints: *Option1 US *PageRegion A6
*UIConstraints: *Option1 US *PageRegion B4
*UIConstraints: *Option1 US *PageRegion B5
*UIConstraints: *Option1 US *PageRegion B5R
*UIConstraints: *Option1 US *PageRegion B6
*UIConstraints: *Option1 US *PageRegion B6R
*UIConstraints: *Option1 US *PageRegion DP
*UIConstraints: *Option1 JIS *PageRegion Tabloid
*UIConstraints: *Option1 JIS *PageRegion 11x15
*UIConstraints: *Option1 JIS *PageRegion 10x14
*UIConstraints: *Option1 JIS *PageRegion Legal
*UIConstraints: *Option1 JIS *PageRegion 8.5x13
*UIConstraints: *Option1 JIS *PageRegion Letter
*UIConstraints: *Option1 JIS *PageRegion 11x8.5
*UIConstraints: *Option1 JIS *PageRegion 8.25x13
*UIConstraints: *Option1 JIS *PageRegion 8x13
*UIConstraints: *Option1 JIS *PageRegion 8x10.5
*UIConstraints: *Option1 JIS *PageRegion 8x10
*UIConstraints: *Option1 JIS *PageRegion Statement
*UIConstraints: *Option1 JIS *PageRegion 8.5x5.5

*% System Management ===========================
*JobPatchFile 1:"
%% This patch file was updated on 95/05/23
%% Masami Maki, Seiko Instruments Inc.
%% Seiko Instruments Printer Description File
%% Copyright 1990-1995 Seiko Instruments Incorporated
%% All Rights Reserved. 
%% Permission is granted for redistribution of this file as
%% long as this copyright notice is intact and the contents
%% of the file is not altered in any way from its original form.
<</Policies<</PageSize 1>> >>setpagedevice
userdict begin
/SKRspot
	{{abs exch abs 2 copy  add 1 gt 
		{1 sub  dup mul exch 1 sub  dup mul add 1 sub}
		{dup mul exch dup mul add 1 exch  sub}ifelse
	}}bind def
end %userdict
%% End Seiko Patch File
"
*End

*FreeVM: "3100000"
*VMOption 32Meg: "15100000"
*VMOption 48Meg: "31500000"
*VMOption 64Meg: "3100000"
*VMOption 80Meg: "19600000"
*VMOption 96Meg: "36100000"
*VMOption 112Meg: "52600000"
*VMOption 128Meg: "69100000"
*VMOption 144Meg: "85500000"

*Password: " 0 "
*ExitServer: "count 0 eq
{false}{true exch startjob}ifelse not
{
	(WARNING: Cannot modify initial VM.) =
	(Missing or invalid password.) =
	(Please contact the author of this software.) = flush quit
}if"
*End
*Reset: "count 0 eq{false}{true exch startjob}ifelse not
{
	(WARNING: Cannot reset printer.) =
	(Missing or invalid password.) =
	(Please contact the author of this software.) = flush quit
}if
systemdict/quit get exec
(WARNING : Printer Reset Failed.) = flush"
*End
*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "0"
*PrintPSErrors: True
*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Basic Device Capabilities ========================
*ColorDevice: True
*DefaultColorSpace: CMYK
*Extensions: FileSystem CMYK
*LanguageLevel: "2"
*Throughput: "5"

*FileSystem: True
*?FileSystem: "
save
	false (%disk?%)
	{currentdevparams dup/Writeable known
		{/Writeable get{pop true}if}
		{pop}ifelse
	}10 string
	/IODevice resourceforall
		{(True)}
		{(False)}ifelse = flush
restore"
*End

*DefaultResolution: 400dpi
*Resolution 400dpi:"" 
*?Resolution: "
save
	currentpagedevice/HWResolution get 0 get(          )cvs
	print(dpi)= flush
restore"
*End
*AccurateScreensSupport: True

*% === ColorModel ===============
*OpenUI *ColorModel/Color selection: PickOne
*OrderDependency: 20 Prolog *ColorModel
*DefaultColorModel:CMYK
*ColorModel CMYK/Color: "
  1 dict dup/ProcessColorModel /DeviceCMYK put setpagedevice"
*End
*ColorModel Gray/Mono: "
  1 dict dup /ProcessColorModel /DeviceGray put setpagedevice"
*End
*?ColorModel: "
  save /currentpagedevice where
  { pop currentpagedevice begin ProcessColorModel dup end
     /DeviceGray eq
         { pop (Gray) }
         { /DeviceCMYK eq
              { (CMYK) }
              { (Unknown) } ifelse
          } ifelse }
  { (Unknown) } ifelse 
  = flush restore"
*End
*CloseUI: *ColorModel

*% === BitsPerPixel ===============
*OpenUI *BitsPerPixel/Bit Depth setup: PickOne
*OrderDependency: 21 Prolog *BitsPerPixel
*DefaultBitsPerPixel:None
*BitsPerPixel None/1 bit depth: "
  1 dict dup/DeviceRenderingInfo 2 dict dup/Type 6 put
  dup/ValuesPerComponent 2 put put setpagedevice
  (B1Halftone)/Halftone findresource sethalftone
  (EP14ColCRD)/ColorRendering findresource setcolorrendering"
*End
*BitsPerPixel 4/4 bit depth: "
  1 dict dup/DeviceRenderingInfo 2 dict dup/Type 6 put
  dup/ValuesPerComponent 16 put put setpagedevice
  (B4Halftone)/Halftone findresource sethalftone
  (EP44ColCRD)/ColorRendering findresource setcolorrendering"
*End
*?BitsPerPixel:	"
  save /currentpagedevice where
  { pop currentpagedevice begin DeviceRenderingInfo begin
  ValuesPerComponent dup end end 2 eq
    { pop (None) }
	{ 16 eq
	  { (4) }
	  { (Unknown) } ifelse
	} ifelse
  }
  { (Unknown) } ifelse 
  = flush restore"
*End
*CloseUI: *BitsPerPixel

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*VariablePaperSize: False

*OpenUI *InputSlot: PickOne
*OrderDependency: 54 PageSetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/Tray 1: "
  currentpagedevice /InputAttributes get 0 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [0 1 2 3 4 5] put put
	dup /ManualFeed false put
	dup /MediaType (Normal) put
	setpagedevice
  } ifelse"
*End
*InputSlot Middle/Tray 2: "
  currentpagedevice /InputAttributes get 1 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [1 2 0 3 4 5] put put
	dup /ManualFeed false put
	dup /MediaType (Normal) put
	setpagedevice
  } ifelse"
*End
*InputSlot Lower/Tray 3: "
  currentpagedevice /InputAttributes get 2 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [2 0 1 3 4 5] put put
	dup /ManualFeed false put
	dup /MediaType (Normal) put
	setpagedevice
  } ifelse"
*End
*InputSlot ManualNormal/Manual Normal: "
  currentpagedevice /InputAttributes get 3 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [3 0 1 2 4 5] put put
	dup /ManualFeed true put
    	dup /MediaType (Normal) put
	setpagedevice
  } ifelse"
*End
*InputSlot ManualOHP/Manual OHP: "
  currentpagedevice /InputAttributes get 4 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [4 0 1 2 3 5] put put
	dup /ManualFeed true put
    dup /MediaType (OHP) put
	setpagedevice
  } ifelse"
*End
*InputSlot ManualThick/Manual Thick: "
  currentpagedevice /InputAttributes get 5 get dup null eq 
  { pop } 
  { dup length 3 add dict copy 
    dup /InputAttributes 1 dict dup /Priority [5 0 1 2 3 4] put put
	dup /ManualFeed true put
    dup /MediaType (Thick) put
	setpagedevice
  } ifelse"
*End
*?InputSlot: "
save
  6 dict
  dup /0 (Upper) put
  dup /1 (Middle) put
  dup /2 (Lower) put
  dup /3 (ManualNormal) put
  dup /4 (ManualOHP) put
  dup /5 (ManualThick) put
  currentpagedevice /InputAttributes get
  dup /Priority known
  { /Priority get 0 get (      ) cvs cvn get }
  {
    dup length 1 eq
    { {pop} forall (       ) cvs cvn get }
    { pop pop (Unknown) } ifelse
  } ifelse
  = flush
restore
"
*End
*CloseUI: *InputSlot

*OpenUI *PageSize: PickOne
*OrderDependency: 58 PageSetup *PageSize
*DefaultPageSize: A3
*PageSize A3/A3:"
  2 dict dup/PageSize[842 1190]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize A4/A4:"
  2 dict dup/PageSize[595  842]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize A4R/A4 R:"
  2 dict dup/PageSize[842  595]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize A5/A5:"
  2 dict dup/PageSize[420  595]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize A5R/A5 R:"
  2 dict dup/PageSize[595  420]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize A6/A6:"
  2 dict dup/PageSize[297  420]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize B4/B4:"
  2 dict dup/PageSize[728 1032]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize B5/B5:"
  2 dict dup/PageSize[516  728]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize B5R/B5 R:"
  2 dict dup/PageSize[728  516]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize B6/B6:"
  2 dict dup/PageSize[363  516]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize B6R/B6 R:"
  2 dict dup/PageSize[516  363]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize DP/Double Post Card:"
  2 dict dup/PageSize[420  568]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize Tabloid/11x17{Tabloid}:"
  2 dict dup/PageSize[792 1224]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 11x15/11x15:"
  2 dict dup/PageSize[792 1080]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 10x14/10x14:"
  2 dict dup/PageSize[720 1008]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize Legal/8.5x14{Legal}:"
  2 dict dup/PageSize[612 1008]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8.5x13/8.5x13:"
  2 dict dup/PageSize[612  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize Letter/8.5x11{Letter}:"
  2 dict dup/PageSize[612  792]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 11x8.5/11x8.5{Letter R}:"
  2 dict dup/PageSize[792  612]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8.25x13/8.25x13:"
  2 dict dup/PageSize[594  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8x13/8x13:"
  2 dict dup/PageSize[576  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8x10.5/8x10.5:"
  2 dict dup/PageSize[576  756]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8x10/8x10:"
  2 dict dup/PageSize[576  720]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize Statement/5.5x8.5:"
  2 dict dup/PageSize[396  612]put dup/ImagingBBox null put setpagedevice"
*End
*PageSize 8.5x5.5/8.5x5.5:"
  2 dict dup/PageSize[612  396]put dup/ImagingBBox null put setpagedevice"
*End
*?PageSize: "
  save currentpagedevice/PageSize get aload pop
  2 copy gt{exch} if
  (Unknown)
  25 dict
  dup [842 1190] (A3) put
  dup [595  842] (A4) put
  dup [842  595] (A4R) put
  dup [420  595] (A5) put
  dup [595  420] (A5R) put
  dup [297  420] (A6) put
  dup [728 1032] (B4) put
  dup [516  728] (B5) put
  dup [728  516] (B5R) put
  dup [363  516] (B6) put
  dup [516  363] (B6R) put
  dup [420  568] (DP) put
  dup [792 1224] (Tabloid) put
  dup [792 1080] (11x15) put
  dup [720 1008] (10x14) put
  dup [612 1008] (Legal) put
  dup [612  936] (8.5x13) put
  dup [612  792] (Letter) put
  dup [792  612] (11x8.5) put
  dup [594  936] (8.25x13) put
  dup [576  936] (8x13) put
  dup [576  756] (8x10.5) put
  dup [576  720] (8x10) put
  dup [396  612] (Statement) put
  dup [612  396] (8.5x5.5) put
  {exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
  {exch pop exit}{pop} ifelse
  } bind forall = flush pop pop restore"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer.  Usually used with manual feed.
*OpenUI *PageRegion: PickOne
*OrderDependency: 60 PageSetup *PageRegion
*DefaultPageRegion: A3
*PageRegion A3/A3:"
  2 dict dup/PageSize[842 1190]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion A4/A4:"
  2 dict dup/PageSize[595  842]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion A4R/A4 R:"
  2 dict dup/PageSize[842  595]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion A5/A5:"
  2 dict dup/PageSize[420  595]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion A5R/A5 R:"
  2 dict dup/PageSize[595  420]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion A6/A6:"
  2 dict dup/PageSize[297  420]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion B4/B4:"
  2 dict dup/PageSize[728 1032]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion B5/B5:"
  2 dict dup/PageSize[516  728]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion B5R/B5 R:"
  2 dict dup/PageSize[728  516]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion B6/B6:"
  2 dict dup/PageSize[363  516]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion B6R/B6 R:"
  2 dict dup/PageSize[516  363]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion DP/Double Post Card:"
  2 dict dup/PageSize[420  568]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion Tabloid/11x17{Tabloid}:"
  2 dict dup/PageSize[792 1224]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 11x15/11x15:"
  2 dict dup/PageSize[792 1080]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 10x14/10x14:"
  2 dict dup/PageSize[720 1008]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion Legal/8.5x14{Legal}:"
  2 dict dup/PageSize[612 1008]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8.5x13/8.5x13:"
  2 dict dup/PageSize[612  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion Letter/8.5x11{Letter}:"
  2 dict dup/PageSize[612  792]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 11x8.5/11x8.5{Letter R}:"
  2 dict dup/PageSize[792  612]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8.25x13/8.25x13:"
  2 dict dup/PageSize[594  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8x13/8x13:"
  2 dict dup/PageSize[576  936]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8x10.5/8x10.5:"
  2 dict dup/PageSize[576  756]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8x10/8x10:"
  2 dict dup/PageSize[576  720]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion Statement/5.5x8.5:"
  2 dict dup/PageSize[396  612]put dup/ImagingBBox null put setpagedevice"
*End
*PageRegion 8.5x5.5/8.5x5.5:"
  2 dict dup/PageSize[612  396]put dup/ImagingBBox null put setpagedevice"
*End
*CloseUI: *PageRegion

*DefaultImageableArea: A3
*ImageableArea A3/A3:					"5.75998 11.61 835.20 1176.21"
*ImageableArea A4/A4:					"5.76001 11.52 587.52  827.46"
*ImageableArea A4R/A4 R:				"5.75998 11.52 835.20  580.86"
*ImageableArea A5/A5:					"5.76001 11.52 408.96  580.86"
*ImageableArea A5R/A5 R:				"5.76001 11.52 587.52  405.18"
*ImageableArea A6/A6:					"5.76001 11.52 288.00  405.18"
*ImageableArea B4/B4:					"5.75998 11.61 720.00 1017.45"
*ImageableArea B5/B5:					"5.76001 11.52 506.88  714.06"
*ImageableArea B5R/B5 R:				"5.75998 11.61 720.00  501.57"
*ImageableArea B6/B6:					"5.75999 11.61 357.12  501.57"
*ImageableArea B6R/B6 R:				"5.76001 11.61 506.88  348.57"
*ImageableArea DP/Double Post Card:		"5.76001 11.61 408.96  552.69"
*ImageableArea Tabloid/11x17{Tabloid}:	"5.76001 11.61 783.36 1209.69"
*ImageableArea 11x15/11x15:				"5.76001 11.61 783.36 1065.69"
*ImageableArea 10x14/10x14:				"5.75998 11.61 714.24  993.69"
*ImageableArea Legal/8.5x14{Legal}:		"5.75998 11.61 604.80  993.69"
*ImageableArea 8.5x13/8.5x13:			"5.75998 11.61 604.80  921.69"
*ImageableArea Letter/8.5x11{Letter}:	"5.75998 11.61 604.80  777.69"
*ImageableArea 11x8.5/11x8.5{Letter R}:	"5.76001 11.61 783.36  597.69"
*ImageableArea 8.25x13/8.25x13:			"5.76001 11.61 587.52  921.69"
*ImageableArea 8x13/8x13:				"5.76001 11.61 570.24  921.69"
*ImageableArea 8x10.5/8x10.5:			"5.76001 11.61 570.24  741.69"
*ImageableArea 8x10/8x10:				"5.76001 11.61 570.24  705.69"
*ImageableArea Statement/5.5x8.5:		"5.76001 11.61 385.92  597.69"
*ImageableArea 8.5x5.5/8.5x5.5:			"5.75998 11.61 604.80  381.69"
*?ImageableArea: "
  save
  /cvp{(                ) cvs print ( ) print} bind def
  /upperright{10000 mul floor 10000 div} bind def
  /lowerleft{10000 mul ceiling 10000 div} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2
  {lowerleft cvp} repeat
  exch 2
  {upperright cvp} repeat
  flush restore"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: A3
*PaperDimension A3/A3:					"842 1190"
*PaperDimension A4/A4:					"595  842"
*PaperDimension A4R/A4 R:				"842  595"
*PaperDimension A5/A5:					"420  595"
*PaperDimension A5R/A5 R:				"595  420"
*PaperDimension A6/A6:					"297  420"
*PaperDimension B4/B4:					"728 1032"
*PaperDimension B5/B5:					"516  728"
*PaperDimension B5R/B5 R:				"728  516"
*PaperDimension B6/B6:					"363  516"
*PaperDimension B6R/B6 R:				"516  363"
*PaperDimension DP/Double Post Card:	"420  568"
*PaperDimension Tabloid/11x17{Tabloid}:	"792 1224"
*PaperDimension 11x15/11x15:			"792 1080"
*PaperDimension 10x14/10x14:			"720 1008"
*PaperDimension Legal/8.5x14{Legal}:	"612 1008"
*PaperDimension 8.5x13/8.5x13:			"612  936"
*PaperDimension Letter/8.5x11{Letter}:	"612  792"
*PaperDimension 11x8.5/11x8.5{Letter R}:"792  612"
*PaperDimension 8.25x13/8.25x13:		"594  936"
*PaperDimension 8x13/8x13:				"576  936"
*PaperDimension 8x10.5/8x10.5:			"576  756"
*PaperDimension 8x10/8x10:				"576  720"
*PaperDimension Statement/5.5x8.5:		"396  612"
*PaperDimension 8.5x5.5/8.5x5.5:		"612  396"

*RequiresPageRegion All: False

*% Halftone Information =============
*ScreenAngle : "45"
*ScreenFreq : "60"
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}"
*DefaultTransfer: Null
*Transfer Null: "{}"
*Transfer Null.Inverse: "{1 exch sub}"
*Transfer Normalized: "{.6 exp} "
*Transfer Normalized.Inverse: "{1 exch sub}"

*% Font Information =====================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard " (001.006S) " Standard
*Font AvantGarde-BookOblique: Standard " (001.006S) " Standard
*Font AvantGarde-Demi: Standard " (001.007S) " Standard
*Font AvantGarde-DemiOblique: Standard " (001.007S) " Standard
*Font Bookman-Demi: Standard " (001.004S) " Standard
*Font Bookman-DemiItalic: Standard " (001.004S) " Standard
*Font Bookman-Light: Standard " (001.004S) " Standard
*Font Bookman-LightItalic: Standard " (001.004S) " Standard
*Font Courier: Standard " (002.004S) " Standard
*Font Courier-Bold: Standard " (002.004S) " Standard
*Font Courier-BoldOblique: Standard " (002.004S) " Standard
*Font Courier-Oblique: Standard " (002.004S) " Standard
*Font Helvetica: Standard " (001.006S) " Standard
*Font Helvetica-Bold: Standard " (001.007S) " Standard
*Font Helvetica-BoldOblique: Standard " (001.007S) " Standard
*Font Helvetica-Oblique: Standard " (001.006S) " Standard
*Font Helvetica-Condensed: Standard " (001.001) " Standard
*Font Helvetica-Condensed-Bold: Standard " (001.002) " Standard
*Font Helvetica-Condensed-Oblique: Standard " (001.001) " Standard
*Font Helvetica-Condensed-BoldObl: Standard " (001.002) " Standard
*Font Helvetica-Narrow: Standard " (001.006S) " Standard
*Font Helvetica-Narrow-Bold: Standard " (001.007S) " Standard
*Font Helvetica-Narrow-BoldOblique: Standard " (001.007S) " Standard
*Font Helvetica-Narrow-Oblique: Standard " (001.006S) " Standard
*Font NewCenturySchlbk-Bold: Standard " (001.009S) " Standard
*Font NewCenturySchlbk-BoldItalic: Standard " (001.007S) " Standard
*Font NewCenturySchlbk-Italic: Standard " (001.006S) " Standard
*Font NewCenturySchlbk-Roman: Standard " (001.007S) " Standard
*Font Palatino-Bold: Standard " (001.005S) " Standard
*Font Palatino-BoldItalic: Standard " (001.005S) " Standard
*Font Palatino-Italic: Standard " (001.005S) " Standard
*Font Palatino-Roman: Standard " (001.005S) " Standard
*Font Symbol: Special " (001.007S) " Special
*Font Times-Bold: Standard " (001.007S) " Standard
*Font Times-BoldItalic: Standard " (001.009S) " Standard
*Font Times-Italic: Standard " (001.007S) " Standard
*Font Times-Roman: Standard " (001.007S) " Standard
*Font ZapfChancery-MediumItalic: Standard " (001.007S) " Standard
*Font ZapfDingbats: Special " (001.004S) " Special

*?FontQuery: "
save
  /str 100 string dup 0 (fonts/) putinterval def
  {count 1 gt
    {exch dup str 6 94 getinterval cvs(/)print dup print(:)print exch
     FontDirectory
     exch known
     {pop(Yes)}
     {length 6 add str 0 3 -1 roll getinterval mark exch status
      {cleartomark(Yes)}{cleartomark(No)}ifelse
     }ifelse =
    }{exit}ifelse
  } bind loop
  (*) = flush
restore"
*End

*?FontList: "
save
	FontDirectory{pop ==}bind forall
	flush
	/filenameforall where
	{pop(fonts/*)
		{dup length 6 sub 6 exch getinterval cvn ==} bind 128 string
		filenameforall flush
	} if
	(*) = flush
restore"
*End

*% Printer Messages (verbatim from printer):
*Message: "     %%[ exitserver: permanent state may be changed ]%%"
*Message: "     %%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: " \ FontName \ not found, using Courier"

*% Status (format: %%[status: <one of these> ]%%)
*Status: "busy"
*Status: "holding"/Printer Offline
*Status: "idle"
*Status: "waiting"
*Status: "printing"
*Status: "warming up"
*Status: "PrinterError: Out of toner K"
*Status: "PrinterError: Out of toner Y"
*Status: "PrinterError: Out of toner M"
*Status: "PrinterError: Out of toner C"
*Status: "PrinterError: out of Oil"
*Status: "PrinterError: Waste full"
*Status: "PrinterError: No KeyCounter"
*Status: "PrinterError: out of paper 1"
*Status: "PrinterError: out of paper 2"
*Status: "PrinterError: out of paper 3"
*Status: "PrinterError: Door open"
*Status: "PrinterError: paper jam"
*Status: "PrinterError: Engine SCC BREAK"
*Status: "PrinterError: Engine other error 14"
*Status: "PrinterError: Engine other error 15"
*Status: "PrinterError: paper Size Error"
*Status: "PrinterError: paper misfeed"
*Status: "PrinterError: service call"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Out of toner K"
*PrinterError: "Out of toner Y"
*PrinterError: "Out of toner M"
*PrinterError: "Out of toner C"
*PrinterError: "out of Oil"
*PrinterError: "Waste full"
*PrinterError: "No KeyCounter"
*PrinterError: "out of paper 1"
*PrinterError: "out of paper 2"
*PrinterError: "out of paper 3"
*PrinterError: "Door open"
*PrinterError: "paper jam"
*PrinterError: "Engine SCC BREAK"
*PrinterError: "Engine other error 14"
*PrinterError: "Engine other error 15"
*PrinterError: "paper Size Error"
*PrinterError: "paper misfeed"
*PrinterError: "service call"

*%DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information =====================
*DefaultColorSep: ProcessBlack.60lpi.400dpi/Aligned 60 LPI

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*ColorSepScreenAngle ProcessBlack.60lpi.400dpi/Aligned 60 LPI:  "45"
*ColorSepScreenAngle CustomColor.60lpi.400dpi/Aligned 60 LPI:   "45"
*ColorSepScreenAngle ProcessCyan.60lpi.400dpi/Aligned 60 LPI:   "45"
*ColorSepScreenAngle ProcessMagenta.60lpi.400dpi/Aligned 60 LPI: "45"
*ColorSepScreenAngle ProcessYellow.60lpi.400dpi/Aligned 60 LPI: "45"

*ColorSepScreenFreq ProcessBlack.60lpi.400dpi/Aligned 60 LPI:   "60"
*ColorSepScreenFreq CustomColor.60lpi.400dpi/Aligned 60 LPI:    "60"
*ColorSepScreenFreq ProcessCyan.60lpi.400dpi/Aligned 60 LPI:    "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.400dpi/Aligned 60 LPI: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.400dpi/Aligned 60 LPI:  "60"

*ColorSepScreenProc ProcessBlack.60lpi.400dpi/Aligned 60 LPI:   "SKRspot"
*ColorSepScreenProc CustomColor.60lpi.400dpi/Aligned 60 LPI:    "SKRspot"
*ColorSepScreenProc ProcessCyan.60lpi.400dpi/Aligned 60 LPI:    "SKRspot"
*ColorSepScreenProc ProcessMagenta.60lpi.400dpi/Aligned 60 LPI: "SKRspot"
*ColorSepScreenProc ProcessYellow.60lpi.400dpi/Aligned 60 LPI:  "SKRspot"

*ColorSepTransfer ProcessBlack.60lpi.400dpi/Aligned 60 LPI:     "{.6 exp}"
*ColorSepTransfer CustomColor.60lpi.400dpi/Aligned 60 LPI:      "{.6 exp}"
*ColorSepTransfer ProcessCyan.60lpi.400dpi/Aligned 60 LPI:      "{.6 exp}"
*ColorSepTransfer ProcessMagenta.60lpi.400dpi/Aligned 60 LPI: "{.6 exp}"
*ColorSepTransfer ProcessYellow.60lpi.400dpi/Aligned 60 LPI: "{.6 exp}"

*% For "SII Color Laser Printer CL-1200" version 2013.114
*% The byte count of this file should be exactly 027102 or 027876
*% depending on the filesystem it resides in.
*% end of PPD file for SII Color Laser Printer CL-1200
