*PPD-Adobe: "4.3"
*% ==========================================================
*% Printer Description File for C7400(PS) (Windows2000)
*% Copyright 2000 Oki Data Corporation
*% Date: Jan 17, 2001 Edt: 79k
*% Note)
*%
*% ==========================================================
*FormatVersion: "4.3"
*FileVersion: "1.6"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "OK7400U1.PPD"
*Product: "(C7400)"
*PSVersion: "(3011.103) 66"
*Manufacturer: "Oki"
*ModelName: "OKI C7400"
*ShortNickName: "OKI C7400"
*NickName: "OKI C7400"

*% _____ Options and Constraints _____
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *OKOptionTray/Additional Input Trays: PickOne
*DefaultOKOptionTray: 0
*OKOptionTray 0/None: ""
*OKOptionTray 1/1 Optional Tray: ""
*OKOptionTray 2/2 Optional Trays: ""
*?OKOptionTray: "
 save
 currentpagedevice /InputAttributes get begin
 2 where {pop (2)}{
 1 where {pop (1)}{
 0 where {pop (0)}{(Unknown)}ifelse
 }ifelse
 }ifelse
 end = flush
 restore"
*End
*CloseUI: *OKOptionTray

*OpenUI *OKOptionDuplex/Duplex: Boolean
*DefaultOKOptionDuplex: False
*OKOptionDuplex False/Not Installed: ""
*OKOptionDuplex True/Installed: ""
*?OKOptionDuplex: "
 save
 currentpagedevice /Duplex 2 copy known{
 get (<<) cvx exec /Duplex true (>>) cvx exec setpagedevice
 currentpagedevice /Duplex get {(True)}{(False)}ifelse exch
 (<<) cvx exec /Duplex 3 -1 roll (>>) cvx exec setpagedevice
 }{pop pop (False)}ifelse = flush
 restore"
*End
*CloseUI: *OKOptionDuplex

*OpenUI *OKHDD/Hard Disk: Boolean
*DefaultOKHDD: False
*OKHDD False/Not Installed: ""
*OKHDD True/Installed: ""
*?OKHDD: "
 save false
 (%disk?%)
 {
 currentdevparams dup /Writeable known{
 /Writeable get {pop true exit}if
 }{pop}ifelse 
 } 10 string /IODevice resourceforall
 {(True)}{(False)}ifelse = flush
 restore"
*End
*CloseUI: *OKHDD

*OpenUI *InstalledMemory/Memory Configuration: PickOne
*DefaultInstalledMemory: 128MB
*InstalledMemory 64MB/64 MB RAM: ""
*InstalledMemory 128MB/128 MB: ""
*InstalledMemory 192MB/192 MB: ""
*InstalledMemory 256MB/256 MB: ""
*InstalledMemory 320MB/320 MB: ""
*InstalledMemory 384MB/384 MB: ""
*InstalledMemory 448MB/448 MB: ""
*InstalledMemory 512MB/512 MB: ""
*InstalledMemory 576MB/576 MB: ""
*InstalledMemory 640MB/640 MB: ""
*InstalledMemory 704MB/704 MB: ""
*InstalledMemory 768MB/768 MB: ""
*InstalledMemory 832MB/832 MB: ""
*InstalledMemory 896MB/896 MB: ""
*InstalledMemory 1024MB/1024 MB: ""
*?InstalledMemory : "
 save
 currentsystemparams /InstalledRam get
 1024 idiv 1024 idiv 20 string cvs print (MB) = flush
 restore"
*End
*CloseUI: *InstalledMemory
*CloseGroup: InstallableOptions

*%----PaperSize selections limit ...
*%----Tray selections-----
*UIConstraints: *OKOptionTray 0 *InputSlot Lower
*UIConstraints: *InputSlot Lower *OKOptionTray 0

*UIConstraints: *OKOptionTray 0 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *OKOptionTray 0
*UIConstraints: *OKOptionTray 1 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *OKOptionTray 1

*%----StandardTray selections-----
*UIConstraints: *PageSize Env9 *InputSlot Upper
*UIConstraints: *PageRegion Env9 *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize Env9
*UIConstraints: *InputSlot Upper *PageRegion Env9

*UIConstraints: *PageSize Env10 *InputSlot Upper
*UIConstraints: *PageRegion Env10 *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize Env10
*UIConstraints: *InputSlot Upper *PageRegion Env10

*UIConstraints: *PageSize EnvMonarch *InputSlot Upper
*UIConstraints: *PageRegion EnvMonarch *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize EnvMonarch
*UIConstraints: *InputSlot Upper *PageRegion EnvMonarch

*UIConstraints: *PageSize EnvDL *InputSlot Upper
*UIConstraints: *PageRegion EnvDL *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize EnvDL
*UIConstraints: *InputSlot Upper *PageRegion EnvDL

*UIConstraints: *PageSize EnvC5 *InputSlot Upper
*UIConstraints: *PageRegion EnvC5 *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize EnvC5
*UIConstraints: *InputSlot Upper *PageRegion EnvC5

*UIConstraints: *PageSize EnvC4 *InputSlot Upper
*UIConstraints: *PageRegion EnvC4 *InputSlot Upper
*UIConstraints: *InputSlot Upper *PageSize EnvC4
*UIConstraints: *InputSlot Upper *PageRegion EnvC4

*%----2ndTray selections-----
*UIConstraints: *PageSize A6 *InputSlot Lower
*UIConstraints: *PageRegion A6 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize A6
*UIConstraints: *InputSlot Lower *PageRegion A6 

*UIConstraints: *PageSize Env9 *InputSlot Lower
*UIConstraints: *PageRegion Env9 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize Env9
*UIConstraints: *InputSlot Lower *PageRegion Env9

*UIConstraints: *PageSize Env10 *InputSlot Lower
*UIConstraints: *PageRegion Env10 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize Env10
*UIConstraints: *InputSlot Lower *PageRegion Env10

*UIConstraints: *PageSize EnvMonarch *InputSlot Lower
*UIConstraints: *PageRegion EnvMonarch *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize EnvMonarch
*UIConstraints: *InputSlot Lower *PageRegion EnvMonarch

*UIConstraints: *PageSize EnvDL *InputSlot Lower
*UIConstraints: *PageRegion EnvDL *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize EnvDL
*UIConstraints: *InputSlot Lower *PageRegion EnvDL

*UIConstraints: *PageSize EnvC5 *InputSlot Lower
*UIConstraints: *PageRegion EnvC5 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize EnvC5
*UIConstraints: *InputSlot Lower *PageRegion EnvC5

*UIConstraints: *PageSize EnvC4 *InputSlot Lower
*UIConstraints: *PageRegion EnvC4 *InputSlot Lower
*UIConstraints: *InputSlot Lower *PageSize EnvC4
*UIConstraints: *InputSlot Lower *PageRegion EnvC4

*%----3rdTray selections-----
*UIConstraints: *PageSize A6 *InputSlot Tray3
*UIConstraints: *PageRegion A6 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize A6
*UIConstraints: *InputSlot Tray3 *PageRegion A6 

*UIConstraints: *PageSize Env9 *InputSlot Tray3
*UIConstraints: *PageRegion Env9 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize Env9
*UIConstraints: *InputSlot Tray3 *PageRegion Env9

*UIConstraints: *PageSize Env10 *InputSlot Tray3
*UIConstraints: *PageRegion Env10 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize Env10
*UIConstraints: *InputSlot Tray3 *PageRegion Env10

*UIConstraints: *PageSize EnvMonarch *InputSlot Tray3
*UIConstraints: *PageRegion EnvMonarch *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize EnvMonarch
*UIConstraints: *InputSlot Tray3 *PageRegion EnvMonarch

*UIConstraints: *PageSize EnvDL *InputSlot Tray3
*UIConstraints: *PageRegion EnvDL *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize EnvDL
*UIConstraints: *InputSlot Tray3 *PageRegion EnvDL

*UIConstraints: *PageSize EnvC5 *InputSlot Tray3
*UIConstraints: *PageRegion EnvC5 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize EnvC5
*UIConstraints: *InputSlot Tray3 *PageRegion EnvC5

*UIConstraints: *PageSize EnvC4 *InputSlot Tray3
*UIConstraints: *PageRegion EnvC4 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *PageSize EnvC4
*UIConstraints: *InputSlot Tray3 *PageRegion EnvC4

*%----Multi-Purpose selections-----
*UIConstraints: *InputSlot Front *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *InputSlot Front

*UIConstraints: *InputSlot Front *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *InputSlot Front

*%----ManualFeed selections-----
*UIConstraints: *InputSlot ManualFeed *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *InputSlot ManualFeed

*UIConstraints: *InputSlot ManualFeed *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *InputSlot ManualFeed

*%----Duplex selections-----
*UIConstraints: *PageSize A6 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion A6 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize A6
*UIConstraints: *Duplex DuplexNoTumble *PageRegion A6 

*UIConstraints: *PageSize Env9 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion Env9 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize Env9
*UIConstraints: *Duplex DuplexNoTumble *PageRegion Env9

*UIConstraints: *PageSize Env10 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize Env10
*UIConstraints: *Duplex DuplexNoTumble *PageRegion Env10

*UIConstraints: *PageSize EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvMonarch

*UIConstraints: *PageSize EnvDL *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvDL
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvDL

*UIConstraints: *PageSize EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvC5

*UIConstraints: *PageSize EnvC4 *Duplex DuplexNoTumble
*UIConstraints: *PageRegion EnvC4 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *PageSize EnvC4
*UIConstraints: *Duplex DuplexNoTumble *PageRegion EnvC4

*UIConstraints: *PageSize A6 *Duplex DuplexTumble
*UIConstraints: *PageRegion A6 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize A6
*UIConstraints: *Duplex DuplexTumble *PageRegion A6 

*UIConstraints: *PageSize Env9 *Duplex DuplexTumble
*UIConstraints: *PageRegion Env9 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize Env9
*UIConstraints: *Duplex DuplexTumble *PageRegion Env9

*UIConstraints: *PageSize Env10 *Duplex DuplexTumble
*UIConstraints: *PageRegion Env10 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize Env10
*UIConstraints: *Duplex DuplexTumble *PageRegion Env10

*UIConstraints: *PageSize EnvMonarch *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvMonarch *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize EnvMonarch
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvMonarch

*UIConstraints: *PageSize EnvDL *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvDL *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize EnvDL
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvDL

*UIConstraints: *PageSize EnvC5 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvC5 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize EnvC5
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvC5

*UIConstraints: *PageSize EnvC4 *Duplex DuplexTumble
*UIConstraints: *PageRegion EnvC4 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *PageSize EnvC4
*UIConstraints: *Duplex DuplexTumble *PageRegion EnvC4

*%----Mediatype selections limit ...
*%----Tray selections & duplex selections-----
*UIConstraints: *MediaType Labels1 *InputSlot Upper
*UIConstraints: *InputSlot Upper *MediaType Labels1

*UIConstraints: *MediaType Labels2 *InputSlot Upper
*UIConstraints: *InputSlot Upper *MediaType Labels2

*UIConstraints: *MediaType Labels1 *InputSlot Lower
*UIConstraints: *InputSlot Lower *MediaType Labels1

*UIConstraints: *MediaType Labels2 *InputSlot Lower
*UIConstraints: *InputSlot Lower *MediaType Labels2

*UIConstraints: *MediaType Transparency *InputSlot Lower
*UIConstraints: *InputSlot Lower *MediaType Transparency

*UIConstraints: *MediaType Labels1 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *MediaType Labels1

*UIConstraints: *MediaType Labels2 *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *MediaType Labels2

*UIConstraints: *MediaType Transparency *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *MediaType Transparency

*UIConstraints: *MediaType Labels1 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *MediaType Labels1

*UIConstraints: *MediaType Labels2 *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *MediaType Labels2

*UIConstraints: *MediaType Transparency *Duplex DuplexNoTumble
*UIConstraints: *Duplex DuplexNoTumble *MediaType Transparency

*UIConstraints: *MediaType Labels1 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *MediaType Labels1

*UIConstraints: *MediaType Labels2 *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *MediaType Labels2

*UIConstraints: *MediaType Transparency *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexTumble *MediaType Transparency

*%----Custom Paper selections limit 
*NonUIConstraints: *CustomPageSize True *InputSlot Upper
*NonUIConstraints: *InputSlot Upper *CustomPageSize True

*NonUIConstraints: *CustomPageSize True *InputSlot Lower
*NonUIConstraints: *InputSlot Lower *CustomPageSize True

*NonUIConstraints: *CustomPageSize True *InputSlot Tray3
*NonUIConstraints: *InputSlot Tray3 *CustomPageSize True

*NonUIConstraints: *CustomPageSize True *Duplex DuplexNoTumble
*NonUIConstraints: *Duplex DuplexNoTumble *CustomPageSize True

*NonUIConstraints: *CustomPageSize True *Duplex DuplexTumble
*NonUIConstraints: *Duplex DuplexTumble *CustomPageSize True

*%----Device Option ----
*UIConstraints: *OKOptionDuplex False *Duplex DuplexNoTumble
*UIConstraints: *OKOptionDuplex False *Duplex DuplexTumble
*UIConstraints: *Duplex DuplexNoTumble *OKOptionDuplex False
*UIConstraints: *Duplex DuplexTumble *OKOptionDuplex False

*% _____ Device Capabilities _____
*ColorDevice: True
*DefaultColorSpace: CMYK
*LanguageLevel: "3"
*Protocols: PJL TBCP
*JCLBegin: "<1B>%-12345X"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ <0A>"
*Emulators: hplj
*StartEmulator_hplj: "<1B>%-12345X@PJL ENTER LANGUAGE=PCL<0A>"
*StopEmulator_hplj: "<1B>%-12345X"

*% _____ Memory Configuration(VM Size) _____
*FreeVM: "4864000"
*VMOption 64MB/Total RAM 64 MB: "4864000"
*VMOption 128MB/Total RAM 128 MB: "10696704"
*VMOption 192MB/Total RAM 192 MB: "17119232"
*VMOption 256MB/Total RAM 256 MB: "23697408"
*VMOption 320MB/Total RAM 320 MB: "29906944"
*VMOption 384MB/Total RAM 384 MB: "36542464"
*VMOption 448MB/Total RAM 448 MB: "43177984"
*VMOption 512MB/Total RAM 512 MB: "46831616"
*VMOption 576MB/Total RAM 576 MB: "53467136"
*VMOption 640MB/Total RAM 640 MB: "59267072"
*VMOption 704MB/Total RAM 704 MB: "65828864"
*VMOption 768MB/Total RAM 768 MB: "72464384"
*VMOption 832MB/Total RAM 832 MB: "79099904"
*VMOption 896MB/Total RAM 896 MB: "85735424"
*VMOption 1024MB/Total RAM 1024 MB: "98957312"

*% _____ Memory Configuration(FontCache Size) _____
*FCacheSize 64MB:1022355
*FCacheSize 128MB:1895280
*FCacheSize 192MB:2862600
*FCacheSize 256MB:3853500
*FCacheSize 320MB:4789350
*FCacheSize 384MB:5788125
*FCacheSize 448MB:6786900
*FCacheSize 512MB:7337400
*FCacheSize 576MB:8336160
*FCacheSize 640MB:9209100
*FCacheSize 704MB:10200015
*FCacheSize 768MB:11198775
*FCacheSize 832MB:12197550
*FCacheSize 896MB:13196310
*FCacheSize 1024MB:15185985

*TTRasterizer: Type42
*?TTRasterizer: "
 save
 42 /FontType resourcestatus
 {pop pop (Type42)}{(No Type42)}ifelse
 = flush restore"
*End

*Throughput: "12"
*Password: "()" 
*ExitServer: "
 count 0 eq {false}{true exch startjob}ifelse
 not{ 
 (WARNING: Cannot modify initial VM.) =
 (Missing or invalid password.) =
 (Please contact the author of this software.) = flush quit
 } if"
*End

*Reset: "
 count 0 eq {false}{true exch startjob true}ifelse
 not{ 
 (WARNING: Cannot reset printer.) =
 (Missing or invalid password.) =
 (Please contact the author of this software.) = flush
 }{
 systemdict /quit get exec
 (WARNING : Printer Reset Failed.) = flush
 }ifelse"
*End

*% _____ Resolution ____________________________________
*OpenUI *Resolution/Resolution: PickOne
*OrderDependency: 65.0 DocumentSetup *Resolution
*DefaultResolution: 1200x1200dpi
*Resolution 1200x1200dpi/1200 dpi: "
(<<) cvx exec /HWResolution [1200 1200] (>>) cvx exec setpagedevice"
*End
*Resolution 600x600dpi/600 dpi: "
(<<) cvx exec /HWResolution [600 600] (>>) cvx exec setpagedevice"
*End
*?Resolution: "
 save
 currentpagedevice /HWResolution get
 dup 0 get cvi 20 string cvs print (x) print
 1 get cvi 20 string cvs print (dpi) = flush
 restore"
*End
*CloseUI: *Resolution

*% ===================================
*% Duplexer definitions
*% ===================================
*OpenUI *Duplex/2-Sided Printing: PickOne
*OrderDependency: 95.0 DocumentSetup *Duplex
*DefaultDuplex: None
*Duplex None/Off: "
 (<<) cvx exec
 /Duplex false /Tumble false
 /Policies (<<) cvx exec /Duplex 2 (>>) cvx exec
 (>>) cvx exec setpagedevice"
*End
*Duplex DuplexNoTumble/Long-Edge binding: "
 (<<) cvx exec
 /Duplex statusdict /papertray 2 copy known{get exec 4 ne}{pop pop false}ifelse
 /Tumble false
 /Policies (<<) cvx exec /Duplex 2 (>>) cvx exec
 (>>) cvx exec setpagedevice
% currentpagedevice /ManualFeed get{
% (<<) cvx exec /ManualFeedTimeout 0 (>>) cvx exec setpagedevice}if
"
*End
*Duplex DuplexTumble/Short-Edge binding: "
 (<<) cvx exec
 /Duplex statusdict /papertray 2 copy known{get exec 4 ne}{pop pop false}ifelse
 /Tumble true
 /Policies (<<) cvx exec /Duplex 2 (>>) cvx exec
 (>>) cvx exec setpagedevice
% currentpagedevice /ManualFeed get{
% (<<) cvx exec /ManualFeedTimeout 0 (>>) cvx exec setpagedevice}if
"
*End
*?Duplex: "
 save
 currentpagedevice dup /Duplex known{
 dup /Duplex get{
 /Tumble get{(DuplexTumble)}{(DuplexNoTumble)}ifelse
 }{pop (None)}ifelse
 }{pop (None)}ifelse = flush
 restore"
*End
*CloseUI: *Duplex

*% _____ Job Patch File _____
*JobPatchFile 0: "

%%BeginResource: file OKI Default Color Setting 1.0 0
/OK_Jp mark{
{(<<) cvx exec /NumCopies null (>>) cvx exec setpagedevice}stopped {pop}if
globaldict /OK@_Control 1 put
/OK@MPT_Set{
 7 dict begin
 /OK_PSZ exch def /OK_LE exch def /OK_MT exch def
 statusdict /papertray 2 copy known{get exec}{4}ifelse 4 eq
 currentpagedevice /ManualFeed get or{
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA dup 3 get dup length dict copy 3 exch
 dup /PageSize OK_PSZ put
 dup /LeadingEdge OK_LE put
 dup /MediaType [(Plain) (Envelope)] OK_MT get put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice 
 }if
 end
}def
/version (3010.010) def
}stopped
 { {counttomark {pop}repeat pop /OK_Jp eq{exit}if}loop }{pop pop}ifelse
%%EndResource

%%BeginResource: file OKI Auto Rendering 1.4 0
%-------------------------------------------------
%% OKI Auto Rendering ver 1.4
%%    Date: Nov 28, 2000  Edt: 50
%-------------------------------------------------

globaldict /OK_Jp known not{
/OK_Jp mark{
userdict begin
/eoeoclip {eoclip}bind def
/imagemask load /OK_Org_imagemask exch def
/image load /OK_Org_image exch def
/colorimage load /OK_Org_colorimage exch def
/show   load /OK_show exch def
/ashow    load /OK_ashow exch def
/widthshow  load /OK_widthshow exch def
/awidthshow load /OK_awidthshow exch def
/xshow    load /OK_xshow exch def
/xyshow   load /OK_xyshow exch def
/yshow    load /OK_yshow exch def
/glyphshow  load /OK_glyphshow exch def
/cshow    load /OK_cshow exch def
/kshow    load /OK_kshow exch def
/fill   load /OK_fill exch def
/eofill   load /OK_eofill exch def
/stroke   load /OK_stroke exch def
/ufill    load /OK_ufill exch def
/ueofill  load /OK_ueofill exch def
/ustroke  load /OK_ustroke exch def
/rectfill load /OK_rectfill exch def
/rectstroke load /OK_rectstroke exch def
/shfill   load /OK_shfill exch def

/OK_SetGVM{globaldict 3 1 roll put}def
/OK_StrCat{
  1 dict begin
  dup type /stringtype ne {dup length string cvs}if
  /@okstr2 exch def
  dup type /stringtype ne {dup length string cvs}if
  /@okstr1 exch def
  @okstr1 length @okstr2 length add string dup dup 0 @okstr1 putinterval
  @okstr1 length @okstr2 putinterval
  end
}def
/OK@GetCRDName{%% 0:image 1:text 2:graphics 3:colorimage
 2 dict begin /@OKType exch def
 /@OK_Gry? @OKType 3 eq{dup 1 eq}{currentcolorspace 0 get /DeviceGray eq}ifelse def
 @OK_Gry?{(RelativeColorimetric)}{
 currentpagedevice /DeviceRenderingInfo 2 copy known{
 get /SelectColorMatching 2 copy known{
 get dup 0 eq
 {pop (Perceptual)}
 {
 dup 1 eq{
 pop [(Perceptual) (Vivid) dup (Perceptual)] @OKType get
 }{
 2 eq{(Perceptual)}{(Vivid)}ifelse
 }ifelse
 }ifelse
 }{pop pop (Perceptual)}ifelse
 }{pop pop (Perceptual)}ifelse
 currentpagedevice /DeviceRenderingInfo 2 copy known{
 get /SelectBlackGeneration 2 copy known{
 get dup 0 eq
 {pop [(CMY) (CMYK) dup (CMY)] @OKType get}{1 eq{(CMY)}{(CMYK)}ifelse}ifelse
 }{pop pop (CMY)}ifelse
 }{pop pop (CMY)}ifelse OK_StrCat
 }ifelse
 (.none.) OK_StrCat
 currenthalftone /HalftoneName 2 copy known{
 get
 }{pop pop ()}ifelse
 OK_StrCat
 end
}def
/OK_Screen{%% 0:image 1:text 2:graphics 3:colorimage
 globaldict /OK@_Control 2 copy known{get 1 eq}{pop pop false}ifelse
 {
 2 dict begin /@OKType exch def
 /@OK_Gry? @OKType 3 eq{dup 1 eq}{currentcolorspace 0 get /DeviceGray eq}ifelse def
 currentpagedevice /MediaType 2 copy known{
 get (Transparency) ne{
 @OK_Gry?{
 [
 [/M6BWBest600Halftone /M6BWBest1200Halftone]
 [/M12BWBest600Halftone /M12BWBest1200Halftone]
 ]
 }{
 [
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/M12Best600Halftone /M12Best1200Halftone]
 ]
 [
 [/M6Cluster600Halftone /M6Cluster1200Halftone]
 [/M12Cluster600Halftone /M12Cluster1200Halftone]
 ]
 ]
 currentpagedevice /DeviceRenderingInfo 2 copy known{
 get /SelectHalftone 2 copy known{
 get dup dup 1 eq exch 2 eq or {1 sub}{pop 0}ifelse
 }{pop pop 0}ifelse
 }{pop pop 0}ifelse get
 }ifelse
 false /Default /OutputDevice 2 copy resourcestatus{
 pop pop findresource /HWResolution get
 {
 dup 0 get exch 1 get add 2400 eq{pop true exit}if
 }forall
 }{pop pop}ifelse {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get dup
 currenthalftone /HalftoneName 2 copy known{
 get dup type /stringtype eq{cvn}if ne
 }{pop pop pop false}ifelse
 {
 /Halftone 2 copy resourcestatus{
 pop pop findresource mark exch {sethalftone}stopped cleartomark
 }{pop pop}ifelse
 }{pop}ifelse
 }if
 }{pop pop}ifelse
 globaldict /OK@_UseCRD 2 copy known{get}{pop pop false}ifelse
 {
 @OKType OK@GetCRDName cvn dup
 currentcolorrendering /CRDName 2 copy known{
 get dup type /stringtype eq{cvn}if ne
 }{pop pop pop false}ifelse
 {
 /ColorRendering 2 copy resourcestatus{
 pop pop findresource mark exch {setcolorrendering}stopped cleartomark
 }{pop pop}ifelse
 }{pop}ifelse
 }if
 end
 }{pop}ifelse
}bind def
/OK_I_SCR{0 OK_Screen}def
/OK_T_SCR{1 OK_Screen}def
/OK_G_SCR{2 OK_Screen}def
/OK_CI_SCR{3 OK_Screen}def

/show {OK_T_SCR OK_show} bind def
/ashow {OK_T_SCR OK_ashow} bind def
/widthshow {OK_T_SCR OK_widthshow} bind def
/awidthshow {OK_T_SCR OK_awidthshow} bind def
/xshow {OK_T_SCR OK_xshow} bind def
/xyshow {OK_T_SCR OK_xyshow} bind def
/yshow {OK_T_SCR OK_yshow} bind def
/glyphshow {OK_T_SCR OK_glyphshow} bind def
/cshow {OK_T_SCR OK_cshow} bind def
/kshow {OK_T_SCR OK_kshow} bind def
/fill {OK_G_SCR OK_fill} bind def
/eofill {OK_G_SCR OK_eofill} bind def
/stroke {OK_G_SCR OK_stroke} bind def
/ufill {OK_G_SCR OK_ufill} bind def
/ueofill {OK_G_SCR OK_ueofill} bind def
/ustroke {OK_G_SCR OK_ustroke} bind def
/rectfill {OK_G_SCR OK_rectfill} bind def
/rectstroke {OK_G_SCR OK_rectstroke} bind def
/shfill {OK_G_SCR OK_shfill}bind def
/imagemask{OK_I_SCR OK_Org_imagemask}bind def
/image{OK_I_SCR OK_Org_image}bind def
/colorimage{OK_CI_SCR OK_Org_colorimage}bind def

/OK@_Control 1 OK_SetGVM
/OK_Jp 50 OK_SetGVM
end
}stopped
  { {counttomark {pop}repeat pop /OK_Jp eq{exit}if}loop }{pop pop}ifelse
}if
%%EndResource

"
*End

*% _____ InputSlot _____
*OpenUI *InputSlot/Paper Source: PickOne
*OrderDependency: 40.0 DocumentSetup *InputSlot
*DefaultInputSlot: Upper
*InputSlot Upper/Tray 1: "
 currentpagedevice /InputAttributes get 0 known{
 currentpagedevice /ManualFeed get
 1 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice
 }if"
*End
*InputSlot Lower/Tray 2: "
 currentpagedevice /InputAttributes get 1 known{
 currentpagedevice /ManualFeed get
 2 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice
 }if"
*End
*InputSlot Tray3/Tray 3: "
 currentpagedevice /InputAttributes get 2 known{
 currentpagedevice /ManualFeed get
 3 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice
 }if"
*End
*InputSlot Front/Multi-Purpose Tray: "
 currentpagedevice /InputAttributes get 3 known{
 currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice
 }if"
*End
*InputSlot ManualFeed/ManualFeed: "
 currentpagedevice /InputAttributes get 3 known{
 4 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed true put setpagedevice
 }if"
*End
*?InputSlot: "
 save
 currentpagedevice /ManualFeed get
 {(ManualFeed)}{
 statusdict /papertray 2 copy known{
 get {exec}stopped {0}if
 [(Unknown) (Upper) (Lower) (Tray3)
 (Front) (Unknown) (Tray4) (Tray5)] exch get
 }{pop pop (Unknown)}ifelse
 }ifelse
 = flush
 restore"
*End
*CloseUI: *InputSlot

*% _____ Paper Handling _____
*LandscapeOrientation: Plus90
*VariablePaperSize: True
*% Code in this section both selects a tray and sets up a frame buffer.
*OpenUI *PageSize: PickOne
*OrderDependency: 50.0 DocumentSetup *PageSize
*DefaultPageSize: Letter
*PageSize A4: "
{
(<<) cvx exec
/PageSize [595 842] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 /OK@MPT_Set dup where{exch get 0 0 [595 842] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [595 842] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize Letter/Letter: "
{
(<<) cvx exec
/PageSize [612 792] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 /OK@MPT_Set dup where{exch get 0 0 [612 792] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 792] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize Legal/Legal: "
{
(<<) cvx exec
/PageSize [612 1008] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop
 {(<<) cvx exec /PageSize [612 972] (>>) cvx exec setpagedevice}stopped
 {
 pop /OK@MPT_Set dup where{exch get 0 0 [612 1008] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 1008] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
 }if
}if"
*End
*PageSize FanFoldGermanLegal/Legal13: "
{
(<<) cvx exec
/PageSize [612 936] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop /OK@MPT_Set dup where{exch get 0 0 [612 936] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 936] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize A5: "
{
(<<) cvx exec
/PageSize [420 595] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop /OK@MPT_Set dup where{exch get 0 0 [420 595] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [420 595] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize B5: "
{
(<<) cvx exec
/PageSize [516 729] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 /OK@MPT_Set dup where{exch get 0 0 [516 729] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [516 729] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize A6: "
{
(<<) cvx exec
/PageSize [297 420] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice dup /InputAttributes get /Priority get 0 get dup
 0 eq exch 3 eq or not{
 /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 }{pop}ifelse
 /OK@MPT_Set dup where{exch get 0 0 [297 420] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [297 420] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize EnvMonarch/Monarch: "
{
(<<) cvx exec
/PageSize [279 540] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [279 540] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [279 540] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 1 put"
*End
*PageSize EnvDL/DL: "
{
(<<) cvx exec
/PageSize [312 624] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [312 624] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [312 624] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 1 put"
*End
*PageSize EnvC5/C5: "
{
(<<) cvx exec
/PageSize [459 649] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [459 649] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [459 649] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 1 put"
*End
*PageSize Env10/Com-10: "
{
(<<) cvx exec
/PageSize [297 684] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [297 684] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [297 684] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 1 put"
*End
*PageSize Executive/Executive: "
{
(<<) cvx exec
/PageSize [522 756] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop /OK@MPT_Set dup where{exch get 0 0 [522 756] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [522 756] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if"
*End
*PageSize EnvC4/C4: "
{
(<<) cvx exec
/PageSize [649 918] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [649 918] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [649 918] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 2 put"
*End
*PageSize Env9/Com-9: "
{
(<<) cvx exec
/PageSize [279 639] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{get exec}{pop pop pop}ifelse
 {(<<) cvx exec /ManualFeed true (>>) cvx exec setpagedevice}if
 /OK@MPT_Set dup where{exch get 0 2 [279 639] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [279 639] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
}if globaldict /OK_@Env 1 put"
*End
*PageSize OKLegal/Legal13.5: "
{
(<<) cvx exec
/PageSize [612 972] /Policies (<<) cvx exec /PageSize 0 (>>) cvx exec
(>>) cvx exec setpagedevice
}stopped
{
 pop
 {(<<) cvx exec /PageSize [612 1008] (>>) cvx exec setpagedevice}stopped
 {
 pop /OK@MPT_Set dup where{exch get 0 0 [612 972] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 972] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice
 }if
}if"
*End
*?PageSize: "
 save
 currentpagedevice /PageSize get aload pop 2 copy gt {exch}if 
 (Unknown)
 (<<) cvx exec
 [595 842] (A4)
 [612 792] (Letter)
 [612 1008] (Legal)
 [612 936] (FanFoldGermanLegal)
 [420 595] (A5)
 [516 729] (B5)
 [297 420] (A6)
 [279 540] (EnvMonarch)
 [312 624] (EnvDL)
 [459 649] (EnvC5)
 [297 684] (Env10)
 [522 756] (Executive)
 [649 918] (EnvC4)
 [279 639] (Env9)
 [612 972] (OKLegal)
 (>>) cvx exec
 {
 exch aload pop 2 copy gt {exch}if 4 index sub abs 5 le exch
 5 index sub abs 5 le and {exch pop exit}{pop}ifelse
 } bind forall = flush pop pop
 restore"
*End
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 55.0 DocumentSetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion A4: "
 /OK@MPT_Set dup where{exch get 0 0 [595 842] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [595 842] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion Letter/Letter: "
 /OK@MPT_Set dup where{exch get 0 0 [612 792] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 792] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion Legal/Legal: "
 /OK@MPT_Set dup where{exch get 0 0 [612 1008] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 1008] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion FanFoldGermanLegal/Legal13: "
 /OK@MPT_Set dup where{exch get 0 0 [612 936] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 936] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion A5: "
 /OK@MPT_Set dup where{exch get 0 0 [420 595] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [420 595] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion B5: "
 /OK@MPT_Set dup where{exch get 0 0 [516 729] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [516 729] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion A6: "
 /OK@MPT_Set dup where{exch get 0 0 [297 420] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [297 420] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion EnvMonarch/Monarch: "
 /OK@MPT_Set dup where{exch get 0 2 [279 540] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [279 540] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 1 put"
*End
*PageRegion EnvDL/DL: "
 /OK@MPT_Set dup where{exch get 0 2 [312 624] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [312 624] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 1 put"
*End
*PageRegion EnvC5/C5: "
 /OK@MPT_Set dup where{exch get 0 2 [459 649] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [459 649] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 1 put"
*End
*PageRegion Env10/Com-10: "
 /OK@MPT_Set dup where{exch get 0 2 [297 684] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [297 684] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 1 put"
*End
*PageRegion Executive/Executive: "
 /OK@MPT_Set dup where{exch get 0 0 [522 756] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [522 756] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*PageRegion EnvC4/C4: "
 /OK@MPT_Set dup where{exch get 0 2 [649 918] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [649 918] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 2 put"
*End
*PageRegion Env9/Com-9: "
 /OK@MPT_Set dup where{exch get 0 2 [279 639] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [279 639] put
 dup /LeadingEdge 2 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice globaldict /OK_@Env 1 put"
*End
*PageRegion OKLegal/Legal13.5: "
 /OK@MPT_Set dup where{exch get 0 0 [612 972] 4 -1 roll exec}{pop}ifelse
 currentpagedevice dup length dict copy
 dup /PageSize [612 972] put
 dup /LeadingEdge 0 put
 dup /Policies 1 dict dup /PageSize 7 put put
 setpagedevice"
*End
*CloseUI: *PageRegion

*% The following entries provide information about specific paper keywords.
*DefaultImageableArea: Letter
*ImageableArea A4: "13 13 582 829 "
*ImageableArea Letter/Letter: "13 13 599 779 "
*ImageableArea Legal/Legal: "13 13 599 995 "
*ImageableArea FanFoldGermanLegal/Legal13: "13 13 599 923 "
*ImageableArea A5: "13 13 407 582 "
*ImageableArea B5: "13 13 503 716 "
*ImageableArea A6: "13 13 285 407 "
*ImageableArea EnvMonarch/Monarch: "13 13 266 527 "
*ImageableArea EnvDL/DL: "13 13 299 611 "
*ImageableArea EnvC5/C5: "13 13 446 636 "
*ImageableArea Env10/Com-10: "13 13 284 670 "
*ImageableArea Executive/Executive: "13 13 509 743 "
*ImageableArea EnvC4/C4: "33 13 616 905 "
*ImageableArea Env9/Com-9: "13 13 266 626 "
*ImageableArea OKLegal/Legal13.5: "13 13 599 959 "
*?ImageableArea: "
 save
 /cvp {20 string cvs print ( ) print}bind def
 /upperright {10000 mul floor 10000 div}bind def
 /lowerleft {10000 mul ceiling 10000 div}bind def
 newpath clippath pathbbox
 4 -2 roll exch 2 {lowerleft cvp}repeat
 exch 2 {upperright cvp}repeat flush
 restore"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension A4: "595 842"
*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension FanFoldGermanLegal/Legal13: "612 936"
*PaperDimension A5: "420 595"
*PaperDimension B5: "516 729"
*PaperDimension A6: "297 420"
*PaperDimension EnvMonarch/Monarch: "279 540"
*PaperDimension EnvDL/DL: "312 624"
*PaperDimension EnvC5/C5: "459 649"
*PaperDimension Env10/Com-10: "297 684"
*PaperDimension Executive/Executive: "522 756"
*PaperDimension EnvC4/C4: "649 918"
*PaperDimension Env9/Com-9: "279 639"
*PaperDimension OKLegal/Legal13.5: "612 972"

*%=== Custom Paper Support =================
*%Orientation and Margin (offsets) values are not utilized
*MaxMediaWidth: "612"
*MaxMediaHeight: "2548.8"
*CenterRegistered: False
*HWMargins: 13 13 13 13
*NonUIOrderDependency: 60.0 DocumentSetup *CustomPageSize
*CustomPageSize True: "
(<<) cvx exec /HWResolution [600 600] (>>) cvx exec setpagedevice
1 dict dup /TraySwitch false put setpagedevice
10 dict begin
false statusdict /setpapersizecheck 2 copy known{
 get {exec}stopped {pop}{globaldict /OK@_Custom 0 put}ifelse
}{pop pop pop}ifelse
/OK@ORT exch def pop pop
2 copy gt /OK@LFEED exch def
/OK@WPAPER OK@ORT 2 mod OK@LFEED{1 eq}{0 eq}ifelse def
OK@LFEED{exch}if
/OK@Y exch def /OK@X exch def
/OK@LEdge [3 0 1 2] OK@ORT get def
currentpagedevice dup length dict copy dup
dup /InputAttributes get dup length dict copy
/InputAttributes exch dup dup 3 get dup length dict copy 3 exch
dup /PageSize [OK@X OK@Y OK@WPAPER{exch}if] put
dup /LeadingEdge OK@LEdge put put put
dup /PageSize [OK@X OK@Y OK@WPAPER{exch}if] put
dup /LeadingEdge OK@LEdge put
dup /Policies 1 dict dup /PageSize 7 put put setpagedevice
end"
*End

*LeadingEdge Short: ""
*LeadingEdge Long: ""
*DefaultLeadingEdge: Short

*ParamCustomPageSize Width: 1 points 216 612
*ParamCustomPageSize Height: 2 points 360 2548.8
*ParamCustomPageSize WidthOffset: 3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*ParamCustomPageSize Orientation: 5 int 0 3

*RequiresPageRegion All: True

*% _____ Media Type _____
*% This selection must be later than manual feed selection
*OpenUI *MediaType/Paper Type: PickOne
*OrderDependency: 90.0 DocumentSetup *MediaType
*DefaultMediaType: PRINTERDEFAULT
*MediaType PRINTERDEFAULT/Printer Setting: "
"
*End
*MediaType LIGHT/Light(16lb<3C>): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 62 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 62 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType MEDIUMLIGHT/Medium-Light(17-19lb): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 73 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 73 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType MEDIUM/Medium(20-24lb): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 92 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 92 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType MEDIUMHEAVY/Medium-Heavy(25-27lb): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 103 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 103 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType HEAVY/Heavy(28-32lb): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 122 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 122 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType ULTRAHEAVY/Ultra-Heavy(33-54lb): "
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub currentpagedevice /ManualFeed get{pop 3}if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Plain) put
 dup /MediaWeight 203 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Plain) put
 dup /MediaWeight 203 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType Labels1/Labels1: "
 false statusdict /setpapersizecheck 2 copy known
 {get {exec}stopped {pop}if}{pop pop pop}ifelse
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub dup 3 ne{
 currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice pop 3
 }if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Labels) put
 dup /MediaWeight 73 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Labels) put
 dup /MediaWeight 73 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType Labels2/Labels2: "
 false statusdict /setpapersizecheck 2 copy known
 {get {exec}stopped {pop}if}{pop pop pop}ifelse
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub dup 3 ne{
 currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice pop 3
 }if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Labels) put
 dup /MediaWeight 203 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Labels) put
 dup /MediaWeight 203 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*MediaType Transparency/Transparency: "
 false statusdict /setpapersizecheck 2 copy known
 {get {exec}stopped {pop}if}{pop pop pop}ifelse
statusdict /papertray 2 copy known{
 4 dict begin
 get exec 1 sub dup dup 0 eq exch 3 eq or not{
 currentpagedevice /ManualFeed get
 4 statusdict /setpapertray 2 copy known{
 get {exec}stopped {pop}if
 }{pop pop pop}ifelse
 1 dict dup /ManualFeed 4 -1 roll put setpagedevice pop 3
 }if /OK_TRAY exch def
 currentpagedevice dup length dict copy /OK_CPD exch def
 OK_CPD /MediaType get (Envelope) ne{
 OK_CPD /InputAttributes get dup length dict copy /OK_IA exch def
 OK_IA OK_TRAY get /PageSize get /OK_IASZ exch def
 OK_IA dup OK_TRAY get dup length dict copy OK_TRAY exch
 dup /PageSize OK_IASZ put
 dup /MediaType (Transparency) put
 dup /MediaWeight 73 put put
 OK_CPD dup /InputAttributes OK_IA put
 dup /MediaType (Transparency) put
 dup /MediaWeight 73 put
 dup /Policies (<<) cvx exec/PageSize 7 (>>) cvx exec put
 setpagedevice
 }if
 end
}{pop pop}ifelse"
*End
*?MediaType: "
 save 3 dict begin
 currentpagedevice /MediaType 2 copy known{
 get /OK_MT exch def
 OK_MT (Transparency) eq {
 OK_MT
 }{
 currentpagedevice /MediaWeight 2 copy known{
 get /OK_MW exch def
 5 -1 0 {
 /OK_idx exch def
 [62 73 92 103 122 203] OK_idx get OK_MW le
 {exit}if
 }for
 OK_MT dup (Plain) eq exch null eq or{
 [(LIGHT) (MEDIUMLIGHT) (MEDIUM) (MEDIUMHEAVY)
 (HEAVY) (ULTRAHEAVY)] OK_idx get
 }{
 OK_MT (Labels) eq{
 [(Labels1) dup dup dup dup (Labels2)] OK_idx get
 }{
 (Unknown)
 }ifelse
 }ifelse
 }{
 pop pop (Unknown)
 }ifelse
 }ifelse
 }{
 pop pop (Unknown)
 }ifelse
 end = flush restore"
*End
*CloseUI: *MediaType

*% ================================================
*% Collate: driver UI only
*% ================================================
*OpenUI *OKCollate/Collate: Boolean
*OrderDependency: 35.0 DocumentSetup *OKCollate
*DefaultOKCollate: False
*OKCollate False/No: "
 (<<) cvx exec
 /Collate false
 (>>) cvx exec setpagedevice"
*End
*OKCollate True/Yes: "
 globaldict /OK@_Copies currentpagedevice /NumCopies get put
 (<<) cvx exec
 /Collate false /NumCopies 1
 (>>) cvx exec setpagedevice
 globaldict /OK@_Copies known{
 (<<) cvx exec
 /Collate true /NumCopies globaldict /OK@_Copies get
 (>>) cvx exec setpagedevice
 }if"
*End
*?OKCollate: "
 save
 currentpagedevice /Collate 2 copy known{
 get {(True)}{(False)}ifelse
 }{pop pop (Unknown)}ifelse = flush
 restore"
*End
*CloseUI: *OKCollate

*%----This part is diffent from Win95/98's PPD
*% _____ OKI Color Control _____
*OpenUI *OKControl/Color Control: PickOne
*OrderDependency: 105.0 DocumentSetup *OKControl
*DefaultOKControl: PRCM
*OKControl PRCM/Printer Color Matching: "
 globaldict /OK@_Control 1 put
 /DefaultCMYK [/DeviceCMYK] /ColorSpace defineresource pop
 currentpagedevice /MediaType get (Transparency) ne {
 /DefaultHalftone
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/M12Best600Halftone /M12Best1200Halftone]
 ]
 false /Default /OutputDevice findresource /HWResolution get
 {dup 0 get exch 1 get add 2400 eq{pop true exit}if}forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if"
*End
*OKControl NOPRCM/No Color Matching: "
 globaldict /OK@_Control 4 put
 (<<) cvx exec /ProcessColorModel /DeviceCMYK (>>) cvx exec setpagedevice
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectBlackGeneration 1 put
 dup /SelectColorMatching 0 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 currentpagedevice /MediaType get (Transparency) ne {
 /DefaultHalftone
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/M12Best600Halftone /M12Best1200Halftone]
 ]
 false /Default /OutputDevice findresource /HWResolution get
 {dup 0 get exch 1 get add 2400 eq{pop true exit}if}forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if"
*End
*OKControl Gray/Print in Grayscale: "
 globaldict /OK@_Control 5 put
 (<<) cvx exec /ProcessColorModel /DeviceGray (>>) cvx exec setpagedevice
 currentpagedevice /MediaType get (Transparency) ne {
 /DefaultHalftone
 [
 [/M6BWBest600Halftone /M6BWBest1200Halftone]
 [/M12BWBest600Halftone /M12BWBest1200Halftone]
 ]
 false /Default /OutputDevice findresource /HWResolution get
 {dup 0 get exch 1 get add 2400 eq{pop true exit}if}forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if
 /DefaultColorRendering /RelativeColorimetric findcolorrendering pop
 /ColorRendering findresource /ColorRendering defineresource setcolorrendering"
*End
*?OKControl: "
 save
 globaldict /OK@_Control 2 copy known
 {get [(UnKnown) (PRCM) (UnKnown) dup (NOPRCM) (Gray)] exch get}{pop pop (UnKnown)}ifelse = flush
 restore"
*End
*CloseUI: *OKControl

*% _____ Matching Mode _____
*OpenUI *OKMatchingMode/Image Color Matching: PickOne
*OrderDependency: 110.0 DocumentSetup *OKMatchingMode
*DefaultOKMatchingMode: ASIC
*OKMatchingMode ASIC/OKI Unique Color Matching: "
globaldict /OK@_UseCRD false put
(<<) cvx exec /UseCIEColor false (>>) cvx exec setpagedevice"
*End
*OKMatchingMode UseCRD/PostScript CRD Color Matching: "
globaldict /OK@_UseCRD
globaldict /OK@_Control 2 copy known{get 1 eq}{pop pop false}ifelse put
 (<<) cvx exec
 /UseCIEColor globaldict /OK@_UseCRD get
 (>>) cvx exec setpagedevice"
*End
*?OKMatchingMode: "
 save
 currentpagedevice /UseCIEColor 2 copy known{
 get {(UseCRD)}{(ASIC)}ifelse
 }{
 (Unknown)
 }ifelse = flush
 restore"
*End
*CloseUI: *OKMatchingMode

*% _____ Color Process Black _____
*OpenUI *OKBlackSubstitution/Black Finish: PickOne
*OrderDependency: 115.0 DocumentSetup *OKBlackSubstitution
*DefaultOKBlackSubstitution: Auto
*OKBlackSubstitution Auto/Auto: "
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectBlackGeneration 0 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 }if"
*End
*OKBlackSubstitution Matte/Matte: "
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectBlackGeneration 2 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 }if"
*End
*OKBlackSubstitution Glossy/Glossy: "
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectBlackGeneration 1 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 }if"
*End
*?OKBlackSubstitution:"
 save
 currentpagedevice /DeviceRenderingInfo get /SelectBlackGeneration get
 [(Auto) (Glossy) (Matte) (UnKnown)] exch get = flush
 restore"
*End
*CloseUI: *OKBlackSubstitution

*% _____ Halftone Information _____
*DefaultHalftoneType: 5
*ScreenFreq: "121.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
 {
 abs exch abs 2 copy add 1 gt{
 1 sub dup mul exch 1 sub dup mul add 1 sub
 }{
 dup mul exch dup mul add 1 exch sub
 }ifelse
 }"
*End
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}"
*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{1 exch sub}"

*% _____ Halftone Mode _____
*%*OpenUI *OKHalftoneMode/Color Halftone: PickOne
*%*OrderDependency: 145.0 DocumentSetup *OKHalftoneMode
*%*DefaultOKHalftoneMode: DeviceBest
*%*OKHalftoneMode DeviceBest/Device Best Dither: "
*% globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
*% globaldict /OK@_Control get 1 eq{
*% (<<) cvx exec
*% /DeviceRenderingInfo
*% currentpagedevice /DeviceRenderingInfo get 10 dict copy
*% dup /SelectHalftone 1 put
*% /PageDeviceName null
*% (>>) cvx exec setpagedevice}if"
*%*End
*%*OKHalftoneMode ClusterDither/Cluster Ordered Dither: "
*% globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
*% globaldict /OK@_Control get 1 eq{
*% (<<) cvx exec
*% /DeviceRenderingInfo
*% currentpagedevice /DeviceRenderingInfo get 10 dict copy
*% dup /SelectHalftone 2 put
*% /PageDeviceName null
*% (>>) cvx exec setpagedevice}if"
*%*End
*%*?OKHalftoneMode:"
*% save
*% currentpagedevice /DeviceRenderingInfo get /SelectHalftone get
*% [(Auto) (DeviceBest) (ClusterDither) (UnKnown)] exch get = flush
*% restore"
*%*End
*%*CloseUI: *OKHalftoneMode

*% _____ Color Rendering Style _____
*%
*% OKColorRenderStyle should be located at the last selection
*%
*OpenUI *OKColorRenderStyle/Image Color Rendering Style: PickOne
*OrderDependency: 150.0 PageSetup *OKColorRenderStyle
*DefaultOKColorRenderStyle: Auto
*OKColorRenderStyle Auto/Auto: "
 globaldict /OK@_SETHT known not{
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectColorMatching 1 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 currentpagedevice /MediaType get (Transparency) ne{
 /DefaultHalftone
 [
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/MBest600Halftone /M12Best1200Halftone]
 ]
 [
 [/M6Cluster600Halftone /M6Cluster1200Halftone]
 [/M12Cluster600Halftone /M12Cluster1200Halftone]
 ]
 ]
 currentpagedevice /DeviceRenderingInfo get /SelectHalftone get
 dup dup 1 eq exch 2 eq or {1 sub}{pop 0}ifelse get
 false /Default /OutputDevice findresource /HWResolution get
 {
 dup 0 get exch 1 get add 2400 eq{pop true exit}if
 }forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if
 }if
 globaldict /OK@_SETHT 1 put
 }if
 globaldict /OK_@Env 2 copy known{
 get 1 eq{
 180 rotate matrix currentmatrix aload pop
 neg exch neg exch }
 {180 rotate matrix currentmatrix aload pop
 neg exch neg 5 index 20 mul sub exch }
  ifelse 6 array astore setmatrix
 }{pop pop}ifelse"
*End
*OKColorRenderStyle Perceptual/Perceptual: "
 globaldict /OK@_SETHT known not{
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectColorMatching 2 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 currentpagedevice /MediaType get (Transparency) ne{
 /DefaultHalftone
 [
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/MBest600Halftone /M12Best1200Halftone]
 ]
 [
 [/M6Cluster600Halftone /M6Cluster1200Halftone]
 [/M12Cluster600Halftone /M12Cluster1200Halftone]
 ]
 ]
 currentpagedevice /DeviceRenderingInfo get /SelectHalftone get
 dup dup 1 eq exch 2 eq or {1 sub}{pop 0}ifelse get
 false /Default /OutputDevice findresource /HWResolution get
 {
 dup 0 get exch 1 get add 2400 eq{pop true exit}if
 }forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if
 globaldict /OK@_UseCRD 2 copy known{get}{pop pop false}ifelse
 {
 currentpagedevice /DeviceRenderingInfo get
 /SelectBlackGeneration get dup dup 1 eq exch 2 eq or{
 /DefaultColorRendering exch
 [/PerceptualCMY /PerceptualCMYK] exch 1 sub get
 findcolorrendering pop /ColorRendering findresource /ColorRendering
 defineresource setcolorrendering
 }{pop}ifelse
 }if
 }if
 globaldict /OK@_SETHT 1 put
 }if
 globaldict /OK_@Env 2 copy known{
 get 1 eq{
 180 rotate matrix currentmatrix aload pop
 neg exch neg exch }
 {180 rotate matrix currentmatrix aload pop
 neg exch neg 5 index 20 mul sub exch }
  ifelse 6 array astore setmatrix
 }{pop pop}ifelse"
*End
*OKColorRenderStyle Vivid/Vivid: "
 globaldict /OK@_SETHT known not{
 globaldict /OK@_Control known not{globaldict /OK@_Control 1 put}if
 globaldict /OK@_Control get 1 eq{
 (<<) cvx exec
 /DeviceRenderingInfo
 currentpagedevice /DeviceRenderingInfo get 10 dict copy
 dup /SelectColorMatching 3 put
 /PageDeviceName null
 (>>) cvx exec setpagedevice
 currentpagedevice /MediaType get (Transparency) ne{
 /DefaultHalftone
 [
 [
 [/M6Best600Halftone /M6Best1200Halftone]
 [/MBest600Halftone /M12Best1200Halftone]
 ]
 [
 [/M6Cluster600Halftone /M6Cluster1200Halftone]
 [/M12Cluster600Halftone /M12Cluster1200Halftone]
 ]
 ]
 currentpagedevice /DeviceRenderingInfo get /SelectHalftone get
 dup dup 1 eq exch 2 eq or {1 sub}{pop 0}ifelse get
 false /Default /OutputDevice findresource /HWResolution get
 {
 dup 0 get exch 1 get add 2400 eq{pop true exit}if
 }forall {1}{0}ifelse get
 currentpagedevice /HWResolution get 1 get 600 eq{0}{1}ifelse get
 /Halftone 2 copy resourcestatus{
 pop pop findresource /Halftone defineresource sethalftone
 }{pop pop pop}ifelse
 }if
 globaldict /OK@_UseCRD 2 copy known{get}{pop pop false}ifelse
 {
 currentpagedevice /DeviceRenderingInfo get
 /SelectBlackGeneration get dup dup 1 eq exch 2 eq or{
 /DefaultColorRendering exch
 [/VividCMY /VividCMYK] exch 1 sub get
 findcolorrendering pop /ColorRendering findresource /ColorRendering
 defineresource setcolorrendering
 }{pop}ifelse
 }if
 }if
 globaldict /OK@_SETHT 1 put
 }if
 globaldict /OK_@Env 2 copy known{
 get 1 eq{
 180 rotate matrix currentmatrix aload pop
 neg exch neg exch }
 {180 rotate matrix currentmatrix aload pop
 neg exch neg 5 index 20 mul sub exch }
  ifelse 6 array astore setmatrix
 }{pop pop}ifelse"
*End
*?OKColorRenderStyle: "
 save
 currentpagedevice /DeviceRenderingInfo get /SelectColorMatching get
 [(None) (Auto) (Perceptual) (Vivid) (UnKnown)] exch get = flush
 restore"
*End
*CloseUI: *OKColorRenderStyle

*%----This part is diffent from Win95/98's PPD
*% _____ Color Separation Order _____
*OpenUI *OKSeparationorder/Separations: PickOne
*OrderDependency: 130.0 DocumentSetup *OKSeparationorder 
*DefaultOKSeparationorder: OFF
*OKSeparationorder OFF/Off: "
 (<<) cvx exec /Separations false (>>) cvx exec setpagedevice"
*End
*OKSeparationorder CMYK/CMYK: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Cyan /Magenta /Yellow /Black]
 (>>) cvx exec setpagedevice"
*End
*OKSeparationorder CMY/CMY: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Cyan /Magenta /Yellow]
 (>>) cvx exec setpagedevice"
*End
*OKSeparationorder Cyan/OnlyCyan: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Cyan]
 (>>) cvx exec setpagedevice"
*End
*OKSeparationorder Magenta/OnlyMagenta: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Magenta]
 (>>) cvx exec setpagedevice"
*End
*OKSeparationorder Yellow/OnlyYellow: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Yellow]
 (>>) cvx exec setpagedevice"
*End
*OKSeparationorder Black/OnlyBlack: "
 (<<) cvx exec /Separations true (>>) cvx exec setpagedevice
 (<<) cvx exec
 /SeparationOrder [/Black]
 (>>) cvx exec setpagedevice"
*End
*?OKSeparationorder: "
 save (Unknown)
 currentpagedevice /Separations 2 copy known{
 get{
 currentpagedevice /SeparationOrder 2 copy known{
 get dup length 1 eq{
 0 get 20 string cvs exch pop
 }{
 dup length 3 eq{
 pop pop (CMY)
 }{
 length 4 eq{pop (CMYK)}if
 }ifelse
 }ifelse
 }{pop pop}ifelse
 }{pop (OFF)}ifelse
 }{pop pop}ifelse = flush
 restore
 %% Cyan Magenta Yellow Black"
*End
*CloseUI: *OKSeparationorder

*OpenUI *TraySwitch/Tray Switch: Boolean
*OrderDependency: 25.0 DocumentSetup *TraySwitch
*DefaultTraySwitch: True
*TraySwitch True/On: "1 dict dup /TraySwitch globaldict /OK@_Custom known not put setpagedevice"
*TraySwitch False/Off: "1 dict dup /TraySwitch false put setpagedevice"
*?TraySwitch: "
save
 currentpagedevice /TraySwitch get
 {(True)}{(False)}ifelse = flush
restore"
*End
*CloseUI: *TraySwitch

*OpenUI *OKPageSizeCheck/Page Size Check: Boolean
*OrderDependency: 20.0 DocumentSetup *OKPageSizeCheck
*DefaultOKPageSizeCheck: True
*OKPageSizeCheck True/On: "
 statusdict /setpapersizecheck 2 copy known{
 get true exch {exec}stopped {pop}if
 }{pop pop}ifelse"
*End
*OKPageSizeCheck False/Off: "
 statusdict /setpapersizecheck 2 copy known{
 get false exch {exec}stopped {pop}if
 }{pop pop}ifelse"
*End
*?OKPageSizeCheck: "
 save
 statusdict /papersizecheck 2 copy known{
 get {exec}stopped {pop (UnKnown)}{{(True)}{(False)}ifelse}ifelse
 }{pop pop (UnKnown)}ifelse = flush
 restore"
*End
*CloseUI: *OKPageSizeCheck

*% _____ Font Information _____
*% _____ PostScript Level3 Fonts Total 253 fonts listed here _____
*ADOTTFontSub TTF1/Gill Sans: "GillSans"
*ADOTTFontSub TTF2/Gill Sans Condensed: "GillSans Condensed"
*ADOTTFontSub TTF3/Apple Chancery: "Apple Chancery"
*ADOTTFontSub TTF4/Arial: "Arial"
*ADOTTFontSub TTF5/Chicago: "Chicago"
*ADOTTFontSub TTF6/Geneva: "Geneva"
*ADOTTFontSub TTF7/Hoefler Text: "Hoefler Text"
*ADOTTFontSub TTF8/Hoefler Text Black: "Hoefler Text Black"
*ADOTTFontSub TTF9/Hoefler Text Ornaments: "Hoefler Text Ornaments"
*ADOTTFontSub TTF10/Monaco: "Monaco"
*ADOTTFontSub TTF11/NewYork: "NewYork"
*ADOTTFontSub TTF12/Times New Roman: "Times New Roman"
*ADOTTFontSub TTF13/Wingdings: "Wingdings"
*ADOTTFontSub TTF14/Letter Gothic: "Letter Gothic"
*ADOTTFontSub TTF15/Symbol: "Symbol"
*ADOTTFontSub TTF16/Arial Narrow: "Helvetica-Narrow"
*ADOTTFontSub TTF17/Courier New: "Courier"

*DefaultFont: Courier
*Font AlbertusMT-Italic: Standard "(001.000)" Standard ROM
*Font AlbertusMT-Light: Standard "(001.000)" Standard ROM
*Font AlbertusMT: Standard "(001.000)" Standard ROM
*Font AntiqueOlive-Roman: Standard "(501.008)" ExtendedRoman ROM
*Font AntiqueOlive-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font AntiqueOlive-Compact: Standard "(501.008)" ExtendedRoman ROM
*Font AntiqueOlive-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font AntiqueOliveCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font AntiqueOliveCE-Compact: Win1250 "(501.008)" ExtendedRoman ROM
*Font AntiqueOliveCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font AntiqueOliveCE-Roman: Win1250 "(501.008)" ExtendedRoman ROM
*Font Apple-Chancery: Standard "(001.001)" ExtendedRoman ROM
*Font Apple-ChanceryCE: Win1250 "(001.001)" ExtendedRoman ROM
*Font Arial-BoldItalicMT: Standard "(501.009)" ExtendedRoman ROM
*Font Arial-BoldMT: Standard "(501.009)" ExtendedRoman ROM
*Font Arial-ItalicMT: Standard "(501.012)" ExtendedRoman ROM
*Font ArialCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialCE-Italic: Win1250 "(501.012)" ExtendedRoman ROM
*Font ArialCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font ArialMT: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-Book: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-BookOblique: Standard "(501.009)" ExtendedRoman ROM
*Font AvantGarde-Demi: Standard "(501.010)" ExtendedRoman ROM
*Font AvantGarde-DemiOblique: Standard "(501.010)" ExtendedRoman ROM
*Font AvantGardeCE-Book: Win1250 "(501.009)" ExtendedRoman ROM
*Font AvantGardeCE-BookOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font AvantGardeCE-Demi: Win1250 "(501.010)" ExtendedRoman ROM
*Font AvantGardeCE-DemiOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font Bodoni-Bold: Standard "(501.006)" ExtendedRoman ROM
*Font Bodoni-BoldItalic: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni-Italic: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni-Poster: Standard "(501.009)" ExtendedRoman ROM
*Font Bodoni-PosterCompressed: Standard "(501.007)" ExtendedRoman ROM
*Font Bodoni: Standard "(501.008)" ExtendedRoman ROM
*Font BodoniCE-Bold: Win1250 "(501.006)" ExtendedRoman ROM
*Font BodoniCE-BoldItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE-Italic: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE-Poster: Win1250 "(501.009)" ExtendedRoman ROM
*Font BodoniCE-PosterCompressed: Win1250 "(501.007)" ExtendedRoman ROM
*Font BodoniCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font Bookman-Demi: Standard "(501.007)" ExtendedRoman ROM
*Font Bookman-DemiItalic: Standard "(501.008)" ExtendedRoman ROM
*Font Bookman-Light: Standard "(501.006)" ExtendedRoman ROM
*Font Bookman-LightItalic: Standard "(501.007)" ExtendedRoman ROM
*Font BookmanCE-Demi: Win1250 "(501.007)" ExtendedRoman ROM
*Font BookmanCE-DemiItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font BookmanCE-Light: Win1250 "(501.006)" ExtendedRoman ROM
*Font BookmanCE-LightItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font Carta: Special "(001.001)" Special ROM
*Font Chicago: Standard "(501.011)" ExtendedRoman ROM
*Font ChicagoCE: Win1250 "(501.011)" ExtendedRoman ROM
*Font Clarendon-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Clarendon-Light: Standard "(501.009)" ExtendedRoman ROM
*Font Clarendon: Standard "(501.009)" ExtendedRoman ROM
*Font ClarendonCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font ClarendonCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font ClarendonCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font CooperBlack-Italic: Standard "(001.003)" Standard ROM
*Font CooperBlack: Standard "(001.003)" Standard ROM
*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard ROM
*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard ROM
*Font Coronet-Regular: Standard "(001.000)" ExtendedRoman ROM
*Font CoronetCE-Regular: Win1250 "(001.000)" ExtendedRoman ROM
*Font Courier-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Courier-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Courier-Oblique: Standard "(501.010)" ExtendedRoman ROM
*Font Courier: Standard "(501.010)" ExtendedRoman ROM
*Font CourierCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE-BoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE-Oblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font CourierCE: Win1250 "(501.010)" ExtendedRoman ROM
*Font Eurostile-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Eurostile-BoldExtendedTwo: Standard "(501.008)" ExtendedRoman ROM
*Font Eurostile-ExtendedTwo: Standard "(501.010)" ExtendedRoman ROM
*Font Eurostile: Standard "(501.008)" ExtendedRoman ROM
*Font EurostileCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font EurostileCE-BoldExtendedTwo: Win1250 "(501.008)" ExtendedRoman ROM
*Font EurostileCE-ExtendedTwo: Win1250 "(501.010)" ExtendedRoman ROM
*Font EurostileCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font Geneva: Standard "(501.007)" ExtendedRoman ROM
*Font GenevaCE: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSans-Bold: Standard "(501.007)" ExtendedRoman ROM
*Font GillSans-BoldCondensed: Standard "(501.006)" ExtendedRoman ROM
*Font GillSans-BoldItalic: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Condensed: Standard "(501.007)" ExtendedRoman ROM
*Font GillSans-ExtraBold: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font GillSans-Light: Standard "(501.009)" ExtendedRoman ROM
*Font GillSans-LightItalic: Standard "(501.009)" ExtendedRoman ROM
*Font GillSans: Standard "(501.009)" ExtendedRoman ROM
*Font GillSansCE-Bold: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSansCE-BoldCondensed: Win1250 "(501.006)" ExtendedRoman ROM
*Font GillSansCE-BoldItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Condensed: Win1250 "(501.007)" ExtendedRoman ROM
*Font GillSansCE-ExtraBold: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font GillSansCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font GillSansCE-LightItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font GillSansCE-Roman: Win1250 "(501.009)" ExtendedRoman ROM
*Font Goudy-Bold: Standard "(001.002)" Standard ROM
*Font Goudy-BoldItalic: Standard "(001.002)" Standard ROM
*Font Goudy-ExtraBold: Standard "(001.001)" Standard ROM
*Font Goudy-Italic: Standard "(001.002)" Standard ROM
*Font Goudy: Standard "(001.003)" Standard ROM
*Font Helvetica-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Condensed-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font Helvetica-Condensed-BoldObl: Standard "(501.009)" ExtendedRoman ROM
*Font Helvetica-Condensed-Oblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Condensed: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(501.010)" ExtendedRoman ROM
*Font Helvetica-Narrow-Oblique: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica-Narrow: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica-Oblique: Standard "(501.008)" ExtendedRoman ROM
*Font Helvetica: Standard "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-BoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-Cond: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-CondBold: Win1250 "(501.009)" ExtendedRoman ROM
*Font HelveticaCE-CondBoldObl: Win1250 "(501.009)" ExtendedRoman ROM
*Font HelveticaCE-CondObl: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-Narrow: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-NarrowBold: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-NarrowBoldOblique: Win1250 "(501.010)" ExtendedRoman ROM
*Font HelveticaCE-NarrowOblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE-Oblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font HelveticaCE: Win1250 "(501.008)" ExtendedRoman ROM
*Font HoeflerText-Black: Standard "(501.008)" ExtendedRoman ROM
*Font HoeflerText-BlackItalic: Standard "(501.009)" ExtendedRoman ROM
*Font HoeflerText-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font HoeflerText-Ornaments: Special "(001.001)" Special ROM
*Font HoeflerText-Regular: Standard "(501.009)" ExtendedRoman ROM
*Font HoeflerTextCE-Black: Win1250 "(501.008)" ExtendedRoman ROM
*Font HoeflerTextCE-BlackItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font HoeflerTextCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font HoeflerTextCE-Regular: Win1250 "(501.009)" ExtendedRoman ROM
*Font JoannaMT-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT-BoldItalic: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font JoannaMT: Standard "(501.009)" ExtendedRoman ROM
*Font JoannaMTCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE-BoldItalic: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font JoannaMTCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font LetterGothic-Bold: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic-BoldSlanted: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic-Slanted: Standard "(501.010)" ExtendedRoman ROM
*Font LetterGothic: Standard "(501.009)" ExtendedRoman ROM
*Font LetterGothicCE-Bold: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE-BoldSlanted: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE-Slanted: Win1250 "(501.010)" ExtendedRoman ROM
*Font LetterGothicCE: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-Book: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-BookOblique: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-Demi: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraph-DemiOblique: Standard "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-Book: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-BookOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-Demi: Win1250 "(501.009)" ExtendedRoman ROM
*Font LubalinGraphCE-DemiOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font Marigold: Standard "(001.000)" Standard ROM
*Font MonaLisa-Recut: Standard "(001.000)" Standard ROM
*Font Monaco: Standard "(501.012)" ExtendedRoman ROM
*Font MonacoCE: Win1250 "(501.012)" ExtendedRoman ROM
*Font NewCenturySchlbk-Roman: Standard "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbk-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font NewCenturySchlbk-Italic: Standard "(501.011)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Italic: Win1250 "(501.011)" ExtendedRoman ROM
*Font NewCenturySchlbkCE-Roman: Win1250 "(501.008)" ExtendedRoman ROM
*Font NewYork: Standard "(501.013)" ExtendedRoman ROM
*Font NewYorkCE: Win1250 "(501.013)" ExtendedRoman ROM
*Font Optima-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Optima-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font Optima-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font Optima: Standard "(501.010)" ExtendedRoman ROM
*Font OptimaCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font OptimaCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font OptimaCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font OptimaCE-Roman: Win1250 "(501.010)" ExtendedRoman ROM
*Font Oxford: Standard "(001.000)" Standard ROM
*Font Palatino-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Palatino-BoldItalic: Standard "(501.007)" ExtendedRoman ROM
*Font Palatino-Italic: Standard "(501.008)" ExtendedRoman ROM
*Font Palatino-Roman: Standard "(501.006)" ExtendedRoman ROM
*Font PalatinoCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font PalatinoCE-BoldItalic: Win1250 "(501.007)" ExtendedRoman ROM
*Font PalatinoCE-Italic: Win1250 "(501.008)" ExtendedRoman ROM
*Font PalatinoCE-Roman: Win1250 "(501.006)" ExtendedRoman ROM
*Font StempelGaramond-Bold: Standard "(501.007)" ExtendedRoman ROM
*Font StempelGaramond-BoldItalic: Standard "(501.012)" ExtendedRoman ROM
*Font StempelGaramond-Italic: Standard "(501.009)" ExtendedRoman ROM
*Font StempelGaramond-Roman: Standard "(501.011)" ExtendedRoman ROM
*Font StempelGaramondCE-Bold: Win1250 "(501.007)" ExtendedRoman ROM
*Font StempelGaramondCE-BoldItalic: Win1250 "(501.012)" ExtendedRoman ROM
*Font StempelGaramondCE-Italic: Win1250 "(501.009)" ExtendedRoman ROM
*Font StempelGaramondCE-Roman: Win1250 "(501.011)" ExtendedRoman ROM
*Font Symbol: Special "(001.008)" Special ROM
*Font Tekton: Standard "(001.001)" Standard ROM
*Font Times-Bold: Standard "(501.009)" ExtendedRoman ROM
*Font Times-BoldItalic: Standard "(501.009)" ExtendedRoman ROM
*Font Times-Italic: Standard "(501.010)" ExtendedRoman ROM
*Font Times-Roman: Standard "(501.010)" ExtendedRoman ROM
*Font TimesCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesCE-BoldItalic: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesCE-Italic: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesCE-Roman: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesNewRomanCE-Bold: Win1250 "(501.009)" ExtendedRoman ROM
*Font TimesNewRomanCE-BoldItalic: Win1250 "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanCE-Italic: Win1250 "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanCE: Win1250 "(501.010)" ExtendedRoman ROM
*Font TimesNewRomanPS-BoldItalicMT: Standard "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanPS-BoldMT: Standard "(501.009)" ExtendedRoman ROM
*Font TimesNewRomanPS-ItalicMT: Standard "(501.011)" ExtendedRoman ROM
*Font TimesNewRomanPSMT: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-Bold: Standard "(501.008)" ExtendedRoman ROM
*Font Univers-BoldExt: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-BoldExtObl: Standard "(501.010)" ExtendedRoman ROM
*Font Univers-BoldOblique: Standard "(501.008)" ExtendedRoman ROM
*Font Univers-Condensed: Standard "(501.011)" ExtendedRoman ROM
*Font Univers-CondensedBold: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-CondensedBoldOblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-CondensedOblique: Standard "(501.011)" ExtendedRoman ROM
*Font Univers-Extended: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-ExtendedObl: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-Light: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-LightOblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers-Oblique: Standard "(501.009)" ExtendedRoman ROM
*Font Univers: Standard "(501.009)" ExtendedRoman ROM
*Font UniversCE-Bold: Win1250 "(501.008)" ExtendedRoman ROM
*Font UniversCE-BoldExt: Win1250 "(501.010)" ExtendedRoman ROM
*Font UniversCE-BoldExtObl: Win1250 "(501.010)" ExtendedRoman ROM
*Font UniversCE-BoldOblique: Win1250 "(501.008)" ExtendedRoman ROM
*Font UniversCE-Condensed: Win1250 "(501.011)" ExtendedRoman ROM
*Font UniversCE-CondensedBold: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-CondensedBoldOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-CondensedOblique: Win1250 "(501.011)" ExtendedRoman ROM
*Font UniversCE-Extended: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-ExtendedObl: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Light: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-LightOblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Medium: Win1250 "(501.009)" ExtendedRoman ROM
*Font UniversCE-Oblique: Win1250 "(501.009)" ExtendedRoman ROM
*Font Wingdings-Regular: Special "(001.001)" Special ROM
*Font ZapfChancery-MediumItalic: Standard "(002.000)" ExtendedRoman ROM
*Font ZapfChanceryCE-MediumItalic: Win1250 "(002.000)" ExtendedRoman ROM
*Font ZapfDingbats: Special "(001.005S)" Special ROM
*?FontQuery: "
 save
 { count 1 gt
 { exch dup 127 string cvs (/) print print (:) print
 /Font resourcestatus {pop pop (Yes)} {(No)} ifelse =
 } { exit } ifelse 
 } bind loop
 (*) = flush
 restore
"
*End
*?FontList: "
save
 (*) {cvn ==} 128 string /Font resourceforall
 (*) = flush
restore
"
*End

*% Printer Messages _____
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"
*% Status (format: %%[ status: <Message from the list below> ] %%)
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "PrinterError: toner low"
*Status: "PrinterError: toner sensor error"
*Status: "PrinterError: image drum life"
*Status: "PrinterError: fuser life"
*Status: "PrinterError: belt life"
*Status: "PrinterError: HDD trouble"
*Status: "PrinterError: file system full"
*Status: "PrinterError: disk full"
*Status: "PrinterError: memory overflow"
*Status: "PrinterError: waiting for manual feed"
*Status: "PrinterError: either paper empty, or no tray installed"
*Status: "PrinterError: stacker full error"
*Status: "PrinterError: cover open"
*Status: "PrinterError: toner empty error"
*Status: "PrinterError: paper size error"
*Status: "PrinterError: hopping error"
*Status: "PrinterError: paper feed jam"
*Status: "PrinterError: paper exit jam"
*Status: "PrinterError: paper duplex feed jam"
*Status: "PrinterError: paper duplex input jam"
*Status: "PrinterError: drum missing"
*Status: "PrinterError: belt unit not installed"
*Status: "PrinterError: fuser unit not installed"
*Status: "PrinterError: toner mixing mode"
*Status: "PrinterError: balance error"
*Status: "PrinterError: calibration error"
*Status: "PrinterError: density error"
*Status: "PrinterError: gammer error"
*Status: "PrinterError: process control off"
*Status: "PrinterError: printer engine life"
*Status: "PrinterError: oil roller not installed"
*Status: "PrinterError: oil roller life"
*Status: "PrinterError: waste toner full"
*Status: "PrinterError: waste toner near full"
*Status: "PrinterError: waste toner sensor full"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "Parallel"
*Source: "EtherTalk"
*Source: "HSP"
*Source: "USB"
*PrinterError: "toner low"
*PrinterError: "toner sensor error"
*PrinterError: "image drum life"
*PrinterError: "fuser life"
*PrinterError: "belt life"
*PrinterError: "HDD trouble"
*PrinterError: "file system full"
*PrinterError: "disk full"
*PrinterError: "memory overflow"
*PrinterError: "waiting for manual feed"
*PrinterError: "either paper empty, or no tray installed"
*PrinterError: "stacker full error"
*PrinterError: "cover open"
*PrinterError: "toner empty error"
*PrinterError: "paper size error"
*PrinterError: "hopping error"
*PrinterError: "paper feed jam"
*PrinterError: "paper exit jam"
*PrinterError: "paper duplex feed jam"
*PrinterError: "paper duplex input jam"
*PrinterError: "drum missing"
*PrinterError: "belt unit not installed"
*PrinterError: "fuser unit not installed"
*PrinterError: "toner mixing mode"
*PrinterError: "balance error"
*PrinterError: "calibration error"
*PrinterError: "density error"
*PrinterError: "gammer error"
*PrinterError: "process control off"
*PrinterError: "printer engine life"
*PrinterError: "oil roller not installed"
*PrinterError: "oil roller life"
*PrinterError: "waste toner full"
*PrinterError: "waste toner near full"
*PrinterError: "waste toner sensor full"

*% _____ Color Separation Information _____
*DefaultColorSep: ProcessBlack.170lpi.1200dpi/170 lpi / 1200 dpi

*% For 170 lpi / 1200 dpi ===============================

*ColorSepScreenAngle ProcessBlack.170lpi.1200dpi/170 lpi / 1200 dpi: "45"
*ColorSepScreenAngle CustomColor.170lpi.1200dpi/170 lpi / 1200 dpi: "45"
*ColorSepScreenAngle ProcessCyan.170lpi.1200dpi/170 lpi / 1200 dpi: "75"
*ColorSepScreenAngle ProcessMagenta.170lpi.1200dpi/170 lpi / 1200 dpi: "15"
*ColorSepScreenAngle ProcessYellow.170lpi.1200dpi/170 lpi / 1200 dpi: "45"

*ColorSepScreenFreq ProcessBlack.170lpi.1200dpi/170 lpi / 1200 dpi: "170"
*ColorSepScreenFreq CustomColor.170lpi.1200dpi/170 lpi / 1200 dpi: "170"
*ColorSepScreenFreq ProcessCyan.170lpi.1200dpi/170 lpi / 1200 dpi: "170"
*ColorSepScreenFreq ProcessMagenta.170lpi.1200dpi/170 lpi / 1200 dpi: "170"
*ColorSepScreenFreq ProcessYellow.170lpi.1200dpi/170 lpi / 1200 dpi: "170"

*% For 150 lpi / 1200 dpi ===============================

*ColorSepScreenAngle ProcessBlack.150lpi.1200dpi/150 lpi / 1200 dpi: "45"
*ColorSepScreenAngle CustomColor.150lpi.1200dpi/150 lpi / 1200 dpi: "45"
*ColorSepScreenAngle ProcessCyan.150lpi.1200dpi/150 lpi / 1200 dpi: "75"
*ColorSepScreenAngle ProcessMagenta.150lpi.1200dpi/150 lpi / 1200 dpi: "15"
*ColorSepScreenAngle ProcessYellow.150lpi.1200dpi/150 lpi / 1200 dpi: "45"

*ColorSepScreenFreq ProcessBlack.150lpi.1200dpi/150 lpi / 1200 dpi: "150"
*ColorSepScreenFreq CustomColor.150lpi.1200dpi/150 lpi / 1200 dpi: "150"
*ColorSepScreenFreq ProcessCyan.150lpi.1200dpi/150 lpi / 1200 dpi: "150"
*ColorSepScreenFreq ProcessMagenta.150lpi.1200dpi/150 lpi / 1200 dpi: "150"
*ColorSepScreenFreq ProcessYellow.150lpi.1200dpi/150 lpi / 1200 dpi: "150"

*% For 170 lpi / 600 dpi ===============================

*ColorSepScreenAngle ProcessBlack.170lpi.600dpi/170 lpi / 600 dpi: "45"
*ColorSepScreenAngle CustomColor.170lpi.600dpi/170 lpi / 600 dpi: "45"
*ColorSepScreenAngle ProcessCyan.170lpi.600dpi/170 lpi / 600 dpi: "75"
*ColorSepScreenAngle ProcessMagenta.170lpi.600dpi/170 lpi / 600 dpi: "15"
*ColorSepScreenAngle ProcessYellow.170lpi.600dpi/170 lpi / 600 dpi: "45"

*ColorSepScreenFreq ProcessBlack.170lpi.600dpi/170 lpi / 600 dpi: "170"
*ColorSepScreenFreq CustomColor.170lpi.600dpi/170 lpi / 600 dpi: "170"
*ColorSepScreenFreq ProcessCyan.170lpi.600dpi/170 lpi / 600 dpi: "170"
*ColorSepScreenFreq ProcessMagenta.170lpi.600dpi/170 lpi / 600 dpi: "170"
*ColorSepScreenFreq ProcessYellow.170lpi.600dpi/170 lpi / 600 dpi: "170"

*% For 150 lpi / 600 dpi ===============================

*ColorSepScreenAngle ProcessBlack.150lpi.600dpi/150 lpi / 600 dpi: "45"
*ColorSepScreenAngle CustomColor.150lpi.600dpi/150 lpi / 600 dpi: "45"
*ColorSepScreenAngle ProcessCyan.150lpi.600dpi/150 lpi / 600 dpi: "75"
*ColorSepScreenAngle ProcessMagenta.150lpi.600dpi/150 lpi / 600 dpi: "15"
*ColorSepScreenAngle ProcessYellow.150lpi.600dpi/150 lpi / 600 dpi: "45"

*ColorSepScreenFreq ProcessBlack.150lpi.600dpi/150 lpi / 600 dpi: "150"
*ColorSepScreenFreq CustomColor.150lpi.600dpi/150 lpi / 600 dpi: "150"
*ColorSepScreenFreq ProcessCyan.150lpi.600dpi/150 lpi / 600 dpi: "150"
*ColorSepScreenFreq ProcessMagenta.150lpi.600dpi/150 lpi / 600 dpi: "150"
*ColorSepScreenFreq ProcessYellow.150lpi.600dpi/150 lpi / 600 dpi: "150"
