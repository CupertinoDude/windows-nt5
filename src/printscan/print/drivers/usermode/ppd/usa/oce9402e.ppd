*PPD-Adobe: "4.3"
*%
*%      PostScript(R) Printer Description file for the Oce 9400-II
*%
*%      Copyright 2001 Oce-Technologies B.V.
*%
*% Feb_23_2001
*%=====================================================================

*FormatVersion: "4.3"
*FileVersion: "1.12"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*Manufacturer: "Oce"
*ModelName: "Oce 9400-II PostScript"
*PCFileName: "OCE9402E.PPD"
*Product: "(Oce 9400-II)"
*PSVersion: "(2014.069) 0"
*ShortNickName: "Oce 9400-II PostScript"
*NickName:  "Oce 9400-II PostScript"

*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option1/Second roll: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1

*CloseGroup: InstallableOptions

*% Disable the selection of the 2nd roll if it is not available
*%
*UIConstraints: *Option1 False *InputSlot Roll2
*UIConstraints: *InputSlot Roll2 *Option1 False 

*%=== Basic Device Capabilities ===========================
*%
*ColorDevice: False
*DefaultColorSpace: Gray
*LanguageLevel: "2"
*% Throughput is 2 A0/minute == 11 * 8.5"
*Throughput: "11"
*TTRasterizer: Type42
*?TTRasterizer: "
    {42 /FontType findresource pop (Type42) } stopped { (Unknown) } if show
    "
*End

*%=====System Management===============================

*FreeVM: "1000000"
*Reset: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver systemdict /quit get exec }
{
  (WARNING : Printer reset failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*Password: "0"
*ExitServer: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver }
{
  (WARNING : Exitserver command failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*%====Resolution===================================

*DefaultResolution: 300dpi
*Resolution 300dpi: ""

*% Gray Levels and Halftoning Information ===============

*DefaultHalftoneType: 1
*AccurateScreensSupport: False
*ScreenFreq: "45.0"
*ScreenAngle: "45.0"

*DefaultScreenProc: Dot
*ScreenProc Dot: "{dup mul exch dup mul add 1.0 exch sub }"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*%=== Paper Handling =======================

*OpenGroup: Paper

*% Page Size: sets up the frame buffer and selects a tray
*%
*OpenUI *PageSize: PickOne
*OrderDependency: 50.0 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize Letter/A 8.5"x11": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 612  792] >> setpagedevice"
*End
*PageSize Tabloid/B 11"x17": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 792 1224] >> setpagedevice"
*End
*PageSize AnsiC/C 17"x22": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1224 1584] >> setpagedevice"
*End
*PageSize AnsiD/D 22"x34": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1584 2448] >> setpagedevice"
*End
*PageSize AnsiE/E 34"x44": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [2448 3168] >> setpagedevice"
*End
*PageSize ARCHA/A+ 9"x12": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 648  864] >> setpagedevice"
*End
*PageSize ARCHB/B+ 12"x18": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 864 1296] >> setpagedevice"
*End
*PageSize ARCHC/C+ 18"x24": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1296 1728] >> setpagedevice"
*End
*PageSize ARCHD/D+ 24"x36": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1728 2592] >> setpagedevice"
*End
*PageSize ARCHE/E+ 36"x48": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [2592 3456] >> setpagedevice"
*End
*PageSize A4/A4: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 595  842] >> setpagedevice"
*End
*PageSize A3/A3: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [ 842 1191] >> setpagedevice"
*End
*PageSize A2/A2: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1191 1684] >> setpagedevice"
*End
*PageSize A1/A1: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1684 2384] >> setpagedevice"
*End
*PageSize A0/A0: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [2384 3370] >> setpagedevice"
*End
*PageSize ISOB2/B2 500x707mm: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1417 2004] >> setpagedevice"
*End
*PageSize ISOB1/B1 707x1000mm: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [2004 2835] >> setpagedevice"
*End
*PageSize inch30/30"x42": "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [2160 3024] >> setpagedevice"
*End
*PageSize mm700/700x1000mm: "
<<	/MediaPosition null
	/ImagingBBox null /PageSize [1984 2835] >> setpagedevice"
*End
*?PageSize: "
    save
    /ps currentpagedevice /PageSize get def
    <<
	/Letter   [ 612   792 ]
	/Tabloid   [ 792  1224 ]
	/AnsiC   [1224  1584 ]
	/AnsiD   [1584  2448 ]
	/AnsiE   [2448  3168 ]
	/ARCHA   [ 648   864 ]
	/ARCHB   [ 864  1296 ]
	/ARCHC   [1296  1728 ]
	/ARCHD   [1728  2592 ]
	/ARCHE   [2592  3456 ]
	/A4      [ 595   842 ]
	/A3      [ 842  1191 ]
	/A2      [1191  1684 ]
	/A1      [1684  2384 ]
	/A0      [2384  3370 ]
	/ISOB2      [1417  2004 ]
	/ISOB1      [2004  2835 ]
	/inch30  [2160  3024 ]
	/mm700   [1984  2835 ]
    >> {
	    dup 0 get ps 0 get sub abs 5 gt
	    {
		pop pop
	    }
	    {
		1 get ps 1 get sub abs 5 gt { pop }{10 string cvs print exit } ifelse
	    }
	    ifelse
	} forall
flush
restore
"
*End
*CloseUI: *PageSize

*% Page Region: sets up a frame buffer, usually used with manual feed
*%
*OpenUI *PageRegion: PickOne
*OrderDependency: 50.1 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion Letter/A 8.5"x11": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 612  792] >> setpagedevice"
*End
*PageRegion Tabloid/B 11"x17":"
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 792 1224] >> setpagedevice"
*End
*PageRegion AnsiC/C 17"x22": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
        /ImagingBBox null /PageSize [1224 1584] >> setpagedevice"
*End
*PageRegion AnsiD/D 22"x34": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1584 2448] >> setpagedevice"
*End
*PageRegion AnsiE/E 34"x44": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [2448 3168] >> setpagedevice"
*End
*PageRegion ARCHA/A+ 9"x12": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 648  864] >> setpagedevice"
*End
*PageRegion ARCHB/B+ 12"x18": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 864 1296] >> setpagedevice"
*End
*PageRegion ARCHC/C+ 18"x24": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1296 1728] >> setpagedevice"
*End
*PageRegion ARCHD/D+ 24"x36": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1728 2592] >> setpagedevice"
*End
*PageRegion ARCHE/E+ 36"x48": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [2592 3456] >> setpagedevice"
*End
*PageRegion A4/A4: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 595  842] >> setpagedevice"
*End
*PageRegion A3/A3: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [ 842 1191] >> setpagedevice"
*End
*PageRegion A2/A2: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1191 1684] >> setpagedevice"
*End
*PageRegion A1/A1: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1684 2384] >> setpagedevice"
*End
*PageRegion A0/A0: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [2384 3370] >> setpagedevice"
*End
*PageRegion ISOB2/B2 500x707mm: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1417 2004] >> setpagedevice"
*End
*PageRegion ISOB1/B1 707x1000mm: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [2004 2835] >> setpagedevice"
*End
*PageRegion inch30/30"x42": "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [2160 3024] >> setpagedevice"
*End
*PageRegion mm700/700x1000mm: "
<<	/MediaPosition null
	userdict /ppdmp known {pop pop}if
	/ImagingBBox null /PageSize [1984 2835] >> setpagedevice"
*End
*CloseUI: *PageRegion

*% The imageable area for the different paper sizes
*%
*DefaultImageableArea: Unknown
*ImageableArea Letter/A 8.5"x11":"9 9  603  783"
*ImageableArea Tabloid/B 11"x17": "9 9  783 1215"
*ImageableArea AnsiC/C 17"x22": "9 9 1215 1575"
*ImageableArea AnsiD/D 22"x34": "9 9 1575 2439"
*ImageableArea AnsiE/E 34"x44": "9 9 2439 3159"
*ImageableArea ARCHA/A+ 9"x12":  "9 9  639  855"
*ImageableArea ARCHB/B+ 12"x18": "9 9  855 1287"
*ImageableArea ARCHC/C+ 18"x24": "9 9 1287 1719"
*ImageableArea ARCHD/D+ 24"x36": "9 9 1719 2583"
*ImageableArea ARCHE/E+ 36"x48": "9 9 2583 3447"
*ImageableArea A4/A4:  "9 9  586  833"
*ImageableArea A3/A3:  "9 9  833 1182"
*ImageableArea A2/A2:  "9 9 1182 1675"
*ImageableArea A1/A1:  "9 9 1675 2375"
*ImageableArea A0/A0: "9 9 2375 3361"
*ImageableArea ISOB2/B2 500x707mm:  "9 9 1408 1995"
*ImageableArea ISOB1/B1 707x1000mm: "9 9 1995 2826"
*ImageableArea inch30/30"x42":   "9 9 2151 3015"
*ImageableArea mm700/700x1000mm: "9 9 1975 2826"

*?ImageableArea: "
save
	initclip
	/convprint { cvi 12 string cvs print ( ) print } bind def
	newpath clippath pathbbox
	4 -2 roll exch ceiling convprint ceiling convprint
	exch floor convprint floor convprint (\n) print flush
restore
"
*End

*% The physical dimensions of the paper
*%
*DefaultPaperDimension: Unknown
*PaperDimension Letter/A 8.5"x11":" 612  792"
*PaperDimension Tabloid/B 11"x17": " 792 1224"
*PaperDimension AnsiC/C 17"x22": "1224 1584"
*PaperDimension AnsiD/D 22"x34": "1584 2448"
*PaperDimension AnsiE/E 34"x44": "2448 3168"
*PaperDimension ARCHA/A+ 9"x12":  " 648  864"
*PaperDimension ARCHB/B+ 12"x18": " 864 1296"
*PaperDimension ARCHC/C+ 18"x24": "1296 1728"
*PaperDimension ARCHD/D+ 24"x36": "1728 2592"
*PaperDimension ARCHE/E+ 36"x48": "2592 3456"
*PaperDimension A4/A4:  " 595  842"
*PaperDimension A3/A3:  " 842 1191"
*PaperDimension A2/A2:  "1191 1684"
*PaperDimension A1/A1:  "1684 2384"
*PaperDimension A0/A0: "2384 3370"
*PaperDimension ISOB2/B2 500x707mm:  "1417 2004"
*PaperDimension ISOB1/B1 707x1000mm: "2004 2835"
*PaperDimension inch30/30"x42":   "2160 3024"
*PaperDimension mm700/700x1000mm: "1984 2835"

*% ========Custom page sizes=======================================
*%
*MaxMediaWidth:  "2592"
*MaxMediaHeight: "42519"
*?CurrentMediaWidth: "
	currentpagedevice /InputAttributes get /PageSize get 1 get == flush
"
*End

*HWMargins: 8.5 8.5 8.5 8.5
*ParamCustomPageSize Width:        1 points 595    2592
*ParamCustomPageSize Height:       2 points 595   42519
*ParamCustomPageSize WidthOffset:  3 points 0    2592
*ParamCustomPageSize HeightOffset: 4 points 0   42519
*ParamCustomPageSize Orientation:  5  int 0       3
*CustomPageSize True: "
	pop pop pop
	2 dict begin
	/PageSize [ 4 -2 roll ] def
	/ImagingBBox null def
	currentdict end setpagedevice
"
*End

*CloseGroup: Paper

*% Media handling features ================================

*OpenUI *InputSlot: PickOne
*OrderDependency: 50.2 AnySetup *InputSlot
*DefaultInputSlot: Unknown
*InputSlot Roll1/Roll 1:   "
	userdict /ppdmp 1 put
	<< /MediaPosition 0 >> setpagedevice"
*End
*InputSlot Roll2/Roll 2:   "
	userdict /ppdmp 1 put
	<< /MediaPosition 1 >> setpagedevice"
*End
*InputSlot ManualFeed/Manual Feed: " << /ManualFeed true >> setpagedevice "
*CloseUI: *InputSlot

*%OpenUI *ManualFeed/Manual Feed: Boolean
*%OrderDependency: 50.3 AnySetup *ManualFeed
*%ManualFeed True: " << /ManualFeed true >> setpagedevice "
*%ManualFeed False: " << /ManualFeed false >> setpagedevice "
*%DefaultManualFeed: False
*%?ManualFeed: "
*%	currentpagedevice /ManualFeed get
*%	{(True)}{(False)} ifelse = flush
*%	"
*%End
*%CloseUI: *ManualFeed

*RequiresPageRegion All: True

*% Processing options =====================================
*%
*OpenUI *OCPosterMode/Poster Mode: PickOne
*OrderDependency: 50.4 AnySetup *OCPosterMode
*DefaultOCPosterMode: False
*OCPosterMode True/Enabled:  "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails << /PosterMode true >>
	>> setpagedevice "
*End
*OCPosterMode False/Disabled: "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails << /PosterMode false >>
	>> setpagedevice "
*End
*CloseUI: *OCPosterMode

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.001)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.001)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.001)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.001)" Standard ROM
*Font Bookman-Demi: Standard "(001.001)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.001)" Standard ROM
*Font Bookman-Light: Standard "(001.001)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.001)" Standard ROM
*Font Courier: Standard "(001.004)" Standard ROM
*Font Courier-Bold: Standard "(001.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(001.004)" Standard ROM
*Font Courier-Oblique: Standard "(001.004)" Standard ROM
*Font Helvetica: Standard "(001.001)" Standard ROM
*Font Helvetica-Bold: Standard "(001.001)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.002)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.002)" Standard ROM
*Font Palatino-Bold: Standard "(001.000)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.000)" Standard ROM
*Font Palatino-Italic: Standard "(001.000)" Standard ROM
*Font Palatino-Roman: Standard "(001.000)" Standard ROM
*Font Symbol: Special "(001.001)" Special ROM
*Font Times-Bold: Standard "(001.001)" Standard ROM
*Font Times-BoldItalic: Standard "(001.001)" Standard ROM
*Font Times-Italic: Standard "(001.001)" Standard ROM
*Font Times-Roman: Standard "(001.001)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.002)" Standard ROM
*Font ZapfDingbats: Special "(001.000)" Special ROM

*?FontQuery: "
save
/sv exch def
 {
    count 0 gt
    {
      dup /Font resourcestatus {pop pop (:Yes) }{(:No)} ifelse
      exch 127 string cvs (/) print print print
    }
    {
      exit
    }
    ifelse
  } bind loop
  (*) = flush
sv restore
"
*End

*?FontList: "
    (*) {(/) print print} 127 string /Font resourceforall
    (*) = flush
"
*End

*% Color Separation Information =====================

*DefaultColorSep: ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi

*%InkName: ProcessCyan/Process Cyan
*%InkName: ProcessMagenta/Process Magenta
*%InkName: ProcessYellow/Process Yellow
*%InkName: ProcessBlack/Process Black
*%InkName: CustomColor/Custom Color

*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"
*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"

*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"

*ColorSepScreenProc ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*ColorSepTransfer ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "{ }"
*ColorSepTransfer ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "{ }"
*ColorSepTransfer ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "{ }"
*ColorSepTransfer ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "{ }"
*ColorSepTransfer CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "{ }"

*% Finishing options ===============================

*% Printer Messages Information =====================

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "printer operational, no error present"
*PrinterError: "manual feed timeout"
*PrinterError: "check paper input unit"
*PrinterError: "check paper output unit"
*PrinterError: "check paper path"
*PrinterError: "if empty, feed sheet to manual slot"
*PrinterError: "please wait, temporary error"
*PrinterError: "please wait, printer warming up"
*PrinterError: "please wait, printer initializing"
*PrinterError: "please wait, printer selftest"
*PrinterError: "printer off line"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "printing test page"
*Status: "initializing"
*Status: "PrinterError: printer operational, no error present"
*Status: "PrinterError: manual feed timeout"
*Status: "PrinterError: check paper input unit"
*Status: "PrinterError: check paper output unit"
*Status: "PrinterError: check paper path"
*Status: "PrinterError: if empty, feed sheet to manual slot"
*Status: "PrinterError: please wait, temporary error"
*Status: "PrinterError: please wait, printer warming up"
*Status: "PrinterError: please wait, printer initializing"
*Status: "PrinterError: please wait, printer selftest"
*Status: "PrinterError: printer off line"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "SerialB"
*Source: "Serial"
*Source: "LocalTalk"
*Source: "Parallel"

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\fontname\ not found, using Courier"

*% end of PPD file

