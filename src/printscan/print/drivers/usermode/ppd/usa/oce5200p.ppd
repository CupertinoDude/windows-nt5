*PPD-Adobe: "4.3"
*%
*%      PostScript(R) Printer Description file for the Oce 5200 PS
*%
*%      Copyright 2001 Oce-Technologies B.V.
*%
*% Feb_23_2001
*%=====================================================================

*FileVersion: "1.12"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*Manufacturer: "Oce"
*ModelName: "Oce 5200 PostScript"
*PCFileName: "OCE5200P.PPD"
*Product: "(Oce 5200)"
*PSVersion: "(2014.069) 0"
*ShortNickName: "Oce 5200 PostScript"
*NickName:  "Oce 5200 PostScript"


*% === Options and Constraints =========


*%=== Basic Device Capabilities =======================================

*ColorDevice: True
*DefaultColorSpace: CMY
*LanguageLevel: "2"
*Throughput: "1"
*TTRasterizer: Type42
*?TTRasterizer: "
    {42 /FontType findresource pop (Type42) } stopped { (Unknown) } if show
    "
*End

*%===System Management============================================

*FreeVM: "1000000"
*Reset: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver systemdict /quit get exec }
{
  (WARNING : Printer reset failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*Password: "0"
*ExitServer: "
count 0 gt
{ dup type /integertype eq
  { dup statusdict /checkpassword get exec }
  { false } ifelse
}
{ false } ifelse
{ serverdict begin exitserver }
{
  (WARNING : Exitserver command failed.) =
  (Incorrect or missing password.) = flush
} ifelse
"
*End

*%===Resolution=========================================

*DefaultResolution: 360dpi
*Resolution 360dpi: ""

*% Gray levels and Halftoning ===============================

*DefaultHalftoneType: 1
*AccurateScreensSupport: False
*ScreenFreq: "45.0"
*ScreenAngle: "45.0"

*DefaultScreenProc: Dot
*ScreenProc Dot: "{dup mul exch dup mul add 1.0 exch sub }"
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Color Adjustment ==============================================

*OpenUI *ColorModel/Color Mode: PickOne
*OrderDependency: 50.0 AnySetup *ColorModel
*DefaultColorModel: CMY
*ColorModel CMY/Full Color: "
	currentpagedevice /CarriageConfig get
	dup 1 eq { << /ProcessColorModel /DeviceCMYK >> setpagedevice} if
	dup 0 eq { << /ProcessColorModel /DeviceGray >> setpagedevice} if
"
*End
*ColorModel Gray/Monochrome: "
	currentpagedevice /CarriageConfig get
	dup 1 eq { << /ProcessColorModel /DeviceGray >> setpagedevice} if
	dup 0 eq { << /ProcessColorModel /DeviceGray >> setpagedevice} if
"
*End
*CloseUI: *ColorModel



*% Color Adjustment =============================================
*OpenUI *OCPrintQuality/Print Quality: PickOne
*OrderDependency: 50.1 AnySetup *OCPrintQuality
*DefaultOCPrintQuality: Normal
*OCPrintQuality Draft/Draft: "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails
	   << /Quality 0 >> >> setpagedevice
"
*End
*OCPrintQuality Normal/Normal: "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails
	   << /Quality 1 >> >> setpagedevice
"
*End
*OCPrintQuality Enhanced/Enhanced: "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails
	   << /Quality 2 >> >> setpagedevice
"
*End
*OCPrintQuality High/High: "
	<< /PostRenderingEnhance true
	   /PostRenderingEnhanceDetails
	   << /Quality 3 >> >> setpagedevice
"
*End
*CloseUI: *OCPrintQuality


*%=== Paper Handling =======================

*OpenGroup: Paper

*% Page Size: sets up the frame buffer and selects a tray

*OpenUI *PageSize: PickOne
*OrderDependency: 50.2 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize Letter/A 8.5"x11": "<< /PageSize [ 612  792] >> setpagedevice"
*PageSize Tabloid/B 11"x17":  "<< /PageSize [ 792 1224] >> setpagedevice"
*PageSize AnsiC/C 17"x22":  "<< /PageSize [1224 1584] >> setpagedevice"
*PageSize AnsiD/D 22"x34":  "<< /PageSize [1584 2448] >> setpagedevice"
*PageSize AnsiE/E 34"x44":  "<< /PageSize [2448 3168] >> setpagedevice"
*PageSize ARCHA/A+ 9"x12":  "<< /PageSize [ 648  864] >> setpagedevice"
*PageSize ARCHB/B+ 12"x18": "<< /PageSize [ 864 1296] >> setpagedevice"
*PageSize ARCHC/C+ 18"x24": "<< /PageSize [1296 1728] >> setpagedevice"
*PageSize ARCHD/D+ 24"x36": "<< /PageSize [1728 2592] >> setpagedevice"
*PageSize A4/A4:            "<< /PageSize [ 595  842] >> setpagedevice"
*PageSize A3/A3:            "<< /PageSize [ 842 1191] >> setpagedevice"
*PageSize A2/A2:            "<< /PageSize [1191 1684] >> setpagedevice"
*PageSize A1/A1:            "<< /PageSize [1684 2384] >> setpagedevice"
*PageSize A0/A0:            "<< /PageSize [2384 3370] >> setpagedevice"
*?PageSize: "
    save
    /ps currentpagedevice /PageSize get def
    <<
	/Letter   [ 612   792 ]
	/Tabloid   [ 792  1224 ]
	/AnsiC   [1224  1584 ]
	/AnsiD   [1584  2448 ]
	/AnsiE   [2448  3168 ]
	/ARCHA   [ 648   864 ]
	/ARCHB   [ 864  1296 ]
	/ARCHC   [1296  1728 ]
	/ARCHD   [1728  2592 ]
	/A4      [ 595   842 ]
	/A3      [ 842  1191 ]
	/A2      [1191  1684 ]
	/A1      [1684  2384 ]
	/A0      [2384  3370 ]
    >> {
	    dup 0 get ps 0 get sub abs 5 gt
	    {
		pop pop
	    }
	    {
		1 get ps 1 get sub abs 5 gt { pop }{10 string cvs print exit } ifelse
	    }
	    ifelse
	} forall
flush
restore
"
*End
*CloseUI: *PageSize

*% Page Region: sets up a frame buffer, usually used with manual feed

*OpenUI *PageRegion: PickOne
*OrderDependency: 50.3 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion Letter/A 8.5"x11": "<< /PageSize [ 612  792] >> setpagedevice"
*PageRegion Tabloid/B 11"x17":  "<< /PageSize [ 792 1224] >> setpagedevice"
*PageRegion AnsiC/C 17"x22":  "<< /PageSize [1224 1584] >> setpagedevice"
*PageRegion AnsiD/D 22"x34":  "<< /PageSize [1584 2448] >> setpagedevice"
*PageRegion AnsiE/E 34"x44":  "<< /PageSize [2448 3168] >> setpagedevice"
*PageRegion ARCHA/A+ 9"x12":  "<< /PageSize [ 648  864] >> setpagedevice"
*PageRegion ARCHB/B+ 12"x18": "<< /PageSize [ 864 1296] >> setpagedevice"
*PageRegion ARCHC/C+ 18"x24": "<< /PageSize [1296 1728] >> setpagedevice"
*PageRegion ARCHD/D+ 24"x36": "<< /PageSize [1728 2592] >> setpagedevice"
*PageRegion A4/A4:            "<< /PageSize [ 595  842] >> setpagedevice"
*PageRegion A3/A3:            "<< /PageSize [ 842 1191] >> setpagedevice"
*PageRegion A2/A2:            "<< /PageSize [1191 1684] >> setpagedevice"
*PageRegion A1/A1:            "<< /PageSize [1684 2384] >> setpagedevice"
*PageRegion A0/A0:            "<< /PageSize [2384 3370] >> setpagedevice"
*CloseUI: *PageRegion

*% The imageable area for the different paper sizes

*DefaultImageableArea: Unknown
*ImageableArea Letter/A 8.5"x11": "0 17 513 775"
*ImageableArea Tabloid/B 11"x17": "0 17 693 1207"
*ImageableArea AnsiC/C 17"x22": "0 17 1125 1567"
*ImageableArea AnsiD/D 22"x34": "0 17 1485 2431"
*ImageableArea AnsiE/E 34"x44": "0 17 2349 3151"
*ImageableArea ARCHA/A+ 9"x12": "0 17 549 847"
*ImageableArea ARCHB/B+ 12"x18": "0 17 765 1279"
*ImageableArea ARCHC/C+ 18"x24": "0 17 1197 1711"
*ImageableArea ARCHD/D+ 24"x36": "0 17 1629 2575"
*ImageableArea A4/A4: "0 17 496 815"
*ImageableArea A3/A3: "0 17 629 1174"
*ImageableArea A2/A2: "0 17 978 1667"
*ImageableArea A1/A1: "0 17 1471 2367"
*ImageableArea A0/A0: "0 17 2171 3353"
*?ImageableArea: "
save
	initclip
	/convprint { cvi 12 string cvs print ( ) print } bind def
	newpath clippath pathbbox
	4 -2 roll exch ceiling convprint ceiling convprint
	exch floor convprint floor convprint (\n) print flush
restore
"
*End

*% The physical dimensions of the paper
*DefaultPaperDimension: Unknown
*PaperDimension Letter/A 8.5"x11": "612 792"
*PaperDimension Tabloid/B 11"x17": "792 1224"
*PaperDimension AnsiC/C 17"x22": "1224 1584"
*PaperDimension AnsiD/D 22"x34": "1584 2448"
*PaperDimension AnsiE/E 34"x44": "2448 3168"
*PaperDimension ARCHA/A+ 9"x12": "648 864"
*PaperDimension ARCHB/B+ 12"x18": "864 1296"
*PaperDimension ARCHC/C+ 18"x24": "1296 1728"
*PaperDimension ARCHD/D+ 24"x36": "1728 2592"
*PaperDimension A4/A4: "595 842"
*PaperDimension A3/A3: "842 1191"
*PaperDimension A2/A2: "1191 1684"
*PaperDimension A1/A1: "1684 2384"
*PaperDimension A0/A0: "2384 3370"

*RequiresPageRegion All: True

*% Custom page sizes

*CustomPageSize True: "
	pop pop pop
	2 dict begin
	/PageSize [ 4 -2 roll ] def
	/ImagingBBox null def
	currentdict end setpagedevice
"
*End
*?CurrentMediaWidth: "
	currentpagedevice /InputAttributes get /PageSize get 1 get == flush
"
*End

*HWMargins: 113 14 57 14
*ParamCustomPageSize Width:        1 points 595    2592
*ParamCustomPageSize Height:       2 points 595   42519
*ParamCustomPageSize WidthOffset:  3 points 0    2592
*ParamCustomPageSize HeightOffset: 4 points 0   42519
*ParamCustomPageSize Orientation:  5  int 0       3
*MaxMediaWidth:  "2448"
*MaxMediaHeight: "45354"

*CloseGroup: Paper


*% Media handling features ================================

*OpenUI *InputSlot: PickOne
*OrderDependency: 50.4 AnySetup *InputSlot
*DefaultInputSlot: Roll
*InputSlot Roll/Roll: ""
*CloseUI: *InputSlot


*% Processing options =====================================

*OpenUI *OCPaperOrientation/Page Layout: PickOne
*OrderDependency: 50.5 AnySetup *OCPaperOrientation
*DefaultOCPaperOrientation: Landscape
*OCPaperOrientation Landscape/Landscape: "<< /PageLayout 0 >> setpagedevice"
*OCPaperOrientation Portrait/Portrait: "<< /PageLayout 1 >> setpagedevice"
*CloseUI: *OCPaperOrientation



*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.001)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.001)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.001)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.001)" Standard ROM
*Font Bookman-Demi: Standard "(001.001)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.001)" Standard ROM
*Font Bookman-Light: Standard "(001.001)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.001)" Standard ROM
*Font Courier: Standard "(001.004)" Standard ROM
*Font Courier-Bold: Standard "(001.004)" Standard ROM
*Font Courier-BoldOblique: Standard "(001.004)" Standard ROM
*Font Courier-Oblique: Standard "(001.004)" Standard ROM
*Font Helvetica: Standard "(001.001)" Standard ROM
*Font Helvetica-Bold: Standard "(001.001)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.001)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.000)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.002)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.001)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.002)" Standard ROM
*Font Palatino-Bold: Standard "(001.000)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.000)" Standard ROM
*Font Palatino-Italic: Standard "(001.000)" Standard ROM
*Font Palatino-Roman: Standard "(001.000)" Standard ROM
*Font Symbol: Special "(001.001)" Special ROM
*Font Times-Bold: Standard "(001.001)" Standard ROM
*Font Times-BoldItalic: Standard "(001.001)" Standard ROM
*Font Times-Italic: Standard "(001.001)" Standard ROM
*Font Times-Roman: Standard "(001.001)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.002)" Standard ROM
*Font ZapfDingbats: Special "(001.000)" Special ROM
*?FontQuery: "
save
/sv exch def
 {
    count 0 gt
    {
      dup /Font resourcestatus {pop pop (:Yes) }{(:No)} ifelse
      exch 127 string cvs (/) print print print
    }
    {
      exit
    }
    ifelse
  } bind loop
  (*) = flush
sv restore
"
*End
*?FontList: "
    (*) {(/) print print} 127 string /Font resourceforall
    (*) = flush
"
*End



*% Color Separation Information =====================

*DefaultColorSep: ProcessCyan.60lpi.360dpi/60 lpi / 360 dpi

*%InkName: ProcessCyan/Process Cyan
*%InkName: ProcessMagenta/Process Magenta
*%InkName: ProcessYellow/Process Yellow
*%InkName: ProcessBlack/Process Black
*%InkName: CustomColor/Custom Color

*ColorSepScreenAngle ProcessCyan.60lpi.360dpi/60 lpi / 360 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.360dpi/60 lpi / 360 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.360dpi/60 lpi / 360 dpi: "0"
*ColorSepScreenAngle ProcessBlack.60lpi.360dpi/60 lpi / 360 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.360dpi/60 lpi / 360 dpi: "45"

*ColorSepScreenFreq ProcessCyan.60lpi.360dpi/60 lpi / 360 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.360dpi/60 lpi / 360 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.360dpi/60 lpi / 360 dpi: "60"
*ColorSepScreenFreq ProcessBlack.60lpi.360dpi/60 lpi / 360 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.360dpi/60 lpi / 360 dpi: "60"

*ColorSepScreenProc ProcessCyan.60lpi.360dpi/60 lpi / 360 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessMagenta.60lpi.360dpi/60 lpi / 360 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessYellow.60lpi.360dpi/60 lpi / 360 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc ProcessBlack.60lpi.360dpi/60 lpi / 360 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End
*ColorSepScreenProc CustomColor.60lpi.360dpi/60 lpi / 360 dpi: "
{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
sub }{dup mul exch dup mul add 1 exch sub }ifelse }"
*End

*ColorSepTransfer ProcessCyan.60lpi.360dpi/60 lpi / 360 dpi: "{ }"
*ColorSepTransfer ProcessMagenta.60lpi.360dpi/60 lpi / 360 dpi: "{ }"
*ColorSepTransfer ProcessYellow.60lpi.360dpi/60 lpi / 360 dpi: "{ }"
*ColorSepTransfer ProcessBlack.60lpi.360dpi/60 lpi / 360 dpi: "{ }"
*ColorSepTransfer CustomColor.60lpi.360dpi/60 lpi / 360 dpi: "{ }"



*% Finishing options ===============================



*% Printer Messages Information =====================

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "printer operational, no error present"
*PrinterError: "manual feed timeout"
*PrinterError: "check paper input unit"
*PrinterError: "check paper output unit"
*PrinterError: "check paper path"
*PrinterError: "if empty, feed sheet to manual slot"
*PrinterError: "please wait, temporary error"
*PrinterError: "please wait, printer warming up"
*PrinterError: "please wait, printer initializing"
*PrinterError: "please wait, printer selftest"
*PrinterError: "printer off line"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "printing test page"
*Status: "initializing"
*Status: "PrinterError: printer operational, no error present"
*Status: "PrinterError: manual feed timeout"
*Status: "PrinterError: check paper input unit"
*Status: "PrinterError: check paper output unit"
*Status: "PrinterError: check paper path"
*Status: "PrinterError: if empty, feed sheet to manual slot"
*Status: "PrinterError: please wait, temporary error"
*Status: "PrinterError: please wait, printer warming up"
*Status: "PrinterError: please wait, printer initializing"
*Status: "PrinterError: please wait, printer selftest"
*Status: "PrinterError: printer off line"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "SerialB"
*Source: "Serial"
*Source: "LocalTalk"
*Source: "Parallel"

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\fontname\ not found, using Courier"

*% end of PPD file



















