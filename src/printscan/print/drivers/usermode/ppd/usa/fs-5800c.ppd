*PPD-Adobe: "4.3"
*%=============================================================================
*%
*%  PPD file for Kyocera FS-5800C (USA English)
*%
*%  Copyright (C) 1993-1999 Kyocera Technology Development Inc.
*%  All Rights Reserved
*%
*%  Permission is granted for redistribution of this file as long as this
*%  copyright notice is intact and the contents of the file are not altered
*%  in any way from their original form.
*%
*%  Contents of this file are automatically generated with the PPDGEN utility 
*%
*%=============================================================================

*FileVersion: "1.6.2"
*FormatVersion: "4.3"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*Product: "(FS-5800C)"
*PSVersion: "(2014.108) 1"
*Manufacturer: "Kyocera"
*ModelName: "Kyocera FS-5800C (KPDL-2)"
*ShortNickName: "Kyocera FS-5800C (KPDL-2)"
*NickName: "Kyocera FS-5800C (KPDL-2)"
*PCFileName: "FS-5800C.PPD"

*% Basic Device Capabilities
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*AccurateScreensSupport: True
*TTRasterizer: Type42
*?TTRasterizer: "
  save
  42 /FontType resourcestatus
  { pop pop (Type42) }{ (None) } ifelse
  = flush restore"
*End
*FreeVM: "5568000"
*Throughput: "4"

*% Extensions
*FileSystem: True
*?FileSystem: "
  save
  false
  (%disk%)
  {currentdevparams dup /Writeable known
    {/Writeable get {pop true} if}{pop} ifelse
  } 100 string /IODevice resourceforall
  {(True)}{(False)} ifelse
  = flush restore "
*End

*% System Management
*SuggestedJobTimeout: "0"
*SuggestedManualFeedTimeout: "0"
*SuggestedWaitTimeout: "120"
*PrintPSErrors: True

*Password: "0"

*ExitServer: "
  count 0 eq {true}
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec"
*End

*Reset: "
  count 0 eq { true }
  {dup statusdict /checkpassword get exec not} ifelse
  {(WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush quit} if
  serverdict /exitserver get exec
  systemdict /quit get exec
  (WARNING : Printer Reset Failed.) = flush"
*End

*% Protocols
*Protocols: PJL TBCP

*1284Modes Parallel: Compat Nibble ECP
*1284DeviceID: "MFG:Kyocera;Model:Kyocera FS-5800C;COMMAND SET: POSTSCRIPT,PJL,PCL"

*% Page Stack Order
*PageStackOrder FDSide: Reverse
*PageStackOrder FUSide: Normal

*% JCL Information 
*JCLBegin: "<1B>%-12345X@PJL JOB<0A>"
*JCLToPSInterpreter: "@PJL ENTER LANGUAGE=POSTSCRIPT<0A>"
*JCLEnd: "<1B>%-12345X@PJL EOJ<0A><1B>%-12345X"

*JCLOpenUI *JCLEconomode/EcoPrint: PickOne
*DefaultJCLEconomode: Off
*OrderDependency: 5 JCLSetup *JCLEconomode
*JCLEconomode Off/Off: "@PJL SET ECONOMODE=OFF<0A>"
*JCLEconomode On/On: "@PJL SET ECONOMODE=ON<0A>"
*JCLCloseUI: *JCLEconomode

*% Installable Options
*OpenGroup: InstallableOptions/Installed Options

*% Paper Feeder
*OpenUI *Option14/PF-80 Paper Feeder: Boolean
*DefaultOption14: False
*Option14 False/Not Installed: ""
*Option14 True/Installed: ""
*?Option14: "
  save
  (False) currentpagedevice dup /InputAttributes known {
    /InputAttributes get
    dup 1 known {dup 1 get null ne {exch pop (True) exch} if} if
  } if pop
  = flush restore"
*End
*CloseUI: *Option14

*% Disk Drive
*OpenUI *Option18/Optional Disk: PickOne
*DefaultOption18: None
*Option18 None/None: ""
*Option18 HardDisk/Hard Disk: ""
*?Option18: "
  save
  false
  (%disk?%)
  {currentdevparams dup /Writeable known
    {dup /Writeable get
      {exch pop /LogicalSize get dup 0 gt exch 102400 lt eq true}{pop pop false} ifelse
    }{pop pop} ifelse
  } 100 string /IODevice resourceforall
  {{(RAMDisk)}{(HardDisk)} ifelse}{(None)} ifelse
  = flush restore"
*End
*CloseUI: *Option18

*% Installed Memory
*OpenUI *InstalledMemory/Memory: PickOne
*DefaultInstalledMemory: 8MB
*InstalledMemory 8MB/Standard: ""
*InstalledMemory 12MB/4MB Upgrade: ""
*InstalledMemory 16MB/8MB Upgrade: ""
*InstalledMemory 20MB/12MB Upgrade: ""
*InstalledMemory 24MB/16MB Upgrade: ""
*InstalledMemory 28MB/20MB Upgrade: ""
*InstalledMemory 32MB/24MB Upgrade: ""
*InstalledMemory 40MB/32MB Upgrade: ""
*InstalledMemory 44MB/36MB Upgrade: ""
*InstalledMemory 48MB/40MB Upgrade: ""
*InstalledMemory 56MB/48MB Upgrade: ""
*InstalledMemory 68MB/60MB Upgrade: ""
*InstalledMemory 72MB/64MB Upgrade: ""
*?InstalledMemory: "
  save
  currentsystemparams dup
  /RamSize known {
    /RamSize get
    524288 div ceiling cvi 2 div cvi
    /vmsize 20 string def
    vmsize cvs print
    (MB) print (\n) print flush
  }{
    pop (Unknown) print flush
  } ifelse
  restore"
*End
*CloseUI: *InstalledMemory

*CloseGroup: InstallableOptions

*% Virtual Memory 
*VMOption 8MB: "5568000"
*VMOption 12MB: "8928000"
*VMOption 16MB: "12288000"
*VMOption 20MB: "15648000"
*VMOption 24MB: "19008000"
*VMOption 28MB: "22368000"
*VMOption 32MB: "25728000"
*VMOption 40MB: "32448000"
*VMOption 44MB: "35808000"
*VMOption 48MB: "39168000"
*VMOption 56MB: "45888000"
*VMOption 68MB: "55968000"
*VMOption 72MB: "59328000"


*% Constraints
*UIConstraints: *Option14 False *InputSlot PF80A
*UIConstraints: *InputSlot PF80A *Option14 False
*UIConstraints: *Option14 False *InputSlot PF80B
*UIConstraints: *InputSlot PF80B *Option14 False
*UIConstraints: *KCCollate *Option18 None
*UIConstraints: *Option18 None *KCCollate Temp
*UIConstraints: *Option18 None *KCCollate Perm
*UIConstraints: *KCBarcodeMode *KCCollate None
*UIConstraints: *KCCollate None *KCBarcodeMode First
*UIConstraints: *KCCollate None *KCBarcodeMode All
*UIConstraints: *PageSize Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot Internal
*UIConstraints: *InputSlot Internal *PageRegion B5
*UIConstraints: *PageSize Executive *InputSlot PF80A
*UIConstraints: *InputSlot PF80A *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF80A
*UIConstraints: *InputSlot PF80A *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot PF80A
*UIConstraints: *InputSlot PF80A *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot PF80A
*UIConstraints: *InputSlot PF80A *PageRegion B5
*UIConstraints: *PageSize Executive *InputSlot PF80B
*UIConstraints: *InputSlot PF80B *PageSize Executive
*UIConstraints: *PageRegion Executive *InputSlot PF80B
*UIConstraints: *InputSlot PF80B *PageRegion Executive
*UIConstraints: *PageSize B5 *InputSlot PF80B
*UIConstraints: *InputSlot PF80B *PageSize B5
*UIConstraints: *PageRegion B5 *InputSlot PF80B
*UIConstraints: *InputSlot PF80B *PageRegion B5
*UIConstraints: *ColorModel Gray *KCColorMatch Automatic
*UIConstraints: *KCColorMatch Automatic *ColorModel Gray
*UIConstraints: *ColorModel Gray *KCColorMatch VividColor
*UIConstraints: *KCColorMatch VividColor *ColorModel Gray
*UIConstraints: *ColorModel Gray *KCColorMatch Display
*UIConstraints: *KCColorMatch Display *ColorModel Gray

*UIConstraints: *ColorModel CMY *Resolution 1200dpi
*UIConstraints: *Resolution 1200dpi *ColorModel CMY
*UIConstraints: *ColorModel CMY *KCColorMatch Automatic
*UIConstraints: *KCColorMatch Automatic *ColorModel CMY
*UIConstraints: *ColorModel CMY *KCColorMatch Display
*UIConstraints: *KCColorMatch Display *ColorModel CMY

*% Resolution 
*OpenUI *Resolution/Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*DefaultResolution: 600dpi
*Resolution 600dpi/600 Dots per Inch (dpi): "<< /HWResolution [600 600] >> setpagedevice"
*Resolution 1200dpi/1200 Dots per Inch (dpi): "<< /HWResolution [1200 1200] >> setpagedevice"
*?Resolution: "save currentpagedevice /HWResolution get 0 get (      ) cvs print (dpi) = flush restore"
*CloseUI: *Resolution

*% Image Refinement 
*OpenUI *Smoothing/KIR: PickOne
*OrderDependency: 50 AnySetup *Smoothing
*DefaultSmoothing: Medium
*Smoothing None/Off: "0 statusdict /setdoret get exec"
*Smoothing Light/Light: "1 statusdict /setdoret get exec"
*Smoothing Medium/Medium: "2 statusdict /setdoret get exec"
*Smoothing Dark/Dark: "3 statusdict /setdoret get exec"
*?Smoothing: "
  save
  [(None)(Light)(Medium)(Dark)]
  statusdict /doret get exec {get} stopped
  {pop pop (Unknown)} if
  = flush restore"
*End
*CloseUI: *Smoothing

*% Color Model
*OpenUI *ColorModel/Color Mode: PickOne
*OrderDependency: 10 AnySetup *ColorModel
*DefaultColorModel: CMYK
*ColorModel CMYK/Process Color (CMYK): "<< /ProcessColorModel /DeviceCMYK >> setpagedevice"
*ColorModel CMY/Quick Color (CMY): "<< /ProcessColorModel /DeviceCMY >> setpagedevice"
*ColorModel Gray/Monochrome: "<< /ProcessColorModel /DeviceGray >> setpagedevice"
*?ColorModel: "
  save
  currentpagedevice /ProcessColorModel get
  1 {
    dup /DeviceGray eq {pop (Gray) exit} if
    dup /DeviceCMYK eq {pop (CMYK) exit} if
    dup /DeviceCMY eq {pop (CMY) exit} if
    pop (Unknown)
  } repeat
  = flush restore"
*End
*CloseUI: *ColorModel

*% Color Matching
*OpenUI *KCColorMatch/Color Matching: PickOne
*OrderDependency: 15 AnySetup *KCColorMatch
*DefaultKCColorMatch: None
*KCColorMatch None/None: "
 currentpagedevice /ProcessColorModel get
   1 {
     dup /DeviceGray eq
     { << /DeviceRenderingInfo
         << /Type 2 /RenderingMethod 1 /VirtualColorDevice
           << /Type 1 /ColorTransform /Gray >>
         >>
       >> setpagedevice
     } if
     dup /DeviceCMYK eq
     { << /DeviceRenderingInfo
         << /Type 2 /RenderingMethod 1 /VirtualColorDevice
           << /Type 3 /ColorTransform /None >>
         >>
       >> setpagedevice
     } if
     dup /DeviceCMY eq
     { << /DeviceRenderingInfo
         << /Type 2 /RenderingMethod 1 /VirtualColorDevice
           << /Type 1 /ColorTransform /CMYK >>
         >>
       >> setpagedevice
     } if
   } repeat"
*End
*KCColorMatch VividColor/Vivid Color: "
 << /DeviceRenderingInfo
   << /Type 2 /RenderingMethod 1 /VirtualColorDevice
     << /Type 3 /ColorTransform /Vivid >>
   >>
 >> setpagedevice"
*End
*KCColorMatch Display/Simulate Display: "
 << /DeviceRenderingInfo
   << /Type 2 /RenderingMethod 1 /VirtualColorDevice
     << /Type 3 /ColorTransform /Display >>
   >>
 >> setpagedevice"
*End
*KCColorMatch Automatic/Auto: "
 << /DeviceRenderingInfo
   << /Type 2 /RenderingMethod 1 /VirtualColorDevice
     << /Type 3 /ColorTransform /Automatic >>
   >>
 >> setpagedevice"
*End
*?KCColorMatch: "
  save
  { currentpagedevice /DeviceRenderingInfo get
    /VirtualColorDevice get
    dup null eq
    { pop (None) }
    { /ColorTransform get
      <<
        /Automatic (Automatic)
        /Vivid (VividColor)
        /Display (Display)
        /Gray (None)
        /CMYK (None)
        /None (None)
      >>
      exch get
    } ifelse
  } stopped
  { pop pop (Unknown)
  } if
  = flush restore"
*End
*CloseUI: *KCColorMatch

*% Color Rendering Dictionary 
*ColorRenderDict Absolute.none.DefaultHalftone/Absolute Colorimetric: "
  /AbsoluteColorimetric.none.DefaultHalftone /ColorRendering findresource setcolorrendering"
*End
*ColorRenderDict Relative.none.DefaultHalftone/Relative Colorimetric: "
  /RelativeColorimetric.none.DefaultHalftone /ColorRendering findresource setcolorrendering"
*End
*ColorRenderDict Saturation.none.DefaultHalftone/Saturation: "
  /Saturation.none.DefaultHalftone /ColorRendering findresource setcolorrendering"
*End
*ColorRenderDict Perceptual.none.DefaultHalftone/Perceptual: "
  /Perceptual.none.DefaultHalftone /ColorRendering findresource setcolorrendering"
*End
*RenderingIntent: AbsoluteColormetric
*RenderingIntent: RelativeColormetric
*RenderingIntent: Saturation
*RenderingIntent: Perceptual

*% Halftone Information 
*DefaultHalftoneType: 5
*ScreenFreq: "85.71"
*ScreenAngle: "45.0"

*DefaultScreenProc: Ellipse
*ScreenProc Dot: "
  {abs exch abs 2 copy add 1 gt
  {1 sub dup mul exch 1 sub dup mul add 1 sub}
  {dup mul exch dup mul add 1 exch sub} ifelse}"
*End
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}"
*DefaultTransfer: Null
*Transfer Null: "{}"
*Transfer Null.Inverse: "{1 exch sub}"

*% Paper Handling 
*% Page Size Definitions
*OpenUI *PageSize: PickOne
*OrderDependency: 40 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter: "<</Policies <</PageSize 2>> /PageSize [612 792] /ImagingBBox null>> setpagedevice"
*PageSize Legal/Legal: "<</Policies <</PageSize 2>> /PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*PageSize Executive/Executive: "<</Policies <</PageSize 2>> /PageSize [522 756] /ImagingBBox null>> setpagedevice"
*PageSize A4/A4: "<</Policies <</PageSize 2>> /PageSize [595 842] /ImagingBBox null>> setpagedevice"
*PageSize B5/B5 (JIS): "<</Policies <</PageSize 2>> /PageSize [516 729] /ImagingBBox null>> setpagedevice"
*?PageSize: "
  save
  currentpagedevice /PageSize get aload pop
  2 copy gt {exch} if
  (Unknown)
  5 dict
  dup [612 792] (Letter) put
  dup [612 1008] (Legal) put
  dup [522 756] (Executive) put
  dup [595 842] (A4) put
  dup [516 729] (B5) put
  {exch aload pop 4 index sub abs 5 le exch
    5 index sub abs 5 le and
    {exch pop exit}{pop} ifelse
  } bind forall
  = flush pop pop restore "
*End
*CloseUI: *PageSize

*% Page Region Definitions for Frame Buffer
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter: "<</Policies <</PageSize 7>> /PageSize [612 792] /ImagingBBox null>> setpagedevice"
*PageRegion Legal/Legal: "<</Policies <</PageSize 7>> /PageSize [612 1008] /ImagingBBox null>> setpagedevice"
*PageRegion Executive/Executive: "<</Policies <</PageSize 7>> /PageSize [522 756] /ImagingBBox null>> setpagedevice"
*PageRegion A4/A4: "<</Policies <</PageSize 7>> /PageSize [595 842] /ImagingBBox null>> setpagedevice"
*PageRegion B5/B5 (JIS): "<</Policies <</PageSize 7>> /PageSize [516 729] /ImagingBBox null>> setpagedevice"
*CloseUI: *PageRegion

*% Imageable Area Definitions
*DefaultImageableArea: Letter
*ImageableArea Letter/Letter: "12 16 600 776"
*ImageableArea Legal/Legal: "12 17 600 991"
*ImageableArea Executive/Executive: "12 12 510 744"
*ImageableArea A4/A4: "14 15 581 827"
*ImageableArea B5/B5 (JIS): "21 12 495 717"
*?ImageableArea: "
  save
  /cvp {cvi (                   ) cvs
  print ( ) print} bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat ( )
  = flush restore"
*End

*% Physical Dimensions of Media
*DefaultPaperDimension: Letter
*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension Executive/Executive: "522 756"
*PaperDimension A4/A4: "595 842"
*PaperDimension B5/B5 (JIS): "516 729"

*% Input Slot Definitions
*OpenUI *InputSlot: PickOne
*OrderDependency: 30 AnySetup *InputSlot
*DefaultInputSlot: Internal
*InputSlot Internal/Cassette 1 (Internal): "<</ManualFeed false>> setpagedevice statusdict begin 0 setpapertray end"
*InputSlot PF80A/Cassette 2: "<</ManualFeed false>> setpagedevice statusdict begin 1 setpapertray end"
*InputSlot PF80B/Cassette 3: "<</ManualFeed false>> setpagedevice statusdict begin 3 setpapertray end"
*InputSlot MF1/Multi-Purpose Feeder: "<</ManualFeed false>> setpagedevice statusdict begin 4 setpapertray end"
*InputSlot MF/Manual Feed: "<< /ManualFeed true >> setpagedevice"
*?InputSlot: ""
*CloseUI: *InputSlot

*% MediaType Definitions
*OpenUI *MediaType: PickOne
*OrderDependency: 100 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper: "<</ManualFeed false /MediaType (Plain) /DeferredMediaSelection true >> setpagedevice"
*MediaType Transparency/Transparency: "<</ManualFeed false /MediaType (Transparency) /DeferredMediaSelection true >> setpagedevice"
*MediaType Labels/Labels: "<</ManualFeed false /MediaType (Labels) /DeferredMediaSelection true >> setpagedevice"
*?MediaType: "
  save
    currentpagedevice /MediaType {get} stopped
    {pop pop (Unknown)} {dup null eq {pop (Unknown)} if} ifelse = flush
  restore"
*End
*CloseUI: *MediaType

*RequiresPageRegion All: True
*% Output Bin Definitions
*OpenUI *OutputBin/Output Bin: PickOne
*OrderDependency: 51 AnySetup *OutputBin
*DefaultOutputBin: FDSide
*OutputBin FDSide/Side Tray (Face-Down): "0 statusdict /setoutputtray get exec"
*OutputBin FUSide/Side Tray (Face-Up): "1 statusdict /setoutputtray get exec"
*?OutputBin: ""
*CloseUI: *OutputBin

*% Job Spooling Definitions
*OpenUI *KCCollate/Job Spooling: PickOne
*OrderDependency: 20 AnySetup *KCCollate
*DefaultKCCollate: None
*KCCollate None/None: "<< /Collate false >> setpagedevice"
*KCCollate Temp/Temporary: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get  /Mode 1  put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*KCCollate Perm/Permanent: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get  /Mode 2  put <</Collate true /CollateDetails UICollateDetails>> setpagedevice"
*End
*?KCCollate: "
  save
  currentpagedevice dup /Collate known {
    dup /CollateDetails known {
      /CollateDetails get
      dup /Mode known {
        /Mode get
        1 {
          dup 1 eq {pop (Temp) exit} if
          dup 2 eq {pop (Perm) exit} if
          pop (Unknown)
        } repeat
      }{pop (Unknown)} ifelse
    }{pop (Unknown)} ifelse
  }{pop (Unknown)} ifelse
  = flush restore"
*End
*CloseUI: *KCCollate

*% Barcode Mode Definitions
*OpenUI *KCBarcodeMode/Barcode: PickOne
*OrderDependency: 21 AnySetup *KCBarcodeMode
*DefaultKCBarcodeMode: None
*KCBarcodeMode None/None: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 2  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeMode First/First Page: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 0  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeMode All/All Pages: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /Barcode 1  put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodeMode: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /Barcode get
    1 {
      dup 2 eq {pop (None) exit} if
      dup 0 eq {pop (First) exit} if
      dup 1 eq {pop (All) exit} if
      pop (Unknown)
    } repeat
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodeMode

*% Barcode ID Definitions
*OpenUI *KCBarcodeID/Barcode ID: Boolean
*OrderDependency: 23 AnySetup *KCBarcodeID
*DefaultKCBarcodeID: False
*KCBarcodeID True/On: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodeID False/Off: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  not put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodeID: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /BarcodePosition get 128 gt
    {(False)}{(True)} ifelse
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodeID

*% Barcode Position Definitions
*OpenUI *KCBarcodePos/Barcode Position: PickOne
*OrderDependency: 22 AnySetup *KCBarcodePos
*DefaultKCBarcodePos: ULB
*KCBarcodePos ULB/Upper Left: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 4 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos URB/Upper Right: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 3 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LLB/Lower Left: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 7 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LRB/Lower Right: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos ULVB/Upper Left Vertical: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 5 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos URVB/Upper Right Vertical: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 2 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LLVB/Lower Left Vertical: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 6 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*KCBarcodePos LRVB/Lower Right Vertical: "
  userdict /UICollateDetails known not {userdict /UICollateDetails 10 dict put} if
  userdict /UICollateDetails get /BarcodePosition 2 copy known {2 copy get}
  {currentpagedevice /CollateDetails get /BarcodePosition get} ifelse 128
  and 1 or put <</CollateDetails UICollateDetails>> setpagedevice
"
*End
*?KCBarcodePos: "
  save
  currentpagedevice dup /CollateDetails known {
    /CollateDetails get /BarcodePosition get
    1 {
      dup 4 eq {pop (ULB) exit} if
      dup 3 eq {pop (URB) exit} if
      dup 7 eq {pop (LLB) exit} if
      dup 0 eq {pop (LRB) exit} if
      dup 5 eq {pop (ULVB) exit} if
      dup 2 eq {pop (URVB) exit} if
      dup 6 eq {pop (LLVB) exit} if
      dup 1 eq {pop (LRVB) exit} if
      pop (Unknown)
    } repeat
  }{(Unknown)} ifelse
  exch pop
  = flush restore"
*End
*CloseUI: *KCBarcodePos

*% Tray Switch Definitions
*OpenUI *TraySwitch/Auto Tray Switch: PickOne
*OrderDependency: 25 AnySetup *TraySwitch
*DefaultTraySwitch: PrnDef
*TraySwitch PrnDef/Printer Default: ""
*TraySwitch True/On: "<< /TraySwitch true >> setpagedevice"
*TraySwitch False/Off: "<< /TraySwitch false >> setpagedevice"
*?TraySwitch: "
  save
  currentpagedevice /TraySwitch get
  { (True) }{ (False) } ifelse
  = flush restore"
*End
*CloseUI: *TraySwitch

*% PPD Version Info 
*OpenUI *KCVersion/PPD Version: PickOne
*OrderDependency: 25 AnySetup *KCVersion
*DefaultKCVersion: Default
*KCVersion Default/1.6.2 [06-19-2000]: ""
*KCVersion Default1/<A9>Kyocera Corporation: ""
*CloseUI: *KCVersion

*% Font Information
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.006S)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(001.006S)" Standard ROM
*Font AvantGarde-Demi: Standard "(001.007S)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(001.007S)" Standard ROM
*Font Bookman-Light: Standard "(001.004S)" Standard ROM
*Font Bookman-LightItalic: Standard "(001.004S)" Standard ROM
*Font Bookman-Demi: Standard "(001.004S)" Standard ROM
*Font Bookman-DemiItalic: Standard "(001.004S)" Standard ROM
*Font Courier: Standard "(002.004S)" Standard ROM
*Font Courier-Oblique: Standard "(002.004S)" Standard ROM
*Font Courier-Bold: Standard "(002.004S)" Standard ROM
*Font Courier-BoldOblique: Standard "(002.004S)" Standard ROM
*Font Helvetica: Standard "(001.006S)" Standard ROM
*Font Helvetica-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(001.006S)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(001.007S)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(001.007S)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(001.006S)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(001.009S)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(001.007S)" Standard ROM
*Font Palatino-Roman: Standard "(001.005S)" Standard ROM
*Font Palatino-Italic: Standard "(001.005S)" Standard ROM
*Font Palatino-Bold: Standard "(001.005S)" Standard ROM
*Font Palatino-BoldItalic: Standard "(001.005S)" Standard ROM
*Font Symbol: Special "(001.007S)" Special ROM
*Font Times-Roman: Standard "(001.007S)" Standard ROM
*Font Times-Italic: Standard "(001.007S)" Standard ROM
*Font Times-Bold: Standard "(001.007S)" Standard ROM
*Font Times-BoldItalic: Standard "(001.009S)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(001.007S)" Standard ROM
*Font ZapfDingbats: Special "(001.004S)" Special ROM
*?FontQuery: "
  save
  /str 100 string dup 0 (fonts/) putinterval def
  {count 1 gt
    { exch dup str 6 94 getinterval cvs
      (/) print print (:) print
      FontDirectory exch known
      {(Yes)}{(No)} ifelse =
    }{exit} ifelse
  } bind loop (*)
  = flush restore"
*End
*?FontList: "save FontDirectory { pop == } bind forall flush (*) = flush restore"
*% Printer Messages
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "warming up"
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "initializing"
*Status: "printing test page"/printing test page
*Status: "PrinterError: paper entry misfeed"
*Status: "PrinterError: cover open"
*Status: "PrinterError: no paper tray"
*Status: "PrinterError: out of paper"
*Status: "PrinterError: toner low (halt)"
*Status: "PrinterError: warming up"
*Status: "PrinterError: other reason"
*Status: "PrinterError: video interface mode"
*Status: "PrinterError: offline"
*Status: "PrinterError: toner low (warning)"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%% )
*PrinterError: "paper entry misfeed"
*PrinterError: "cover open"
*PrinterError: "no paper tray"
*PrinterError: "out of paper"
*PrinterError: "toner low (halt)"
*PrinterError: "warming up"
*PrinterError: "other reason"
*PrinterError: "video interface mode"
*PrinterError: "offline"
*PrinterError: "toner low (warning)"

*% Input Sources (format: %%[ status: <stat>;source:<one of these> ]%% )
*Source: "Serial"
*Source: "Parallel"
*Source: "LocalTalk"
*Source: "Option"

*% Color Separation Information
*DefaultColorSep: ProcessBlack.106lpi.600dpi/106 lpi / 600 dpi

*% 85 lpi/600 dpi
*ColorSepScreenAngle ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.85lpi.600dpi/85 lpi / 600 dpi: "84.8528"
*ColorSepScreenFreq ProcessCyan.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.85lpi.600dpi/85 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "30.0"
*ColorSepScreenProc ProcessYellow.85lpi.600dpi/85 lpi / 600 dpi: "
 {2 {1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch } repeat
 abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
 sub }{dup mul exch dup mul add 1 exch sub } ifelse }"
*End

*% 106 lpi/600 dpi
*ColorSepScreenAngle ProcessBlack.106lpi.600dpi/106 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.106lpi.600dpi/106 lpi / 600 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.106lpi.600dpi/106 lpi / 600 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.106lpi.600dpi/106 lpi / 600 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.106lpi.600dpi/106 lpi / 600 dpi: "106.066"
*ColorSepScreenFreq ProcessCyan.106lpi.600dpi/106 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.106lpi.600dpi/106 lpi / 600 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.106lpi.600dpi/106 lpi / 600 dpi: "100.0"
*ColorSepScreenProc ProcessYellow.106lpi.600dpi/106 lpi / 600 dpi: "
 {2 {1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch } repeat
 abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
 sub }{dup mul exch dup mul add 1 exch sub } ifelse }"
*End

*% 90 lpi/1200 dpi
*ColorSepScreenAngle ProcessBlack.90lpi.1200dpi/90 lpi / 1200 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.90lpi.1200dpi/90 lpi / 1200 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.90lpi.1200dpi/90 lpi / 1200 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.90lpi.1200dpi/90 lpi / 1200 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.90lpi.1200dpi/90 lpi / 1200 dpi: "84.852"
*ColorSepScreenFreq ProcessCyan.90lpi.1200dpi/90 lpi / 1200 dpi: "94.8683"
*ColorSepScreenFreq ProcessMagenta.90lpi.1200dpi/90 lpi / 1200 dpi: "94.8683"
*ColorSepScreenFreq ProcessYellow.90lpi.1200dpi/90 lpi / 1200 dpi: "30.0"
*ColorSepScreenProc ProcessYellow.90lpi.1200dpi/90 lpi / 1200 dpi: "
 {2 {1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch } repeat
 abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
 sub }{dup mul exch dup mul add 1 exch sub } ifelse }"
*End

*% 110 lpi/1200 dpi
*ColorSepScreenAngle ProcessBlack.110lpi.1200dpi/110 lpi / 1200 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.110lpi.1200dpi/110 lpi / 1200 dpi: "71.5651"
*ColorSepScreenAngle ProcessMagenta.110lpi.1200dpi/110 lpi / 1200 dpi: "18.4349"
*ColorSepScreenAngle ProcessYellow.110lpi.1200dpi/110 lpi / 1200 dpi: "0.0"
*ColorSepScreenFreq ProcessBlack.110lpi.1200dpi/110 lpi / 1200 dpi: "121.22"
*ColorSepScreenFreq ProcessCyan.110lpi.1200dpi/110 lpi / 1200 dpi: "102.52"
*ColorSepScreenFreq ProcessMagenta.110lpi.1200dpi/110 lpi / 1200 dpi: "102.52"
*ColorSepScreenFreq ProcessYellow.110lpi.1200dpi/110 lpi / 1200 dpi: "109.1"
*ColorSepScreenProc ProcessYellow.110lpi.1200dpi/110 lpi / 1200 dpi: "
 {2 {1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch } repeat
 abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1
 sub }{dup mul exch dup mul add 1 exch sub } ifelse }"
*End

*%  End of PPD file for Kyocera FS-5800C (USA English)
