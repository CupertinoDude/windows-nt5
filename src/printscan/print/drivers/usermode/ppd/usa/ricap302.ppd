*PPD-Adobe: "4.2"
*%  Printer Description file
*%    for "RICOH COLOR LASER AP305 RPS"
*%
*%    CreationDate: 1998/10/30
*%    Modified:     2000/11/07
*%
*%    COPYRIGHT (C) 1998-2000 RICOH COMPANY, LTD.
*%    All rights reserved.
*%

*FileVersion: "1.2"
*FormatVersion: "4.2"
*LanguageEncoding: ISOLatin1
*LanguageVersion: English
*PCFileName: "RICAP302.PPD"
*Product: "(RICOH-SCRIPT)"
*PSVersion: "(2002.61) 2"
*ModelName: "RICOH COLOR LASER AP305"
*ShortNickName: "RICOH COLOR LASER AP305 RPS"
*NickName: "RICOH COLOR LASER AP305 RPS"

*%========== Basic Device Capabilities ==========
*LanguageLevel: "2"


*Protocols: PJL BCP
*JCLBegin: ""
*JCLToPSInterpreter: "<1B><12>!1<2C>1@RPS<1B><20>"
*JCLEnd: ""


*ColorDevice: True
*DefaultColorSpace: CMYK
*TTRasterizer: Type42
*FileSystem: True
*?FileSystem: "
  save
  statusdict /diskonline get exec
  {(True)}{(False)}ifelse = flush
  restore
"
*End

*Throughput: "17"

*%========== Installable Options ==========
*%========== & System Management ==========

*OpenGroup: InstallableOptions
*OpenUI *InstalledMemory/Total Printer Memory: PickOne
*InstalledMemory None/32 MB: ""
*InstalledMemory 48Meg/48 MB: ""
*InstalledMemory 64Meg/64 MB: ""
*InstalledMemory 80Meg/80 MB: ""
*InstalledMemory 96Meg/96 MB: ""
*?InstalledMemory: "
  save
  currentsystemparams /RamSize get 1048576 div round cvi
  dup 32 eq { pop (None)}{
	dup 24 eq 1 index 32 eq or 1 index 40 eq or 1 index 48 eq or
	1 index 56 eq or 1 index 64 eq or 1 index 80 eq or 1 index 96 eq or
	  {(  ) cvs print (Meg)}{ pop (Unknown)} ifelse} ifelse = flush
  restore
"
*End
*DefaultInstalledMemory: None
*CloseUI: *InstalledMemory

*OpenUI *Option1/Option Tray: PickOne
*Option1 None/None: ""
*Option1 1Cassette/Tray 2: ""
*Option1 2Cassette/Tray 3: ""
*?Option1: "
  save
  {
    currentpagedevice /InputAttributes get length
    dup 3 eq { (None) exit } if
    dup 4 eq { (1Cassette) exit } if
    5 eq { (2Cassette) exit } if
    (Unknown) exit
  } loop
  mark count 1 sub 2 roll cleartomark
  = flush
  restore
"
*End
*DefaultOption1: None
*CloseUI: *Option1

*CloseGroup: InstallableOptions

*UIConstraints: *Option1 None *InputSlot 2Tray
*UIConstraints: *Option1 None *InputSlot 3Tray
*UIConstraints: *Option1 1Cassette *InputSlot 3Tray
*UIConstraints: *InputSlot 2Tray *Option1 None
*UIConstraints: *InputSlot 3Tray *Option1 None
*UIConstraints: *InputSlot 3Tray *Option1 1Cassette

*UIConstraints: *InputSlot 1Tray *PageSize B6
*UIConstraints: *InputSlot 1Tray *PageSize A6
*UIConstraints: *InputSlot 2Tray *PageSize A5
*UIConstraints: *InputSlot 2Tray *PageSize B6
*UIConstraints: *InputSlot 2Tray *PageSize A6
*UIConstraints: *InputSlot 2Tray *PageSize HalfLetter
*UIConstraints: *InputSlot 3Tray *PageSize A5
*UIConstraints: *InputSlot 3Tray *PageSize B6
*UIConstraints: *InputSlot 3Tray *PageSize A6
*UIConstraints: *InputSlot 3Tray *PageSize HalfLetter
*UIConstraints: *PageSize B6 *InputSlot 1Tray
*UIConstraints: *PageSize A6 *InputSlot 1Tray
*UIConstraints: *PageSize A5 *InputSlot 2Tray
*UIConstraints: *PageSize B6 *InputSlot 2Tray
*UIConstraints: *PageSize A6 *InputSlot 2Tray
*UIConstraints: *PageSize HalfLetter *InputSlot 2Tray
*UIConstraints: *PageSize A5 *InputSlot 3Tray
*UIConstraints: *PageSize B6 *InputSlot 3Tray
*UIConstraints: *PageSize A6 *InputSlot 3Tray
*UIConstraints: *PageSize HalfLetter *InputSlot 3Tray

*UIConstraints: *InputSlot 1Tray *PageRegion B6
*UIConstraints: *InputSlot 1Tray *PageRegion A6
*UIConstraints: *InputSlot 2Tray *PageRegion A5
*UIConstraints: *InputSlot 2Tray *PageRegion B6
*UIConstraints: *InputSlot 2Tray *PageRegion A6
*UIConstraints: *InputSlot 2Tray *PageRegion HalfLetter
*UIConstraints: *InputSlot 3Tray *PageRegion A5
*UIConstraints: *InputSlot 3Tray *PageRegion B6
*UIConstraints: *InputSlot 3Tray *PageRegion A6
*UIConstraints: *InputSlot 3Tray *PageRegion HalfLetter
*UIConstraints: *PageRegion B6 *InputSlot 1Tray
*UIConstraints: *PageRegion A6 *InputSlot 1Tray
*UIConstraints: *PageRegion A5 *InputSlot 2Tray
*UIConstraints: *PageRegion B6 *InputSlot 2Tray
*UIConstraints: *PageRegion A6 *InputSlot 2Tray
*UIConstraints: *PageRegion HalfLetter *InputSlot 2Tray
*UIConstraints: *PageRegion A5 *InputSlot 3Tray
*UIConstraints: *PageRegion B6 *InputSlot 3Tray
*UIConstraints: *PageRegion A6 *InputSlot 3Tray
*UIConstraints: *PageRegion HalfLetter *InputSlot 3Tray
*UIConstraints: *InputSlot 1Tray *MediaType Transparency
*UIConstraints: *InputSlot 1Tray *MediaType Thick
*UIConstraints: *InputSlot 2Tray *MediaType Transparency
*UIConstraints: *InputSlot 2Tray *MediaType Thick
*UIConstraints: *InputSlot 3Tray *MediaType Transparency
*UIConstraints: *InputSlot 3Tray *MediaType Thick
*UIConstraints: *MediaType Transparency *InputSlot 1Tray
*UIConstraints: *MediaType Transparency *InputSlot 2Tray
*UIConstraints: *MediaType Transparency *InputSlot 3Tray
*UIConstraints: *MediaType Thick *InputSlot 1Tray
*UIConstraints: *MediaType Thick *InputSlot 2Tray
*UIConstraints: *MediaType Thick *InputSlot 3Tray

*FreeVM: "3188000"
*VMOption None/32 MB RAM: "3188000"
*VMOption 48Meg/48 MB RAM: "6561000"
*VMOption 64Meg/64 MB RAM: "10286000"
*VMOption 80Meg/80 MB RAM: "10286000"
*VMOption 96Meg/96 MB RAM: "10286000"

*Password: "0"
*ExitServer: "
  count 0 eq 
  {false}{true exch startjob}ifelse
  not {(WARNING: Cannot modify initial VM.) =
       (Missing or invalid Password.) =
       (Please contact the author.) = flush quit
  }if
"
*End
*Reset: "
  count 0 eq
  {false}{true exch startjob}ifelse
  not {(WARNING: Cannot reset printer.) =
       (Missing or invalid Password.) =
       (Please contact the author.) = flush quit
  }if 
  systemdict /quit get exec
  (WARNING: Printer Reset Failed.) = flush
"
*End

*SuggestedJobTimeout: "0"
*SuggestedWaitTimeout: "300"
*PrintPSErrors: True
*DeviceAdjustedMatrix: "[1 0 0 1 0 0]"

*%========== Media Selection ==========

*OpenUI *PageSize: PickOne
*OrderDependency: 60 AnySetup *PageSize
*PageSize A3: "{statusdict /a3tray get exec}stopped {a3}if"
*PageSize A4: "{statusdict /a4tray get exec}stopped {a4}if"
*PageSize A5: "{statusdict /a5tray get exec}stopped {a5}if"
*PageSize A6: "{statusdict /a6tray get exec}stopped {a6}if"
*PageSize B4/B4 (JIS): "{statusdict /b4tray get exec}stopped {b4}if"
*PageSize B5/B5 (JIS): "{statusdict /b5tray get exec}stopped {b5}if"
*PageSize B6/B6 (JIS): "{statusdict /b6tray get exec}stopped {b6}if"
*PageSize Letter/Letter: "{statusdict /lettertray get exec}stopped {letter}if"
*PageSize Legal/Legal: "{statusdict /legaltray get exec}stopped {legal}if"
*PageSize HalfLetter/HalfLetter: "
  {statusdict /halflettertray get exec}stopped {halfletter}if"
*End
*PageSize 11x17: "{statusdict /11x17tray get exec}stopped {11x17}if"
*PageSize Executive/7.25x10.5: "
  {statusdict /executivepagetray get exec}stopped {executivepage}if"
*End
*PageSize 8x13: "{statusdict /8x13tray get exec}stopped {8x13}if"
*PageSize Folio/8.25x13: "{statusdict /foliotray get exec}stopped {folio}if"
*PageSize 8.5x13: "{statusdict /8.5x13tray get exec}stopped {8.5x13}if"
*?PageSize: "
  save
  currentpagedevice /PageSize get aload pop
  2 copy gt {exch}if (Unknown)
  15 dict
    dup [842 1191] (A3) put
    dup [595 842]  (A4) put
    dup [421 595]  (A5) put
    dup [298 421]  (A6) put
    dup [728 1031] (B4) put
    dup [516 729]  (B5) put
    dup [363 516]  (B6) put
    dup [612 1008] (Legal) put
    dup [612 792]  (Letter) put
    dup [396 612]  (HalfLetter) put
    dup [792 1224] (11x17) put
    dup [522 756]  (Executive) put
    dup [576 936] (8x13) put
    dup [594 936] (Folio) put
    dup [612 936] (8.5x13) put
  {exch aload pop 4 index sub abs 5 le exch 5 index
   sub abs 5 le and {exch pop exit}{pop}ifelse 
  }bind forall = flush pop pop
  restore
"
*End
*DefaultPageSize: A4
*CloseUI: *PageSize

*OpenUI *PageRegion: PickOne
*OrderDependency: 75 AnySetup *PageRegion
*PageRegion A3: "a3"
*PageRegion A4: "a4"
*PageRegion A5: "a5"
*PageRegion A6: "a6"
*PageRegion B4/B4 (JIS): "b4"
*PageRegion B5/B5 (JIS): "b5"
*PageRegion B6/B6 (JIS): "b6"
*PageRegion Letter/Letter: "letter"
*PageRegion Legal/Legal: "legal"
*PageRegion HalfLetter/HalfLetter: "halfletter"
*PageRegion 11x17: "11x17"
*PageRegion Executive/7.25x10.5: "executivepage"
*PageRegion 8x13: "8x13"
*PageRegion Folio/8.25x13: "folio"
*PageRegion 8.5x13: "8.5x13"
*DefaultPageRegion: A4
*CloseUI: *PageRegion

*%========== Information About Media Sizes ==========

*DefaultImageableArea: A4
*ImageableArea A3: "7.68 10.20 829.32 1181.28"
*ImageableArea A4: "12.84 12.60 584.88 834.24"
*ImageableArea A5: "12.60 11.40 411.84 583.44"
*ImageableArea A6: "11.52 12.60 287.88 411.84"
*ImageableArea B4/B4 (JIS): "7.68 11.52 714.12 1021.32"
*ImageableArea B5/B5 (JIS): "11.52 14.76 506.76 721.2"
*ImageableArea B6/B6 (JIS): "9.72 12.96 351.36 508.2"
*ImageableArea Letter/Letter: "11.52 8.64 602.76 780.36"
*ImageableArea Legal/Legal: "7.68 10.56 598.92 997.32"
*ImageableArea HalfLetter/HalfLetter: "11.04 12.96 387.24 604.2"
*ImageableArea 11x17: "11.52 13.44 783.24 1215.24"
*ImageableArea Executive/7.25x10.5: "3.60 11.04 502.68 744.36"
*ImageableArea 8x13: "11.52 13.4401 564.36 927.24"
*ImageableArea Folio/8.25x13: "11.52 13.4401 583.56 927.24"
*ImageableArea 8.5x13: "7.68 13.4401 598.92 927.24"
*?ImageableArea: "
  save
  /cvp {(            ) cvs print (               ) print}bind def
  newpath clippath pathbbox 4 -2 roll exch
  2 {10000 mul ceiling 10000 div cvp}repeat exch
  2 {10000 mul floor 10000 div cvp}repeat flush
  restore
"
*End

*DefaultPaperDimension: A4
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension A5: "421 595"
*PaperDimension A6: "298 421"
*PaperDimension B4/B4 (JIS): "728 1031"
*PaperDimension B5/B5 (JIS): "516 729"
*PaperDimension B6/B6 (JIS): "363 516"
*PaperDimension Letter/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension HalfLetter/HalfLetter: "396 612"
*PaperDimension 11x17: "792 1224"
*PaperDimension Executive/7.25x10.5: "522 756"
*PaperDimension 8x13: "576 936"
*PaperDimension Folio/8.25x13: "594 936"
*PaperDimension 8.5x13: "612 936"

*%========== Media Handling Features ==========

*OpenUI *InputSlot: PickOne
*OrderDependency: 70 AnySetup *InputSlot
*InputSlot ManualFeedTray/Bypass Tray: "
  <</DeferredMediaSelection false>>setpagedevice
  0 statusdict /setpapertray get {exec}stopped pop"
*End
*InputSlot 1Tray/Tray 1: "
  <</DeferredMediaSelection false>>setpagedevice
  1 statusdict /setpapertray get exec"
*End
*InputSlot 2Tray/Tray 2: "
  <</DeferredMediaSelection false>>setpagedevice
  2 statusdict /setpapertray get {exec}stopped pop"
*End
*InputSlot 3Tray/Tray 3: "
  <</DeferredMediaSelection false>>setpagedevice
  3 statusdict /setpapertray get {exec}stopped pop"
*End
*?InputSlot: "
  save
  [(ManualFeedTray)(1Tray)(2Tray)(3Tray)]
  statusdict /papertray get exec {get}stopped
  {pop pop (Unknown)}if = flush
  restore
"
*End
*DefaultInputSlot: 1Tray
*CloseUI: *InputSlot


*RequiresPageRegion ManualFeedTray: False
*RequiresPageRegion 1Tray: False
*RequiresPageRegion 2Tray: False
*RequiresPageRegion 3Tray: False

*OpenUI *TraySwitch/Auto Tray Switch: Boolean
*OrderDependency: 30 AnySetup *TraySwitch
*TraySwitch True/On: "<</TraySwitch true>>setpagedevice"
*TraySwitch False/Off: "<</TraySwitch false>>setpagedevice"
*?TraySwitch: "
  save
  currentpagedevice /TraySwitch get
  {(True)}{(False)}ifelse = flush
  restore
"
*End
*DefaultTraySwitch: True
*CloseUI: *TraySwitch

*%========== Resolution and Appearance Control ==========

*OpenUI *RPSBitsPerPixel/Color Level: PickOne
*OrderDependency: 110 AnySetup *RPSBitsPerPixel
*RPSBitsPerPixel 1/1 bit: "
  << /DeviceRenderingInfo << /ValuesPerColorComponent 2 >> >> setpagedevice"
*End
*RPSBitsPerPixel 2/2 bit: "
  << /DeviceRenderingInfo << /ValuesPerColorComponent 4 >> >> setpagedevice"
*End
*%RPSBitsPerPixel 4/4 bit: "
*%  << /DeviceRenderingInfo << /ValuesPerColorComponent 16 >> >> setpagedevice"
*%End
*?RPSBitsPerPixel: "
  save
  /UK (Unknown) def
  {
    currentpagedevice /DeviceRenderingInfo 2 copy known not { UK exit } if
    get /ValuesPerColorComponent 2 copy known not { UK exit } if
    get dup 2 eq { (1) exit } if dup 4 eq { (2) exit } if 16 eq { (4) exit } if
    UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark = flush
  restore
"
*End
*DefaultRPSBitsPerPixel: 2
*CloseUI: *RPSBitsPerPixel


*OpenUI *ColorModel/Color Mode: PickOne
*OrderDependency: 20 AnySetup *ColorModel
*ColorModel Gray/Black & White: "
  << /ProcessColorModel /DeviceGray >> setpagedevice"
*End
*ColorModel CMYK/Color: "<< /ProcessColorModel /DeviceCMYK >> setpagedevice"
*?ColorModel: "
  save
  /UK (Unknown) def
  {
    currentpagedevice /ProcessColorModel 2 copy known not { UK exit } if
    get dup /DeviceCMYK eq {(CMYK) exit }if dup /DeviceGray eq {(Gray) exit } if
    UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark = flush
  restore
"
*End
*DefaultColorModel: CMYK
*CloseUI: *ColorModel

*OpenUI *Resolution/Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*Resolution 300dpi: "<</HWResolution[300 300]>>setpagedevice"
*Resolution 600dpi: "<</HWResolution[600 600]>>setpagedevice"
*?Resolution: "
  save
  currentpagedevice /HWResolution get 0 get
  (       ) cvs print (dpi) = flush
  restore
"
*End
*DefaultResolution: 600dpi
*CloseUI: *Resolution

*OpenUI *RPSRGBcorrect/Color Setting: PickOne
*OrderDependency: 120 AnySetup *RPSRGBcorrect
*RPSRGBcorrect None/Off: "
  << /DeviceRenderingInfo << /CustomRGB 0 >> >> setpagedevice"
*End
*RPSRGBcorrect VividNormal/Vivid: "
  << /DeviceRenderingInfo << /CustomRGB 1 /SBWeight [1.4 1.8] >> >>
  setpagedevice"
*End
*RPSRGBcorrect VividBright/Super Vivid: "
  << /DeviceRenderingInfo << /CustomRGB 1 /SBWeight [1.7 2.2] >> >>
  setpagedevice"
*End
*RPSRGBcorrect DetailNormal/Fine: "
  << /DeviceRenderingInfo << /CustomRGB 2 /WhitePoint /6500K >> >>
  setpagedevice"
*End
*RPSRGBcorrect DetailBright/Super Fine: "
  << /DeviceRenderingInfo << /CustomRGB 2 /WhitePoint /5000K >> >>
  setpagedevice"
*End
*?RPSRGBcorrect: "
  save
  /UK (Unknown) def
  /toI { 10 mul round cvi } bind def
  /VN_S 14 def /VN_B 18 def /VB_S 17 def /VB_B 22 def
  {currentpagedevice /DeviceRenderingInfo 2 copy known not{UK exit}if
    get /CustomRGB 2 copy known not{UK exit}if 1 index 3 1 roll get dup 0 eq{
    (None) exit}if dup 1 eq{pop /SBWeight 2 copy known not{UK exit}if get dup 0
    get toI VN_S eq 1 index 1 get toI VN_B eq and{(VividNormal) exit}if dup 0
    get toI VB_S eq 1 index 1 get toI VB_B eq and{(VividBright) exit}if UK exit}
    if 2 eq{/WhitePoint 2 copy known not{UK exit}if get dup /6500K eq{
    (DetailNormal) exit}if /5000K eq{(DetailBright) exit}if UK exit}if UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark = flush
  restore
"
*End
*DefaultRPSRGBcorrect: VividNormal
*CloseUI: *RPSRGBcorrect

*OpenUI *RPSColorRendDict/Color Profile: PickOne
*OrderDependency: 40 AnySetup *RPSColorRendDict
*RPSColorRendDict Photograph/Photograph: "
  <</DeviceRenderingInfo << /CRDType /Photograph >> >> setpagedevice"
*End
*RPSColorRendDict Business/Presentation: "
  <</DeviceRenderingInfo << /CRDType /Business >> >> setpagedevice"
*End
*RPSColorRendDict Colorimetric/Solid Color: "
  <</DeviceRenderingInfo << /CRDType /Colorimetric >> >> setpagedevice"
*End
*?RPSColorRendDict: "
  save
  /UK (Unknown) def
  {
    currentpagedevice /DeviceRenderingInfo 2 copy known not { UK exit } if
    get /CRDType 2 copy known not { UK exit } if
    get dup /Photograph ne 1 index /Business ne and
    1 index /Colorimetric ne and { UK exit }if
    exit
  } bind loop
  mark count 1 sub 2 roll cleartomark = flush
  restore
"
*End
*DefaultRPSColorRendDict: Business
*CloseUI: *RPSColorRendDict

*OpenUI *RPSOutputMode/Smoothing: PickOne
*OrderDependency: 80 AnySetup *RPSOutputMode
*RPSOutputMode False/Off: "<</PostRenderingEnhance true
    /PostRenderingEnhanceDetails << /Type 13 /OutputMode 0 >> >> setpagedevice"
*End
*RPSOutputMode Auto/Auto: "<< /PostRenderingEnhance true
    /PostRenderingEnhanceDetails << /Type 13 /OutputMode 1 >> >> setpagedevice"
*End
*?RPSOutputMode: "
  save
  /UK (Unknown) def
  {
    currentpagedevice dup /PostRenderingEnhance 2 copy known not{UK exit}if
    get not { (False) exit } if
    /PostRenderingEnhanceDetails 2 copy known not { UK exit } if
    get dup /Type 2 copy known not { UK exit } if
    get dup type /integertype ne { UK exit } if
    13 ne { UK exit } if
    /OutputMode 2 copy known not { UK exit } if
    get dup 0 eq { (False) exit } if
    dup 1 eq 1 index 2 eq or { (Auto) exit } if
    UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark
  = flush
  restore
"
*End
*DefaultRPSOutputMode: Auto
*CloseUI: *RPSOutputMode

*OpenUI *RPSTonerSave/Toner Saving: PickOne
*OrderDependency: 90 AnySetup *RPSTonerSave
*RPSTonerSave False/Off: "
  <</PostRenderingEnhance true
    /PostRenderingEnhanceDetails << /Type 13 /TonerSaveMode 0>>
    >> setpagedevice"
*End
*RPSTonerSave True/On: "
  <</PostRenderingEnhance true
    /PostRenderingEnhanceDetails << /Type 13 /TonerSaveMode 4>>
    >> setpagedevice"
*End
*?RPSTonerSave: "
  save
  /UK (Unknown) def
  {
    currentpagedevice dup /PostRenderingEnhance 2 copy known not{UK exit}if
    get not { (False) exit } if
    /PostRenderingEnhanceDetails 2 copy known not { UK exit } if
    get dup /Type 2 copy known not { UK exit } if
    get dup type /integertype ne { UK exit } if
    13 ne { UK exit } if
    /TonerSaveMode 2 copy known not { UK exit } if
    get dup 0 eq { (False) exit } if
    dup 4 eq exch 5 eq or { (True) exit } if
    UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark
  = flush
  restore
"
*End
*DefaultRPSTonerSave: False
*CloseUI: *RPSTonerSave

*OpenUI *RPSDitherType/Dithering: PickOne
*OrderDependency: 100 AnySetup *RPSDitherType
*RPSDitherType Auto/Auto: "
  << /DeviceRenderingInfo << /DitherType 0 >> >> setpagedevice"
*End
*RPSDitherType Photo/Photographic: "
  << /DeviceRenderingInfo << /DitherType 1 >> >> setpagedevice"
*End
*RPSDitherType Letter/Text: "
  << /DeviceRenderingInfo << /DitherType 2 >> >> setpagedevice"
*End
*?RPSDitherType: "
  save
  /UK (Unknown) def
  {
   currentpagedevice dup /DeviceRenderingInfo 2 copy known not{UK exit}if
   get /DitherType 2 copy known not { UK exit } if
   get dup 0 eq { (Auto) exit } if
   dup 1 eq { (Photo) exit } if
   2 eq { (Letter) exit } if
   UK exit
   } bind loop
   mark count 1 sub 2 roll cleartomark
   = flush
   restore
"
*End
*DefaultRPSDitherType: Auto
*CloseUI: *RPSDitherType

*OpenUI *MediaType/Paper Type: PickOne
*OrderDependency: 50 AnySetup *MediaType
*MediaType Plain/Plain Paper: "<< /MediaType (Plain) >> setpagedevice"
*MediaType Transparency/OHP Transparency: "
  << /MediaType (Transparency)
     /DeviceRenderingInfo << /CRDType /Transparency >> >> setpagedevice"
*End
*MediaType Thick/Thick Paper: "<< /MediaType (Thick) >> setpagedevice"
*?MediaType: "
  save
  /UK (Unknown) def
  {
    currentpagedevice /MediaType 2 copy known not { UK exit } if
    get dup null eq 1 index (Plain) eq or { (Plain) exit } if
    dup (Transparency) eq { dup exit } if
    dup (Thick) eq { dup exit } if
    UK exit
  } bind loop
  mark count 1 sub 2 roll cleartomark
  = flush
  restore
"
*End
*DefaultMediaType: Plain
*CloseUI: *MediaType

*%========== Gray Levels and Halftoning ==========
*AccurateScreensSupport: True
*ScreenFreq: "100.0"
*ScreenAngle: "45.0"
*DefaultScreenProc: Dot
*ScreenProc Dot: "
  {abs exch abs 2 copy add 1 gt
   {1 sub dup mul exch 1 sub dup mul add 1 sub}
   {dup mul exch dup mul add 1 exch sub}
   ifelse}
"
*End
*ScreenProc Line: "{pop}"
*ScreenProc Ellipse: "
  {dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}
"
*End

*%========== Font ==========

*DefaultFont: Courier
*Font Courier: Standard "(000.000)" Standard ROM
*Font Courier-Bold: Standard "(000.000)" Standard ROM
*Font Courier-Oblique: Standard "(000.000)" Standard ROM
*Font Courier-BoldOblique: Standard "(000.000)" Standard ROM
*Font Times-Bold: Standard "(000.000)" Standard ROM
*Font Times-Italic: Standard "(000.000)" Standard ROM
*Font Times-BoldItalic: Standard "(000.000)" Standard ROM
*Font Times-Roman: Standard "(000.000)" Standard ROM
*Font Helvetica: Standard "(000.000)" Standard ROM
*Font Helvetica-Bold: Standard "(000.000)" Standard ROM
*Font Helvetica-Oblique: Standard "(000.000)" Standard ROM
*Font Helvetica-BoldOblique: Standard "(000.000)" Standard ROM
*Font AvantGarde-Book: Standard "(000.000)" Standard ROM
*Font AvantGarde-BookOblique: Standard "(000.000)" Standard ROM
*Font AvantGarde-Demi: Standard "(000.000)" Standard ROM
*Font AvantGarde-DemiOblique: Standard "(000.000)" Standard ROM
*Font Bookman-Demi: Standard "(000.000)" Standard ROM
*Font Bookman-DemiItalic: Standard "(000.000)" Standard ROM
*Font Bookman-Light: Standard "(000.000)" Standard ROM
*Font Bookman-LightItalic: Standard "(000.000)" Standard ROM
*Font Helvetica-Narrow: Standard "(000.000)" Standard ROM
*Font Helvetica-Narrow-Bold: Standard "(000.000)" Standard ROM
*Font Helvetica-Narrow-BoldOblique: Standard "(000.000)" Standard ROM
*Font Helvetica-Narrow-Oblique: Standard "(000.000)" Standard ROM
*Font Helvetica-Condensed: Standard "(000.000)" Standard ROM
*Font Helvetica-Condensed-Bold: Standard "(000.000)" Standard ROM
*Font Helvetica-Condensed-BoldObl: Standard "(000.000)" Standard ROM
*Font Helvetica-Condensed-Oblique: Standard "(000.000)" Standard ROM
*Font NewCenturySchlbk-Bold: Standard "(000.000)" Standard ROM
*Font NewCenturySchlbk-BoldItalic: Standard "(000.000)" Standard ROM
*Font NewCenturySchlbk-Italic: Standard "(000.000)" Standard ROM
*Font NewCenturySchlbk-Roman: Standard "(000.000)" Standard ROM
*Font Palatino-Bold: Standard "(000.000)" Standard ROM
*Font Palatino-BoldItalic: Standard "(000.000)" Standard ROM
*Font Palatino-Italic: Standard "(000.000)" Standard ROM
*Font Palatino-Roman: Standard "(000.000)" Standard ROM
*Font ZapfChancery-MediumItalic: Standard "(000.000)" Standard ROM
*Font Symbol: Special "(000.000)" Special ROM
*Font ZapfDingbats: Special "(000.000)" Special ROM

*?FontQuery: "
  save
  {
    count 1 gt {
    exch dup 127 string cvs (/) print print (:) print
    /Font resourcestatus {pop pop (Yes)}{(NO)}ifelse =
    }{exit}ifelse 
  }bind loop (*) = flush
  restore
"
*End

*?FontList: "
  save
  (*) {cvn ==} 128 string /Font resourceforall (*) = flush
  restore
"
*End

*%========== Printer Messages ==========
*PrinterError: "initializing"
*PrinterError: "holding"
*PrinterError: "idle"
*PrinterError: "busy"
*PrinterError: "printing"
*PrinterError: "toner near empty"
*PrinterError: "waster toner near full"
*PrinterError: "fuser oil near empty"
*PrinterError: "command que buffer near full"
*PrinterError: "maintenance #1"
*PrinterError: "maintenance #2"
*PrinterError: "maintenance #3"
*PrinterError: "engine ready"
*PrinterError: "warming up"
*PrinterError: "power save mode"
*PrinterError: "engine self test printing"
*PrinterError: "toner end"
*PrinterError: "waster toner full"
*PrinterError: "fuser oil end"
*PrinterError: "paper size error"
*PrinterError: "paper path error"
*PrinterError: "paper end"
*PrinterError: "paper cassette not equipped"
*PrinterError: "front cover open"
*PrinterError: "rear over open"
*PrinterError: "no color toner unit"
*PrinterError: "no waste toner bottle"
*PrinterError: "fuser error"
*PrinterError: "no black toner unit"
*PrinterError: "no OPC unit"
*PrinterError: "jam"
*PrinterError: "serviceman call #1"
*PrinterError: "serviceman call #2"
*PrinterError: "serviceman call #3"
*PrinterError: "serviceman call #4"
*PrinterError: "serviceman call #5"
*PrinterError: "serviceman call #6"
*PrinterError: "serviceman call #7"
*PrinterError: "serviceman call #8"
*PrinterError: "serviceman call #9"
*PrinterError: "serviceman call #10"
*PrinterError: "serviceman call #11"
*PrinterError: "serviceman call #17"
*PrinterError: "manualfeed timeout"
*PrinterError: "complex page, image down-sampled"

*Status: "initializing"
*Status: "holding"
*Status: "idle"
*Status: "busy"
*Status: "printing"
*Status: "PrinterError: toner near empty"
*Status: "PrinterError: waster toner near full"
*Status: "PrinterError: fuser oil near empty"
*Status: "PrinterError: command que buffer near full"
*Status: "PrinterError: maintenance #1"
*Status: "PrinterError: maintenance #2"
*Status: "PrinterError: maintenance #3"
*Status: "PrinterError: engine ready"
*Status: "PrinterError: warming up"
*Status: "PrinterError: power save mode"
*Status: "PrinterError: engine self test printing"
*Status: "PrinterError: toner end"
*Status: "PrinterError: waster toner full"
*Status: "PrinterError: fuser oil end"
*Status: "PrinterError: paper size error"
*Status: "PrinterError: paper path error"
*Status: "PrinterError: paper end"
*Status: "PrinterError: paper cassette not equipped"
*Status: "PrinterError: front cover open"
*Status: "PrinterError: rear over open"
*Status: "PrinterError: no color toner unit"
*Status: "PrinterError: no waste toner bottle"
*Status: "PrinterError: fuser error"
*Status: "PrinterError: no black toner unit"
*Status: "PrinterError: no OPC unit"
*Status: "PrinterError: jam"
*Status: "PrinterError: serviceman call #1"
*Status: "PrinterError: serviceman call #2"
*Status: "PrinterError: serviceman call #3"
*Status: "PrinterError: serviceman call #4"
*Status: "PrinterError: serviceman call #5"
*Status: "PrinterError: serviceman call #6"
*Status: "PrinterError: serviceman call #7"
*Status: "PrinterError: serviceman call #8"
*Status: "PrinterError: serviceman call #9"
*Status: "PrinterError: serviceman call #10"
*Status: "PrinterError: serviceman call #11"
*Status: "PrinterError: serviceman call #17"
*Status: "PrinterError: manualfeed timeout"
*Status: "PrinterError: complex page, image down-sampled"

*Source: "Centronics"
*Source: "TCP/IP"
*Source: "NetBEUI"
*Source: "SPX/IPX"
*Source: "EtherTalk"
*Source: "LocalTalk"

*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*%========== Color Separation ==========

*DefaultColorSep: ProcessBlack.100lpi.600dpi/100 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*%===== For 100 lpi / 600 dpi =====

*ColorSepScreenAngle ProcessBlack.100lpi.600dpi/100 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle CustomColor.100lpi.600dpi/100 lpi / 600 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.100lpi.600dpi/100 lpi / 600 dpi: "15.0"
*ColorSepScreenAngle ProcessMagenta.100lpi.600dpi/100 lpi / 600 dpi: "75.0"
*ColorSepScreenAngle ProcessYellow.100lpi.600dpi/100 lpi / 600 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.100lpi.600dpi/100 lpi / 600 dpi: "100"
*ColorSepScreenFreq CustomColor.100lpi.600dpi/100 lpi / 600 dpi: "100"
*ColorSepScreenFreq ProcessCyan.100lpi.600dpi/100 lpi / 600 dpi: "100"
*ColorSepScreenFreq ProcessMagenta.100lpi.600dpi/100 lpi / 600 dpi: "100"
*ColorSepScreenFreq ProcessYellow.100lpi.600dpi/100 lpi / 600 dpi: "100"

*%===== For 60 lpi / 300 dpi =====

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45.0"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15.0"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75.0"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0.0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*%
*%      COPYRIGHT (C) 1998-2000 RICOH COMPANY, LTD.
*%      All rights reserved.
*%
*% end of Printer Description file for "RICOH COLOR LASER AP305 RPS"
