*PPD-Adobe: "4.2"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1993-95 Electronics for Imaging, Inc.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*%EFFileVersion: 2.0
*%EF1File

*FormatVersion: "4.2"
*FileVersion: "1.0"
*PCFileName: "EFXJX403.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(Fiery XJ DocuColor 40)"
*PSVersion: "(2013.114) 7"
*ModelName: "Fiery XJ DocuColor 40 Color Server v2013.114"
*ShortNickName: "Xerox DocuColor40 w/FieryXJ RIP"
*NickName: "Fiery XJ DocuColor 40 Color Server v2013.114"

*% === Options and Constraints ==============================

*% Transparencies, Thick paper, and Transparent Interleave 
*% should only be printed from Manual Feed. 
*UIConstraints: *MediaType Transparent *ManualFeed False
*UIConstraints: *MediaType Thick *ManualFeed False
*UIConstraints: *MediaType Interleaved *ManualFeed False
*UIConstraints: *ManualFeed False *MediaType Transparent
*UIConstraints: *ManualFeed False *MediaType Thick
*UIConstraints: *ManualFeed False *MediaType Interleaved

*% SlipSheet on means no Tray 3
*UIConstraints: *Slipsheet True *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *Slipsheet True

*% Constraints on MediaType with Tray1-3...................
*UIConstraints: *MediaType Thick *InputSlot Tray1
*UIConstraints: *MediaType Transparent *InputSlot Tray1
*UIConstraints: *MediaType Interleaved *InputSlot Tray1
*UIConstraints: *InputSlot Tray1 *MediaType Thick
*UIConstraints: *InputSlot Tray1 *MediaType Transparent
*UIConstraints: *InputSlot Tray1 *MediaType Interleaved

*UIConstraints: *MediaType Thick *InputSlot Tray2
*UIConstraints: *MediaType Transparent *InputSlot Tray2
*UIConstraints: *MediaType Interleaved *InputSlot Tray2
*UIConstraints: *InputSlot Tray2 *MediaType Thick
*UIConstraints: *InputSlot Tray2 *MediaType Transparent
*UIConstraints: *InputSlot Tray2 *MediaType Interleaved

*UIConstraints: *MediaType Thick *InputSlot Tray3
*UIConstraints: *MediaType Transparent *InputSlot Tray3
*UIConstraints: *MediaType Interleaved *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *MediaType Thick
*UIConstraints: *InputSlot Tray3 *MediaType Transparent
*UIConstraints: *InputSlot Tray3 *MediaType Interleaved

*UIConstraints: *MediaType Transparent *ColorRenderDict Preferred
*UIConstraints: *MediaType Transparent *ColorRenderDict Colorimetric
*UIConstraints: *MediaType Interleaved *ColorRenderDict Preferred
*UIConstraints: *MediaType Interleaved *ColorRenderDict Colorimetric
*UIConstraints: *ColorRenderDict Preferred *MediaType Transparent 
*UIConstraints: *ColorRenderDict Colorimetric *MediaType Transparent 
*UIConstraints: *ColorRenderDict Preferred *MediaType Interleaved 
*UIConstraints: *ColorRenderDict Colorimetric *MediaType Interleaved 

*UIConstraints: *MediaType Transparent *EFDuplex True
*UIConstraints: *MediaType Interleaved *EFDuplex True
*UIConstraints: *EFDuplex True *MediaType Transparent
*UIConstraints: *EFDuplex True *MediaType Interleaved

*UIConstraints: *ColorModel GRAY *ColorRenderDict Preferred
*UIConstraints: *ColorModel GRAY *ColorRenderDict Colorimetric
*UIConstraints: *ColorModel GRAY *ColorRenderDict Business 
*UIConstraints: *ColorModel GRAY *ColorRenderDict Monitor 
*UIConstraints: *ColorRenderDict Preferred *ColorModel GRAY
*UIConstraints: *ColorRenderDict Colorimetric *ColorModel GRAY
*UIConstraints: *ColorRenderDict Business *ColorModel GRAY
*UIConstraints: *ColorRenderDict Monitor *ColorModel GRAY

*% General Information and Defaults ===============
*FreeVM: "16632226"
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: False
*TTRasterizer: Type42
*PrintPSErrors: True
*FileSystem: True
*?FileSystem: "
    save
      statusdict /diskstatus known{(True)} {(False)} ifelse = flush
    restore
    "
*End
*Throughput: "40"
*Password: "0"
*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   systemdict /quit get exec
   (WARNING: Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 400dpi
*?Resolution: "
save
  initgraphics
  0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  (          ) cvs print (dpi) = flush
restore
"
*End

*AccurateScreensSupport: True

*%EFIFlags *ENABLESTARR Setup
*OpenUIEFI *ENABLESTARR/Starr Compression    : Boolean
*OrderDependency: 05 AnySetup *ENABLESTARR
*DefaultENABLESTARR: YES
*ENABLESTARR YES/On: ""
*ENABLESTARR NO/Off: ""
*CloseUIEFI: *ENABLESTARR

*%EFIFlags *OutputOrder  Spooler|Command
*OpenUI *OutputOrder/Page Order    :PickOne
*OrderDependency: 12 AnySetup *OutputOrder
*DefaultOutputOrder: OutputOrderDEF
*OutputOrder OutputOrderDEF/Printer's default: ""
*OutputOrder Normal/Forward:" userdict /XJXsetprintorder known 
    { 1 XJXsetprintorder } 
    { (printerinfo PrintOrder 0) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*OutputOrder Reverse/Reverse:" userdict /XJXsetprintorder known 
    { 2 XJXsetprintorder } 
    { (printerinfo PrintOrder 1) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*CloseUI: *OutputOrder

*%EFIFlags *EFDuplex Spooler|Command
*OpenUI *EFDuplex/Duplex    :PickOne
*OrderDependency: 50 AnySetup *EFDuplex
*DefaultEFDuplex: EFDuplexDEF
*EFDuplex EFDuplexDEF/Printer's default: ""
*EFDuplex True/On: " << /Duplex true /Policies << /Duplex 0 >>  >> setpagedevice"
*EFDuplex False/Off: "<< /Duplex false /Policies << /Duplex 1 >> >> setpagedevice"
*CloseUI: *EFDuplex

*%EFIFlags *Collate Spooler|Command
*OpenUI *Collate/Copy Sets    : Boolean
*OrderDependency: 50 AnySetup *Collate
*DefaultCollate: CollateDEF
*Collate CollateDEF/Printer's default: ""
*Collate True/Collated:    "<< /Collate true>> setpagedevice"
*Collate False/Uncollated: "<< /Collate false>> setpagedevice"
*?Collate: "currentpagedevice /Collate get {(On)} {(Off)} ifelse = flush"
*CloseUI: *Collate

*%EFIFlags *Slipsheet  Spooler|Command
*OpenUI *Slipsheet/Add Slip Sheet    :PickOne
*OrderDependency: 12 AnySetup *Slipsheet
*DefaultSlipsheet: SlipsheetDEF
*Slipsheet SlipsheetDEF/Printer's default: ""
*Slipsheet True/Yes:" userdict /XJXsetSlipSheet known 
    { 2 XJXsetSlipSheet } 
    { (printerinfo SlipSheet 1) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*Slipsheet False/No:" userdict /XJXsetSlipSheet known 
    { 1 XJXsetSlipSheet } 
    { (printerinfo SlipSheet 0) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*CloseUI: *Slipsheet

*%EFIFlags *EFCopierMode Command
*OpenUI *EFCopierMode/Copier Mode    :PickOne
*OrderDependency: 40 AnySetup *EFCopierMode
*DefaultEFCopierMode: CopierDEF
*EFCopierMode CopierDEF/Printer's default: ""
*EFCopierMode Photo/Photo: " userdict /XJXsetmapmode known 
    { 0 XJXsetmapmode } 
    { (printerinfo setmapmode 0) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse "
*End
*EFCopierMode Map/Map: " userdict /XJXsetmapmode known 
    { 1 XJXsetmapmode } 
    { (printerinfo setmapmode 1) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse "
*End
*?EFCopierMode: ""
*CloseUI: *EFCopierMode



*%EFIFlags *EFOverprint Command|Rerip
*OpenUI *EFOverprint/Combine Separations    :PickOne
*OrderDependency: 40 AnySetup *EFOverprint
*DefaultEFOverprint: OverPrintDEF
*EFOverprint OverPrintDEF/Printer's default: ""
*EFOverprint On/On: " userdict /XJXsetoverprint known 
    { 1 XJXsetoverprint } 
    { (printerinfo overprint 1) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse 
         userdict /setcolorbundle known
    { << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
    { << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*EFOverprint Off/Off: " userdict /XJXsetoverprint known 
    { 0 XJXsetoverprint } 
    { (printerinfo overprint 0) =string 
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse 
         userdict /setcolorbundle known
    { << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
    { << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*?EFOverprint: ""
*CloseUI: *EFOverprint

*%EFIFlags *ColorModel Command|Rerip
*OpenUI *ColorModel/Color Mode    :PickOne
*OrderDependency: 15 AnySetup *ColorModel 
*DefaultColorModel: ColorModelDEF
*ColorModel ColorModelDEF/Printer's default: ""
*ColorModel CMYK/CMYK: " userdict /setcolorbundle known 
    { << /ColorMode /CMYK >> setcolorbundle }
    { << /ProcessColorModel /DeviceCMYK >> setpagedevice } ifelse "
*End
*ColorModel GRAY/Grayscale: " userdict /setcolorbundle known
    { << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
    { << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*?ColorModel: " currentpagedevice /ProcessColorModel get == } if "
*CloseUI: *ColorModel

*%EFIFlags *DEFPAPERSIZE Setup
*OpenUIEFI *DEFPAPERSIZE/Default Paper Sizes    :PickOne
*OrderDependency: 20 AnySetup *DEFPAPERSIZE
*DefaultDEFPAPERSIZE: US
*DEFPAPERSIZE US/US: ""
*DEFPAPERSIZE Metric/Metric: ""
*?DEFPAPERSIZE: ""
*CloseUIEFI: *DEFPAPERSIZE 

*%EFIFlags *CONVPAPERSIZE Setup
*OpenUIEFI *CONVPAPERSIZE/Convert Paper Sizes    : PickOne
*OrderDependency: 25 AnySetup *CONVPAPERSIZE
*DefaultCONVPAPERSIZE: False
*CONVPAPERSIZE False/No: ""
*CONVPAPERSIZE LetterToA4/Letter/11x17->A4/A3: ""
*CONVPAPERSIZE A4ToLetter/A4/A3->Letter/11x17: ""
*?CONVPAPERSIZE: ""
*CloseUIEFI: *CONVPAPERSIZE

*%EFIFlags *COVPGATEND Setup
*OpenUIEFI *COVPGATEND/Print Cover Page    : PickOne
*OrderDependency: 30 AnySetup *COVPGATEND
*DefaultCOVPGATEND: NO
*COVPGATEND YES/Yes: ""
*COVPGATEND NO/No: ""
*CloseUIEFI: *COVPGATEND

*%EFIFlags *COURIERSUBST Setup
*OpenUIEFI *COURIERSUBST/Allow Courier       Substitution    :PickOne
*OrderDependency: 35 AnySetup *COURIERSUBST
*DefaultCOURIERSUBST: YES
*COURIERSUBST YES/Yes: ""
*COURIERSUBST NO/No: ""
*CloseUIEFI: *COURIERSUBST 

*%EFIFlags *PSERROR Setup
*OpenUIEFI *PSERROR/Print to PS Error    : PickOne
*OrderDependency: 40 AnySetup *PSERROR
*DefaultPSERROR: NO
*PSERROR YES/Yes: ""
*PSERROR NO/No: ""
*CloseUIEFI: *PSERROR

*%EFIFlags *USEBYPASSTRAY Setup
*OpenUIEFI *USEBYPASSTRAY/Enable Bypass Tray  as default    : PickOne
*OrderDependency: 20 AnySetup *USEBYPASSTRAY
*DefaultUSEBYPASSTRAY: NO
*USEBYPASSTRAY YES/Yes: ""
*USEBYPASSTRAY NO/No: ""
*CloseUIEFI: *USEBYPASSTRAY

*%EFIFlags *MediaType Spooler|Command|Rerip
*OpenUI *MediaType/Media Type    :PickOne
*OrderDependency: 50 AnySetup *MediaType
*DefaultMediaType: MediaDEF
*MediaType MediaDEF/Printer's default:""
*MediaType Plain/Plain Paper: " userdict /setcolorbundle known
    { << /MediaType /Plain >> setcolorbundle 1 XJXsetmediatype } if"
*End
*MediaType Thick/Thick Paper:  " userdict /setcolorbundle known
    { << /MediaType /Thick >> setcolorbundle 2 XJXsetmediatype } if"
*End
*MediaType Transparent/Transparency: " userdict /setcolorbundle known
    { << /MediaType /Transparent >> setcolorbundle 3 XJXsetmediatype } if"
*End
*MediaType Interleaved/Interleaved: " userdict /setcolorbundle known
    { << /MediaType /Interleaved >> setcolorbundle 4 XJXsetmediatype  } if"
*End
*?MediaType: " userdict /setcolorbundle known { 
    currentcolorbundle /MediaType get == } if"
*End
*CloseUI: *MediaType

*%EFIFlags *ColorRenderDict Spooler|Command|Rerip
*OpenUI *ColorRenderDict/Rendering Style    :PickOne
*OrderDependency: 60 AnySetup *ColorRenderDict
*DefaultColorRenderDict: RenderingDEF
*ColorRenderDict RenderingDEF/Printer's default: ""
*ColorRenderDict Preferred/Photographic: " userdict /setcolorbundle known
    { << /ColorRendering /Photographic >> setcolorbundle }
      { /DefaultColorRendering 
       currentpagedevice /DeviceRenderingInfo 
               get /ValuesPerColorComponent get 2 eq 
          { /HTPreferredColorRendering } { /PreferredColorRendering } ifelse
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Business/Presentation: " userdict /setcolorbundle known
    { << /ColorRendering /Presentation >> setcolorbundle }
    { /DefaultColorRendering 
       currentpagedevice /DeviceRenderingInfo 
               get /ValuesPerColorComponent get 2 eq 
          { /HTBusinessColorRendering } { /BusinessColorRendering } ifelse
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Monitor/Monitor: " userdict /setcolorbundle known
    { << /ColorRendering /Monitor >> setcolorbundle }
    { /DefaultColorRendering 
       currentpagedevice /DeviceRenderingInfo 
               get /ValuesPerColorComponent get 2 eq 
          { /HTMonitorColorRendering } { /MonitorColorRendering } ifelse
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Colorimetric/Solid Color: " userdict /setcolorbundle known
    { << /ColorRendering /Solid >> setcolorbundle }
    { /DefaultColorRendering 
       currentpagedevice /DeviceRenderingInfo 
               get /ValuesPerColorComponent get 2 eq 
          { /HTColorimetricColorRendering } { /ColorimetricColorRendering } ifelse
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*?ColorRenderDict: " userdict /setcolorbundle known
    { currentcolorbundle /ColorRendering get == } if "
*End
*CloseUI: *ColorRenderDict

*%EFIFlags *EFBrightness Spooler|Command|Rerip
*OpenUI *EFBrightness/Brightness    :PickOne
*OrderDependency: 55 AnySetup *EFBrightness
*DefaultEFBrightness: EFBrightnessDEF
*EFBrightness EFBrightnessDEF/Printer's default: ""
*EFBrightness +0.24/85%  Lightest: " {dup 180 mul sin 0.15 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.16/90%  Lighter:     " {dup 180  mul sin 0.10 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.08/95%  Light:     " {dup 180  mul sin 0.05 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness 00.00/100% Normal:     " {} settransfer "
*EFBrightness -0.08/105% Dark:     " {dup 180  mul sin -0.05 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.16/110% Darker:     " {dup 180  mul sin -0.10 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.24/115% Darkest:    " {dup 180  mul sin -0.15 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*CloseUI: *EFBrightness

*%EFIFlags *EFRaster Command|Rerip
*OpenUI *EFRaster/Save Fast Reprint    : Boolean
*OrderDependency: 65 AnySetup *EFRaster
*DefaultEFRaster: EFRasterDEF
*EFRaster EFRasterDEF/Printer's default: ""
*EFRaster True/On: " userdict /XJXsetraster known
    { 1 XJXsetraster }
    { (printerinfo StoreRaster 1) =string
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*EFRaster False/Off: " userdict /XJXsetraster known
    { 0 XJXsetraster }
    { (printerinfo StoreRaster 0) =string
        /CPSI /ProcSet findresource /externalcommand get exec { pop } if } ifelse  "
*End
*?EFRaster: ""
*CloseUI: *EFRaster
            
*%EFIFlags *ManualFeed Spooler|Command
*OpenUI *ManualFeed/Bypass Tray     :Boolean
*OrderDependency: 65 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True/On: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False/Off: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: " 
   save currentpagedevice /ManualFeed get
   {(True)} {(False)} ifelse = flush restore"
*End
*CloseUI: *ManualFeed

*%EFIFlags *Prange Command
*OpenUIEFI *Prange/Page Range    : PickOne
*OrderDependency: 70 AnySetup *Prange
*DefaultPrange: All
*Prange All/All: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    currentglobal true setglobal
    DriverOps /pagerange [ ] put
    setglobal "
*End
*Prange Even/Even: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    currentglobal true setglobal
    DriverOps /pagerange [ 1 1000 { dup 2 add } repeat ] put
    setglobal "
*End
*Prange Odd/Odd: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    currentglobal true setglobal
    DriverOps /pagerange [ 0 1000 { dup 2 add } repeat ] put
    setglobal "
*End
*Prange range1/1-3, 5, 7: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    currentglobal true setglobal
    DriverOps /pagerange [ 0 1 2 4 6 ] put
    setglobal "
*End
*CloseUIEFI: *Prange

*%EFIFlags *Flip Command
*OpenUIEFI *Flip/Flip    : PickOne
*OrderDependency: 75 AnySetup *Flip
*DefaultFlip: None
*Flip None/None: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /fliph? false put DriverOps /flipv? false put << >> setpagedevice "
*End
*Flip V/Vertical: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /fliph? false put DriverOps /flipv? true put << >> setpagedevice "
*End
*Flip H/Horizonal: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /fliph? true put DriverOps /flipv? false put << >> setpagedevice "
*End
*Flip VH/Vertical & Horizontal: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /fliph? true put DriverOps /flipv? true put << >> setpagedevice "
*End
*CloseUIEFI: *Flip

*%EFIFlags *Scale Command
*OpenUIEFI *Scale/Scale    : PickOne
*OrderDependency: 80 AnySetup *Scale
*DefaultScale: 100
*Scale 200/200%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /scale# 2 put << >> setpagedevice "
*End
*Scale 150/150%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /scale# 1.5 put << >> setpagedevice "
*End
*Scale 100/100%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /scale# 1 put << >> setpagedevice "
*End
*Scale 75/75%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /scale# .75 put << >> setpagedevice "
*End
*Scale 50/50%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
    DriverOps /scale# .5 put << >> setpagedevice "
*End
*CloseUIEFI: *Scale

*% Halftone Information =============================
*ScreenFreq: "50.0"
*ScreenAngle: "0"
*DefaultScreenProc: Graphics
*ScreenProc Graphics: "
    {2 4 
    { 3 1 roll 4 -1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }
    exec 8 mul 3 1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }            
    exec add
    [
    48 18  8 16   46 16  6 14
    56 60 32 24   54 58 30 22
     4 12 44 40    2 10 42 38
    28 20 52 64   26 18 50 62
    
    45 15  5 13   47 17  7 15
    53 57 29 21   55 59 31 23
     1  9 41 37    3 11 43 39
    25 17 49 61   27 19 51 63
    ] 
    exch get 8 dup mul div} exec}"
*End

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*%EFIFlags *PageSize Command|Rerip
*OpenUI *PageSize/Page Size    :PickOne
*OrderDependency: 90 AnySetup *PageSize
*DefaultPageSize: Letter.Transverse
*PageSize Letter.Transverse/Letter: " userdict /setcolorbundle known
    { << /PageSize /Letter >> setcolorbundle }
    { << /PageSize [612 792] /MediaType null 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType null >> >> >> setpagedevice
    } ifelse "
*End
*PageSize Legal/Legal: " userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageSize Tabloid/11x17: " userdict /setcolorbundle known
    { << /PageSize /11x17 >> setcolorbundle } { 11x17 } ifelse "
*End
*PageSize TabloidExtra/12x18: " userdict /setcolorbundle known
    { << /PageSize /12x18 >> setcolorbundle } { 12x18 } ifelse "
*End
*PageSize A3/A3: " userdict /setcolorbundle known
    { << /PageSize /A3 >> setcolorbundle } { a3 } ifelse "
*End
*PageSize A4.Transverse/A4: " userdict /setcolorbundle known
    { << /PageSize /A4 >> setcolorbundle }
    { << /PageSize [595 842] /MediaType null 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType null >> >> >> setpagedevice
    } ifelse "
*End
*PageSize 8x10.Transverse/8x10: " userdict /setcolorbundle known
    { << /PageSize /8x10 >> setcolorbundle } { 8x10 } ifelse "
*End
*PageSize Legal13/Legal 13: " userdict /setcolorbundle known
    { << /PageSize /Legal13 >> setcolorbundle } { legal13 } ifelse "
*End
*PageSize 9x12/9x12: " userdict /setcolorbundle known
    { << /PageSize /9x12 >> setcolorbundle } { 9x12 } ifelse "
*End
*PageSize 216x356/216x356 mm: " userdict /setcolorbundle known
    { << /PageSize /216x356mm >> setcolorbundle } { legal } ifelse "
*End
*PageSize 216x330/216x330 mm: " userdict /setcolorbundle known
    { << /PageSize /216x330mm >> setcolorbundle } { legal13 } ifelse "
*End
*PageSize SEFLet/SEF Letter: " userdict /setcolorbundle known
    { << /PageSize /SEFLetter >> setcolorbundle }
    { << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageSize SEFA4/SEF A4: " userdict /setcolorbundle known 
    { << /PageSize /SEFA4 >> setcolorbundle }
    { << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*?PageSize: "  
    save currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if (Unknown) 
   12 dict
   dup [612 792] (Letter.Transverse) put
   dup [612 1008] (Legal) put
   dup [792 1224] (Tabloid) put
   dup [864 1296] (TabloidExtra) put
   dup [595 842] (A4.Transverse) put
   dup [842 1191] (A3) put
   dup [576 720] (8x10.Transverse) put
   dup [612 936] (Legal13) put
   dup [648 864] (9x12) put
   dup [612  937] (216x330) put
   dup [612 1009] (216x356) put
   dup [612 792] (SEFLet) put
   dup [595 843] (SEFA4) put
   { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
      { exch pop exit } { pop } ifelse
   } bind forall = flush pop pop
   restore"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*%EFIFlags *PageRegion
*OpenUI *PageRegion    :PickOne
*OrderDependency: 95 AnySetup *PageRegion
*DefaultPageRegion: Letter.Transverse
*PageRegion Letter.Transverse: " userdict /setcolorbundle known
    { << /PageSize /Letter >> setcolorbundle }
    { << /PageSize [612 792] /MediaType null 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType null >> >> >> setpagedevice
    } ifelse "
*End
*PageRegion Legal: " userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageRegion Tabloid: " userdict /setcolorbundle known
    { << /PageSize /11x17 >> setcolorbundle } { 11x17 } ifelse "
*End
*PageRegion TabloidExtra: " userdict /setcolorbundle known
    { << /PageSize /12x18 >> setcolorbundle } { 12x18 } ifelse "
*End
*PageRegion A3: " userdict /setcolorbundle known
    { << /PageSize /A3 >> setcolorbundle } { a3 } ifelse "
*End
*PageRegion A4.Transverse: " userdict /setcolorbundle known
    { << /PageSize /A4 >> setcolorbundle }
    { << /PageSize [595 842] /MediaType null 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType null >> >> >> setpagedevice
    } ifelse "
*End
*PageRegion 8x10.Transverse: " userdict /setcolorbundle known
    { << /PageSize /8x10 >> setcolorbundle } { 8x10 } ifelse "
*End
*PageRegion Legal13: " userdict /setcolorbundle known
    { << /PageSize /Legal13 >> setcolorbundle } { legal13 } ifelse "
*End
*PageRegion 9x12: " userdict /setcolorbundle known
    { << /PageSize /9x12 >> setcolorbundle } { 9x12 } ifelse "
*End
*PageRegion 216x356: " userdict /setcolorbundle known
    { << /PageSize /216x356mm >> setcolorbundle } { legal } ifelse "
*End
*PageRegion 216x330: " userdict /setcolorbundle known
    { << /PageSize /216x330mm >> setcolorbundle } { legal13 } ifelse "
*End
*PageRegion SEFLet: " userdict /setcolorbundle known
    { << /PageSize /SEFLetter >> setcolorbundle }
    { << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageRegion SEFA4: " userdict /setcolorbundle known 
    { << /PageSize /SEFA4 >> setcolorbundle }
    { << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter.Transverse
*ImageableArea Letter.Transverse: "8 9 604 783"
*ImageableArea Legal: "9 8 603 1000"
*ImageableArea Tabloid: "9 8 783 1216"
*ImageableArea TabloidExtra: "27 64 837 1287"
*ImageableArea A3: "9 8 833 1183"
*ImageableArea A4.Transverse: "8 9 587 833"
*ImageableArea 8x10.Transverse: "8 9 568 711"
*ImageableArea Legal13:  "9 8 603 928"
*ImageableArea 9x12: "9 8 639 856"
*ImageableArea 216x356:  "9 8 603 1001"
*ImageableArea 216x330:  "9 8 603 929"
*ImageableArea SEFLet: "9 8 603 784"
*ImageableArea SEFA4: "9 8 586 834"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter.Transverse
*PaperDimension Letter.Transverse/Letter: "612 792"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension Tabloid/11x17: "792 1224"
*PaperDimension TabloidExtra/12x18: "864 1296"
*PaperDimension A3/A3: "842 1191"
*PaperDimension A4.Transverse/A4: "595 842"
*PaperDimension 8x10.Transverse/8x10:  "576 720"
*PaperDimension Legal13/Legal13:  "612 936"
*PaperDimension 9x12/9x12:  "648 864"
*PaperDimension 216x330/216x330:  "612 937"
*PaperDimension 216x356/216x356:  "612 1009"
*PaperDimension SEFLet/SEF Letter: "612 793"
*PaperDimension SEFA4/SEF A4: "595 843"

*RequiresPageRegion All: True
*%EFIFlags *InputSlot Command|Spooler
*OpenUI *InputSlot/Paper Source    : PickOne
*OrderDependency: 20 AnySetup *InputSlot
*InputSlot Tray1/Tray 1: "(printerinfo trayselect 1) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*InputSlot Tray2/Tray 2: "(printerinfo trayselect 2) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*InputSlot Tray3/Tray 3: "(printerinfo trayselect 3) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*CloseUI: *InputSlot

*DefaultOutputOrder: Reverse

*% Font Information =========================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard Disk
*Font AvantGarde-Demi: Standard "(001.003)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard Disk
*Font Bookman-Demi: Standard "(001.001)" Standard Disk
*Font Bookman-DemiItalic: Standard "(001.001)" Standard Disk
*Font Bookman-Light: Standard "(001.001)" Standard Disk
*Font Bookman-LightItalic: Standard "(001.001)" Standard Disk
*Font Courier: Standard "(002.002)" Standard Disk
*Font Courier-Bold: Standard "(002.002)" Standard Disk
*Font Courier-BoldOblique: Standard "(002.002)" Standard Disk
*Font Courier-Oblique: Standard "(002.002)" Standard Disk
*Font Helvetica: Standard "(001.006)" Standard Disk
*Font Helvetica-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Condensed: Standard "(001.001)" Standard Disk
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard Disk
*Font Helvetica-Oblique: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard Disk
*Font Palatino-Bold: Standard "(001.005)" Standard Disk
*Font Palatino-BoldItalic: Standard "(001.005)" Standard Disk
*Font Palatino-Italic: Standard "(001.005)" Standard Disk
*Font Palatino-Roman: Standard "(001.005)" Standard Disk
*Font Symbol: Special "(001.003)" Special Disk
*Font Times-Bold: Standard "(001.007)" Standard Disk
*Font Times-BoldItalic: Standard "(001.009)" Standard Disk
*Font Times-Italic: Standard "(001.007)" Standard Disk
*Font Times-Roman: Standard "(001.007)" Standard Disk
*Font ZapfChancery-MediumItalic: Standard "(001.003)" Standard Disk
*Font ZapfDingbats: Special "(001.002)" Special Disk
*?FontQuery: "
   save  
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
       /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
      } { exit } ifelse
   } bind loop
   (*) = flush
   restore"
*End

*?FontList: "
   save (*) {cvn ==} 128 string /Font resourceforall
   (*) = flush restore"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "scanning"

*Status: "PrinterError: Ok"
*Status: "PrinterError: Reset the copier and fiery"
*Status: "PrinterError: Copier is busy (Copier mode)"
*Status: "PrinterError: Copier is busy (AGOC)"
*Status: "PrinterError: Copier is busy (FUSER)"
*Status: "PrinterError: Copier is busy (ROS)"
*Status: "PrinterError: Copier is busy (DRUM HEATER)"
*Status: "PrinterError: Copier is busy (MC)"
*Status: "PrinterError: Paper jam"
*Status: "PrinterError: Copier's interlock is open"
*Status: "PrinterError: Out of toner"
*Status: "PrinterError: Fuser web empty"
*Status: "PrinterError: Waste toner container is full"
*Status: "PrinterError: Copier's accessary is disabled"

*Status: "PrinterError: Load A3 paper in tray"
*Status: "PrinterError: Load A4 paper in tray"
*Status: "PrinterError: Load A4 SEF paper in tray"
*Status: "PrinterError: Load 11x17 paper in tray"
*Status: "PrinterError: Load Letter paper in tray"
*Status: "PrinterError: Load Letter SEF paper in tray"
*Status: "PrinterError: Load Legal paper in tray"
*Status: "PrinterError: Load 8x10 paper in tray"
*Status: "PrinterError: Load Legal 13 paper in tray"
*Status: "PrinterError: Load 9x12 paper in tray"

*Status: "PrinterError: An unknown copier error occurred"
*Status: "PrinterError: Copier is offline"

*Status: "PrinterError: Load A3 paper in bypass tray"
*Status: "PrinterError: Load A4 paper bypass tray"
*Status: "PrinterError: Load A4 SEF paper bypass tray"
*Status: "PrinterError: Load 11x17 paper bypass tray"
*Status: "PrinterError: Load Letter paper bypass tray"
*Status: "PrinterError: Load Letter SEF paper bypass tray"
*Status: "PrinterError: Load Legal paper bypass tray"
*Status: "PrinterError: Load 8x10 paper bypass tray"
*Status: "PrinterError: Load Legal 13 paper bypass tray"
*Status: "PrinterError: Load 9x12 paper bypass tray"

*Status: "PrinterError: Copier is busy (UI)"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "AppleTalk"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*PrinterError: "Ok"
*PrinterError: "Reset the copier and fiery"
*PrinterError: "Copier is busy (Copier mode)"
*PrinterError: "Copier is busy (AGOC)"
*PrinterError: "Copier is busy (FUSER)"
*PrinterError: "Copier is busy (ROS)"
*PrinterError: "Copier is busy (DRUM HEATER)"
*PrinterError: "Copier is busy (MC)"
*PrinterError: "Paper jam"
*PrinterError: "Copier's interlock is open"
*PrinterError: "Out of toner"
*PrinterError: "Fuser web empty"
*PrinterError: "Waste toner container is full"
*PrinterError: "Copier's accessary is disabled"

*PrinterError: "Load A3 paper in tray"
*PrinterError: "Load A4 paper in tray"
*PrinterError: "Load A4 SEF paper in tray"
*PrinterError: "Load 11x17 paper in tray"
*PrinterError: "Load Letter paper in tray"
*PrinterError: "Load Letter SEF paper in tray"
*PrinterError: "Load Legal paper in tray"
*PrinterError: "Load 8x10 paper in tray"
*PrinterError: "Load Legal 13 paper in tray"
*PrinterError: "Load 9x12 paper in tray"

*PrinterError: "An unknown copier error occurred"
*PrinterError: "Copier is offline"

*PrinterError: "Load A3 paper in bypass tray"
*PrinterError: "Load A4 paper bypass tray"
*PrinterError: "Load A4 SEF paper bypass tray"
*PrinterError: "Load 11x17 paper bypass tray"
*PrinterError: "Load Letter paper bypass tray"
*PrinterError: "Load Letter SEF paper bypass tray"
*PrinterError: "Load Legal paper bypass tray"
*PrinterError: "Load 8x10 paper bypass tray"
*PrinterError: "Load Legal 13 paper bypass tray"
*PrinterError: "Load 9x12 paper bypass tray"

*PrinterError: "Copier is busy (UI)"

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Color Separation Information ====================

*InkName: Cyan/Process Cyan
*InkName: Magenta/Process Magenta
*InkName: Yellow/Process Yellow
*InkName: Black/Process Black

*% Custom Inks for Fiery Logo
*InkName: P300FieryBlue/Fiery Blue
*InkName: P199FieryRed/Fiery Red
*InkName: PblackFieryBlack/Fiery Black
*CustomCMYK P300FieryBlue: ".9 .9 .0 .0"
*CustomCMYK P199FieryRed: ".0 .9 .9 .0"
*CustomCMYK PblackFieryBlack: ".2 .1 .1 .9"

*DefaultColorSep: Black.66lpi.400dpi
*DefaultSeparations: False

*% -------Halftone Graphics Mode (Hi-Res mode)
*ColorSepScreenAngle Cyan.50lpi.400dpi: "0"
*ColorSepScreenAngle Magenta.50lpi.400dpi: "0"
*ColorSepScreenAngle Yellow.50lpi.400dpi: "0"
*ColorSepScreenAngle Black.50lpi.400dpi: "0"
*ColorSepScreenFreq Cyan.50lpi.400dpi: "50.0"
*ColorSepScreenFreq Magenta.50lpi.400dpi: "50.0"
*ColorSepScreenFreq Yellow.50lpi.400dpi: "50.0"
*ColorSepScreenFreq Black.50lpi.400dpi: "50.0"
*ColorSepScreenProc Cyan.50lpi.400dpi: "{6 5 
    { 3 1 roll 4 -1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }
    exec 8 mul 3 1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }            
    exec add
    [
    48 18  8 16   46 16  6 14
    56 60 32 24   54 58 30 22
     4 12 44 40    2 10 42 38
    28 20 52 64   26 18 50 62
    
    45 15  5 13   47 17  7 15
    53 57 29 21   55 59 31 23
     1  9 41 37    3 11 43 39
    25 17 49 61   27 19 51 63
    ] 
    exch get 8 dup mul div} exec}" 
*End

*ColorSepScreenProc Magenta.50lpi.400dpi: "{4 7 
    { 3 1 roll 4 -1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }
    exec 8 mul 3 1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }            
    exec add
    [
    48 18  8 16   46 16  6 14
    56 60 32 24   54 58 30 22
     4 12 44 40    2 10 42 38
    28 20 52 64   26 18 50 62
    
    45 15  5 13   47 17  7 15
    53 57 29 21   55 59 31 23
     1  9 41 37    3 11 43 39
    25 17 49 61   27 19 51 63
    ] 
    exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Yellow.50lpi.400dpi: "{5 2
    { 3 1 roll 4 -1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }
    exec 8 mul 3 1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }            
    exec add
    [
    48 18  8 16   46 16  6 14
    56 60 32 24   54 58 30 22
     4 12 44 40    2 10 42 38
    28 20 52 64   26 18 50 62
    
    45 15  5 13   47 17  7 15
    53 57 29 21   55 59 31 23
     1  9 41 37    3 11 43 39
    25 17 49 61   27 19 51 63
    ] 
    exch get 8 dup mul div} exec}"
*End
*ColorSepScreenProc Black.50lpi.400dpi: "{2 4 
    { 3 1 roll 4 -1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }
    exec 8 mul 3 1 roll exch 
    {dup 8  ge { 8 sub} if exch 
    dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if      
    1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
    dup 0 lt {0 exch sub} if  cvi
    }            
    exec add
    [
    48 18  8 16   46 16  6 14
    56 60 32 24   54 58 30 22
     4 12 44 40    2 10 42 38
    28 20 52 64   26 18 50 62
    
    45 15  5 13   47 17  7 15
    53 57 29 21   55 59 31 23
     1  9 41 37    3 11 43 39
    25 17 49 61   27 19 51 63
    ] 
    exch get 8 dup mul div} exec}"
*End

*% Last Edit date Tue, May 7, 1996
*% End of PPD file for Fiery XJ DocuColor
