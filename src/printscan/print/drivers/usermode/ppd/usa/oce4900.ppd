*PPD-Adobe: "4.2"
*%
*%      PostScript(R) Printer Description file for the Oce 4900
*%
*%      Copyright 1997 Oce Nederland B.V.
*%
*% 19/11/97
*%=====================================================================

*FormatVersion: "4.2"
*FileVersion: "1.7"

*LanguageVersion: English
*LanguageEncoding: ISOLatin1

*PCFileName: "OCE4900.PPD"

*Product: "(Oce 4900)"
*PSVersion: "(4.0) 100"

*ModelName: "Oce 4900 PostScript"
*NickName: "Oce 4900 PostScript"

*% === Options and Constraints =========
*%
*OpenGroup: InstallableOptions/Options Installed

*OpenUI *Option2/Cassette2: Boolean
*DefaultOption2: False
*Option2 True/Installed: ""
*Option2 False/Not Installed: ""
*CloseUI: *Option2
*OpenUI *Option3/Cassette3: Boolean
*DefaultOption3: False
*Option3 True/Installed: ""
*Option3 False/Not Installed: ""
*CloseUI: *Option3
*OpenUI *OptionDuplex/Duplex: Boolean
*DefaultOptionDuplex: False
*OptionDuplex True/Installed: ""
*OptionDuplex False/Not Installed: ""
*CloseUI: *OptionDuplex

*CloseGroup: InstallableOptions

*UIConstraints: *Option2 False *InputSlot Cassette2
*UIConstraints: *OptionDuplex True *Option3 True
*UIConstraints: *Option3 True *OptionDuplex True
*UIConstraints: *Option3 False *InputSlot Cassette3
*UIConstraints: *OptionDuplex False *Duplex

*%=== Basic Device Capabilities ===========================
*%
*LanguageLevel: "2"

*FreeVM: "496664"

*Throughput: "22"

*OpenUI *Resolution/Choose Resolution: PickOne
*OrderDependency: 10 AnySetup *Resolution
*Resolution 1200dpi: "
600 600 setresolution statusdict begin 1 setresenhance end"
*End
*Resolution  600dpi: "
600 600 setresolution statusdict begin 0 setresenhance end"
*End
*Resolution  300dpi: "
300 300 setresolution statusdict begin 0 setresenhance end"
*End
*DefaultResolution: 600dpi
*?Resolution: "save
   initgraphics
   0 0 moveto currentpoint matrix defaultmatrix transform
   0 72 lineto currentpoint matrix defaultmatrix transform
   3 -1 roll sub dup mul
   3 1 roll exch sub dup mul
   add sqrt round cvi
   (     ) cvs print (dpi) = flush
restore"
*End
*CloseUI: *Resolution

*ColorDevice: False

*Reset: "<04>"

*Password: "0"
*ExitServer: "
  count 0 eq {  % is the password on the stack?
    true
  }{
    dup % potential password
    statusdict /checkpassword get exec not
  } ifelse
  {  %  if no password or not valid
    (WARNING : Cannot perform the exitserver command.) =
    (Password supplied is not valid.) =
    (Please contact the author of this software.) = flush
    quit
  } if
  serverdict /exitserver get exec"
*End

*DeviceAdjustMatrix: "[1 0 0 1 0 0]"

*% Gray Levels and Halftoning Information ===============
*DefaultColorSpace: Gray
*ScreenFreq: "60.0"
*ScreenAngle: "45.0"

*DefaultScreenProc: Dot
*ScreenProc Dot: "{abs dup add 1 sub dup mul exch
		   abs dup add 1 sub dup mul add 1 exch sub}"
*End
*ScreenProc Line: "{ pop }"
*ScreenProc Ellipse: "{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub }"

*DefaultTransfer: Null
*Transfer Null: "{}"
*Transfer Null.Inverse: "{1 exch sub}"

*%=== Paper Handling =======================

*OpenGroup: Paper

*% Page Size: sets up the frame buffer and selects a tray
*%
*OpenUI *PageSize: PickOne
*OrderDependency: 30 AnySetup *PageSize
*DefaultPageSize: Unknown
*PageSize A3L: "a3l"
*PageSize A3: "a3"
*PageSize A4: "a4"
*PageSize A4.Transverse: "a4R"
*PageSize A5: "a5"
*PageSize B4: "b4"
*PageSize B5: "b5"
*PageSize Letter: "letter"
*PageSize Letter.Transverse: "letterR"
*PageSize Legal: "legal"
*PageSize Ledger: "ledger"
*PageSize Executive: "executive"
*PageSize Card: "card"
*?PageSize: "save
   statusdict begin
   (Unknown) = flush
   end %statusdict
restore"
*End
*CloseUI: *PageSize

*% Page Region: sets up a frame buffer, usually used with manual feed
*%
*OpenUI *PageRegion: PickOne
*OrderDependency: 40 AnySetup *PageRegion
*DefaultPageRegion: Unknown
*PageRegion A3L: "needa3l"
*PageRegion A3: "needa3"
*PageRegion A4: "needa4"
*PageRegion A4.Transverse: "needa4R"
*PageRegion A5: "needa5"
*PageRegion B4: "needb4"
*PageRegion B5: "needb5"
*PageRegion Letter: "needletter"
*PageRegion Letter.Transverse: "needletterR"
*PageRegion Legal: "needlegal"
*PageRegion Ledger: "needledger"
*PageRegion Executive: "needexecutive"
*PageRegion Card: "needcard"
*CloseUI: *PageRegion

*% The imageable area for the different paper sizes
*%
*DefaultImageableArea: Unknown
*ImageableArea A3L: "10 10 916 1273"
*ImageableArea A3: "10 10 833 1178"
*ImageableArea A4: "10 11 582 833"
*ImageableArea A4.Transverse: "10 10 832 582"
*ImageableArea A5: "10 14 410 586"
*ImageableArea B4: "10 10 716 1020"
*ImageableArea B5: "10 13 505 719"
*ImageableArea Letter: "10 9 601 781"
*ImageableArea Letter.Transverse: "10 10 782 603"
*ImageableArea Legal: "10 10 601 997"
*ImageableArea Ledger: "10 10 782  1212"
*ImageableArea Executive: "10 14 509 747"
*ImageableArea Card: "10 10 271 409"
*?ImageableArea: "save
   /cvp {(                ) cvs print () print } bind def
   /upperright {10000 mul floor 10000 div} bind def
   /lowerleft {10000 mul ceiling 10000 div} bind def
   newpath clippath pathbox
   4 -2 roll exch 2 {lowerleft cvp} repeat
   exch 2 {upperright cvp} repeat flush
restore"
*End

*% The physical dimensions of the paper
*%
*DefaultPaperDimension: Unknown
*PaperDimension A3L: "930 1284"
*PaperDimension A3: "842 1191"
*PaperDimension A4: "595 842"
*PaperDimension A4.Transverse: "842 595"
*PaperDimension A5: "420 595"
*PaperDimension B4: "729 1032"
*PaperDimension B5: "516 729"
*PaperDimension Letter: "612 791"
*PaperDimension Letter.Transverse: "791 612"
*PaperDimension Legal: "612 1009"
*PaperDimension Ledger: "791 1225"
*PaperDimension Executive: "791 1225"
*PaperDimension Card: "283 420"

*CloseGroup: Paper

*% Media handling features ================================

*OpenUI *InputSlot: PickOne
*OrderDependency: 20 AnySetup *InputSlot
*DefaultInputSlot: Cassette1
*InputSlot MFF/Multifunction feeder: "systemdict begin 3 setpapertray end"
*InputSlot Cassette1/Tray 1: "systemdict begin 0 setpapertray end"
*InputSlot Cassette2/Tray 2: "systemdict begin 1 setpapertray end"
*InputSlot Cassette3/Tray 3: "systemdict begin 2 setpapertray end"
*CloseUI: *InputSlot

*%RequiresPageRegion All: True

*% Font Information =====================

*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.000)"
*Font AvantGarde-BookOblique: Standard "(001.000)"
*Font AvantGarde-Demi: Standard "(001.000)"
*Font AvantGarde-DemiOblique: Standard "(001.000)"
*Font Bookman-Demi: Standard "(001.000)"
*Font Bookman-DemiItalic: Standard "(001.000)"
*Font Bookman-Light: Standard "(001.000)"
*Font Bookman-LightItalic: Standard "(001.000)"
*Font Courier: Standard "(001.000)"
*Font Courier-Bold: Standard "(001.000)"
*Font Courier-BoldOblique: Standard "(001.000)"
*Font Courier-Oblique: Standard "(001.000)"
*Font Helvetica: Standard "(001.000)"
*Font Helvetica-Bold: Standard "(001.000)"
*Font Helvetica-BoldOblique: Standard "(001.000)"
*Font Helvetica-Narrow: Standard "(001.001)"
*Font Helvetica-Narrow-Bold: Standard "(001.002)"
*Font Helvetica-Narrow-BoldObl: Standard "(001.002)"
*Font Helvetica-Narrow-Oblique: Standard "(001.001)"
*Font Helvetica-Oblique: Standard "(001.000)"
*Font NewCenturySchlbk-Bold: Standard "(001.000)"
*Font NewCenturySchlbk-BoldItalic: Standard "(001.000)"
*Font NewCenturySchlbk-Italic: Standard "(001.000)"
*Font NewCenturySchlbk-Roman: Standard "(001.000)"
*Font Palatino-Bold: Standard "(001.000)"
*Font Palatino-BoldItalic: Standard "(001.000)"
*Font Palatino-Italic: Standard "(001.000)"
*Font Palatino-Roman: Standard "(001.000)"
*Font Symbol: Special "(001.000)"
*Font Times-Bold: Standard "(001.000)"
*Font Times-BoldItalic: Standard "(001.000)"
*Font Times-Italic: Standard "(001.000)"
*Font Times-Roman: Standard "(001.000)"
*Font ZapfChancery-MediumItalic: Standard "(001.000)"
*Font ZapfDingbats: Special "(001.000)"
*?FontQuery: "save
   /str 100 string dup 0 (fonts/) putinterval def
   {
     count 1 gt
     {
       exch dup str 6 94 getinterval cvs
       (/) print print (:) print
       FontDirectory exch known
       {(Yes)}{(No)} ifelse =
     }
     {exit} ifelse
   }bind loop
   (*) = flush
restore"
*End
*?FontList: "save
   FontDirectory { pop == } bind forall flush
   (*) = flush
restore"
*End

*% Color Separation Information =====================

*DefaultColorSep: ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi

*InkName: ProcessBlack/Process Black
*InkName: CustomColor/Custom Color
*InkName: ProcessCyan/Process Cyan
*InkName: ProcessMagenta/Process Magenta
*InkName: ProcessYellow/Process Yellow

*ColorSepScreenAngle ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.600dpi/60 lpi / 600 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.600dpi/60 lpi / 600 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.600dpi/60 lpi / 600 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.600dpi/60 lpi / 600 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.600dpi/60 lpi / 600 dpi: "60"

*ColorSepScreenAngle ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "45"
*ColorSepScreenAngle ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "15"
*ColorSepScreenAngle ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "75"
*ColorSepScreenAngle ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "0"

*ColorSepScreenFreq ProcessBlack.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq CustomColor.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessCyan.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessMagenta.60lpi.300dpi/60 lpi / 300 dpi: "60"
*ColorSepScreenFreq ProcessYellow.60lpi.300dpi/60 lpi / 300 dpi: "60"

*% Finishing options ===============================

*OpenUI *Duplex: PickOne
*OrderDependency: 50 AnySetup *Duplex
*DefaultDuplex: None
*Duplex DuplexTumble: "
	statusdict begin
	{true settumble true setduplexmode}
	stopped pop end"
*End
*Duplex DuplexNoTumble: "
	statusdict begin
	{false settumble true setduplexmode}
	stopped pop end"
*End
*Duplex None: "
	statusdict begin
	{false setduplexmode}
	stopped pop end"
*End
*?Duplex: "save
   statusdict /duplexmode get exec
   {tumble{(DuplexTumble)}{(DuplexNoTumble)}ifelse}
   {(None)}ifelse = flush restore"
*End
*CloseUI: *Duplex

*% Printer Messages Information =====================

*%Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "Call Service"
*Status: "Command Error"
*Status: "Stat Parity Err"
*Status: "Status Timeout"
*Status: "WAIT A MOMENT"
*Status: "*Please Wait*"
*Status: "Error Recover"
*Status: "Wait Timeout"
*Status: "VSYNC Timeout"
*Status: "Main Motor Error"
*Status: "Optics Error"
*Status: "Fixer Unit Error"
*Status: "Plot EEPROM Err"
*Status: "Toner Sensor Err"
*Status: "Op Mode Set Err"
*Status: "No Toner Dis Box"
*Status: "Proc Unit Change"
*Status: "No Process Unit"
*Status: "Trap5 Cmd Error"
*Status: "Inner Jam"
*Status: "Lower Cass Jam"
*Status: "MP Feeder Jam"
*Status: "Proc Un. Warning"
*Status: "Add Toner"
*Status: "Cover Open"
*Status: "Insert Paper"
*Status: "Upper or Lower"

*% Input Sources (format: %%[status: <stat>; source: <one of these> ]%%)
*Source: Parallel

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% end of PPD file

