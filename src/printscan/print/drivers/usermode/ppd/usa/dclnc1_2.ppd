*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1993-94 Electronics for Imaging, Inc. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% Created for Digital Colorwriter LSR 2000 Printer
*% Modified 1998 for NT 4.0 PSCRIPT and 4.3
*% Copyright 1998, GENICOM Corporation

*FormatVersion: "4.3"
*FileVersion: "1.2"
*PCFileName: "DCLNC1_2.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(Colorwriter LSR 2000)"
*PSVersion: "(2015.108) 0"
*Manufacturer: "Digital"
*ModelName: "Colorwriter LSR 2000"
*ShortNickName: "Colorwriter LSR 2000"
*NickName: "Colorwriter LSR 2000"

*% === Options and Constraints =========
*OpenGroup: InstallableOptions/Options Installed
*OpenUI *Option1/Optional Cassette: Boolean
*DefaultOption1: False
*Option1 True/Installed: ""
*Option1 False/Not Installed: ""
*CloseUI: *Option1
*CloseGroup: InstallableOptions

*UIConstraints: *Option1 False *InputSlot Tray2
*UIConstraints: *InputSlot Tray2 *Option1 False

*% === Options and Constraints =========

*UIConstraints: *ColorModel Gray *ColorRenderDict Preferred
*UIConstraints: *ColorModel Gray *ColorRenderDict Business
*UIConstraints: *ColorModel Gray *ColorRenderDict Colorimetric
*UIConstraints: *ColorModel Gray *ColorRenderDict Monitor

*UIConstraints: *ColorRenderDict Preferred *ColorModel Gray
*UIConstraints: *ColorRenderDict Colorimetric *ColorModel Gray
*UIConstraints: *ColorRenderDict Business *ColorModel Gray
*UIConstraints: *ColorRenderDict Monitor *ColorModel Gray

*UIConstraints: *MediaType Transparent *ColorRenderDict Preferred
*UIConstraints: *ColorRenderDict Preferred *MediaType Transparent 

*UIConstraints: *MediaType Transparent *ColorRenderDict Colorimetric
*UIConstraints: *ColorRenderDict Colorimetric *MediaType Transparent

*UIConstraints: *ColorRenderDict Preferred *MediaType Transparent
*UIConstraints: *MediaType Transparent *ColorRenderDict Preferred

*UIConstraints: *ColorRenderDict Monitor *MediaType Transparent
*UIConstraints: *MediaType Transparent *ColorRenderDict Monitor

*% General Information and Defaults ===============
*FreeVM: "16632226"
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*%VariablePaperSize: False
*TTRasterizer: Type42
*?TTRasterizer: "(Type42) = flush"
*FileSystem: True
*?FileSystem: "
    save
      statusdict /diskstatus known{(True)} {(False)} ifelse = flush
    restore
    "
*End
*Throughput: "10"
*Password: "0"
*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   systemdict /quit get exec
   (WARNING: Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 600dpi
*?Resolution: "
    save
      initgraphics
      0 0 moveto currentpoint matrix defaultmatrix transform
      0 72 lineto currentpoint matrix defaultmatrix transform
      3 -1 roll sub dup mul
      3 1 roll exch sub dup mul
      add sqrt round cvi
      (          ) cvs print (dpi) = flush
    restore
    "
*End

*AccurateScreensSupport: True

*%EFIFlags *ColorModel Command|Setup
*OpenUI *ColorModel/Color Mode: PickOne
*OrderDependency: 15.0 AnySetup *ColorModel
*DefaultColorModel: ColorModelDEF
*ColorModel ColorModelDEF/Printer's default: ""
*ColorModel CMYK/CMYK: " userdict /setcolorbundle known 
    { << /ColorMode /CMYK >> setcolorbundle }
    { << /ProcessColorModel /DeviceCMYK >> setpagedevice } ifelse "
*End
*ColorModel Gray/Grayscale: " userdict /setcolorbundle known
    { << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
    { << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*?ColorModel: " currentpagedevice /ProcessColorModel get == } if "
*CloseUI: *ColorModel

*%EFIFlags *EFCOVPGATEND Setup
*OpenUIEFI *EFCOVPGATEND/Print Cover Page: PickOne
*OrderDependency: 30.0 AnySetup *EFCOVPGATEND
*DefaultEFCOVPGATEND: No
*EFCOVPGATEND Yes/Yes: ""
*EFCOVPGATEND No/No: ""
*CloseUIEFI: *EFCOVPGATEND

*%EFIFlags *EFPSERROR Setup
*OpenUIEFI *EFPSERROR/Print to PS Error: PickOne
*OrderDependency: 40.0 AnySetup *EFPSERROR
*DefaultEFPSERROR: No
*EFPSERROR Yes/Yes: ""
*EFPSERROR No/No: ""
*CloseUIEFI: *EFPSERROR

*%EFIFlags *EFSTARTPAGE Setup
*OpenUIEFI *EFSTARTPAGE/Print Startpage: PickOne
*OrderDependency: 20.0 AnySetup *EFSTARTPAGE
*DefaultEFSTARTPAGE : No
*EFSTARTPAGE Yes/Yes: ""
*EFSTARTPAGE No/No: ""
*CloseUIEFI: *EFSTARTPAGE

*%EFIFlags *MediaType
*OpenUI *MediaType/Paper Type: PickOne
*OrderDependency: 50.0 AnySetup *MediaType
*DefaultMediaType: MediaDEF
*MediaType MediaDEF/Printer's default:""
*MediaType Plain/Plain Paper: " userdict /setcolorbundle known
    { << /MediaType /Plain >> setcolorbundle 1 XJXsetmediatype } if
        (printerinfo mediatype PLAIN) =string /CPSI /ProcSet
    findresource /externalcommand get exec {pop} if "
*End
*MediaType Transparent/Transparency: " userdict /setcolorbundle known
    { << /MediaType /Transparent >> setcolorbundle 2 XJXsetmediatype  } if
        (printerinfo mediatype TRANSPARENCY) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if "
*End
*?MediaType: " (unknown) == flush"
*CloseUI: *MediaType

*%EFIFlags *ColorRenderDict Spooler|Command|Setup
*OpenUI *ColorRenderDict/Rendering Style: PickOne
*OrderDependency: 60.0 AnySetup *ColorRenderDict
*DefaultColorRenderDict: RenderingDEF
*ColorRenderDict RenderingDEF/Printer's default: ""
*ColorRenderDict Preferred/Photographic: " userdict /setcolorbundle known
    { << /ColorRendering /Photographic >> setcolorbundle }
      { /DefaultColorRendering 
      /P320CMYKPhotographic
        /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Business/Presentation: " userdict /setcolorbundle known
    { << /ColorRendering /Presentation >> setcolorbundle }
    { /DefaultColorRendering 
      /P320CMYKPresentation
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Monitor/Monitor: " userdict /setcolorbundle known
    { << /ColorRendering /Monitor >> setcolorbundle }
    { /DefaultColorRendering 
       /P320CMYKMonitor 
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*ColorRenderDict Colorimetric/Solid Color: " userdict /setcolorbundle known
    { << /ColorRendering /Solid >> setcolorbundle }
    { /DefaultColorRendering 
      /P320CMYKSolid
           /ColorRendering findresource
         /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*?ColorRenderDict: " userdict /setcolorbundle known
    { currentcolorbundle /ColorRendering get == } 
    { currentcolorrendering /ProfileInfoDict known
          { currentcolorrendering /ProfileInfoDict get 
          /EFI_DISP_NAME get == }
          { (Unknown) = } ifelse } ifelse flush"
*End
*CloseUI: *ColorRenderDict

*%EFIFlags *EFBrightness Spooler|Command
*OpenUI *EFBrightness/Brightness: PickOne
*OrderDependency: 55.0 AnySetup *EFBrightness
*DefaultEFBrightness: EFBrightnessDEF
*EFBrightness EFBrightnessDEF/Printer's default: ""
*EFBrightness +0.24/85%  Lightest: " {dup 180 mul sin 0.15 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.16/90%  Lighter:     " {dup 180  mul sin 0.10 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.08/95%  Light:     " {dup 180  mul sin 0.05 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness 00.00/100% Normal:     " {} settransfer "
*EFBrightness -0.08/105% Dark:     " {dup 180  mul sin -0.05 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.16/110% Darker:     " {dup 180  mul sin -0.10 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.24/115% Darkest:    " {dup 180  mul sin -0.15 mul add } bind
    userdict /ColorAdjust known 
    {  dup dup dup ColorAdjust /coloradjust get exec }
    {  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
       dup 0 4 -1 roll put settransfer } ifelse "
*End
*CloseUI: *EFBrightness

*%EFIFlags *ManualFeed Command
*OpenUI *ManualFeed/MultiPurpose Tray: Boolean
*OrderDependency: 65.0 AnySetup *ManualFeed
*DefaultManualFeed: False
*ManualFeed True/On: "1 dict dup /ManualFeed true put setpagedevice"
*ManualFeed False/Off: "1 dict dup /ManualFeed false put setpagedevice"
*?ManualFeed: " 
   save currentpagedevice /ManualFeed get
   {(True)} {(False)} ifelse = flush restore"
*End
*CloseUI: *ManualFeed

*%EFIFlags *InputSlot
*OpenUI *InputSlot/Paper Source: PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: AutoSelect
*InputSlot AutoSelect/AutoSelect: "(printerinfo trayselect AUTO_TRAY) =string /CPSI /ProcSet 
   findresource /externalcommand get exec {pop} if"
*End
*InputSlot Tray1/Main Cassette: "(printerinfo trayselect MAIN_CASS) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*InputSlot Tray2/Optional Cassette: "(printerinfo trayselect OPTIONAL_CASS) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*?InputSlot: "(unknown) == flush"
*CloseUI: *InputSlot

*%EFIFlags *EFInputSlot Setup
*OpenUIEFI *EFInputSlot/PAPER SOURCE: PickOne
*OrderDependency: 20.0 AnySetup *EFInputSlot
*DefaultEFInputSlot: Tray1
*EFInputSlot AutoSelect/AutoSelect: "(printerinfo trayselect AUTO_TRAY) =string /CPSI /ProcSet 
   findresource /externalcommand get exec {pop} if"
*End
*EFInputSlot Tray1/Tray1: "(printerinfo trayselect MAIN_CASS) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*EFInputSlot Tray2/Tray2: "(printerinfo trayselect OPTIONAL_CASS) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*EFInputSlot AuxiliaryTray/AuxiliaryTray: "(printerinfo trayselect MANUAL_FEED) =string /CPSI /ProcSet 
    findresource /externalcommand get exec {pop} if"
*End
*CloseUIEFI: *EFInputSlot

*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% Black substitution is always on.
*DefaultBlackSubstitution: True
*BlackSubstitution True: ""
*?BlackSubstitution: "(True) == flush"

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.
*%EFIFlags *PageSize Command|Setup
*OpenUI *PageSize/Page Size: PickOne
*OrderDependency: 90.0 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter:" userdict /setcolorbundle known
    { << /PageSize /Letter-R >> setcolorbundle }
    { << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageSize Legal/Legal: " userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageSize A4/A4:" userdict /setcolorbundle known 
    { << /PageSize /A4-R >> setcolorbundle }
    { << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageSize A4FB/A4+ (Legal):" userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageSize B5/B5: " userdict /setcolorbundle known 
    { << /PageSize /B5-R >> setcolorbundle }
    { << /PageSize [516 729] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [516 729] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*?PageSize: "
    save currentpagedevice /PageSize get aload pop
    2 copy gt {exch} if (Unknown) 
    5 dict
    dup [612 1008] (Legal) put
    dup [612 1015] (A4FB) put
    dup [612 792] (Letter) put
    dup [595 842] (A4) put
    dup [516 729] (B5) put
    { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
      { exch pop exit } { pop } ifelse
    } bind forall = flush pop pop
    restore "
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*%EFIFlags *PageRegion
*OpenUI *PageRegion: PickOne
*OrderDependency: 95.0 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter:" userdict /setcolorbundle known
    { << /PageSize /Letter-R >> setcolorbundle }
    { << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageRegion Legal/Legal: " userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageRegion A4/A4: " userdict /setcolorbundle known 
    { << /PageSize /A4-R >> setcolorbundle }
    { << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*PageRegion A4FB/A4+ (Legal): " userdict /setcolorbundle known
    { << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageRegion B5/B5: " userdict /setcolorbundle known 
    { << /PageSize /B5-R >> setcolorbundle }
    { << /PageSize [516 729] /MediaType (ShortEdgeFeed) 
            /InputAttributes << 0 << /PageSize [516 729] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
    } ifelse "
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea Legal/Legal: "8.4 11.8 603.6 988.4"
*ImageableArea Letter/Letter: "8.4 11.8 603.6 772.4"
*ImageableArea A4/A4: "8.4 11.8 586.6 822.4"
*ImageableArea A4FB/A4+ (Legal): "9 83 604 925"
*ImageableArea B5/B5: "8.4 11.8 507.6 709.4"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Legal/Legal:     "612 1008"
*PaperDimension Letter/Letter: "612 792"
*PaperDimension A4/A4: "595 842"
*PaperDimension A4FB/A4+ (Legal): "612 1015"
*PaperDimension B5/B5: "516 729"

*RequiresPageRegion All: True

*DefaultOutputOrder: Reverse

*% Font Information =========================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard Disk
*Font AvantGarde-Demi: Standard "(001.003)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard Disk
*Font Bookman-Demi: Standard "(001.001)" Standard Disk
*Font Bookman-DemiItalic: Standard "(001.001)" Standard Disk
*Font Bookman-Light: Standard "(001.001)" Standard Disk
*Font Bookman-LightItalic: Standard "(001.001)" Standard Disk
*Font Courier: Standard "(002.002)" Standard Disk
*Font Courier-Bold: Standard "(002.002)" Standard Disk
*Font Courier-BoldOblique: Standard "(002.002)" Standard Disk
*Font Courier-Oblique: Standard "(002.002)" Standard Disk
*Font Helvetica: Standard "(001.006)" Standard Disk
*Font Helvetica-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Condensed: Standard "(001.001)" Standard Disk
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard Disk
*Font Helvetica-Narrow: Standard "(001.001)" Standard Disk
*Font Helvetica-Narrow-Bold: Standard "(001.002)" Standard Disk
*Font Helvetica-Narrow-BoldObl: Standard "(001.002)" Standard Disk
*Font Helvetica-Narrow-Oblique: Standard "(001.001)" Standard Disk
*Font Helvetica-Oblique: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard Disk
*Font Palatino-Bold: Standard "(001.005)" Standard Disk
*Font Palatino-BoldItalic: Standard "(001.005)" Standard Disk
*Font Palatino-Italic: Standard "(001.005)" Standard Disk
*Font Palatino-Roman: Standard "(001.005)" Standard Disk
*Font Symbol: Special "(001.003)" Special Disk
*Font Times-Bold: Standard "(001.007)" Standard Disk
*Font Times-BoldItalic: Standard "(001.009)" Standard Disk
*Font Times-Italic: Standard "(001.007)" Standard Disk
*Font Times-Roman: Standard "(001.007)" Standard Disk
*Font ZapfChancery-MediumItalic: Standard "(001.003)" Standard Disk
*Font ZapfDingbats: Special "(001.002)" Special Disk
*?FontQuery: "
   save  
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
       /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
      } { exit } ifelse
   } bind loop
   (*) = flush
   restore"
*End

*?FontList: "
   save (*) {cvn ==} 128 string /Font resourceforall
   (*) = flush restore"
*End

*ContoneOnly: True

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "scanning"
*Status: "PrinterError: Copier is busy"
*Status: "PrinterError: Copier is in standby mode"
*Status: "PrinterError: Service cable is disconnected"
*Status: "PrinterError: Out of fuser oil"
*Status: "PrinterError: Copier door is open"
*Status: "PrinterError: Paper jam"
*Status: "PrinterError: Out of paper"
*Status: "PrinterError: Waste toner container is full"
*Status: "PrinterError: Out of toner"
*Status: "PrinterError: There is no key"
*Status: "PrinterError: There is no control card"
*Status: "PrinterError: ID mode"
*Status: "PrinterError: Copier needs attention; see copier control panel"
*Status: "PrinterError: Load A4 paper"
*Status: "PrinterError: Load Letter paper"
*Status: "PrinterError: Load Letter-R paper"
*Status: "PrinterError: Load A4-R paper"
*Status: "PrinterError: Load B5-R paper"
*Status: "PrinterError: Load Legal paper"
*Status: "PrinterError: Check copier power and cable connection"
*Status: "PrinterError: Check film scanner connection"
*Status: "PrinterError: Copier is warming up"
*Status: "PrinterError: Copier communication error; call copier technician"
*Status: "PrinterError: Set paper size, then load manual feed paper"
*Status: "PrinterError: An unknown copier error occurred"
*Status: "PrinterError: Load manual feed paper"
*Status: "PrinterError: Remove manual feed paper, then set size"
*Status: "PrinterError: Copier is disconnected"
*Status: "PrinterError: Film Scanner has copy control"

*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "LocalTalk"
*Source: "EtherTalk"
*Source: "Parallel"
*Source: "TCP/IP"
*Source: "Novell IPX"
*Source: "SCSIComm"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)
*PrinterError: "Copier is busy"
*PrinterError: "Copier is in standby mode"
*PrinterError: "Service cable is disconnected"
*PrinterError: "Out of fuser oil"
*PrinterError: "Copier door is open"
*PrinterError: "Paper jam"
*PrinterError: "Out of paper"
*PrinterError: "Waste toner container is full"
*PrinterError: "Out of toner"
*PrinterError: "There is no key"
*PrinterError: "There is no control card"
*PrinterError: "ID mode"
*PrinterError: "Copier needs attention; see copier control panel"
*PrinterError: "Load A4 paper"
*PrinterError: "Load Legal paper"
*PrinterError: "Load Letter-R paper"
*PrinterError: "Load A4-R paper"
*PrinterError: "Load B5-R paper"
*PrinterError: "Check copier power and cable connection"
*PrinterError: "Check film scanner connection"
*PrinterError: "Copier is warming up"
*PrinterError: "Copier communication error; call copier technician"
*PrinterError: "Set paper size, then load manual feed paper"
*PrinterError: "An unknown copier error occurred"
*PrinterError: "Load manual feed paper"
*PrinterError: "Remove manual feed paper, then set size"
*PrinterError: "Copier is disconnected"
*PrinterError: "Film Scanner has copy control"


*% Last Edit date May 5, 1998
*% End of PPD File for Colorwriter LSR 2000
