*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1993-97 Electronics for Imaging, Inc.
*% All Rights Reserved.
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*%EFFileVersion: 2.0

*FormatVersion: "4.3"
*FileVersion: "1.0"
*PCFileName: "EFXJX404.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(Fiery XJ DocuColor 40)"
*PSVersion: "(2017.103) 1"
*ModelName: "Fiery XJ DocuColor 40 Color Server v2017.103"
*%ShortNickName: "Fiery XJ DocuColor 40 v2017.103"
*ShortNickName: "Xerox DocuColor40 with XJ+4.2"
*NickName: "Fiery XJ DocuColor 40 Color Server v2017.103"
*Manufacturer: "Xerox"

*% PPD body begins

*% === Options and Constraints ==============================
*%EFIGroupName Job/Job :True
*%EFIGroupName Media/Media :True
*%EFIGroupName Color/Color :True
*%EFIGroupName Finishing/Finishing :True
*%EFIGroupName Notes/Notes :True

*%EFIFlags *Notes1
*%EFIGroup *Notes1  Notes/Notes 
*%EFIJobNote *Notes1/Notes 1 :32

*%EFIFlags *Notes2
*%EFIGroup *Notes2  Notes/Notes 
*%EFIJobNote *Notes2/Notes 2 :32

*%EFIFlags *Instruct  Column
*%EFIGroup *Instruct  Notes/Notes 
*%EFIJobNote *Instruct/Instructions :128

*% SlipSheet on means no Tray 3
*UIConstraints: *Slipsheet True *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *Slipsheet True

*% Slip Sheet disabled when Sorter On 
*UIConstraints: *Sorter True *Slipsheet True
*UIConstraints: *Slipsheet True *Sorter True

*% Constraints on MediaType with Tray1-3...................
*UIConstraints: *MediaType Thick *InputSlot Tray1
*UIConstraints: *MediaType Transparent *InputSlot Tray1
*UIConstraints: *MediaType Interleaved *InputSlot Tray1
*UIConstraints: *MediaType Film *InputSlot Tray1
*%UIConstraints: *InputSlot Tray1 *MediaType Thick
*%UIConstraints: *InputSlot Tray1 *MediaType Transparent
*%UIConstraints: *InputSlot Tray1 *MediaType Interleaved
*%UIConstraints: *InputSlot Tray1 *MediaType Film

*UIConstraints: *MediaType Thick *InputSlot Tray2
*UIConstraints: *MediaType Transparent *InputSlot Tray2
*UIConstraints: *MediaType Interleaved *InputSlot Tray2
*UIConstraints: *MediaType Film *InputSlot Tray2
*%UIConstraints: *InputSlot Tray2 *MediaType Thick
*%UIConstraints: *InputSlot Tray2 *MediaType Transparent
*%UIConstraints: *InputSlot Tray2 *MediaType Interleaved
*%UIConstraints: *InputSlot Tray2 *MediaType Film

*UIConstraints: *MediaType Thick *InputSlot Tray3
*UIConstraints: *MediaType Transparent *InputSlot Tray3
*UIConstraints: *MediaType Interleaved *InputSlot Tray3
*UIConstraints: *MediaType Film *InputSlot Tray3
*%UIConstraints: *InputSlot Tray3 *MediaType Thick
*%UIConstraints: *InputSlot Tray3 *MediaType Transparent
*%UIConstraints: *InputSlot Tray3 *MediaType Interleaved
*%UIConstraints: *InputSlot Tray3 *MediaType Film

*UIConstraints: *MediaType Transparent *EFDuplex True
*UIConstraints: *MediaType Interleaved *EFDuplex True
*UIConstraints: *MediaType Film *EFDuplex True
*UIConstraints: *EFDuplex True *MediaType Transparent
*UIConstraints: *EFDuplex True *MediaType Interleaved
*UIConstraints: *EFDuplex True *MediaType Film

*UIConstraints: *MediaType Transparent *EFTumble True
*UIConstraints: *EFTumble True *MediaType Transparent

*UIConstraints: *MediaType Transparent *EFTumble False
*UIConstraints: *EFTumble False *MediaType Transparent

*UIConstraints: *EFDuplex False *EFTumble False
*UIConstraints: *EFTumble False *EFDuplex False 
*UIConstraints: *EFDuplex False *EFTumble True
*UIConstraints: *EFTumble True *EFDuplex False 

*% General Information and Defaults ===============
*FreeVM: "16632226"
*VMOption None/Standard: "16632226"
*FCacheSize None: 204800
*LanguageLevel: "2"
*ColorDevice: True
*DefaultColorSpace: CMYK
*PrintPSErrors: True
*ContoneOnly: True
*ScreenFreq: "100"
*ScreenAngle: "50"
*FileSystem: True
*?FileSystem: "
	save
	  statusdict /diskstatus known{(True)} {(False)} ifelse = flush
	restore
	"
*End
*Throughput: "40"
*Password: "0"
*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   systemdict /quit get exec
   (WARNING: Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 400dpi
*?Resolution: "
save
  initgraphics
  0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  (          ) cvs print (dpi) = flush
restore
"
*End

*AccurateScreensSupport: True

*%EFIFlags *EFPrange Command
*%EFIGroup *EFPrange Job/Job
*OpenUIEFI *EFPrange/Page Range    : PickOne
*OrderDependency: 70.0 AnySetup *EFPrange
*DefaultEFPrange: All
*EFPrange All/All: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ ] put
	setglobal "
*End
*EFPrange Even/Even: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 1 1000 { dup 2 add } repeat ] put
	setglobal "
*End
*EFPrange Odd/Odd: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 0 1000 { dup 2 add } repeat ] put
	setglobal "
*End
*EFPrange range1/1-3, 5, 7: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 0 1 2 4 6 ] put
	setglobal "
*End
*CloseUIEFI: *EFPrange

*%EFIFlags *EFScale Command|Rerip
*%EFIGroup *EFScale Job/Job
*OpenUIEFI *EFScale/Scale    : PickOne
*OrderDependency: 80.0 AnySetup *EFScale
*DefaultEFScale: 100
*EFScale 200/200%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 2 put << >> setpagedevice "
*End
*EFScale 150/150%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 1.5 put << >> setpagedevice "
*End
*EFScale 100/100%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 1 put << >> setpagedevice "
*End
*EFScale 75/75%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# .75 put << >> setpagedevice "
*End
*EFScale 50/50%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# .5 put << >> setpagedevice "
*End
*CloseUIEFI: *EFScale


*%EFIFlags *FRAME_MODE Setup
*OpenUIEFI *FRAME_MODE/Starr Compression    :Boolean
*OrderDependency: 05.0 AnySetup *FRAME_MODE
*DefaultFRAME_MODE: AREND
*FRAME_MODE AREND/On: ""
*FRAME_MODE ADOBE/Off: ""
*CloseUIEFI: *FRAME_MODE


*%EFIFlags *EFCompression Spooler|Command|Column|Rerip
*%EFIGroup *EFCompression Job/Job
*OpenUI *EFCompression/Compression    :PickOne
*OrderDependency: 05.0 AnySetup *EFCompression
*DefaultEFCompression: SCDefault
*EFCompression SCDefault/Printer's Default: ""
*%DefaultEFCompression: True
*EFCompression False/Off: "(setrendertype ADOBE) 128 string 
	/EFI_CODEV /ProcSet findresource /externalcommand get exec pop pop
	(setpackingmode PLANAR) 128 string 
	/EFI_CODEV /ProcSet findresource /externalcommand get exec pop pop
	<<>>setpagedevice"
*End
*EFCompression True/On: "(setrendertype AREND) 128 string 
	/EFI_CODEV /ProcSet findresource /externalcommand get exec pop pop
	(setpackingmode INTERLEAVED) 128 string 
	/EFI_CODEV /ProcSet findresource /externalcommand get exec pop pop
	<<>>setpagedevice"
*End
*?EFCompression: "(True) = flush"
*CloseUI: *EFCompression


*%EFIFlags *OutputOrder  Spooler|Command
*%EFIGroup *OutputOrder  Finishing/Finishing
*OpenUI *OutputOrder/Page Order    :PickOne
*OrderDependency: 12.0 AnySetup *OutputOrder
*DefaultOutputOrder: Normal
*OutputOrder Normal/Forward:" userdict /XJXsetprintorder known 
	{ 0 XJXsetprintorder } 
	{ (printerinfo PrintOrder 0) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*OutputOrder Reverse/Reverse:" userdict /XJXsetprintorder known 
	{ 1 XJXsetprintorder } 
	{ (printerinfo PrintOrder 1) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*CloseUI: *OutputOrder

*%EFIFlags *EFDuplex Spooler|Command|Column
*%EFIGroup *EFDuplex  Finishing/Finishing
*OpenUI *EFDuplex/Duplex    :Boolean
*OrderDependency: 50.0 AnySetup *EFDuplex
*DefaultEFDuplex: False
*EFDuplex True/On: " << /Duplex true /Policies << /Duplex 0 >>  >> setpagedevice"
*EFDuplex False/Off: "<< /Duplex false /Policies << /Duplex 1 >> >> setpagedevice"
*?EFDuplex: "{currentpagedevice /Duplex get } stopped { (False) } 
	     { {(True)} {(False)} ifelse } ifelse = flush"
*End
*CloseUI: *EFDuplex

*%EFIFlags *EFTumble Spooler|Command|Rerip
*%EFIGroup *EFTumble  Finishing/Finishing
*OpenUI *EFTumble/Page Turn    :PickOne
*OrderDependency: 50.0 AnySetup *EFTumble
*DefaultEFTumble: None
*EFTumble None/None: ""
*EFTumble False/Top-Top: " << /Tumble false >> setpagedevice "
*EFTumble True/Top-Bottom: " << /Tumble true >> setpagedevice "
*?EFTumble: "{currentpagedevice /Tumble get } stopped { (False) } 
	     { {(True)} {(False)} ifelse } ifelse = flush"
*End
*CloseUI: *EFTumble

*%EFIFlags *Collate Spooler|Command
*%EFIGroup *Collate  Finishing/Finishing
*OpenUI *Collate/Collation    : Boolean
*OrderDependency: 50.0 AnySetup *Collate
*DefaultCollate: True
*Collate True/Collated:    "<< /Collate true>> setpagedevice"
*Collate False/Uncollated: "<< /Collate false>> setpagedevice"
*?Collate: "{currentpagedevice /Collate get } stopped { (False) } 
	     { {(True)} {(False)} ifelse } ifelse = flush"
*End
*CloseUI: *Collate

*%EFIFlags *Slipsheet  Spooler|Command
*%EFIGroup *Slipsheet  Finishing/Finishing
*OpenUI *Slipsheet/Slip Sheet    :Boolean
*OrderDependency: 12.0 AnySetup *Slipsheet
*DefaultSlipsheet: False
*Slipsheet True/On:" userdict /XJXsetSlipSheet known 
	{ 1 XJXsetSlipSheet } 
	{ (printerinfo SlipSheet 1) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*Slipsheet False/Off:" userdict /XJXsetSlipSheet known 
	{ 0 XJXsetSlipSheet } 
	{ (printerinfo SlipSheet 0) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*CloseUI: *Slipsheet

*%EFIFlags *Sorter Command|Column
*%EFIGroup *Sorter  Finishing/Finishing
*OpenUI *Sorter/Sorter    :PickOne
*OrderDependency: 40.0 AnySetup *Sorter
*DefaultSorter: SFDefault
*Sorter SFDefault/Printer's Default: ""
*%DefaultSorter: False
*Sorter True/On: "(printerinfo sortmode 1) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if "
*End
*Sorter False/Off: "(printerinfo sortmode 0) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if "
*End
*CloseUI: *Sorter

*%EFIFlags *EFStapler Command|Column
*%EFIGroup *EFStapler  Finishing/Finishing
*OpenUI *EFStapler/Stapler    :PickOne
*OrderDependency: 40.0 AnySetup *EFStapler
*DefaultEFStapler: Off
*EFStapler Off/Off: "(printerinfo staplemode 0) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if "
*End
*EFStapler On/On: "(printerinfo staplemode 1) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if "
*End
*CloseUI: *EFStapler

*%EFIFlags *EFCopierMode Command
*%EFIGroup *EFCopierMode  Color/Color
*OpenUI *EFCopierMode/Copier Mode    :PickOne
*OrderDependency: 40.0 AnySetup *EFCopierMode
*DefaultEFCopierMode: TextInh
*EFCopierMode TextInh/Text Enhancement: " userdict /XJXsetmapmode known 
	{ 2 XJXsetmapmode } 
	{ (printerinfo setmapmode 2) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*EFCopierMode Photo/Photo: " userdict /XJXsetmapmode known 
	{ 0 XJXsetmapmode } 
	{ (printerinfo setmapmode 0) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*EFCopierMode Map/Map: " userdict /XJXsetmapmode known
	{ 1 XJXsetmapmode } 
	{ (printerinfo setmapmode 1) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*CloseUI: *EFCopierMode

*%EFIFlags *EFColorModel Command|Rerip
*%EFIGroup *EFColorModel  Color/Color
*OpenUI *EFColorModel/Color Mode    :PickOne
*OrderDependency: 15.0 AnySetup *EFColorModel 
*DefaultEFColorModel: CMYK
*EFColorModel CMYK/CMYK: " userdict /setcolorbundle known 
	{ << /ColorMode /CMYK >> setcolorbundle }
	{ << /ProcessColorModel /DeviceCMYK >> setpagedevice } ifelse "
*End
*EFColorModel Gray/Grayscale: " userdict /setcolorbundle known
	{ << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
	{ << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*?EFColorModel: " currentpagedevice /ProcessColorModel get /DeviceCMYK eq {(CMYK)}{(Gray)} ifelse == "
*CloseUI: *EFColorModel

*%EFIFlags *EFOverprint Command|Rerip
*%EFIGroup *EFOverprint Color/Color
*OpenUI *EFOverprint/Combine Separations    :Boolean
*OrderDependency: 40.0 AnySetup *EFOverprint
*DefaultEFOverprint: False
*EFOverprint True/On: " userdict /XJXsetoverprint known 
	{ 1 XJXsetoverprint } 
	{ (printerinfo overprint 1) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse 
		 userdict /setcolorbundle known
	{ << /ColorMode /Grayscale /Compression /Disabled >> setcolorbundle }
	{ << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*EFOverprint False/Off: " userdict /XJXsetoverprint known 
	{ 0 XJXsetoverprint } 
	{ (printerinfo overprint 0) =string 
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*CloseUI: *EFOverprint

*%EFIFlags *DEFPAPERSIZE Setup
*OpenUIEFI *DEFPAPERSIZE/Default Paper Sizes    :PickOne
*OrderDependency: 20.0 AnySetup *DEFPAPERSIZE
*DefaultDEFPAPERSIZE: US
*DEFPAPERSIZE US/US: ""
*DEFPAPERSIZE Metric/Metric: ""
*CloseUIEFI: *DEFPAPERSIZE 

*%EFIFlags *CONVPAPERSIZE Setup
*OpenUIEFI *CONVPAPERSIZE/Convert Paper Sizes    : PickOne
*OrderDependency: 25.0 AnySetup *CONVPAPERSIZE
*DefaultCONVPAPERSIZE: False
*CONVPAPERSIZE False/No: ""
*CONVPAPERSIZE LetterToA4/Letter/11x17->A4/A3: ""
*CONVPAPERSIZE A4ToLetter/A4/A3->Letter/11x17: ""
*CloseUIEFI: *CONVPAPERSIZE

*%EFIFlags *COVPGATEND Setup
*OpenUIEFI *COVPGATEND/Print Cover Page    : PickOne
*OrderDependency: 30.0 AnySetup *COVPGATEND
*DefaultCOVPGATEND: NO
*COVPGATEND YES/Yes: ""
*COVPGATEND NO/No: ""
*CloseUIEFI: *COVPGATEND

*%EFIFlags *COURIERSUBST Setup
*OpenUIEFI *COURIERSUBST/Allow Courier       Substitution    :PickOne
*OrderDependency: 35.0 AnySetup *COURIERSUBST
*DefaultCOURIERSUBST: YES
*COURIERSUBST YES/Yes: ""
*COURIERSUBST NO/No: ""
*CloseUIEFI: *COURIERSUBST 

*%EFIFlags *PSERROR Setup
*OpenUIEFI *PSERROR/Print to PS Error    : PickOne
*OrderDependency: 40.0 AnySetup *PSERROR
*DefaultPSERROR: NO
*PSERROR YES/Yes: ""
*PSERROR NO/No: ""
*CloseUIEFI: *PSERROR

*%EFIFlags *USEBYPASSTRAY Setup
*OpenUIEFI *USEBYPASSTRAY/Enable Bypass Tray  as default    : PickOne
*OrderDependency: 20.0 AnySetup *USEBYPASSTRAY
*DefaultUSEBYPASSTRAY: NO
*USEBYPASSTRAY YES/Yes: ""
*USEBYPASSTRAY NO/No: ""
*CloseUIEFI: *USEBYPASSTRAY

*%EFIFlags *DefChkHPBlack Setup
*OpenUIEFI *DefChkHPBlack/Detect Black as     default    : PickOne
*OrderDependency: 21.0 AnySetup *DefChkHPBlack
*DefaultDefChkHPBlack: YES
*DefChkHPBlack YES/Yes: ""
*DefChkHPBlack NO/No: ""
*CloseUIEFI: *DefChkHPBlack

*%EFIFlags *MediaType Spooler|Command|Column|Rerip
*%EFIGroup *MediaType  Media/Media
*OpenUI *MediaType/Media Type    :PickOne
*OrderDependency: 50.0 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper: " userdict /setcolorbundle known
	{ << /MediaType /Plain >> setcolorbundle 1 XJXsetmediatype } if"
*End
*MediaType Thick/Thick Paper:  " userdict /setcolorbundle known
	{ << /MediaType /Thick >> setcolorbundle 2 XJXsetmediatype } if"
*End
*MediaType Transparent/Transparency: " userdict /setcolorbundle known
	{ << /MediaType /Transparent >> setcolorbundle 3 XJXsetmediatype } if"
*End
*MediaType Interleaved/Interleaved: " userdict /setcolorbundle known
	{ << /MediaType /Interleaved >> setcolorbundle 4 XJXsetmediatype  } if"
*End
*MediaType Film/Opaque Film:	" userdict /setcolorbundle known
	{ << /MediaType /Film >> setcolorbundle 5 XJXsetmediatype } if"
*End
*?MediaType: " userdict /setcolorbundle known { 
	currentcolorbundle /MediaType get =string cvs == } if"
*End
*CloseUI: *MediaType

*%EFIFlags *EFColorRendDict Spooler|Command|Rerip
*%EFIGroup *EFColorRendDict Color/Color
*OpenUI *EFColorRendDict/Rendering Style    :PickOne
*OrderDependency: 60.0 AnySetup *EFColorRendDict
*DefaultEFColorRendDict: Photographic
*EFColorRendDict Photographic/Photographic: " userdict /setcolorbundle known
	{ << /ColorRendering /Photographic >> setcolorbundle }
  	{ /DefaultColorRendering 
	   currentpagedevice /DeviceRenderingInfo 
	   		get /ValuesPerColorComponent get 2 eq 
   	   { /HTPreferredColorRendering } { /PreferredColorRendering } ifelse
   		/ColorRendering findresource
    	 /ColorRendering defineresource setcolorrendering
	} ifelse "
*End
*EFColorRendDict Presentation/Presentation: " userdict /setcolorbundle known
	{ << /ColorRendering /Presentation >> setcolorbundle }
	{ /DefaultColorRendering 
	   currentpagedevice /DeviceRenderingInfo 
	   		get /ValuesPerColorComponent get 2 eq 
   	   { /HTBusinessColorRendering } { /BusinessColorRendering } ifelse
   	    /ColorRendering findresource
    	 /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*EFColorRendDict Monitor/Monitor: " userdict /setcolorbundle known
	{ << /ColorRendering /Monitor >> setcolorbundle }
	{ /DefaultColorRendering 
	   currentpagedevice /DeviceRenderingInfo 
	   		get /ValuesPerColorComponent get 2 eq 
   	   { /HTMonitorColorRendering } { /MonitorColorRendering } ifelse
   	    /ColorRendering findresource
    	 /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*EFColorRendDict Solid/Solid Color: " userdict /setcolorbundle known
	{ << /ColorRendering /Solid >> setcolorbundle }
	{ /DefaultColorRendering 
	   currentpagedevice /DeviceRenderingInfo 
	   		get /ValuesPerColorComponent get 2 eq 
   	   { /HTColorimetricColorRendering } { /ColorimetricColorRendering } ifelse
   	    /ColorRendering findresource
    	 /ColorRendering defineresource setcolorrendering
    } ifelse "
*End
*?EFColorRendDict: " userdict /setcolorbundle known
	{ currentcolorbundle /ColorRendering get =string cvs == } if "
*End
*EFColorRendDict None/None: ""
*CloseUI: *EFColorRendDict


*%EFIFlags *EFBrightness Spooler|Command|Rerip
*%EFIGroup *EFBrightness  Color/Color
*OpenUI *EFBrightness/Brightness    :PickOne
*OrderDependency: 55.0 AnySetup *EFBrightness
*DefaultEFBrightness: 00.00
*EFBrightness +0.24/85%  Lightest: " {dup 180 mul sin 0.15 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.16/90%  Lighter: 	" {dup 180  mul sin 0.10 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness +0.08/95%  Light: 	" {dup 180  mul sin 0.05 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness 00.00/100% Normal: 	" {} settransfer "
*EFBrightness -0.08/105% Dark: 	" {dup 180  mul sin -0.05 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.16/110% Darker: 	" {dup 180  mul sin -0.10 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*EFBrightness -0.24/115% Darkest:	" {dup 180  mul sin -0.15 mul add } bind
	userdict /ColorAdjust known 
	{  dup dup dup ColorAdjust /coloradjust get exec }
	{  { /Dummy1 exec /Dummy2 exec } bind dup 2 currenttransfer put
	   dup 0 4 -1 roll put settransfer } ifelse "
*End
*CloseUI: *EFBrightness


*%EFIFlags *EFCalibrationFly Spooler|Command|Rerip
*%EFIGroup *EFCalibrationFly Color/Color
*OpenUI *EFCalibrationFly/Calibration/Simulation    :PickOne
*OrderDependency: 60.0 AnySetup *EFCalibrationFly
*DefaultEFCalibrationFly: CurrentGoal
*EFCalibrationFly CurrentGoal/Printer's Default : ""
*%DefaultEFCalibrationFly: DocuColor40
*EFCalibrationFly DocuColor40/DocuColor 40: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.Copier) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly SWOP/SWOP-Coated: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.SWOP-Coated) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly DIC/DIC: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.DIC) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly Euroscale/Euroscale: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.Euroscale) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly Linear/Linear: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.Linear) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly Custom1/Custom-1: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.Custom-1) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly Custom2/Custom-2: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.Custom-2) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*EFCalibrationFly None/None: " userdict /setcolorbundle known
    { 
       userdict /setcalibrationtype known {
          (.None) userdict /setcalibrationtype get exec
          << /Calibration /Calib >> setcolorbundle 
       } if
     } if"
*End
*CloseUI: *EFCalibrationFly


*%EFIFlags *EFRaster Command|Column|Rerip
*%EFIGroup *EFRaster  Job/Job
*OpenUI *EFRaster/Save Fast Reprint    : Boolean
*OrderDependency: 65.0 AnySetup *EFRaster
*DefaultEFRaster: False
*EFRaster True/On: " userdict /XJXsetraster known
	{ 1 XJXsetraster }
	{ (printerinfo StoreRaster 1) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*EFRaster False/Off: " userdict /XJXsetraster known
	{ 0 XJXsetraster }
	{ (printerinfo StoreRaster 0) =string
		FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse  "
*End
*CloseUI: *EFRaster


*%EFIFlags *EFHPBlack Spooler|Command|Rerip
*%EFIGroup *EFRaster  Job/Job
*OpenUI *EFHPBlack/Black Detection    : Boolean
*OrderDependency: 40 AnySetup *EFHPBlack
*DefaultEFHPBlack: True
*EFHPBlack False/Off: " userdict /XJXsethpblack known
              { 0 XJXsethpblack }
              { (printerinfo CheckHPBlack 0) =string
                FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*EFHPBlack True/On: " userdict /XJXsethpblack known
              { 1 XJXsethpblack }
              { (printerinfo CheckHPBlack 1) =string
                FieryXJdict /ExtCmdGetExec get exec { pop } if } ifelse "
*End
*CloseUI: *EFHPBlack


*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% PPD pages begins

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.

*%EFIFlags *PageSize Command|Column|Rerip
*%EFIGroup *PageSize Media/Media
*OpenUI *PageSize/Page Size    :PickOne
*OrderDependency: 90.0 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter: " userdict /setcolorbundle known
	{ << /PageSize /Letter >> setcolorbundle }
	{ << /PageSize [612 792] /MediaType null 
			/InputAttributes << 0 << /PageSize [612 792] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageSize A4/A4: " userdict /setcolorbundle known
	{ << /PageSize /A4 >> setcolorbundle }
	{ << /PageSize [595 842] /MediaType null 
			/InputAttributes << 0 << /PageSize [595 842] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageSize A6/A6: " userdict /setcolorbundle known
	{ << /PageSize /A6 >> setcolorbundle } { a6 } ifelse "
*End
*PageSize SEFISOB5/SEF B5: " userdict /setcolorbundle known
	{ << /PageSize /SEFB5 >> setcolorbundle }
	{ << /PageSize [499 709] /MediaType (ShortEdgeFeed)
			/InputAttributes << 0 << /PageSize [499 709] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageSize ISOB5/B5: " userdict /setcolorbundle known
	{ << /PageSize /B5 >> setcolorbundle }
	{ << /PageSize [499 709] /MediaType null
			/InputAttributes << 0 << /PageSize [499 709] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageSize SEF8x10/SEF 8x10: " userdict /setcolorbundle known
	{ << /PageSize /SEF8x10 >> setcolorbundle }
	{ << /PageSize [576 720] /MediaType (ShortEdgeFeed)
			/InputAttributes << 0 << /PageSize [576 720] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageSize 8x10/8x10: " userdict /setcolorbundle known
	{ << /PageSize /8x10 >> setcolorbundle }
	{ << /PageSize [576 720] /MediaType null 
			/InputAttributes << 0 << /PageSize [576 720] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageSize SEFA4/SEF A4: " userdict /setcolorbundle known 
	{ << /PageSize /SEFA4 >> setcolorbundle }
	{ << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
			/InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageSize SEFLet/SEF Letter: " userdict /setcolorbundle known
	{ << /PageSize /SEFLetter >> setcolorbundle }
	{ << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
			/InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageSize Legal13/Legal 13: " userdict /setcolorbundle known
	{ << /PageSize /Legal13 >> setcolorbundle } { legal13 } ifelse "
*End
*PageSize Legal/Legal: " userdict /setcolorbundle known
	{ << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageSize 9x11/9x11: " userdict /setcolorbundle known
	{ << /PageSize /9x11 >> setcolorbundle } { 9x11 } ifelse "
*End
*PageSize 9x12/9x12: " userdict /setcolorbundle known
	{ << /PageSize /9x12 >> setcolorbundle } { 9x12 } ifelse "
*End
*PageSize Docupac/Docupac: " userdict /setcolorbundle known
	{ << /PageSize /Docupac >> setcolorbundle } { Docupac } ifelse "
*End
*PageSize ISOB4/B4: " userdict /setcolorbundle known
	{ << /PageSize /B4 >> setcolorbundle } { b4 } ifelse "
*End
*PageSize Tabloid/11x17: " userdict /setcolorbundle known
	{ << /PageSize /11x17 >> setcolorbundle } { 11x17 } ifelse "
*End
*PageSize A3/A3: " userdict /setcolorbundle known
	{ << /PageSize /A3 >> setcolorbundle } { a3 } ifelse "
*End
*PageSize TabloidExtra/12x18: " userdict /setcolorbundle known
    { << /PageSize /12x18 >> setcolorbundle } { 12x18 } ifelse "
*End
*PageSize 216x330/216x330 mm: " userdict /setcolorbundle known
	{ << /PageSize /216x330mm >> setcolorbundle } { legal13 } ifelse "
*End
*PageSize 216x356/216x356 mm: " userdict /setcolorbundle known
	{ << /PageSize /216x356mm >> setcolorbundle } { legal } ifelse "
*End
*?PageSize: "  
	save currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if (Unknown) 
   20 dict
   dup [297 420] (A6) put
   dup [499 709] (SEFISOB5) put
   dup [499 708] (ISOB5) put
   dup [576 720] (SEF8x10) put
   dup [576 721] (8x10) put
   dup [595 843] (SEFA4) put
   dup [595 842] (A4) put
   dup [612 793] (SEFLet) put
   dup [612 792] (Letter) put
   dup [612 936] (Legal13) put
   dup [612 1008] (Legal) put
   dup [648 792] (9x11) put
   dup [648 864] (9x12) put
   dup [684 842] (Docupac) put
   dup [709 1001] (ISOB4) put
   dup [792 1224] (Tabloid) put
   dup [842 1191] (A3) put
   dup [864 1296] (TabloidExtra) put
   dup [612 937] (216x330) put
   dup [612 1009] (216x356) put
   { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
      { exch pop exit } { pop } ifelse
   } bind forall = flush pop pop
   restore"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*%EFIFlags *PageRegion
*OpenUI *PageRegion    :PickOne
*OrderDependency: 95.0 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter: " userdict /setcolorbundle known
	{ << /PageSize /Letter >> setcolorbundle }
	{ << /PageSize [612 792] /MediaType null 
			/InputAttributes << 0 << /PageSize [612 792] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion A4/A4: " userdict /setcolorbundle known
	{ << /PageSize /A4 >> setcolorbundle }
	{ << /PageSize [595 842] /MediaType null 
			/InputAttributes << 0 << /PageSize [595 842] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion A6/A6: " userdict /setcolorbundle known
	{ << /PageSize /A6 >> setcolorbundle } { a6 } ifelse "
*End
*PageRegion SEFISOB5/SEF B5: " userdict /setcolorbundle known
	{ << /PageSize /SEFB5 >> setcolorbundle }
	{ << /PageSize [499 709] /MediaType (ShortEdgeFeed)
			/InputAttributes << 0 << /PageSize [499 709] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion ISOB5/B5: " userdict /setcolorbundle known
	{ << /PageSize /B5 >> setcolorbundle }
	{ << /PageSize [499 709] /MediaType null
			/InputAttributes << 0 << /PageSize [499 709] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEF8x10/SEF 8x10: " userdict /setcolorbundle known
	{ << /PageSize /SEF8x10 >> setcolorbundle }
	{ << /PageSize [576 720] /MediaType (ShortEdgeFeed)
			/InputAttributes << 0 << /PageSize [576 720] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion 8x10/8x10: " userdict /setcolorbundle known
	{ << /PageSize /8x10 >> setcolorbundle }
	{ << /PageSize [576 720] /MediaType null 
			/InputAttributes << 0 << /PageSize [576 720] /MediaType null >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEFA4/SEF A4: " userdict /setcolorbundle known 
	{ << /PageSize /SEFA4 >> setcolorbundle }
	{ << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
			/InputAttributes << 0 << /PageSize [595 842] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEFLet/SEF Letter: " userdict /setcolorbundle known
	{ << /PageSize /SEFLetter >> setcolorbundle }
	{ << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
			/InputAttributes << 0 << /PageSize [612 792] /MediaType (ShortEdgeFeed) >> >> >> setpagedevice
	} ifelse "
*End
*PageRegion Legal13/Legal 13: " userdict /setcolorbundle known
	{ << /PageSize /Legal13 >> setcolorbundle } { legal13 } ifelse "
*End
*PageRegion Legal/Legal: " userdict /setcolorbundle known
	{ << /PageSize /Legal >> setcolorbundle } { legal } ifelse "
*End
*PageRegion 9x11/9x11: " userdict /setcolorbundle known
	{ << /PageSize /9x11 >> setcolorbundle } { 9x11 } ifelse "
*End
*PageRegion 9x12/9x12: " userdict /setcolorbundle known
	{ << /PageSize /9x12 >> setcolorbundle } { 9x12 } ifelse "
*End
*PageRegion Docupac/Docupac: " userdict /setcolorbundle known
	{ << /PageSize /Docupac >> setcolorbundle } { Docupac } ifelse "
*End
*PageRegion ISOB4/B4: " userdict /setcolorbundle known
	{ << /PageSize /B4 >> setcolorbundle } { b4 } ifelse "
*End
*PageRegion Tabloid/11x17: " userdict /setcolorbundle known
	{ << /PageSize /11x17 >> setcolorbundle } { 11x17 } ifelse "
*End
*PageRegion A3/A3: " userdict /setcolorbundle known
	{ << /PageSize /A3 >> setcolorbundle } { a3 } ifelse "
*End
*PageRegion TabloidExtra/12x18: " userdict /setcolorbundle known
    { << /PageSize /12x18 >> setcolorbundle } { 12x18 } ifelse "
*End
*PageRegion 216x330/216x330 mm: " userdict /setcolorbundle known
	{ << /PageSize /216x330mm >> setcolorbundle } { legal13 } ifelse "
*End
*PageRegion 216x356/216x356 mm: " userdict /setcolorbundle known
	{ << /PageSize /216x356mm >> setcolorbundle } { legal } ifelse "
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea Letter/Letter: "8 9 604 783"
*ImageableArea A4/A4: "8 9 587 833"
*ImageableArea A6/A6: "9 8 288 412"
*ImageableArea SEFISOB5/SEF B5: "9 8 490 701"
*ImageableArea ISOB5/B5: "8 9 491 700"
*ImageableArea SEF8x10/SEF 8x10: "9 8 567 712"
*ImageableArea 8x10/8x10: "8 9 568 711"
*ImageableArea SEFA4/SEF A4: "9 8 586 834"
*ImageableArea SEFLet/SEF Letter: "9 8 603 784"
*ImageableArea Legal13/Legal 13:  "9 8 603 928"
*ImageableArea Legal/Legal: "9 8 603 1000"
*ImageableArea 9x11/9x11: "9 8 639 784"
*ImageableArea 9x12/9x12: "9 8 639 856"
*ImageableArea Docupac/Docupac: "9 8 675 834"
*ImageableArea ISOB4/B4: "9 8 700 993"
*ImageableArea Tabloid/11x17: "9 8 783 1216"
*ImageableArea A3/A3: "9 8 833 1183"
*ImageableArea TabloidExtra/12x18: "9 8 855 1288"
*ImageableArea 216x330/216x330 mm:  "9 8 603 929"
*ImageableArea 216x356/216x356 mm:  "9 8 603 1001"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter/Letter: "612 792"
*PaperDimension A4/A4: "595 842"
*PaperDimension A6/A6: "297 420"
*PaperDimension SEFISOB5/SEF B5: "499 709"
*PaperDimension ISOB5/B5: "499 708"
*PaperDimension SEF8x10/SEF 8x10: "576 720"
*PaperDimension 8x10/8x10: "576 721"
*PaperDimension SEFA4/SEF A4: "595 843"
*PaperDimension SEFLet/SEF Letter: "612 793"
*PaperDimension Legal13/Legal 13: "612 936"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension 9x11/9x11: "648 792"
*PaperDimension 9x12/9x12: "648 864"
*PaperDimension Docupac/Docupac: "684 842"
*PaperDimension ISOB4/B4: "709 1001"
*PaperDimension Tabloid/11x17: "792 1224"
*PaperDimension A3/A3: "842 1191"
*PaperDimension TabloidExtra/12x18: "864 1296"
*PaperDimension 216x330/216x330 mm: "612 937"
*PaperDimension 216x356/216x356 mm: "612 1009"


*% PPD pages ends

*RequiresPageRegion All: True
*%EFIFlags *InputSlot Command|Spooler|Column
*%EFIGroup *InputSlot  Media/Media
*OpenUI *InputSlot/Paper Source    : PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: AutoSelect
*InputSlot AutoSelect/Auto Select: "  (printerinfo trayselect -1) =string 
		FieryXJdict /ExtCmdGetExecget exec {pop} if "
*End
*InputSlot Tray1/Tray 1: " (printerinfo trayselect 1) =string 
		FieryXJdict /ExtCmdGetExecget exec {pop} if "
*End
*InputSlot Tray2/Tray 2: " (printerinfo trayselect 2) =string 
		FieryXJdict /ExtCmdGetExecget exec {pop} if "
*End
*InputSlot Tray3/Tray 3: " (printerinfo trayselect 3) =string 
		FieryXJdict /ExtCmdGetExecget exec {pop} if "
*End
*InputSlot TrayManual/Bypass Tray: " (printerinfo trayselect 4) =string 
		FieryXJdict /ExtCmdGetExecget exec {pop} if "
*End
*CloseUI: *InputSlot

*% Font Information =========================
*DefaultFont: Courier
*Font AvantGarde-Book: Standard "(001.002)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(001.002)" Standard Disk
*Font AvantGarde-Demi: Standard "(001.003)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(001.003)" Standard Disk
*Font Bookman-Demi: Standard "(001.001)" Standard Disk
*Font Bookman-DemiItalic: Standard "(001.001)" Standard Disk
*Font Bookman-Light: Standard "(001.001)" Standard Disk
*Font Bookman-LightItalic: Standard "(001.001)" Standard Disk
*Font Courier: Standard "(002.002)" Standard Disk
*Font Courier-Bold: Standard "(002.002)" Standard Disk
*Font Courier-BoldOblique: Standard "(002.002)" Standard Disk
*Font Courier-Oblique: Standard "(002.002)" Standard Disk
*Font Helvetica: Standard "(001.006)" Standard Disk
*Font Helvetica-Bold: Standard "(001.007)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(001.007)" Standard Disk
*Font Helvetica-Condensed: Standard "(001.001)" Standard Disk
*Font Helvetica-Condensed-Bold: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-BoldObl: Standard "(001.002)" Standard Disk
*Font Helvetica-Condensed-Oblique: Standard "(001.001)" Standard Disk
*Font Helvetica-Oblique: Standard "(001.006)" Standard Disk
*Font Helvetica-Narrow: Standard "(001.001)" Standard Disk
*Font Helvetica-Narrow-Bold: Standard "(001.002)" Standard Disk
*Font Helvetica-Narrow-BoldObl: Standard "(001.002)" Standard Disk
*Font Helvetica-Narrow-Oblique: Standard "(001.001)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(001.008)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(001.006)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(001.005)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(001.006)" Standard Disk
*Font Palatino-Bold: Standard "(001.005)" Standard Disk
*Font Palatino-BoldItalic: Standard "(001.005)" Standard Disk
*Font Palatino-Italic: Standard "(001.005)" Standard Disk
*Font Palatino-Roman: Standard "(001.005)" Standard Disk
*Font Symbol: Special "(001.003)" Special Disk
*Font Times-Bold: Standard "(001.007)" Standard Disk
*Font Times-BoldItalic: Standard "(001.009)" Standard Disk
*Font Times-Italic: Standard "(001.007)" Standard Disk
*Font Times-Roman: Standard "(001.007)" Standard Disk
*Font ZapfChancery-MediumItalic: Standard "(001.003)" Standard Disk
*Font ZapfDingbats: Special "(001.002)" Special Disk
*?FontQuery: "
   save  
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
       /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
      } { exit } ifelse
   } bind loop
   (*) = flush
   restore"
*End

*?FontList: "
   save (*) {cvn ==} 128 string /Font resourceforall
   (*) = flush restore"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "scanning"

*Status: "PrinterError: Ok"
*Status: "PrinterError: Reset the copier and fiery"
*Status: "PrinterError: Copier is busy (Copier mode)"
*Status: "PrinterError: Copier is busy (AGOC)"
*Status: "PrinterError: Copier is busy (FUSER)"
*Status: "PrinterError: Copier is busy (ROS)"
*Status: "PrinterError: Copier is busy (DRUM HEATER)"
*Status: "PrinterError: Copier is busy (MC)"
*Status: "PrinterError: Paper jam"
*Status: "PrinterError: Copier's interlock is open"
*Status: "PrinterError: Out of toner"
*Status: "PrinterError: Fuser web empty"
*Status: "PrinterError: Waste toner container is full"
*Status: "PrinterError: Copier's accessary is disabled"

*Status: "PrinterError: Load A3 paper in tray"
*Status: "PrinterError: Load A4 paper in tray"
*Status: "PrinterError: Load A4 SEF paper in tray"
*Status: "PrinterError: Load 11x17 paper in tray"
*Status: "PrinterError: Load Letter paper in tray"
*Status: "PrinterError: Load Letter SEF paper in tray"
*Status: "PrinterError: Load Legal paper in tray"
*Status: "PrinterError: Load 8x10 paper in tray"
*Status: "PrinterError: Load Legal 13 paper in tray"
*Status: "PrinterError: Load 9x12 paper in tray"

*Status: "PrinterError: An unknown copier error occurred"
*Status: "PrinterError: Copier is offline"

*Status: "PrinterError: Load A3 paper in bypass tray"
*Status: "PrinterError: Load A4 paper bypass tray"
*Status: "PrinterError: Load A4 SEF paper bypass tray"
*Status: "PrinterError: Load 11x17 paper bypass tray"
*Status: "PrinterError: Load Letter paper bypass tray"
*Status: "PrinterError: Load Letter SEF paper bypass tray"
*Status: "PrinterError: Load Legal paper bypass tray"
*Status: "PrinterError: Load 8x10 paper bypass tray"
*Status: "PrinterError: Load Legal 13 paper bypass tray"
*Status: "PrinterError: Load 9x12 paper bypass tray"

*Status: "PrinterError: Copier is busy (UI)"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "EtherTalk"
*Source: "Parallel"
*Source: "TCP/IP"
*Source: "Novell IPX"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*PrinterError: "Ok"
*PrinterError: "Reset the copier and fiery"
*PrinterError: "Copier is busy (Copier mode)"
*PrinterError: "Copier is busy (AGOC)"
*PrinterError: "Copier is busy (FUSER)"
*PrinterError: "Copier is busy (ROS)"
*PrinterError: "Copier is busy (DRUM HEATER)"
*PrinterError: "Copier is busy (MC)"
*PrinterError: "Paper jam"
*PrinterError: "Copier's interlock is open"
*PrinterError: "Out of toner"
*PrinterError: "Fuser web empty"
*PrinterError: "Waste toner container is full"
*PrinterError: "Copier's accessary is disabled"

*PrinterError: "Load A3 paper in tray"
*PrinterError: "Load A4 paper in tray"
*PrinterError: "Load A4 SEF paper in tray"
*PrinterError: "Load 11x17 paper in tray"
*PrinterError: "Load Letter paper in tray"
*PrinterError: "Load Letter SEF paper in tray"
*PrinterError: "Load Legal paper in tray"
*PrinterError: "Load 8x10 paper in tray"
*PrinterError: "Load Legal 13 paper in tray"
*PrinterError: "Load 9x12 paper in tray"

*PrinterError: "An unknown copier error occurred"
*PrinterError: "Copier is offline"

*PrinterError: "Load A3 paper in bypass tray"
*PrinterError: "Load A4 paper bypass tray"
*PrinterError: "Load A4 SEF paper bypass tray"
*PrinterError: "Load 11x17 paper bypass tray"
*PrinterError: "Load Letter paper bypass tray"
*PrinterError: "Load Letter SEF paper bypass tray"
*PrinterError: "Load Legal paper bypass tray"
*PrinterError: "Load 8x10 paper bypass tray"
*PrinterError: "Load Legal 13 paper bypass tray"
*PrinterError: "Load 9x12 paper bypass tray"

*PrinterError: "Copier is busy (UI)"


*% Color Separation Information ====================


*% Custom Inks for Fiery Logo
*InkName: P300FieryBlue/Fiery Blue
*InkName: P199FieryRed/Fiery Red
*InkName: PblackFieryBlack/Fiery Black
*CustomCMYK P300FieryBlue: ".9 .9 .0 .0"
*CustomCMYK P199FieryRed: ".0 .9 .9 .0"
*CustomCMYK PblackFieryBlack: ".2 .1 .1 .9"

*DefaultColorSep: Black.100lpi.400dpi

*% -------Halftone Graphics Mode (Hi-Res mode)
*ColorSepScreenAngle Cyan.100lpi.400dpi: "0"
*ColorSepScreenAngle Magenta.100lpi.400dpi: "0"
*ColorSepScreenAngle Yellow.100lpi.400dpi: "0"
*ColorSepScreenAngle Black.100lpi.400dpi: "0"
*ColorSepScreenFreq Cyan.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Magenta.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Yellow.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Black.100lpi.400dpi: "50.0"
*ColorSepScreenProc Cyan.100lpi.400dpi: "{6 5 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}" 
*End

*ColorSepScreenProc Magenta.100lpi.400dpi: "{4 7 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Yellow.100lpi.400dpi: "{5 2
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End
*ColorSepScreenProc Black.100lpi.400dpi: "{2 4 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End

*% PPD Last Modified 3/20/97
*% End of PPD file for Fiery XJ DocuColor
