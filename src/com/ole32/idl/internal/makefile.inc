!ifndef MIDL
MIDL = midl.exe
!endif

# Paths
PUBLIC_IDL=..\..\public\

# Flags

MIDL_FLAGS= \
 $(MIDL_OPTIMIZATION) \
 -Zp8 \
 $(INCPATH0) \
 -oldnames \
 -dlldata nul \
 -proxy nul \
 -char unsigned \
 -ms_ext -c_ext \
 -DMIDL_PASS \
 $(C_DEFINES) \
 $(TARGET_DEFINES) \
 -cpp_cmd $(TARGET_CPP) \

MES_MIDL_FLAGS= \
 -Oicf -no_format_opt -error all \
 -Zp8 -robust \
 $(INCPATH0) \
 -oldnames \
 -dlldata nul \
 -proxy nul \
 -char unsigned \
 -ms_ext -c_ext \
 -DMIDL_PASS \
 $(C_DEFINES) \
 $(TARGET_DEFINES) \
 -cpp_cmd $(TARGET_CPP)



SSWITCH=-prefix sstub _
CSWITCH=-prefix cstub _

# Targets

# Dual (Raw/Object) local RPC interface for forwarding remote activation calls
# in DCOM95 -- RPCSS is the server

# first MIDL invocation makes the object header proxy and stub
# second MIDL invocation makes the client and the '_' prefixed server
# The client/server stubs for the object version are generated by mega.idl

$(O)\forward.h : ..\forward.idl $(SDK_INC_PATH)\obase.idl ..\forward.acf
     $(MIDL) $(MIDL_FLAGS) -header $(O)\forward.h \
        -iid nul -client none -server none ..\forward.idl

$(O)\rawforward.h : ..\forward.idl $(SDK_INC_PATH)\obase.idl ..\forward.acf
     $(MIDL) $(MIDL_FLAGS) -out $(O) -header rawforward.h \
        $(SSWITCH) -D RAW ..\forward.idl

# local resolver interface for DCOM95 (raw RPC only)

$(O)\resolve.h : ..\resolve.idl $(SDK_INC_PATH)\obase.idl ..\resolve.acf
     $(MIDL) $(SSWITCH) $(MIDL_FLAGS) -out $(O) -header resolve.h ..\resolve.idl



# only a header file generated
#$(O)\iface.h:  ..\iface.idl
#     $(MIDL) $(MIDL_FLAGS) -header $@ ..\iface.idl

# Local Resolver Interface for NT

$(O)\lclor.h:  ..\lclor.idl $(SDK_INC_PATH)\obase.idl ..\lclor.acf
     $(MIDL) $(SSWITCH) $(MIDL_FLAGS) -out $(O) -header lclor.h ..\lclor.idl

$(O)\orcb.h:  ..\orcb.idl $(SDK_INC_PATH)\obase.idl ..\orcb.acf
     $(MIDL) $(SSWITCH) $(MIDL_FLAGS) -out $(O) -header orcb.h ..\orcb.idl

# first MIDL invocation makes the object header
# the object proxy and stub are made with mega.idl
# second MIDL invocation makes the server and the '_' prefixed client
$(O)\odeth.h : ..\odeth.idl ..\..\private\iface.idl ..\odeth.acf \
              $(SDK_INC_PATH)\obase.idl $(PUBLIC_IDL)\remunk.idl ..\comhndl.h
     $(MIDL) $(MIDL_FLAGS) -out $(O) -header odeth.h \
        -client none -server none ..\odeth.idl

$(O)\rawodeth.h : ..\odeth.idl ..\..\private\iface.idl ..\odeth.acf \
                 $(SDK_INC_PATH)\obase.idl $(PUBLIC_IDL)\remunk.idl ..\comhndl.h
     $(MIDL) $(MIDL_FLAGS) -out $(O) -header rawodeth.h \
        $(SSWITCH) -D RAW ..\odeth.idl

# only a header file generated
$(O)\irot.h:  ..\irot.idl ..\irot.acf
     $(MIDL) $(MIDL_FLAGS) \
        -cstub $(O)\irot_c.c \
        -sstub $(O)\irot_s.c \
        -header $@ ..\irot.idl

# Only generate a header.  The object proxy and stub are made with
# mega.idl
$(O)\getif.h: ..\getif.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\getif_i.c \
        ..\getif.idl


# Only generate a header.  The object proxy and stub are made with
# mega.idl
!ifdef SERVER_HANDLER
$(O)\srvhdl.h: ..\srvhdl.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\srvhdl_i.c \
        ..\srvhdl.idl
!endif


# Only generate a header.  The object proxy and stub are made with
# mega.idl
$(O)\host.h: ..\host.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\host_i.c \
        ..\host.idl


# Only generate a header.
$(O)\multqi.h: ..\multqi.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        ..\multqi.idl

# Only generate a header.  The object proxy and stub are made with
# mega.idl
$(O)\apart.h: ..\apart.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\apart_i.c \
        ..\apart.idl


# Only generate a header.  The object proxy and stub are made with
# mega.idl  --  this should be before actprops.idl
$(O)\custmact.h: ..\custmact.idl  ..\custmact.acf
     $(MIDL) $(MES_MIDL_FLAGS) \
        -cstub $(O)\custmact_c.c \
        -sstub $(O)\custmact_s.c \
        -header $@ \
        ..\custmact.idl


# Only generate a header.  The object proxy and stub are made with
# mega.idl
$(O)\serializ.h: ..\serializ.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\serializ_i.c \
        ..\serializ.idl

$(O)\buffer.h:  ..\buffer.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\buffer_i.c \
        ..\buffer.idl

# first MIDL invocation makes the object header
# the object proxy and stub are made with mega.idl
# second MIDL invocation makes the server and the '_' prefixed client
$(O)\objsrv.h: ..\objsrv.idl ..\objsrv.acf
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -out $(O) -header objsrv.h \
        ..\objsrv.idl

$(O)\rwobjsrv.h: ..\objsrv.idl ..\objsrv.acf
     $(MIDL) $(MIDL_FLAGS) \
        -cstub $(O)\objsrv_c.c \
        -server none -header $@ \
        -D RAW \
        ..\objsrv.idl

# COM+ surrogate protocol interface
$(O)\srgtprot.h: ..\srgtprot.idl ..\srgtprot.acf
     $(MIDL) $(MIDL_FLAGS) \
        -cstub $(O)\srgtprot_c.c \
        -sstub $(O)\srgtprot_s.c \
        -header $@\
        ..\srgtprot.idl

# first MIDL invocation makes the server and the '_' prefixed client
# second MIDL invocation makes proxy for ole32.dll
$(O)\scm.h: ..\scm.idl ..\scm.acf
     $(MIDL) $(MIDL_FLAGS) \
        $(CSWITCH) \
        -cstub $(O)\scm_z.c \
        -sstub $(O)\scm_s.c \
        -header $@\
        ..\scm.idl

     $(MIDL) $(MIDL_FLAGS) \
        -cstub $(O)\scm_c.c \
        -server none -header $@ \
        ..\scm.idl

# first MIDL invocation makes the object header
# the object proxy and stub are made with mega.idl
# second MIDL invocation makes the server
$(O)\dscm.h: ..\dscm.idl
     $(MIDL) $(MIDL_FLAGS) \
        -client none -server none -header $@ \
        -iid $(O)\dscm_i.c \
        ..\dscm.idl

$(O)\rawdscm.h: ..\dscm.idl
     $(MIDL) $(MIDL_FLAGS) \
        -cstub ..\..\..\com\dcomrem\$(DEST_TREE)\dscm_c.c \
        -sstub $(O)\dscm_s.c \
        -header $@ \
        -D RAW \
        ..\dscm.idl

allidl:   $(O)\lclor.h $(O)\odeth.h $(O)\rawodeth.h $(O)\orcb.h \
          $(O)\irot.h $(O)\getif.h $(O)\host.h $(O)\objsrv.h $(O)\rwobjsrv.h  \
          $(O)\scm.h $(O)\apart.h $(O)\multqi.h $(O)\forward.h \
	      $(O)\rawforward.h $(O)\resolve.h $(O)\custmact.h $(O)\serializ.h \
          $(O)\buffer.h $(O)\srgtprot.h
	
clean:
          -erase $(O)\*.h      >NUL 2>NUL

