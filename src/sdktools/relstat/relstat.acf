// Copyright (C) 1995  Microsoft Corporation.  All Rights Reserved.
//
//  MODULE:   relstat.acf
//
//  PURPOSE:  .ACF file for relstat.idl.  This controls the
//            aspects of the interface which do not affect
//            the wire. (error handling, memory allocation, etc)
//
//

#ifdef SERVER

//
// On the server side of your application using the fast RpcSmAllocate
// is recommended in server's which do many allocations.
// Although it may be used on the client, this requires more work
// and has little performance impact.
//
#define ENABLE_ALLOC ,enable_allocate
#else
#define ENABLE_ALLOC /* client */
#endif

[strict_context_handle]

interface RelstatRPCService
{

    // The [comm_status] and [fault_status] attributes cause the stubs
    // to return any errors in an error_status_t parameter or return
    // value.  Otherwise, any communication errors will get raised as
    // an exception.  This has no performance affect, but it keeps the
    // client code cleaner.
   
 
    [comm_status, fault_status] RelStatProcessInfo();
    [comm_status, fault_status] RelStatPoolTagInfo();
    [comm_status, fault_status] RelStatBuildNumber();
    [comm_status, fault_status] RelStatTickCount();
}

