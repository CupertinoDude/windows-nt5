!ifndef CAP_BUILD
CAP_BUILD=0
!endif

SYNCHRONIZE_DRAIN=1
TARGETNAME=pdh
TARGETPATH=obj
TARGETTYPE=DYNLINK

INCLUDES=..\inc; \
         ..\pdhlog; \
         $(SDKTOOLS_INC_PATH)

DLLDEF=$(O)\pdh.def

PASS0_HEADERDIR=$(O)
PASS0_SOURCEDIR=$(O)
PASS0_PUBLISH=\
    {$(O)\pdhmsg.h=$(SDK_INC_PATH)\pdhmsg.h}

TARGETLIBS=\
    $(SHELL_LIB_PATH)\shlwapip.lib  \
    $(SDK_LIB_PATH)\kernel32.lib \
    $(SDK_LIB_PATH)\rpcrt4.lib \
    $(SDK_LIB_PATH)\advapi32.lib \
    $(SDK_LIB_PATH)\comdlg32.lib \
    $(SDK_LIB_PATH)\user32.lib \
    $(SDK_LIB_PATH)\ole32.lib \
    $(SDK_LIB_PATH)\gdi32.lib \
    $(SDK_LIB_PATH)\oleaut32.lib \
    $(SDK_LIB_PATH)\uuid.lib \
    $(SDK_LIB_PATH)\wbemuuid.lib \
    $(SDK_LIB_PATH)\odbc32.lib \
    $(SDK_LIB_PATH)\odbccp32.lib \
    $(SDK_LIB_PATH)\odbcbcp.lib \
    $(SDK_LIB_PATH)\Crypt32.lib

	
!if $(CAP_BUILD)
386_OPTIMIZATION=$(386_OPTIMIZATION) -Gh -Zi

TARGETLIBS=$(TARGETLIBS) \
            \IceCap\Lib\icap.lib
!endif

LINKLIBS=  \
            ..\pdhcalc\$(O)\pdhcalc.lib \
            ..\pdhlog\$(O)\pdhlog.lib \
            ..\pdhui\$(O)\pdhui.lib \
            ..\pdhwmi\$(O)\pdhwmi.lib \
            ..\pdhpla\$(O)\pdhpla.lib

SOURCES=counter.c       \
        cutils.c        \
        dllinit.c       \
        perfdata.c      \
        perfname.c      \
        perfutil.c      \
        query.c         \
        qutils.c        \
        vbfuncs.c       \
        pdhdll.rc	\
        pdhmsg.mc       \
        strings.c       \

USE_MSVCRT=1

DLLENTRY=PdhDllInitRoutine

DLLBASE=0x7A00000

NTTARGETFILES=$(O)\pdhp.lib
#
# We need to build a private advapi32 library


PASS1_PUBLISH=\
    {$(O)\pdh.lib=$(SDK_LIB_PATH)\pdh.lib} \
    {$(O)\pdhp.lib=$(SDKTOOLS_LIB_PATH)\pdhp.lib}

MISCFILES= ..\inc\pdhdefs.txt pdh.sld
