// HotfixManager.idl : IDL source for HotfixManager.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (HotfixManager.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"
	

	[
		object,
		uuid(692E94C7-A5AC-401B-A471-BCD101B456F4),
		dual,
		helpstring("IHotfixOCX Interface"),
		pointer_default(unique)
	]
	interface IHotfixOCX : IDispatch
	{
		[propputref, id(DISPID_FONT)]
		HRESULT Font([in]IFontDisp* pFont);
		[propput, id(DISPID_FONT)]
		HRESULT Font([in]IFontDisp* pFont);
		[propget, id(DISPID_FONT)]
		HRESULT Font([out, retval]IFontDisp** ppFont);
		[propget, id(1), helpstring("property Command")] HRESULT Command([out, retval] long *pVal);
		[propput, id(1), helpstring("property Command")] HRESULT Command([in] long newVal);
		[propget, id(2), helpstring("property ComputerName")] HRESULT ComputerName([out, retval] BSTR *pVal);
		[propput, id(2), helpstring("property ComputerName")] HRESULT ComputerName([in] BSTR newVal);
		[propget, id(3), helpstring("property ProductName")] HRESULT ProductName([out, retval] BSTR *pVal);
		[propput, id(3), helpstring("property ProductName")] HRESULT ProductName([in] BSTR newVal);
		[propget, id(4), helpstring("property ViewState")] HRESULT ViewState([out, retval] long *pVal);
		[propget, id(5), helpstring("property Remoted")] HRESULT Remoted([out, retval] BOOL *pVal);
		[propget, id(6), helpstring("property HaveHotfix")] HRESULT HaveHotfix([out, retval] BOOL *pVal);
		[propget, id(7), helpstring("property CurrentState")] HRESULT CurrentState([out, retval] long *pVal);
	};

[
	uuid(8384D1FB-F41D-4540-B0CA-C026DA8364BD),
	version(1.0),
	helpstring("HotfixManager 1.0 Type Library")
]
library HOTFIXMANAGERLib
{
	importlib("stdole2.tlb");

	[
		uuid(7E2DCE25-E11D-45D6-9AE7-AD522D915FFC),
		helpstring("_IHotfixOCXEvents Interface")
	]
	dispinterface _IHotfixOCXEvents
	{
		properties:
		methods:
	};

	[
		uuid(883B970F-690C-45F2-8A3A-F4283E078118),
		helpstring("HotfixOCX Class")
	]
	coclass HotfixOCX
	{
		[default] interface IHotfixOCX;
		[default, source] dispinterface _IHotfixOCXEvents;
	};
};
