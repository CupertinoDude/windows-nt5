// slbKeyStruct.h -- SchLumBeger RSA Key structure declaration
// --- Info used to import Pub/Priv key pair in Aux CSP ---
// This file is automatically generated by SLB developers.
// After generation, modify the contents to suit your purposes.

// (c) Copyright Schlumberger Technology Corp., unpublished work, created
// 1999. This computer program includes Confidential, Proprietary
// Information and is a Trade Secret of Schlumberger Technology Corp. All
// use, disclosure, and/or reproduction is prohibited unless authorized
// in writing.  All Rights Reserved.

#if !defined(SLBCSP_SLBKEYSTRUCT_H)
#define SLBCSP_SLBKEYSTRUCT_H

#define SIZE_OF_PRIVATEKEYFORNORSA_BLOB 308

static BYTE PrivateKeyForNoRSA[SIZE_OF_PRIVATEKEYFORNORSA_BLOB] = {

// BLOBHEADER(8)
0x07, 0x02, 0x00, 0x00, 0x00, 0xA4, 0x00, 0x00,

// RSAPUBKEY(12)
0x52, 0x53, 0x41, 0x32, 0x00, 0x02, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00,

// PRIVATEKEY Stuff
// modulus(64)
0xFD, 0xCB, 0x9D, 0xA3, 0xAE, 0x8A, 0x3E, 0x17,
0x1B, 0x1B, 0x75, 0xA5, 0x32, 0x24, 0x42, 0xB6,
0x4B, 0x54, 0x09, 0x21, 0x8D, 0x9B, 0x10, 0xE2,
0xD2, 0xD8, 0xF7, 0xCE, 0x11, 0x77, 0x49, 0x45,
0x18, 0x58, 0x01, 0xCD, 0xAC, 0xA6, 0xF9, 0x5F,
0xF2, 0x01, 0x0B, 0x17, 0xBE, 0xEF, 0x9C, 0xC2,
0xAC, 0x33, 0x61, 0x5B, 0x8A, 0x30, 0xFE, 0xE1,
0x2B, 0x42, 0xA3, 0xF2, 0xE1, 0x05, 0xF2, 0x9D,
// prime1(32)
0x9D, 0x9A, 0xFC, 0x67, 0x3B, 0x14, 0x30, 0x8C,
0xEE, 0xCA, 0xFD, 0xA7, 0xC2, 0xCE, 0xFF, 0xFC,
0x3C, 0x34, 0x65, 0x96, 0x0E, 0x27, 0x97, 0xF3,
0xC8, 0x24, 0x3F, 0x22, 0xCC, 0x8C, 0x78, 0xF2,
// prime2(32)
0xE1, 0x08, 0x49, 0x5F, 0x10, 0x6D, 0x79, 0xC6,
0x15, 0xAE, 0x6F, 0x9C, 0x27, 0x65, 0x2B, 0x1B,
0xE7, 0x46, 0x29, 0x84, 0xCB, 0x71, 0xF7, 0x13,
0x31, 0xFC, 0xAF, 0xD5, 0xBF, 0x1C, 0xC2, 0xA6,
// exponent1(32)
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// exponent2(32)
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
// coefficient(32)
0x69, 0x3C, 0x48, 0x6E, 0x9D, 0xAA, 0xDC, 0x06,
0x8F, 0x2D, 0x98, 0xA8, 0x52, 0x68, 0x2C, 0xD9,
0x69, 0xFA, 0x65, 0xB4, 0xFA, 0x0C, 0xBE, 0x6B,
0xF0, 0x9B, 0x6B, 0x38, 0x24, 0x8A, 0xAC, 0xB5,
// privateExponent(64)
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#endif // SLBCSP_SLBKEYSTRUCT_H
