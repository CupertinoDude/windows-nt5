!IF 0

Copyright (c) 2001  Microsoft Corporation

Module Name:

    sources.

Abstract:

    This file specifies the target component being built and the list of
    sources files needed to build that component.  Also specifies optional
    compiler switches and libraries that are unique for the component being
    built.

Author:

    CliffV 11-April-2001


!ENDIF

MAJORCOMP=authz
MINORCOMP=azroles

TARGETNAME=$(MINORCOMP)
TARGETPATH=obj
TARGETTYPE=DYNLINK
DLLDEF= $(O)\$(TARGETNAME).def
DLLENTRY= _DllMainCRTStartup

C_DEFINES= $(C_DEFINES) -DUNICODE
C_DEFINES= $(C_DEFINES) -D_AZROLESAPI_

USE_STATIC_ATL=1
USE_SYSTEM_MIDL=1
IDL_TYPE=OLE

SOURCES= \
        $(TARGETNAME).idl \
        $(TARGETNAME).rc \
        $(TARGETNAME).cxx \
        azdisp.cxx \
        stdafx_stub.cxx \
        adminmgr.cxx \
        app.cxx \
        context.cxx \
        genobj.cxx \
        group.cxx \
        junction.cxx \
        role.cxx \
        sample.cxx \
        scope.cxx \
        sid.cxx \
        task.cxx \
        op.cxx \
        persist.cxx \
        util.cxx \


INCLUDES= \
        $(O) \
        .; \


gzork= \
        $(SECURITY_INC);  \
        $(NTDS_INC);      \
        $(BASE_INC_PATH); \
        $(COM_INC_PATH);  \
        $(NET_INC_PATH);


# Strict warning, can be used to detect uninitialized vars. Picks up random
# stuff too

COMPILER_WARNINGS=$(COMPILER_WARNINGS) -FI$(SECURITY_INC)\secwarn.h
MSC_WARNING_LEVEL=/W4

PRECOMPILED_INCLUDE=pch.hxx
PRECOMPILED_OBJ=pch.obj
PRECOMPILED_PCH=pch.pch


# Use C++ Exception Handling
# USE_NATIVE_EH=1

USE_MSVCRT= 1

TARGETLIBS= \
        $(SDK_LIB_PATH)\user32.lib          \
        $(SDK_LIB_PATH)\kernel32.lib        \
        $(SDK_LIB_PATH)\ole32.lib           \
        $(SDK_LIB_PATH)\oleaut32.lib        \
        $(SDK_LIB_PATH)\uuid.lib            \
        $(SDK_LIB_PATH)\advapi32.lib        \
        $(SDK_LIB_PATH)\authz.lib           \
        $(DS_LIB_PATH)\alloca.lib           \


# DELAYLOAD=samlib.dll;ntdsapi.dll;netapi32.dll;wldap32.dll
# DLOAD_ERROR_HANDLER=kernel32

NTTARGETFILES= \
        stdafx_stub.cxx \
        $(O)\azrolesp.lib \

PASS1_PUBLISH= \
  {$(O)\$(TARGETNAME).lib=$(SDK_LIB_PATH)\$(TARGETNAME).lib} \
  {$(O)\$(TARGETNAME).h=$(SDK_INC_PATH)\$(TARGETNAME).h} \
  {$(O)\azrolesp.lib=$(PROJECT_LIB_PATH)\azrolesp.lib}
