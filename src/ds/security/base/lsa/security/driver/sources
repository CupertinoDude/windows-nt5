DSBUILD=1
TARGETNAME=ksecdd
TARGETPATH=obj
TARGETTYPE=EXPORT_DRIVER

INCLUDES=.;..;..\ntlm;..\h;     \
         $(BASE_INC_PATH);      \
         $(DRIVERS_INC_PATH);   \
         $(DS_INC_PATH)\crypto; \
         $(PROJECT_ROOT)\security\base\lsa\inc; \
         $(IFSKIT_INC_PATH)

# Strict warning, can be used to detect uninitialized vars. Picks up random
# stuff too

COMPILER_WARNINGS=$(COMPILER_WARNINGS) -FI$(SECURITY_INC)\secwarn.h

C_DEFINES=$(C_DEFINES) -DSEC_KMODE -D_NTDRIVER_

# merge RSA32K.LIB code into PAGEMSG to allow toggling paging mode for cluster
# support.
LINKER_FLAGS = $(LINKER_FLAGS) -merge:PAGER32C=PAGEMSG -merge:PAGER32R=PAGEMSG


SOURCES=                 \
         ..\credapi.cxx  \
         ..\ctxtapi.cxx  \
         ..\misc.cxx     \
         ..\util.cxx     \
         spmlpc.cxx      \
         ..\efsp.cxx     \
         ksecdd.cxx      \
         stubs.cxx       \
         support.cxx     \
         userstub.cxx    \
         extapi.cxx      \
         connmgr.cxx     \
         negapi.cxx      \
         efs.cxx         \
         context.cxx     \
         defer.c         \
         spn.cxx         \
         encmem.cxx      \
         lsamem.cxx      \
         res.rc

TARGETLIBS= \
        $(SDK_LIB_PATH)\randlibk.lib   \
        $(DS_LIB_PATH)\rsa32k.lib      \
        $(SECURITY_LIB_PATH)\kerbkrnl.lib \
        $(SECURITY_LIB_PATH)\ntlmkrnl.lib \
        $(SECURITY_LIB_PATH)\cryptk.lib

PRECOMPILED_INCLUDE=secpch2.hxx
PRECOMPILED_PCH=secpch2.pch
PRECOMPILED_OBJ=secpch2.obj

PASS1_PUBLISH={$(O)\$(TARGETNAME).lib=$(DDK_LIB_PATH)\$(TARGETNAME).lib}
