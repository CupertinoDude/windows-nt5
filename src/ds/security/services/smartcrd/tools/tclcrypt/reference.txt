CryptoAPI Tcl extensions
------------------------
crypt [<handle>] list
    providers [type <provType>]

crypt acquire \
    [provider <providerName>] \
    [type <provType>] \
    [{ container | keyset } <containerName>] \
    [verifycontext] [newkeyset] [deletekeyset] [machine] [silent] \
    [flags {<acquireFlag> [<acquireFlag> [...]]}]

crypt <handle> release
    provider [flags {<emptyFlags> [<emptyFlags> [...]]}]
    key
    hash

crypt <handle> parameter { provider | key | hash } <paramId> \
    [output {text | hex | file <fileName>}] \
    [flags {<paramFlags> [<paramFlags> [...]]}] \
    [input { text | hex | file}] [<value>]

crypt <handle> get key <keyId>

crypt <handle> create
    hash algorithm <algId>

crypt <handle> hash \
    [flags {<hashFlag> [<hashFlag> [...]]}]
    [input { text | hex | file }] value

crypt <handle> signhash \
    [output { text | hex | file <fileName> }] \
    key <keyId>
    [description <desc>] \
    [flags {<signFlag> [<signFlag> [...]]}] \

crypt <handle> verifysignature \
    [output { text | hex | file <fileName> }] \
    key <hPubKey> \
    [description <desc>] \
    [flags {<signFlag> [<signFlag> [...]]}] \
    [input { text | hex | file }] value

crypt <handle> encrypt \
    [output { text | hex | file <fileName> }] \
    [hash <hHash>] \
    [flags {<cryptFlag> [<cryptFlag> [...]]}] \
    [{more | final}] \
    [input { text | hex | file }] value

crypt <handle> decrypt \
    [output { text | hex | file <fileName> }] \
    [hash <hHash>] \
    [flags {<cryptFlag> [<cryptFlag> [...]]}] \
    [{more | final}] \
    [input { text | hex | file }] value
