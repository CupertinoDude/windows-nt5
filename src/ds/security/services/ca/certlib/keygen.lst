-- ROOT KEYGEN 

--<COPYRIGHT "Copyright (C) Microsoft Corporation, 1996 - 1996" | OBJECTID 16 |
--  OBJECTID LONG | LENGTHSIZE LONG | SUPPRESS 0433, 0427, 0391 | TARGET NT  |
--  CHARSIZE 1 | SHORTSIZE 2 | INTSIZE 4 | LONGSIZE 4 | LONGLONGSIZE 8 |
--  CHARENUMSIZE 4 | UCHARENUMSIZE 4 | SHORTENUMSIZE 4 | USHORTENUMSIZE 4 |
--  LONGENUMSIZE 4 | GENERICENUMSIZE 4 | FLOATSIZE 4 | DOUBLESIZE 8 |
--  POINTERSIZE 4 | SHORTMAX 32767 | INTMAX 2147483647 | LONGMAX 2147483647 |
--  LONGLONGMAX 9223372036854775807 | USHORTMAX 65535 | UINTMAX 4294967295 |
--  ULONGMAX 4294967295 | ULONGLONGMAX 18446744073709551615 | SHORTMIN -32768 |
--  INTMIN -2147483648 | LONGMIN -2147483648 |
--  LONGLONGMIN -9223372036854775808 | UALIGN 0 |
--  ALIGNMENT 1,2,4,4,8,4,4,8,1,1,4,4,4,1,1,2,4,4,8,4,4,8,1,1,4,4,4,8 |
--  MANDATORYOPTIONS "-Zp8 (Microsoft) or equivalent" |
--  OPERATINGSYSTEM "Windows NT 3.5 or later/Windows 95" |
--  MACHINETYPE "Intel x86" | NOPDU |
--  UNBOUNDED OCTET STRING, BIT STRING, SEQUENCE OF, SET OF | NOVALUE>--
KEYGEN 
DEFINITIONS EXPLICIT TAGS 
--<NOPDU | NOVALUE>--
::=
BEGIN
    
    HUGEINTEGER ::= INTEGER --<HUGE>--
    
    BITSTRING ::= BIT STRING --<UNBOUNDED>--
    
    OCTETSTRING ::= OCTET STRING --<UNBOUNDED>--
    
    NUMERICSTRING ::= NumericString --<UNBOUNDED>--
    
    PRINTABLESTRING ::= PrintableString --<UNBOUNDED>--
    
    TELETEXSTRING ::= TeletexString --<UNBOUNDED>--
    
    T61STRING ::= T61String --<UNBOUNDED>--
    
    VIDEOTEXSTRING ::= VideotexString --<UNBOUNDED>--
    
    IA5STRING ::= IA5String --<UNBOUNDED>--
    
    GRAPHICSTRING ::= GraphicString --<UNBOUNDED>--
    
    VISIBLESTRING ::= VisibleString --<UNBOUNDED>--
    
    ISO646STRING ::= ISO646String --<UNBOUNDED>--
    
    GENERALSTRING ::= GeneralString --<UNBOUNDED>--
    
    UNIVERSALSTRING ::= UniversalString --<UNBOUNDED>--
    
    BMPSTRING ::= BMPString --<UNBOUNDED>--
    
    AlgorithmIdentifier ::= SEQUENCE {
	algorithm  OBJECT IDENTIFIER,
	parameters ANY --<ENCODABLE>-- OPTIONAL
    }
    
    DigestInfo ::= SEQUENCE {
	digestAlgorithm AlgorithmIdentifier,
	digest          OCTETSTRING
    }
    
    RSAPublicKey ::= SEQUENCE {
	modulus        HUGEINTEGER,
	publicExponent INTEGER
    } --<PDU>--
    
    SubjectPublicKeyInfo ::= SEQUENCE {
	algorithm        AlgorithmIdentifier,
	subjectPublicKey BITSTRING
    } --<PDU>--
    
    SignedContent ::= SEQUENCE {
	toBeSigned ANY --<ENCODABLE>--,
	algorithm  AlgorithmIdentifier,
	signature  BITSTRING
    } --<PDU>--
    
    PublicKeyAndChallenge ::= SEQUENCE {
	spki      SubjectPublicKeyInfo,
	challenge IA5STRING
    }
    
    SignedPublicKeyAndChallenge ::= SEQUENCE {
	publicKeyAndChallenge PublicKeyAndChallenge,
	signatureAlgorithm    AlgorithmIdentifier,
	signature             BIT STRING
    } --<PDU>--
    
END

