!IF 0

Copyright (C) Microsoft Corporation, 1989 - 1999

NOTE:   Commented description of this file is in \nt\bak\bin\sources.tpl

!ENDIF

CA_RELATIVEROOT=..
XELIB_PATH=$(PROJECT_ROOT)\security\cryptoapi\pki\activex\xelib\xelibca
MAJORCOMP=certsrv
MINORCOMP=certcli

TARGETNAME=$(MINORCOMP)
TARGETPATH=obj
TARGETTYPE=DYNLINK

DLLDEF=$(O)\$(MINORCOMP).def
DLLENTRY=DllMain

SYNCHRONIZE_DRAIN=1

CHECKED_ALT_DIR=1
NOT_LEAN_AND_MEAN=1
USE_ATL=1
USE_MSVCRT=1

INCLUDES= \
    $(DS_INC_PATH); \
    $(CA_RELATIVEROOT)\include\$(O); \
    $(CA_RELATIVEROOT)\include; \
    $(CA_RELATIVEROOT)\certif; \
    $(CA_RELATIVEROOT)\certprxy; \
    $(CA_RELATIVEROOT)\idl\com\$(O); \
    $(SECURITY_INC)

# Until build.exe is fixed:
CONDITIONAL_INCLUDES= \
    $(CA_MAC_CONDITIONAL_INCLUDES) \
    atlbase.h \
    atlcom.h \
    atlimpl.cpp

C_DEFINES=-DUNICODE -D_UNICODE -D_CERTCLI_
C_DEFINES= \
    $(C_DEFINES) \
    -D_CRYPT32STRING_ \
    -DCryptStringToBinaryA=CryptStringToBinaryPriA \
    -DCryptStringToBinaryW=CryptStringToBinaryPriW \
    -DCryptBinaryToStringA=CryptBinaryToStringPriA \
    -DCryptBinaryToStringW=CryptBinaryToStringPriW

# For .def file processing:
!if !$(FREEBUILD)
C_DEFINES=$(C_DEFINES) -DDBG_CERTSRV=1
!endif

# NTTARGETFILES must be defined (even if empty) to force include of
# makefile.inc for tlb dependency:
# We also need to build a private library:

PRIVLIB = $(O)\$(MINORCOMP)p.lib
NTTARGETFILES=$(PRIVLIB)

PRECOMPILED_INCLUDE=pch.cpp

SOURCES= \
    certcli.rc \
    atl.cpp \
    certcli.cpp \
    column.cpp \
    config.cpp \
    configp.cpp \
    crypt.cpp \
    getconf.cpp \
    request.cpp \
    uwbase64.cpp \
    vroot.cpp

xDELAYLOAD= \
    cryptui.dll; \
    netapi32.dll; \
    ole32.dll; \
    oleaut32.dll; \
    rpcrt4.dll; \
    secur32.dll; \
    userenv.dll; \
    wldap32.dll

LINKLIBS= \
    $(CA_RELATIVEROOT)\certif\$(O)\certif.lib \
    $(CA_RELATIVEROOT)\certprxy\$(O)\certprxy.lib \
    $(CA_RELATIVEROOT)\certclib\$(O)\certclib.lib \
    $(CA_RELATIVEROOT)\certlib\$(O)\certlib.lib \
    $(SECURITY_LIB_PATH)\pkifmtca.lib

TARGETLIBS= \
    $(CA_RELATIVEROOT)\idl\com\$(O)\certidl.lib \
    $(CA_RELATIVEROOT)\certadm\$(O)\certadm.lib \
    $(XELIB_PATH)\$(O)\xelib.lib \
    $(SDK_LIB_PATH)\kernel32.lib \
    $(SDK_LIB_PATH)\advapi32.lib \
    $(SDK_LIB_PATH)\netlib.lib \
    $(SDK_LIB_PATH)\userenv.lib \
    $(SDK_LIB_PATH)\wldap32.lib \
    $(SDK_LIB_PATH)\ole32.lib \
    $(SDK_LIB_PATH)\oleaut32.lib \
    $(SDK_LIB_PATH)\secur32.lib \
    $(SDK_LIB_PATH)\uuid.lib \
    $(SDK_LIB_PATH)\user32.lib \
    $(SDK_LIB_PATH)\rpcrt4.lib \
    $(SDK_LIB_PATH)\wininet.lib \
    $(SDK_LIB_PATH)\netapi32.lib \
    $(SDK_LIB_PATH)\cryptui.lib \
    $(SDK_LIB_PATH)\crypt32.lib

PASS1_PUBLISH= \
    {$(O)\$(MINORCOMP).lib=$(SDK_LIB_PATH)\$(MINORCOMP).lib} \
    {$(O)\$(MINORCOMP)p.lib=$(DS_LIB_PATH)\$(MINORCOMP)p.lib}
