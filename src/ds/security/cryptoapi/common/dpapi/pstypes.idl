//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1997 - 1999
//
//  File:       pstypes.idl
//
//--------------------------------------------------------------------------

import "wtypes.idl";

import "pstdef.h";     // includes necessary typedefs

////////////////////////////////////////////
// TypeDefs

typedef GUID UUID;
typedef ULARGE_INTEGER PST_PROVIDER_HANDLE;

typedef GUID PST_PROVIDERID;
typedef PST_PROVIDERID* PPST_PROVIDERID;

import "basetsd.h";

// Provider Info struct
typedef struct _PST_PROVIDERINFO
{
    DWORD               cbSize;     // sizeof(PST_PROVIDERINFO)
    PST_PROVIDERID      ID;
    PST_PROVIDERCAPABILITIES    Capabilities;
    LPWSTR              szProviderName;
} PST_PROVIDERINFO, *PPST_PROVIDERINFO;


// caller context
typedef struct _PST_CALL_CONTEXT
{
    DWORD_PTR               Handle;
    DWORD               Address;
} PST_CALL_CONTEXT, *PPST_CALL_CONTEXT, *LPPST_CALL_CONTEXT;

// info describes a type/subtype
typedef struct _PST_TYPEINFO
{
    DWORD               cbSize;     // sizeof(PST_TYPEINFO)
    LPWSTR              szDisplayName;
} PST_TYPEINFO, *PPST_TYPEINFO;

// defines what prompting behavior
typedef struct _PST_PROMPTINFO
{
    DWORD               cbSize;     // sizeof(PST_PROMPTINFO)
    DWORD               dwPromptFlags;
    DWORD_PTR               hwndApp;
    LPCWSTR             szPrompt;
} PST_PROMPTINFO, *PPST_PROMPTINFO;



// single element in a rule
typedef struct _PST_ACCESSCLAUSE
{
    DWORD               cbSize;     // sizeof(PST_ACCESSCLAUSE)
    PST_ACCESSCLAUSETYPE ClauseType;
    DWORD               cbClauseData;
    [size_is(cbClauseData)] 
    BYTE*               pbClauseData;
} PST_ACCESSCLAUSE, *PPST_ACCESSCLAUSE;

// a string of clauses is a rule
typedef struct _PST_ACCESSRULE
{
    DWORD               cbSize;     // sizeof(PST_ACCESSRULE)
    PST_ACCESSMODE      AccessModeFlags;
    DWORD               cClauses;
    [size_is(cClauses)] 
    PST_ACCESSCLAUSE*   rgClauses;
} PST_ACCESSRULE, *PPST_ACCESSRULE;

// an array of rules is a ruleset 
typedef struct _PST_ACCESSRULESET
{
    DWORD               cbSize;     // sizeof(PST_ACCESSRULESET)
    DWORD               cRules;
    [size_is(cRules)] 
    PST_ACCESSRULE*     rgRules;
} PST_ACCESSRULESET, *PPST_ACCESSRULESET;


typedef struct _PST_AUTHENTICODEDATA
{
    DWORD               cbSize;     // sizeof(PST_AUTHENTICODEDATA)
    DWORD               dwModifiers;
    LPCWSTR             szRootCA;
    LPCWSTR             szIssuer;
    LPCWSTR             szPublisher;
    LPCWSTR             szProgramName;
} PST_AUTHENTICODEDATA, *PPST_AUTHENTICODEDATA, *LPPST_AUTHENTICODEDATA;


typedef struct _PST_BINARYCHECKDATA
{
    DWORD               cbSize;     // sizeof(PST_BINARYCHECKDATA)
    DWORD               dwModifiers;
    LPCWSTR             szFilePath; // full path to file
} PST_BINARYCHECKDATA, *PPST_BINARYCHECKDATA, *LPPST_BINARYCHECKDATA;


