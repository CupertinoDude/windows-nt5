// NWNDS.odl : type library source for NWNDS.dll

// This file will be processed by the Make Type Library (mktyplib) tool to
// produce the type library (NWNDS.tlb).

#include "NWNDS2.h"

[ uuid(NDS_LIBIID_NDSOle), version(1.0),
  helpstring("Active DS NWNDS Namespace Provider") ]
library NWNDSOle
{
        importlib("stdole2.tlb");
        importlib("activeds.tlb");

        [ uuid(NDS_CLSID_NDSNamespace)]
        coclass NWNDSNamespace
        {
                [default] interface IADsContainer;
                          interface IADs;
                          interface IDispatch;
        };


        [ uuid(NDS_CLSID_NDSGenObject)]
        coclass NWNDSGenObject
        {
                [default] interface IADsContainer;
                          interface IADs;
                          interface IDispatch;
        };


        [uuid(NDS_CLSID_NDSProvider)]
        coclass NWNDSProvider
        {
                [default] interface IDispatch;
                          interface IUnknown;
        };


        [uuid(NDS_CLSID_NDSTree)]
        coclass NWNDSTree
        {
                [default] interface IADs;
                          interface IDispatch;
        };

        [uuid(NDS_CLSID_NDSSchema)]
        coclass NWNDSSchema
        {
                [default] interface IADs;
                          interface IDispatch;
        };

        [uuid(NDS_CLSID_NDSClass)]
        coclass NWNDSClass
        {
                [default] interface IADs;
                          interface IDispatch;
        };

        [uuid(NDS_CLSID_NDSProperty)]
        coclass NWNDSProperty
        {
                [default] interface IADs;
                          interface IDispatch;
        };

        [uuid(NDS_CLSID_NDSSyntax)]
        coclass NWNDSSyntax
        {
                [default] interface IADs;
                          interface IDispatch;
        };

        [ uuid(NDS_CLSID_INDSAcl), oleautomation, dual]
        interface INDSAcl : IDispatch
        {
            PROPERTY_BSTR_RW(ProtectedAttrName, 2)

            PROPERTY_BSTR_RW(SubjectName, 3)

            PROPERTY_LONG_RW(Privileges, 4)

            [id(5)]
            HRESULT
            CopyAcl([out, retval] IDispatch ** ppAcl);
        };


        [ uuid(NDS_CLSID_NDSAcl)]
        coclass NWNDSAcl
        {
                [default] interface INDSAcl;
                          interface IDispatch;
        };
};
