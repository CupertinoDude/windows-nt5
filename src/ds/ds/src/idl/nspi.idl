//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1996 - 1999
//
//  File:       nspi.idl
//
//--------------------------------------------------------------------------


/***************************************************************************
*									   *
*                     Important version information                        *
*                    -------------------------------                       *
* !!!!!!!!!!!!!!!! THIS INTERFACE MUST NEVER BE CHANGED       !!!!!!!!!    *
*                                                                          *
* This is the interface that shipped with Exchange 4.0.  As long as        *
* Exchange 4.0 clients exist, this interface must exist, perfectly         *
* preserved.  It must be version 56.0, and the data structures used must   *
* not change.                                                              *
*									   *
***************************************************************************/
[ uuid (F5CC5A18-4264-101A-8C59-08002B2F8426),
  version(56.0),
  pointer_default(unique)]
interface nspi
{

/******************************************************************************\
*
*   MODULE: NSPI.IDL
*
*   RPC interface for Mir Name Service Provider (MirNSP.DLL on client)
*
*   FILE HISTORY:
*
*   DaveVH     9/20/92  Created
*   DaveVH     6/24/93  v2.0, changed SeekEntries
*   DonH       7/7/93   v2.1, added settable index support
*   TsviR      7/13/93  v3.0, ???
*   DaveVH     7/24/93  v4.0, changed counted strings to strings
*   DaveVH     8/31/93  v5.0, REC.DispName size changed to 40, ie 0 mod 4
*   DaveVH     10/11/93 v6.0, add getprops calls to interface
*   TsviR      10/18/93 v6.1, add codepage and locale to STAT block
*   DaveVH     10/18/93 v7.0, add templates call to interface
*   TsviR      10/20/93 v7.1, What the hell?
*   DaveVH     10/22/93 v8.0, alloc all at once
*   DaveVH     11/16/93 v10.0, change from implicit to explicit handles
*   TimWi      12/21/93 v11.0, extended to allow some multivalued getprops
*   TimWi      1/21/94  v12.0, Added NspiGetHierarchyInfo
*   TimWi      1/23/94  v13.0, Added ContainerID to the stat block
*   TimWi      2/1/94   v14.0, Addes SRow an SRowSet, changed Hierarchy
*                               call to return an SRowSet
*   DaveVH     2/2/94   v14.1, change dwEph parm in GetTemplate to ulType
*   TimWi      2/7/94   v15.0, Removed GetEntries and ReadMatches calls, the
*                              REC structure, the GET_PROPS structure,
*                              added a flag to GetHierarchyInfo, the
*                              QueryRows call
*   TimWI      2/9/94   v16.0, Changed matches param in getmatches to PropTag
*                              Added PT_NULL to PropValue->Value.
*   DaveVH     2/10/94  v17.0, Added ModProps call, and CodePage and LocaleID
*                              to GetTemplate call
*   TimWi      2/11/94  v18.0  Add support for seekentries in a restriction
*   TimWi      2/24/94  v19.0  Add ModDLMems call.
*   DonH       2/26/94  v20.0  Add QueryColumns call.
*   DaveVH     2/25/94  v21.0, Add GetNamedTemplate call
*   TimWi      2/28/94  v22.0  Kill the GetFid api.
*   TimWi      3/15/94  v23.0  Add SYSTIME to propval array, add an extra
*                              DWORD to the end of a proptagarray, kill
*                              the unnecessary string in GetMatches
*   DaveVH     3/15/94  v24.0, Add lDelta, "distance moved", to UpdateStat
*   TimWi      3/17/94  v25.0, Change Binding handle to a context_handle,
*			       Add NspiBind and NspiUnbind.
*   DaveVH     3/18/94  v26.0, Add pStat to GetHierarchyInfo call, replacing
*                              CodePage
*   TimWi      3/28/94  v27.0, Add a flags variable to the queryRows call.
*   TimWi      4/7/94   v28.0, NSEC is dead, long live SCODE!
*   TimWi      4/11/94  v29.0, Add a version number param to GetHierarchyInfo
*   TimWi      4/19/94  v30.0, New data type to wrap a bunch of strings into
*                              a single structure, which we can then define
*                              as allocate all nodes.  Solves bug in DNtoEphs.
*                              Data type is StringsArray.
*   DaveVH     4/20/94  v31.0, Add One Off ppScript param to GetNamedTemplate.
*   TimWi      4/22/94  v32.0, Add support for GetMatches to return a row
*                              set, anticipating the query-rows that should
*                              follow.
*   DaveVH     5/24/94  v33.0, Add Addr Type(ppEMT) param to GetNamedTemplate.
*   TimWi      6/23/94  v34.0, Change Def of GUID, change packing to 4.
*   TsviR      7/21/94  v35.0, Change to use midl 2.0
*   TimWi      7/12/94  v36.0, ModLDMems to ModLinkAtt.
*   TimWi      8/9/94   v37.0, NameFromID, IDFromName, ResortRestriction,
*                              kill SetIndex, change parameter on SeekEntries,
*                              pull constants from here, put them in external
*                              .h file.
*   TimWi      8/26/94  v38.0  Reordered the props in the return from
*                              NspiGetHierarchyInfo.
*   TimWi      9/12/94  v39.0  Change lpGUid in GetNamesIDS to unique, so
*                              it can be NULL.
*	DaveVH	   10/7/94 	v40.0	Add ResolveNames.
*   TimWi      10/12/94 v41.0  SeekEntries can do a QueryRows also.
*   TimWi      10/14/94 v42.0  GetMatches can take a Prop Name for opening a
*                              link/backlink table.
*
*   TsviR      10/14/94  v43.0  Change STAT to types of locale
*
*   TsviR      10/24/94  v44.0  Change NspiBind to include a STAT argument
*   TimWi      11/22/94 v45.0  Marshall PT_OBJECTS in a propval.
*   TimWi       2/06/95 v46.0  GetHelpFile call.
*   TimWi       2/13/95 v47.0  Combine GetHelpFile, GetTemplate, and
*			       GetNamedTemplate into GetTemplateInfo
*   TimWi       2/24/95 v48.0  GetIDsFromNames needs a flag.
*   TimWi       3/08/95 v49.0  ulInterfaceOptions on GetMatches.
*   TimWi       4/06/95 v50.0  DeleteEntries call. Kill unused params on
*                              ModLinkAtt.
*   TimWi       4/07/95 v51.0  Add a flag to ModProp to allow using the
*                              API for adding, not just modifying.  Also,
*                              make a param unique.
*   TimWi       4/24/95 v52.0  Changed the semantics of the gethierarchyinfo
*                              call, so upping the version number so
*                              clients don't get confused.
*   DaveVH      5/3/95  v53.0  Add Compare DNTs function.
*   TimWi       6/20/95 v54.0  Bind returns server GUID
*   TimWi       8/3/95  v55.0  Add a flag param to all calls, clean up calls
*                              with duplicate flag params.
*   DonH	10/5/95 v56.0  New MIDL compiler
*   RajNath  4/21/96    v57.0  Added Large Integer support
*   DonH	4/24/96   -    fixed Alpha compiler errors
*   TimWi       5/8/96    -    Moved the data type definitions to abaux.h
*   TimWi       5/9/96  v56.0  Removed Large Integer support from this interface
*                              leaving it in for msds.idl.  Back the version up.
*                              This will keep this interoperable with shipping
*                              Exchange 4.0 clients.
*
\******************************************************************************/

// abaux.idl defines the common data structures for msds.idl and nspi.idl
import "abaux.idl";

#include "abprops.h"

cpp_quote("#ifndef AB_DIFFERENT_TYPES")
cpp_quote("#define AB_DIFFERENT_TYPES")
typedef [switch_type(long)] union _PV_r
{
    [case PT_I2]            short int           i;
    [case PT_LONG]          LONG                l;
    [case PT_BOOLEAN]       unsigned short int  b;
    [case PT_STRING8]       LPSTR               lpszA;
    [case PT_BINARY]        SBinary_r           bin;
    [case PT_UNICODE]       LPWSTR              lpszW;
    [case PT_CLSID]         LPMUID_r            lpguid;
    [case PT_SYSTIME]	    FILETIME_r		ft;
    [case PT_ERROR]         SCODE               err;

    [case PT_MV_I2]         SShortArray_r	MVi;
    [case PT_MV_LONG]       SLongArray_r        MVl;
    [case PT_MV_STRING8]    SLPSTRArray_r	MVszA;
    [case PT_MV_BINARY]     SBinaryArray_r      MVbin;
    [case PT_MV_CLSID]      SGuidArray_r        MVguid;
    [case PT_MV_UNICODE]    SWStringArray_r	MVszW;
    [case PT_MV_SYSTIME]    SDateTimeArray_r	MVft;

    [case (PT_NULL,
           PT_OBJECT)]      LONG                x;

} PROP_VAL_UNION;

typedef struct _SPropValue_r
{
	ULONG	ulPropTag;
	ULONG 	dwAlignPad;
    [switch_is ((long)(ulPropTag & PROP_TYPE_MASK))] PROP_VAL_UNION Value;
} SPropValue_r,  **LPLPSPropValue_r;
cpp_quote("#endif")


/* define a version independent constant for the interface spec  */
cpp_quote("#define nspi_ClientIfHandle nspi_v56_0_c_ifspec")
cpp_quote("#define nspi_ServerIfHandle nspi_v56_0_s_ifspec")
#pragma warning (disable: 4309)

typedef [context_handle ] void * NSPI_HANDLE;


/****************************************************************************/
/**                                                                        **/
/**                         Definition of RPC'd API                        **/
/**                                                                        **/
/****************************************************************************/

SCODE NspiBind(
 [in]		handle_t	    hRpc,
 [in]           DWORD               dwFlags,	
 [in]   	PSTAT       	    pStat,
 [in,out,unique] LPMUID_r           pServerGuid,
 [out,ref]	NSPI_HANDLE *       contextHandle);

DWORD NspiUnbind(
 [in,out]	NSPI_HANDLE *       contextHandle,
 [in]           DWORD               dwFlags);

SCODE NspiUpdateStat(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in,out]       PSTAT               pStat,
 [in,out,unique] LPLONG             plDelta);

SCODE NspiQueryRows(
 [in]		NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in, out]	PSTAT               pStat,
 [in]		DWORD               dwEphsCount,
 [in, unique, size_is(dwEphsCount)] LPDWORD lpdwEphs,
 [in]		DWORD               Count,
 [in,unique]	LPSPropTagArray_r   pPropTags,
 [out]          LPLPSRowSet_r       ppRows);

SCODE NspiSeekEntries(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in,out]       PSTAT               pStat,
 [in]           LPSPropValue_r      pTarget,
 [in, unique]   LPSPropTagArray_r   Restriction,
 [in,unique]	LPSPropTagArray_r   pPropTags,
 [out]          LPLPSRowSet_r       ppRows);

SCODE NspiGetMatches(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in,out]       PSTAT               pStat,
 [in, unique]   LPSPropTagArray_r   pInDNTList,
 [in]           ULONG               ulInterfaceOptions,
 [in,unique]    LPSRestriction_r    Filter,
 [in,unique]    LPMAPINAMEID_r      lpPropName,
 [in]           ULONG               ulRequested,
 [out]          LPLPSPropTagArray_r ppDNTList,
 [in,unique]	LPSPropTagArray_r   pPropTags,
 [out]          LPLPSRowSet_r       ppRows);

SCODE NspiResortRestriction(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in,out]       PSTAT               pStat,
 [in]	        LPSPropTagArray_r   pInDNTList,
 [in,out]       LPLPSPropTagArray_r ppOutDNTList);

SCODE NspiDNToEph(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           LPStringsArray_r    pNames,
 [out]          LPLPSPropTagArray_r ppEphs);

SCODE NspiGetPropList(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           DWORD               dwEph,
 [in]           ULONG               CodePage,
 [out]          LPLPSPropTagArray_r ppPropTags);

SCODE NspiGetProps(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           PSTAT   	    pStat,
 [in,unique]    LPSPropTagArray_r   pPropTags,
 [out]          LPLPSRow_r          ppRow);

SCODE NspiCompareDNTs(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           PSTAT               pStat,
 [in]           DWORD               DNT1,
 [in]           DWORD               DNT2,
 [out]          LPLONG              plResult);

SCODE NspiModProps(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           PSTAT   	    pStat,
 [in, unique]   LPSPropTagArray_r   pPropTags,
 [in]           LPSRow_r            pRow);

SCODE NspiGetHierarchyInfo(
 [in]	        NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           PSTAT               pStat,
 [in, out]      LPDWORD             lpVersion,	
 [out]          LPLPSRowSet_r       HierTabRows);

SCODE NspiGetTemplateInfo(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]           ULONG               ulType,
 [in,unique]    LPSTR               pDN,
 [in]           DWORD               dwCodePage,
 [in]           DWORD               dwLocaleID,
 [out]          LPLPSRow_r          ppData);

SCODE NspiModLinkAtt(
 [in]	        NSPI_HANDLE	    hRpc,
 [in]           DWORD               dwFlags,	
 [in]           DWORD               ulPropTag,
 [in]	        DWORD		    dwEph,
 [in]	        LPENTRYLIST_r	    lpEntryIds);

SCODE NspiDeleteEntries(
 [in]	        NSPI_HANDLE	    hRpc,
 [in]           DWORD               dwFlags,	
 [in]	        DWORD		    dwEph,
 [in]	        LPENTRYLIST_r	    lpEntryIds);

SCODE NspiQueryColumns(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	/* Internal flags      */
 [in]           ULONG               ulFlags,    /* Client (MAPI) flags */
 [out]          LPLPSPropTagArray_r ppColumns);


SCODE NspiGetNamesFromIDs(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in, unique]   LPMUID_r            lpguid,
 [in, unique]   LPSPropTagArray_r   ppPropTags,
 [out]          LPLPSPropTagArray_r ppReturnedPropTags,
 [out]          LPLPNameIDSet_r     ppNames);

SCODE NspiGetIDsFromNames(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	/* Internal flags      */
 [in]           ULONG               ulFlags,    /* Client (MAPI) flags */
 [in]           ULONG               cPropNames,
 [in, size_is(cPropNames)] LPLPMAPINAMEID_r pNames,
 [out]          LPLPSPropTagArray_r ppPropTags);

SCODE NspiResolveNames(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]	        PSTAT               pStat,
 [in, unique]   LPSPropTagArray_r   pPropTags,
 [in]           LPStringsArray_r    paStr,
 [out]	        LPLPSPropTagArray_r ppFlags,
 [out]          LPLPSRowSet_r       ppRows);

SCODE NspiResolveNamesW(
 [in]           NSPI_HANDLE         hRpc,
 [in]           DWORD               dwFlags,	
 [in]	        PSTAT               pStat,
 [in, unique]   LPSPropTagArray_r   pPropTags,
 [in]           LPWStringsArray_r   paWStr,
 [out]	        LPLPSPropTagArray_r ppFlags,
 [out]          LPLPSRowSet_r       ppRows);

}
