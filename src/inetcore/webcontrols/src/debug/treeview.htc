<!------------------------------------------------------------------------
//
//  Copyright 2000 Microsoft Corporation.  All Rights Reserved.
//
//  File:         treeview.htc
//
//  Description:  
//
//-------------------------------------------------------------------- -->

<PUBLIC:COMPONENT                   TagName="TREEVIEW" LiteralContent=true />
<PUBLIC:DEFAULTS                    ViewLinkContent />

<PROPERTY                           NAME="expandTopLevel"   VALUE=false />
<PROPERTY                           NAME="expandAllLevel"   VALUE=false />
<PROPERTY                           NAME="selected"         VALUE=false />
<METHOD                             NAME="Expand"/>
<METHOD                             NAME="Collapse"/>

<EVENT   ID="eventExpand"           NAME="onexpand"/>

<ATTACH   EVENT="ondocumentready"   HANDLER="Init"/>
<ATTACH   EVENT="oncontentready"    HANDLER="OnContentReady"/>

<METHOD                             NAME="__DebugDispatch"/>
<METHOD                             NAME="__DebugOut"/>

</PUBLIC:COMPONENT>

<SCRIPT LANGUAGE="JAVASCRIPT" src="wcdebug.js"></SCRIPT>

<SCRIPT LANGUAGE="JAVASCRIPT">
    var _fExpanded = false;

function Init()
{
    if (typeof debug != "undefined")
        debug.value = __body.innerHTML;
}

function OnContentReady()
{
    var content = document.createElement("SPAN");
    content.innerHTML = innerHTML;
    var view = document.createElement("SPAN");
    view.style.display = "inline-block";
    __body.insertAdjacentElement("beforeEnd", view);
    BuildTVNode(content, view, expandTopLevel != "false" ? 0 : 1);
}

function BuildTVNode(node, view, iLevel)
{
    var i;

    var fHasKids = node.children.tags("TVNODE").length;

    if (iLevel)
    {
        imgExp  = document.createElement("IMG");
        imgExp.__e_TVNode = node;
        imgExp.src= fHasKids ?
                            (expandAllLevel == "show"   ? "images/_collap.gif"
                                                        : "images/_expand.gif")
                            : "images/_empty.gif";
        view.insertAdjacentElement("beforeEnd", imgExp);
    }

    var childCaption = node.children.tags("TVTITLE")[0];
    if (typeof childCaption != "undefined")
    {
        var icon = document.createElement("IMG");
        icon.src = "images/_object.gif";

        var obj = document.createElement("SPAN");
        obj.insertAdjacentElement("beforeEnd", icon);
        //obj.style.cssText = childCaption.style.cssText;
        obj.mergeAttributes(node);
        icon.style.verticalAlign = "middle";
        obj.style.verticalAlign = "top";

        for (i = 0; i < childCaption.childNodes.length; i++)
        {
            obj.appendChild(childCaption.childNodes[i]);
        }
        view.insertAdjacentElement("beforeEnd", obj);
    }

    if (iLevel && fHasKids)
    {
        imgExp.onclick = ExpCol;
    }

    if (fHasKids)
    {
        var oSpanKids = document.createElement("SPAN");
        view.insertAdjacentElement("beforeEnd", oSpanKids);

        node.__e_Kids = oSpanKids;
        node.__e_iLevel = iLevel + 1;
        if (!iLevel)
        {
            ExpKidsLazy(node, false);
        }
        else
        {
            if (expandAllLevel != "false")
                ExpKidsLazy(node, true);

            if (expandAllLevel != "show")
                node.__e_Kids.style.display = "none";
        }
    }
}

function ExpKidsLazy(node, fShift)
{
    var i;
    if (node.__e_fExpanded == true)
        return;

    var kids = node.children.tags("TVNODE");
    var oViewKids = node.__e_Kids;

    for (i = 0; i < kids.length; i++)
    {
        if (fShift)
        {
            var oNobr2 = document.createElement("NOBR");
            oViewKids.insertAdjacentElement("beforeEnd", oNobr2);
            for (var j=1; j < node.__e_iLevel; j++)
            {
                var imgBlank  = document.createElement("IMG");
                imgBlank.src= "images/_empty.gif";
                oNobr2.insertAdjacentElement("beforeEnd", imgBlank);
            }
            oNobr2.style.display="block";
            BuildTVNode(kids[i], oNobr2, node.__e_iLevel);
        }
        else
        {
            var oSpanKids = document.createElement("SPAN");
            oViewKids.insertAdjacentElement("beforeEnd", oSpanKids);
            oSpanKids.style.display = "block";
            BuildTVNode(kids[i], oSpanKids, node.__e_iLevel);
        }
    }
    node.__e_fExpanded = true;
}

function ExpCol()
{
    Assert(event.srcElement.tagName == "IMG", "expander has to be a img");

    viewKids = event.srcElement.__e_TVNode.__e_Kids;
    if (viewKids.style.display == "none")
    {
        ExpKidsLazy(event.srcElement.__e_TVNode, true);
        viewKids.style.display = "";
        event.srcElement.src = "images/_collap.gif"
    }
    else
    {
        viewKids.style.display = "none";
        event.srcElement.src = "images/_expand.gif"
    }
}

</SCRIPT>

<BODY ID=__body>
</BODY>
