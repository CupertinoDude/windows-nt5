<!--Copyright (c) 2000 Microsoft Corporation.  All rights reserved.-->
<HTML>
<HEAD>
<PUBLIC:COMPONENT tagName="BUTTON" lightWeight=true supportsEditMode='true'>
	<PUBLIC:METHOD NAME="createElement" internalName="f_createElement" />

	<PUBLIC:PROPERTY NAME="label" GET="f_getLabel" PUT="f_setLabel" />
	<PUBLIC:PROPERTY NAME="buttonDown" GET="f_getState" PUT="f_setState" />

	<PUBLIC:ATTACH EVENT="oncontentready" ONEVENT="f_init()"/>
	<PUBLIC:ATTACH EVENT="onpropertychange" ONEVENT="f_propChange()"/>
	<PUBLIC:ATTACH EVENT="ondetach" ONEVENT="f_cleanup()" />
</PUBLIC:COMPONENT>

<SCRIPT>
var g_oDisplay = null;
var g_oToolbar = null;
var g_fToolbar = true;
var g_szLabel = null;

function f_init()
{
	var oParent = element.parentElement;
	if( "group" === oParent.tagName.toLowerCase() ||
		"exclusive" === oParent.tagName.toLowerCase() )
	{
		oParent = oParent.parentElement;
	}
	if( "toolbar" === oParent.tagName.toLowerCase() )
	{
		g_oToolbar = oParent;
		g_oToolbar.nItems++;
	}
	if( "menu" === oParent.tagName.toLowerCase() )
	{
		g_fToolbar = false;
		g_oToolbar = oParent;
	}
}

function f_cleanup()
{
	if( g_oToolbar )
	{
		if( g_oDisplay )
		{
			g_oDisplay.parentElement.removeNode( true );
		}
		g_oToolbar = g_oDisplay = null;
	}
}

function f_createElement( oParent )
{
	var oDOM = oParent.document;
	var oItem;

	if( g_fToolbar )
	{
		oItem = oDOM.createElement("SPAN");
		oItem.className = "tbButton";
		oItem.name = "Button";
		oItem.fDisabled = false;
		oItem.tabIndex = 0;
		oItem.unselectable = "on";
		if( element.id )
		{
			oItem.id = element.id;
		}
		if( element.title )
		{
			oItem.title = element.title;
		}
		oItem.style.cssText = element.style.cssText;
		oItem.attachEvent( "onmouseenter", f_onMouseEnter );
		oItem.attachEvent( "onmouseleave", f_onMouseLeave );
		oItem.attachEvent( "onmouseup", f_onMouseUp );
		oItem.attachEvent( "onkeydown", f_keyDown );
		oItem.attachEvent( "onclick", f_onClick );
		oItem.attachEvent( "onmousedown", f_onMouseDown );

		oItem.innerHTML = g_szLabel = element.innerHTML;
		if( null != element.img && element.img.length )
		{
			var oImg = oDOM.createElement( "IMG" );
			oImg.unselectable = "on";
			oImg.align = "absmiddle";
			oImg.className = "cbImage";
			oImg.src = element.img;
			oItem.insertBefore( oImg, oItem.firstChild );
		}

		g_oDisplay = oParent.insertBefore( oItem );
	}
	else
	{
		oParent.className ="tbButton";
		oParent.fDisabled = false;
		oParent.name = "Button";
		if( "color" === element.type )
		{
			oItem = oDOM.createElement("SPAN");
			oItem.className = "tbButtonColor";
			oItem.unselectable = "on";
			if( element.id )
			{
				oItem.id = element.id;
			}
			if( element.title )
			{
				oItem.title = element.title;
			}
			if( element.value )
			{
				oItem.value = element.value;
				oItem.style.backgroundColor = element.value;
			}
			oItem.innerHTML = g_szLabel = element.innerHTML;
			g_oDisplay = oParent.insertBefore( oItem );
		}
		else
		{
			if( element.id )
			{
				oParent.id = element.id;
			}
			if( element.title )
			{
				oParent.title = element.title;
			}
			oParent.innerHTML = g_szLabel = element.innerHTML;
			if( null != element.img && element.img.length )
			{
				var oImg = oDOM.createElement( "IMG" );
				oImg.unselectable = "on";
				oImg.align = "absmiddle";
				oImg.className = "cbImage";
				oImg.src = element.img;
				oParent.insertBefore( oImg, oParent.firstChild );
			}
			g_oDisplay = oParent;
		}
	}
	return true;
}

function f_onMouseEnter()
{
	var obj = event.srcElement;
	if( null == obj.parentElement.oRawElm )
	{
		alert( "onMouseEnter firing with incorrect element." );
	}
	
	if( (null != obj.sticky && ( true == obj.buttondown )) ||
		 obj.parentElement.fBusy || obj.parentElement.fDisabled || obj.fDisabled )
	{
		return;
	}

	obj.className = "tbButtonRaise";
}

function f_onMouseLeave()
{
	var obj = event.srcElement;
	if( null == obj.parentElement.oRawElm )
	{
		alert( "onMouseLeave firing with incorrect element." );
	}

	// If it is a sticky button and currently down or it is a disabled
	if( (null != obj.sticky && ( true == obj.buttondown )) || obj.fDisabled )
	{
		return;
	}
	obj.className= (true == obj.raised) ? "tbButtonRaise" : "tbButton";
}

function f_onMouseUp()
{
	var obj = event.srcElement;
	while( obj.tagName != "BODY" )
	{
		var oParent = obj.parentElement;
		if( null != oParent.oRawElm )
		{
			break;
		}
		obj = oParent;
	}
	if (obj.tagName == "BODY" )
	{
		return;
	}

	event.cancelBubble=true;
	// If it is a sticky button and currently down
	if( null != obj.sticky && ( true == obj.buttondown ) )
	{
		return;
	}
	obj.className= "tbButtonRaise";
}

function f_onMouseDown( )
{
	var obj = event.srcElement;

	while( obj.tagName != "BODY" )
	{
		var oParent = obj.parentElement;
		if( null != oParent.oRawElm )
		{
			break;
		}
		obj = oParent;
	}
	if (obj.tagName == "BODY" )
	{
		return;
	}
	event.cancelBubble=true;

	if( obj.fDisabled ||obj.parentElement.fBusy || obj.parentElement.fDisabled)
	{
		return;
	}
	// Should we cancel the mouse up event or just let it cascade.
	obj.className="tbButtonDown";
}

function f_keyDown()
{
	if( event.ctrlKey || event.altKey )
	{
		return;
	}

	switch(event.keyCode)
	{
		case 13: // enter
			var obj = event.srcElement;
			if( null != obj.fDisabled )
			{
				if( obj.fDisabled || obj.parentElement.fBusy || obj.parentElement.fDisabled )
				{
					return;
				}
				f_onClickButton( obj );
				if( "tbButtonRaise" == obj.className )
				{
					obj.className = "tbButton";
				}
				event.cancelBubble=true;
				event.returnValue=false;
			}
			break;
	}
}

function f_onClick()
{
	if( null == event )
	{
		return;
	}

	event.cancelBubble=true;
	var obj = event.srcElement;
	if( null == obj )
	{
		return;
	}

	while( obj.tagName != "BODY" )
	{
		var oParent = obj.parentElement;
		if( null != oParent.oRawElm )
		{
			if( !obj.fDisabled && !oParent.fBusy && !oParent.fDisabled )
			{
				f_onClickButton( obj );
			}
			break;
		}
		obj = oParent;
	}
}

function f_onClickButton( obj )
{
	var fState = true;
	
	// If the item is a Sticking Button
	if(null != obj.sticky)
	{
		obj.buttondown = (true == obj.buttondown);

		// Button is not currently down.
		if(false == obj.buttondown)
		{
			obj.className="tbButtonDown";
			obj.buttondown = true;
		}
		else
		{
			if( null == obj.exclusive )
			{
				return( false );
			}
			obj.className = "tbButtonRaise";
			obj.buttondown = false;
			fState = false;
		}
	}

	var oEvent= createEventObject();
	oEvent.value = fState;
	obj = obj.parentElement.oRawElm;
	obj.fireEvent('onclick', oEvent);
	return(true);
}

function f_getState()
{
	return g_oDisplay.buttondown;
}

function f_setState(fDepress)
{
	fDepress = (false == fDepress) ? false : true;

	if( null == g_oDisplay )
	{
		return;
	}

	if( fDepress )
	{
		g_oDisplay.className="tbButtonDown";
		g_oDisplay.buttondown = true;
	}
	else
	{
		if( "tbButtonRaise" !== g_oDisplay.className )
		{
			g_oDisplay.className="tbButton";
		}
		g_oDisplay.buttondown = false;
	}
	return g_oDisplay.buttondown;
}

function f_getLabel()
{
	return( g_szLabel );
}

function f_setLabel( newVal )
{
	if( null == g_oDisplay )
	{
		return;
	}
	if( null == newVal )
	{
		newVal = "";
	}
	var obj = g_oDisplay;

	if( null != element.img && element.img.length )
	{
		var oImg = obj.firstChild.removeNode(true);
		obj.innerHTML = newVal;
		obj.insertBefore( oImg, obj.firstChild );
	}
	else
	{
		obj.innerHTML = newVal;
	}
	g_szLabel = newVal;
}

function f_propChange()
{
	var szText = event.propertyName;
	if( null != g_oDisplay )
	{
		switch( szText )
		{
			case "display":
				g_oDisplay.parentElement.style.display = (element.display) ? "" : "none";
				break;

			case "disabled":
				if( element.disabled )
				{
					g_oDisplay.fDisabled = true;
					g_oDisplay.disabled = true;
					g_oDisplay.className = "tbButtonDisable";
				}
				else
				{
					g_oDisplay.fDisabled = false;
					g_oDisplay.className = "tbButton";
					if( !g_oToolbar.busy )
					{
						g_oDisplay.disabled = false;
					}
				}
				break;

			case "img":
				var obj = g_oDisplay.firstChild;
				if( "IMG" === obj.tagName )
				{
					if( null == element.img )
					{
						obj.removeNode( true );
					}
					else
					{
						obj.src = element.img;
					}
				}
				else if( null != element.img )
				{
					var oImg = oDOM.createElement( "IMG" );
					oImg.unselectable = "on";
					oImg.align = "absmiddle";
					oImg.className = "cbImage";
					oImg.src = element.img;
					oItem.insertBefore( oImg, oItem.firstChild );
				}
				break;
			case "align":
				g_oDisplay.parentElement.align = element.align;
				break;

			case "innerHTML":
				if( null != element.img && element.img.length )
				{
					var oImg = g_oDisplay.firstChild.removeNode(true);
					g_oDisplay.innerHTML = element.innerHTML;
					g_oDisplay.insertBefore( oImg, g_oDisplay.firstChild );
				}
				else
				{
					g_oDisplay.innerHTML = element.innerHTML;
				}
				break;

			// since onclick will be fired back on BUTTON element
			// there is no need to copy the event handler over
			case "onclick":
				break;

			default:
				eval( "g_oDisplay."+szText+"=element."+szText+";" );
				break;
		}
	}
}

</SCRIPT>
</HEAD>
</HTML>

