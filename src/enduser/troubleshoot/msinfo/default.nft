// This is the default MSINFO template file.
//
// Copyright (c) 1998-1999 Microsoft Corporation

MSINFO,0000

node("static", "root", field("static", "System Information"), "")
{
   columns(field("static", "Category [root, 200]") "NONE", "BASIC")
   node("static", "SystemSummary", field("static", "System Summary"), "No system information available")
   {
      columns(field("static", "Item [SystemSummary, 150]"), "NONE", "BASIC", field("static", "Value [SystemSummary, 280]"), "NONE", "BASIC")
      enumlines("Win32_OperatingSystem", field("static", "WQL:SELECT Caption, Version, CSDVersion, BuildNumber, Manufacturer FROM Win32_OperatingSystem"))
      {
         line("BASIC", field("static", "OS Name"),         field("Win32_OperatingSystem", "%s", Caption))
         line("BASIC", field("static", "Version"),         field("Win32_OperatingSystem", "%s %s Build %s", Version, CSDVersion, BuildNumber))
         line("BASIC", field("static", "OS Manufacturer"), field("Win32_OperatingSystem", "%s", Manufacturer))
      }
      enumlines("Win32_ComputerSystem", field("static", "WQL:SELECT Name, Manufacturer, Model, SystemType FROM Win32_ComputerSystem"))
      {
         line("BASIC", field("static", "System Name"),         field("Win32_ComputerSystem", "%s", Name))
         line("BASIC", field("static", "System Manufacturer"), field("Win32_ComputerSystem", "%s", Manufacturer))
         line("BASIC", field("static", "System Model"),        field("Win32_ComputerSystem", "%s", Model))
         line("BASIC", field("static", "System Type"),         field("Win32_ComputerSystem", "%s", ValueMapSystemType))
      }
      enumlines("Win32_Processor", field("static", "WQL:SELECT * FROM Win32_Processor"))
      {
         line("BASIC", field("static", "Processor"), field("Win32_Processor", "%s %s ~%s Mhz", Description, Manufacturer, CurrentClockSpeed))
      }
      enumlines("Win32_BIOS", field("static", "WQL:SELECT * FROM Win32_BIOS"))
	  {
         line("BASIC", field("static", "BIOS Version"), field("Win32_BIOS", "%q", Version))
      }
      enumlines("Win32_OperatingSystem", field("static", "WQL:SELECT WindowsDirectory, SystemDirectory, BootDevice, Locale FROM Win32_OperatingSystem"))
      {
         line("BASIC", field("static", "Windows Directory"),   field("Win32_OperatingSystem", "%s", WindowsDirectory))
         line("ADVANCED", field("static", "System Directory"), field("Win32_OperatingSystem", "%s", SystemDirectory))
         line("ADVANCED", field("static", "Boot Device"),      field("Win32_OperatingSystem", "%s", BootDevice))
         line("BASIC", field("static", "Locale"),              field("Win32_OperatingSystem", "%v", Locale))
      }
      enumlines("Win32_ComputerSystem", field("static", "WQL:SELECT UserName FROM Win32_ComputerSystem"))
      {
         line("ADVANCED", field("static", "User Name"), field("Win32_ComputerSystem", "%s", UserName))
      }
      enumlines("Win32_ComputerSystem (WQL)", field("static", "WQL:SELECT * FROM Win32_ComputerSystem WHERE DaylightInEffect = FALSE"))
      {
        line("BASIC",   field("static", "Time Zone"),   field("Win32_TimeZone", "%s", StandardName))
      }
      enumlines("Win32_ComputerSystem (WQL)", field("static", "WQL:SELECT * FROM Win32_ComputerSystem WHERE DaylightInEffect = TRUE"))
      {
        line("BASIC",   field("static", "Time Zone"),       field("Win32_TimeZone", "%s", DaylightName))
      }
      enumlines("Win32_LogicalMemoryConfiguration", field("static", "WQL:SELECT * FROM Win32_LogicalMemoryConfiguration"))
	  {
         line("BASIC", field("static", "Total Physical Memory"),    field("Win32_LogicalMemoryConfiguration", "%y", TotalPhysicalMemory))
      }
      enumlines("Win32_OperatingSystem", field("static", "WQL:SELECT FreePhysicalMemory, TotalVirtualMemorySize, FreeVirtualMemory, SizeStoredInPagingFiles FROM Win32_OperatingSystem"))
      {
         line("BASIC", field("static", "Available Physical Memory"),field("Win32_OperatingSystem", "%y", FreePhysicalMemory))
         line("BASIC", field("static", "Total Virtual Memory"),     field("Win32_OperatingSystem", "%y", TotalVirtualMemorySize))
         line("BASIC", field("static", "Available Virtual Memory"), field("Win32_OperatingSystem", "%y", FreeVirtualMemory))
         line("BASIC", field("static", "Page File Space"),          field("Win32_OperatingSystem", "%y", SizeStoredInPagingFiles))
      }
      enumlines("Win32_PageFileUsage", field("static", "WQL:SELECT Caption FROM Win32_PageFileUsage"))
      {
         line("ADVANCED", field("static", "Page File"), field("Win32_PageFileUsage", "%s", Caption))
      }
   }
   node("static", "Resources", field("static", "Hardware Resources"), "")
   {
      columns(field("static", "Category [Resources, 200]"), "NONE", "BASIC")
      node("static", "ResourcesConflicts", field("static", "Conflicts/Sharing"), "No conflicted/shared resources")
      {
         columns(field("static", "Resource [ResourceConflict, 200]"), "NONE", "BASIC", field("static", "Device [ResourceConflict, 200]"), "NONE", "BASIC")
         enumlines("Win32_IRQResource", field("Win32_IRQResource", "", Hardware), field("static", "-1"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_IRQResource.__PATH]->Win32_PNPAllocatedResource [more-than-one]"))
             {
                 line("BASIC", field("Win32_IRQResource", "%s", Caption),
                               field("Win32_PnPEntity", "%s", Caption))
             }
         }
         enumlines("Win32_DMAChannel", field("static", "WQL:SELECT * FROM Win32_DMAChannel"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_DMAChannel.__PATH]->Win32_PNPAllocatedResource [more-than-one]"))
             {
                 line("BASIC", field("Win32_DMAChannel", "DMA Channel %s", DMAChannel),
                               field("Win32_PnPEntity", "%s", Caption))
             }
         }
         enumlines("Win32_PortResource", field("static", "WQL:SELECT * FROM Win32_PortResource"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_PortResource.__PATH]->Win32_PNPAllocatedResource [more-than-one]"))
             {
                 line("BASIC", field("Win32_PortResource", "I/O Port %s", Caption),
                               field("Win32_PnPEntity", "%s", Caption))
             }
         }
         enumlines("Win32_DeviceMemoryAddress", field("static", "WQL:SELECT * FROM Win32_DeviceMemoryAddress"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_DeviceMemoryAddress.__PATH]->Win32_PNPAllocatedResource [more-than-one]"))
             {
                 line("BASIC", field("Win32_DeviceMemoryAddress", "Address Range %s", Caption),
                               field("Win32_PnPEntity", "%s", Caption))
             }
         }
      }
      node("static", "ResourcesDMA", field("static", "DMA"), "No DMA channels")
      {
         columns(field("static", "Channel [ResourcesDMA, 60]"), "VALUE", "BASIC",
                 field("static", "Device [ResourcesDMA, 180]"), "LEXICAL", "BASIC",
                 field("static", "Status [ResourcesDMA, 60]"), "LEXICAL", "BASIC")
         enumlines("Win32_DMAChannel", field("static", "WQL:SELECT * FROM Win32_DMAChannel"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_DMAChannel.__PATH]->Win32_PNPAllocatedResource [min-of-one]"))
             {
                line("BASIC", field("Win32_DMAChannel", "%d", DMAChannel),
                              field("Win32_PnPEntity", "%s", Caption),
                              field("Win32_DMAChannel", "%s", ValueMapStatus))
             }
         }
      }
      node("static", "ResourcesForcedHardware", field("static", "Forced Hardware"), "No Forced Hardware")
      {
         columns(field("static", "Device [ResourcesForcedHW, 200]"), "LEXICAL", "BASIC",
                 field("static", "PNP Device ID [ResourcesForcedHW, 200]"), "LEXICAL", "BASIC") 
         enumlines("Win32_PnPEntity", field("static", "WQL:SELECT Caption, PNPDeviceID FROM Win32_PnPEntity WHERE ConfigManagerUserConfig='TRUE'"))
         {
             line("BASIC", field("Win32_PnPEntity", "%s", Caption),
                           field("Win32_PnPEntity", "%s", PNPDeviceID))
         }
      }
      node("static", "ResourcesIO", field("static", "I/O"), "No I/O information")
      {
         columns(field("static", "Address Range [ResourcesIO, 120]"), "LEXICAL", "BASIC",
                 field("static", "Device [ResourcesIO, 200]"), "LEXICAL", "BASIC",
                 field("static", "Status [ResourcesIO, 50]"), "LEXICAL", "BASIC") 
         enumlines("Win32_PortResource", field("static", "WQL:SELECT * FROM Win32_PortResource"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_PortResource.__PATH]->Win32_PNPAllocatedResource [min-of-one=Free]"))
             {
                 line("BASIC", field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress),
                               field("Win32_PnPEntity", "%s", Caption),
                               field("Win32_PortResource", "%s", ValueMapStatus))
             }
         }
      }
      node("static", "ResourcesIRQs", field("static", "IRQs"), "No IRQ information")
      {
         columns(field("static", "IRQ Number [ResourcesIRQs, 80]"), "VALUE", "BASIC",
                 field("static", "Device [ResourcesIRQs, 200]"), "LEXICAL", "BASIC") 
         enumlines("Win32_IRQResource", field("Win32_IRQResource", "", Hardware), field("static", "-1"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_IRQResource.__PATH]->Win32_PNPAllocatedResource [min-of-one=Free]"))
             {
                 line("BASIC", field("Win32_IRQResource", "%s", IRQNumber),
                               field("Win32_PnPEntity", "%s", Caption))
             }
         }
      }
      node("static", "ResourcesMemory", field("static", "Memory"), "No memory information")
      {
         columns(field("static", "Range [ResourcesMemory, 170]"), "LEXICAL", "BASIC",
                 field("static", "Device [ResourcesMemory, 180]"), "LEXICAL", "BASIC",
                 field("static", "Status [ResourcesMemory, 60]"), "LEXICAL", "BASIC")
         enumlines("Win32_DeviceMemoryAddress", field("static", "WQL:SELECT * FROM Win32_DeviceMemoryAddress"))
         {
             enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_DeviceMemoryAddress.__PATH]->Win32_PNPAllocatedResource [min-of-one]"))
             {
                 line("BASIC", field("Win32_DeviceMemoryAddress", "%s", Caption),
                               field("Win32_PnPEntity", "%s", Caption),
                               field("Win32_DeviceMemoryAddress", "%s", Status))
             }
         }
      }
      //---------------------------------------------------------------------------------------------
      // This node is commented out pending PSS review of the information.
      //
      // node("static", "ResourcesPageFile", field("static", "**PAGE FILE**"), "No page file information")
      // {
      //    columns(field("static", "Item [ResourcesPageFile, 150]"), "NONE", "BASIC", field("static", "Value [ResourcesPageFile, 200]"), "NONE", "BASIC")
      //    enumlines("Win32_PageFile")
      //    {
      //       line("BASIC", field("static", "Archive"),  field("Win32_PageFile", "%s", Archive))
      //       line("BASIC", field("static", "Caption"),  field("Win32_PageFile", "%s", Caption))
      //       line("BASIC", field("static", "Compressed"),  field("Win32_PageFile", "%s", Compressed))
      //       line("BASIC", field("static", "CreationClassName"),  field("Win32_PageFile", "%s", CreationClassName))
      //       line("BASIC", field("static", "CreationDate"),  field("Win32_PageFile", "%s", CreationDate))
      //       line("BASIC", field("static", "CSCreationClassName"),  field("Win32_PageFile", "%s", CSCreationClassName))
      //       line("BASIC", field("static", "CSName"),  field("Win32_PageFile", "%s", CSName))
      //       line("BASIC", field("static", "Description"),  field("Win32_PageFile", "%s", Description))
      //       line("BASIC", field("static", "Encrypted"),  field("Win32_PageFile", "%s", Encrypted))
      //       line("BASIC", field("static", "Extension"),  field("Win32_PageFile", "%s", Extension))
      //       line("BASIC", field("static", "FileType"),  field("Win32_PageFile", "%s", FileType))
      //       line("BASIC", field("static", "FreeSpace"),  field("Win32_PageFile", "%s", FreeSpace))
      //       line("BASIC", field("static", "FSCreationClassName"),  field("Win32_PageFile", "%s", FSCreationClassName))
      //       line("BASIC", field("static", "FSName"),  field("Win32_PageFile", "%s", FSName))
      //       line("BASIC", field("static", "InitialSize"),  field("Win32_PageFile", "%s", InitialSize))
      //       line("BASIC", field("static", "InstallDate"),  field("Win32_PageFile", "%s", InstallDate))
      //       line("BASIC", field("static", "LastAccessed"),  field("Win32_PageFile", "%s", LastAccessed))
      //       line("BASIC", field("static", "LastModified"),  field("Win32_PageFile", "%s", LastModified))
      //       line("BASIC", field("static", "MaximumSize"),  field("Win32_PageFile", "%s", MaximumSize))
      //       line("BASIC", field("static", "Name"),  field("Win32_PageFile", "%s", Name))
      //       line("BASIC", field("static", "Path"),  field("Win32_PageFile", "%s", Path))
      //       line("BASIC", field("static", "Readable"),  field("Win32_PageFile", "%s", Readable))
      //       line("BASIC", field("static", "Size"),  field("Win32_PageFile", "%s", Size))
      //       line("BASIC", field("static", "Status"),  field("Win32_PageFile", "%s", Status))
      //       line("BASIC", field("static", "Writeable"),  field("Win32_PageFile", "%s", Writeable))
      //    }
      // }
      //---------------------------------------------------------------------------------------------
   }
   node("static", "Components", field("static", "Components"), "")
   {
      columns(field("static", "Category [Components, 200]"), "NONE", "BASIC")
      node("static", "ComponentsMultimedia", field("static", "Multimedia"), "")
      {
         columns(field("static", "Category [ComponentsMultimedia, 200]"), "NONE", "BASIC")
         node("static", "ComponentsMultimediaAudio", field("static", "Audio Codecs"), "No audio codecs")
         {
            columns(field("static", "Codec [ComponentsMultimediaAudio, 100]"), "LEXICAL", "BASIC",
                    field("static", "Manufacturer [ComponentsMultimediaAudio, 120]"), "LEXICAL", "BASIC",
                    field("static", "Description [ComponentsMultimediaAudio, 120]"), "LEXICAL", "BASIC",
                    field("static", "Status [ComponentsMultimediaAudio, 50]"), "LEXICAL", "BASIC",
                    field("static", "File [ComponentsMultimediaAudio, 200]"), "LEXICAL", "BASIC",
                    field("static", "Version [ComponentsMultimediaAudio, 100]"), "LEXICAL", "BASIC",
                    field("static", "Size [ComponentsMultimediaAudio, 85]"), "VALUE", "BASIC",
                    field("static", "Creation Date [ComponentsMultimediaAudio, 120]"), "VALUE", "BASIC")
            enumlines("Win32_CodecFile", field("static", "WQL:SELECT EightDotThreeFileName, Manufacturer, Description, Status, Name, Version, FileSize, CreationDate FROM Win32_CodecFile WHERE Group='Audio'"))
            {
               line("BASIC", field("Win32_CodecFile", "%s", EightDotThreeFileName),
                             field("Win32_CodecFile", "%s", Manufacturer),
                             field("Win32_CodecFile", "%s", Description),
                             field("Win32_CodecFile", "%s", ValueMapStatus),
                             field("Win32_CodecFile", "%s", Name),
                             field("Win32_CodecFile", "%s", Version),
                             field("Win32_CodecFile", "%z", FileSize),
                             field("Win32_CodecFile", "%t", CreationDate))
            }
         }
         node("static", "ComponentsMultimediaVideo", field("static", "Video Codecs"), "No video codecs")
         {
            columns(field("static", "Codec [ComponentsMultimediaVideo, 100]"), "LEXICAL", "BASIC",
                    field("static", "Manufacturer [ComponentsMultimediaVideo, 120]"), "LEXICAL", "BASIC",
                    field("static", "Description [ComponentsMultimediaVideo, 120]"), "LEXICAL", "BASIC",
                    field("static", "Status [ComponentsMultimediaVideo, 50]"), "LEXICAL", "BASIC",
                    field("static", "File [ComponentsMultimediaVideo, 200]"), "LEXICAL", "BASIC",
                    field("static", "Version [ComponentsMultimediaVideo, 100]"), "LEXICAL", "BASIC",
                    field("static", "Size [ComponentsMultimediaVideo, 85]"), "VALUE", "BASIC",
                    field("static", "Creation Date [ComponentsMultimediaVideo, 120]"), "VALUE", "BASIC")
            enumlines("Win32_CodecFile", field("static", "WQL:SELECT EightDotThreeFileName, Manufacturer, Description, Status, Name, Version, FileSize, CreationDate FROM Win32_CodecFile WHERE Group='Video'"))
            {
               line("BASIC", field("Win32_CodecFile", "%s", EightDotThreeFileName),
                             field("Win32_CodecFile", "%s", Manufacturer),
                             field("Win32_CodecFile", "%s", Description),
                             field("Win32_CodecFile", "%s", ValueMapStatus),
                             field("Win32_CodecFile", "%s", Name),
                             field("Win32_CodecFile", "%s", Version),
                             field("Win32_CodecFile", "%z", FileSize),
                             field("Win32_CodecFile", "%t", CreationDate))
            }
         }
         node("static", "ComponentsMultimediaCDROM", field("static", "CD-ROM"), "No CD-ROM drives")
         {
            columns(field("static", "Item [ComponentsMMCDROM, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsMMCDROM, 200]"), "NONE", "BASIC")
            enumlines("Win32_CDRomDrive", field("static", "WQL:SELECT Drive, Description, MediaLoaded, MediaType, Name, Manufacturer, Status, TransferRate, SCSITargetId, PNPDeviceID, __PATH FROM Win32_CDRomDrive"))
            {
               line("BASIC", field("static", "Drive"),             field("Win32_CDRomDrive", "%s", Drive))
               line("BASIC", field("static", "Description"),       field("Win32_CDRomDrive", "%s", Description))
               line("BASIC", field("static", "Media Loaded"),      field("Win32_CDRomDrive", "%b", MediaLoaded))
               line("BASIC", field("static", "Media Type"),        field("Win32_CDRomDrive", "%s", ValueMapMediaType))
               line("BASIC", field("static", "Name"),              field("Win32_CDRomDrive", "%s", Name))
               line("BASIC", field("static", "Manufacturer"),      field("Win32_CDRomDrive", "%s", Manufacturer))
               line("BASIC", field("static", "Status"),            field("Win32_CDRomDrive", "%s", ValueMapStatus))
               line("BASIC", field("static", "Transfer Rate"),     field("Win32_CDRomDrive", "%0.2f kbytes/sec", TransferRate))
               line("ADVANCED", field("static", "SCSI Target ID"), field("Win32_CDRomDrive", "%s", SCSITargetId))
               line("ADVANCED", field("static", "PNP Device ID"),  field("Win32_CDRomDrive", "%s", PNPDeviceID))
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_CDRomDrive.PNPDeviceID]'"))              
               {
                   enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                   {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                   }
                   enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                   {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                   }
                   enumlines("Win32_DeviceMemoryAddress", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_DeviceMemoryAddress"))
                   {
                       line("BASIC", field("static", "Memory Range"), field("Win32_DeviceMemoryAddress", "%s", Caption))
                   }
               }
               enumlines("Win32_Bus", field("static", "LNK:[Win32_CDRomDrive.__PATH]->Win32_DeviceBus->Win32_Bus"))
               {
                   line("BASIC", field("static", "Bus"), field("Win32_Bus", "%s", DeviceID))
               }
               line("BASIC", field("static", " "),                 field("static", " "))
            }
         }
         node("static", "ComponentsMultimediaSound", field("static", "Sound Device"), "No sound devices")
         {
            columns(field("static", "Item [ComponentsMMSound, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsMMSound, 250]"), "NONE", "BASIC")
            enumlines("Win32_SoundDevice", field("static", "WQL:SELECT * FROM Win32_SoundDevice"))
            {
               line("BASIC", field("static", "Name"),              field("Win32_SoundDevice", "%s", Name))
               line("BASIC", field("static", "Status"),            field("Win32_SoundDevice", "%s", ValueMapStatus))
               line("ADVANCED", field("static", "PNP Device ID"),  field("Win32_SoundDevice", "%s", PNPDeviceID))
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_SoundDevice.PNPDeviceID]'"))             
               {
                   enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                   {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                   }
                   enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                   {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                   }
                   enumlines("Win32_DeviceMemoryAddress", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_DeviceMemoryAddress"))
                   {
                       line("BASIC", field("static", "Memory Range"), field("Win32_DeviceMemoryAddress", "%s", Caption))
                   }
                   enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
                   {
                       line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
                   }
               }
               line("BASIC", field("static", " "),                 field("static", " "))
            }
         }
      }
      node("static", "ComponentsDisplay", field("static", "Display"), "No display information")
      {
         columns(field("static", "Item [ComponentsDisplay, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsDisplay, 200]"), "NONE", "BASIC")
         enumlines("Win32_VideoController", field("static", "WQL:SELECT * FROM Win32_VideoController"))
         {
            line("BASIC", field("static", "Name"),                     field("Win32_VideoController", "%s", Name))
            line("ADVANCED", field("static", "PNP Device ID"),         field("Win32_VideoController", "%s", PNPDeviceID))
            line("BASIC", field("static", "Adapter Type"),             field("Win32_VideoController", "%s, %s compatible", VideoProcessor, AdapterCompatibility))
            line("ADVANCED", field("static", "Adapter Description"),   field("Win32_VideoController", "%s", Description))
            line("ADVANCED", field("static", "Adapter RAM"),           field("Win32_VideoController", "%z", AdapterRAM))
            line("ADVANCED", field("static", "Installed Drivers"),     field("Win32_VideoController", "%s", InstalledDisplayDrivers))
            line("ADVANCED", field("static", "Driver Version"),        field("Win32_VideoController", "%s", DriverVersion))
            line("ADVANCED", field("static", "INF File"),              field("Win32_VideoController", "%s (%s section)", InfFilename, InfSection))
            line("ADVANCED", field("static", "Color Planes"),          field("Win32_VideoController", "%s", NumberOfColorPlanes))
            line("ADVANCED", field("static", "Color Table Entries"),   field("Win32_VideoController", "%s", CurrentNumberOfColors))
            line("BASIC", field("static", "Resolution"),               field("Win32_VideoController", "%s x %s x %s hertz", CurrentHorizontalResolution, CurrentVerticalResolution, CurrentRefreshRate))
            line("BASIC", field("static", "Bits/Pixel"),               field("Win32_VideoController", "%s", CurrentBitsPerPixel))
            line("BASIC", field("static", " "),                        field("static", " "))
         }
      }
      node("static", "ComponentsInfrared", field("static", "Infrared"), "No infrared devices")
      {
         columns(field("static", "Item [ComponentsInfrared, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsInfrared, 200]"), "NONE", "BASIC")
         enumlines("Win32_InfraredDevice", field("static", "WQL:SELECT * FROM Win32_InfraredDevice"))
         {
            line("BASIC", field("static", "Name"), field("Win32_InfraredDevice", "%s", Caption))
         }
         enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_InfraredDevice.PNPDeviceID]'"))
         {
            enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
            {
                line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
            }
         }
      }
      node("static", "ComponentsInput", field("static", "Input"), "")
      {
         columns(field("static", "Category [ComponentsInput, 200]"), "NONE", "BASIC")
         node("static", "ComponentsKeyboard", field("static", "Keyboard"), "No keyboard information")
         {
            columns(field("static", "Item [ComponentsKeyboard, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsKeyboard, 200]"), "NONE", "BASIC")
            enumlines("Win32_Keyboard", field("static", "WQL:SELECT * FROM Win32_Keyboard"))
            {
               line("BASIC", field("static", "Description"),          field("Win32_Keyboard", "%s", Description))
               line("BASIC", field("static", "Name"),                 field("Win32_Keyboard", "%s", Name))
               line("BASIC", field("static", "Layout"),               field("Win32_Keyboard", "%s", Layout))
               line("BASIC", field("static", "PNP Device ID"),        field("Win32_Keyboard", "%s", PNPDeviceID))
               line("BASIC", field("static", "NumberOfFunctionKeys"), field("Win32_Keyboard", "%s", NumberOfFunctionKeys))
               line("BASIC", field("static", " "),                    field("static", " "))
            }
         }
         node("static", "ComponentsPointDev", field("static", "Pointing Device"), "No pointing device information")
         {
            columns(field("static", "Item [ComponentsPointDev, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsPointDev, 200]"), "NONE", "BASIC")
            enumlines("Win32_PointingDevice", field("static", "WQL:SELECT * FROM Win32_PointingDevice"))
            {
               line("BASIC", field("static", "Hardware Type"),                 field("Win32_PointingDevice", "%s", HardwareType))
               line("BASIC", field("static", "Number of Buttons"),             field("Win32_PointingDevice", "%s", NumberOfButtons))
               line("BASIC", field("static", "Status"),                        field("Win32_PointingDevice", "%s", ValueMapStatus))
               line("BASIC", field("static", "PNP Device ID"),                 field("Win32_PointingDevice", "%s", PNPDeviceID))
               line("ADVANCED", field("static", "Power Management Supported"), field("Win32_PointingDevice", "%b", PowerManagementSupported))
               line("ADVANCED", field("static", "Double Click Threshold"),     field("Win32_PointingDevice", "%s", DoubleSpeedThreshold))
               line("ADVANCED", field("static", "Handedness"),                 field("Win32_PointingDevice", "%s", ValueMapHandedness))
               line("BASIC", field("static", " "),                             field("static", " "))
            }
         }
      }
      node("static", "ComponentsModem", field("static", "Modem"), "No modems")
      {
         columns(field("static", "Item [ComponentsModem, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsModem, 200]"), "NONE", "BASIC")
         enumlines("Win32_POTSModem", field("static", "WQL:SELECT * FROM Win32_POTSModem"))
         {
            line("BASIC", field("static", "Name"),                   field("Win32_POTSModem", "%s", Caption))
            line("BASIC", field("static", "Description"),            field("Win32_POTSModem", "%s", Description))
            line("BASIC", field("static", "Device ID"),              field("Win32_POTSModem", "%s", DeviceID))
            line("BASIC", field("static", "Device Type"),            field("Win32_POTSModem", "%s", DeviceType))
            line("BASIC", field("static", "Attached To"),            field("Win32_POTSModem", "%s", AttachedTo))
            line("BASIC", field("static", "Answer Mode"),            field("Win32_POTSModem", "%s", AnswerMode))          
            line("ADVANCED", field("static", "PNP Device ID"),       field("Win32_POTSModem", "%s", PNPDeviceID))
            line("ADVANCED", field("static", "ProviderName"),        field("Win32_POTSModem", "%s", ProviderName))
            line("ADVANCED", field("static", "ModemInfPath"),        field("Win32_POTSModem", "%s", ModemInfPath))
            line("ADVANCED", field("static", "ModemInfSection"),     field("Win32_POTSModem", "%s", ModemInfSection))
            line("ADVANCED", field("static", "BlindOff"),            field("Win32_POTSModem", "%s", BlindOff))
            line("ADVANCED", field("static", "BlindOn"),             field("Win32_POTSModem", "%s", BlindOn))
            line("BASIC", field("static", "CompressionOff"),         field("Win32_POTSModem", "%s", CompressionOff))
            line("BASIC", field("static", "CompressionOn"),          field("Win32_POTSModem", "%s", CompressionOn))
            line("BASIC", field("static", "ErrorControlForced"),     field("Win32_POTSModem", "%s", ErrorControlForced))
            line("BASIC", field("static", "ErrorControlOff"),        field("Win32_POTSModem", "%s", ErrorControlOff))
            line("BASIC", field("static", "ErrorControlOn"),         field("Win32_POTSModem", "%s", ErrorControlOn))
            line("ADVANCED", field("static", "FlowControlHard"),     field("Win32_POTSModem", "%s", FlowControlHard))
            line("ADVANCED", field("static", "FlowControlOff"),      field("Win32_POTSModem", "%s", FlowControlOff))
            line("ADVANCED", field("static", "FlowControlSoft"),     field("Win32_POTSModem", "%s", FlowControlSoft))
            line("ADVANCED", field("static", "DCB"),                 field("Win32_POTSModem", "%s", DCB))
            line("ADVANCED", field("static", "Default"),             field("Win32_POTSModem", "%s", Default))
            line("ADVANCED", field("static", "InactivityTimeout"),   field("Win32_POTSModem", "%s", InactivityTimeout))
            line("ADVANCED", field("static", "ModulationBell"),      field("Win32_POTSModem", "%s", ModulationBell))
            line("ADVANCED", field("static", "ModulationCCITT"),     field("Win32_POTSModem", "%s", ModulationCCITT))
            line("ADVANCED", field("static", "Prefix"),              field("Win32_POTSModem", "%s", Prefix))
            line("ADVANCED", field("static", "Properties"),          field("Win32_POTSModem", "%s", Properties))
            line("ADVANCED", field("static", "Pulse"),               field("Win32_POTSModem", "%s", Pulse))
            line("ADVANCED", field("static", "Reset"),               field("Win32_POTSModem", "%s", Reset))
            line("ADVANCED", field("static", "ResponsesKeyName"),    field("Win32_POTSModem", "%s", ResponsesKeyName))
            line("BASIC", field("static", "SpeakerModeDial"),        field("Win32_POTSModem", "%s", SpeakerModeDial))
            line("BASIC", field("static", "SpeakerModeOff"),         field("Win32_POTSModem", "%s", SpeakerModeOff))
            line("BASIC", field("static", "SpeakerModeOn"),          field("Win32_POTSModem", "%s", SpeakerModeOn))
            line("BASIC", field("static", "SpeakerModeSetup"),       field("Win32_POTSModem", "%s", SpeakerModeSetup))
            line("BASIC", field("static", "SpeakerVolumeHigh"),      field("Win32_POTSModem", "%s", SpeakerVolumeHigh))
            line("BASIC", field("static", "SpeakerVolumeLow"),       field("Win32_POTSModem", "%s", SpeakerVolumeLow))
            line("BASIC", field("static", "SpeakerVolumeMed"),       field("Win32_POTSModem", "%s", SpeakerVolumeMed))
            line("ADVANCED", field("static", "StringFormat"),        field("Win32_POTSModem", "%s", StringFormat))
            line("ADVANCED", field("static", "Terminator"),          field("Win32_POTSModem", "%s", Terminator))
            line("ADVANCED", field("static", "Tone"),                field("Win32_POTSModem", "%s", Tone))
            line("BASIC", field("static", " "),                      field("static", " "))
         }
      }
      node("static", "ComponentsNetwork", field("static", "Network"), "")
      {
         columns(field("static", "Category [ComponentsNetwork, 200]"), "NONE", "BASIC")
         node("static", "ComponentsNetAdapter", field("static", "Adapter"), "No network adapters")
         {
            columns(field("static", "Item [ComponentsNetAdapter, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsNetAdapter, 200]"), "NONE", "BASIC")
            enumlines("Win32_NetworkAdapter", field("static", "WQL:SELECT * FROM Win32_NetworkAdapter"))
            {
               line("BASIC", field("static", "Name"),                 field("Win32_NetworkAdapter", "%s", Caption))
               line("BASIC", field("static", "Adapter Type"),         field("Win32_NetworkAdapter", "%s", AdapterType))
               line("ADVANCED", field("static", "Product Name"),      field("Win32_NetworkAdapter", "%s", ProductName))
               line("ADVANCED", field("static", "Installed"),         field("Win32_NetworkAdapter", "%b", Installed))
               line("ADVANCED", field("static", "PNP Device ID"),     field("Win32_NetworkAdapter", "%s", PNPDeviceID))
               line("ADVANCED", field("static", "Last Reset"),        field("Win32_NetworkAdapter", "%t", TimeOfLastReset))
               line("ADVANCED", field("static", "Index"),             field("Win32_NetworkAdapter", "%s", Index))
               enumlines("Win32_NetworkAdapterConfiguration", field("static", "LNK:[Win32_NetworkAdapter.__PATH]->Win32_NetworkAdapterSetting"))
               {
                   line("BASIC", field("static", "Service Name"),            field("Win32_NetworkAdapterConfiguration", "%s", ServiceName))
                   line("BASIC", field("static", "IP Address"),              field("Win32_NetworkAdapterConfiguration", "%s", IPAddress))
                   line("BASIC", field("static", "IP Subnet"),               field("Win32_NetworkAdapterConfiguration", "%s", IPSubnet))
                   line("BASIC", field("static", "Default IP Gateway"),      field("Win32_NetworkAdapterConfiguration", "%s", DefaultIPGateway))
                   line("BASIC", field("static", "DHCP Enabled"),            field("Win32_NetworkAdapterConfiguration", "%b", DHCPEnabled))
                   line("ADVANCED", field("static", "DHCP Server"),          field("Win32_NetworkAdapterConfiguration", "%s", DHCPServer))
                   line("ADVANCED", field("static", "DHCP Lease Expires"),   field("Win32_NetworkAdapterConfiguration", "%t", DHCPLeaseExpires))
                   line("ADVANCED", field("static", "DHCP Lease Obtained"),  field("Win32_NetworkAdapterConfiguration", "%t", DHCPLeaseObtained))
                   line("BASIC", field("static", "MAC Address"),             field("Win32_NetworkAdapterConfiguration", "%s", MACAddress))
               }
               line("ADVANCED", field("static", "Service Name"),      field("Win32_NetworkAdapter", "%s", ServiceName))
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_NetworkAdapter.PNPDeviceID]'"))              
               {
                    enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                    {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                    }
                    enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                    {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                    }
                    enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
                    {
                       line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
                    }
               }
               line("BASIC", field("static", " "), field("static", " "))
            }
         }
         node("static", "ComponentsNetworkProtocol", field("static", "Protocol"), "No protocol information")
         {
            columns(field("static", "Item [ComponentsNetworkProtocol, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsNetworkProtocol, 200]"), "NONE", "BASIC")
            enumlines("Win32_NetworkProtocol", field("static", "WQL:SELECT * FROM Win32_NetworkProtocol"))
            {
               line("BASIC", field("static", "Name"),                           field("Win32_NetworkProtocol", "%s", Name))
               line("BASIC", field("static", "ConnectionlessService"),          field("Win32_NetworkProtocol", "%b", ConnectionlessService))
               line("BASIC", field("static", "GuaranteesDelivery"),             field("Win32_NetworkProtocol", "%b", GuaranteesDelivery))
               line("BASIC", field("static", "GuaranteesSequencing"),           field("Win32_NetworkProtocol", "%b", GuaranteesSequencing))
               line("ADVANCED", field("static", "MaximumAddressSize"),          field("Win32_NetworkProtocol", "%s bytes", MaximumAddressSize))
               line("ADVANCED", field("static", "MaximumMessageSize"),          field("Win32_NetworkProtocol", "%s bytes", MaximumMessageSize))
               line("ADVANCED", field("static", "MessageOriented"),             field("Win32_NetworkProtocol", "%b", MessageOriented))
               line("ADVANCED", field("static", "MinimumAddressSize"),          field("Win32_NetworkProtocol", "%s bytes", MinimumAddressSize))
               line("ADVANCED", field("static", "PseudoStreamOriented"),        field("Win32_NetworkProtocol", "%b", PseudoStreamOriented))
               line("ADVANCED", field("static", "SupportsBroadcasting"),        field("Win32_NetworkProtocol", "%b", SupportsBroadcasting))
               line("ADVANCED", field("static", "SupportsConnectData"),         field("Win32_NetworkProtocol", "%b", SupportsConnectData))
               line("ADVANCED", field("static", "SupportsDisconnectData"),      field("Win32_NetworkProtocol", "%b", SupportsDisconnectData))
               line("ADVANCED", field("static", "SupportsEncryption"),          field("Win32_NetworkProtocol", "%b", SupportsEncryption))
               line("ADVANCED", field("static", "SupportsExpeditedData"),       field("Win32_NetworkProtocol", "%b", SupportsExpeditedData))
               line("ADVANCED", field("static", "SupportsGracefulClosing"),     field("Win32_NetworkProtocol", "%b", SupportsGracefulClosing))
               line("ADVANCED", field("static", "SupportsGuaranteedBandwidth"), field("Win32_NetworkProtocol", "%b", SupportsGuaranteedBandwidth))
               line("ADVANCED", field("static", "SupportsMulticasting"),        field("Win32_NetworkProtocol", "%b", SupportsMulticasting))
               line("BASIC", field("static", " "),                              field("static", " "))
            }
         }
//  Need to develop method for displaying relationship information this class points to.
//         node("static", "ComponentsNetBindings", field("static", "Bindings"), "No Binding information")
//         {
//            columns(field("static", "Adapter [ComponentsNetBindings, 150]"), "LEXICAL", "BASIC",
//                    field("static", "Protocol [ComponentsNetBindings, 150]"), "VALUE", "BASIC",
//                    field("static", "Service [ComponentsNetBindings, 150]"), "LEXICAL", "BASIC")
//            enumlines("Win32_ProtocolBinding")
//            {
//               line("BASIC", field("Win32_ProtocolBinding", "%s", Adapter),
//                             field("Win32_ProtocolBinding", "%s", Protocol),
//                             field("Win32_ProtocolBinding", "%s", Service))
//            }
//         }
         node("static", "ComponentsNetworkWinSock", field("static", "WinSock"), "Not yet collecting Winsock")
         {
            columns(field("static", "Item [ComponentsNetworkWinSock, 100]"), "NONE", "BASIC", field("static", "Value [ComponentsNetworkWinSock, 260]"), "NONE", "BASIC")
            enumlines("Win32_OperatingSystem", field("static", "WQL:SELECT SystemDirectory FROM Win32_OperatingSystem"))
            {
               enumlines("WinsockFile", field("static", "WQL:SELECT Name, FileSize, Version FROM CIM_DataFile WHERE Name='[Win32_OperatingSystem.SystemDirectory]\\\\winsock.dll'"))
               {
                  line("BASIC", field("static", "File"), field("WinsockFile", "%s", Name))
                  line("BASIC", field("static", "Version"), field("WinsockFile", "%s", Version))
                  line("BASIC", field("static", "Size"), field("WinsockFile", "%z", FileSize))
                  line("BASIC", field("static", ""), field("static", ""))
               }
               enumlines("WinsockFile", field("static", "WQL:SELECT Name, FileSize, Version FROM CIM_DataFile WHERE Name='[Win32_OperatingSystem.SystemDirectory]\\\\wsock32.dll'"))
               {
                  line("BASIC", field("static", "File"), field("WinsockFile", "%s", Name))
                  line("BASIC", field("static", "Version"), field("WinsockFile", "%s", Version))
                  line("BASIC", field("static", "Size"), field("WinsockFile", "%z", FileSize))
                  line("BASIC", field("static", ""), field("static", ""))
               }
               enumlines("WinsockFile", field("static", "WQL:SELECT Name, FileSize, Version FROM CIM_DataFile WHERE Name='[Win32_OperatingSystem.SystemDirectory]\\\\wsock32n.dll'"))
               {
                  line("BASIC", field("static", "File"), field("WinsockFile", "%s", Name))
                  line("BASIC", field("static", "Version"), field("WinsockFile", "%s", Version))
                  line("BASIC", field("static", "Size"), field("WinsockFile", "%z", FileSize))
                  line("BASIC", field("static", ""), field("static", ""))
               }
            }
         }
      }
      node("static", "ComponentsPorts", field("static", "Ports"), "")
      {
         columns(field("static", "Category [ComponentsPorts, 200]"), "NONE", "BASIC")
         node("static", "ComponentsSerialPorts", field("static", "Serial"), "No serial port information")
         {
            columns(field("static", "Item [ComponentsSerialPorts, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsSerialPorts, 200]"), "NONE", "BASIC")
            enumlines("Win32_SerialPort", field("static", "WQL:SELECT * FROM Win32_SerialPort"))
            {
               line("BASIC", field("static", "Name"),                           field("Win32_SerialPort", "%s", DeviceID))
               line("BASIC", field("static", "Status"),                         field("Win32_SerialPort", "%s", ValueMapStatus))
               line("ADVANCED", field("static", "PNP Device ID"),               field("Win32_SerialPort", "%s", PNPDeviceID))
               line("ADVANCED", field("static", "Maximum Input Buffer Size"),   field("Win32_SerialPort", "%s", MaximumInputBufferSize))
               line("ADVANCED", field("static", "Maximum Output Buffer Size"),  field("Win32_SerialPort", "%b", MaximumOutputBufferSize))
               line("ADVANCED", field("static", "Settable Baud Rate"),          field("Win32_SerialPort", "%b", SettableBaudRate))
               line("ADVANCED", field("static", "Settable Data Bits"),          field("Win32_SerialPort", "%b", SettableDataBits))
               line("ADVANCED", field("static", "Settable Flow Control"),       field("Win32_SerialPort", "%b", SettableFlowControl))
               line("ADVANCED", field("static", "Settable Parity"),             field("Win32_SerialPort", "%b", SettableParity))
               line("ADVANCED", field("static", "Settable Parity Check"),       field("Win32_SerialPort", "%b", SettableParityCheck))
               line("ADVANCED", field("static", "Settable Stop Bits"),          field("Win32_SerialPort", "%b", SettableStopBits))
               line("ADVANCED", field("static", "Settable RLSD"),               field("Win32_SerialPort", "%b", SettableRLSD))
               line("ADVANCED", field("static", "Supports RLSD"),               field("Win32_SerialPort", "%b", SupportsRLSD))
               line("ADVANCED", field("static", "Supports 16 Bit Mode"),        field("Win32_SerialPort", "%b", Supports16BitMode))
               line("ADVANCED", field("static", "Supports Special Characters"), field("Win32_SerialPort", "%b", SupportsSpecialCharacters))
               enumlines("Win32_SerialPortConfiguration", field("static", "LNK:[Win32_SerialPort.__PATH]->Win32_SerialPortSetting"))
               {
                   line("BASIC", field("static", "Baud Rate"),             field("Win32_SerialPortConfiguration", "%s", BaudRate))
                   line("BASIC", field("static", "Bits/Byte"),             field("Win32_SerialPortConfiguration", "%s", BitsPerByte))
                   line("BASIC", field("static", "Stop Bits"),             field("Win32_SerialPortConfiguration", "%s", StopBits))
                   line("BASIC", field("static", "Parity"),                field("Win32_SerialPortConfiguration", "%s", ValueMapParity))
                   line("BASIC", field("static", "Busy"),                  field("Win32_SerialPortConfiguration", "%s", IsBusy))
                   line("ADVANCED", field("static", "Abort Read/Write on Error"), field("Win32_SerialPortConfiguration", "%s", AbortReadWriteOnError))
                   line("ADVANCED", field("static", "Binary Mode Enabled"), field("Win32_SerialPortConfiguration", "%s", BinaryModeEnabled))
                   line("ADVANCED", field("static", "Continue XMit on XOff"), field("Win32_SerialPortConfiguration", "%s", ContinueXMitOnXOff))
                   line("ADVANCED", field("static", "CTS Outflow Control"), field("Win32_SerialPortConfiguration", "%s", CTSOutflowControl))
                   line("ADVANCED", field("static", "Discard NULL Bytes"), field("Win32_SerialPortConfiguration", "%s", DiscardNULLBytes))
                   line("ADVANCED", field("static", "DSR Outflow Control"), field("Win32_SerialPortConfiguration", "%s", DSROutflowControl))
                   line("ADVANCED", field("static", "DSR Sensitivity"),    field("Win32_SerialPortConfiguration", "%s", DSRSensitivity))
                   line("ADVANCED", field("static", "DTR Flow Control Type"), field("Win32_SerialPortConfiguration", "%s", ValueMapDTRFlowControlType))
                   line("ADVANCED", field("static", "EOF Character"),      field("Win32_SerialPortConfiguration", "%s", EOFCharacter))
                   line("ADVANCED", field("static", "Error Replace Character"), field("Win32_SerialPortConfiguration", "%s", ErrorReplaceCharacter))
                   line("ADVANCED", field("static", "Error Replacement Enabled"), field("Win32_SerialPortConfiguration", "%s", ErrorReplacementEnabled))
                   line("ADVANCED", field("static", "Event Character"),    field("Win32_SerialPortConfiguration", "%s", EventCharacter))
                   line("ADVANCED", field("static", "Parity Check Enabled"), field("Win32_SerialPortConfiguration", "%s", ParityCheckEnabled))
                   line("ADVANCED", field("static", "RTS Flow Control Type"), field("Win32_SerialPortConfiguration", "%s", ValueMapRTSFlowControlType))
                   line("ADVANCED", field("static", "XOff Character"),     field("Win32_SerialPortConfiguration", "%s", XOffCharacter))
                   line("ADVANCED", field("static", "XOffXMit Threshold"), field("Win32_SerialPortConfiguration", "%s", XOffXMitThreshold))
                   line("ADVANCED", field("static", "XOn Character"),      field("Win32_SerialPortConfiguration", "%s", XOnCharacter))
                   line("ADVANCED", field("static", "XOnXMit Threshold"),  field("Win32_SerialPortConfiguration", "%s", XOnXMitThreshold))
                   line("ADVANCED", field("static", "XOnXOff InFlow Control"), field("Win32_SerialPortConfiguration", "%s", XOnXOffInFlowControl))
                   line("ADVANCED", field("static", "XOnXOff OutFlow Control"), field("Win32_SerialPortConfiguration", "%s", XOnXOffOutFlowControl))
               }
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_SerialPort.PNPDeviceID]'"))
               {
                   enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                   {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                   }
                   enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                   {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                   }
                   enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
                   {
                       line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
                   }
               }
               line("BASIC", field("static", " "), field("static", " "))
            }
         }
         node("static", "ComponentsParallelPorts", field("static", "Parallel"), "No parallel port information")
         {
            columns(field("static", "Item [ComponentsParallelPorts, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsParallelPorts, 200]"), "NONE", "BASIC")
            enumlines("Win32_ParallelPort", field("static", "WQL:SELECT * FROM Win32_ParallelPort"))
            {
               line("BASIC", field("static", "Name"), field("Win32_ParallelPort", "%s", Name))
               line("ADVANCED", field("static", "PNP Device ID"), field("Win32_ParallelPort", "%s", PNPDeviceID))
               enumlines("Win32_PortResource", field("static", "LNK:[Win32_ParallelPort.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
               {
                   line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
               }
               enumlines("CIM_DataFile", field("static", "LNK:[Win32_ParallelPort.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
               {
                   line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
               }
               line("BASIC", field("static", " "), field("static", " "))
            }
         }
      }
      node("static", "ComponentsStorage", field("static", "Storage"), "")
      {
         columns(field("static", "Category [root, 200]") "NONE", "BASIC")
         node("static", "ComponentsStorageDrives", field("static", "Drives"), "No drive information")
         {
            columns(field("static", "Item [ComponentsStorageDrives, 150]"), "NONE", "BASIC", field("static", "Value [ComponentsStorageDrives, 200]"), "NONE", "BASIC")
            enumlines("Win32_LogicalDisk", field("static", "WQL:SELECT DriveType, DeviceID, Description, __PATH FROM Win32_LogicalDisk WHERE DriveType = 2"))
            {
               line("BASIC", field("static", "Drive"),             field("Win32_LogicalDisk", "%s", DeviceID))
               line("BASIC", field("static", "Description"),       field("Win32_LogicalDisk", "%s", Description))
               line("BASIC", field("static", " "),                 field("static", " "))
            }
            enumlines("Win32_LogicalDisk", field("static", "WQL:SELECT DriveType, DeviceID, Description, Compressed, FileSystem, Size, FreeSpace, VolumeName, VolumeSerialNumber, __PATH FROM Win32_LogicalDisk WHERE DriveType = 3"))
            {
               line("BASIC", field("static", "Drive"),             field("Win32_LogicalDisk", "%s", DeviceID))
               line("BASIC", field("static", "Description"),       field("Win32_LogicalDisk", "%s", Description))
               line("BASIC", field("static", "Compressed"),        field("Win32_LogicalDisk", "%b", Compressed))
               line("ADVANCED", field("static", "File System"),    field("Win32_LogicalDisk", "%s", FileSystem))
               line("BASIC", field("static", "Size"),              field("Win32_LogicalDisk", "%z", Size))
               line("BASIC", field("static", "Free Space"),        field("Win32_LogicalDisk", "%z", FreeSpace))
               line("ADVANCED", field("static", "Volume Name"),    field("Win32_LogicalDisk", "%s", VolumeName))
               line("ADVANCED", field("static", "Volume Serial Number"), field("Win32_LogicalDisk", "%s", VolumeSerialNumber))
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_LogicalDisk.PNPDeviceID]'"))
               {
                   enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                   {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                   }
                   enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                   {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                   }
                   enumlines("Win32_DMAChannel", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_DMAChannel"))
                   {
                       line("BASIC", field("static", "DMA Channel"), field("Win32_DMAChannel", "%s", DMAChannel))
                   }
                   enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
                   {
                       line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
                   }
               }
               enumlines("Win32_DiskPartition", field("static", "LNK:[Win32_LogicalDisk.__PATH]->Win32_LogicalDiskToPartition"))
               {
                   line("ADVANCED", field("static", "Partition"), field("Win32_DiskPartition", "%s", Caption))
                   line("ADVANCED", field("static", "Partition Size"), field("Win32_DiskPartition", "%z", Size))
                   line("ADVANCED", field("static", "Starting Offset"), field("Win32_DiskPartition", "%d bytes", StartingOffset))
                   enumlines("Win32_DiskDrive", field("static", "LNK:[Win32_DiskPartition.__PATH]->Win32_DiskDriveToDiskPartition"))
                   {
                       line("BASIC", field("static", "Drive Description"),          field("Win32_DiskDrive", "%s", Description))
                       line("BASIC", field("static", "Drive Manufacturer"),         field("Win32_DiskDrive", "%s", Manufacturer))
                       line("BASIC", field("static", "Drive Model"),                field("Win32_DiskDrive", "%s", Model))
                       line("ADVANCED", field("static", "Drive BytesPerSector"),    field("Win32_DiskDrive", "%s", BytesPerSector))
                       line("BASIC", field("static", "Drive MediaLoaded"),          field("Win32_DiskDrive", "%b", MediaLoaded))
                       line("BASIC", field("static", "Drive MediaType"),            field("Win32_DiskDrive", "%s", ValueMapMediaType))
                       line("BASIC", field("static", "Drive Partitions"),           field("Win32_DiskDrive", "%s", Partitions))
                       line("ADVANCED", field("static", "Drive SCSIBus"),           field("Win32_DiskDrive", "%s", SCSIBus))
                       line("ADVANCED", field("static", "Drive SCSILogicalUnit"),   field("Win32_DiskDrive", "%s", SCSILogicalUnit))
                       line("ADVANCED", field("static", "Drive SCSIPort"),          field("Win32_DiskDrive", "%s", SCSIPort))
                       line("ADVANCED", field("static", "Drive SCSITargetId"),      field("Win32_DiskDrive", "%s", SCSITargetId))
                       line("ADVANCED", field("static", "Drive SectorsPerTrack"),   field("Win32_DiskDrive", "%s", SectorsPerTrack))
                       line("BASIC", field("static", "Drive Size"),                 field("Win32_DiskDrive", "%s bytes", Size))
                       line("ADVANCED", field("static", "Drive TotalCylinders"),    field("Win32_DiskDrive", "%s", TotalCylinders))
                       line("ADVANCED", field("static", "Drive TotalSectors"),      field("Win32_DiskDrive", "%s", TotalSectors))
                       line("ADVANCED", field("static", "Drive TotalTracks"),       field("Win32_DiskDrive", "%s", TotalTracks))
                       line("ADVANCED", field("static", "Drive TracksPerCylinder"), field("Win32_DiskDrive", "%s", TracksPerCylinder))
                   }
               }
               line("BASIC", field("static", " "), field("static", " "))
            }
            enumlines("Win32_LogicalDisk", field("static", "WQL:SELECT DriveType, DeviceID, Description, ProviderName, __PATH FROM Win32_LogicalDisk WHERE DriveType = 4"))
            {
               line("BASIC", field("static", "Drive"),         field("Win32_LogicalDisk", "%s", DeviceID))
               line("BASIC", field("static", "Description"),   field("Win32_LogicalDisk", "%s", Description))
               line("BASIC", field("static", "Provider Name"), field("Win32_LogicalDisk", "%s", ProviderName))
               line("BASIC", field("static", " "),             field("static", " "))
            }
         }
         node("static", "ComponentsStorageSCSI", field("static", "SCSI"), "No SCSI information")
         {
            columns(field("static", "Item [ComponentsStorageSCSI, 200]"), "NONE", "BASIC", field("static", "Value [ComponentsStorageSCSI, 200]"), "NONE", "BASIC")
            enumlines("Win32_SCSIController", field("static", "WQL:SELECT * FROM Win32_SCSIController"))
            {
               line("BASIC", field("static", "Name"),             field("Win32_SCSIController", "%s", Name))
               line("BASIC", field("static", "Caption"),          field("Win32_SCSIController", "%s", Caption))
               line("BASIC", field("static", "Driver"),           field("Win32_SCSIController", "%s", DriverName))
               line("BASIC", field("static", "Status"),           field("Win32_SCSIController", "%s", Status))
               line("ADVANCED", field("static", "PNP Device ID"), field("Win32_SCSIController", "%s", PNPDeviceID))
               line("ADVANCED", field("static", "Device ID"),     field("Win32_SCSIController", "%s", DeviceID))
               line("ADVANCED", field("static", "Device Map"),    field("Win32_SCSIController", "%s", DeviceMap))
               line("ADVANCED", field("static", "Index"),         field("Win32_SCSIController", "%s", Index))
               line("ADVANCED", field("static", "Max Number Controlled"), field("Win32_SCSIController", "%s", MaxNumberControlled))
               enumlines("Win32_PNPEntity", field("static", "WQL:SELECT __PATH from Win32_PNPEntity WHERE DeviceID='[Win32_SCSIController.PNPDeviceID]'"))
               {
                    enumlines("Win32_IRQResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_IRQResource"))
                    {
                       line("BASIC", field("static", "IRQ Number"), field("Win32_IRQResource", "%s", IRQNumber))
                    }
                    enumlines("Win32_PortResource", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_PNPAllocatedResource->Win32_PortResource"))
                    {
                       line("BASIC", field("static", "I/O Port"), field("Win32_PortResource", "0x%04X-0x%04X", StartingAddress, EndingAddress))
                    }
                    enumlines("CIM_DataFile", field("static", "LNK:[Win32_PNPEntity.__PATH]->Win32_CIMLogicalDeviceCIMDataFile"))
                    {
                        line("ADVANCED", field("static", "Driver"), field("CIM_DataFile", "%s (%s, %s)", Name, FileSize, Version))
                    }   
                }
                line("BASIC", field("static", " "), field("static", " "))
            }
         }
      }
      node("static", "ComponentsPrinting", field("static", "Printing"), "No printing information")
      {
         columns(field("static", "Name [ComponentsPrinting, 150]"), "LEXICAL", "BASIC",
                 field("static", "Port Name [ComponentsPrinting, 100]"), "LEXICAL", "BASIC",
                 field("static", "Server Name [ComponentsPrinting, 100]"), "LEXICAL", "BASIC")
         enumlines("Win32_Printer", field("static", "WQL:SELECT * FROM Win32_Printer"))
         {
            line("BASIC", field("Win32_Printer", "%s", Name),
                          field("Win32_Printer", "%s", PortName),
                          field("Win32_Printer", "%s", ServerName))
         }
      }
      node("static", "ComponentsProblemDevices", field("static", "Problem Devices"), "No Problem Devices")
      {
         columns(field("static", "Device [ResourcesForcedHW, 200]"), "LEXICAL", "BASIC",
                 field("static", "PNP Device ID [ResourcesForcedHW, 200]"), "LEXICAL", "BASIC",
                 field("static", "Error Code [ResourcesForcedHW, 75]"), "LEXICAL", "BASIC") 
         enumlines("Win32_PnPEntity", field("static", "WQL:SELECT Caption, PNPDeviceID, ConfigManagerErrorCode FROM Win32_PnPEntity WHERE ConfigManagerErrorCode != 0"))
         {
             line("BASIC", field("Win32_PnPEntity", "%s", Caption),
                           field("Win32_PnPEntity", "%s", PNPDeviceID),
                           field("Win32_PnPEntity", "%s", ConfigManagerErrorCode))
         }
      }
      node("static", "ComponentsUSB", field("static", "USB"), "No USB Devices")
      {
         columns(field("static", "Device [ComponentsUSB, 200]"), "LEXICAL", "BASIC",
                 field("static", "PNP Device ID [ComponentsUSB, 200]"), "LEXICAL", "BASIC") 
         enumlines("Win32_USBController", field("static", "WQL:SELECT * FROM Win32_USBController"))
         {
            line("BASIC", field("Win32_USBController", "%s", Caption),
                          field("Win32_USBController", "%s", PNPDeviceID))
            enumlines("Win32_PnPEntity", field("static", "LNK:[Win32_USBController.__PATH]->Win32_USBControllerDevice"))
            {
                line("BASIC", field("Win32_PnPEntity", "%s", Caption),
                              field("Win32_PnPEntity", "%s", PNPDeviceID))
            }
         }
      }
   }
   node("static", "SWEnv", field("static", "Software Environment"), "")
   {
      columns(field("static", "Category [SWEnv, 200]"), "NONE", "BASIC")
      node("static", "SWEnvDrivers", field("static", "Drivers"), "")
      {
         columns(field("static", "Name [SWEnvDriversKernel, 80]"), "LEXICAL", "BASIC",
                 field("static", "Description [SWEnvDriversKernel, 150]"), "LEXICAL", "BASIC",
                 field("static", "File [SWEnvDriversKernel, 150]"), "LEXICAL", "ADVANCED",
                 field("static", "Type [SWEnvDriversKernel, 100]"), "LEXICAL", "BASIC",
                 field("static", "Started [SWEnvDriversKernel, 60]"), "LEXICAL", "ADVANCED",
                 field("static", "Start Mode [SWEnvDriversKernel, 80]"), "LEXICAL", "ADVANCED",
                 field("static", "State [SWEnvDriversKernel, 60]"), "LEXICAL", "BASIC",
                 field("static", "Status [SWEnvDriversKernel, 50]"), "LEXICAL", "BASIC",
                 field("static", "Error Control [SWEnvDriversKernel, 80]"), "LEXICAL", "ADVANCED",
                 field("static", "Accept Pause [SWEnvDriversKernel, 90]"), "LEXICAL", "ADVANCED",
                 field("static", "Accept Stop [SWEnvDriversKernel, 90]"), "LEXICAL", "ADVANCED")
         enumlines("Win32_SystemDriver", field("static", "WQL:SELECT Name, Description, PathName, ServiceType, Started, StartMode, State, Status, ErrorControl, AcceptPause, AcceptStop FROM Win32_SystemDriver"))
         {
            line("BASIC", field("Win32_SystemDriver", "%l", Name),
                          field("Win32_SystemDriver", "%s", Description),
                          field("Win32_SystemDriver", "%l", PathName),
                          field("Win32_SystemDriver", "%s", ValueMapServiceType),
                          field("Win32_SystemDriver", "%b", Started),
                          field("Win32_SystemDriver", "%s", ValueMapStartMode),
                          field("Win32_SystemDriver", "%s", ValueMapState),
                          field("Win32_SystemDriver", "%s", ValueMapStatus),
                          field("Win32_SystemDriver", "%s", ValueMapErrorControl),
                          field("Win32_SystemDriver", "%b", AcceptPause),
                          field("Win32_SystemDriver", "%b", AcceptStop))
         }
      }
      node("static", "SWEnvEnvVars", field("static", "Environment Variables"), "No environment variable information")
      {
         columns(field("static", "Variable [SWEnvEnvVars, 180]"), "LEXICAL", "BASIC", field("static", "Value [SWEnvEnvVars, 200]"), "LEXICAL", "BASIC", field("static", "User Name [SWEnvEnvVars, 120]"), "LEXICAL", "BASIC")
         enumlines("Win32_Environment", field("static", "WQL:SELECT * FROM Win32_Environment"))
         {
            line("BASIC", field("Win32_Environment", "%s", Name), field("Win32_Environment", "%s", VariableValue), field("Win32_Environment", "%s", UserName))
         }
      }
      node("static", "SWEnvJobs", field("static", "Jobs"), "")
      {
         columns(field("static", "Category [SWEnvJobs, 200]"), "NONE", "BASIC")
         node("static", "SWEnvPrint", field("static", "Print"), "No print jobs")
         {
            columns(field("static", "Document [SWEnvPrint, 120]"), "LEXICAL", "BASIC",
                    field("static", "Size [SWEnvPrint, 60]"), "VALUE", "BASIC",
                    field("static", "Owner [SWEnvPrint, 60]"), "LEXICAL", "BASIC",
                    field("static", "Notify [SWEnvPrint, 60]"), "LEXICAL", "ADVANCED",
                    field("static", "Status [SWEnvPrint, 60]"), "LEXICAL", "BASIC",
                    field("static", "Time Submitted [SWEnvPrint, 60]"), "VALUE", "BASIC",
                    field("static", "Start Time [SWEnvPrint, 60]"), "VALUE", "ADVANCED",
                    field("static", "Until Time [SWEnvPrint, 60]"), "VALUE", "ADVANCED",
                    field("static", "Elapsed Time [SWEnvPrint, 60]"), "LEXICAL", "ADVANCED",
                    field("static", "Pages Printed [SWEnvPrint, 60]"), "VALUE", "BASIC",
                    field("static", "Job ID [SWEnvPrint, 40]"), "VALUE", "ADVANCED",
                    field("static", "Priority [SWEnvPrint, 40]"), "VALUE", "ADVANCED",
                    field("static", "Parameters [SWEnvPrint, 100]"), "LEXICAL", "ADVANCED",
                    field("static", "Driver Name [SWEnvPrint, 100]"), "LEXICAL", "ADVANCED",
                    field("static", "Print Processor [SWEnvPrint, 100]"), "LEXICAL", "ADVANCED",
                    field("static", "Host Print Queue [SWEnvPrint, 100]"), "LEXICAL", "ADVANCED",
                    field("static", "Data Type [SWEnvPrint, 80]"), "LEXICAL", "ADVANCED",
                    field("static", "Name [SWEnvPrint, 100]"), "LEXICAL", "ADVANCED")
            enumlines("Win32_PrintJob", field("static", "WQL:SELECT * FROM Win32_PrintJob"))
            {
               line("BASIC", field("Win32_PrintJob", "%s", Document),
                             field("Win32_PrintJob", "%d", Size),
                             field("Win32_PrintJob", "%s", Owner),
                             field("Win32_PrintJob", "%s", Notify),
                             field("Win32_PrintJob", "%s", Status),
                             field("Win32_PrintJob", "%t", TimeSubmitted),
                             field("Win32_PrintJob", "%t", StartTime),
                             field("Win32_PrintJob", "%t", UntilTime),
                             field("Win32_PrintJob", "%d", ElapsedTime),
                             field("Win32_PrintJob", "%d", PagesPrinted),
                             field("Win32_PrintJob", "%d", JobId),
                             field("Win32_PrintJob", "%d", Priority),
                             field("Win32_PrintJob", "%s", Parameters),
                             field("Win32_PrintJob", "%s", DriverName),
                             field("Win32_PrintJob", "%s", PrintProcessor),
                             field("Win32_PrintJob", "%s", HostPrintQueue),
                             field("Win32_PrintJob", "%s", DataType),
                             field("Win32_PrintJob", "%s", Name))
            }
         }
      }
      node("static", "SWEnvNetConn", field("static", "Network Connections"), "No network connections information")
      {
         columns(field("static", "Local Name [SWEnvNetConn, 100]"), "LEXICAL", "BASIC",
                 field("static", "Remote Name [SWEnvNetConn, 150]"), "LEXICAL", "BASIC",
                 field("static", "Type [SWEnvNetConn, 60]"), "LEXICAL", "BASIC",
                 field("static", "Status [SWEnvNetConn, 60]"), "LEXICAL", "BASIC",
                 field("static", "User Name [SWEnvNetConn, 100]"), "LEXICAL", "ADVANCED")
         enumlines("Win32_NetworkConnection", field("static", "WQL:SELECT * FROM Win32_NetworkConnection"))
         {
            line("BASIC", field("Win32_NetworkConnection", "%s", LocalName),               
                          field("Win32_NetworkConnection", "%s", RemoteName),
                          field("Win32_NetworkConnection", "%s", ValueMapResourceType),
                          field("Win32_NetworkConnection", "%s", ValueMapStatus),
                          field("Win32_NetworkConnection", "%s", UserName))
         }
      }
      node("static", "SWEnvRunningTasks", field("static", "Running Tasks"), "No running task information")
      {
         columns(field("static", "Name [SWEnvRunningTasks, 120]"), "LEXICAL", "BASIC",
                 field("static", "Path [SWEnvRunningTasks, 200]"), "LEXICAL", "BASIC",
                 field("static", "Process ID [SWEnvRunningTasks, 60]"), "VALUE", "ADVANCED", 
                 field("static", "Priority [SWEnvRunningTasks, 80]"), "VALUE", "ADVANCED",
                 field("static", "Min Working Set [SWEnvRunningTasks, 80]"), "VALUE", "ADVANCED",
                 field("static", "Max Working Set [SWEnvRunningTasks, 80]"), "VALUE", "ADVANCED",
                 field("static", "Start Time [SWEnvRunningTasks, 120]"), "VALUE", "ADVANCED",
                 field("static", "Version [SWEnvRunningTasks, 100]"), "LEXICAL", "BASIC",
                 field("static", "Size [SWEnvRunningTasks, 85]"), "VALUE", "BASIC",
                 field("static", "File Date [SWEnvRunningTasks, 120]"), "VALUE", "BASIC")
         enumlines("Win32_Process", field("static", "WQL:SELECT * FROM Win32_Process"))
         {
            enumlines("CIM_DataFile2", field("static", "WQL:SELECT Version, FileSize, CreationDate FROM CIM_DataFile WHERE Name='[Win32_Process.ExecutablePath]' [min-of-one]"))
            {
               line("BASIC", field("Win32_Process", "%l", Name),
                             field("Win32_Process", "%l", ExecutablePath),
                             field("Win32_Process", "%s", ProcessID),
                             field("Win32_Process", "%s", Priority),
                             field("Win32_Process", "%s", MinimumWorkingSetSize),
                             field("Win32_Process", "%s", MaximumWorkingSetSize),
                             field("Win32_Process", "%t", CreationDate)
                             field("CIM_DataFile2", "%s", Version),
                             field("CIM_DataFile2", "%z", FileSize),
                             field("CIM_DataFile2", "%t", CreationDate))
            }
         }
      }
      node("static", "SWEnvLoadedModules", field("static", "Loaded Modules"), "No loaded module information")
      {
         columns(field("static", "Name [SWEnvLoadedModules, 100]"), "LEXICAL", "BASIC",
                 field("static", "Version [SWEnvLoadedModules, 100]"), "LEXICAL", "BASIC",
                 field("static", "Size [SWEnvLoadedModules, 90]"), "VALUE", "BASIC",
                 field("static", "File Date [SWEnvLoadedModules, 120]"), "VALUE", "BASIC",
                 field("static", "Manufacturer [SWEnvLoadedModules, 100]"), "LEXICAL", "BASIC",
                 field("static", "Path [SWEnvLoadedModules, 200]"), "LEXICAL", "BASIC")
         enumlines("DLLFile", field("static", "INT:dlls"))
         {
            line("BASIC", field("DLLFile", "%l.%l", FileName, Extension),
                          field("DLLFile", "%s", Version),
                          field("DLLFile", "%z", FileSize),
                          field("DLLFile", "%t", CreationDate),
                          field("DLLFile", "%s", Manufacturer),
                          field("DLLFile", "%l", Name))
         }
      }
      node("static", "SWEnvServices", field("static", "Services"), "No service information")
      {
         columns(field("static", "Display Name [SWEnvServices, 160]"), "LEXICAL", "BASIC",
                 field("static", "Name [SWEnvServices, 120]"), "LEXICAL", "ADVANCED",         
                 field("static", "State [SWEnvServices, 80]"), "LEXICAL", "BASIC",
                 field("static", "Start Mode [SWEnvServices, 80]"), "LEXICAL", "BASIC",
                 field("static", "Service Type [SWEnvServices, 80]"), "LEXICAL", "BASIC",
                 field("static", "Path [SWEnvServices, 200]"), "LEXICAL", "ADVANCED",
                 field("static", "Error Control [SWEnvServices, 80]"), "LEXICAL", "ADVANCED",
                 field("static", "Start Name [SWEnvServices, 80]"), "LEXICAL", "ADVANCED",
                 field("static", "Tag ID [SWEnvServices, 50]"), "VALUE", "ADVANCED")
         enumlines("Win32_Service", field("static", "WQL:SELECT DisplayName, Name, State, StartMode, ServiceType, PathName, ErrorControl, StartName, TagId FROM Win32_Service"))
         {
            line("BASIC",field("Win32_Service", "%s", DisplayName),
                         field("Win32_Service", "%s", Name),
                         field("Win32_Service", "%s", ValueMapState),
                         field("Win32_Service", "%s", ValueMapStartMode),
                         field("Win32_Service", "%s", ValueMapServiceType),
                         field("Win32_Service", "%l", PathName),
                         field("Win32_Service", "%s", ValueMapErrorControl),
                         field("Win32_Service", "%s", StartName),
                         field("Win32_Service", "%s", TagId))
         }
      }
      node("static", "SWEnvProgramGroup", field("static", "Program Groups"), "No program group information")
      {
         columns(field("static", "Group Name [SWEnvProgramGroup, 200]"), "LEXICAL", "BASIC",
                 field("static", "Name [SWEnvProgramGroup, 200]"), "LEXICAL", "BASIC",
                 field("static", "User Name [SWEnvProgramGroup, 80]"), "LEXICAL", "BASIC")
         enumlines("Win32_ProgramGroup", field("static", "WQL:SELECT * FROM Win32_ProgramGroup"))
         {
            line("BASIC", field("Win32_ProgramGroup", "%s", GroupName),
                          field("Win32_ProgramGroup", "%s", Name),
                          field("Win32_ProgramGroup", "%s", UserName))
         }
      }
      node("static", "SWEnvStartupPrograms", field("static", "Startup Programs"), "No startup program information")
      {
         columns(field("static", "Program [SWEnvStartupPrograms, 120]"), "LEXICAL", "BASIC",
                 field("static", "Command [SWEnvStartupPrograms, 220]"), "LEXICAL", "BASIC",
                 field("static", "User Name [SWEnvStartupPrograms, 80]"), "LEXICAL", "BASIC",
                 field("static", "Location [SWEnvStartupPrograms, 80]"), "LEXICAL", "ADVANCED")
         enumlines("Win32_StartupCommand", field("static", "WQL:SELECT Caption, Command, Location, User FROM Win32_StartupCommand"))
         {
            line("BASIC",field("Win32_StartupCommand", "%s", Caption),
                         field("Win32_StartupCommand", "%l", Command),
                         field("Win32_StartupCommand", "%s", User),
                         field("Win32_StartupCommand", "%s", ValueMapLocation))
         }
      }
      node("static", "SWEnvOLEReg", field("static", "OLE Registration"), "No OLE information")
      {
         columns(field("static", "Object [SWEnvOLEReg, 200]"), "NONE", "BASIC",
                 field("static", "Local Server [SWEnvOLEReg, 240]"), "NONE", "BASIC")
         enumlines("Win32_ClassicCOMClassX", field("static", "WQL:SELECT Caption, LocalServer32 FROM Win32_ClassicCOMClassSetting WHERE Insertable=TRUE AND Control=FALSE"))
         {
            line("BASIC", field("Win32_ClassicCOMClassX", "%s", Caption),
                          field("Win32_ClassicCOMClassX", "%s", LocalServer32))
         }
      }
   }
}