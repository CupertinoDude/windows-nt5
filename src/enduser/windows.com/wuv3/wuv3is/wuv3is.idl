// WUV3IS.idl : IDL source for WUV3IS.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (WUV3IS.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

	[
		object,
		uuid(CEBC955D-58AF-11D2-A30A-00A0C903492B),
		dual,
		helpstring("ICV3 Interface"),
		pointer_default(unique)
	]
	interface ICV3 : IDispatch
	{
		[id(1),  helpstring("method GetCatalog")] HRESULT GetCatalog([in] long puidCatalog, [in] BSTR bstrServerUrl, [in] long platformId, [in] BSTR bstrBrowserLangauge, [in] long lFilters, [in] long lFlags, [out, retval] VARIANT *pCatalogArray);
		[id(2),  helpstring("method ChangeItemState")] HRESULT ChangeItemState([in] long puid, [in] long lNewItemState);
		[id(3),  helpstring("method InstallSelectedItems")] HRESULT InstallSelectedItems([in] BSTR bstrServer, [in] long lFlags, [in] BSTR bstrTempDir, [out, retval] VARIANT *pResultsArray);
		[id(5),  helpstring("method GetInstallMetrics")] HRESULT GetInstallMetrics([out, retval] VARIANT *pMetricsArray);
		[id(6),  helpstring("method GetEula")] HRESULT GetEula([out, retval] VARIANT *pEulaArray);
		[id(7),  helpstring("method GetInstallHistory")] HRESULT GetInstallHistory([out, retval] VARIANT *pHistoryArray);
		[id(8),  helpstring("method GetDependencyList")] HRESULT GetDependencyList([in] long puid, [out, retval] VARIANT *pDependentItemsArray);
		[id(9),  helpstring("method GetCatalogItem")] HRESULT GetCatalogItem([in] long puid, [out, retval] VARIANT *pCatalogItem);
		[id(10), helpstring("method RemoveSelectedItems")] HRESULT RemoveSelectedItems();
		[id(11), helpstring("method IsCatalogAvailable")] HRESULT IsCatalogAvailable([in] long puidCatalog, [in] BSTR bstrServerUrl);
		[id(12), helpstring("method FinalizeInstall")] HRESULT FinalizeInstall([in] long lFlag);
		[id(13), helpstring("method SetStrings")] HRESULT SetStrings([in] VARIANT* vStringsArr, [in] long lType);
        [id(14), helpstring("method IsWinUpdDisabled")] HRESULT IsWinUpdDisabled([out, retval] VARIANT_BOOL *pfDisabled);
		[id(15), helpstring("method GetCatalogHTML")] HRESULT GetCatalogHTML([in] long puidCatalog, [in] BSTR bstrServerUrl, [in] long platformId, [in] BSTR bstrBrowserLangauge, [in] long lFilters, [in] long lFlags, [out, retval] VARIANT *pCatalogHTML);
        [id(16), helpstring("method IsReady")] HRESULT IsReady([out, retval] VARIANT_BOOL* pbYes);
        [id(17), helpstring("method FixCompatRollbackKey")] HRESULT FixCompatRollbackKey([out, retval] VARIANT_BOOL *pbRegModified);
        [id(18), helpstring("method GetContentURL")] HRESULT GetContentURL([out, retval] VARIANT* pURL);
		[id(19), helpstring("method GetReadThisPage")] HRESULT GetReadThisPage([in] long puid);
		[id(20), helpstring("method GetPrintAllPage")] HRESULT GetPrintAllPage([out, retval] VARIANT* pURL);
	};
[
	uuid(CEBC954F-58AF-11D2-A30A-00A0C903492B),
	version(1.0),
	helpstring("WUV3IS 1.0 Type Library")
]

library WUV3ISLib
{
	importlib("stdole2.tlb");

	[
		uuid(CEBC955E-58AF-11D2-A30A-00A0C903492B),
		helpstring("Windows Update Engine")
	]
	coclass CV3
	{
		[default] interface ICV3;
	};
};
